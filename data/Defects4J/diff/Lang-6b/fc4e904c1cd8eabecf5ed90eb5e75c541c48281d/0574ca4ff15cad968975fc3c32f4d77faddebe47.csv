is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,2,* Licensed to the Apache Software Foundation (ASF) under one
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,3,* or more contributor license agreements.  See the NOTICE file
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,4,* distributed with this work for additional information
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,5,* regarding copyright ownership.  The ASF licenses this file
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,6,"* to you under the Apache License, Version 2.0 (the"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,7,"* ""License""); you may not use this file except in compliance"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,8,* with the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,10,* http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,12,"* Unless required by applicable law or agreed to in writing,"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,13,* software distributed under the License is distributed on an
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,14,"* ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,15,"* KIND, either express or implied.  See the License for the"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,16,* specific language governing permissions and limitations
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,17,* under the License.
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,19,package org.apache.commons.lang3;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,21,import java.lang.IllegalArgumentException;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,22,import java.lang.Long;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,26,* <p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,27,"* Static methods to convert a type into another, with endianness and bit ordering awareness."
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,28,* </p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,29,* <p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,30,* The methods names follow a naming rule:
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,31,* </p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,33,* <pre>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,34,* &ltsource type&gt[source endianness][source bit ordering]To&ltdestination type&gt[destination endianness][destination bit ordering]
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,35,* Source/Destination type fields: either of the following. An 's' added at the end indicate an array
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,36,"*  - ""bool"""
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,37,"*  - ""byte"""
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,38,"*  - ""int"""
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,39,"*  - ""long"""
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,40,"*  - ""Hex"": a String containing hexadecimal digits"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,41,"*  - ""HexDigit"": a Char containing a hexadecimal digit"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,42,"* Endianness field: little endian is the default, in this case the field is absent. In case of big endian, the field is ""Be""."
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,43,"* Bit ordering: Lsb0 is the default, in this case the field is absent. In case of Msb0, the field is ""M0""."
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,45,* Example: intBeM0ToHex convert an int with big endian byte order and Msb0 bit order into its hexadecimal string representation
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,46,* </pre>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,47,* <p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,48,"* Most of the methods provide only default encoding for destination, this limits the number of"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,49,"* ways to do one thing. Unless you are dealing with data from/to outside of the JVM platform,"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,50,"* you should not need to use ""Be"" and ""M0"" methods."
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,51,* </p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,52,* <p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,53,"* Development status: work on going, only a part of the little endian, Lsb0 methods implemented"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,54,* so far.
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,55,* </p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,57,* @since Lang 3.2
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,58,* @version $Id$
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,61,public class Conversion {
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,63,* <p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,64,* Converts a hexadecimal digit into an int using the default (Lsb0) bit ordering.
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,65,* </p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,66,* <p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,67,* '1' is converted to 1
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,68,* </p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,70,* @param hexDigit the hexadecimal digit to convert
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,71,* @return an int equals to <code>hexDigit</code>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,73,public static int hexDigitToInt(char hexDigit) {
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,74,switch (hexDigit) {
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,75,case '0':
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,76,return 0;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,77,case '1':
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,78,return 1;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,79,case '2':
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,80,return 2;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,81,case '3':
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,82,return 3;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,83,case '4':
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,84,return 4;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,85,case '5':
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,86,return 5;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,87,case '6':
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,88,return 6;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,89,case '7':
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,90,return 7;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,91,case '8':
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,92,return 8;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,93,case '9':
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,94,return 9;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,95,case 'a':// fall through
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,96,case 'A':
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,97,return 10;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,98,case 'b':// fall through
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,99,case 'B':
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,100,return 11;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,101,case 'c':// fall through
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,102,case 'C':
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,103,return 12;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,104,case 'd':// fall through
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,105,case 'D':
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,106,return 13;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,107,case 'e':// fall through
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,108,case 'E':
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,109,return 14;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,110,case 'f':// fall through
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,111,case 'F':
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,112,return 15;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,113,default:
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,114,"throw new IllegalArgumentException(""Cannot interpret '"""
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,115,+ hexDigit
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,116,"+ ""' as a hexadecimal digit"");"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,121,* <p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,122,* Converts a hexadecimal digit into an int using the Msb0 bit ordering.
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,123,* </p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,124,* <p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,125,* '1' is converted to 8
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,126,* </p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,128,* @param hexDigit the hexadecimal digit to convert
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,129,* @return an int equals to <code>hexDigit</code>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,131,public static int hexDigitM0ToInt(char hexDigit) {
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,132,switch (hexDigit) {
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,133,case '0':
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,134,return 0x0;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,135,case '1':
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,136,return 0x8;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,137,case '2':
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,138,return 0x4;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,139,case '3':
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,140,return 0xC;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,141,case '4':
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,142,return 0x2;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,143,case '5':
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,144,return 0xA;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,145,case '6':
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,146,return 0x6;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,147,case '7':
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,148,return 0xE;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,149,case '8':
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,150,return 0x1;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,151,case '9':
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,152,return 0x9;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,153,case 'a':// fall through
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,154,case 'A':
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,155,return 0x5;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,156,case 'b':// fall through
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,157,case 'B':
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,158,return 0xD;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,159,case 'c':// fall through
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,160,case 'C':
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,161,return 0x3;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,162,case 'd':// fall through
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,163,case 'D':
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,164,return 0xB;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,165,case 'e':// fall through
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,166,case 'E':
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,167,return 0x7;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,168,case 'f':// fall through
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,169,case 'F':
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,170,return 0xF;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,171,default:
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,172,"throw new IllegalArgumentException(""Cannot interpret '"""
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,173,+ hexDigit
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,174,"+ ""' as a hexadecimal digit"");"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,179,* <p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,180,* Converts a hexadecimal digit into binary using the default (Lsb0) bit ordering.
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,181,* </p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,182,* <p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,183,"* '1' is converted as follow: (1, 0, 0, 0)"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,184,* </p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,186,* @param hexDigit the hexadecimal digit to convert
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,187,* @return a boolean array with the binary representation of <code>hexDigit</code>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,189,public static boolean[] hexDigitToBools(char hexDigit) {
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,190,switch (hexDigit) {
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,191,case '0':
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,192,"return new boolean[]{false, false, false, false};"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,193,case '1':
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,194,"return new boolean[]{true, false, false, false};"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,195,case '2':
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,196,"return new boolean[]{false, true, false, false};"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,197,case '3':
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,198,"return new boolean[]{true, true, false, false};"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,199,case '4':
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,200,"return new boolean[]{false, false, true, false};"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,201,case '5':
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,202,"return new boolean[]{true, false, true, false};"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,203,case '6':
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,204,"return new boolean[]{false, true, true, false};"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,205,case '7':
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,206,"return new boolean[]{true, true, true, false};"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,207,case '8':
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,208,"return new boolean[]{false, false, false, true};"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,209,case '9':
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,210,"return new boolean[]{true, false, false, true};"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,211,case 'a':// fall through
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,212,case 'A':
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,213,"return new boolean[]{false, true, false, true};"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,214,case 'b':// fall through
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,215,case 'B':
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,216,"return new boolean[]{true, true, false, true};"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,217,case 'c':// fall through
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,218,case 'C':
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,219,"return new boolean[]{false, false, true, true};"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,220,case 'd':// fall through
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,221,case 'D':
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,222,"return new boolean[]{true, false, true, true};"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,223,case 'e':// fall through
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,224,case 'E':
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,225,"return new boolean[]{false, true, true, true};"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,226,case 'f':// fall through
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,227,case 'F':
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,228,"return new boolean[]{true, true, true, true};"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,229,default:
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,230,"throw new IllegalArgumentException(""Cannot interpret '"""
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,231,+ hexDigit
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,232,"+ ""' as a hexadecimal digit"");"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,237,* <p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,238,* Converts a hexadecimal digit into binary using the Msb0 bit ordering.
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,239,* </p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,240,* <p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,241,"* '1' is converted as follow: (0, 0, 0, 1)"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,242,* </p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,244,* @param hexDigit the hexadecimal digit to convert
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,245,* @return a boolean array with the binary representation of <code>hexDigit</code>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,247,public static boolean[] hexDigitM0ToBools(char hexDigit) {
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,248,switch (hexDigit) {
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,249,case '0':
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,250,"return new boolean[]{false, false, false, false};"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,251,case '1':
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,252,"return new boolean[]{false, false, false, true};"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,253,case '2':
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,254,"return new boolean[]{false, false, true, false};"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,255,case '3':
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,256,"return new boolean[]{false, false, true, true};"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,257,case '4':
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,258,"return new boolean[]{false, true, false, false};"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,259,case '5':
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,260,"return new boolean[]{false, true, false, true};"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,261,case '6':
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,262,"return new boolean[]{false, true, true, false};"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,263,case '7':
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,264,"return new boolean[]{false, true, true, true};"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,265,case '8':
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,266,"return new boolean[]{true, false, false, false};"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,267,case '9':
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,268,"return new boolean[]{true, false, false, true};"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,269,case 'a':// fall through
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,270,case 'A':
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,271,"return new boolean[]{true, false, true, false};"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,272,case 'b':// fall through
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,273,case 'B':
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,274,"return new boolean[]{true, false, true, true};"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,275,case 'c':// fall through
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,276,case 'C':
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,277,"return new boolean[]{true, true, false, false};"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,278,case 'd':// fall through
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,279,case 'D':
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,280,"return new boolean[]{true, true, false, true};"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,281,case 'e':// fall through
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,282,case 'E':
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,283,"return new boolean[]{true, true, true, false};"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,284,case 'f':// fall through
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,285,case 'F':
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,286,"return new boolean[]{true, true, true, true};"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,287,default:
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,288,"throw new IllegalArgumentException(""Cannot interpret '"""
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,289,+ hexDigit
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,290,"+ ""' as a hexadecimal digit"");"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,295,* <p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,296,* Converts a boolean array to a hexadecimal digit using the default (Lsb0) bit ordering.
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,297,* </p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,298,* <p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,299,"* (1, 0, 0, 0) is converted as follow: '1'"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,300,* </p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,302,* @param src the boolean array to convert
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,303,* @return a hexadecimal digit representing the selected bits
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,305,public static char boolsToHexDigit(boolean[] src) {
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,306,"return boolsToHexDigit(src, 0);"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,310,* <p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,311,* Converts a boolean array to a hexadecimal digit using the default (Lsb0) bit ordering.
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,312,* </p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,313,* <p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,314,"* (1, 0, 0, 0) is converted as follow: '1'"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,315,* </p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,317,* @param src the boolean array to convert
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,318,* @param srcPos the position of the lsb to start the conversion
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,319,* @return a hexadecimal digit representing the selected bits
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,321,"public static char boolsToHexDigit(boolean[] src, int srcPos) {"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,322,if (src.length > srcPos + 3 && src[srcPos + 3]) {
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,323,if (src.length > srcPos + 2 && src[srcPos + 2]) {
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,324,if (src.length > srcPos + 1 && src[srcPos + 1]) {
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,325,if (src[srcPos]) return 'F';
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,326,else return 'E';
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,327,} else {
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,328,if (src[srcPos]) return 'D';
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,329,else return 'C';
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,331,} else {
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,332,if (src.length > srcPos + 1 && src[srcPos + 1]) {
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,333,if (src[srcPos]) return 'B';
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,334,else return 'A';
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,335,} else {
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,336,if (src[srcPos]) return '9';
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,337,else return '8';
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,340,} else {
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,341,if (src.length > srcPos + 2 && src[srcPos + 2]) {
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,342,if (src.length > srcPos + 1 && src[srcPos + 1]) {
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,343,if (src[srcPos]) return '7';
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,344,else return '6';
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,345,} else {
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,346,if (src[srcPos]) return '5';
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,347,else return '4';
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,349,} else {
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,350,if (src.length > srcPos + 1 && src[srcPos + 1]) {
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,351,if (src[srcPos]) return '3';
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,352,else return '2';
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,353,} else {
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,354,if (src[srcPos]) return '1';
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,355,else return '0';
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,362,* <p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,363,* Converts a boolean array to a hexadecimal digit using the Msb0 bit ordering.
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,364,* </p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,365,* <p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,366,"* (1, 0, 0, 0) is converted as follow: '8'"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,367,* </p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,369,* @param src the boolean array to convert
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,370,* @return a hexadecimal digit representing the selected bits
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,371,* @warning src.length must be >= 4.
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,373,public static char boolsToHexDigitM0_4bits(boolean[] src) {
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,374,"return boolsToHexDigitM0_4bits(src, 0);"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,378,* <p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,379,* Converts a boolean array to a hexadecimal digit using the Msb0 bit ordering.
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,380,* </p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,381,* <p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,382,"* (1, 0, 0, 0) is converted as follow: '8' (1,0,0,1,1,0,1,0) with srcPos = 3 is converted"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,383,* to 'D'
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,384,* </p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,386,* @param src the boolean array to convert
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,387,* @param srcPos the position of the lsb to start the conversion
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,388,* @return a hexadecimal digit representing the selected bits
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,389,* @warning src.length must be 8 at most.
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,390,* @warning srcPos+4 must be <= src.length.
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,392,"public static char boolsToHexDigitM0_4bits(boolean[] src, int srcPos) {"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,393,if (src.length > 8)
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,394,"throw new IllegalArgumentException(""src.length>8: src.length="" + src.length);"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,395,if (src.length - srcPos < 4)
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,396,"throw new IllegalArgumentException(""src.length-srcPos<4: src.length="""
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,397,+ src.length
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,398,"+ "", srcPos="""
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,399,+ srcPos);
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,400,if (src[srcPos + 3]) {
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,401,if (src[srcPos + 2]) {
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,402,if (src[srcPos + 1]) {
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,403,if (src[srcPos]) return 'F';
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,404,else return '7';
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,405,} else {
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,406,if (src[srcPos]) return 'B';
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,407,else return '3';
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,409,} else {
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,410,if (src[srcPos + 1]) {
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,411,if (src[srcPos]) return 'D';
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,412,else return '5';
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,413,} else {
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,414,if (src[srcPos]) return '9';
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,415,else return '1';
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,418,} else {
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,419,if (src[srcPos + 2]) {
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,420,if (src[srcPos + 1]) {
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,421,if (src[srcPos]) return 'E';
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,422,else return '6';
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,423,} else {
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,424,if (src[srcPos]) return 'A';
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,425,else return '2';
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,427,} else {
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,428,if (src[srcPos + 1]) {
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,429,if (src[srcPos]) return 'C';
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,430,else return '4';
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,431,} else {
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,432,if (src[srcPos]) return '8';
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,433,else return '0';
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,440,* <p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,441,* Converts the first 4 bits of a boolean array in big endian Msb0 bit ordering to a
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,442,* hexadecimal digit.
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,443,* </p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,444,* <p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,445,"* (1, 0, 0, 0) is converted as follow: '8' (1,0,0,0,0,0,0,0, 0,0,0,0,0,1,0,0) is converted"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,446,* to '4'
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,447,* </p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,449,* @param src the boolean array to convert
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,450,* @return a hexadecimal digit representing the selected bits
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,452,public static char boolsBeM0ToHexDigit(boolean[] src) {
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,453,"return boolsBeM0ToHexDigit(src, 0);"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,457,* <p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,458,* Converta a part of a boolean array in big endian Msb0 bit ordering to a hexadecimal
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,459,* digit.
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,460,* </p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,461,* <p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,462,"* (1, 0, 0, 0) with srcPos = 0 is converted as follow: '8' (1,0,0,0,0,0,0,0,"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,463,"* 0,0,0,1,0,1,0,0) with srcPos = 2 is converted to '5'"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,464,* </p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,466,* @param src the boolean array to convert
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,467,* @param srcPos the position of the lsb to start the conversion
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,468,* @return a hexadecimal digit representing the selected bits
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,470,"public static char boolsBeM0ToHexDigit(boolean[] src, int srcPos) {"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,471,int beSrcPos = src.length - 1 - srcPos;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,472,"int srcLen = Math.min(4, beSrcPos + 1);"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,473,boolean[] paddedSrc = new boolean[4];
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,474,"System.arraycopy(src, beSrcPos + 1 - srcLen, paddedSrc, 4 - srcLen, srcLen);"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,475,src = paddedSrc;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,476,srcPos = 0;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,477,if (src[srcPos]) {
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,478,if (src.length > srcPos + 1 && src[srcPos + 1]) {
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,479,if (src.length > srcPos + 2 && src[srcPos + 2]) {
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,480,if (src.length > srcPos + 3 && src[srcPos + 3]) return 'F';
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,481,else return 'E';
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,482,} else {
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,483,if (src.length > srcPos + 3 && src[srcPos + 3]) return 'D';
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,484,else return 'C';
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,486,} else {
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,487,if (src.length > srcPos + 2 && src[srcPos + 2]) {
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,488,if (src.length > srcPos + 3 && src[srcPos + 3]) return 'B';
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,489,else return 'A';
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,490,} else {
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,491,if (src.length > srcPos + 3 && src[srcPos + 3]) return '9';
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,492,else return '8';
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,495,} else {
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,496,if (src.length > srcPos + 1 && src[srcPos + 1]) {
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,497,if (src.length > srcPos + 2 && src[srcPos + 2]) {
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,498,if (src.length > srcPos + 3 && src[srcPos + 3]) return '7';
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,499,else return '6';
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,500,} else {
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,501,if (src.length > srcPos + 3 && src[srcPos + 3]) return '5';
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,502,else return '4';
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,504,} else {
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,505,if (src.length > srcPos + 2 && src[srcPos + 2]) {
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,506,if (src.length > srcPos + 3 && src[srcPos + 3]) return '3';
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,507,else return '2';
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,508,} else {
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,509,if (src.length > srcPos + 3 && src[srcPos + 3]) return '1';
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,510,else return '0';
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,517,* <p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,518,* Converts the 4 lsb of an int to a hexadecimal digit.
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,519,* </p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,520,* <p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,521,* 0 returns '0'
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,522,* </p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,523,* <p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,524,* 1 returns '1'
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,525,* </p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,526,* <p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,527,* 10 returns 'A' and so on...
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,528,* </p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,530,"* @param nibble the int to convert, value outside of the range [0:15] are not allowed."
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,531,* @return a hexadecimal digit representing the 4 lsb of <code>nibble</code>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,533,public static char intToHexDigit(int nibble) {
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,534,switch (nibble) {
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,535,case 0x0:
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,536,return '0';
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,537,case 0x1:
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,538,return '1';
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,539,case 0x2:
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,540,return '2';
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,541,case 0x3:
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,542,return '3';
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,543,case 0x4:
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,544,return '4';
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,545,case 0x5:
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,546,return '5';
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,547,case 0x6:
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,548,return '6';
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,549,case 0x7:
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,550,return '7';
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,551,case 0x8:
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,552,return '8';
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,553,case 0x9:
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,554,return '9';
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,555,case 0xA:
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,556,return 'A';
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,557,case 0xB:
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,558,return 'B';
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,559,case 0xC:
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,560,return 'C';
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,561,case 0xD:
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,562,return 'D';
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,563,case 0xE:
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,564,return 'E';
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,565,case 0xF:
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,566,return 'F';
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,567,default:
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,568,"throw new java.lang.IllegalArgumentException(""nibble value not between 0 and 15: """
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,569,+ nibble);
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,574,* <p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,575,* Converts the 4 lsb of an int to a hexadecimal digit encoded using the Msb0 bit ordering.
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,576,* </p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,577,* <p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,578,* 0 returns '0'
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,579,* </p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,580,* <p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,581,* 1 returns '8'
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,582,* </p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,583,* <p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,584,* 10 returns '5' and so on...
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,585,* </p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,587,"* @param nibble the int to convert, value outside of the range [0:15] are not allowed."
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,588,* @return a hexadecimal digit representing the 4 lsb of <code>nibble</code>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,590,public static char intToHexDigitM0(int nibble) {
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,591,switch (nibble) {
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,592,case 0x0:
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,593,return '0';
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,594,case 0x1:
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,595,return '8';
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,596,case 0x2:
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,597,return '4';
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,598,case 0x3:
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,599,return 'C';
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,600,case 0x4:
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,601,return '2';
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,602,case 0x5:
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,603,return 'A';
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,604,case 0x6:
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,605,return '6';
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,606,case 0x7:
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,607,return 'E';
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,608,case 0x8:
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,609,return '1';
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,610,case 0x9:
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,611,return '9';
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,612,case 0xA:
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,613,return '5';
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,614,case 0xB:
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,615,return 'D';
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,616,case 0xC:
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,617,return '3';
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,618,case 0xD:
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,619,return 'B';
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,620,case 0xE:
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,621,return '7';
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,622,case 0xF:
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,623,return 'F';
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,624,default:
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,625,"throw new java.lang.IllegalArgumentException(""nibble value not between 0 and 15: """
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,626,+ nibble);
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,631,* <p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,632,"* Converts an array of int into a long using the default (little endian, Lsb0) byte and bit"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,633,* ordering.
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,634,* </p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,636,* @param src the int array to convert
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,637,"* @param srcPos the position in <code>src</code>, in int unit, from where to start the"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,638,*            conversion
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,639,* @param dstInit initial value of the destination long
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,640,"* @param dstPos the position of the lsb, in bits, in the result long"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,641,* @param nInts the number of int to convert
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,642,* @return a long containing the selected bits
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,644,"public static long intsToLong(int[] src, int srcPos, long dstInit, int dstPos, int nInts) {"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,645,if (0 == nInts) return dstInit;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,646,long out = dstInit;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,647,int shift = 0;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,648,for (int i = 0; i < nInts; i++ ) {
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,649,shift = i * 32 + dstPos;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,650,long bits = ((0xffffffffL & src[i + srcPos]) << shift);
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,651,long mask = (0xffffffffL << shift);
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,652,out = ((out & ~mask) | bits);
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,654,if (shift >= 64)
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,655,throw new IllegalArgumentException(
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,656,"""(nInts-1)*32+dstPos is greather or equal to than 64"");"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,657,return out;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,661,* <p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,662,"* Converts an array of short into a long using the default (little endian, Lsb0) byte and"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,663,* bit ordering.
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,664,* </p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,666,* @param src the int array to convert
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,667,"* @param srcPos the position in <code>src</code>, in short unit, from where to start the"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,668,*            conversion
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,669,* @param dstInit initial value of the destination long
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,670,"* @param dstPos the position of the lsb, in bits, in the result long"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,671,* @param nShorts the number of short to convert
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,672,* @return a long containing the selected bits
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,674,"public static long shortsToLong(short[] src, int srcPos, long dstInit, int dstPos,"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,675,int nShorts) {
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,676,if (0 == nShorts) return dstInit;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,677,long out = dstInit;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,678,int shift = 0;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,679,for (int i = 0; i < nShorts; i++ ) {
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,680,shift = i * 16 + dstPos;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,681,long bits = ((0xffffL & src[i + srcPos]) << shift);
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,682,long mask = (0xffffL << shift);
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,683,out = ((out & ~mask) | bits);
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,685,if (shift >= 64)
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,686,throw new IllegalArgumentException(
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,687,"""(nShorts-1)*16+dstPos is greather or equal to than 64"");"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,688,return out;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,692,* <p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,693,"* Converts an array of short into a int using the default (little endian, Lsb0) byte and"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,694,* bit ordering.
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,695,* </p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,697,* @param src the int array to convert
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,698,"* @param srcPos the position in <code>src</code>, in short unit, from where to start the"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,699,*            conversion
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,700,* @param dstInit initial value of the destination int
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,701,"* @param dstPos the position of the lsb, in bits, in the result int"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,702,* @param nShorts the number of short to convert
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,703,* @return a int containing the selected bits
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,705,"public static int shortsToInt(short[] src, int srcPos, int dstInit, int dstPos, int nShorts) {"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,706,if (0 == nShorts) return dstInit;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,707,int out = dstInit;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,708,int shift = 0;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,709,for (int i = 0; i < nShorts; i++ ) {
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,710,shift = i * 16 + dstPos;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,711,int bits = ((0xffff & src[i + srcPos]) << shift);
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,712,int mask = (0xffff << shift);
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,713,out = ((out & ~mask) | bits);
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,715,if (shift >= 32)
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,716,throw new IllegalArgumentException(
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,717,"""(nShorts-1)*16+dstPos is greather or equal to than 32"");"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,718,return out;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,722,* <p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,723,"* Converts an array of byte into a long using the default (little endian, Lsb0) byte and"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,724,* bit ordering.
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,725,* </p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,727,* @param src the int array to convert
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,728,"* @param srcPos the position in <code>src</code>, in byte unit, from where to start the"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,729,*            conversion
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,730,* @param dstInit initial value of the destination long
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,731,"* @param dstPos the position of the lsb, in bits, in the result long"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,732,* @param nBytes the number of byte to convert
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,733,* @return a long containing the selected bits
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,735,"public static long bytesToLong(byte[] src, int srcPos, long dstInit, int dstPos, int nBytes) {"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,736,if (0 == nBytes) return dstInit;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,737,long out = dstInit;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,738,int shift = 0;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,739,for (int i = 0; i < nBytes; i++ ) {
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,740,shift = i * 8 + dstPos;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,741,long bits = ((0xffL & src[i + srcPos]) << shift);
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,742,long mask = (0xffL << shift);
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,743,out = ((out & ~mask) | bits);
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,745,if (shift >= 64)
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,746,throw new IllegalArgumentException(
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,747,"""(nBytes-1)*8+dstPos is greather or equal to than 64"");"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,748,return out;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,752,* <p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,753,"* Converts an array of byte into a int using the default (little endian, Lsb0) byte and bit"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,754,* ordering.
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,755,* </p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,757,* @param src the int array to convert
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,758,"* @param srcPos the position in <code>src</code>, in byte unit, from where to start the"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,759,*            conversion
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,760,* @param dstInit initial value of the destination int
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,761,"* @param dstPos the position of the lsb, in bits, in the result int"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,762,* @param nBytes the number of byte to convert
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,763,* @return a int containing the selected bits
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,765,"public static int bytesToInt(byte[] src, int srcPos, int dstInit, int dstPos, int nBytes) {"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,766,if (0 == nBytes) return dstInit;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,767,int out = dstInit;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,768,int shift = 0;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,769,for (int i = 0; i < nBytes; i++ ) {
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,770,shift = i * 8 + dstPos;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,771,int bits = ((0xff & src[i + srcPos]) << shift);
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,772,int mask = (0xff << shift);
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,773,out = ((out & ~mask) | bits);
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,775,if (shift >= 32)
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,776,throw new IllegalArgumentException(
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,777,"""(nBytes-1)*8+dstPos is greather or equal to than 32"");"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,778,return out;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,782,* <p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,783,"* Converts an array of byte into a short using the default (little endian, Lsb0) byte and"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,784,* bit ordering.
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,785,* </p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,787,* @param src the int array to convert
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,788,"* @param srcPos the position in <code>src</code>, in byte unit, from where to start the"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,789,*            conversion
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,790,* @param dstInit initial value of the destination short
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,791,"* @param dstPos the position of the lsb, in bits, in the result short"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,792,* @param nBytes the number of byte to convert
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,793,* @return a short containing the selected bits
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,795,"public static short bytesToShort(byte[] src, int srcPos, short dstInit, int dstPos,"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,796,int nBytes) {
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,797,if (0 == nBytes) return dstInit;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,798,short out = dstInit;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,799,int shift = 0;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,800,for (int i = 0; i < nBytes; i++ ) {
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,801,shift = i * 8 + dstPos;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,802,short bits = (short)(((short)(0xff & src[i + srcPos])) << shift);
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,803,short mask = (short)(((short)0xff) << shift);
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,804,out = (short)((out & ~mask) | bits);
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,806,if (shift >= 16)
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,807,throw new IllegalArgumentException(
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,808,"""(nBytes-1)*8+dstPos is greather or equal to than 16"");"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,809,return out;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,813,* <p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,814,"* Converts an array of Char into a long using the default (little endian, Lsb0) byte and"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,815,* bit ordering.
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,816,* </p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,818,* @param src the int array to convert
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,819,"* @param srcPos the position in <code>src</code>, in Char unit, from where to start the"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,820,*            conversion
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,821,* @param dstInit initial value of the destination long
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,822,"* @param dstPos the position of the lsb, in bits, in the result long"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,823,* @param nHexs the number of Char to convert
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,824,* @return a long containing the selected bits
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,826,"public static long hexsToLong(String src, int srcPos, long dstInit, int dstPos, int nHexs) {"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,827,if (0 == nHexs) return dstInit;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,828,long out = dstInit;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,829,int shift = 0;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,830,for (int i = 0; i < nHexs; i++ ) {
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,831,shift = i * 4 + dstPos;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,832,long bits = ((0xfL & hexDigitToInt(src.charAt(i + srcPos))) << shift);
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,833,long mask = (0xfL << shift);
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,834,out = ((out & ~mask) | bits);
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,836,if (shift >= 64)
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,837,throw new IllegalArgumentException(
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,838,"""(nHexs-1)*4+dstPos is greather or equal to than 64"");"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,839,return out;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,843,* <p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,844,"* Converts an array of Char into a int using the default (little endian, Lsb0) byte and bit"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,845,* ordering.
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,846,* </p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,848,* @param src the int array to convert
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,849,"* @param srcPos the position in <code>src</code>, in Char unit, from where to start the"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,850,*            conversion
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,851,* @param dstInit initial value of the destination int
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,852,"* @param dstPos the position of the lsb, in bits, in the result int"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,853,* @param nHexs the number of Char to convert
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,854,* @return a int containing the selected bits
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,856,"public static int hexsToInt(String src, int srcPos, int dstInit, int dstPos, int nHexs) {"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,857,if (0 == nHexs) return dstInit;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,858,int out = dstInit;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,859,int shift = 0;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,860,for (int i = 0; i < nHexs; i++ ) {
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,861,shift = i * 4 + dstPos;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,862,int bits = ((0xf & hexDigitToInt(src.charAt(i + srcPos))) << shift);
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,863,int mask = (0xf << shift);
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,864,out = ((out & ~mask) | bits);
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,866,if (shift >= 32)
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,867,throw new IllegalArgumentException(
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,868,"""(nHexs-1)*4+dstPos is greather or equal to than 32"");"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,869,return out;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,873,* <p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,874,"* Converts an array of Char into a short using the default (little endian, Lsb0) byte and"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,875,* bit ordering.
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,876,* </p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,878,* @param src the int array to convert
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,879,"* @param srcPos the position in <code>src</code>, in Char unit, from where to start the"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,880,*            conversion
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,881,* @param dstInit initial value of the destination short
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,882,"* @param dstPos the position of the lsb, in bits, in the result short"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,883,* @param nHexs the number of Char to convert
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,884,* @return a short containing the selected bits
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,886,"public static short hexsToShort(String src, int srcPos, short dstInit, int dstPos, int nHexs) {"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,887,if (0 == nHexs) return dstInit;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,888,short out = dstInit;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,889,int shift = 0;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,890,for (int i = 0; i < nHexs; i++ ) {
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,891,shift = i * 4 + dstPos;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,892,short bits = (short)(((short)(0xf & hexDigitToInt(src.charAt(i + srcPos)))) << shift);
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,893,short mask = (short)(((short)0xf) << shift);
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,894,out = (short)((out & ~mask) | bits);
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,896,if (shift >= 16)
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,897,throw new IllegalArgumentException(
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,898,"""(nHexs-1)*4+dstPos is greather or equal to than 16"");"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,899,return out;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,903,* <p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,904,"* Converts an array of Char into a byte using the default (little endian, Lsb0) byte and"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,905,* bit ordering.
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,906,* </p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,908,* @param src the int array to convert
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,909,"* @param srcPos the position in <code>src</code>, in Char unit, from where to start the"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,910,*            conversion
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,911,* @param dstInit initial value of the destination byte
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,912,"* @param dstPos the position of the lsb, in bits, in the result byte"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,913,* @param nHexs the number of Char to convert
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,914,* @return a byte containing the selected bits
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,916,"public static byte hexsToByte(String src, int srcPos, byte dstInit, int dstPos, int nHexs) {"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,917,if (0 == nHexs) return dstInit;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,918,byte out = dstInit;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,919,int shift = 0;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,920,for (int i = 0; i < nHexs; i++ ) {
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,921,shift = i * 4 + dstPos;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,922,byte bits = (byte)(((byte)(0xf & hexDigitToInt(src.charAt(i + srcPos)))) << shift);
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,923,byte mask = (byte)(((byte)0xf) << shift);
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,924,out = (byte)((out & ~mask) | bits);
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,926,if (shift >= 8)
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,927,throw new IllegalArgumentException(
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,928,"""(nHexs-1)*4+dstPos is greather or equal to than 8"");"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,929,return out;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,933,* <p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,934,"* Converts an array of boolean into a long using the default (little endian, Lsb0) byte and"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,935,* bit ordering.
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,936,* </p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,938,* @param src the int array to convert
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,939,"* @param srcPos the position in <code>src</code>, in boolean unit, from where to start the"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,940,*            conversion
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,941,* @param dstInit initial value of the destination long
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,942,"* @param dstPos the position of the lsb, in bits, in the result long"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,943,* @param nBools the number of boolean to convert
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,944,* @return a long containing the selected bits
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,946,"public static long boolsToLong(boolean[] src, int srcPos, long dstInit, int dstPos,"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,947,int nBools) {
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,948,if (0 == nBools) return dstInit;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,949,long out = dstInit;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,950,int shift = 0;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,951,for (int i = 0; i < nBools; i++ ) {
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,952,shift = i * 1 + dstPos;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,953,long bits = ((0x1L & ((src[i + srcPos]) ? 1 : 0)) << shift);
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,954,long mask = (0x1L << shift);
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,955,out = ((out & ~mask) | bits);
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,957,if (shift >= 64)
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,958,throw new IllegalArgumentException(
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,959,"""(nBools-1)*1+dstPos is greather or equal to than 64"");"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,960,return out;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,964,* <p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,965,"* Converts an array of boolean into a int using the default (little endian, Lsb0) byte and"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,966,* bit ordering.
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,967,* </p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,969,* @param src the int array to convert
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,970,"* @param srcPos the position in <code>src</code>, in boolean unit, from where to start the"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,971,*            conversion
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,972,* @param dstInit initial value of the destination int
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,973,"* @param dstPos the position of the lsb, in bits, in the result int"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,974,* @param nBools the number of boolean to convert
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,975,* @return a int containing the selected bits
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,977,"public static int boolsToInt(boolean[] src, int srcPos, int dstInit, int dstPos, int nBools) {"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,978,if (0 == nBools) return dstInit;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,979,int out = dstInit;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,980,int shift = 0;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,981,for (int i = 0; i < nBools; i++ ) {
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,982,shift = i * 1 + dstPos;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,983,int bits = ((0x1 & ((src[i + srcPos]) ? 1 : 0)) << shift);
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,984,int mask = (0x1 << shift);
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,985,out = ((out & ~mask) | bits);
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,987,if (shift >= 32)
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,988,throw new IllegalArgumentException(
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,989,"""(nBools-1)*1+dstPos is greather or equal to than 32"");"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,990,return out;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,994,* <p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,995,"* Converts an array of boolean into a short using the default (little endian, Lsb0) byte"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,996,* and bit ordering.
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,997,* </p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,999,* @param src the int array to convert
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1000,"* @param srcPos the position in <code>src</code>, in boolean unit, from where to start the"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1001,*            conversion
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1002,* @param dstInit initial value of the destination short
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1003,"* @param dstPos the position of the lsb, in bits, in the result short"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1004,* @param nBools the number of boolean to convert
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1005,* @return a short containing the selected bits
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1007,"public static short boolsToShort(boolean[] src, int srcPos, short dstInit, int dstPos,"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1008,int nBools) {
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1009,if (0 == nBools) return dstInit;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1010,short out = dstInit;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1011,int shift = 0;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1012,for (int i = 0; i < nBools; i++ ) {
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1013,shift = i * 1 + dstPos;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1014,short bits = (short)(((short)(0x1 & ((src[i + srcPos]) ? 1 : 0))) << shift);
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1015,short mask = (short)(((short)0x1) << shift);
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1016,out = (short)((out & ~mask) | bits);
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1018,if (shift >= 16)
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1019,throw new IllegalArgumentException(
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1020,"""(nBools-1)*1+dstPos is greather or equal to than 16"");"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1021,return out;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1025,* <p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1026,"* Converts an array of boolean into a byte using the default (little endian, Lsb0) byte and"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1027,* bit ordering.
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1028,* </p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1030,* @param src the int array to convert
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1031,"* @param srcPos the position in <code>src</code>, in boolean unit, from where to start the"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1032,*            conversion
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1033,* @param dstInit initial value of the destination byte
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1034,"* @param dstPos the position of the lsb, in bits, in the result byte"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1035,* @param nBools the number of boolean to convert
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1036,* @return a byte containing the selected bits
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1038,"public static byte boolsToByte(boolean[] src, int srcPos, byte dstInit, int dstPos,"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1039,int nBools) {
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1040,if (0 == nBools) return dstInit;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1041,byte out = dstInit;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1042,int shift = 0;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1043,for (int i = 0; i < nBools; i++ ) {
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1044,shift = i * 1 + dstPos;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1045,byte bits = (byte)(((byte)(0x1 & ((src[i + srcPos]) ? 1 : 0))) << shift);
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1046,byte mask = (byte)(((byte)0x1) << shift);
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1047,out = (byte)((out & ~mask) | bits);
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1049,if (shift >= 8)
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1050,throw new IllegalArgumentException(
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1051,"""(nBools-1)*1+dstPos is greather or equal to than 8"");"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1052,return out;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1056,* <p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1057,"* Converts a long into an array of int using the default (little endian, Lsb0) byte and bit"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1058,* ordering.
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1059,* </p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1061,* @param src the long to convert
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1062,"* @param srcPos the position in <code>src</code>, in bits, from where to start the"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1063,*            conversion
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1064,* @param dst the destination array
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1065,* @param dstPos the position in <code>dst</code> where to copy the result
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1066,* @param nInts the number of int to copy to <code>dst</code>. must be smaller or equal to
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1067,*            the width of the input (from srcPos to msb)
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1068,* @return <code>dst</code>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1070,"public static int[] longToInts(long src, int srcPos, int[] dst, int dstPos, int nInts) {"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1071,if (0 == nInts) return dst;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1072,int shift = 0;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1073,assert ((nInts - 1) * 32 < 64 - srcPos);
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1074,for (int i = 0; i < nInts; i++ ) {
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1075,shift = i * 32 + srcPos;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1076,Long bits = (long)(0xffffffff & (src >> shift));
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1077,dst[dstPos + i] = bits.intValue();
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1079,return dst;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1083,* <p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1084,"* Converts a long into an array of short using the default (little endian, Lsb0) byte and"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1085,* bit ordering.
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1086,* </p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1088,* @param src the long to convert
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1089,"* @param srcPos the position in <code>src</code>, in bits, from where to start the"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1090,*            conversion
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1091,* @param dst the destination array
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1092,* @param dstPos the position in <code>dst</code> where to copy the result
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1093,* @param nShorts the number of short to copy to <code>dst</code>. must be smaller or equal
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1094,*            to the width of the input (from srcPos to msb)
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1095,* @return <code>dst</code>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1097,"public static short[] longToShorts(long src, int srcPos, short[] dst, int dstPos,"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1098,int nShorts) {
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1099,if (0 == nShorts) return dst;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1100,int shift = 0;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1101,assert ((nShorts - 1) * 16 < 64 - srcPos);
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1102,for (int i = 0; i < nShorts; i++ ) {
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1103,shift = i * 16 + srcPos;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1104,Long bits = (long)(0xffff & (src >> shift));
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1105,dst[dstPos + i] = bits.shortValue();
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1107,return dst;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1111,* <p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1112,"* Converts a int into an array of short using the default (little endian, Lsb0) byte and"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1113,* bit ordering.
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1114,* </p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1116,* @param src the int to convert
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1117,"* @param srcPos the position in <code>src</code>, in bits, from where to start the"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1118,*            conversion
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1119,* @param dst the destination array
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1120,* @param dstPos the position in <code>dst</code> where to copy the result
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1121,* @param nShorts the number of short to copy to <code>dst</code>. must be smaller or equal
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1122,*            to the width of the input (from srcPos to msb)
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1123,* @return <code>dst</code>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1125,"public static short[] intToShorts(int src, int srcPos, short[] dst, int dstPos, int nShorts) {"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1126,if (0 == nShorts) return dst;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1127,int shift = 0;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1128,assert ((nShorts - 1) * 16 < 32 - srcPos);
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1129,for (int i = 0; i < nShorts; i++ ) {
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1130,shift = i * 16 + srcPos;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1131,Integer bits = (int)(0xffff & (src >> shift));
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1132,dst[dstPos + i] = bits.shortValue();
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1134,return dst;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1138,* <p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1139,"* Converts a long into an array of byte using the default (little endian, Lsb0) byte and"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1140,* bit ordering.
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1141,* </p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1143,* @param src the long to convert
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1144,"* @param srcPos the position in <code>src</code>, in bits, from where to start the"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1145,*            conversion
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1146,* @param dst the destination array
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1147,* @param dstPos the position in <code>dst</code> where to copy the result
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1148,* @param nBytes the number of byte to copy to <code>dst</code>. must be smaller or equal to
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1149,*            the width of the input (from srcPos to msb)
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1150,* @return <code>dst</code>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1152,"public static byte[] longToBytes(long src, int srcPos, byte[] dst, int dstPos, int nBytes) {"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1153,if (0 == nBytes) return dst;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1154,int shift = 0;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1155,assert ((nBytes - 1) * 8 < 64 - srcPos);
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1156,for (int i = 0; i < nBytes; i++ ) {
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1157,shift = i * 8 + srcPos;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1158,Long bits = (long)(0xff & (src >> shift));
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1159,dst[dstPos + i] = bits.byteValue();
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1161,return dst;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1165,* <p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1166,"* Converts a int into an array of byte using the default (little endian, Lsb0) byte and bit"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1167,* ordering.
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1168,* </p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1170,* @param src the int to convert
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1171,"* @param srcPos the position in <code>src</code>, in bits, from where to start the"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1172,*            conversion
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1173,* @param dst the destination array
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1174,* @param dstPos the position in <code>dst</code> where to copy the result
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1175,* @param nBytes the number of byte to copy to <code>dst</code>. must be smaller or equal to
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1176,*            the width of the input (from srcPos to msb)
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1177,* @return <code>dst</code>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1179,"public static byte[] intToBytes(int src, int srcPos, byte[] dst, int dstPos, int nBytes) {"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1180,if (0 == nBytes) return dst;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1181,int shift = 0;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1182,assert ((nBytes - 1) * 8 < 32 - srcPos);
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1183,for (int i = 0; i < nBytes; i++ ) {
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1184,shift = i * 8 + srcPos;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1185,Integer bits = (int)(0xff & (src >> shift));
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1186,dst[dstPos + i] = bits.byteValue();
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1188,return dst;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1192,* <p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1193,"* Converts a short into an array of byte using the default (little endian, Lsb0) byte and"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1194,* bit ordering.
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1195,* </p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1197,* @param src the short to convert
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1198,"* @param srcPos the position in <code>src</code>, in bits, from where to start the"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1199,*            conversion
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1200,* @param dst the destination array
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1201,* @param dstPos the position in <code>dst</code> where to copy the result
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1202,* @param nBytes the number of byte to copy to <code>dst</code>. must be smaller or equal to
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1203,*            the width of the input (from srcPos to msb)
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1204,* @return <code>dst</code>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1206,"public static byte[] shortToBytes(short src, int srcPos, byte[] dst, int dstPos, int nBytes) {"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1207,if (0 == nBytes) return dst;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1208,int shift = 0;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1209,assert ((nBytes - 1) * 8 < 16 - srcPos);
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1210,for (int i = 0; i < nBytes; i++ ) {
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1211,shift = i * 8 + srcPos;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1212,Short bits = (short)(0xff & (src >> shift));
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1213,dst[dstPos + i] = bits.byteValue();
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1215,return dst;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1219,* <p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1220,"* Converts a long into an array of Char using the default (little endian, Lsb0) byte and"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1221,* bit ordering.
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1222,* </p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1224,* @param src the long to convert
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1225,"* @param srcPos the position in <code>src</code>, in bits, from where to start the"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1226,*            conversion
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1227,* @param dstInit the initial value for the result String
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1228,* @param dstPos the position in <code>dst</code> where to copy the result
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1229,* @param nHexs the number of Char to copy to <code>dst</code>. must be smaller or equal to
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1230,*            the width of the input (from srcPos to msb)
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1231,* @return <code>dst</code>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1233,"public static String longToHexs(long src, int srcPos, String dstInit, int dstPos, int nHexs) {"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1234,if (0 == nHexs) return dstInit;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1235,StringBuffer sb = new StringBuffer(dstInit);
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1236,int shift = 0;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1237,assert ((nHexs - 1) * 4 < 64 - srcPos);
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1238,for (int i = 0; i < nHexs; i++ ) {
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1239,shift = i * 4 + srcPos;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1240,int bits = (int)(0xF & (src >> shift));
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1241,"sb.setCharAt(dstPos + i, intToHexDigit(bits));"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1243,return sb.toString();
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1247,* <p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1248,"* Converts a int into an array of Char using the default (little endian, Lsb0) byte and bit"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1249,* ordering.
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1250,* </p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1252,* @param src the int to convert
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1253,"* @param srcPos the position in <code>src</code>, in bits, from where to start the"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1254,*            conversion
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1255,* @param dstInit the initial value for the result String
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1256,* @param dstPos the position in <code>dst</code> where to copy the result
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1257,* @param nHexs the number of Char to copy to <code>dst</code>. must be smaller or equal to
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1258,*            the width of the input (from srcPos to msb)
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1259,* @return <code>dst</code>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1261,"public static String intToHexs(int src, int srcPos, String dstInit, int dstPos, int nHexs) {"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1262,if (0 == nHexs) return dstInit;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1263,StringBuffer sb = new StringBuffer(dstInit);
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1264,int shift = 0;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1265,assert ((nHexs - 1) * 4 < 32 - srcPos);
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1266,for (int i = 0; i < nHexs; i++ ) {
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1267,shift = i * 4 + srcPos;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1268,int bits = 0xF & (src >> shift);
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1269,"sb.setCharAt(dstPos + i, intToHexDigit(bits));"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1271,return sb.toString();
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1275,* <p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1276,"* Converts a short into an array of Char using the default (little endian, Lsb0) byte and"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1277,* bit ordering.
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1278,* </p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1280,* @param src the short to convert
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1281,"* @param srcPos the position in <code>src</code>, in bits, from where to start the"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1282,*            conversion
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1283,* @param dstInit the initial value for the result String
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1284,* @param dstPos the position in <code>dst</code> where to copy the result
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1285,* @param nHexs the number of Char to copy to <code>dst</code>. must be smaller or equal to
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1286,*            the width of the input (from srcPos to msb)
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1287,* @return <code>dst</code>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1289,"public static String shortToHexs(short src, int srcPos, String dstInit, int dstPos,"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1290,int nHexs) {
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1291,if (0 == nHexs) return dstInit;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1292,StringBuffer sb = new StringBuffer(dstInit);
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1293,int shift = 0;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1294,assert ((nHexs - 1) * 4 < 16 - srcPos);
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1295,for (int i = 0; i < nHexs; i++ ) {
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1296,shift = i * 4 + srcPos;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1297,int bits = 0xF & (src >> shift);
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1298,"sb.setCharAt(dstPos + i, intToHexDigit(bits));"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1300,return sb.toString();
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1304,* <p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1305,"* Converts a byte into an array of Char using the default (little endian, Lsb0) byte and"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1306,* bit ordering.
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1307,* </p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1309,* @param src the byte to convert
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1310,"* @param srcPos the position in <code>src</code>, in bits, from where to start the"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1311,*            conversion
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1312,* @param dstInit the initial value for the result String
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1313,* @param dstPos the position in <code>dst</code> where to copy the result
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1314,* @param nHexs the number of Char to copy to <code>dst</code>. must be smaller or equal to
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1315,*            the width of the input (from srcPos to msb)
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1316,* @return <code>dst</code>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1318,"public static String byteToHexs(byte src, int srcPos, String dstInit, int dstPos, int nHexs) {"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1319,if (0 == nHexs) return dstInit;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1320,StringBuffer sb = new StringBuffer(dstInit);
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1321,int shift = 0;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1322,assert ((nHexs - 1) * 4 < 8 - srcPos);
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1323,for (int i = 0; i < nHexs; i++ ) {
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1324,shift = i * 4 + srcPos;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1325,int bits = 0xF & (src >> shift);
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1326,"sb.setCharAt(dstPos + i, intToHexDigit(bits));"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1328,return sb.toString();
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1332,* <p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1333,"* Converts a long into an array of boolean using the default (little endian, Lsb0) byte and"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1334,* bit ordering.
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1335,* </p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1337,* @param src the long to convert
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1338,"* @param srcPos the position in <code>src</code>, in bits, from where to start the"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1339,*            conversion
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1340,* @param dst the destination array
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1341,* @param dstPos the position in <code>dst</code> where to copy the result
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1342,* @param nBools the number of boolean to copy to <code>dst</code>. must be smaller or equal
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1343,*            to the width of the input (from srcPos to msb)
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1344,* @return <code>dst</code>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1346,"public static boolean[] longToBools(long src, int srcPos, boolean[] dst, int dstPos,"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1347,int nBools) {
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1348,if (0 == nBools) return dst;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1349,int shift = 0;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1350,assert ((nBools - 1) * 1 < 64 - srcPos);
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1351,for (int i = 0; i < nBools; i++ ) {
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1352,shift = i * 1 + srcPos;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1353,Long bits = (long)(0x1 & (src >> shift));
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1354,dst[dstPos + i] = (bits != 0);
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1356,return dst;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1360,* <p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1361,"* Converts a int into an array of boolean using the default (little endian, Lsb0) byte and"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1362,* bit ordering.
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1363,* </p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1365,* @param src the int to convert
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1366,"* @param srcPos the position in <code>src</code>, in bits, from where to start the"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1367,*            conversion
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1368,* @param dst the destination array
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1369,* @param dstPos the position in <code>dst</code> where to copy the result
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1370,* @param nBools the number of boolean to copy to <code>dst</code>. must be smaller or equal
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1371,*            to the width of the input (from srcPos to msb)
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1372,* @return <code>dst</code>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1374,"public static boolean[] intToBools(int src, int srcPos, boolean[] dst, int dstPos,"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1375,int nBools) {
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1376,if (0 == nBools) return dst;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1377,int shift = 0;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1378,assert ((nBools - 1) * 1 < 32 - srcPos);
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1379,for (int i = 0; i < nBools; i++ ) {
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1380,shift = i * 1 + srcPos;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1381,Integer bits = (int)(0x1 & (src >> shift));
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1382,dst[dstPos + i] = (bits != 0);
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1384,return dst;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1388,* <p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1389,"* Converts a short into an array of boolean using the default (little endian, Lsb0) byte"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1390,* and bit ordering.
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1391,* </p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1393,* @param src the short to convert
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1394,"* @param srcPos the position in <code>src</code>, in bits, from where to start the"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1395,*            conversion
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1396,* @param dst the destination array
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1397,* @param dstPos the position in <code>dst</code> where to copy the result
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1398,* @param nBools the number of boolean to copy to <code>dst</code>. must be smaller or equal
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1399,*            to the width of the input (from srcPos to msb)
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1400,* @return <code>dst</code>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1402,"public static boolean[] shortToBools(short src, int srcPos, boolean[] dst, int dstPos,"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1403,int nBools) {
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1404,if (0 == nBools) return dst;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1405,int shift = 0;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1406,assert ((nBools - 1) * 1 < 16 - srcPos);
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1407,for (int i = 0; i < nBools; i++ ) {
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1408,shift = i * 1 + srcPos;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1409,Short bits = (short)(0x1 & (src >> shift));
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1410,dst[dstPos + i] = (bits != 0);
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1412,return dst;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1416,* <p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1417,"* Converts a byte into an array of boolean using the default (little endian, Lsb0) byte and"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1418,* bit ordering.
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1419,* </p>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1421,* @param src the byte to convert
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1422,"* @param srcPos the position in <code>src</code>, in bits, from where to start the"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1423,*            conversion
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1424,* @param dst the destination array
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1425,* @param dstPos the position in <code>dst</code> where to copy the result
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1426,* @param nBools the number of boolean to copy to <code>dst</code>. must be smaller or equal
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1427,*            to the width of the input (from srcPos to msb)
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1428,* @return <code>dst</code>
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1430,"public static boolean[] byteToBools(byte src, int srcPos, boolean[] dst, int dstPos,"
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1431,int nBools) {
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1432,if (0 == nBools) return dst;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1433,int shift = 0;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1434,assert ((nBools - 1) * 1 < 8 - srcPos);
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1435,for (int i = 0; i < nBools; i++ ) {
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1436,shift = i * 1 + srcPos;
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1437,Byte bits = (byte)(0x1 & (src >> shift));
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1438,dst[dstPos + i] = (bits != 0);
True,src/main/java/org/apache/commons/lang3/Conversion.java,src/main/java/org/apache/commons/lang3/Conversion.java,1440,return dst;
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,2,* Licensed to the Apache Software Foundation (ASF) under one
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,3,* or more contributor license agreements.  See the NOTICE file
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,4,* distributed with this work for additional information
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,5,* regarding copyright ownership.  The ASF licenses this file
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,6,"* to you under the Apache License, Version 2.0 (the"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,7,"* ""License""); you may not use this file except in compliance"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,8,* with the License.  You may obtain a copy of the License at
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,10,* http://www.apache.org/licenses/LICENSE-2.0
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,12,"* Unless required by applicable law or agreed to in writing,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,13,* software distributed under the License is distributed on an
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,14,"* ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,15,"* KIND, either express or implied.  See the License for the"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,16,* specific language governing permissions and limitations
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,17,* under the License.
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,19,package org.apache.commons.lang3;
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,21,import junit.framework.TestCase;
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,22,import java.lang.Throwable;
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,23,import java.lang.reflect.Method;
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,27,* Unit tests {@link Conversion}.
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,29,* @version $Id$
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,32,public class ConversionTest extends TestCase {
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,35,* convert an hexadecimal digit into an int using the default (Lsb0) bit ordering.
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,36,* <p>
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,37,* '1' is converted to 1
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,39,* @param hexDigit the hexadecimal digit to convert
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,40,* @return an int equals to <code>hexDigit</code>
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,42,public void testHexDigitToInt() throws Exception {
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,43,"assertEquals(0, Conversion.hexDigitToInt('0'));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,44,"assertEquals(1, Conversion.hexDigitToInt('1'));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,45,"assertEquals(2, Conversion.hexDigitToInt('2'));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,46,"assertEquals(3, Conversion.hexDigitToInt('3'));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,47,"assertEquals(4, Conversion.hexDigitToInt('4'));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,48,"assertEquals(5, Conversion.hexDigitToInt('5'));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,49,"assertEquals(6, Conversion.hexDigitToInt('6'));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,50,"assertEquals(7, Conversion.hexDigitToInt('7'));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,51,"assertEquals(8, Conversion.hexDigitToInt('8'));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,52,"assertEquals(9, Conversion.hexDigitToInt('9'));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,53,"assertEquals(10, Conversion.hexDigitToInt('A'));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,54,"assertEquals(10, Conversion.hexDigitToInt('a'));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,55,"assertEquals(11, Conversion.hexDigitToInt('B'));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,56,"assertEquals(11, Conversion.hexDigitToInt('b'));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,57,"assertEquals(12, Conversion.hexDigitToInt('C'));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,58,"assertEquals(12, Conversion.hexDigitToInt('c'));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,59,"assertEquals(13, Conversion.hexDigitToInt('D'));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,60,"assertEquals(13, Conversion.hexDigitToInt('d'));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,61,"assertEquals(14, Conversion.hexDigitToInt('E'));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,62,"assertEquals(14, Conversion.hexDigitToInt('e'));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,63,"assertEquals(15, Conversion.hexDigitToInt('F'));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,64,"assertEquals(15, Conversion.hexDigitToInt('f'));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,68,* convert an hexadecimal digit into an int using the Msb0 bit ordering.
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,69,* <p>
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,70,* '1' is converted to 8
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,72,* @param hexDigit the hexadecimal digit to convert
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,73,* @return an int equals to <code>hexDigit</code>
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,75,public void testHexDigitM0ToInt() throws Exception {
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,76,"assertEquals(0x0, Conversion.hexDigitM0ToInt('0'));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,77,"assertEquals(0x8, Conversion.hexDigitM0ToInt('1'));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,78,"assertEquals(0x4, Conversion.hexDigitM0ToInt('2'));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,79,"assertEquals(0xC, Conversion.hexDigitM0ToInt('3'));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,80,"assertEquals(0x2, Conversion.hexDigitM0ToInt('4'));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,81,"assertEquals(0xA, Conversion.hexDigitM0ToInt('5'));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,82,"assertEquals(0x6, Conversion.hexDigitM0ToInt('6'));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,83,"assertEquals(0xE, Conversion.hexDigitM0ToInt('7'));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,84,"assertEquals(0x1, Conversion.hexDigitM0ToInt('8'));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,85,"assertEquals(0x9, Conversion.hexDigitM0ToInt('9'));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,86,"assertEquals(0x5, Conversion.hexDigitM0ToInt('A'));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,87,"assertEquals(0x5, Conversion.hexDigitM0ToInt('a'));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,88,"assertEquals(0xD, Conversion.hexDigitM0ToInt('B'));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,89,"assertEquals(0xD, Conversion.hexDigitM0ToInt('b'));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,90,"assertEquals(0x3, Conversion.hexDigitM0ToInt('C'));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,91,"assertEquals(0x3, Conversion.hexDigitM0ToInt('c'));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,92,"assertEquals(0xB, Conversion.hexDigitM0ToInt('D'));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,93,"assertEquals(0xB, Conversion.hexDigitM0ToInt('d'));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,94,"assertEquals(0x7, Conversion.hexDigitM0ToInt('E'));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,95,"assertEquals(0x7, Conversion.hexDigitM0ToInt('e'));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,96,"assertEquals(0xF, Conversion.hexDigitM0ToInt('F'));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,97,"assertEquals(0xF, Conversion.hexDigitM0ToInt('f'));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,101,* convert an hexadecimal digit into binary using the default (Lsb0) bit ordering.
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,102,* <p>
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,103,"* '1' is converted as follow: (1, 0, 0, 0)"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,105,* @param hexDigit the hexadecimal digit to convert
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,106,* @return a boolean array with the binary representation of <code>hexDigit</code>
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,108,public void testHexDigitToBools() throws Exception {
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,109,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,110,"new boolean[]{false, false, false, false}, Conversion.hexDigitToBools('0'));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,111,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,112,"new boolean[]{true, false, false, false}, Conversion.hexDigitToBools('1'));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,113,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,114,"new boolean[]{false, true, false, false}, Conversion.hexDigitToBools('2'));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,115,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,116,"new boolean[]{true, true, false, false}, Conversion.hexDigitToBools('3'));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,117,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,118,"new boolean[]{false, false, true, false}, Conversion.hexDigitToBools('4'));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,119,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,120,"new boolean[]{true, false, true, false}, Conversion.hexDigitToBools('5'));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,121,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,122,"new boolean[]{false, true, true, false}, Conversion.hexDigitToBools('6'));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,123,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,124,"new boolean[]{true, true, true, false}, Conversion.hexDigitToBools('7'));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,125,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,126,"new boolean[]{false, false, false, true}, Conversion.hexDigitToBools('8'));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,127,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,128,"new boolean[]{true, false, false, true}, Conversion.hexDigitToBools('9'));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,129,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,130,"new boolean[]{false, true, false, true}, Conversion.hexDigitToBools('A'));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,131,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,132,"new boolean[]{false, true, false, true}, Conversion.hexDigitToBools('a'));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,133,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,134,"new boolean[]{true, true, false, true}, Conversion.hexDigitToBools('B'));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,135,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,136,"new boolean[]{true, true, false, true}, Conversion.hexDigitToBools('b'));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,137,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,138,"new boolean[]{false, false, true, true}, Conversion.hexDigitToBools('C'));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,139,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,140,"new boolean[]{false, false, true, true}, Conversion.hexDigitToBools('c'));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,141,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,142,"new boolean[]{true, false, true, true}, Conversion.hexDigitToBools('D'));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,143,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,144,"new boolean[]{true, false, true, true}, Conversion.hexDigitToBools('d'));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,145,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,146,"new boolean[]{false, true, true, true}, Conversion.hexDigitToBools('E'));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,147,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,148,"new boolean[]{false, true, true, true}, Conversion.hexDigitToBools('e'));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,149,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,150,"new boolean[]{true, true, true, true}, Conversion.hexDigitToBools('F'));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,151,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,152,"new boolean[]{true, true, true, true}, Conversion.hexDigitToBools('f'));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,156,* Convert an hexadecimal digit into binary using the Msb0 bit ordering.
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,157,* <p>
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,158,"* '1' is converted as follow: (0, 0, 0, 1)"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,160,* @param hexDigit the hexadecimal digit to convert
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,161,* @return a boolean array with the binary representation of <code>hexDigit</code>
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,163,public static boolean[] hexDigitM0ToBools(char hexDigit) {
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,164,switch (hexDigit) {
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,165,case '0':
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,166,"return new boolean[]{false, false, false, false};"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,167,case '1':
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,168,"return new boolean[]{false, false, false, true};"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,169,case '2':
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,170,"return new boolean[]{false, false, true, false};"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,171,case '3':
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,172,"return new boolean[]{false, false, true, true};"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,173,case '4':
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,174,"return new boolean[]{false, true, false, false};"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,175,case '5':
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,176,"return new boolean[]{false, true, false, true};"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,177,case '6':
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,178,"return new boolean[]{false, true, true, false};"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,179,case '7':
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,180,"return new boolean[]{false, true, true, true};"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,181,case '8':
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,182,"return new boolean[]{true, false, false, false};"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,183,case '9':
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,184,"return new boolean[]{true, false, false, true};"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,185,case 'a':// fall through
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,186,case 'A':
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,187,"return new boolean[]{true, false, true, false};"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,188,case 'b':// fall through
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,189,case 'B':
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,190,"return new boolean[]{true, false, true, true};"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,191,case 'c':// fall through
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,192,case 'C':
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,193,"return new boolean[]{true, true, false, false};"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,194,case 'd':// fall through
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,195,case 'D':
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,196,"return new boolean[]{true, true, false, true};"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,197,case 'e':// fall through
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,198,case 'E':
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,199,"return new boolean[]{true, true, true, false};"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,200,case 'f':// fall through
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,201,case 'F':
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,202,"return new boolean[]{true, true, true, true};"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,203,default:
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,204,"throw new IllegalArgumentException(""Cannot interpret '"""
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,205,+ hexDigit
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,206,"+ ""' as an hexadecimal digit"");"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,210,public void testHexDigitM0ToBools() throws Exception {
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,211,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,212,"new boolean[]{false, false, false, false}, Conversion.hexDigitM0ToBools('0'));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,213,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,214,"new boolean[]{false, false, false, true}, Conversion.hexDigitM0ToBools('1'));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,215,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,216,"new boolean[]{false, false, true, false}, Conversion.hexDigitM0ToBools('2'));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,217,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,218,"new boolean[]{false, false, true, true}, Conversion.hexDigitM0ToBools('3'));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,219,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,220,"new boolean[]{false, true, false, false}, Conversion.hexDigitM0ToBools('4'));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,221,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,222,"new boolean[]{false, true, false, true}, Conversion.hexDigitM0ToBools('5'));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,223,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,224,"new boolean[]{false, true, true, false}, Conversion.hexDigitM0ToBools('6'));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,225,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,226,"new boolean[]{false, true, true, true}, Conversion.hexDigitM0ToBools('7'));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,227,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,228,"new boolean[]{true, false, false, false}, Conversion.hexDigitM0ToBools('8'));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,229,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,230,"new boolean[]{true, false, false, true}, Conversion.hexDigitM0ToBools('9'));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,231,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,232,"new boolean[]{true, false, true, false}, Conversion.hexDigitM0ToBools('A'));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,233,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,234,"new boolean[]{true, false, true, false}, Conversion.hexDigitM0ToBools('a'));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,235,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,236,"new boolean[]{true, false, true, true}, Conversion.hexDigitM0ToBools('B'));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,237,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,238,"new boolean[]{true, false, true, true}, Conversion.hexDigitM0ToBools('b'));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,239,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,240,"new boolean[]{true, true, false, false}, Conversion.hexDigitM0ToBools('C'));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,241,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,242,"new boolean[]{true, true, false, false}, Conversion.hexDigitM0ToBools('c'));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,243,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,244,"new boolean[]{true, true, false, true}, Conversion.hexDigitM0ToBools('D'));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,245,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,246,"new boolean[]{true, true, false, true}, Conversion.hexDigitM0ToBools('d'));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,247,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,248,"new boolean[]{true, true, true, false}, Conversion.hexDigitM0ToBools('E'));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,249,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,250,"new boolean[]{true, true, true, false}, Conversion.hexDigitM0ToBools('e'));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,251,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,252,"new boolean[]{true, true, true, true}, Conversion.hexDigitM0ToBools('F'));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,253,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,254,"new boolean[]{true, true, true, true}, Conversion.hexDigitM0ToBools('f'));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,258,* Convert a boolean array to an hexadecimal digit using the default (Lsb0) bit ordering.
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,259,* <p>
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,260,"* (1, 0, 0, 0) is converted as follow: '1'"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,262,* @param src the boolean array to convert
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,263,* @return an hexadecimal digit representing the selected bits
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,265,public void testBoolsToHexDigit() throws Exception {
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,266,"assertEquals('0', Conversion.boolsToHexDigit(new boolean[]{false, false, false, false}));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,267,"assertEquals('1', Conversion.boolsToHexDigit(new boolean[]{true, false, false, false}));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,268,"assertEquals('2', Conversion.boolsToHexDigit(new boolean[]{false, true, false, false}));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,269,"assertEquals('3', Conversion.boolsToHexDigit(new boolean[]{true, true, false, false}));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,270,"assertEquals('4', Conversion.boolsToHexDigit(new boolean[]{false, false, true, false}));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,271,"assertEquals('5', Conversion.boolsToHexDigit(new boolean[]{true, false, true, false}));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,272,"assertEquals('6', Conversion.boolsToHexDigit(new boolean[]{false, true, true, false}));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,273,"assertEquals('7', Conversion.boolsToHexDigit(new boolean[]{true, true, true, false}));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,274,"assertEquals('8', Conversion.boolsToHexDigit(new boolean[]{false, false, false, true}));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,275,"assertEquals('9', Conversion.boolsToHexDigit(new boolean[]{true, false, false, true}));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,276,"assertEquals('A', Conversion.boolsToHexDigit(new boolean[]{false, true, false, true}));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,277,"assertEquals('B', Conversion.boolsToHexDigit(new boolean[]{true, true, false, true}));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,278,"assertEquals('C', Conversion.boolsToHexDigit(new boolean[]{false, false, true, true}));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,279,"assertEquals('D', Conversion.boolsToHexDigit(new boolean[]{true, false, true, true}));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,280,"assertEquals('E', Conversion.boolsToHexDigit(new boolean[]{false, true, true, true}));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,281,"assertEquals('F', Conversion.boolsToHexDigit(new boolean[]{true, true, true, true}));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,285,* Convert a boolean array to an hexadecimal digit using the default (Lsb0) bit ordering.
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,286,* <p>
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,287,"* (1, 0, 0, 0) is converted as follow: '1'"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,289,* @param src the boolean array to convert
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,290,* @param srcPos the position of the lsb to start the conversion
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,291,* @return an hexadecimal digit representing the selected bits
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,293,public void testBoolsToHexDigit_2args() throws Exception {
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,294,"boolean[] shortArray = new boolean[]{false, true, true};"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,295,"assertEquals('6', Conversion.boolsToHexDigit(shortArray, 0));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,296,"assertEquals('3', Conversion.boolsToHexDigit(shortArray, 1));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,297,"assertEquals('1', Conversion.boolsToHexDigit(shortArray, 2));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,298,"boolean[] longArray = new boolean[]{true, false, true, false, false, true, true};"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,299,"assertEquals('5', Conversion.boolsToHexDigit(longArray, 0));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,300,"assertEquals('2', Conversion.boolsToHexDigit(longArray, 1));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,301,"assertEquals('9', Conversion.boolsToHexDigit(longArray, 2));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,302,"assertEquals('C', Conversion.boolsToHexDigit(longArray, 3));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,303,"assertEquals('6', Conversion.boolsToHexDigit(longArray, 4));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,304,"assertEquals('3', Conversion.boolsToHexDigit(longArray, 5));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,305,"assertEquals('1', Conversion.boolsToHexDigit(longArray, 6));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,309,* Convert a boolean array to an hexadecimal digit using the Msb0 bit ordering.
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,310,* <p>
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,311,"* (1, 0, 0, 0) is converted as follow: '8'"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,313,* @param src the boolean array to convert
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,314,* @return an hexadecimal digit representing the selected bits
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,315,* @warning src.length must be >= 4.
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,317,public void testBoolsToHexDigitM0_bits() throws Exception {
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,318,assertEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,319,"'0', Conversion.boolsToHexDigitM0_4bits(new boolean[]{false, false, false, false}));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,320,assertEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,321,"'1', Conversion.boolsToHexDigitM0_4bits(new boolean[]{false, false, false, true}));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,322,assertEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,323,"'2', Conversion.boolsToHexDigitM0_4bits(new boolean[]{false, false, true, false}));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,324,assertEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,325,"'3', Conversion.boolsToHexDigitM0_4bits(new boolean[]{false, false, true, true}));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,326,assertEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,327,"'4', Conversion.boolsToHexDigitM0_4bits(new boolean[]{false, true, false, false}));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,328,assertEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,329,"'5', Conversion.boolsToHexDigitM0_4bits(new boolean[]{false, true, false, true}));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,330,assertEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,331,"'6', Conversion.boolsToHexDigitM0_4bits(new boolean[]{false, true, true, false}));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,332,assertEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,333,"'7', Conversion.boolsToHexDigitM0_4bits(new boolean[]{false, true, true, true}));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,334,assertEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,335,"'8', Conversion.boolsToHexDigitM0_4bits(new boolean[]{true, false, false, false}));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,336,assertEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,337,"'9', Conversion.boolsToHexDigitM0_4bits(new boolean[]{true, false, false, true}));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,338,assertEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,339,"'A', Conversion.boolsToHexDigitM0_4bits(new boolean[]{true, false, true, false}));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,340,assertEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,341,"'B', Conversion.boolsToHexDigitM0_4bits(new boolean[]{true, false, true, true}));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,342,assertEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,343,"'C', Conversion.boolsToHexDigitM0_4bits(new boolean[]{true, true, false, false}));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,344,assertEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,345,"'D', Conversion.boolsToHexDigitM0_4bits(new boolean[]{true, true, false, true}));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,346,assertEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,347,"'E', Conversion.boolsToHexDigitM0_4bits(new boolean[]{true, true, true, false}));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,348,assertEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,349,"'F', Conversion.boolsToHexDigitM0_4bits(new boolean[]{true, true, true, true}));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,353,* Convert a boolean array to an hexadecimal digit using the Msb0 bit ordering.
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,354,* <p>
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,355,"* (1, 0, 0, 0) is converted as follow: '8' (1,0,0,1,1,0,1,0) with srcPos = 3 is converted"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,356,* to 'D'
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,358,* @param src the boolean array to convert
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,359,* @param srcPos the position of the lsb to start the conversion
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,360,* @return an hexadecimal digit representing the selected bits
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,361,* @warning src.length must be 8 at most.
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,362,* @warning srcPos+4 must be <= src.length.
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,364,public void testBoolsToHexDigitM0_4bits_2args() throws Exception {
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,365,"// boolean[] shortArray = new boolean[]{true,true,false};"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,366,"// assertEquals('6', Conversion.boolsToHexDigitM0(shortArray,0));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,367,"// assertEquals('3', Conversion.boolsToHexDigitM0(shortArray,1));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,368,"// assertEquals('1', Conversion.boolsToHexDigitM0(shortArray,2));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,369,"boolean[] shortArray = new boolean[]{true, true, false, true};"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,370,"assertEquals('D', Conversion.boolsToHexDigitM0_4bits(shortArray, 0));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,371,"boolean[] longArray = new boolean[]{true, false, true, false, false, true, true};"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,372,"assertEquals('A', Conversion.boolsToHexDigitM0_4bits(longArray, 0));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,373,"assertEquals('4', Conversion.boolsToHexDigitM0_4bits(longArray, 1));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,374,"assertEquals('9', Conversion.boolsToHexDigitM0_4bits(longArray, 2));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,375,"assertEquals('3', Conversion.boolsToHexDigitM0_4bits(longArray, 3));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,376,"// assertEquals('6', Conversion.boolsToHexDigitM0(longArray,4));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,377,"// assertEquals('3', Conversion.boolsToHexDigitM0(longArray,5));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,378,"// assertEquals('1', Conversion.boolsToHexDigitM0(longArray,6));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,379,boolean[] maxLengthArray = new boolean[]{
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,380,"true, false, true, false, false, true, true, true};"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,381,"assertEquals('A', Conversion.boolsToHexDigitM0_4bits(maxLengthArray, 0));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,382,"assertEquals('4', Conversion.boolsToHexDigitM0_4bits(maxLengthArray, 1));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,383,"assertEquals('9', Conversion.boolsToHexDigitM0_4bits(maxLengthArray, 2));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,384,"assertEquals('3', Conversion.boolsToHexDigitM0_4bits(maxLengthArray, 3));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,385,"assertEquals('7', Conversion.boolsToHexDigitM0_4bits(maxLengthArray, 4));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,386,"// assertEquals('7', Conversion.boolsToHexDigitM0(longArray,5));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,387,"// assertEquals('3', Conversion.boolsToHexDigitM0(longArray,6));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,388,"// assertEquals('1', Conversion.boolsToHexDigitM0(longArray,7));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,389,boolean[] javaDocCheck = new boolean[]{
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,390,"true, false, false, true, true, false, true, false};"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,391,"assertEquals('D', Conversion.boolsToHexDigitM0_4bits(javaDocCheck, 3));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,396,* Convert the first 4 bits of a boolean array in big endian Msb0 bit ordering to an
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,397,* hexadecimal digit.
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,398,* <p>
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,399,"* (1, 0, 0, 0) is converted as follow: '8' (1,0,0,0,0,0,0,0, 0,0,0,0,0,1,0,0) is converted"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,400,* to '4'
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,402,* @param src the boolean array to convert
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,403,* @return an hexadecimal digit representing the selected bits
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,405,public void testBoolsBeM0ToHexDigit() throws Exception {
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,406,assertEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,407,"'0', Conversion.boolsBeM0ToHexDigit(new boolean[]{false, false, false, false}));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,408,assertEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,409,"'1', Conversion.boolsBeM0ToHexDigit(new boolean[]{false, false, false, true}));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,410,assertEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,411,"'2', Conversion.boolsBeM0ToHexDigit(new boolean[]{false, false, true, false}));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,412,assertEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,413,"'3', Conversion.boolsBeM0ToHexDigit(new boolean[]{false, false, true, true}));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,414,assertEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,415,"'4', Conversion.boolsBeM0ToHexDigit(new boolean[]{false, true, false, false}));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,416,assertEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,417,"'5', Conversion.boolsBeM0ToHexDigit(new boolean[]{false, true, false, true}));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,418,assertEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,419,"'6', Conversion.boolsBeM0ToHexDigit(new boolean[]{false, true, true, false}));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,420,assertEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,421,"'7', Conversion.boolsBeM0ToHexDigit(new boolean[]{false, true, true, true}));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,422,assertEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,423,"'8', Conversion.boolsBeM0ToHexDigit(new boolean[]{true, false, false, false}));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,424,assertEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,425,"'9', Conversion.boolsBeM0ToHexDigit(new boolean[]{true, false, false, true}));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,426,assertEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,427,"'A', Conversion.boolsBeM0ToHexDigit(new boolean[]{true, false, true, false}));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,428,assertEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,429,"'B', Conversion.boolsBeM0ToHexDigit(new boolean[]{true, false, true, true}));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,430,assertEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,431,"'C', Conversion.boolsBeM0ToHexDigit(new boolean[]{true, true, false, false}));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,432,assertEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,433,"'D', Conversion.boolsBeM0ToHexDigit(new boolean[]{true, true, false, true}));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,434,assertEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,435,"'E', Conversion.boolsBeM0ToHexDigit(new boolean[]{true, true, true, false}));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,436,"assertEquals('F', Conversion.boolsBeM0ToHexDigit(new boolean[]{true, true, true, true}));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,437,assertEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,438,"'4',"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,439,Conversion.boolsBeM0ToHexDigit(new boolean[]{
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,440,"true, false, false, false, false, false, false, false, false, false, false,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,441,"false, false, true, false, false}));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,445,* Convert a part of a boolean array in big endian Msb0 bit ordering to an hexadecimal
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,446,* digit.
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,447,* <p>
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,448,"* (1, 0, 0, 0) with srcPos = 0 is converted as follow: '8' (1,0,0,0,0,0,0,0,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,449,"* 0,0,0,1,0,1,0,0) with srcPos = 2 is converted to '5'"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,451,* @param src the boolean array to convert
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,452,* @param srcPos the position of the lsb to start the conversion
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,453,* @return an hexadecimal digit representing the selected bits
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,455,public void testBoolsBeM0ToHexDigit_2args() throws Exception {
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,456,assertEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,457,"'5',"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,458,Conversion.boolsBeM0ToHexDigit(new boolean[]{
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,459,"true, false, false, false, false, false, false, false, false, false, false,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,460,"true, false, true, false, false}, 2));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,462,"boolean[] shortArray = new boolean[]{true, true, false};"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,463,"assertEquals('6', Conversion.boolsBeM0ToHexDigit(shortArray, 0));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,464,"assertEquals('3', Conversion.boolsBeM0ToHexDigit(shortArray, 1));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,465,"assertEquals('1', Conversion.boolsBeM0ToHexDigit(shortArray, 2));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,466,"boolean[] shortArray2 = new boolean[]{true, true, true, false, false, true, false, true};"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,467,"assertEquals('5', Conversion.boolsBeM0ToHexDigit(shortArray2, 0));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,468,"assertEquals('2', Conversion.boolsBeM0ToHexDigit(shortArray2, 1));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,469,"assertEquals('9', Conversion.boolsBeM0ToHexDigit(shortArray2, 2));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,470,"assertEquals('C', Conversion.boolsBeM0ToHexDigit(shortArray2, 3));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,471,"assertEquals('E', Conversion.boolsBeM0ToHexDigit(shortArray2, 4));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,472,"assertEquals('7', Conversion.boolsBeM0ToHexDigit(shortArray2, 5));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,473,"assertEquals('3', Conversion.boolsBeM0ToHexDigit(shortArray2, 6));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,474,"assertEquals('1', Conversion.boolsBeM0ToHexDigit(shortArray2, 7));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,475,boolean[] multiBytesArray = new boolean[]{
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,476,"true, true, false, false, true, false, true, false, true, true, true, false, false,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,477,"true, false, true};"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,478,"assertEquals('5', Conversion.boolsBeM0ToHexDigit(multiBytesArray, 0));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,479,"assertEquals('2', Conversion.boolsBeM0ToHexDigit(multiBytesArray, 1));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,480,"assertEquals('9', Conversion.boolsBeM0ToHexDigit(multiBytesArray, 2));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,481,"assertEquals('C', Conversion.boolsBeM0ToHexDigit(multiBytesArray, 3));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,482,"assertEquals('E', Conversion.boolsBeM0ToHexDigit(multiBytesArray, 4));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,483,"assertEquals('7', Conversion.boolsBeM0ToHexDigit(multiBytesArray, 5));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,484,"assertEquals('B', Conversion.boolsBeM0ToHexDigit(multiBytesArray, 6));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,485,"assertEquals('5', Conversion.boolsBeM0ToHexDigit(multiBytesArray, 7));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,487,"assertEquals('A', Conversion.boolsBeM0ToHexDigit(multiBytesArray, 8));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,488,"assertEquals('5', Conversion.boolsBeM0ToHexDigit(multiBytesArray, 9));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,489,"assertEquals('2', Conversion.boolsBeM0ToHexDigit(multiBytesArray, 10));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,490,"assertEquals('9', Conversion.boolsBeM0ToHexDigit(multiBytesArray, 11));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,491,"assertEquals('C', Conversion.boolsBeM0ToHexDigit(multiBytesArray, 12));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,492,"assertEquals('6', Conversion.boolsBeM0ToHexDigit(multiBytesArray, 13));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,493,"assertEquals('3', Conversion.boolsBeM0ToHexDigit(multiBytesArray, 14));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,494,"assertEquals('1', Conversion.boolsBeM0ToHexDigit(multiBytesArray, 15));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,499,* Convert the 4 lsb of an int to an hexadecimal digit.
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,500,* <p>
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,501,* 0 returns '0'
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,502,* <p>
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,503,* 1 returns '1'
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,504,* <p>
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,505,* 10 returns 'A' and so on...
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,507,"* @param nibble the int to convert, value outside of the range [0:15] are not allowed."
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,508,* @return an hexadecimal digit representing the 4 lsb of <code>nibble</code>
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,510,public void testIntToHexDigit() throws Exception {
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,511,"assertEquals('0', Conversion.intToHexDigit(0));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,512,"assertEquals('1', Conversion.intToHexDigit(1));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,513,"assertEquals('2', Conversion.intToHexDigit(2));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,514,"assertEquals('3', Conversion.intToHexDigit(3));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,515,"assertEquals('4', Conversion.intToHexDigit(4));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,516,"assertEquals('5', Conversion.intToHexDigit(5));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,517,"assertEquals('6', Conversion.intToHexDigit(6));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,518,"assertEquals('7', Conversion.intToHexDigit(7));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,519,"assertEquals('8', Conversion.intToHexDigit(8));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,520,"assertEquals('9', Conversion.intToHexDigit(9));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,521,"assertEquals('A', Conversion.intToHexDigit(10));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,522,"assertEquals('B', Conversion.intToHexDigit(11));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,523,"assertEquals('C', Conversion.intToHexDigit(12));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,524,"assertEquals('D', Conversion.intToHexDigit(13));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,525,"assertEquals('E', Conversion.intToHexDigit(14));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,526,"assertEquals('F', Conversion.intToHexDigit(15));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,530,* Convert the 4 lsb of an int to an hexadecimal digit encoded using the Msb0 bit ordering.
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,531,* <p>
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,532,* 0 returns '0'
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,533,* <p>
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,534,* 1 returns '8'
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,535,* <p>
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,536,* 10 returns '5' and so on...
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,538,"* @param nibble the int to convert, value outside of the range [0:15] are not allowed."
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,539,* @return an hexadecimal digit representing the 4 lsb of <code>nibble</code>
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,541,public void testIntToHexDigitM0() throws Exception {
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,542,"assertEquals('0', Conversion.intToHexDigitM0(0));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,543,"assertEquals('8', Conversion.intToHexDigitM0(1));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,544,"assertEquals('4', Conversion.intToHexDigitM0(2));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,545,"assertEquals('C', Conversion.intToHexDigitM0(3));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,546,"assertEquals('2', Conversion.intToHexDigitM0(4));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,547,"assertEquals('A', Conversion.intToHexDigitM0(5));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,548,"assertEquals('6', Conversion.intToHexDigitM0(6));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,549,"assertEquals('E', Conversion.intToHexDigitM0(7));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,550,"assertEquals('1', Conversion.intToHexDigitM0(8));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,551,"assertEquals('9', Conversion.intToHexDigitM0(9));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,552,"assertEquals('5', Conversion.intToHexDigitM0(10));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,553,"assertEquals('D', Conversion.intToHexDigitM0(11));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,554,"assertEquals('3', Conversion.intToHexDigitM0(12));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,555,"assertEquals('B', Conversion.intToHexDigitM0(13));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,556,"assertEquals('7', Conversion.intToHexDigitM0(14));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,557,"assertEquals('F', Conversion.intToHexDigitM0(15));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,560,static String dbgPrint(long[] src) {
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,561,StringBuilder sb = new StringBuilder();
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,562,for (long e : src) {
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,563,"sb.append(""0x"").append(Long.toHexString(e)).append(',');"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,565,String out = sb.toString();
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,566,"return out.substring(0, out.length() - 1);"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,569,"static void assertArrayEquals(long[] expected, long[] actual) {"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,570,"assertEquals(expected.length, actual.length);"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,571,for (int i = 0; i < expected.length; i++ ) {
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,572,try {
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,573,"assertEquals(expected[i], actual[i]);"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,574,} catch (Throwable e) {
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,575,"String msg = ""Mismatch at index """
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,576,+ i
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,577,"+ "" between:\n"""
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,578,+ dbgPrint(expected)
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,579,"+ "" and\n"""
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,580,+ dbgPrint(actual);
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,581,"TestCase.fail(msg + ""\n"" + e.getMessage());"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,586,static String dbgPrint(int[] src) {
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,587,StringBuilder sb = new StringBuilder();
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,588,for (int e : src) {
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,589,"sb.append(""0x"").append(Long.toHexString(e)).append(',');"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,591,String out = sb.toString();
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,592,"return out.substring(0, out.length() - 1);"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,595,"static void assertArrayEquals(int[] expected, int[] actual) {"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,596,"assertEquals(expected.length, actual.length);"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,597,for (int i = 0; i < expected.length; i++ ) {
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,598,try {
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,599,"assertEquals(expected[i], actual[i]);"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,600,} catch (Throwable e) {
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,601,"String msg = ""Mismatch at index """
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,602,+ i
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,603,"+ "" between:\n"""
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,604,+ dbgPrint(expected)
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,605,"+ "" and\n"""
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,606,+ dbgPrint(actual);
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,607,"TestCase.fail(msg + ""\n"" + e.getMessage());"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,612,static String dbgPrint(short[] src) {
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,613,StringBuilder sb = new StringBuilder();
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,614,for (short e : src) {
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,615,"sb.append(""0x"").append(Long.toHexString(e)).append(',');"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,617,String out = sb.toString();
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,618,"return out.substring(0, out.length() - 1);"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,621,"static void assertArrayEquals(short[] expected, short[] actual) {"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,622,"assertEquals(expected.length, actual.length);"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,623,for (int i = 0; i < expected.length; i++ ) {
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,624,try {
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,625,"assertEquals(expected[i], actual[i]);"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,626,} catch (Throwable e) {
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,627,"String msg = ""Mismatch at index """
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,628,+ i
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,629,"+ "" between:\n"""
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,630,+ dbgPrint(expected)
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,631,"+ "" and\n"""
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,632,+ dbgPrint(actual);
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,633,"TestCase.fail(msg + ""\n"" + e.getMessage());"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,638,static String dbgPrint(byte[] src) {
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,639,StringBuilder sb = new StringBuilder();
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,640,for (byte e : src) {
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,641,"sb.append(""0x"").append(Long.toHexString(e)).append(',');"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,643,String out = sb.toString();
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,644,"return out.substring(0, out.length() - 1);"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,647,"static void assertArrayEquals(byte[] expected, byte[] actual) {"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,648,"assertEquals(expected.length, actual.length);"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,649,for (int i = 0; i < expected.length; i++ ) {
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,650,try {
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,651,"assertEquals(expected[i], actual[i]);"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,652,} catch (Throwable e) {
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,653,"String msg = ""Mismatch at index """
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,654,+ i
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,655,"+ "" between:\n"""
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,656,+ dbgPrint(expected)
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,657,"+ "" and\n"""
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,658,+ dbgPrint(actual);
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,659,"TestCase.fail(msg + ""\n"" + e.getMessage());"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,664,static String dbgPrint(boolean[] src) {
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,665,StringBuilder sb = new StringBuilder();
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,666,for (boolean e : src) {
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,667,"if (e) sb.append(""1,"");"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,668,"else sb.append(""0,"");"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,670,String out = sb.toString();
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,671,"return out.substring(0, out.length() - 1);"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,674,"static void assertArrayEquals(boolean[] expected, boolean[] actual) {"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,675,"assertEquals(expected.length, actual.length);"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,676,for (int i = 0; i < expected.length; i++ ) {
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,677,try {
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,678,"assertEquals(expected[i], actual[i]);"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,679,} catch (Throwable e) {
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,680,"String msg = ""Mismatch at index """
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,681,+ i
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,682,"+ "" between:\n"""
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,683,+ dbgPrint(expected)
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,684,"+ "" and\n"""
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,685,+ dbgPrint(actual);
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,686,"TestCase.fail(msg + ""\n"" + e.getMessage());"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,691,public void testIntsToLong() throws Exception {
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,692,"int[] src = new int[]{0xCDF1F0C1, 0x0F123456, 0x78000000};"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,693,"assertEquals(0x0000000000000000L, Conversion.intsToLong(src, 0, 0L, 0, 0));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,694,"assertEquals(0x0000000000000000L, Conversion.intsToLong(src, 1, 0L, 0, 0));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,695,"assertEquals(0x00000000CDF1F0C1L, Conversion.intsToLong(src, 0, 0L, 0, 1));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,696,"assertEquals(0x0F123456CDF1F0C1L, Conversion.intsToLong(src, 0, 0L, 0, 2));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,697,"assertEquals(0x000000000F123456L, Conversion.intsToLong(src, 1, 0L, 0, 1));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,698,assertEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,699,"0x123456789ABCDEF0L, Conversion.intsToLong(src, 0, 0x123456789ABCDEF0L, 0, 0));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,700,assertEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,701,"0x1234567878000000L, Conversion.intsToLong(src, 2, 0x123456789ABCDEF0L, 0, 1));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,702,"// assertEquals(0x0F12345678000000L,Conversion.intsToLong(src,1,0x123456789ABCDEF0L,32,2));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,705,public void testShortsToLong() throws Exception {
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,706,// TODO: implement this test. This is somehow low priority since intsToLong and
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,707,// bytesToLong are tested
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,710,public void testBytesToLong() throws Exception {
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,711,byte[] src = new byte[]{
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,712,"(byte)0xCD, (byte)0xF1, (byte)0xF0, (byte)0xC1, (byte)0x0F, (byte)0x12, (byte)0x34,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,713,"(byte)0x56, (byte)0x78};"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,714,"assertEquals(0x0000000000000000L, Conversion.bytesToLong(src, 0, 0L, 0, 0));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,715,"assertEquals(0x00000000000000CDL, Conversion.bytesToLong(src, 0, 0L, 0, 1));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,716,"assertEquals(0x00000000C1F0F1CDL, Conversion.bytesToLong(src, 0, 0L, 0, 4));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,717,"assertEquals(0x000000000FC1F0F1L, Conversion.bytesToLong(src, 1, 0L, 0, 4));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,718,assertEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,719,"0x123456789ABCDEF0L, Conversion.bytesToLong(src, 0, 0x123456789ABCDEF0L, 0, 0));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,720,assertEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,721,"0x12345678CDBCDEF0L, Conversion.bytesToLong(src, 0, 0x123456789ABCDEF0L, 24, 1));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,722,"// assertEquals(0x123456789A7856F0L,Conversion.bytesToLong(src,7,0x123456789ABCDEF0L,8,2));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,725,public void testShortsToInt() throws Exception {
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,726,short[] src = new short[]{
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,727,"(short)0xCDF1, (short)0xF0C1, (short)0x0F12, (short)0x3456, (short)0x7800};"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,728,"assertEquals(0x00000000, Conversion.shortsToInt(src, 0, 0, 0, 0));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,729,"assertEquals(0x0000CDF1, Conversion.shortsToInt(src, 0, 0, 0, 1));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,730,"assertEquals(0xF0C1CDF1, Conversion.shortsToInt(src, 0, 0, 0, 2));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,731,"assertEquals(0x0F12F0C1, Conversion.shortsToInt(src, 1, 0, 0, 2));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,732,"assertEquals(0x12345678, Conversion.shortsToInt(src, 0, 0x12345678, 0, 0));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,733,"assertEquals(0xCDF15678, Conversion.shortsToInt(src, 0, 0x12345678, 16, 1));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,734,"// assertEquals(0x34567800,Conversion.shortsToInt(src, 3, 0x12345678, 16, 2));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,738,public void testBytesToInt() throws Exception {
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,739,byte[] src = new byte[]{
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,740,"(byte)0xCD, (byte)0xF1, (byte)0xF0, (byte)0xC1, (byte)0x0F, (byte)0x12, (byte)0x34,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,741,"(byte)0x56, (byte)0x78};"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,742,"assertEquals(0x00000000, Conversion.bytesToInt(src, 0, 0, 0, 0));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,743,"assertEquals(0x000000CD, Conversion.bytesToInt(src, 0, 0, 0, 1));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,744,"assertEquals(0xC1F0F1CD, Conversion.bytesToInt(src, 0, 0, 0, 4));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,745,"assertEquals(0x0FC1F0F1, Conversion.bytesToInt(src, 1, 0, 0, 4));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,746,"assertEquals(0x12345678, Conversion.bytesToInt(src, 0, 0x12345678, 0, 0));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,747,"assertEquals(0xCD345678, Conversion.bytesToInt(src, 0, 0x12345678, 24, 1));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,748,"// assertEquals(0x56341278,Conversion.bytesToInt(src, 5, 0x01234567, 8, 4));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,751,public void testBytesToShort() throws Exception {
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,752,byte[] src = new byte[]{
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,753,"(byte)0xCD, (byte)0xF1, (byte)0xF0, (byte)0xC1, (byte)0x0F, (byte)0x12, (byte)0x34,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,754,"(byte)0x56, (byte)0x78};"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,755,"assertEquals((short)0x0000, Conversion.bytesToShort(src, 0, (short)0, 0, 0));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,756,"assertEquals((short)0x00CD, Conversion.bytesToShort(src, 0, (short)0, 0, 1));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,757,"assertEquals((short)0xF1CD, Conversion.bytesToShort(src, 0, (short)0, 0, 2));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,758,"assertEquals((short)0xF0F1, Conversion.bytesToShort(src, 1, (short)0, 0, 2));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,759,"assertEquals((short)0x1234, Conversion.bytesToShort(src, 0, (short)0x1234, 0, 0));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,760,"assertEquals((short)0xCD34, Conversion.bytesToShort(src, 0, (short)0x1234, 8, 1));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,761,"// assertEquals((short)0x5678,Conversion.bytesToShort(src, 7, (short) 0x0123, 8, 2));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,764,public void testHexsToLong() throws Exception {
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,765,"String src = ""CDF1F0C10F12345678"";"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,766,"assertEquals(0x0000000000000000L, Conversion.hexsToLong(src, 0, 0L, 0, 0));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,767,"assertEquals(0x000000000000000CL, Conversion.hexsToLong(src, 0, 0L, 0, 1));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,768,"assertEquals(0x000000001C0F1FDCL, Conversion.hexsToLong(src, 0, 0L, 0, 8));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,769,"assertEquals(0x0000000001C0F1FDL, Conversion.hexsToLong(src, 1, 0L, 0, 8));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,770,assertEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,771,"0x123456798ABCDEF0L, Conversion.hexsToLong(src, 0, 0x123456798ABCDEF0L, 0, 0));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,772,assertEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,773,"0x1234567876BCDEF0L, Conversion.hexsToLong(src, 15, 0x123456798ABCDEF0L, 24, 3));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,776,public void testHexsToInt() throws Exception {
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,777,"String src = ""CDF1F0C10F12345678"";"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,778,"assertEquals(0x00000000, Conversion.hexsToInt(src, 0, 0, 0, 0));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,779,"assertEquals(0x0000000C, Conversion.hexsToInt(src, 0, 0, 0, 1));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,780,"assertEquals(0x1C0F1FDC, Conversion.hexsToInt(src, 0, 0, 0, 8));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,781,"assertEquals(0x01C0F1FD, Conversion.hexsToInt(src, 1, 0, 0, 8));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,782,"assertEquals(0x12345679, Conversion.hexsToInt(src, 0, 0x12345679, 0, 0));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,783,"assertEquals(0x87645679, Conversion.hexsToInt(src, 15, 0x12345679, 20, 3));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,786,public void testHexsToShort() throws Exception {
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,787,"String src = ""CDF1F0C10F12345678"";"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,788,"assertEquals((short)0x0000, Conversion.hexsToShort(src, 0, (short)0, 0, 0));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,789,"assertEquals((short)0x000C, Conversion.hexsToShort(src, 0, (short)0, 0, 1));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,790,"assertEquals((short)0x1FDC, Conversion.hexsToShort(src, 0, (short)0, 0, 4));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,791,"assertEquals((short)0xF1FD, Conversion.hexsToShort(src, 1, (short)0, 0, 4));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,792,"assertEquals((short)0x1234, Conversion.hexsToShort(src, 0, (short)0x1234, 0, 0));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,793,"assertEquals((short)0x8764, Conversion.hexsToShort(src, 15, (short)0x1234, 4, 3));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,796,public void testHexsToByte() throws Exception {
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,797,"String src = ""CDF1F0C10F12345678"";"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,798,"assertEquals((byte)0x00, Conversion.hexsToByte(src, 0, (byte)0, 0, 0));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,799,"assertEquals((byte)0x0C, Conversion.hexsToByte(src, 0, (byte)0, 0, 1));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,800,"assertEquals((byte)0xDC, Conversion.hexsToByte(src, 0, (byte)0, 0, 2));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,801,"assertEquals((byte)0xFD, Conversion.hexsToByte(src, 1, (byte)0, 0, 2));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,802,"assertEquals((byte)0x34, Conversion.hexsToByte(src, 0, (byte)0x34, 0, 0));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,803,"assertEquals((byte)0x84, Conversion.hexsToByte(src, 17, (byte)0x34, 4, 1));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,806,public void testBoolsToLong() throws Exception {
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,807,boolean[] src = new boolean[]{
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,808,"false, false, true, true, true, false, true, true, true, true, true, true, true,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,809,"false, false, false, true, true, true, true, false, false, false, false, false,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,810,"false, true, true, true, false, false, false, false, false, false, false, true,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,811,"true, true, true, true, false, false, false, false, true, false, false, true, true,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,812,"false, false, false, false, true, false, true, false, true, false, false, true,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,813,"true, false, true, true, true, false, false, false, false, true};// conversion of"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,814,"// ""CDF1F0C10F12345678"""
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,815,// by hexsToBools
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,817,"assertEquals(0x0000000000000000L, Conversion.boolsToLong(src, 0, 0L, 0, 0));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,818,"assertEquals(0x000000000000000CL, Conversion.boolsToLong(src, 0, 0L, 0, 1 * 4));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,819,"assertEquals(0x000000001C0F1FDCL, Conversion.boolsToLong(src, 0, 0L, 0, 8 * 4));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,820,"assertEquals(0x0000000001C0F1FDL, Conversion.boolsToLong(src, 1 * 4, 0L, 0, 8 * 4));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,821,assertEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,822,"0x123456798ABCDEF0L, Conversion.boolsToLong(src, 0, 0x123456798ABCDEF0L, 0, 0));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,823,assertEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,824,"0x1234567876BCDEF0L,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,825,"Conversion.boolsToLong(src, 15 * 4, 0x123456798ABCDEF0L, 24, 3 * 4));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,828,public void testBoolsToInt() throws Exception {
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,829,boolean[] src = new boolean[]{
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,830,"false, false, true, true, true, false, true, true, true, true, true, true, true,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,831,"false, false, false, true, true, true, true, false, false, false, false, false,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,832,"false, true, true, true, false, false, false, false, false, false, false, true,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,833,"true, true, true, true, false, false, false, false, true, false, false, true, true,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,834,"false, false, false, false, true, false, true, false, true, false, false, true,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,835,"true, false, true, true, true, false, false, false, false, true};// conversion of"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,836,"// ""CDF1F0C10F12345678"""
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,837,// by hexsToBools
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,838,"assertEquals(0x00000000, Conversion.boolsToInt(src, 0 * 4, 0, 0, 0 * 4));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,839,"assertEquals(0x0000000C, Conversion.boolsToInt(src, 0 * 4, 0, 0, 1 * 4));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,840,"assertEquals(0x1C0F1FDC, Conversion.boolsToInt(src, 0 * 4, 0, 0, 8 * 4));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,841,"assertEquals(0x01C0F1FD, Conversion.boolsToInt(src, 1 * 4, 0, 0, 8 * 4));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,842,"assertEquals(0x12345679, Conversion.boolsToInt(src, 0 * 4, 0x12345679, 0, 0 * 4));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,843,"assertEquals(0x87645679, Conversion.boolsToInt(src, 15 * 4, 0x12345679, 20, 3 * 4));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,846,public void testBoolsToShort() throws Exception {
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,847,boolean[] src = new boolean[]{
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,848,"false, false, true, true, true, false, true, true, true, true, true, true, true,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,849,"false, false, false, true, true, true, true, false, false, false, false, false,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,850,"false, true, true, true, false, false, false, false, false, false, false, true,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,851,"true, true, true, true, false, false, false, false, true, false, false, true, true,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,852,"false, false, false, false, true, false, true, false, true, false, false, true,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,853,"true, false, true, true, true, false, false, false, false, true};// conversion of"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,854,"// ""CDF1F0C10F12345678"""
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,855,// by hexsToBools
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,856,"assertEquals((short)0x0000, Conversion.boolsToShort(src, 0 * 4, (short)0, 0, 0 * 4));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,857,"assertEquals((short)0x000C, Conversion.boolsToShort(src, 0 * 4, (short)0, 0, 1 * 4));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,858,"assertEquals((short)0x1FDC, Conversion.boolsToShort(src, 0 * 4, (short)0, 0, 4 * 4));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,859,"assertEquals((short)0xF1FD, Conversion.boolsToShort(src, 1 * 4, (short)0, 0, 4 * 4));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,860,assertEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,861,"(short)0x1234, Conversion.boolsToShort(src, 0 * 4, (short)0x1234, 0, 0 * 4));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,862,assertEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,863,"(short)0x8764, Conversion.boolsToShort(src, 15 * 4, (short)0x1234, 4, 3 * 4));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,866,public void testBoolsToByte() throws Exception {
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,867,boolean[] src = new boolean[]{
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,868,"false, false, true, true, true, false, true, true, true, true, true, true, true,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,869,"false, false, false, true, true, true, true, false, false, false, false, false,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,870,"false, true, true, true, false, false, false, false, false, false, false, true,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,871,"true, true, true, true, false, false, false, false, true, false, false, true, true,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,872,"false, false, false, false, true, false, true, false, true, false, false, true,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,873,"true, false, true, true, true, false, false, false, false, true};// conversion of"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,874,"// ""CDF1F0C10F12345678"""
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,875,// by hexsToBools
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,876,"assertEquals((byte)0x00, Conversion.boolsToByte(src, 0 * 4, (byte)0, 0, 0 * 4));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,877,"assertEquals((byte)0x0C, Conversion.boolsToByte(src, 0 * 4, (byte)0, 0, 1 * 4));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,878,"assertEquals((byte)0xDC, Conversion.boolsToByte(src, 0 * 4, (byte)0, 0, 2 * 4));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,879,"assertEquals((byte)0xFD, Conversion.boolsToByte(src, 1 * 4, (byte)0, 0, 2 * 4));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,880,"assertEquals((byte)0x34, Conversion.boolsToByte(src, 0 * 4, (byte)0x34, 0, 0 * 4));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,881,"assertEquals((byte)0x84, Conversion.boolsToByte(src, 17 * 4, (byte)0x34, 4, 1 * 4));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,884,public void testLongToInts() throws Exception {
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,885,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,886,"new int[]{}, Conversion.longToInts(0x0000000000000000L, 0, new int[]{}, 0, 0));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,887,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,888,"new int[]{}, Conversion.longToInts(0x0000000000000000L, 100, new int[]{}, 0, 0));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,889,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,890,"new int[]{}, Conversion.longToInts(0x0000000000000000L, 0, new int[]{}, 100, 0));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,891,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,892,"new int[]{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF},"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,893,"Conversion.longToInts(0x1234567890ABCDEFL, 0, new int[]{-1, -1, -1, -1}, 0, 0));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,894,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,895,"new int[]{0x90ABCDEF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF},"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,896,"Conversion.longToInts(0x1234567890ABCDEFL, 0, new int[]{-1, -1, -1, -1}, 0, 1));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,897,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,898,"new int[]{0x90ABCDEF, 0x12345678, 0xFFFFFFFF, 0xFFFFFFFF},"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,899,"Conversion.longToInts(0x1234567890ABCDEFL, 0, new int[]{-1, -1, -1, -1}, 0, 2));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,900,// assertArrayEquals(new
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,901,"// int[]{0x90ABCDEF,0x12345678,0x90ABCDEF,0x12345678},Conversion.longToInts(0x1234567890ABCDEFL,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,902,"// 0,new int[]{-1,-1,-1,-1},0,4));//rejected by assertion"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,903,// assertArrayEquals(new
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,904,"// int[]{0xFFFFFFFF,0x90ABCDEF,0x12345678,0x90ABCDEF},Conversion.longToInts(0x1234567890ABCDEFL,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,905,"// 0,new int[]{-1,-1,-1,-1},1,3));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,906,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,907,"new int[]{0xFFFFFFFF, 0xFFFFFFFF, 0x90ABCDEF, 0x12345678},"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,908,"Conversion.longToInts(0x1234567890ABCDEFL, 0, new int[]{-1, -1, -1, -1}, 2, 2));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,909,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,910,"new int[]{0xFFFFFFFF, 0xFFFFFFFF, 0x90ABCDEF, 0xFFFFFFFF},"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,911,"Conversion.longToInts(0x1234567890ABCDEFL, 0, new int[]{-1, -1, -1, -1}, 2, 1));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,912,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,913,"new int[]{0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x90ABCDEF},"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,914,"Conversion.longToInts(0x1234567890ABCDEFL, 0, new int[]{-1, -1, -1, -1}, 3, 1));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,915,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,916,"new int[]{0xFFFFFFFF, 0xFFFFFFFF, 0x4855E6F7, 0xFFFFFFFF},"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,917,"Conversion.longToInts(0x1234567890ABCDEFL, 1, new int[]{-1, -1, -1, -1}, 2, 1));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,918,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,919,"new int[]{0xFFFFFFFF, 0xFFFFFFFF, 0x242AF37B, 0xFFFFFFFF},"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,920,"Conversion.longToInts(0x1234567890ABCDEFL, 2, new int[]{-1, -1, -1, -1}, 2, 1));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,921,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,922,"new int[]{0xFFFFFFFF, 0xFFFFFFFF, 0x121579BD, 0xFFFFFFFF},"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,923,"Conversion.longToInts(0x1234567890ABCDEFL, 3, new int[]{-1, -1, -1, -1}, 2, 1));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,924,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,925,"new int[]{0xFFFFFFFF, 0xFFFFFFFF, 0x890ABCDE, 0xFFFFFFFF},"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,926,"Conversion.longToInts(0x1234567890ABCDEFL, 4, new int[]{-1, -1, -1, -1}, 2, 1));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,927,// assertArrayEquals(new
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,928,"// int[]{0x4855E6F7,0x091A2B3C,0x4855E6F7,0x091A2B3C},Conversion.longToInts(0x1234567890ABCDEFL,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,929,"// 1,new int[]{-1,-1,-1,-1},0,4));//rejected by assertion"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,930,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,931,"new int[]{0x091A2B3C},"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,932,"Conversion.longToInts(0x1234567890ABCDEFL, 33, new int[]{0}, 0, 1));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,935,public void testLongToShorts() throws Exception {
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,936,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,937,"new short[]{}, Conversion.longToShorts(0x0000000000000000L, 0, new short[]{}, 0, 0));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,938,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,939,"new short[]{},"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,940,"Conversion.longToShorts(0x0000000000000000L, 100, new short[]{}, 0, 0));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,941,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,942,"new short[]{},"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,943,"Conversion.longToShorts(0x0000000000000000L, 0, new short[]{}, 100, 0));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,944,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,945,"new short[]{(short)0xFFFF, (short)0xFFFF, (short)0xFFFF, (short)0xFFFF},"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,946,"Conversion.longToShorts(0x1234567890ABCDEFL, 0, new short[]{-1, -1, -1, -1}, 0, 0));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,947,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,948,"new short[]{(short)0xCDEF, (short)0xFFFF, (short)0xFFFF, (short)0xFFFF},"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,949,"Conversion.longToShorts(0x1234567890ABCDEFL, 0, new short[]{-1, -1, -1, -1}, 0, 1));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,950,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,951,"new short[]{(short)0xCDEF, (short)0x90AB, (short)0xFFFF, (short)0xFFFF},"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,952,"Conversion.longToShorts(0x1234567890ABCDEFL, 0, new short[]{-1, -1, -1, -1}, 0, 2));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,953,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,954,"new short[]{(short)0xCDEF, (short)0x90AB, (short)0x5678, (short)0xFFFF},"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,955,"Conversion.longToShorts(0x1234567890ABCDEFL, 0, new short[]{-1, -1, -1, -1}, 0, 3));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,956,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,957,"new short[]{(short)0xCDEF, (short)0x90AB, (short)0x5678, (short)0x1234},"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,958,"Conversion.longToShorts(0x1234567890ABCDEFL, 0, new short[]{-1, -1, -1, -1}, 0, 4));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,959,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,960,"new short[]{(short)0xFFFF, (short)0xCDEF, (short)0x90AB, (short)0x5678},"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,961,"Conversion.longToShorts(0x1234567890ABCDEFL, 0, new short[]{-1, -1, -1, -1}, 1, 3));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,962,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,963,"new short[]{(short)0xFFFF, (short)0xFFFF, (short)0xCDEF, (short)0x90AB},"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,964,"Conversion.longToShorts(0x1234567890ABCDEFL, 0, new short[]{-1, -1, -1, -1}, 2, 2));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,965,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,966,"new short[]{(short)0xFFFF, (short)0xFFFF, (short)0xCDEF, (short)0xFFFF},"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,967,"Conversion.longToShorts(0x1234567890ABCDEFL, 0, new short[]{-1, -1, -1, -1}, 2, 1));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,968,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,969,"new short[]{(short)0xFFFF, (short)0xFFFF, (short)0xFFFF, (short)0xCDEF},"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,970,"Conversion.longToShorts(0x1234567890ABCDEFL, 0, new short[]{-1, -1, -1, -1}, 3, 1));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,971,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,972,"new short[]{(short)0xFFFF, (short)0xFFFF, (short)0xE6F7, (short)0xFFFF},"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,973,"Conversion.longToShorts(0x1234567890ABCDEFL, 1, new short[]{-1, -1, -1, -1}, 2, 1));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,974,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,975,"new short[]{(short)0xFFFF, (short)0xFFFF, (short)0xF37B, (short)0xFFFF},"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,976,"Conversion.longToShorts(0x1234567890ABCDEFL, 2, new short[]{-1, -1, -1, -1}, 2, 1));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,977,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,978,"new short[]{(short)0xFFFF, (short)0xFFFF, (short)0x79BD, (short)0xFFFF},"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,979,"Conversion.longToShorts(0x1234567890ABCDEFL, 3, new short[]{-1, -1, -1, -1}, 2, 1));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,980,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,981,"new short[]{(short)0xFFFF, (short)0xFFFF, (short)0xBCDE, (short)0xFFFF},"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,982,"Conversion.longToShorts(0x1234567890ABCDEFL, 4, new short[]{-1, -1, -1, -1}, 2, 1));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,983,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,984,"new short[]{(short)0xE6F7, (short)0x4855, (short)0x2B3C, (short)0x091A},"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,985,"Conversion.longToShorts(0x1234567890ABCDEFL, 1, new short[]{-1, -1, -1, -1}, 0, 4));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,986,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,987,"new short[]{(short)0x2B3C},"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,988,"Conversion.longToShorts(0x1234567890ABCDEFL, 33, new short[]{0}, 0, 1));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,991,public void testIntToShorts() throws Exception {
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,992,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,993,"new short[]{}, Conversion.intToShorts(0x00000000, 0, new short[]{}, 0, 0));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,994,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,995,"new short[]{}, Conversion.intToShorts(0x00000000, 100, new short[]{}, 0, 0));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,996,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,997,"new short[]{}, Conversion.intToShorts(0x00000000, 0, new short[]{}, 100, 0));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,998,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,999,"new short[]{(short)0xFFFF, (short)0xFFFF, (short)0xFFFF, (short)0xFFFF},"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1000,"Conversion.intToShorts(0x12345678, 0, new short[]{-1, -1, -1, -1}, 0, 0));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1001,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1002,"new short[]{(short)0x5678, (short)0xFFFF, (short)0xFFFF, (short)0xFFFF},"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1003,"Conversion.intToShorts(0x12345678, 0, new short[]{-1, -1, -1, -1}, 0, 1));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1004,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1005,"new short[]{(short)0x5678, (short)0x1234, (short)0xFFFF, (short)0xFFFF},"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1006,"Conversion.intToShorts(0x12345678, 0, new short[]{-1, -1, -1, -1}, 0, 2));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1007,// assertArrayEquals(new
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1008,"// short[]{(short)0x5678,(short)0x1234,(short)0x5678,(short)0xFFFF},Conversion.intToShorts(0x12345678,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1009,"// 0,new short[]{-1,-1,-1,-1},0,3));//rejected by assertion"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1010,// assertArrayEquals(new
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1011,"// short[]{(short)0x5678,(short)0x1234,(short)0x5678,(short)0x1234},Conversion.intToShorts(0x12345678,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1012,"// 0,new short[]{-1,-1,-1,-1},0,4));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1013,// assertArrayEquals(new
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1014,"// short[]{(short)0xFFFF,(short)0x5678,(short)0x1234,(short)0x5678},Conversion.intToShorts(0x12345678,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1015,"// 0,new short[]{-1,-1,-1,-1},1,3));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1016,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1017,"new short[]{(short)0xFFFF, (short)0xFFFF, (short)0x5678, (short)0x1234},"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1018,"Conversion.intToShorts(0x12345678, 0, new short[]{-1, -1, -1, -1}, 2, 2));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1019,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1020,"new short[]{(short)0xFFFF, (short)0xFFFF, (short)0x5678, (short)0xFFFF},"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1021,"Conversion.intToShorts(0x12345678, 0, new short[]{-1, -1, -1, -1}, 2, 1));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1022,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1023,"new short[]{(short)0xFFFF, (short)0xFFFF, (short)0xFFFF, (short)0x5678},"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1024,"Conversion.intToShorts(0x12345678, 0, new short[]{-1, -1, -1, -1}, 3, 1));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1025,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1026,"new short[]{(short)0xFFFF, (short)0xFFFF, (short)0x2B3C, (short)0xFFFF},"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1027,"Conversion.intToShorts(0x12345678, 1, new short[]{-1, -1, -1, -1}, 2, 1));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1028,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1029,"new short[]{(short)0xFFFF, (short)0xFFFF, (short)0x159E, (short)0xFFFF},"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1030,"Conversion.intToShorts(0x12345678, 2, new short[]{-1, -1, -1, -1}, 2, 1));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1031,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1032,"new short[]{(short)0xFFFF, (short)0xFFFF, (short)0x8ACF, (short)0xFFFF},"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1033,"Conversion.intToShorts(0x12345678, 3, new short[]{-1, -1, -1, -1}, 2, 1));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1034,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1035,"new short[]{(short)0xFFFF, (short)0xFFFF, (short)0x4567, (short)0xFFFF},"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1036,"Conversion.intToShorts(0x12345678, 4, new short[]{-1, -1, -1, -1}, 2, 1));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1037,// assertArrayEquals(new
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1038,"// short[]{(short)0xE6F7,(short)0x4855,(short)0x2B3C,(short)0x091A},Conversion.intToShorts(0x12345678,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1039,"// 1,new short[]{-1,-1,-1,-1},0,4));//rejected by assertion"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1040,"// assertArrayEquals(new short[]{(short)0x2B3C},Conversion.intToShorts(0x12345678,33,new"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1041,"// short[]{0},0,1));//rejected by assertion"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1042,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1043,"new short[]{(short)0x091A},"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1044,"Conversion.intToShorts(0x12345678, 17, new short[]{0}, 0, 1));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1047,public void testLongToBytes() throws Exception {
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1048,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1049,"new byte[]{}, Conversion.longToBytes(0x0000000000000000L, 0, new byte[]{}, 0, 0));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1050,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1051,"new byte[]{}, Conversion.longToBytes(0x0000000000000000L, 100, new byte[]{}, 0, 0));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1052,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1053,"new byte[]{}, Conversion.longToBytes(0x0000000000000000L, 0, new byte[]{}, 100, 0));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1054,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1055,new byte[]{
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1056,"(byte)0xFF, (byte)0xFF, (byte)0xFF, (byte)0xFF, (byte)0xFF, (byte)0xFF,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1057,"(byte)0xFF, (byte)0xFF, (byte)0xFF, (byte)0xFF, (byte)0xFF},"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1058,"Conversion.longToBytes(0x1234567890ABCDEFL, 0, new byte[]{"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1059,"-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1}, 0, 0));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1060,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1061,new byte[]{
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1062,"(byte)0xEF, (byte)0xFF, (byte)0xFF, (byte)0xFF, (byte)0xFF, (byte)0xFF,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1063,"(byte)0xFF, (byte)0xFF, (byte)0xFF, (byte)0xFF, (byte)0xFF},"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1064,"Conversion.longToBytes(0x1234567890ABCDEFL, 0, new byte[]{"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1065,"-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1}, 0, 1));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1066,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1067,new byte[]{
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1068,"(byte)0xEF, (byte)0xCD, (byte)0xFF, (byte)0xFF, (byte)0xFF, (byte)0xFF,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1069,"(byte)0xFF, (byte)0xFF, (byte)0xFF, (byte)0xFF, (byte)0xFF},"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1070,"Conversion.longToBytes(0x1234567890ABCDEFL, 0, new byte[]{"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1071,"-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1}, 0, 2));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1072,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1073,new byte[]{
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1074,"(byte)0xEF, (byte)0xCD, (byte)0xAB, (byte)0x90, (byte)0xFF, (byte)0xFF,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1075,"(byte)0xFF, (byte)0xFF, (byte)0xFF, (byte)0xFF, (byte)0xFF},"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1076,"Conversion.longToBytes(0x1234567890ABCDEFL, 0, new byte[]{"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1077,"-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1}, 0, 4));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1078,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1079,new byte[]{
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1080,"(byte)0xEF, (byte)0xCD, (byte)0xAB, (byte)0x90, (byte)0x78, (byte)0x56,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1081,"(byte)0x34, (byte)0xFF, (byte)0xFF, (byte)0xFF, (byte)0xFF},"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1082,"Conversion.longToBytes(0x1234567890ABCDEFL, 0, new byte[]{"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1083,"-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1}, 0, 7));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1084,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1085,new byte[]{
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1086,"(byte)0xEF, (byte)0xCD, (byte)0xAB, (byte)0x90, (byte)0x78, (byte)0x56,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1087,"(byte)0x34, (byte)0x12, (byte)0xFF, (byte)0xFF, (byte)0xFF},"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1088,"Conversion.longToBytes(0x1234567890ABCDEFL, 0, new byte[]{"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1089,"-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1}, 0, 8));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1090,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1091,new byte[]{
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1092,"(byte)0xFF, (byte)0xFF, (byte)0xFF, (byte)0xEF, (byte)0xFF, (byte)0xFF,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1093,"(byte)0xFF, (byte)0xFF, (byte)0xFF, (byte)0xFF, (byte)0xFF},"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1094,"Conversion.longToBytes(0x1234567890ABCDEFL, 0, new byte[]{"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1095,"-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1}, 3, 1));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1096,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1097,new byte[]{
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1098,"(byte)0xFF, (byte)0xFF, (byte)0xFF, (byte)0xEF, (byte)0xCD, (byte)0xFF,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1099,"(byte)0xFF, (byte)0xFF, (byte)0xFF, (byte)0xFF, (byte)0xFF},"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1100,"Conversion.longToBytes(0x1234567890ABCDEFL, 0, new byte[]{"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1101,"-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1}, 3, 2));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1102,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1103,new byte[]{
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1104,"(byte)0xFF, (byte)0xFF, (byte)0xFF, (byte)0xEF, (byte)0xCD, (byte)0xAB,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1105,"(byte)0x90, (byte)0xFF, (byte)0xFF, (byte)0xFF, (byte)0xFF},"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1106,"Conversion.longToBytes(0x1234567890ABCDEFL, 0, new byte[]{"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1107,"-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1}, 3, 4));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1108,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1109,new byte[]{
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1110,"(byte)0xFF, (byte)0xFF, (byte)0xFF, (byte)0xEF, (byte)0xCD, (byte)0xAB,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1111,"(byte)0x90, (byte)0x78, (byte)0x56, (byte)0x34, (byte)0xFF},"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1112,"Conversion.longToBytes(0x1234567890ABCDEFL, 0, new byte[]{"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1113,"-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1}, 3, 7));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1114,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1115,new byte[]{
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1116,"(byte)0xFF, (byte)0xFF, (byte)0xFF, (byte)0xEF, (byte)0xCD, (byte)0xAB,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1117,"(byte)0x90, (byte)0x78, (byte)0x56, (byte)0x34, (byte)0x12},"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1118,"Conversion.longToBytes(0x1234567890ABCDEFL, 0, new byte[]{"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1119,"-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1}, 3, 8));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1120,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1121,new byte[]{
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1122,"(byte)0xF7, (byte)0xFF, (byte)0xFF, (byte)0xFF, (byte)0xFF, (byte)0xFF,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1123,"(byte)0xFF, (byte)0xFF, (byte)0xFF, (byte)0xFF, (byte)0xFF},"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1124,"Conversion.longToBytes(0x1234567890ABCDEFL, 1, new byte[]{"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1125,"-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1}, 0, 1));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1126,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1127,new byte[]{
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1128,"(byte)0x7B, (byte)0xFF, (byte)0xFF, (byte)0xFF, (byte)0xFF, (byte)0xFF,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1129,"(byte)0xFF, (byte)0xFF, (byte)0xFF, (byte)0xFF, (byte)0xFF},"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1130,"Conversion.longToBytes(0x1234567890ABCDEFL, 2, new byte[]{"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1131,"-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1}, 0, 1));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1132,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1133,new byte[]{
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1134,"(byte)0xFF, (byte)0x00, (byte)0xFF, (byte)0x6F, (byte)0x5E, (byte)0x85,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1135,"(byte)0xC4, (byte)0xB3, (byte)0xA2, (byte)0x91, (byte)0x00},"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1136,"Conversion.longToBytes(0x1234567890ABCDEFL, 5, new byte[]{"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1137,"-1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1}, 3, 8));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1138,// assertArrayEquals(new
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1139,"// byte[]{(byte)0xFF,(byte)0x00,(byte)0xFF,(byte)0x5E,(byte)0x85,(byte)0xC4,(byte)0xB3,(byte)0xA2,(byte)0x91,(byte)0x00,(byte)0x00},Conversion.longToBytes(0x1234567890ABCDEFL,13,new"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1140,"// byte[]{-1, 0,-1,-1,-1,-1,-1,-1,-1,-1,-1},3,8));//rejected by assertion"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1141,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1142,new byte[]{
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1143,"(byte)0xFF, (byte)0x00, (byte)0xFF, (byte)0x5E, (byte)0x85, (byte)0xC4,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1144,"(byte)0xB3, (byte)0xA2, (byte)0x91, (byte)0x00, (byte)0xFF},"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1145,"Conversion.longToBytes(0x1234567890ABCDEFL, 13, new byte[]{"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1146,"-1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1}, 3, 7));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1149,public void testIntToBytes() throws Exception {
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1150,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1151,"new byte[]{}, Conversion.intToBytes(0x00000000, 0, new byte[]{}, 0, 0));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1152,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1153,"new byte[]{}, Conversion.intToBytes(0x00000000, 100, new byte[]{}, 0, 0));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1154,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1155,"new byte[]{}, Conversion.intToBytes(0x00000000, 0, new byte[]{}, 100, 0));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1156,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1157,new byte[]{
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1158,"(byte)0xFF, (byte)0xFF, (byte)0xFF, (byte)0xFF, (byte)0xFF, (byte)0xFF,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1159,"(byte)0xFF, (byte)0xFF, (byte)0xFF, (byte)0xFF, (byte)0xFF},"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1160,"Conversion.intToBytes(0x90ABCDEF, 0, new byte[]{"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1161,"-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1}, 0, 0));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1162,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1163,new byte[]{
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1164,"(byte)0xEF, (byte)0xFF, (byte)0xFF, (byte)0xFF, (byte)0xFF, (byte)0xFF,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1165,"(byte)0xFF, (byte)0xFF, (byte)0xFF, (byte)0xFF, (byte)0xFF},"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1166,"Conversion.intToBytes(0x90ABCDEF, 0, new byte[]{"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1167,"-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1}, 0, 1));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1168,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1169,new byte[]{
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1170,"(byte)0xEF, (byte)0xCD, (byte)0xFF, (byte)0xFF, (byte)0xFF, (byte)0xFF,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1171,"(byte)0xFF, (byte)0xFF, (byte)0xFF, (byte)0xFF, (byte)0xFF},"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1172,"Conversion.intToBytes(0x90ABCDEF, 0, new byte[]{"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1173,"-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1}, 0, 2));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1174,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1175,new byte[]{
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1176,"(byte)0xEF, (byte)0xCD, (byte)0xAB, (byte)0x90, (byte)0xFF, (byte)0xFF,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1177,"(byte)0xFF, (byte)0xFF, (byte)0xFF, (byte)0xFF, (byte)0xFF},"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1178,"Conversion.intToBytes(0x90ABCDEF, 0, new byte[]{"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1179,"-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1}, 0, 4));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1180,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1181,new byte[]{
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1182,"(byte)0xFF, (byte)0xFF, (byte)0xFF, (byte)0xEF, (byte)0xFF, (byte)0xFF,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1183,"(byte)0xFF, (byte)0xFF, (byte)0xFF, (byte)0xFF, (byte)0xFF},"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1184,"Conversion.intToBytes(0x90ABCDEF, 0, new byte[]{"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1185,"-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1}, 3, 1));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1186,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1187,new byte[]{
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1188,"(byte)0xFF, (byte)0xFF, (byte)0xFF, (byte)0xEF, (byte)0xCD, (byte)0xFF,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1189,"(byte)0xFF, (byte)0xFF, (byte)0xFF, (byte)0xFF, (byte)0xFF},"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1190,"Conversion.intToBytes(0x90ABCDEF, 0, new byte[]{"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1191,"-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1}, 3, 2));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1192,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1193,new byte[]{
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1194,"(byte)0xFF, (byte)0xFF, (byte)0xFF, (byte)0xEF, (byte)0xCD, (byte)0xAB,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1195,"(byte)0x90, (byte)0xFF, (byte)0xFF, (byte)0xFF, (byte)0xFF},"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1196,"Conversion.intToBytes(0x90ABCDEF, 0, new byte[]{"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1197,"-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1}, 3, 4));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1198,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1199,new byte[]{
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1200,"(byte)0xF7, (byte)0xFF, (byte)0xFF, (byte)0xFF, (byte)0xFF, (byte)0xFF,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1201,"(byte)0xFF, (byte)0xFF, (byte)0xFF, (byte)0xFF, (byte)0xFF},"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1202,"Conversion.intToBytes(0x90ABCDEF, 1, new byte[]{"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1203,"-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1}, 0, 1));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1204,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1205,new byte[]{
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1206,"(byte)0x7B, (byte)0xFF, (byte)0xFF, (byte)0xFF, (byte)0xFF, (byte)0xFF,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1207,"(byte)0xFF, (byte)0xFF, (byte)0xFF, (byte)0xFF, (byte)0xFF},"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1208,"Conversion.intToBytes(0x90ABCDEF, 2, new byte[]{"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1209,"-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1}, 0, 1));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1210,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1211,new byte[]{
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1212,"(byte)0xFF, (byte)0x00, (byte)0xFF, (byte)0x6F, (byte)0x5E, (byte)0x85,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1213,"(byte)0xFC, (byte)0xFF, (byte)0xFF, (byte)0xFF, (byte)0xFF},"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1214,"Conversion.intToBytes(0x90ABCDEF, 5, new byte[]{"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1215,"-1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1}, 3, 4));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1216,// assertArrayEquals(new
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1217,"// byte[]{(byte)0xFF,(byte)0x00,(byte)0xFF,(byte)0x5E,(byte)0x85,(byte)0xFC,(byte)0x00,(byte)0xFF,(byte)0xFF,(byte)0xFF,(byte)0xFF},Conversion.intToBytes(0x90ABCDEF,13,new"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1218,"// byte[]{-1, 0,-1,-1,-1,-1,-1,-1,-1,-1,-1},3,4));//rejected by assertion"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1219,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1220,new byte[]{
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1221,"(byte)0xFF, (byte)0x00, (byte)0xFF, (byte)0x5E, (byte)0x85, (byte)0xFC,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1222,"(byte)0xFF, (byte)0xFF, (byte)0xFF, (byte)0xFF, (byte)0xFF},"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1223,"Conversion.intToBytes(0x90ABCDEF, 13, new byte[]{"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1224,"-1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1}, 3, 3));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1227,public void testShortToBytes() throws Exception {
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1228,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1229,"new byte[]{}, Conversion.shortToBytes((short)0x0000, 0, new byte[]{}, 0, 0));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1230,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1231,"new byte[]{}, Conversion.shortToBytes((short)0x0000, 100, new byte[]{}, 0, 0));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1232,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1233,"new byte[]{}, Conversion.shortToBytes((short)0x0000, 0, new byte[]{}, 100, 0));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1234,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1235,new byte[]{
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1236,"(byte)0xFF, (byte)0xFF, (byte)0xFF, (byte)0xFF, (byte)0xFF, (byte)0xFF,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1237,"(byte)0xFF}, Conversion.shortToBytes((short)0xCDEF, 0, new byte[]{"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1238,"-1, -1, -1, -1, -1, -1, -1}, 0, 0));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1239,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1240,new byte[]{
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1241,"(byte)0xEF, (byte)0xFF, (byte)0xFF, (byte)0xFF, (byte)0xFF, (byte)0xFF,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1242,"(byte)0xFF}, Conversion.shortToBytes((short)0xCDEF, 0, new byte[]{"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1243,"-1, -1, -1, -1, -1, -1, -1}, 0, 1));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1244,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1245,new byte[]{
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1246,"(byte)0xEF, (byte)0xCD, (byte)0xFF, (byte)0xFF, (byte)0xFF, (byte)0xFF,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1247,"(byte)0xFF}, Conversion.shortToBytes((short)0xCDEF, 0, new byte[]{"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1248,"-1, -1, -1, -1, -1, -1, -1}, 0, 2));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1249,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1250,new byte[]{
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1251,"(byte)0xFF, (byte)0xFF, (byte)0xFF, (byte)0xEF, (byte)0xFF, (byte)0xFF,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1252,"(byte)0xFF}, Conversion.shortToBytes((short)0xCDEF, 0, new byte[]{"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1253,"-1, -1, -1, -1, -1, -1, -1}, 3, 1));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1254,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1255,new byte[]{
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1256,"(byte)0xFF, (byte)0xFF, (byte)0xFF, (byte)0xEF, (byte)0xCD, (byte)0xFF,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1257,"(byte)0xFF}, Conversion.shortToBytes((short)0xCDEF, 0, new byte[]{"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1258,"-1, -1, -1, -1, -1, -1, -1}, 3, 2));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1259,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1260,new byte[]{
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1261,"(byte)0xF7, (byte)0xFF, (byte)0xFF, (byte)0xFF, (byte)0xFF, (byte)0xFF,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1262,"(byte)0xFF}, Conversion.shortToBytes((short)0xCDEF, 1, new byte[]{"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1263,"-1, -1, -1, -1, -1, -1, -1}, 0, 1));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1264,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1265,new byte[]{
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1266,"(byte)0x7B, (byte)0xFF, (byte)0xFF, (byte)0xFF, (byte)0xFF, (byte)0xFF,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1267,"(byte)0xFF}, Conversion.shortToBytes((short)0xCDEF, 2, new byte[]{"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1268,"-1, -1, -1, -1, -1, -1, -1}, 0, 1));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1269,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1270,new byte[]{
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1271,"(byte)0xFF, (byte)0x00, (byte)0xFF, (byte)0x6F, (byte)0xFE, (byte)0xFF,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1272,"(byte)0xFF}, Conversion.shortToBytes((short)0xCDEF, 5, new byte[]{"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1273,"-1, 0, -1, -1, -1, -1, -1}, 3, 2));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1274,// assertArrayEquals(new
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1275,"// byte[]{(byte)0xFF,(byte)0x00,(byte)0xFF,(byte)0x5E,(byte)0xFF,(byte)0xFF,(byte)0xFF},Conversion.shortToBytes((short)0xCDEF,13,new"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1276,"// byte[]{-1, 0,-1,-1,-1,-1,-1},3,2));//rejected by assertion"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1277,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1278,new byte[]{
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1279,"(byte)0xFF, (byte)0x00, (byte)0xFF, (byte)0xFE, (byte)0xFF, (byte)0xFF,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1280,"(byte)0xFF}, Conversion.shortToBytes((short)0xCDEF, 13, new byte[]{"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1281,"-1, 0, -1, -1, -1, -1, -1}, 3, 1));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1284,public void testLongToHexs() throws Exception {
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1285,"assertEquals("""", Conversion.longToHexs(0x0000000000000000L, 0, """", 0, 0));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1286,"assertEquals("""", Conversion.longToHexs(0x0000000000000000L, 100, """", 0, 0));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1287,"assertEquals("""", Conversion.longToHexs(0x0000000000000000L, 0, """", 100, 0));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1288,assertEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1289,"""FFFFFFFFFFFFFFFFFFFFFFFF"","
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1290,"Conversion.longToHexs(0x1234567890ABCDEFL, 0, ""FFFFFFFFFFFFFFFFFFFFFFFF"", 0, 0));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1291,assertEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1292,"""3FFFFFFFFFFFFFFFFFFFFFFF"","
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1293,"Conversion.longToHexs(0x1234567890ABCDE3L, 0, ""FFFFFFFFFFFFFFFFFFFFFFFF"", 0, 1));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1294,assertEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1295,"""FEFFFFFFFFFFFFFFFFFFFFFF"","
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1296,"Conversion.longToHexs(0x1234567890ABCDEFL, 0, ""FFFFFFFFFFFFFFFFFFFFFFFF"", 0, 2));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1297,assertEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1298,"""FEDCFFFFFFFFFFFFFFFFFFFF"","
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1299,"Conversion.longToHexs(0x1234567890ABCDEFL, 0, ""FFFFFFFFFFFFFFFFFFFFFFFF"", 0, 4));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1300,assertEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1301,"""FEDCBA098765432FFFFFFFFF"","
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1302,"Conversion.longToHexs(0x1234567890ABCDEFL, 0, ""FFFFFFFFFFFFFFFFFFFFFFFF"", 0, 15));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1303,assertEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1304,"""FEDCBA0987654321FFFFFFFF"","
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1305,"Conversion.longToHexs(0x1234567890ABCDEFL, 0, ""FFFFFFFFFFFFFFFFFFFFFFFF"", 0, 16));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1306,assertEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1307,"""FFF3FFFFFFFFFFFFFFFFFFFF"","
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1308,"Conversion.longToHexs(0x1234567890ABCDE3L, 0, ""FFFFFFFFFFFFFFFFFFFFFFFF"", 3, 1));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1309,assertEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1310,"""FFFFEFFFFFFFFFFFFFFFFFFF"","
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1311,"Conversion.longToHexs(0x1234567890ABCDEFL, 0, ""FFFFFFFFFFFFFFFFFFFFFFFF"", 3, 2));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1312,assertEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1313,"""FFFFEDCFFFFFFFFFFFFFFFFF"","
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1314,"Conversion.longToHexs(0x1234567890ABCDEFL, 0, ""FFFFFFFFFFFFFFFFFFFFFFFF"", 3, 4));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1315,assertEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1316,"""FFFFEDCBA098765432FFFFFF"","
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1317,"Conversion.longToHexs(0x1234567890ABCDEFL, 0, ""FFFFFFFFFFFFFFFFFFFFFFFF"", 3, 15));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1318,assertEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1319,"""FFFFEDCBA0987654321FFFFF"","
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1320,"Conversion.longToHexs(0x1234567890ABCDEFL, 0, ""FFFFFFFFFFFFFFFFFFFFFFFF"", 3, 16));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1321,assertEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1322,"""7FFFFFFFFFFFFFFFFFFFFFFF"","
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1323,"Conversion.longToHexs(0x1234567890ABCDEFL, 1, ""FFFFFFFFFFFFFFFFFFFFFFFF"", 0, 1));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1324,assertEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1325,"""BFFFFFFFFFFFFFFFFFFFFFFF"","
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1326,"Conversion.longToHexs(0x1234567890ABCDEFL, 2, ""FFFFFFFFFFFFFFFFFFFFFFFF"", 0, 1));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1327,assertEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1328,"""FFFDB975121FCA86420FFFFF"","
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1329,"Conversion.longToHexs(0x1234567890ABCDEFL, 3, ""FFFFFFFFFFFFFFFFFFFFFFFF"", 3, 16));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1330,"// assertEquals(""FFFFFFFFFFFFFFFFFFFFFFFF"",Conversion.longToHexs(0x1234567890ABCDEFL,4,""FFFFFFFFFFFFFFFFFFFFFFFF"",3,16));//rejected"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1331,// by assertion
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1332,assertEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1333,"""FFFEDCBA0987654321FFFFFF"","
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1334,"Conversion.longToHexs(0x1234567890ABCDEFL, 4, ""FFFFFFFFFFFFFFFFFFFFFFFF"", 3, 15));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1337,public void testIntToHexs() throws Exception {
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1338,"assertEquals("""", Conversion.intToHexs(0x00000000, 0, """", 0, 0));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1339,"assertEquals("""", Conversion.intToHexs(0x00000000, 100, """", 0, 0));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1340,"assertEquals("""", Conversion.intToHexs(0x00000000, 0, """", 100, 0));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1341,assertEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1342,"""FFFFFFFFFFFFFFFFFFFFFFFF"","
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1343,"Conversion.intToHexs(0x90ABCDEF, 0, ""FFFFFFFFFFFFFFFFFFFFFFFF"", 0, 0));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1344,assertEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1345,"""3FFFFFFFFFFFFFFFFFFFFFFF"","
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1346,"Conversion.intToHexs(0x90ABCDE3, 0, ""FFFFFFFFFFFFFFFFFFFFFFFF"", 0, 1));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1347,assertEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1348,"""FEFFFFFFFFFFFFFFFFFFFFFF"","
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1349,"Conversion.intToHexs(0x90ABCDEF, 0, ""FFFFFFFFFFFFFFFFFFFFFFFF"", 0, 2));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1350,assertEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1351,"""FEDCFFFFFFFFFFFFFFFFFFFF"","
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1352,"Conversion.intToHexs(0x90ABCDEF, 0, ""FFFFFFFFFFFFFFFFFFFFFFFF"", 0, 4));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1353,assertEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1354,"""FEDCBA0FFFFFFFFFFFFFFFFF"","
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1355,"Conversion.intToHexs(0x90ABCDEF, 0, ""FFFFFFFFFFFFFFFFFFFFFFFF"", 0, 7));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1356,assertEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1357,"""FEDCBA09FFFFFFFFFFFFFFFF"","
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1358,"Conversion.intToHexs(0x90ABCDEF, 0, ""FFFFFFFFFFFFFFFFFFFFFFFF"", 0, 8));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1359,assertEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1360,"""FFF3FFFFFFFFFFFFFFFFFFFF"","
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1361,"Conversion.intToHexs(0x90ABCDE3, 0, ""FFFFFFFFFFFFFFFFFFFFFFFF"", 3, 1));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1362,assertEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1363,"""FFFFEFFFFFFFFFFFFFFFFFFF"","
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1364,"Conversion.intToHexs(0x90ABCDEF, 0, ""FFFFFFFFFFFFFFFFFFFFFFFF"", 3, 2));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1365,assertEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1366,"""FFFFEDCFFFFFFFFFFFFFFFFF"","
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1367,"Conversion.intToHexs(0x90ABCDEF, 0, ""FFFFFFFFFFFFFFFFFFFFFFFF"", 3, 4));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1368,assertEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1369,"""FFFFEDCBA0FFFFFFFFFFFFFF"","
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1370,"Conversion.intToHexs(0x90ABCDEF, 0, ""FFFFFFFFFFFFFFFFFFFFFFFF"", 3, 7));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1371,assertEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1372,"""FFFFEDCBA09FFFFFFFFFFFFF"","
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1373,"Conversion.intToHexs(0x90ABCDEF, 0, ""FFFFFFFFFFFFFFFFFFFFFFFF"", 3, 8));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1374,assertEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1375,"""7FFFFFFFFFFFFFFFFFFFFFFF"","
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1376,"Conversion.intToHexs(0x90ABCDEF, 1, ""FFFFFFFFFFFFFFFFFFFFFFFF"", 0, 1));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1377,assertEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1378,"""BFFFFFFFFFFFFFFFFFFFFFFF"","
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1379,"Conversion.intToHexs(0x90ABCDEF, 2, ""FFFFFFFFFFFFFFFFFFFFFFFF"", 0, 1));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1380,assertEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1381,"""FFFDB97512FFFFFFFFFFFFFF"","
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1382,"Conversion.intToHexs(0x90ABCDEF, 3, ""FFFFFFFFFFFFFFFFFFFFFFFF"", 3, 8));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1383,"// assertEquals(""FFFFFFFFFFFFFFFFFFFFFFFF"",Conversion.intToHexs(0x90ABCDEF,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1384,"// 4,""FFFFFFFFFFFFFFFFFFFFFFFF"",3,8));//rejected by assertion"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1385,assertEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1386,"""FFFEDCBA09FFFFFFFFFFFFFF"","
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1387,"Conversion.intToHexs(0x90ABCDEF, 4, ""FFFFFFFFFFFFFFFFFFFFFFFF"", 3, 7));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1390,public void testShortToHexs() throws Exception {
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1391,"assertEquals("""", Conversion.shortToHexs((short)0x0000, 0, """", 0, 0));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1392,"assertEquals("""", Conversion.shortToHexs((short)0x0000, 100, """", 0, 0));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1393,"assertEquals("""", Conversion.shortToHexs((short)0x0000, 0, """", 100, 0));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1394,assertEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1395,"""FFFFFFFFFFFFFFFFFFFFFFFF"","
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1396,"Conversion.shortToHexs((short)0xCDEF, 0, ""FFFFFFFFFFFFFFFFFFFFFFFF"", 0, 0));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1397,assertEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1398,"""3FFFFFFFFFFFFFFFFFFFFFFF"","
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1399,"Conversion.shortToHexs((short)0xCDE3, 0, ""FFFFFFFFFFFFFFFFFFFFFFFF"", 0, 1));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1400,assertEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1401,"""FEFFFFFFFFFFFFFFFFFFFFFF"","
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1402,"Conversion.shortToHexs((short)0xCDEF, 0, ""FFFFFFFFFFFFFFFFFFFFFFFF"", 0, 2));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1403,assertEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1404,"""FEDFFFFFFFFFFFFFFFFFFFFF"","
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1405,"Conversion.shortToHexs((short)0xCDEF, 0, ""FFFFFFFFFFFFFFFFFFFFFFFF"", 0, 3));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1406,assertEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1407,"""FEDCFFFFFFFFFFFFFFFFFFFF"","
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1408,"Conversion.shortToHexs((short)0xCDEF, 0, ""FFFFFFFFFFFFFFFFFFFFFFFF"", 0, 4));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1409,assertEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1410,"""FFF3FFFFFFFFFFFFFFFFFFFF"","
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1411,"Conversion.shortToHexs((short)0xCDE3, 0, ""FFFFFFFFFFFFFFFFFFFFFFFF"", 3, 1));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1412,assertEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1413,"""FFFFEFFFFFFFFFFFFFFFFFFF"","
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1414,"Conversion.shortToHexs((short)0xCDEF, 0, ""FFFFFFFFFFFFFFFFFFFFFFFF"", 3, 2));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1415,assertEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1416,"""7FFFFFFFFFFFFFFFFFFFFFFF"","
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1417,"Conversion.shortToHexs((short)0xCDEF, 1, ""FFFFFFFFFFFFFFFFFFFFFFFF"", 0, 1));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1418,assertEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1419,"""BFFFFFFFFFFFFFFFFFFFFFFF"","
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1420,"Conversion.shortToHexs((short)0xCDEF, 2, ""FFFFFFFFFFFFFFFFFFFFFFFF"", 0, 1));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1421,assertEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1422,"""FFFDB9FFFFFFFFFFFFFFFFFF"","
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1423,"Conversion.shortToHexs((short)0xCDEF, 3, ""FFFFFFFFFFFFFFFFFFFFFFFF"", 3, 4));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1424,"// assertEquals(""FFFFFFFFFFFFFFFFFFFFFFFF"",Conversion.shortToHexs((short)0xCDEF,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1425,"// 4,""FFFFFFFFFFFFFFFFFFFFFFFF"",3,4));//rejected by assertion"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1426,assertEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1427,"""FFFEDCFFFFFFFFFFFFFFFFFF"","
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1428,"Conversion.shortToHexs((short)0xCDEF, 4, ""FFFFFFFFFFFFFFFFFFFFFFFF"", 3, 3));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1431,public void testByteToHexs() throws Exception {
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1432,"assertEquals("""", Conversion.byteToHexs((byte)0x00, 0, """", 0, 0));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1433,"assertEquals("""", Conversion.byteToHexs((byte)0x00, 100, """", 0, 0));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1434,"assertEquals("""", Conversion.byteToHexs((byte)0x00, 0, """", 100, 0));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1435,"assertEquals(""00000"", Conversion.byteToHexs((byte)0xEF, 0, ""00000"", 0, 0));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1436,"assertEquals(""F0000"", Conversion.byteToHexs((byte)0xEF, 0, ""00000"", 0, 1));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1437,"assertEquals(""FE000"", Conversion.byteToHexs((byte)0xEF, 0, ""00000"", 0, 2));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1438,"assertEquals(""000F0"", Conversion.byteToHexs((byte)0xEF, 0, ""00000"", 3, 1));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1439,"assertEquals(""000FE"", Conversion.byteToHexs((byte)0xEF, 0, ""00000"", 3, 2));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1440,"assertEquals(""70000"", Conversion.byteToHexs((byte)0xEF, 1, ""00000"", 0, 1));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1441,"assertEquals(""B0000"", Conversion.byteToHexs((byte)0xEF, 2, ""00000"", 0, 1));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1442,"assertEquals(""000DF"", Conversion.byteToHexs((byte)0xEF, 3, ""00000"", 3, 2));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1443,"// assertEquals(""00000"",Conversion.byteToHexs((byte)0xEF, 4,""00000"",3,2));//rejected by"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1444,// assertion
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1445,"assertEquals(""000E0"", Conversion.byteToHexs((byte)0xEF, 4, ""00000"", 3, 1));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1448,public void testLongToBools() throws Exception {
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1449,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1450,"new boolean[]{},"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1451,"Conversion.longToBools(0x0000000000000000L, 0, new boolean[]{}, 0, 0));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1452,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1453,"new boolean[]{},"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1454,"Conversion.longToBools(0x0000000000000000L, 100, new boolean[]{}, 0, 0));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1455,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1456,"new boolean[]{},"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1457,"Conversion.longToBools(0x0000000000000000L, 0, new boolean[]{}, 100, 0));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1458,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1459,"new boolean[69],"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1460,"Conversion.longToBools(0x1234567890ABCDEFL, 0, new boolean[69], 0, 0));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1462,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1463,new boolean[]{
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1464,"true, false, false, false, false, false, false, false, false, false, false,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1465,"false, false, false, false, false, false, false, false, false, false, false,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1466,"false, false, false, false, false, false, false, false, false, false, false,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1467,"false, false, false, false, false, false, false, false, false, false, false,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1468,"false, false, false, false, false, false, false, false, false, false, false,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1469,"false, false, false, false, false, false, false, false, false, false, false,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1470,"false, false, false},"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1471,"Conversion.longToBools(0x1234567890ABCDEFL, 0, new boolean[69], 0, 1));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1472,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1473,new boolean[]{
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1474,"true, true, false, false, false, false, false, false, false, false, false,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1475,"false, false, false, false, false, false, false, false, false, false, false,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1476,"false, false, false, false, false, false, false, false, false, false, false,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1477,"false, false, false, false, false, false, false, false, false, false, false,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1478,"false, false, false, false, false, false, false, false, false, false, false,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1479,"false, false, false, false, false, false, false, false, false, false, false,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1480,"false, false, false},"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1481,"Conversion.longToBools(0x1234567890ABCDEFL, 0, new boolean[69], 0, 2));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1482,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1483,new boolean[]{
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1484,"true, true, true, false, false, false, false, false, false, false, false,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1485,"false, false, false, false, false, false, false, false, false, false, false,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1486,"false, false, false, false, false, false, false, false, false, false, false,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1487,"false, false, false, false, false, false, false, false, false, false, false,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1488,"false, false, false, false, false, false, false, false, false, false, false,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1489,"false, false, false, false, false, false, false, false, false, false, false,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1490,"false, false, false},"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1491,"Conversion.longToBools(0x1234567890ABCDEFL, 0, new boolean[69], 0, 3));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1492,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1493,new boolean[]{
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1494,"true, true, true, true, false, true, true, true, true, false, true, true,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1495,"false, false, true, true, true, true, false, true, false, true, false, true,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1496,"false, false, false, false, true, false, false, true, false, false, false,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1497,"true, true, true, true, false, false, true, true, false, true, false, true,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1498,"false, false, false, true, false, true, true, false, false, false, true, false,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1499,"false, true, false, false, false, false, false, false, false, false},"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1500,"Conversion.longToBools(0x1234567890ABCDEFL, 0, new boolean[69], 0, 63));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1501,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1502,new boolean[]{
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1503,"true, true, true, true, false, true, true, true, true, false, true, true,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1504,"false, false, true, true, true, true, false, true, false, true, false, true,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1505,"false, false, false, false, true, false, false, true, false, false, false,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1506,"true, true, true, true, false, false, true, true, false, true, false, true,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1507,"false, false, false, true, false, true, true, false, false, false, true, false,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1508,"false, true, false, false, false, false, false, false, false, false},"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1509,"Conversion.longToBools(0x1234567890ABCDEFL, 0, new boolean[69], 0, 64));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1510,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1511,new boolean[]{
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1512,"false, false, true, false, false, false, false, false, false, false, false,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1513,"false, false, false, false, false, false, false, false, false, false, false,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1514,"false, false, false, false, false, false, false, false, false, false, false,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1515,"false, false, false, false, false, false, false, false, false, false, false,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1516,"false, false, false, false, false, false, false, false, false, false, false,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1517,"false, false, false, false, false, false, false, false, false, false, false,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1518,"false, false, false},"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1519,"Conversion.longToBools(0x1234567890ABCDEFL, 0, new boolean[69], 2, 1));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1520,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1521,new boolean[]{
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1522,"false, false, true, true, true, true, false, true, true, true, true, false,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1523,"true, true, false, false, true, true, true, true, false, true, false, true,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1524,"false, true, false, false, false, false, true, false, false, true, false,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1525,"false, false, true, true, true, true, false, false, true, true, false, true,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1526,"false, true, false, false, false, true, false, true, true, false, false, false,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1527,"true, false, false, true, false, false, false, false, false, false},"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1528,"Conversion.longToBools(0x1234567890ABCDEFL, 0, new boolean[69], 2, 64));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1529,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1530,new boolean[]{
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1531,"true, true, true, false, true, true, true, true, false, true, true, false,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1532,"false, true, true, true, true, false, true, false, true, false, true, false,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1533,"false, false, false, true, false, false, true, false, false, false, true, true,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1534,"true, true, false, false, true, true, false, true, false, true, false, false,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1535,"false, true, false, true, true, false, false, false, true, false, false, true,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1536,"false, false, false, false, false, false, false, false, false},"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1537,"Conversion.longToBools(0x1234567890ABCDEFL, 1, new boolean[69], 0, 63));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1538,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1539,new boolean[]{
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1540,"true, true, false, true, true, true, true, false, true, true, false, false,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1541,"true, true, true, true, false, true, false, true, false, true, false, false,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1542,"false, false, true, false, false, true, false, false, false, true, true, true,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1543,"true, false, false, true, true, false, true, false, true, false, false, false,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1544,"true, false, true, true, false, false, false, true, false, false, true, false,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1545,"false, false, false, false, false, false, false, false, false},"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1546,"Conversion.longToBools(0x1234567890ABCDEFL, 2, new boolean[69], 0, 62));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1548,"// assertArrayEquals(new boolean[]{false,false,false, true, true, false, true, true,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1549,"// true, true, false, true, true, false, false, true, true, true, true, false, true,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1550,"// false, true, false, true, false, false, false, false, true, false, false, true,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1551,"// false, false, false, true, true, true, true, false, false, true, true, false, true,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1552,"// false, true, false, false, false, true, false, true, true, false, false, false, true,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1553,"// false, false, true, false, false, false"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1554,"// ,false,false,false,false},Conversion.longToBools(0x1234567890ABCDEFL, 2,new"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1555,"// boolean[69], 3, 63));//rejected by assertion"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1556,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1557,new boolean[]{
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1558,"false, false, false, true, true, false, true, true, true, true, false, true,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1559,"true, false, false, true, true, true, true, false, true, false, true, false,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1560,"true, false, false, false, false, true, false, false, true, false, false,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1561,"false, true, true, true, true, false, false, true, true, false, true, false,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1562,"true, false, false, false, true, false, true, true, false, false, false, true,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1563,"false, false, true, false, false, false, false, false, false, false},"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1564,"Conversion.longToBools(0x1234567890ABCDEFL, 2, new boolean[69], 3, 62));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1567,public void testIntToBools() throws Exception {
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1568,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1569,"new boolean[]{}, Conversion.intToBools(0x00000000, 0, new boolean[]{}, 0, 0));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1570,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1571,"new boolean[]{}, Conversion.intToBools(0x00000000, 100, new boolean[]{}, 0, 0));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1572,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1573,"new boolean[]{}, Conversion.intToBools(0x00000000, 0, new boolean[]{}, 100, 0));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1574,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1575,"new boolean[69], Conversion.intToBools(0x90ABCDEF, 0, new boolean[69], 0, 0));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1576,assertArrayEquals(new boolean[]{
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1577,"true, false, false, false, false, false, false, false, false, false, false, false,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1578,"false, false, false, false, false, false, false, false, false, false, false, false,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1579,"false, false, false, false, false, false, false, false, false, false, false, false,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1580,"false}, Conversion.intToBools(0x90ABCDEF, 0, new boolean[37], 0, 1));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1581,assertArrayEquals(new boolean[]{
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1582,"true, true, false, false, false, false, false, false, false, false, false, false,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1583,"false, false, false, false, false, false, false, false, false, false, false, false,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1584,"false, false, false, false, false, false, false, false, false, false, false, false,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1585,"false}, Conversion.intToBools(0x90ABCDEF, 0, new boolean[37], 0, 2));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1586,assertArrayEquals(new boolean[]{
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1587,"true, true, true, false, false, false, false, false, false, false, false, false,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1588,"false, false, false, false, false, false, false, false, false, false, false, false,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1589,"false, false, false, false, false, false, false, false, false, false, false, false,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1590,"false}, Conversion.intToBools(0x90ABCDEF, 0, new boolean[37], 0, 3));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1591,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1592,new boolean[]{
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1593,"true, true, true, true, false, true, true, true, true, false, true, true,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1594,"false, false, true, true, true, true, false, true, false, true, false, true,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1595,"false, false, false, false, true, false, false, false, false, false, false,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1596,"false, false}, Conversion.intToBools(0x90ABCDEF, 0, new boolean[37], 0, 31));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1597,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1598,new boolean[]{
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1599,"true, true, true, true, false, true, true, true, true, false, true, true,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1600,"false, false, true, true, true, true, false, true, false, true, false, true,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1601,"false, false, false, false, true, false, false, true, false, false, false,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1602,"false, false}, Conversion.intToBools(0x90ABCDEF, 0, new boolean[37], 0, 32));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1603,assertArrayEquals(new boolean[]{
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1604,"false, false, true, false, false, false, false, false, false, false, false, false,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1605,"false, false, false, false, false, false, false, false, false, false, false, false,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1606,"false, false, false, false, false, false, false, false, false, false, false, false,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1607,"false}, Conversion.intToBools(0x90ABCDEF, 0, new boolean[37], 2, 1));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1608,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1609,new boolean[]{
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1610,"false, false, true, true, true, true, false, true, true, true, true, false,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1611,"true, true, false, false, true, true, true, true, false, true, false, true,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1612,"false, true, false, false, false, false, true, false, false, true, false,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1613,"false, false}, Conversion.intToBools(0x90ABCDEF, 0, new boolean[37], 2, 32));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1614,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1615,new boolean[]{
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1616,"true, true, true, false, true, true, true, true, false, true, true, false,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1617,"false, true, true, true, true, false, true, false, true, false, true, false,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1618,"false, false, false, true, false, false, true, false, false, false, false,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1619,"false, false}, Conversion.intToBools(0x90ABCDEF, 1, new boolean[37], 0, 31));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1620,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1621,new boolean[]{
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1622,"true, true, false, true, true, true, true, false, true, true, false, false,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1623,"true, true, true, true, false, true, false, true, false, true, false, false,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1624,"false, false, true, false, false, true, false, false, false, false, false,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1625,"false, false}, Conversion.intToBools(0x90ABCDEF, 2, new boolean[37], 0, 30));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1626,"// assertArrayEquals(new boolean[]{false, false, false, true, true, false, true, true,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1627,"// true, true, false, true, true, false, false, true, true, true, true, false, true,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1628,"// false, true, false, true, false, false, false, false, true, false, false, false,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1629,"// false, false, false, false},Conversion.intToBools(0x90ABCDEF, 2,new boolean[37],"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1630,"// 3,31));//rejected by assertion"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1631,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1632,new boolean[]{
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1633,"false, false, false, true, true, false, true, true, true, true, false, true,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1634,"true, false, false, true, true, true, true, false, true, false, true, false,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1635,"true, false, false, false, false, true, false, false, true, false, false,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1636,"false, false}, Conversion.intToBools(0x90ABCDEF, 2, new boolean[37], 3, 30));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1639,public void testShortToBools() throws Exception {
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1640,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1641,"new boolean[]{}, Conversion.shortToBools((short)0x0000, 0, new boolean[]{}, 0, 0));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1642,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1643,"new boolean[]{}, Conversion.shortToBools((short)0x0000, 100, new boolean[]{}, 0, 0));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1644,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1645,"new boolean[]{}, Conversion.shortToBools((short)0x0000, 0, new boolean[]{}, 100, 0));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1646,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1647,"new boolean[69], Conversion.shortToBools((short)0xCDEF, 0, new boolean[69], 0, 0));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1648,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1649,new boolean[]{
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1650,"true, false, false, false, false, false, false, false, false, false, false,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1651,"false, false, false, false, false, false, false, false, false, false},"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1652,"Conversion.shortToBools((short)0xCDEF, 0, new boolean[21], 0, 1));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1653,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1654,new boolean[]{
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1655,"true, true, false, false, false, false, false, false, false, false, false,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1656,"false, false, false, false, false, false, false, false, false, false},"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1657,"Conversion.shortToBools((short)0xCDEF, 0, new boolean[21], 0, 2));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1658,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1659,new boolean[]{
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1660,"true, true, true, false, false, false, false, false, false, false, false,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1661,"false, false, false, false, false, false, false, false, false, false},"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1662,"Conversion.shortToBools((short)0xCDEF, 0, new boolean[21], 0, 3));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1663,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1664,new boolean[]{
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1665,"true, true, true, true, false, true, true, true, true, false, true, true,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1666,"false, false, true, false, false, false, false, false, false},"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1667,"Conversion.shortToBools((short)0xCDEF, 0, new boolean[21], 0, 15));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1668,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1669,new boolean[]{
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1670,"true, true, true, true, false, true, true, true, true, false, true, true,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1671,"false, false, true, true, false, false, false, false, false},"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1672,"Conversion.shortToBools((short)0xCDEF, 0, new boolean[21], 0, 16));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1673,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1674,new boolean[]{
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1675,"false, false, true, false, false, false, false, false, false, false, false,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1676,"false, false, false, false, false, false, false, false, false, false},"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1677,"Conversion.shortToBools((short)0xCDEF, 0, new boolean[21], 2, 1));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1678,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1679,new boolean[]{
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1680,"false, false, true, true, true, true, false, true, true, true, true, false,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1681,"true, true, false, false, true, true, false, false, false},"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1682,"Conversion.shortToBools((short)0xCDEF, 0, new boolean[21], 2, 16));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1683,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1684,new boolean[]{
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1685,"true, true, true, false, true, true, true, true, false, true, true, false,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1686,"false, true, true, false, false, false, false, false, false},"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1687,"Conversion.shortToBools((short)0xCDEF, 1, new boolean[21], 0, 15));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1688,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1689,new boolean[]{
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1690,"true, true, false, true, true, true, true, false, true, true, false, false,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1691,"true, true, false, false, false, false, false, false, false},"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1692,"Conversion.shortToBools((short)0xCDEF, 2, new boolean[21], 0, 14));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1693,"// assertArrayEquals(new boolean[]{false, false, false, true, true, false, true, true,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1694,"// true, true, false, true, true, false, false, true, false, false, false, false,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1695,"// false},Conversion.shortToBools((short)0xCDEF, 2,new boolean[21], 3,15));//rejected by"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1696,// assertion
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1697,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1698,new boolean[]{
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1699,"false, false, false, true, true, false, true, true, true, true, false, true,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1700,"true, false, false, true, true, false, false, false, false},"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1701,"Conversion.shortToBools((short)0xCDEF, 2, new boolean[21], 3, 14));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1704,public void testByteToBools() throws Exception {
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1705,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1706,"new boolean[]{}, Conversion.byteToBools((byte)0x00, 0, new boolean[]{}, 0, 0));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1707,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1708,"new boolean[]{}, Conversion.byteToBools((byte)0x00, 100, new boolean[]{}, 0, 0));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1709,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1710,"new boolean[]{}, Conversion.byteToBools((byte)0x00, 0, new boolean[]{}, 100, 0));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1711,assertArrayEquals(
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1712,"new boolean[69], Conversion.byteToBools((byte)0xEF, 0, new boolean[69], 0, 0));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1713,assertArrayEquals(new boolean[]{
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1714,"true, false, false, false, false, false, false, false, false, false, false, false,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1715,"false}, Conversion.byteToBools((byte)0x95, 0, new boolean[13], 0, 1));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1716,assertArrayEquals(new boolean[]{
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1717,"true, false, false, false, false, false, false, false, false, false, false, false,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1718,"false}, Conversion.byteToBools((byte)0x95, 0, new boolean[13], 0, 2));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1719,assertArrayEquals(new boolean[]{
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1720,"true, false, true, false, false, false, false, false, false, false, false, false,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1721,"false}, Conversion.byteToBools((byte)0x95, 0, new boolean[13], 0, 3));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1722,assertArrayEquals(new boolean[]{
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1723,"true, false, true, false, true, false, false, false, false, false, false, false,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1724,"false}, Conversion.byteToBools((byte)0x95, 0, new boolean[13], 0, 7));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1725,assertArrayEquals(new boolean[]{
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1726,"true, false, true, false, true, false, false, true, false, false, false, false,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1727,"false}, Conversion.byteToBools((byte)0x95, 0, new boolean[13], 0, 8));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1728,assertArrayEquals(new boolean[]{
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1729,"false, false, true, false, false, false, false, false, false, false, false, false,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1730,"false}, Conversion.byteToBools((byte)0x95, 0, new boolean[13], 2, 1));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1731,assertArrayEquals(new boolean[]{
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1732,"false, false, true, false, true, false, true, false, false, true, false, false,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1733,"false}, Conversion.byteToBools((byte)0x95, 0, new boolean[13], 2, 8));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1734,assertArrayEquals(new boolean[]{
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1735,"false, true, false, true, false, false, true, false, false, false, false, false,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1736,"false}, Conversion.byteToBools((byte)0x95, 1, new boolean[13], 0, 7));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1737,assertArrayEquals(new boolean[]{
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1738,"true, false, true, false, false, true, false, false, false, false, false, false,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1739,"false}, Conversion.byteToBools((byte)0x95, 2, new boolean[13], 0, 6));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1740,"// assertArrayEquals(new boolean[]{false, false, false, true, true, false, true, true,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1741,"// false, false, false, false, false},Conversion.byteToBools((byte)0x95, 2,new"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1742,"// boolean[13], 3, 7));//rejected by assertion"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1743,assertArrayEquals(new boolean[]{
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1744,"false, false, false, true, false, true, false, false, true, false, false, false,"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1745,"false}, Conversion.byteToBools((byte)0x95, 2, new boolean[13], 3, 6));"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1748,boolean hasMethod(String methodName) {
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1749,Method[] methods = this.getClass().getMethods();
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1750,for (Method m : methods) {
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1751,if (m.getName().equals(methodName)) return true;
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1753,return false;
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1756,public void testTestsToCheckImplemented() throws Exception {
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1757,"if (!hasMethod(""testIntsToLong"")) fail(""test testIntsToLong not implemented"");"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1758,"if (!hasMethod(""testShortsToLong"")) fail(""test testShortsToLong not implemented"");"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1759,"if (!hasMethod(""testShortsToInt"")) fail(""test testShortsToInt not implemented"");"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1760,"if (!hasMethod(""testBytesToLong"")) fail(""test testBytesToLong not implemented"");"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1761,"if (!hasMethod(""testBytesToInt"")) fail(""test testBytesToInt not implemented"");"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1762,"if (!hasMethod(""testBytesToShort"")) fail(""test testBytesToShort not implemented"");"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1763,"if (!hasMethod(""testHexsToLong"")) fail(""test testHexsToLong not implemented"");"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1764,"if (!hasMethod(""testHexsToInt"")) fail(""test testHexsToInt not implemented"");"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1765,"if (!hasMethod(""testHexsToShort"")) fail(""test testHexsToShort not implemented"");"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1766,"if (!hasMethod(""testHexsToByte"")) fail(""test testHexsToByte not implemented"");"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1767,"if (!hasMethod(""testBoolsToLong"")) fail(""test testBoolsToLong not implemented"");"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1768,"if (!hasMethod(""testBoolsToInt"")) fail(""test testBoolsToInt not implemented"");"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1769,"if (!hasMethod(""testBoolsToShort"")) fail(""test testBoolsToShort not implemented"");"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1770,"if (!hasMethod(""testBoolsToByte"")) fail(""test testBoolsToByte not implemented"");"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1771,"if (!hasMethod(""testLongToInts"")) fail(""test testLongToInts not implemented"");"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1772,"if (!hasMethod(""testLongToShorts"")) fail(""test testLongToShorts not implemented"");"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1773,"if (!hasMethod(""testIntToShorts"")) fail(""test testIntToShorts not implemented"");"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1774,"if (!hasMethod(""testLongToBytes"")) fail(""test testLongToBytes not implemented"");"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1775,"if (!hasMethod(""testIntToBytes"")) fail(""test testIntToBytes not implemented"");"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1776,"if (!hasMethod(""testShortToBytes"")) fail(""test testShortToBytes not implemented"");"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1777,"if (!hasMethod(""testLongToHexs"")) fail(""test testLongToHexs not implemented"");"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1778,"if (!hasMethod(""testIntToHexs"")) fail(""test testIntToHexs not implemented"");"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1779,"if (!hasMethod(""testShortToHexs"")) fail(""test testShortToHexs not implemented"");"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1780,"if (!hasMethod(""testByteToHexs"")) fail(""test testByteToHexs not implemented"");"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1781,"if (!hasMethod(""testLongToBools"")) fail(""test testLongToBools not implemented"");"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1782,"if (!hasMethod(""testIntToBools"")) fail(""test testIntToBools not implemented"");"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1783,"if (!hasMethod(""testShortToBools"")) fail(""test testShortToBools not implemented"");"
True,src/test/java/org/apache/commons/lang3/ConversionTest.java,src/test/java/org/apache/commons/lang3/ConversionTest.java,1784,"if (!hasMethod(""testByteToBools"")) fail(""test testByteToBools not implemented"");"
