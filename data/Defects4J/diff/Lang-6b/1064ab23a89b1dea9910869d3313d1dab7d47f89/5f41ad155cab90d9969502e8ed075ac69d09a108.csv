is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,322,* <p>Returns the first passed value which is not <code>null</code> or
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,323,* <code>null</code> otherwise.</p>
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,325,* <pre>
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,326,"* ObjectUtils.firstNonNull(null, null)      = null"
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,327,"* ObjectUtils.firstNonNull(null, """")        = """""
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,328,"* ObjectUtils.firstNonNull(null, null, """")  = """""
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,329,"* ObjectUtils.firstNonNull(null, ""zz"")      = ""zz"""
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,330,"* ObjectUtils.firstNonNull(""abc"", *)        = ""abc"""
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,331,"* ObjectUtils.firstNonNull(null, ""xyz"", *)  = ""xyz"""
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,332,"* ObjectUtils.firstNonNull(Boolean.TRUE, *) = Boolean.TRUE"
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,333,* ObjectUtils.firstNonNull()                = null
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,334,* </pre>
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,336,"* @param values  the values to test, may be <code>null</code> or empty"
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,338,* @return The first value from <code>values</code> which is not
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,339,*         <code>null</code> or <code>null</code> otherwise.
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,341,public static <T> T firstNonNull(T... values) {
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,342,// This is a trivial implementation. There may be faster ones.
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,343,"// According to the JRE Libraries, overloading the method with fixed"
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,344,// parameter sizes may be faster.
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,345,for (T val : values) {
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,346,if (val != null && val != ObjectUtils.NULL) {
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,347,return val;
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,350,return null;
True,src/test/org/apache/commons/lang/ObjectUtilsTest.java,src/test/org/apache/commons/lang/ObjectUtilsTest.java,220,public void testFirstNonNull() {
True,src/test/org/apache/commons/lang/ObjectUtilsTest.java,src/test/org/apache/commons/lang/ObjectUtilsTest.java,221,"assertEquals(null, ObjectUtils.firstNonNull(null, null));"
True,src/test/org/apache/commons/lang/ObjectUtilsTest.java,src/test/org/apache/commons/lang/ObjectUtilsTest.java,222,"assertEquals("""", ObjectUtils.firstNonNull(null, """"));"
True,src/test/org/apache/commons/lang/ObjectUtilsTest.java,src/test/org/apache/commons/lang/ObjectUtilsTest.java,223,"assertEquals(""123"", ObjectUtils.firstNonNull(null, null, ""123"", ""456""));"
True,src/test/org/apache/commons/lang/ObjectUtilsTest.java,src/test/org/apache/commons/lang/ObjectUtilsTest.java,224,"assertEquals(""123"", ObjectUtils.firstNonNull(""123"", null, ""456"", null));"
True,src/test/org/apache/commons/lang/ObjectUtilsTest.java,src/test/org/apache/commons/lang/ObjectUtilsTest.java,225,"assertEquals(null, ObjectUtils.firstNonNull());"
True,src/test/org/apache/commons/lang/ObjectUtilsTest.java,src/test/org/apache/commons/lang/ObjectUtilsTest.java,226,"assertSame(Boolean.TRUE, ObjectUtils.firstNonNull(Boolean.TRUE));"
True,src/test/org/apache/commons/lang/ObjectUtilsTest.java,src/test/org/apache/commons/lang/ObjectUtilsTest.java,227,assertNull(ObjectUtils.firstNonNull());
True,src/test/org/apache/commons/lang/ObjectUtilsTest.java,src/test/org/apache/commons/lang/ObjectUtilsTest.java,228,"assertNull(ObjectUtils.firstNonNull(null, null));"
True,src/test/org/apache/commons/lang/ObjectUtilsTest.java,src/test/org/apache/commons/lang/ObjectUtilsTest.java,229,"assertSame(""123"", ObjectUtils.firstNonNull(null, ObjectUtils.NULL, ""123"", ""456""));"
True,src/test/org/apache/commons/lang/ObjectUtilsTest.java,src/test/org/apache/commons/lang/ObjectUtilsTest.java,230,"assertSame(""456"", ObjectUtils.firstNonNull(ObjectUtils.NULL, ""456"", ""123"", null));"
True,src/test/org/apache/commons/lang/ObjectUtilsTest.java,src/test/org/apache/commons/lang/ObjectUtilsTest.java,231,"assertNull(ObjectUtils.firstNonNull(null, null, ObjectUtils.NULL));"
