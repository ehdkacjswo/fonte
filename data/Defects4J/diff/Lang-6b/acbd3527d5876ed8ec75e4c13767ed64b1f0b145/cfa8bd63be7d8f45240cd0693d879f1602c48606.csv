is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,19,import java.text.MessageFormat;
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,35,* All validate functions exist in 4 variants:
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,37,* <p>1st function with only the validation option</p>
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,38,* <pre>
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,39,* Validate.isNotNull(surName);
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,40,* </pre>
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,42,* <p>2nd function with an additional String message parameter. This should
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,43,* be used only if no additional parameters have to be provided. Instead of using
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,44,"* String operations to create the message String, the following 3rd variant"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,45,* should be used.</p>
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,46,* <pre>
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,47,"* Validate.isNotNull(surName, ""surname must be set"");"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,48,* </pre>
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,50,"* <p>Since commons-lang-3.0, for each validation function a similar 3rd validation function exists"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,51,* with a list of additional message parameters as Objects in ellipsis notation.
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,52,* This is used instead of simply passing a message String due to performance reasons!
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,53,"* When using a message string, all parameters would have to be string concatenated"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,54,"* before the call, even if no problem arises which would cost performance.</br>"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,55,"* Instead of this, we will concatenate (with spaces) all given msgObjects.toString()"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,56,* only in case of a failed validation! If the first parameter of the msgObject is a
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,57,"* String, it will be taken as the format string for {@code MessageFormat}.</p>"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,59,* <h3>Examples:</h3>
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,60,* <p>
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,61,* Simply validating an Argument without further message:
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,62,* <pre>
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,63,"* public void myFn(String argString, Integer argInt) {"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,64,*     Validate.notNull(argString);
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,65,*     Validate.notNull(argInt);
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,66,*     Validate.isTrue(argInt.intValue > 3);
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,68,* </pre>
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,69,* <p>
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,71,* <p>
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,72,* Validating an Argument and adding a message to the IllegalArgumentException:
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,73,* <pre>
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,74,"* public void myFn(String argString, Integer argInt) {"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,75,"*     Validate.notNull(argInt, ""Integer parameter must be set);"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,76,"*     Validate.isTrue(argInt.intValue > 3, ""Integer parameter must be <=3!"");"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,78,* </pre>
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,79,* <p>
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,81,* <p>
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,82,* If the first parameter of the msgObject is a String {@code MessageFormat} will be used:
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,83,* <pre>
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,84,"*     Validate.isTrue(argInt1.intValue > argInt2.intValue, ""param2 actually is {1} but must larger than param1 {0} !"", argInt1, argInt2);"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,85,* </pre>
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,86,* </p>
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,88,* <p>The same function sometimes exists multiple times in a 4th form with a single message String parameter
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,89,"* and an additional value parameter. This is essentially the same like the 3rd form, but with fixed"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,90,* object values to preserve backward compatibility with Validate 2.0!<p>
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,91,"* <p>If the message String contains a <code>&quot;{0}&quot;</code>, it will be passed to"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,92,"* {@code MessageFormat} with the value parameter as single Object parameter. If not, the value parameter"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,93,* will simply get concatenated to the message String separated with a space.
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,94,*  </p>
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,96,* @see MessageFormat
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,102,"* @author <a href=""mailto:struberg@yahoo.de"">Mark Struberg</a>"
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,77,hrow new IllegalArgumentException(message + value);
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,142,"throw new IllegalArgumentException(getMessage(message, value));"
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,103,hrow new IllegalArgumentException(message + value);
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,169,"throw new IllegalArgumentException(getMessage(message, value));"
False,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,130,hrow new IllegalArgumentException(message + value);
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,196,"throw new IllegalArgumentException(getMessage(message, value));"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,252,"* <p>Validate an argument, throwing <code>IllegalArgumentException</code>"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,253,* if the test result is <code>false</code>.</p>
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,255,"* <p>This is used when validating according to an arbitrary boolean expression,"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,256,* such as validating a primitive number or using your own custom validation
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,257,* expression.</p>
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,259,* <pre>
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,260,"* Validate.isTrue(argInt1.intValue > argInt2.intValue,"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,261,"*                 ""param2 actually is {1} but must larger than param1 {0} !"", argInt1, argInt2);"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,262,* </pre>
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,264,"* <p>If the first msgObject is a String, the {@code MessageFormat} will be used to construct the message</p>"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,265,* <p>Otherwise the message in the exception is 'Validation failed: ' followed by all given
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,266,* parameters delimited with spaces.</p>
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,268,* @param expression  a boolean expression
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,269,* @throws IllegalArgumentException if expression is <code>false</code>
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,271,"public static void isTrue(boolean expression, Object... msgObjects) {"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,272,if (expression == false) {
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,273,throw new IllegalArgumentException(getMessage(msgObjects));
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,318,"* <p>Validate an argument, throwing <code>IllegalArgumentException</code>"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,319,* if the argument is <code>null</code>.</p>
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,321,* <pre>
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,322,"* Validate.notNull(myObject, ""This happens while processing user {0}, currentUser);"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,323,* </pre>
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,325,"* <p>If the first msgObject is a String, the {@code MessageFormat} will be used to construct the message</p>"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,326,* <p>Otherwise the message in the exception is 'Validation failed: ' followed by all given
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,327,* parameters delimited with spaces.</p>
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,329,* @param object Object to validate
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,330,* @param msgObjects additional Objects added as text message to the InvalidArgumentException
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,332,"public static void notNull(Object object, Object... msgObjects) {"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,333,if (object == null) {
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,334,throw new IllegalArgumentException(getMessage(msgObjects));
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,377,"* <p>Validate an argument, throwing <code>IllegalArgumentException</code>"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,378,* if the argument array is empty (<code>null</code> or no elements).</p>
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,380,* <pre>
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,381,"* Validate.notEmpty(myArray, ""This happens while processing user {0}, currentUser);"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,382,* </pre>
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,384,"* <p>If the first msgObject is a String, the {@code MessageFormat} will be used to construct the message</p>"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,385,* <p>Otherwise the message in the exception is 'Validation failed: ' followed by all given
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,386,* parameters delimited with spaces.</p>
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,388,* @param array  the array to check is not empty
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,389,* @param msgObjects additional Objects added as text message to the InvalidArgumentException
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,390,* @throws IllegalArgumentException if the array is empty
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,392,"public static void notEmpty(Object[] array, Object... msgObjects) {"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,393,"notEmpty(array, getMessage(msgObjects));"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,435,"* <p>Validate an argument, throwing <code>IllegalArgumentException</code>"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,436,* if the argument Collection is empty (<code>null</code> or no elements).</p>
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,438,* <pre>
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,439,"* Validate.notEmpty(myCollection, ""This happens while processing user {0}, currentUser);"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,440,* </pre>
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,442,"* <p>If the first msgObject is a String, the {@code MessageFormat} will be used to construct the message</p>"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,443,* <p>Otherwise the message in the exception is 'Validation failed: ' followed by all given
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,444,* parameters delimited with spaces.</p>
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,446,* @param collection  the collection to check is not empty
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,447,* @param msgObjects additional Objects added as text message to the InvalidArgumentException
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,448,* @throws IllegalArgumentException if the collection is empty
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,450,"public static void notEmpty(Collection<?> collection, Object... msgObjects) {"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,451,"notEmpty(collection, getMessage(msgObjects));"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,493,"* <p>Validate an argument, throwing <code>IllegalArgumentException</code>"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,494,* if the argument Map is empty (<code>null</code> or no elements).</p>
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,496,* <pre>
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,497,"* Validate.notEmpty(myMap, ""This happens while processing user {0}, currentUser);"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,498,* </pre>
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,500,"* <p>If the first msgObject is a String, the {@code MessageFormat} will be used to construct the message</p>"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,501,* <p>Otherwise the message in the exception is 'Validation failed: ' followed by all given
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,502,* parameters delimited with spaces.</p>
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,504,* @param map  the map to check is not empty
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,505,* @param msgObjects additional Objects added as text message to the InvalidArgumentException
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,506,* @throws IllegalArgumentException if the map is empty
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,508,"public static void notEmpty(Map<?,?> map, Object... msgObjects) {"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,509,"notEmpty(map, getMessage(msgObjects));"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,551,"* <p>Validate an argument, throwing <code>IllegalArgumentException</code>"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,552,* if the argument String is empty (<code>null</code> or zero length).</p>
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,554,* <pre>
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,555,* Validate.notEmpty(myString);
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,556,* </pre>
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,558,"* <p>If the first msgObject is a String, the {@code MessageFormat} will be used to construct the message</p>"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,559,* <p>Otherwise the message in the exception is 'Validation failed: ' followed by all given
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,560,* parameters delimited with spaces.</p>
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,562,* @param string  the string to check is not empty
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,563,* @param msgObjects additional Objects added as text message to the InvalidArgumentException
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,564,* @throws IllegalArgumentException if the string is empty
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,566,"public static void notEmpty(String string, Object... msgObjects) {"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,567,"notEmpty(string, getMessage(msgObjects));"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,627,"* <p>Validate an argument, throwing <code>IllegalArgumentException</code>"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,628,* if the argument array has <code>null</code> elements or is
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,629,* <code>null</code>.</p>
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,631,* <pre>
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,632,* Validate.noNullElements(myArray);
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,633,* </pre>
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,635,"* <p>If the first msgObject is a String, the {@code MessageFormat} will be used to construct the message</p>"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,636,* <p>Otherwise the message in the exception is 'Validation failed: ' followed by all given
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,637,* parameters delimited with spaces.</p>
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,639,* <p>If the array is null then the message in the exception is 'The validated object is null'.</p>
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,641,* @param array  the array to check
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,642,* @param msgObjects additional Objects added as text message to the InvalidArgumentException
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,643,* @throws IllegalArgumentException if the array has <code>null</code>
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,644,*  elements or is <code>null</code>
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,646,"public static void noNullElements(Object[] array, Object... msgObjects) {"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,647,Validate.notNull(array);
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,648,for (int i = 0; i < array.length; i++) {
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,649,if (array[i] == null) {
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,650,//X TODO maybe we can add 'i' as 0-th element?
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,651,throw new IllegalArgumentException(getMessage(msgObjects));
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,713,"* <p>Validate an argument, throwing <code>IllegalArgumentException</code>"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,714,* if the argument Collection has <code>null</code> elements or is
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,715,* <code>null</code>.</p>
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,717,* <pre>
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,718,* Validate.noNullElements(myCollection);
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,719,* </pre>
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,721,"* <p>If the first msgObject is a String, the {@code MessageFormat} will be used to construct the message</p>"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,722,* <p>Otherwise the message in the exception is 'Validation failed: ' followed by all given
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,723,* parameters delimited with spaces.</p>
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,725,* <p>If the collection is null then the message in the exception is 'The validated object is null'.</p>
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,727,* @param collection  the collection to check
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,728,* @param msgObjects additional Objects added as text message to the InvalidArgumentException
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,729,* @throws IllegalArgumentException if the collection has
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,730,*  <code>null</code> elements or is <code>null</code>
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,732,"public static void noNullElements(Collection collection, Object... msgObjects) {"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,733,Validate.notNull(collection);
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,734,int i = 0;
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,735,for (Iterator it = collection.iterator(); it.hasNext(); i++) {
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,736,if (it.next() == null) {
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,737,//X TODO how about adding 'i' as 0-th element?
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,738,throw new IllegalArgumentException(getMessage(msgObjects));
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,744,// allElementsOfType collection
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,804,* <p>
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,805,"* Validate an argument, throwing <code>IllegalArgumentException</code> if the argument collection is"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,806,* <code>null</code> or has elements that are not of type <code>clazz</code> or a subclass.
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,807,* </p>
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,809,* <pre>
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,810,"* Validate.allElementsOfType(collection, String.class);"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,811,* </pre>
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,813,* <p>
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,814,* The message in the exception is 'The validated collection contains an element not of type clazz at index: '.
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,815,* </p>
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,817,* @param collection
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,818,"*            the collection to check, not null"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,819,* @param clazz
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,820,"*            the <code>Class</code> which the collection's elements are expected to be, not null"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,821,* @since 2.1
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,823,"public static void allElementsOfType(Collection collection, Class clazz, Object... msgObjects) {"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,824,Validate.notNull(collection);
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,825,Validate.notNull(clazz);
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,826,int i = 0;
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,827,for (Iterator it = collection.iterator(); it.hasNext(); i++) {
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,828,if (clazz.isInstance(it.next()) == false) {
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,829,//X TODO how to add clazz.getName() and i?
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,830,throw new IllegalArgumentException(getMessage(msgObjects));
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,835,// private helper functions
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,840,* private helper function to create an error message from the given Objects
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,841,* If the first object in msgObjects is of type {@code String} then
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,842,* {@code MessageFormat} will be used to format the output message.
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,844,* @param msgObjects
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,845,* @return concatenated String representation of all the objects
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,847,private static String getMessage(Object... msgObjects) {
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,848,if (msgObjects.length > 0 && msgObjects[0] instanceof String) {
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,849,String message = (String) msgObjects[0];
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,850,"if (msgObjects.length == 2 && !message.matches(""[^\\{]*\\{\\d*\\}.*"")) {"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,851,"// if it doesn't contain {0}, {1} etc we simply use string concatenation"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,852,return message + msgObjects[1]; // no space between to act like original function!
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,855,MessageFormat form = new MessageFormat((String) msgObjects[0]);
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,856,Object[] params = new Object[msgObjects.length - 1];
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,857,"System.arraycopy(msgObjects, 1, params, 0, msgObjects.length - 1);"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,858,return form.format(params);
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,860,else {
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,861,"StringBuffer sb = new StringBuffer(""Validation failed: ["");"
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,862,for(int i = 0; i < msgObjects.length; i++) {
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,863,if (i > 0) {
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,864,sb.append(' ');
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,866,sb.append(msgObjects[i]);
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,868,sb.append(']');
True,src/java/org/apache/commons/lang/Validate.java,src/java/org/apache/commons/lang/Validate.java,869,return sb.toString();
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,234,uffer = new char[capacity];
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,234,buffer = new char[capacity * 2];
