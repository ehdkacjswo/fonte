is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,4,* this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,7,* the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,14,* See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,15,* limitations under the License.
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,17,package org.apache.commons.collections;
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,19,import java.util.Collection;
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,20,import java.util.Comparator;
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,22,import org.apache.commons.collections.comparators.BooleanComparator;
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,23,import org.apache.commons.collections.comparators.ComparableComparator;
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,24,import org.apache.commons.collections.comparators.ComparatorChain;
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,25,import org.apache.commons.collections.comparators.NullComparator;
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,26,import org.apache.commons.collections.comparators.ReverseComparator;
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,27,import org.apache.commons.collections.comparators.TransformingComparator;
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,30,* Provides convenient static utility methods for <Code>Comparator</Code>
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,31,* objects.
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,32,* <p>
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,33,* Most of the functionality in this class can also be found in the
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,34,* <code>comparators</code> package. This class merely provides a
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,35,* convenient central place if you have use for more than one class
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,36,* in the <code>comparators</code> subpackage.
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,38,* @since Commons Collections 2.1
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,39,* @version $Revision$ $Date$
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,41,* @author Paul Jack
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,42,* @author Stephen Colebourne
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,44,public class ComparatorUtils {
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,47,* ComparatorUtils should not normally be instantiated.
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,49,public ComparatorUtils() {
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,53,* Comparator for natural sort order.
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,55,* @see ComparableComparator#getInstance
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,57,"@SuppressWarnings(""unchecked"")"
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,58,public static final Comparator NATURAL_COMPARATOR = ComparableComparator.<Comparable>comparableComparator();
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,61,* Gets a comparator that uses the natural order of the objects.
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,63,* @return  a comparator which uses natural order
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,65,"@SuppressWarnings(""unchecked"")"
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,66,public static <E extends Comparable<? super E>> Comparator<E> naturalComparator() {
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,67,return NATURAL_COMPARATOR;
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,71,* Gets a comparator that compares using two {@link Comparator}s.
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,72,* <p>
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,73,* The second comparator is used if the first comparator returns equal.
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,75,"* @param comparator1  the first comparator to use, not null"
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,76,"* @param comparator2  the first comparator to use, not null"
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,77,* @return a {@link ComparatorChain} formed from the two comparators
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,78,* @throws NullPointerException if either comparator is null
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,79,* @see ComparatorChain
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,81,"@SuppressWarnings(""unchecked"")"
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,82,"public static <E extends Comparable<? super E>> Comparator<E> chainedComparator(Comparator<E> comparator1, Comparator<E> comparator2) {"
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,83,"return chainedComparator(new Comparator[] {comparator1, comparator2});"
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,87,"* Gets a comparator that compares using an array of {@link Comparator}s, applied"
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,88,* in sequence until one returns not equal or the array is exhausted.
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,90,"* @param comparators  the comparators to use, not null or empty or containing nulls"
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,91,* @return a {@link ComparatorChain} formed from the input comparators
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,92,* @throws NullPointerException if comparators array is null or contains a null
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,93,* @see ComparatorChain
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,95,public static <E extends Comparable<? super E>> Comparator<E> chainedComparator(Comparator<E>[] comparators) {
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,96,ComparatorChain<E> chain = new ComparatorChain<E>();
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,97,for (int i = 0; i < comparators.length; i++) {
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,98,if (comparators[i] == null) {
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,99,"throw new NullPointerException(""Comparator cannot be null"");"
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,101,chain.addComparator(comparators[i]);
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,103,return chain;
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,107,"* Gets a comparator that compares using a collection of {@link Comparator}s,"
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,108,* applied in (default iterator) sequence until one returns not equal or the
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,109,* collection is exhausted.
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,111,"* @param comparators  the comparators to use, not null or empty or containing nulls"
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,112,* @return a {@link ComparatorChain} formed from the input comparators
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,113,* @throws NullPointerException if comparators collection is null or contains a null
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,114,* @throws ClassCastException if the comparators collection contains the wrong object type
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,115,* @see ComparatorChain
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,117,"@SuppressWarnings(""unchecked"")"
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,118,public static <E extends Comparable<? super E>> Comparator<E> chainedComparator(Collection<Comparator<E>> comparators) {
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,119,return chainedComparator(
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,120,(Comparator<E>[]) comparators.toArray(new Comparator[comparators.size()])
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,125,* Gets a comparator that reverses the order of the given comparator.
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,127,* @param comparator  the comparator to reverse
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,128,* @return  a comparator that reverses the order of the input comparator
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,129,* @see ReverseComparator
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,131,public static <E> Comparator<E> reversedComparator(Comparator<E> comparator) {
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,132,return new ReverseComparator<E>(comparator);
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,136,* Gets a Comparator that can sort Boolean objects.
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,137,* <p>
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,138,* The parameter specifies whether true or false is sorted first.
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,139,* <p>
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,140,* The comparator throws NullPointerException if a null value is compared.
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,142,"* @param trueFirst  when <code>true</code>, sort"
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,143,*        <code>true</code> {@link Boolean}s before
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,144,*        <code>false</code> {@link Boolean}s.
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,145,* @return  a comparator that sorts booleans
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,147,public static Comparator<Boolean> booleanComparator(boolean trueFirst) {
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,148,return BooleanComparator.booleanComparator(trueFirst);
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,152,* Gets a Comparator that controls the comparison of <code>null</code> values.
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,153,* <p>
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,154,* The returned comparator will consider a null value to be less than
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,155,"* any nonnull value, and equal to any other null value.  Two nonnull"
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,156,* values will be evaluated with the given comparator.
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,158,* @param comparator the comparator that wants to allow nulls
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,159,* @return  a version of that comparator that allows nulls
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,160,* @see NullComparator
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,162,"@SuppressWarnings(""unchecked"")"
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,163,public static <E> Comparator<E> nullLowComparator(Comparator<E> comparator) {
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,164,if (comparator == null) {
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,165,comparator = NATURAL_COMPARATOR;
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,167,"return new NullComparator<E>(comparator, false);"
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,171,* Gets a Comparator that controls the comparison of <code>null</code> values.
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,172,* <p>
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,173,* The returned comparator will consider a null value to be greater than
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,174,"* any nonnull value, and equal to any other null value.  Two nonnull"
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,175,* values will be evaluated with the given comparator.
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,177,* @param comparator the comparator that wants to allow nulls
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,178,* @return  a version of that comparator that allows nulls
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,179,* @see NullComparator
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,181,"@SuppressWarnings(""unchecked"")"
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,182,public static <E> Comparator<E> nullHighComparator(Comparator<E> comparator) {
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,183,if (comparator == null) {
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,184,comparator = NATURAL_COMPARATOR;
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,186,"return new NullComparator<E>(comparator, true);"
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,190,* Gets a Comparator that passes transformed objects to the given comparator.
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,191,* <p>
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,192,* Objects passed to the returned comparator will first be transformed
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,193,* by the given transformer before they are compared by the given
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,194,* comparator.
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,196,* @param comparator  the sort order to use
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,197,* @param transformer  the transformer to use
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,198,* @return  a comparator that transforms its input objects before comparing them
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,199,* @see  TransformingComparator
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,201,"@SuppressWarnings(""unchecked"")"
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,202,"public static <E> Comparator<E> transformedComparator(Comparator<E> comparator, Transformer<? super E, ? extends E> transformer) {"
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,203,if (comparator == null) {
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,204,comparator = NATURAL_COMPARATOR;
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,206,"return new TransformingComparator<E>(transformer, comparator);"
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,210,*  Returns the smaller of the given objects according to the given
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,211,"*  comparator, returning the second object if the comparator"
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,212,*  returns equal.
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,214,*  @param o1  the first object to compare
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,215,*  @param o2  the second object to compare
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,216,*  @param comparator  the sort order to use
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,217,*  @return  the smaller of the two objects
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,219,"@SuppressWarnings(""unchecked"")"
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,220,"public static <E> E min(E o1, E o2, Comparator<E> comparator) {"
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,221,if (comparator == null) {
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,222,comparator = NATURAL_COMPARATOR;
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,224,"int c = comparator.compare(o1, o2);"
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,225,return (c < 0) ? o1 : o2;
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,229,*  Returns the larger of the given objects according to the given
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,230,"*  comparator, returning the second object if the comparator"
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,231,*  returns equal.
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,233,*  @param o1  the first object to compare
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,234,*  @param o2  the second object to compare
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,235,*  @param comparator  the sort order to use
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,236,*  @return  the larger of the two objects
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,238,"@SuppressWarnings(""unchecked"")"
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,239,"public static <E> E max(E o1, E o2, Comparator<E> comparator) {"
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,240,if (comparator == null) {
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,241,comparator = NATURAL_COMPARATOR;
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,243,"int c = comparator.compare(o1, o2);"
True,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,src/main/java/org/apache/commons/lang3/compare/ComparatorUtils.java,244,return (c > 0) ? o1 : o2;
