is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,34," The truncate and round methods could be considered the Math.floor(),"
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,34,"* The truncate, ceiling and round methods could be considered the Math.floor(),"
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,130,* Constant marker for truncating
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,131,* @since 3.0
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,133,public final static int MODIFY_TRUNCATE = 0;
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,136,* Constant marker for rounding
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,137,* @since 3.0
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,139,public final static int MODIFY_ROUND = 1;
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,142,* Constant marker for ceiling
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,143,* @since 3.0
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,145,public final static int MODIFY_CEILING= 2;
False,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,587,"odify(gval, field, true);"
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,606,"modify(gval, field, MODIFY_ROUND);"
False,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,624,"odify(rounded, field, true);"
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,643,"modify(rounded, field, MODIFY_ROUND);"
False,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,694,"odify(gval, field, false);"
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,713,"modify(gval, field, MODIFY_TRUNCATE);"
False,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,719,"odify(truncated, field, false);"
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,738,"modify(truncated, field, MODIFY_TRUNCATE);"
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,777,"* <p>Ceil this date, leaving the field specified as the most"
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,778,* significant field.</p>
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,780,"* <p>For example, if you had the datetime of 28 Mar 2002"
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,781,"* 13:45:01.231, if you passed with HOUR, it would return 28 Mar"
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,782,"* 2002 13:00:00.000.  If this was passed with MONTH, it would"
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,783,* return 1 Mar 2002 0:00:00.000.</p>
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,785,* @param date  the date to work with
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,786,* @param field  the field from <code>Calendar</code>
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,787,*  or <code>SEMI_MONTH</code>
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,788,* @return the rounded date
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,789,* @throws IllegalArgumentException if the date is <code>null</code>
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,790,* @throws ArithmeticException if the year is over 280 million
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,792,"public static Date ceiling(Date date, int field) {"
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,793,if (date == null) {
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,794,"throw new IllegalArgumentException(""The date must not be null"");"
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,796,Calendar gval = Calendar.getInstance();
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,797,gval.setTime(date);
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,798,"modify(gval, field, MODIFY_CEILING);"
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,799,return gval.getTime();
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,803,"* <p>Ceil this date, leaving the field specified as the most"
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,804,* significant field.</p>
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,806,"* <p>For example, if you had the datetime of 28 Mar 2002"
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,807,"* 13:45:01.231, if you passed with HOUR, it would return 28 Mar"
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,808,"* 2002 13:00:00.000.  If this was passed with MONTH, it would"
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,809,* return 1 Mar 2002 0:00:00.000.</p>
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,811,* @param date  the date to work with
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,812,* @param field  the field from <code>Calendar</code>
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,813,*  or <code>SEMI_MONTH</code>
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,814,* @return the rounded date (a different object)
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,815,* @throws IllegalArgumentException if the date is <code>null</code>
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,816,* @throws ArithmeticException if the year is over 280 million
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,818,"public static Calendar ceiling(Calendar date, int field) {"
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,819,if (date == null) {
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,820,"throw new IllegalArgumentException(""The date must not be null"");"
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,822,Calendar ceiled = (Calendar) date.clone();
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,823,"modify(ceiled, field, MODIFY_CEILING);"
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,824,return ceiled;
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,828,"* <p>Ceil this date, leaving the field specified as the most"
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,829,* significant field.</p>
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,831,"* <p>For example, if you had the datetime of 28 Mar 2002"
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,832,"* 13:45:01.231, if you passed with HOUR, it would return 28 Mar"
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,833,"* 2002 13:00:00.000.  If this was passed with MONTH, it would"
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,834,* return 1 Mar 2002 0:00:00.000.</p>
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,836,"* @param date  the date to work with, either <code>Date</code>"
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,837,*  or <code>Calendar</code>
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,838,* @param field  the field from <code>Calendar</code>
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,839,*  or <code>SEMI_MONTH</code>
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,840,* @return the rounded date
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,841,* @throws IllegalArgumentException if the date
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,842,*  is <code>null</code>
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,843,* @throws ClassCastException if the object type is not a
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,844,*  <code>Date</code> or <code>Calendar</code>
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,845,* @throws ArithmeticException if the year is over 280 million
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,847,"public static Date ceiling(Object date, int field) {"
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,848,if (date == null) {
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,849,"throw new IllegalArgumentException(""The date must not be null"");"
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,851,if (date instanceof Date) {
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,852,"return ceiling((Date) date, field);"
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,853,} else if (date instanceof Calendar) {
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,854,"return ceiling((Calendar) date, field).getTime();"
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,855,} else {
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,856,"throw new ClassCastException(""Could not find ceiling of for type: "" + date.getClass());"
False,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,762," @param round  true to round, false to truncate"
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,866,"* @param modType  type to truncate, round or ceiling"
False,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,765,"rivate static void modify(Calendar val, int field, boolean round) {"
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,869,"private static void modify(Calendar val, int field, int modType) {"
False,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,786,f (!round || millisecs < 500) {
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,890,if (MODIFY_TRUNCATE == modType || millisecs < 500) {
False,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,795,f (!done && (!round || seconds < 30)) {
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,899,if (!done && (MODIFY_TRUNCATE == modType || seconds < 30)) {
False,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,804,f (!done && (!round || minutes < 30)) {
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,908,if (!done && (MODIFY_TRUNCATE == modType || minutes < 30)) {
False,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,820,f (round && roundUp) {
True,src/java/org/apache/commons/lang/time/DateUtils.java,src/java/org/apache/commons/lang/time/DateUtils.java,924,if (modType == MODIFY_CEILING || (modType == MODIFY_ROUND && roundUp)) {
False,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,766,/ Fix for http://issues.apache.org/bugzilla/show_bug.cgi?id=25560
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,766,// Fix for http://issues.apache.org/bugzilla/show_bug.cgi?id=25560 / LANG-13
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1161,* Tests various values with the ceiling method
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1163,public void testCeil() throws Exception {
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1164,"// tests public static Date ceiling(Date date, int field)"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1165,"assertEquals(""ceiling year-1 failed"","
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1166,"dateParser.parse(""January 1, 2003""),"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1167,"DateUtils.ceiling(date1, Calendar.YEAR));"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1168,"assertEquals(""ceiling year-2 failed"","
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1169,"dateParser.parse(""January 1, 2002""),"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1170,"DateUtils.ceiling(date2, Calendar.YEAR));"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1171,"assertEquals(""ceiling month-1 failed"","
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1172,"dateParser.parse(""March 1, 2002""),"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1173,"DateUtils.ceiling(date1, Calendar.MONTH));"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1174,"assertEquals(""ceiling month-2 failed"","
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1175,"dateParser.parse(""December 1, 2001""),"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1176,"DateUtils.ceiling(date2, Calendar.MONTH));"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1177,"assertEquals(""ceiling semimonth-1 failed"","
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1178,"dateParser.parse(""February 16, 2002""),"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1179,"DateUtils.ceiling(date1, DateUtils.SEMI_MONTH));"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1180,"assertEquals(""ceiling semimonth-2 failed"","
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1181,"dateParser.parse(""December 1, 2001""),"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1182,"DateUtils.ceiling(date2, DateUtils.SEMI_MONTH));"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1183,"assertEquals(""ceiling date-1 failed"","
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1184,"dateParser.parse(""February 13, 2002""),"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1185,"DateUtils.ceiling(date1, Calendar.DATE));"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1186,"assertEquals(""ceiling date-2 failed"","
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1187,"dateParser.parse(""November 19, 2001""),"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1188,"DateUtils.ceiling(date2, Calendar.DATE));"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1189,"assertEquals(""ceiling hour-1 failed"","
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1190,"dateTimeParser.parse(""February 12, 2002 13:00:00.000""),"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1191,"DateUtils.ceiling(date1, Calendar.HOUR));"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1192,"assertEquals(""ceiling hour-2 failed"","
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1193,"dateTimeParser.parse(""November 18, 2001 2:00:00.000""),"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1194,"DateUtils.ceiling(date2, Calendar.HOUR));"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1195,"assertEquals(""ceiling minute-1 failed"","
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1196,"dateTimeParser.parse(""February 12, 2002 12:35:00.000""),"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1197,"DateUtils.ceiling(date1, Calendar.MINUTE));"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1198,"assertEquals(""ceiling minute-2 failed"","
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1199,"dateTimeParser.parse(""November 18, 2001 1:24:00.000""),"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1200,"DateUtils.ceiling(date2, Calendar.MINUTE));"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1201,"assertEquals(""ceiling second-1 failed"","
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1202,"dateTimeParser.parse(""February 12, 2002 12:34:57.000""),"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1203,"DateUtils.ceiling(date1, Calendar.SECOND));"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1204,"assertEquals(""ceiling second-2 failed"","
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1205,"dateTimeParser.parse(""November 18, 2001 1:23:12.000""),"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1206,"DateUtils.ceiling(date2, Calendar.SECOND));"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1207,"assertEquals(""ceiling ampm-1 failed"","
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1208,"dateTimeParser.parse(""February 3, 2002 12:00:00.000""),"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1209,"DateUtils.ceiling(dateAmPm1, Calendar.AM_PM));"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1210,"assertEquals(""ceiling ampm-2 failed"","
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1211,"dateTimeParser.parse(""February 3, 2002 12:00:00.000""),"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1212,"DateUtils.ceiling(dateAmPm2, Calendar.AM_PM));"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1213,"assertEquals(""ceiling ampm-3 failed"","
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1214,"dateTimeParser.parse(""February 4, 2002 00:00:00.000""),"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1215,"DateUtils.ceiling(dateAmPm3, Calendar.AM_PM));"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1216,"assertEquals(""ceiling ampm-4 failed"","
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1217,"dateTimeParser.parse(""February 4, 2002 00:00:00.000""),"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1218,"DateUtils.ceiling(dateAmPm4, Calendar.AM_PM));"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1220,"// tests public static Date ceiling(Object date, int field)"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1221,"assertEquals(""ceiling year-1 failed"","
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1222,"dateParser.parse(""January 1, 2003""),"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1223,"DateUtils.ceiling((Object) date1, Calendar.YEAR));"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1224,"assertEquals(""ceiling year-2 failed"","
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1225,"dateParser.parse(""January 1, 2002""),"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1226,"DateUtils.ceiling((Object) date2, Calendar.YEAR));"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1227,"assertEquals(""ceiling month-1 failed"","
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1228,"dateParser.parse(""March 1, 2002""),"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1229,"DateUtils.ceiling((Object) date1, Calendar.MONTH));"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1230,"assertEquals(""ceiling month-2 failed"","
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1231,"dateParser.parse(""December 1, 2001""),"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1232,"DateUtils.ceiling((Object) date2, Calendar.MONTH));"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1233,"assertEquals(""ceiling semimonth-1 failed"","
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1234,"dateParser.parse(""February 16, 2002""),"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1235,"DateUtils.ceiling((Object) date1, DateUtils.SEMI_MONTH));"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1236,"assertEquals(""ceiling semimonth-2 failed"","
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1237,"dateParser.parse(""December 1, 2001""),"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1238,"DateUtils.ceiling((Object) date2, DateUtils.SEMI_MONTH));"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1239,"assertEquals(""ceiling date-1 failed"","
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1240,"dateParser.parse(""February 13, 2002""),"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1241,"DateUtils.ceiling((Object) date1, Calendar.DATE));"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1242,"assertEquals(""ceiling date-2 failed"","
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1243,"dateParser.parse(""November 19, 2001""),"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1244,"DateUtils.ceiling((Object) date2, Calendar.DATE));"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1245,"assertEquals(""ceiling hour-1 failed"","
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1246,"dateTimeParser.parse(""February 12, 2002 13:00:00.000""),"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1247,"DateUtils.ceiling((Object) date1, Calendar.HOUR));"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1248,"assertEquals(""ceiling hour-2 failed"","
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1249,"dateTimeParser.parse(""November 18, 2001 2:00:00.000""),"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1250,"DateUtils.ceiling((Object) date2, Calendar.HOUR));"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1251,"assertEquals(""ceiling minute-1 failed"","
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1252,"dateTimeParser.parse(""February 12, 2002 12:35:00.000""),"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1253,"DateUtils.ceiling((Object) date1, Calendar.MINUTE));"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1254,"assertEquals(""ceiling minute-2 failed"","
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1255,"dateTimeParser.parse(""November 18, 2001 1:24:00.000""),"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1256,"DateUtils.ceiling((Object) date2, Calendar.MINUTE));"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1257,"assertEquals(""ceiling second-1 failed"","
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1258,"dateTimeParser.parse(""February 12, 2002 12:34:57.000""),"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1259,"DateUtils.ceiling((Object) date1, Calendar.SECOND));"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1260,"assertEquals(""ceiling second-2 failed"","
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1261,"dateTimeParser.parse(""November 18, 2001 1:23:12.000""),"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1262,"DateUtils.ceiling((Object) date2, Calendar.SECOND));"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1263,"assertEquals(""ceiling ampm-1 failed"","
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1264,"dateTimeParser.parse(""February 3, 2002 12:00:00.000""),"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1265,"DateUtils.ceiling((Object) dateAmPm1, Calendar.AM_PM));"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1266,"assertEquals(""ceiling ampm-2 failed"","
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1267,"dateTimeParser.parse(""February 3, 2002 12:00:00.000""),"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1268,"DateUtils.ceiling((Object) dateAmPm2, Calendar.AM_PM));"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1269,"assertEquals(""ceiling ampm-3 failed"","
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1270,"dateTimeParser.parse(""February 4, 2002 00:00:00.000""),"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1271,"DateUtils.ceiling((Object) dateAmPm3, Calendar.AM_PM));"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1272,"assertEquals(""ceiling ampm-4 failed"","
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1273,"dateTimeParser.parse(""February 4, 2002 00:00:00.000""),"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1274,"DateUtils.ceiling((Object) dateAmPm4, Calendar.AM_PM));"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1276,"assertEquals(""ceiling calendar second-1 failed"","
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1277,"dateTimeParser.parse(""February 12, 2002 12:34:57.000""),"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1278,"DateUtils.ceiling((Object) cal1, Calendar.SECOND));"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1279,"assertEquals(""ceiling calendar second-2 failed"","
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1280,"dateTimeParser.parse(""November 18, 2001 1:23:12.000""),"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1281,"DateUtils.ceiling((Object) cal2, Calendar.SECOND));"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1283,"assertEquals(""ceiling ampm-1 failed"","
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1284,"dateTimeParser.parse(""February 3, 2002 12:00:00.000""),"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1285,"DateUtils.ceiling((Object) calAmPm1, Calendar.AM_PM));"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1286,"assertEquals(""ceiling ampm-2 failed"","
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1287,"dateTimeParser.parse(""February 3, 2002 12:00:00.000""),"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1288,"DateUtils.ceiling((Object) calAmPm2, Calendar.AM_PM));"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1289,"assertEquals(""ceiling ampm-3 failed"","
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1290,"dateTimeParser.parse(""February 4, 2002 00:00:00.000""),"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1291,"DateUtils.ceiling((Object) calAmPm3, Calendar.AM_PM));"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1292,"assertEquals(""ceiling ampm-4 failed"","
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1293,"dateTimeParser.parse(""February 4, 2002 00:00:00.000""),"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1294,"DateUtils.ceiling((Object) calAmPm4, Calendar.AM_PM));"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1296,try {
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1297,"DateUtils.ceiling((Date) null, Calendar.SECOND);"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1298,fail();
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1299,} catch (IllegalArgumentException ex) {}
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1300,try {
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1301,"DateUtils.ceiling((Calendar) null, Calendar.SECOND);"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1302,fail();
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1303,} catch (IllegalArgumentException ex) {}
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1304,try {
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1305,"DateUtils.ceiling((Object) null, Calendar.SECOND);"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1306,fail();
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1307,} catch (IllegalArgumentException ex) {}
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1308,try {
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1309,"DateUtils.ceiling("""", Calendar.SECOND);"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1310,fail();
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1311,} catch (ClassCastException ex) {}
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1312,try {
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1313,"DateUtils.ceiling(date1, -9999);"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1314,fail();
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1315,} catch(IllegalArgumentException ex) {}
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1318,// Fix for http://issues.apache.org/bugzilla/show_bug.cgi?id=25560
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1319,// Test ceiling across the beginning of daylight saving time
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1320,TimeZone.setDefault(zone);
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1321,dateTimeParser.setTimeZone(zone);
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1323,"assertEquals(""ceiling MET date across DST change-over"","
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1324,"dateTimeParser.parse(""March 31, 2003 00:00:00.000""),"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1325,"DateUtils.ceiling(date4, Calendar.DATE));"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1326,"assertEquals(""ceiling MET date across DST change-over"","
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1327,"dateTimeParser.parse(""March 31, 2003 00:00:00.000""),"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1328,"DateUtils.ceiling((Object) cal4, Calendar.DATE));"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1329,"assertEquals(""ceiling MET date across DST change-over"","
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1330,"dateTimeParser.parse(""March 31, 2003 00:00:00.000""),"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1331,"DateUtils.ceiling(date5, Calendar.DATE));"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1332,"assertEquals(""ceiling MET date across DST change-over"","
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1333,"dateTimeParser.parse(""March 31, 2003 00:00:00.000""),"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1334,"DateUtils.ceiling((Object) cal5, Calendar.DATE));"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1335,"assertEquals(""ceiling MET date across DST change-over"","
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1336,"dateTimeParser.parse(""March 31, 2003 00:00:00.000""),"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1337,"DateUtils.ceiling(date6, Calendar.DATE));"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1338,"assertEquals(""ceiling MET date across DST change-over"","
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1339,"dateTimeParser.parse(""March 31, 2003 00:00:00.000""),"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1340,"DateUtils.ceiling((Object) cal6, Calendar.DATE));"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1341,"assertEquals(""ceiling MET date across DST change-over"","
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1342,"dateTimeParser.parse(""March 31, 2003 00:00:00.000""),"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1343,"DateUtils.ceiling(date7, Calendar.DATE));"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1344,"assertEquals(""ceiling MET date across DST change-over"","
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1345,"dateTimeParser.parse(""March 31, 2003 00:00:00.000""),"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1346,"DateUtils.ceiling((Object) cal7, Calendar.DATE));"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1348,"assertEquals(""ceiling MET date across DST change-over"","
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1349,"dateTimeParser.parse(""March 30, 2003 03:00:00.000""),"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1350,"DateUtils.ceiling(date4, Calendar.HOUR_OF_DAY));"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1351,"assertEquals(""ceiling MET date across DST change-over"","
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1352,"dateTimeParser.parse(""March 30, 2003 03:00:00.000""),"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1353,"DateUtils.ceiling((Object) cal4, Calendar.HOUR_OF_DAY));"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1354,if (SystemUtils.isJavaVersionAtLeast(1.4f)) {
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1355,"assertEquals(""ceiling MET date across DST change-over"","
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1356,"dateTimeParser.parse(""March 30, 2003 03:00:00.000""),"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1357,"DateUtils.ceiling(date5, Calendar.HOUR_OF_DAY));"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1358,"assertEquals(""ceiling MET date across DST change-over"","
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1359,"dateTimeParser.parse(""March 30, 2003 03:00:00.000""),"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1360,"DateUtils.ceiling((Object) cal5, Calendar.HOUR_OF_DAY));"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1361,"assertEquals(""ceiling MET date across DST change-over"","
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1362,"dateTimeParser.parse(""March 30, 2003 04:00:00.000""),"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1363,"DateUtils.ceiling(date6, Calendar.HOUR_OF_DAY));"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1364,"assertEquals(""ceiling MET date across DST change-over"","
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1365,"dateTimeParser.parse(""March 30, 2003 04:00:00.000""),"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1366,"DateUtils.ceiling((Object) cal6, Calendar.HOUR_OF_DAY));"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1367,"assertEquals(""ceiling MET date across DST change-over"","
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1368,"dateTimeParser.parse(""March 30, 2003 04:00:00.000""),"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1369,"DateUtils.ceiling(date7, Calendar.HOUR_OF_DAY));"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1370,"assertEquals(""ceiling MET date across DST change-over"","
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1371,"dateTimeParser.parse(""March 30, 2003 04:00:00.000""),"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1372,"DateUtils.ceiling((Object) cal7, Calendar.HOUR_OF_DAY));"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1373,} else {
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1374,"this.warn(""WARNING: Some date ceiling tests not run since the current version is "" + SystemUtils.JAVA_VERSION);"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1376,TimeZone.setDefault(defaultZone);
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1377,dateTimeParser.setTimeZone(defaultZone);
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1379,"// Bug 31395, large dates"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1380,Date endOfTime = new Date(Long.MAX_VALUE); // fyi: Sun Aug 17 07:12:55 CET 292278994 -- 807 millis
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1381,GregorianCalendar endCal = new GregorianCalendar();
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1382,endCal.setTime(endOfTime);
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1383,try {
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1384,"DateUtils.ceiling(endCal, Calendar.DATE);"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1385,fail();
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1386,} catch (ArithmeticException ex) {}
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1387,"endCal.set(Calendar.YEAR, 280000001);"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1388,try {
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1389,"DateUtils.ceiling(endCal, Calendar.DATE);"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1390,fail();
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1391,} catch (ArithmeticException ex) {}
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1392,"endCal.set(Calendar.YEAR, 280000000);"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1393,"Calendar cal = DateUtils.ceiling(endCal, Calendar.DATE);"
True,src/test/org/apache/commons/lang/time/DateUtilsTest.java,src/test/org/apache/commons/lang/time/DateUtilsTest.java,1394,"assertEquals(0, cal.get(Calendar.HOUR));"
