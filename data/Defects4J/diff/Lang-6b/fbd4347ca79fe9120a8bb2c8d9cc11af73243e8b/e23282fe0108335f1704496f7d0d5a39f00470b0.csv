is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/lang/mutable/MutableBoolean.java,src/java/org/apache/commons/lang/mutable/MutableBoolean.java,30,"ublic class MutableBoolean implements Mutable, Serializable, Comparable<MutableBoolean> {"
True,src/java/org/apache/commons/lang/mutable/MutableBoolean.java,src/java/org/apache/commons/lang/mutable/MutableBoolean.java,30,"public class MutableBoolean implements Mutable<Boolean>, Serializable, Comparable<MutableBoolean> {"
False,src/java/org/apache/commons/lang/mutable/MutableBoolean.java,src/java/org/apache/commons/lang/mutable/MutableBoolean.java,91, @throws ClassCastException
False,src/java/org/apache/commons/lang/mutable/MutableBoolean.java,src/java/org/apache/commons/lang/mutable/MutableBoolean.java,92,             if the argument is not a MutableInt
False,src/java/org/apache/commons/lang/mutable/MutableBoolean.java,src/java/org/apache/commons/lang/mutable/MutableBoolean.java,123,ublic Object getValue() {
True,src/java/org/apache/commons/lang/mutable/MutableBoolean.java,src/java/org/apache/commons/lang/mutable/MutableBoolean.java,121,public Boolean getValue() {
False,src/java/org/apache/commons/lang/mutable/MutableBoolean.java,src/java/org/apache/commons/lang/mutable/MutableBoolean.java,155, @throws ClassCastException
False,src/java/org/apache/commons/lang/mutable/MutableBoolean.java,src/java/org/apache/commons/lang/mutable/MutableBoolean.java,156,             if the type is not a {@link Boolean}
False,src/java/org/apache/commons/lang/mutable/MutableBoolean.java,src/java/org/apache/commons/lang/mutable/MutableBoolean.java,158,ublic void setValue(Object value) {
False,src/java/org/apache/commons/lang/mutable/MutableBoolean.java,src/java/org/apache/commons/lang/mutable/MutableBoolean.java,159,etValue(((Boolean) value).booleanValue());
True,src/java/org/apache/commons/lang/mutable/MutableBoolean.java,src/java/org/apache/commons/lang/mutable/MutableBoolean.java,154,public void setValue(Boolean value) {
True,src/java/org/apache/commons/lang/mutable/MutableBoolean.java,src/java/org/apache/commons/lang/mutable/MutableBoolean.java,155,this.value = value.booleanValue();
False,src/java/org/apache/commons/lang/mutable/MutableByte.java,src/java/org/apache/commons/lang/mutable/MutableByte.java,26,"ublic class MutableByte extends Number implements Comparable<MutableByte>, Mutable {"
True,src/java/org/apache/commons/lang/mutable/MutableByte.java,src/java/org/apache/commons/lang/mutable/MutableByte.java,26,"public class MutableByte extends Number implements Comparable<MutableByte>, Mutable<Number> {"
False,src/java/org/apache/commons/lang/mutable/MutableByte.java,src/java/org/apache/commons/lang/mutable/MutableByte.java,75,ublic Object getValue() {
True,src/java/org/apache/commons/lang/mutable/MutableByte.java,src/java/org/apache/commons/lang/mutable/MutableByte.java,75,public Byte getValue() {
False,src/java/org/apache/commons/lang/mutable/MutableByte.java,src/java/org/apache/commons/lang/mutable/MutableByte.java,96, @throws ClassCastException
False,src/java/org/apache/commons/lang/mutable/MutableByte.java,src/java/org/apache/commons/lang/mutable/MutableByte.java,97,             if the type is not a {@link Number}
False,src/java/org/apache/commons/lang/mutable/MutableByte.java,src/java/org/apache/commons/lang/mutable/MutableByte.java,99,ublic void setValue(Object value) {
False,src/java/org/apache/commons/lang/mutable/MutableByte.java,src/java/org/apache/commons/lang/mutable/MutableByte.java,100,etValue(((Number) value).byteValue());
True,src/java/org/apache/commons/lang/mutable/MutableByte.java,src/java/org/apache/commons/lang/mutable/MutableByte.java,97,public void setValue(Number value) {
True,src/java/org/apache/commons/lang/mutable/MutableByte.java,src/java/org/apache/commons/lang/mutable/MutableByte.java,98,this.value = value.byteValue();
False,src/java/org/apache/commons/lang/mutable/MutableDouble.java,src/java/org/apache/commons/lang/mutable/MutableDouble.java,26,"ublic class MutableDouble extends Number implements Comparable<MutableDouble>, Mutable {"
True,src/java/org/apache/commons/lang/mutable/MutableDouble.java,src/java/org/apache/commons/lang/mutable/MutableDouble.java,26,"public class MutableDouble extends Number implements Comparable<MutableDouble>, Mutable<Number> {"
False,src/java/org/apache/commons/lang/mutable/MutableDouble.java,src/java/org/apache/commons/lang/mutable/MutableDouble.java,75,ublic Object getValue() {
True,src/java/org/apache/commons/lang/mutable/MutableDouble.java,src/java/org/apache/commons/lang/mutable/MutableDouble.java,75,public Double getValue() {
False,src/java/org/apache/commons/lang/mutable/MutableDouble.java,src/java/org/apache/commons/lang/mutable/MutableDouble.java,96, @throws ClassCastException
False,src/java/org/apache/commons/lang/mutable/MutableDouble.java,src/java/org/apache/commons/lang/mutable/MutableDouble.java,97,             if the type is not a {@link Number}
False,src/java/org/apache/commons/lang/mutable/MutableDouble.java,src/java/org/apache/commons/lang/mutable/MutableDouble.java,99,ublic void setValue(Object value) {
False,src/java/org/apache/commons/lang/mutable/MutableDouble.java,src/java/org/apache/commons/lang/mutable/MutableDouble.java,100,etValue(((Number) value).doubleValue());
True,src/java/org/apache/commons/lang/mutable/MutableDouble.java,src/java/org/apache/commons/lang/mutable/MutableDouble.java,97,public void setValue(Number value) {
True,src/java/org/apache/commons/lang/mutable/MutableDouble.java,src/java/org/apache/commons/lang/mutable/MutableDouble.java,98,this.value = value.doubleValue();
False,src/java/org/apache/commons/lang/mutable/MutableDouble.java,src/java/org/apache/commons/lang/mutable/MutableDouble.java,299, @throws ClassCastException if the argument is not a MutableDouble
False,src/java/org/apache/commons/lang/mutable/MutableFloat.java,src/java/org/apache/commons/lang/mutable/MutableFloat.java,26,"ublic class MutableFloat extends Number implements Comparable<MutableFloat>, Mutable {"
True,src/java/org/apache/commons/lang/mutable/MutableFloat.java,src/java/org/apache/commons/lang/mutable/MutableFloat.java,26,"public class MutableFloat extends Number implements Comparable<MutableFloat>, Mutable<Number> {"
False,src/java/org/apache/commons/lang/mutable/MutableFloat.java,src/java/org/apache/commons/lang/mutable/MutableFloat.java,75,ublic Object getValue() {
True,src/java/org/apache/commons/lang/mutable/MutableFloat.java,src/java/org/apache/commons/lang/mutable/MutableFloat.java,75,public Float getValue() {
False,src/java/org/apache/commons/lang/mutable/MutableFloat.java,src/java/org/apache/commons/lang/mutable/MutableFloat.java,96, @throws ClassCastException
False,src/java/org/apache/commons/lang/mutable/MutableFloat.java,src/java/org/apache/commons/lang/mutable/MutableFloat.java,97,             if the type is not a {@link Number}
False,src/java/org/apache/commons/lang/mutable/MutableFloat.java,src/java/org/apache/commons/lang/mutable/MutableFloat.java,99,ublic void setValue(Object value) {
False,src/java/org/apache/commons/lang/mutable/MutableFloat.java,src/java/org/apache/commons/lang/mutable/MutableFloat.java,100,etValue(((Number) value).floatValue());
True,src/java/org/apache/commons/lang/mutable/MutableFloat.java,src/java/org/apache/commons/lang/mutable/MutableFloat.java,97,public void setValue(Number value) {
True,src/java/org/apache/commons/lang/mutable/MutableFloat.java,src/java/org/apache/commons/lang/mutable/MutableFloat.java,98,this.value = value.floatValue();
False,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,26,"ublic class MutableInt extends Number implements Comparable<MutableInt>, Mutable {"
True,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,26,"public class MutableInt extends Number implements Comparable<MutableInt>, Mutable<Number> {"
False,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,75,ublic Object getValue() {
True,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,75,public Integer getValue() {
False,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,99,ublic void setValue(Object value) {
False,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,100,etValue(((Number) value).intValue());
True,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,99,public void setValue(Number value) {
True,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,100,this.value = value.intValue();
False,src/java/org/apache/commons/lang/mutable/MutableInt.java,src/java/org/apache/commons/lang/mutable/MutableInt.java,261, @throws ClassCastException if the argument is not a MutableInt
False,src/java/org/apache/commons/lang/mutable/MutableLong.java,src/java/org/apache/commons/lang/mutable/MutableLong.java,26,"ublic class MutableLong extends Number implements Comparable<MutableLong>, Mutable {"
True,src/java/org/apache/commons/lang/mutable/MutableLong.java,src/java/org/apache/commons/lang/mutable/MutableLong.java,26,"public class MutableLong extends Number implements Comparable<MutableLong>, Mutable<Number> {"
False,src/java/org/apache/commons/lang/mutable/MutableLong.java,src/java/org/apache/commons/lang/mutable/MutableLong.java,75,ublic Object getValue() {
True,src/java/org/apache/commons/lang/mutable/MutableLong.java,src/java/org/apache/commons/lang/mutable/MutableLong.java,75,public Long getValue() {
False,src/java/org/apache/commons/lang/mutable/MutableLong.java,src/java/org/apache/commons/lang/mutable/MutableLong.java,96, @throws ClassCastException
False,src/java/org/apache/commons/lang/mutable/MutableLong.java,src/java/org/apache/commons/lang/mutable/MutableLong.java,97,             if the type is not a {@link Number}
False,src/java/org/apache/commons/lang/mutable/MutableLong.java,src/java/org/apache/commons/lang/mutable/MutableLong.java,99,ublic void setValue(Object value) {
False,src/java/org/apache/commons/lang/mutable/MutableLong.java,src/java/org/apache/commons/lang/mutable/MutableLong.java,100,etValue(((Number) value).longValue());
True,src/java/org/apache/commons/lang/mutable/MutableLong.java,src/java/org/apache/commons/lang/mutable/MutableLong.java,97,public void setValue(Number value) {
True,src/java/org/apache/commons/lang/mutable/MutableLong.java,src/java/org/apache/commons/lang/mutable/MutableLong.java,98,this.value = value.longValue();
False,src/java/org/apache/commons/lang/mutable/MutableLong.java,src/java/org/apache/commons/lang/mutable/MutableLong.java,261, @throws ClassCastException if the argument is not a MutableLong
False,src/java/org/apache/commons/lang/mutable/MutableShort.java,src/java/org/apache/commons/lang/mutable/MutableShort.java,26,"ublic class MutableShort extends Number implements Comparable<MutableShort>, Mutable {"
True,src/java/org/apache/commons/lang/mutable/MutableShort.java,src/java/org/apache/commons/lang/mutable/MutableShort.java,26,"public class MutableShort extends Number implements Comparable<MutableShort>, Mutable<Number> {"
False,src/java/org/apache/commons/lang/mutable/MutableShort.java,src/java/org/apache/commons/lang/mutable/MutableShort.java,75,ublic Object getValue() {
True,src/java/org/apache/commons/lang/mutable/MutableShort.java,src/java/org/apache/commons/lang/mutable/MutableShort.java,75,public Short getValue() {
False,src/java/org/apache/commons/lang/mutable/MutableShort.java,src/java/org/apache/commons/lang/mutable/MutableShort.java,96, @throws ClassCastException
False,src/java/org/apache/commons/lang/mutable/MutableShort.java,src/java/org/apache/commons/lang/mutable/MutableShort.java,97,                  if the type is not a {@link Number}
False,src/java/org/apache/commons/lang/mutable/MutableShort.java,src/java/org/apache/commons/lang/mutable/MutableShort.java,99,ublic void setValue(Object value) {
False,src/java/org/apache/commons/lang/mutable/MutableShort.java,src/java/org/apache/commons/lang/mutable/MutableShort.java,100,etValue(((Number) value).shortValue());
True,src/java/org/apache/commons/lang/mutable/MutableShort.java,src/java/org/apache/commons/lang/mutable/MutableShort.java,97,public void setValue(Number value) {
True,src/java/org/apache/commons/lang/mutable/MutableShort.java,src/java/org/apache/commons/lang/mutable/MutableShort.java,98,this.value = value.shortValue();
False,src/java/org/apache/commons/lang/mutable/MutableShort.java,src/java/org/apache/commons/lang/mutable/MutableShort.java,271, @throws ClassCastException if the argument is not a MutableShort
False,src/test/org/apache/commons/lang/mutable/MutableBooleanTest.java,src/test/org/apache/commons/lang/mutable/MutableBooleanTest.java,116,ry {
False,src/test/org/apache/commons/lang/mutable/MutableBooleanTest.java,src/test/org/apache/commons/lang/mutable/MutableBooleanTest.java,117,"utBool.setValue(""false"");"
False,src/test/org/apache/commons/lang/mutable/MutableBooleanTest.java,src/test/org/apache/commons/lang/mutable/MutableBooleanTest.java,118,ail();
False,src/test/org/apache/commons/lang/mutable/MutableBooleanTest.java,src/test/org/apache/commons/lang/mutable/MutableBooleanTest.java,119, catch (ClassCastException ex) {
False,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,78,ry {
False,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,79,"utNum.setValue(""0"");"
False,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,80,ail();
False,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,src/test/org/apache/commons/lang/mutable/MutableByteTest.java,81, catch (ClassCastException ex) {}
False,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,78,ry {
False,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,79,"utNum.setValue(""0"");"
False,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,80,ail();
False,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,src/test/org/apache/commons/lang/mutable/MutableDoubleTest.java,81, catch (ClassCastException ex) {}
False,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,78,ry {
False,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,79,"utNum.setValue(""0"");"
False,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,80,ail();
False,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,src/test/org/apache/commons/lang/mutable/MutableFloatTest.java,81, catch (ClassCastException ex) {}
False,src/test/org/apache/commons/lang/mutable/MutableIntTest.java,src/test/org/apache/commons/lang/mutable/MutableIntTest.java,78,ry {
False,src/test/org/apache/commons/lang/mutable/MutableIntTest.java,src/test/org/apache/commons/lang/mutable/MutableIntTest.java,79,"utNum.setValue(""0"");"
False,src/test/org/apache/commons/lang/mutable/MutableIntTest.java,src/test/org/apache/commons/lang/mutable/MutableIntTest.java,80,ail();
False,src/test/org/apache/commons/lang/mutable/MutableIntTest.java,src/test/org/apache/commons/lang/mutable/MutableIntTest.java,81, catch (ClassCastException ex) {}
False,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,78,ry {
False,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,79,"utNum.setValue(""0"");"
False,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,80,ail();
False,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,src/test/org/apache/commons/lang/mutable/MutableLongTest.java,81, catch (ClassCastException ex) {}
False,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,46,"ssertEquals(null, new MutableObject().getValue());"
True,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,46,"assertEquals(null, new MutableObject<String>().getValue());"
False,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,49,"ssertSame(i, new MutableObject(i).getValue());"
False,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,50,"ssertSame(""HI"", new MutableObject(""HI"").getValue());"
False,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,51,"ssertSame(null, new MutableObject(null).getValue());"
True,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,49,"assertSame(i, new MutableObject<Integer>(i).getValue());"
True,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,50,"assertSame(""HI"", new MutableObject<String>(""HI"").getValue());"
True,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,51,"assertSame(null, new MutableObject<Object>(null).getValue());"
False,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,55,inal MutableObject mutNum = new MutableObject();
False,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,56,"ssertEquals(null, new MutableObject().getValue());"
True,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,55,final MutableObject<String> mutNum = new MutableObject<String>();
True,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,56,"assertEquals(null, new MutableObject<Object>().getValue());"
False,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,66,"inal MutableObject mutNumA = new MutableObject(""ALPHA"");"
False,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,67,"inal MutableObject mutNumB = new MutableObject(""ALPHA"");"
False,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,68,"inal MutableObject mutNumC = new MutableObject(""BETA"");"
False,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,69,inal MutableObject mutNumD = new MutableObject(null);
True,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,66,"final MutableObject<String> mutNumA = new MutableObject<String>(""ALPHA"");"
True,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,67,"final MutableObject<String> mutNumB = new MutableObject<String>(""ALPHA"");"
True,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,68,"final MutableObject<String> mutNumC = new MutableObject<String>(""BETA"");"
True,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,69,final MutableObject<String> mutNumD = new MutableObject<String>(null);
False,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,87,"inal MutableObject mutNumA = new MutableObject(""ALPHA"");"
False,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,88,"inal MutableObject mutNumB = new MutableObject(""ALPHA"");"
False,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,89,"inal MutableObject mutNumC = new MutableObject(""BETA"");"
False,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,90,inal MutableObject mutNumD = new MutableObject(null);
True,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,87,"final MutableObject<String> mutNumA = new MutableObject<String>(""ALPHA"");"
True,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,88,"final MutableObject<String> mutNumB = new MutableObject<String>(""ALPHA"");"
True,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,89,"final MutableObject<String> mutNumC = new MutableObject<String>(""BETA"");"
True,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,90,final MutableObject<String> mutNumD = new MutableObject<String>(null);
False,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,101,"ssertEquals(""HI"", new MutableObject(""HI"").toString());"
False,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,102,"ssertEquals(""10.0"", new MutableObject(new Double(10)).toString());"
False,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,103,"ssertEquals(""null"", new MutableObject(null).toString());"
True,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,101,"assertEquals(""HI"", new MutableObject<String>(""HI"").toString());"
True,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,102,"assertEquals(""10.0"", new MutableObject<Double>(new Double(10)).toString());"
True,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,src/test/org/apache/commons/lang/mutable/MutableObjectTest.java,103,"assertEquals(""null"", new MutableObject<Object>(null).toString());"
False,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,78,ry {
False,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,79,"utNum.setValue(""0"");"
False,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,80,ail();
False,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,src/test/org/apache/commons/lang/mutable/MutableShortTest.java,81, catch (ClassCastException ex) {}
