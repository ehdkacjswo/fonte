is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,23,import java.util.Collections;
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,24,import java.util.Comparator;
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,25,import java.util.HashMap;
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,26,import java.util.Map;
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,27,import java.util.TreeSet;
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,30,import org.apache.commons.lang3.mutable.MutableInt;
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,420,"* Find the ""best guess"" middle value among comparables. If there is an even"
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,421,"* number of total values, the lower of the two middle values will be returned."
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,422,* @param <T> type of values processed by this method
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,423,* @param items to compare
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,424,* @return T at middle position
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,425,* @throws NullPointerException if items is {@code null}
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,426,* @throws IllegalArgumentException if items is empty or contains {@code null} values
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,428,public static <T extends Comparable<? super T>> T median(T... items) {
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,429,Validate.notEmpty(items);
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,430,Validate.noNullElements(items);
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,431,TreeSet<T> sort = new TreeSet<T>();
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,432,"Collections.addAll(sort, items);"
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,433,"@SuppressWarnings(""unchecked"") //we know all items added were T instances"
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,434,T result = (T) sort.toArray()[(sort.size() - 1) / 2];
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,435,return result;
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,439,"* Find the ""best guess"" middle value among comparables. If there is an even"
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,440,"* number of total values, the lower of the two middle values will be returned."
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,441,* @param <T> type of values processed by this method
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,442,* @param comparator to use for comparisons
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,443,* @param items to compare
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,444,* @return T at middle position
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,445,* @throws NullPointerException if items or comparator is {@code null}
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,446,* @throws IllegalArgumentException if items is empty or contains {@code null} values
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,448,"public static <T> T median(Comparator<T> comparator, T... items) {"
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,449,"Validate.notEmpty(items, ""null/empty items"");"
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,450,Validate.noNullElements(items);
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,451,"Validate.notNull(comparator, ""null comparator"");"
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,452,TreeSet<T> sort = new TreeSet<T>(comparator);
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,453,"Collections.addAll(sort, items);"
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,454,"@SuppressWarnings(""unchecked"") //we know all items added were T instances"
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,455,T result = (T) sort.toArray()[(sort.size() - 1) / 2];
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,456,return result;
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,459,// Mode
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,462,* Find the most frequently occurring item.
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,464,* @param <T>
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,465,* @param items to check
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,466,"* @return most populous T, {@code null} if non-unique or no items supplied"
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,468,public static <T> T mode(T... items) {
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,469,if (ArrayUtils.isNotEmpty(items)) {
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,470,"HashMap<T, MutableInt> occurrences = new HashMap<T, MutableInt>(items.length);"
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,471,for (T t : items) {
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,472,MutableInt count = occurrences.get(t);
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,473,if (count == null) {
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,474,"occurrences.put(t, new MutableInt(1));"
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,475,} else {
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,476,count.increment();
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,479,T result = null;
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,480,int max = 0;
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,481,"for (Map.Entry<T, MutableInt> e : occurrences.entrySet()) {"
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,482,int cmp = e.getValue().intValue();
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,483,if (cmp == max) {
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,484,result = null;
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,485,} else if (cmp > max) {
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,486,max = cmp;
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,487,result = e.getKey();
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,490,return result;
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,492,return null;
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,26,import java.util.Comparator;
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,292,@Test
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,293,public void testMedian() {
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,294,"assertEquals(""foo"", ObjectUtils.median(""foo""));"
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,295,"assertEquals(""bar"", ObjectUtils.median(""foo"", ""bar""));"
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,296,"assertEquals(""baz"", ObjectUtils.median(""foo"", ""bar"", ""baz""));"
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,297,"assertEquals(""baz"", ObjectUtils.median(""foo"", ""bar"", ""baz"", ""blah""));"
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,298,"assertEquals(""blah"", ObjectUtils.median(""foo"", ""bar"", ""baz"", ""blah"", ""wah""));"
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,299,"assertEquals(Integer.valueOf(5),"
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,300,"ObjectUtils.median(Integer.valueOf(1), Integer.valueOf(5), Integer.valueOf(10)));"
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,301,assertEquals(
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,302,"Integer.valueOf(7),"
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,303,"ObjectUtils.median(Integer.valueOf(5), Integer.valueOf(6), Integer.valueOf(7), Integer.valueOf(8),"
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,304,Integer.valueOf(9)));
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,305,"assertEquals(Integer.valueOf(6),"
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,306,"ObjectUtils.median(Integer.valueOf(5), Integer.valueOf(6), Integer.valueOf(7), Integer.valueOf(8)));"
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,309,@Test(expected = NullPointerException.class)
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,310,public void testMedian_nullItems() {
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,311,ObjectUtils.median((String[]) null);
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,314,@Test(expected = IllegalArgumentException.class)
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,315,public void testMedian_emptyItems() {
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,316,ObjectUtils.<String> median();
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,319,@Test
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,320,public void testComparatorMedian() {
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,321,CharSequenceComparator cmp = new CharSequenceComparator();
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,322,"NonComparableCharSequence foo = new NonComparableCharSequence(""foo"");"
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,323,"NonComparableCharSequence bar = new NonComparableCharSequence(""bar"");"
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,324,"NonComparableCharSequence baz = new NonComparableCharSequence(""baz"");"
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,325,"NonComparableCharSequence blah = new NonComparableCharSequence(""blah"");"
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,326,"NonComparableCharSequence wah = new NonComparableCharSequence(""wah"");"
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,327,"assertSame(foo, ObjectUtils.median(cmp, foo));"
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,328,"assertSame(bar, ObjectUtils.median(cmp, foo, bar));"
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,329,"assertSame(baz, ObjectUtils.median(cmp, foo, bar, baz));"
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,330,"assertSame(baz, ObjectUtils.median(cmp, foo, bar, baz, blah));"
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,331,"assertSame(blah, ObjectUtils.median(cmp, foo, bar, baz, blah, wah));"
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,334,@Test(expected = NullPointerException.class)
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,335,public void testComparatorMedian_nullComparator() {
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,336,"ObjectUtils.median((Comparator<CharSequence>) null, new NonComparableCharSequence(""foo""));"
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,339,@Test(expected = NullPointerException.class)
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,340,public void testComparatorMedian_nullItems() {
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,341,"ObjectUtils.median(new CharSequenceComparator(), (CharSequence[]) null);"
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,344,@Test(expected = IllegalArgumentException.class)
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,345,public void testComparatorMedian_emptyItems() {
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,346,ObjectUtils.median(new CharSequenceComparator());
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,349,"@SuppressWarnings(""unchecked"")"
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,350,@Test
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,351,public void testMode() {
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,352,assertNull(ObjectUtils.mode((Object[]) null));
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,353,assertNull(ObjectUtils.mode());
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,354,"assertNull(ObjectUtils.mode(""foo"", ""bar"", ""baz""));"
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,355,"assertNull(ObjectUtils.mode(""foo"", ""bar"", ""baz"", ""foo"", ""bar""));"
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,356,"assertEquals(""foo"", ObjectUtils.mode(""foo"", ""bar"", ""baz"", ""foo""));"
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,357,"assertEquals(Integer.valueOf(9),"
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,358,"ObjectUtils.mode(""foo"", ""bar"", ""baz"", Integer.valueOf(9), Integer.valueOf(10), Integer.valueOf(9)));"
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,469,static final class NonComparableCharSequence implements CharSequence {
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,470,final String value;
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,473,* Create a new NonComparableCharSequence instance.
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,475,* @param value
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,477,public NonComparableCharSequence(String value) {
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,478,super();
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,479,Validate.notNull(value);
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,480,this.value = value;
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,483,public char charAt(int arg0) {
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,484,return value.charAt(arg0);
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,487,public int length() {
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,488,return value.length();
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,491,"public CharSequence subSequence(int arg0, int arg1) {"
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,492,"return value.subSequence(arg0, arg1);"
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,495,@Override
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,496,public String toString() {
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,497,return value;
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,501,static final class CharSequenceComparator implements Comparator<CharSequence> {
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,503,"public int compare(CharSequence o1, CharSequence o2) {"
True,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,src/test/java/org/apache/commons/lang3/ObjectUtilsTest.java,504,return o1.toString().compareTo(o2.toString());
