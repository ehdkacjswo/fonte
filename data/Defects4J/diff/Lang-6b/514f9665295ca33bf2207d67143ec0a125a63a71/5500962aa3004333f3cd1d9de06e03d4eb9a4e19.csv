is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,126," @param enumClass the class of the enum we are working with, not null"
False,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,127, @param set       the set of enum values we want to convert
True,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,126,"* @param enumClass the class of the enum we are working with, not {@code null}"
True,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,127,"* @param values    the values we want to convert, not {@code null}"
True,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,130,* @throws NullPointerException if {@code enumClass} or {@code values} is {@code null}
True,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,131,* @throws IllegalArgumentException if {@code enumClass} is not an enum class or has more than 64 values
True,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,132,* @since 3.0.1
False,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,131,"ublic static <E extends Enum<E>> long generateBitVector(Class<E> enumClass, EnumSet<E> set) {"
False,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,132,f (enumClass == null) {
False,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,133,"hrow new IllegalArgumentException(""EnumClass must be defined."");"
False,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,135,inal E[] constants = enumClass.getEnumConstants();
False,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,136,f (constants != null && constants.length > 64) {
False,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,137,"hrow new IllegalArgumentException(""EnumClass is too big to be stored in a 64-bit value."");"
True,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,134,"public static <E extends Enum<E>> long generateBitVector(Class<E> enumClass, Iterable<E> values) {"
True,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,135,checkBitVectorable(enumClass);
True,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,136,Validate.notNull(values);
False,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,140,f (set != null) {
False,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,141,f (constants != null && constants.length > 0) {
False,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,142,or (E constant : constants) {
False,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,143,f (set.contains(constant)) {
False,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,144,"otal += Math.pow(2, constant.ordinal());"
True,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,138,for (E constant : values) {
True,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,139,total |= (1 << constant.ordinal());
True,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,145,* <p>Creates a long bit vector representation of the given array of Enum values.</p>
True,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,147,* <p>This generates a value that is usable by {@link EnumUtils#processBitVector}.</p>
True,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,149,"* <p>Do not use this method if you have more than 64 values in your Enum, as this"
True,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,150,* would create a value greater than a long can hold.</p>
True,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,152,"* @param enumClass the class of the enum we are working with, not {@code null}"
True,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,153,"* @param values    the values we want to convert, not {@code null}"
True,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,154,* @param <E>       the type of the enumeration
True,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,155,* @return a long whose binary value represents the given set of enum values.
True,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,156,* @throws NullPointerException if {@code enumClass} or {@code values} is {@code null}
True,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,157,* @throws IllegalArgumentException if {@code enumClass} is not an enum class or has more than 64 values
True,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,158,* @since 3.0.1
True,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,160,"public static <E extends Enum<E>> long generateBitVector(Class<E> enumClass, E... values) {"
True,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,161,Validate.noNullElements(values);
True,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,162,"return generateBitVector(enumClass, Arrays.<E> asList(values));"
False,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,157," @param enumClass the class of the enum we are working with, not null"
True,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,170,"* @param enumClass the class of the enum we are working with, not {@code null}"
True,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,174,* @throws NullPointerException if {@code enumClass} is {@code null}
True,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,175,* @throws IllegalArgumentException if {@code enumClass} is not an enum class or has more than 64 values
True,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,176,* @since 3.0.1
False,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,163,f (enumClass == null) {
False,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,164,"hrow new IllegalArgumentException(""EnumClass must be defined."");"
False,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,166,inal E[] constants = enumClass.getEnumConstants();
False,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,167,f (constants != null && constants.length > 64) {
False,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,168,"hrow new IllegalArgumentException(""EnumClass is too big to be stored in a 64-bit value."");"
False,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,170,inal EnumSet results = EnumSet.noneOf(enumClass);
False,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,171,f (constants != null && constants.length > 0) {
False,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,172,or (E constant : constants) {
False,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,173,f ((value & (1 << constant.ordinal())) != 0) {
False,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,174,esults.add(constant);
True,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,179,final E[] constants = checkBitVectorable(enumClass).getEnumConstants();
True,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,180,final EnumSet<E> results = EnumSet.noneOf(enumClass);
True,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,181,for (E constant : constants) {
True,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,182,if ((value & (1 << constant.ordinal())) != 0) {
True,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,183,results.add(constant);
True,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,190,* Validate that {@code enumClass} is compatible with representation in a {@code long}.
True,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,191,* @param <E> the type of the enumeration
True,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,192,* @param enumClass to check
True,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,193,* @return {@code enumClass}
True,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,194,* @throws NullPointerException if {@code enumClass} is {@code null}
True,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,195,* @throws IllegalArgumentException if {@code enumClass} is not an enum class or has more than 64 values
True,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,196,* @since 3.0.1
True,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,198,private static <E extends Enum<E>> Class<E> checkBitVectorable(Class<E> enumClass) {
True,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,199,"Validate.notNull(enumClass, ""EnumClass must be defined."");"
True,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,201,final E[] constants = enumClass.getEnumConstants();
True,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,202,"Validate.isTrue(constants != null, ""%s does not seem to be an Enum type"", enumClass);"
True,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,203,"Validate.isTrue(constants.length <= Long.SIZE, ""Cannot store %s %s values in %s bits"", constants.length,"
True,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,204,"enumClass.getSimpleName(), Long.SIZE);"
True,src/main/java/org/apache/commons/lang3/EnumUtils.java,src/main/java/org/apache/commons/lang3/EnumUtils.java,206,return enumClass;
True,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,23,import java.util.ArrayList;
False,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,92,Test(expected=IllegalArgumentException.class)
True,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,93,@Test(expected=NullPointerException.class)
True,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,98,@Test(expected=NullPointerException.class)
True,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,99,public void test_generateBitVector_nullIterable() {
True,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,100,"EnumUtils.generateBitVector(null, (Iterable<Traffic>) null);"
True,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,103,@Test(expected=NullPointerException.class)
True,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,104,public void test_generateBitVector_nullClassWithArray() {
True,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,105,"EnumUtils.generateBitVector(null, Traffic.RED);"
True,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,108,@Test(expected=NullPointerException.class)
True,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,109,public void test_generateBitVector_nullArray() {
True,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,110,"EnumUtils.generateBitVector(null, (Traffic[]) null);"
True,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,118,@Test(expected=IllegalArgumentException.class)
True,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,119,public void test_generateBitVector_longClassWithArray() {
True,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,120,"EnumUtils.generateBitVector(TooMany.class, TooMany.A1);"
True,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,123,"@SuppressWarnings(""unchecked"")"
True,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,124,@Test(expected=IllegalArgumentException.class)
True,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,125,public void test_generateBitVector_nonEnumClass() {
True,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,126,"@SuppressWarnings(""rawtypes"")"
True,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,127,Class rawType = Object.class;
True,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,128,"@SuppressWarnings(""rawtypes"")"
True,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,129,List rawList = new ArrayList();
True,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,130,"EnumUtils.generateBitVector(rawType, rawList);"
True,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,133,"@SuppressWarnings(""unchecked"")"
True,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,134,@Test(expected=IllegalArgumentException.class)
True,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,135,public void test_generateBitVector_nonEnumClassWithArray() {
True,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,136,"@SuppressWarnings(""rawtypes"")"
True,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,137,Class rawType = Object.class;
True,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,138,EnumUtils.generateBitVector(rawType);
False,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,104,"ssertEquals(0L, EnumUtils.generateBitVector(Traffic.class, null));"
False,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,115,Test(expected=IllegalArgumentException.class)
True,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,153,@Test
True,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,154,public void test_generateBitVectorFromArray() {
True,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,155,"assertEquals(0L, EnumUtils.generateBitVector(Traffic.class));"
True,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,156,"assertEquals(1L, EnumUtils.generateBitVector(Traffic.class, Traffic.RED));"
True,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,157,"assertEquals(2L, EnumUtils.generateBitVector(Traffic.class, Traffic.AMBER));"
True,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,158,"assertEquals(4L, EnumUtils.generateBitVector(Traffic.class, Traffic.GREEN));"
True,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,159,"assertEquals(3L, EnumUtils.generateBitVector(Traffic.class, Traffic.RED, Traffic.AMBER));"
True,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,160,"assertEquals(5L, EnumUtils.generateBitVector(Traffic.class, Traffic.RED, Traffic.GREEN));"
True,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,161,"assertEquals(6L, EnumUtils.generateBitVector(Traffic.class, Traffic.AMBER, Traffic.GREEN));"
True,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,162,"assertEquals(7L, EnumUtils.generateBitVector(Traffic.class, Traffic.RED, Traffic.AMBER, Traffic.GREEN));"
True,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,163,//gracefully handles duplicates:
True,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,164,"assertEquals(7L, EnumUtils.generateBitVector(Traffic.class, Traffic.RED, Traffic.AMBER, Traffic.GREEN, Traffic.GREEN));"
True,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,src/test/java/org/apache/commons/lang3/EnumUtilsTest.java,167,@Test(expected=NullPointerException.class)
