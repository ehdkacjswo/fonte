is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/lang3/time/DateUtils.java,src/main/java/org/apache/commons/lang3/time/DateUtils.java,25,import java.util.Locale;
False,src/main/java/org/apache/commons/lang3/time/DateUtils.java,src/main/java/org/apache/commons/lang3/time/DateUtils.java,266,"eturn parseDateWithLeniency(str, parsePatterns, true);"
True,src/main/java/org/apache/commons/lang3/time/DateUtils.java,src/main/java/org/apache/commons/lang3/time/DateUtils.java,267,"return parseDate(str, null, parsePatterns);"
True,src/main/java/org/apache/commons/lang3/time/DateUtils.java,src/main/java/org/apache/commons/lang3/time/DateUtils.java,272,"* <p>Parses a string representing a date by trying a variety of different parsers,"
True,src/main/java/org/apache/commons/lang3/time/DateUtils.java,src/main/java/org/apache/commons/lang3/time/DateUtils.java,273,* using the default date format symbols for the given locale.</p>
True,src/main/java/org/apache/commons/lang3/time/DateUtils.java,src/main/java/org/apache/commons/lang3/time/DateUtils.java,275,* <p>The parse will try each parse pattern in turn.
True,src/main/java/org/apache/commons/lang3/time/DateUtils.java,src/main/java/org/apache/commons/lang3/time/DateUtils.java,276,* A parse is only deemed successful if it parses the whole of the input string.
True,src/main/java/org/apache/commons/lang3/time/DateUtils.java,src/main/java/org/apache/commons/lang3/time/DateUtils.java,277,"* If no parse patterns match, a ParseException is thrown.</p>"
True,src/main/java/org/apache/commons/lang3/time/DateUtils.java,src/main/java/org/apache/commons/lang3/time/DateUtils.java,278,* The parser will be lenient toward the parsed date.
True,src/main/java/org/apache/commons/lang3/time/DateUtils.java,src/main/java/org/apache/commons/lang3/time/DateUtils.java,280,"* @param str  the date to parse, not null"
True,src/main/java/org/apache/commons/lang3/time/DateUtils.java,src/main/java/org/apache/commons/lang3/time/DateUtils.java,281,"* @param locale the locale whose date format symbols should be used. If <code>null</code>,"
True,src/main/java/org/apache/commons/lang3/time/DateUtils.java,src/main/java/org/apache/commons/lang3/time/DateUtils.java,282,"* the system locale is used (as per {@link #parseDate(String, String...)})."
True,src/main/java/org/apache/commons/lang3/time/DateUtils.java,src/main/java/org/apache/commons/lang3/time/DateUtils.java,283,"* @param parsePatterns  the date format patterns to use, see SimpleDateFormat, not null"
True,src/main/java/org/apache/commons/lang3/time/DateUtils.java,src/main/java/org/apache/commons/lang3/time/DateUtils.java,284,* @return the parsed date
True,src/main/java/org/apache/commons/lang3/time/DateUtils.java,src/main/java/org/apache/commons/lang3/time/DateUtils.java,285,* @throws IllegalArgumentException if the date string or pattern array is null
True,src/main/java/org/apache/commons/lang3/time/DateUtils.java,src/main/java/org/apache/commons/lang3/time/DateUtils.java,286,* @throws ParseException if none of the date patterns were suitable (or there were none)
True,src/main/java/org/apache/commons/lang3/time/DateUtils.java,src/main/java/org/apache/commons/lang3/time/DateUtils.java,287,* @since 3.2
True,src/main/java/org/apache/commons/lang3/time/DateUtils.java,src/main/java/org/apache/commons/lang3/time/DateUtils.java,289,"public static Date parseDate(String str, Locale locale, String... parsePatterns) throws ParseException {"
True,src/main/java/org/apache/commons/lang3/time/DateUtils.java,src/main/java/org/apache/commons/lang3/time/DateUtils.java,290,"return parseDateWithLeniency(str, locale, parsePatterns, true);"
False,src/main/java/org/apache/commons/lang3/time/DateUtils.java,src/main/java/org/apache/commons/lang3/time/DateUtils.java,286,"eturn parseDateWithLeniency(str, parsePatterns, false);"
True,src/main/java/org/apache/commons/lang3/time/DateUtils.java,src/main/java/org/apache/commons/lang3/time/DateUtils.java,310,"return parseDateStrictly(str, null, parsePatterns);"
True,src/main/java/org/apache/commons/lang3/time/DateUtils.java,src/main/java/org/apache/commons/lang3/time/DateUtils.java,314,"* <p>Parses a string representing a date by trying a variety of different parsers,"
True,src/main/java/org/apache/commons/lang3/time/DateUtils.java,src/main/java/org/apache/commons/lang3/time/DateUtils.java,315,* using the default date format symbols for the given locale..</p>
True,src/main/java/org/apache/commons/lang3/time/DateUtils.java,src/main/java/org/apache/commons/lang3/time/DateUtils.java,317,* <p>The parse will try each parse pattern in turn.
True,src/main/java/org/apache/commons/lang3/time/DateUtils.java,src/main/java/org/apache/commons/lang3/time/DateUtils.java,318,* A parse is only deemed successful if it parses the whole of the input string.
True,src/main/java/org/apache/commons/lang3/time/DateUtils.java,src/main/java/org/apache/commons/lang3/time/DateUtils.java,319,"* If no parse patterns match, a ParseException is thrown.</p>"
True,src/main/java/org/apache/commons/lang3/time/DateUtils.java,src/main/java/org/apache/commons/lang3/time/DateUtils.java,320,"* The parser parses strictly - it does not allow for dates such as ""February 942, 1996""."
True,src/main/java/org/apache/commons/lang3/time/DateUtils.java,src/main/java/org/apache/commons/lang3/time/DateUtils.java,322,"* @param str  the date to parse, not null"
True,src/main/java/org/apache/commons/lang3/time/DateUtils.java,src/main/java/org/apache/commons/lang3/time/DateUtils.java,323,"* @param locale the locale whose date format symbols should be used. If <code>null</code>,"
True,src/main/java/org/apache/commons/lang3/time/DateUtils.java,src/main/java/org/apache/commons/lang3/time/DateUtils.java,324,"* the system locale is used (as per {@link #parseDateStrictly(String, String...)})."
True,src/main/java/org/apache/commons/lang3/time/DateUtils.java,src/main/java/org/apache/commons/lang3/time/DateUtils.java,325,"* @param parsePatterns  the date format patterns to use, see SimpleDateFormat, not null"
True,src/main/java/org/apache/commons/lang3/time/DateUtils.java,src/main/java/org/apache/commons/lang3/time/DateUtils.java,326,* @return the parsed date
True,src/main/java/org/apache/commons/lang3/time/DateUtils.java,src/main/java/org/apache/commons/lang3/time/DateUtils.java,327,* @throws IllegalArgumentException if the date string or pattern array is null
True,src/main/java/org/apache/commons/lang3/time/DateUtils.java,src/main/java/org/apache/commons/lang3/time/DateUtils.java,328,* @throws ParseException if none of the date patterns were suitable
True,src/main/java/org/apache/commons/lang3/time/DateUtils.java,src/main/java/org/apache/commons/lang3/time/DateUtils.java,329,* @since 3.2
True,src/main/java/org/apache/commons/lang3/time/DateUtils.java,src/main/java/org/apache/commons/lang3/time/DateUtils.java,331,"public static Date parseDateStrictly(String str, Locale locale, String... parsePatterns) throws ParseException {"
True,src/main/java/org/apache/commons/lang3/time/DateUtils.java,src/main/java/org/apache/commons/lang3/time/DateUtils.java,332,"return parseDateWithLeniency(str, null, parsePatterns, false);"
True,src/main/java/org/apache/commons/lang3/time/DateUtils.java,src/main/java/org/apache/commons/lang3/time/DateUtils.java,343,"* @param locale the locale to use when interpretting the pattern, can be null in which"
True,src/main/java/org/apache/commons/lang3/time/DateUtils.java,src/main/java/org/apache/commons/lang3/time/DateUtils.java,344,* case the default system locale is used
False,src/main/java/org/apache/commons/lang3/time/DateUtils.java,src/main/java/org/apache/commons/lang3/time/DateUtils.java,305,"tring str, String[] parsePatterns, boolean lenient) throws ParseException {"
True,src/main/java/org/apache/commons/lang3/time/DateUtils.java,src/main/java/org/apache/commons/lang3/time/DateUtils.java,353,"String str, Locale locale, String[] parsePatterns, boolean lenient) throws ParseException {"
False,src/main/java/org/apache/commons/lang3/time/DateUtils.java,src/main/java/org/apache/commons/lang3/time/DateUtils.java,310,impleDateFormat parser = new SimpleDateFormat();
True,src/main/java/org/apache/commons/lang3/time/DateUtils.java,src/main/java/org/apache/commons/lang3/time/DateUtils.java,358,SimpleDateFormat parser;
True,src/main/java/org/apache/commons/lang3/time/DateUtils.java,src/main/java/org/apache/commons/lang3/time/DateUtils.java,359,if (locale == null) {
True,src/main/java/org/apache/commons/lang3/time/DateUtils.java,src/main/java/org/apache/commons/lang3/time/DateUtils.java,360,parser = new SimpleDateFormat();
True,src/main/java/org/apache/commons/lang3/time/DateUtils.java,src/main/java/org/apache/commons/lang3/time/DateUtils.java,361,} else {
True,src/main/java/org/apache/commons/lang3/time/DateUtils.java,src/main/java/org/apache/commons/lang3/time/DateUtils.java,362,"parser = new SimpleDateFormat("""", locale);"
False,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,19,mport org.junit.Test;
False,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,20,mport org.junit.Before;
False,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,21,mport static org.junit.Assert.*;
True,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,21,import static org.junit.Assert.assertEquals;
True,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,22,import static org.junit.Assert.assertFalse;
True,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,23,import static org.junit.Assert.assertNotNull;
True,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,24,import static org.junit.Assert.assertNotSame;
True,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,25,import static org.junit.Assert.assertTrue;
True,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,26,import static org.junit.Assert.fail;
True,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,27,import static org.junit.Assume.assumeTrue;
True,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,34,import java.util.Arrays;
True,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,38,import java.util.HashSet;
True,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,42,import java.util.Set;
True,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,47,import org.apache.commons.lang3.ArrayUtils;
True,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,50,import org.junit.Before;
True,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,51,import org.junit.Test;
True,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,1622,* Tests that an IllegalArgumentException is thrown if the
True,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,1623,* locale supplied is not supported by the DateFormat class
True,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,1624,* hierarchy. Note: this test is likely to pass without testing
True,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,1625,"* the behaviour, as typically all locales are supported."
True,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,1627,* @throws Exception
True,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,1629,@Test(expected=IllegalArgumentException.class)
True,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,1630,public void testParseBadLocale() throws Exception {
True,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,1631,Set<Locale> availableLocales = new HashSet<Locale>(
True,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,1632,Arrays.asList(Locale.getAvailableLocales()));
True,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,1634,Set<Locale> dateLocales = new HashSet<Locale>(
True,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,1635,Arrays.asList(DateFormat.getAvailableLocales()));
True,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,1637,Set<Locale> intersection = new HashSet<Locale>(availableLocales);
True,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,1638,intersection.retainAll(dateLocales);
True,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,1639,availableLocales.removeAll(intersection);
True,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,1641,// availableLocales now contains only those Locales that are
True,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,1642,// not supported by the DateFormat class hierarchy. Could be
True,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,1643,"// empty, in which case we skip the test."
True,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,1644,assumeTrue(availableLocales.size() > 0);
True,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,1646,Locale invalidLocale = availableLocales.iterator().next();
True,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,1648,"String[] parsers = {""yyyy""};"
True,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,1649,"DateUtils.parseDate(""foo"", invalidLocale, parsers);"
True,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,1653,* Retrieves a non-system locale date pattern string and attempts
True,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,1654,* to use it.
True,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,1656,* @throws Exception
True,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,1658,@Test
True,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,1659,public void testParseNonSystemLocale() throws Exception {
True,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,1660,// Retrieve standard long form date pattern
True,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,1661,String localPattern = getLongDateFormatForLocale(Locale.getDefault());
True,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,1662,assumeTrue(localPattern != null);
True,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,1664,// Find a pattern from another locale that doesn't match
True,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,1665,String nonMatchingPattern = null;
True,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,1666,Locale foreignLocale = null;
True,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,1667,for (Locale locale : DateFormat.getAvailableLocales()) {
True,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,1668,String foreignPattern = getLongDateFormatForLocale(locale);
True,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,1669,if (foreignPattern != null && !foreignPattern.equals(localPattern)) {
True,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,1670,getLongDateFormatForLocale(locale);
True,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,1671,nonMatchingPattern = foreignPattern;
True,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,1672,foreignLocale = locale;
True,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,1673,break;
True,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,1677,// There is a slim chance that we can't find a date string that
True,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,1678,// differs from the system default. Skip test in that case.
True,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,1679,assumeTrue(nonMatchingPattern != null && foreignLocale != null);
True,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,1681,Date testDate = new Date();
True,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,1682,"SimpleDateFormat sdf = new SimpleDateFormat("""", foreignLocale);"
True,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,1683,sdf.applyLocalizedPattern(nonMatchingPattern);
True,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,1684,String testDateString = sdf.format(testDate);
True,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,1686,"Date resultDate = DateUtils.parseDate(testDateString, foreignLocale,"
True,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,1687,new String[] {nonMatchingPattern});
True,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,1689,"assertTrue(DateUtils.isSameDay(testDate, resultDate));"
True,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,1693,* Retrieves the long date format pattern string for the supplied
True,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,1694,* locale.
True,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,1696,* @param locale the locale to retrieve the pattern for
True,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,1697,"* @return the long date pattern string, or <code>null</code> if"
True,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,1698,* not found
True,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,1700,private String getLongDateFormatForLocale(Locale locale) {
True,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,1701,"if (! ArrayUtils.contains(DateFormat.getAvailableLocales(), locale)) {"
True,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,1702,return null;
True,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,1705,"DateFormat localFormat = DateFormat.getDateInstance(DateFormat.LONG,"
True,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,1706,locale);
True,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,1707,if (!(localFormat instanceof SimpleDateFormat)) {
True,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,1708,return null;
True,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,src/test/java/org/apache/commons/lang3/time/DateUtilsTest.java,1711,return ((SimpleDateFormat) localFormat).toLocalizedPattern();
