is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,644,/ See also Lucene's ASCIIFoldingFilter (Lucene 2.9) that replaces accented characters by their
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,645,/ unaccented equivalent (and uncommited bug fix:
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,646,/ https://issues.apache.org/jira/browse/LUCENE-1343?focusedCommentId=12858907&page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#action_12858907).
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,644,// See also Lucene's ASCIIFoldingFilter (Lucene 2.9) that replaces accented characters by their unaccented equivalent (and uncommited bug fix: https://issues.apache.org/jira/browse/LUCENE-1343?focusedCommentId=12858907&page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#action_12858907).
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,658,"hrow new UnsupportedOperationException(""The stripAccents(CharSequence) method requires at least """
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,659," ""Java 1.6 or a Sun JVM"");"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,656,"throw new UnsupportedOperationException(""The stripAccents(CharSequence) method requires at least Java 1.6 or a Sun JVM"");"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,678, @param text the text to be processed
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,679, @return the processed string
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,680, @throws IllegalAccessException may be thrown by a reflection call
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,681, @throws InvocationTargetException if a reflection call throws an exception
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,682, @throws IllegalStateException if the {@code Normalizer} class is not available
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,674,* @param text
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,684,rivate static String removeAccentsJava6(CharSequence text)
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,685,"hrows IllegalAccessException, InvocationTargetException {"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,676,"private static String removeAccentsJava6(CharSequence text) throws IllegalArgumentException, IllegalAccessException, InvocationTargetException {"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,702, @param text the text to be processed
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,703, @return the processed string
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,704, @throws IllegalAccessException may be thrown by a reflection call
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,705, @throws InvocationTargetException if a reflection call throws an exception
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,706, @throws IllegalStateException if the {@code Normalizer} class is not available
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,708,rivate static String removeAccentsSUN(CharSequence text)
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,709,"hrows IllegalAccessException, InvocationTargetException {"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,693,"private static String removeAccentsSUN(CharSequence text) throws IllegalArgumentException, IllegalAccessException, InvocationTargetException {"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,737,lass<?> normalizerFormClass = Thread.currentThread().getContextClassLoader()
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,738,"loadClass(""java.text.Normalizer$Form"");//$NON-NLS-1$"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,721,"Class<?> normalizerFormClass = Thread.currentThread().getContextClassLoader().loadClass(""java.text.Normalizer$Form"");//$NON-NLS-1$"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,740,lass<?> normalizerClass = Thread.currentThread().getContextClassLoader()
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,741,"loadClass(""java.text.Normalizer"");//$NON-NLS-1$"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,742,"ava6NormalizeMethod = normalizerClass.getMethod(""normalize"","
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,743,"ew Class[] {CharSequence.class, normalizerFormClass});//$NON-NLS-1$"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,723,"Class<?> normalizerClass = Thread.currentThread().getContextClassLoader().loadClass(""java.text.Normalizer"");//$NON-NLS-1$"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,724,"java6NormalizeMethod = normalizerClass.getMethod(""normalize"", new Class[] {CharSequence.class, normalizerFormClass});//$NON-NLS-1$"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,757,lass<?> normalizerClass = Thread.currentThread().getContextClassLoader()
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,758,"loadClass(""sun.text.Normalizer"");//$NON-NLS-1$"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,759,"unDecomposeMethod = normalizerClass.getMethod(""decompose"","
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,760,"ew Class[] {String.class, Boolean.TYPE, Integer.TYPE});//$NON-NLS-1$"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,738,"Class<?> normalizerClass = Thread.currentThread().getContextClassLoader().loadClass(""sun.text.Normalizer"");//$NON-NLS-1$"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,739,"sunDecomposeMethod = normalizerClass.getMethod(""decompose"", new Class[] {String.class, Boolean.TYPE, Integer.TYPE});//$NON-NLS-1$"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,824," <p>Finds the first index within a CharSequence, handling {@code null}."
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,825," This method uses {@link String#indexOf(int, int)} if possible.</p>"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,803,"* <p>Finds the first index within a String, handling {@code null}."
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,804,* This method uses {@link String#indexOf(int)}.</p>
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,827," <p>A {@code null} or empty ("""") CharSequence will return {@code INDEX_NOT_FOUND (-1)}.</p>"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,806,"* <p>A {@code null} or empty ("""") String will return {@code INDEX_NOT_FOUND (-1)}.</p>"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,836," @param seq  the CharSequence to check, may be null"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,815,"* @param str  the String to check, may be null"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,842,"ublic static int indexOf(CharSequence seq, int searchChar) {"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,843,f (isEmpty(seq)) {
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,821,"public static int indexOf(String str, int searchChar) {"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,822,if (isEmpty(str)) {
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,846,"eturn StringUtils.indexOfSequence(seq, searchChar, 0);"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,825,return str.indexOf(searchChar);
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,850," <p>Finds the first index within a CharSequence from a start position,"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,829,"* <p>Finds the first index within a String from a start position,"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,852," This method uses {@link String#indexOf(int, int)} if possible.</p>"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,831,"* This method uses {@link String#indexOf(int, int)}.</p>"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,854," <p>A {@code null} or empty ("""") CharSequence will return {@code (INDEX_NOT_FOUND) -1}."
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,833,"* <p>A {@code null} or empty ("""") String will return {@code (INDEX_NOT_FOUND) -1}."
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,867," @param seq  the CharSequence to check, may be null"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,846,"* @param str  the String to check, may be null"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,874,"ublic static int indexOf(CharSequence seq, int searchChar, int startPos) {"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,875,f (isEmpty(seq)) {
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,853,"public static int indexOf(String str, int searchChar, int startPos) {"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,854,if (isEmpty(str)) {
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,878,"eturn StringUtils.indexOfSequence(seq, searchChar, startPos);"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,857,"return str.indexOf(searchChar, startPos);"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,882," <p>Finds the first index within a CharSequence, handling {@code null}."
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,883," This method uses {@link String#indexOf(String, int)} if possible.</p>"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,861,"* <p>Finds the first index within a String, handling {@code null}."
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,862,* This method uses {@link String#indexOf(String)}.</p>
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,885, <p>A {@code null} CharSequence will return {@code -1}.</p>
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,864,* <p>A {@code null} String will return {@code -1}.</p>
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,898," @param seq  the CharSequence to check, may be null"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,899," @param searchSeq  the CharSequence to find, may be null"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,900," @return the first index of the search CharSequence,"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,877,"* @param str  the String to check, may be null"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,878,"* @param searchStr  the String to find, may be null"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,879,"* @return the first index of the search String,"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,904,"ublic static int indexOf(CharSequence seq, CharSequence searchSeq) {"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,905,f (seq == null || searchSeq == null) {
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,883,"public static int indexOf(String str, String searchStr) {"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,884,if (str == null || searchStr == null) {
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,908,"eturn StringUtils.indexOfSequence(seq, searchSeq, 0);"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,887,return str.indexOf(searchStr);
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,912," <p>Finds the first index within a CharSequence, handling {@code null}."
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,913," This method uses {@link String#indexOf(String, int)} if possible.</p>"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,891,"* <p>Finds the first index within a String, handling {@code null}."
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,892,"* This method uses {@link String#indexOf(String, int)}.</p>"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,915, <p>A {@code null} CharSequence will return {@code -1}.
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,894,* <p>A {@code null} String will return {@code -1}.
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,917," An empty ("""") search CharSequence always matches."
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,896,"* An empty ("""") search String always matches."
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,919, an empty search CharSequence.</p>
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,898,* an empty search String.</p>
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,936," @param seq  the CharSequence to check, may be null"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,937," @param searchSeq  the CharSequence to find, may be null"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,915,"* @param str  the String to check, may be null"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,916,"* @param searchStr  the String to find, may be null"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,939," @return the first index of the search CharSequence,"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,918,"* @return the first index of the search String,"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,943,"ublic static int indexOf(CharSequence seq, CharSequence searchSeq, int startPos) {"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,944,f (seq == null || searchSeq == null) {
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,922,"public static int indexOf(String str, String searchStr, int startPos) {"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,923,if (str == null || searchStr == null) {
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,947,"eturn StringUtils.indexOfSequence(seq, searchSeq, startPos);"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,926,"return str.indexOf(searchStr, startPos);"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1108," <p>Finds the last index within a CharSequence, handling {@code null}."
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1109, This method uses {@link String#lastIndexOf(int)} if possible.</p>
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1087,"* <p>Finds the last index within a String, handling {@code null}."
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1088,* This method uses {@link String#lastIndexOf(int)}.</p>
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1111," <p>A {@code null} or empty ("""") CharSequence will return {@code -1}.</p>"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1090,"* <p>A {@code null} or empty ("""") String will return {@code -1}.</p>"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1120," @param seq  the CharSequence to check, may be null"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1099,"* @param str  the String to check, may be null"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1126,"ublic static int lastIndexOf(CharSequence seq, int searchChar) {"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1127,f (isEmpty(seq)) {
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1105,"public static int lastIndexOf(String str, int searchChar) {"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1106,if (isEmpty(str)) {
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1130,"eturn StringUtils.lastIndexOfSequence(seq, searchChar, seq.length());"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1109,return str.lastIndexOf(searchChar);
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1134," <p>Finds the last index within a CharSequence from a start position,"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1113,"* <p>Finds the last index within a String from a start position,"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1136," This method uses {@link String#lastIndexOf(int, int)} if possible.</p>"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1115,"* This method uses {@link String#lastIndexOf(int, int)}.</p>"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1138," <p>A {@code null} or empty ("""") CharSequence will return {@code -1}."
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1117,"* <p>A {@code null} or empty ("""") String will return {@code -1}."
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1153," @param seq  the CharSequence to check, may be null"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1132,"* @param str  the String to check, may be null"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1160,"ublic static int lastIndexOf(CharSequence seq, int searchChar, int startPos) {"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1161,f (isEmpty(seq)) {
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1139,"public static int lastIndexOf(String str, int searchChar, int startPos) {"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1140,if (isEmpty(str)) {
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1164,"eturn StringUtils.lastIndexOfSequence(seq, searchChar, startPos);"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1143,"return str.lastIndexOf(searchChar, startPos);"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1168," <p>Finds the last index within a CharSequence, handling {@code null}."
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1169, This method uses {@link String#lastIndexOf(String)} if possible.</p>
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1147,"* <p>Finds the last index within a String, handling {@code null}."
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1148,* This method uses {@link String#lastIndexOf(String)}.</p>
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1171, <p>A {@code null} CharSequence will return {@code -1}.</p>
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1150,* <p>A {@code null} String will return {@code -1}.</p>
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1183," @param seq  the CharSequence to check, may be null"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1184," @param searchSeq  the CharSequence to find, may be null"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1162,"* @param str  the String to check, may be null"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1163,"* @param searchStr  the String to find, may be null"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1189,"ublic static int lastIndexOf(CharSequence seq, CharSequence searchSeq) {"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1190,f (seq == null || searchSeq == null) {
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1168,"public static int lastIndexOf(String str, String searchStr) {"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1169,if (str == null || searchStr == null) {
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1193,"eturn StringUtils.lastIndexOfSequence(seq, searchSeq, seq.length());"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1172,return str.lastIndexOf(searchStr);
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1234," <p>Finds the first index within a CharSequence, handling {@code null}."
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1235," This method uses {@link String#lastIndexOf(String, int)} if possible.</p>"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1213,"* <p>Finds the first index within a String, handling {@code null}."
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1214,"* This method uses {@link String#lastIndexOf(String, int)}.</p>"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1237, <p>A {@code null} CharSequence will return {@code -1}.
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1216,* <p>A {@code null} String will return {@code -1}.
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1239," An empty ("""") search CharSequence always matches unless the start position is negative."
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1218,"* An empty ("""") search String always matches unless the start position is negative."
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1254," @param seq  the CharSequence to check, may be null"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1255," @param searchSeq  the CharSequence to find, may be null"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1233,"* @param str  the String to check, may be null"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1234,"* @param searchStr  the String to find, may be null"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1257," @return the first index of the search CharSequence,"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1236,"* @return the first index of the search String,"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1261,"ublic static int lastIndexOf(CharSequence seq, CharSequence searchSeq, int startPos) {"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1262,f (seq == null || searchSeq == null) {
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1240,"public static int lastIndexOf(String str, String searchStr, int startPos) {"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1241,if (str == null || searchStr == null) {
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1265,"eturn StringUtils.lastIndexOfSequence(seq, searchSeq, startPos);"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1244,"return str.lastIndexOf(searchStr, startPos);"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1350," <p>Checks if CharSequence contains a search character, handling {@code null}."
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1351, This method uses {@link String#indexOf(int)} if possible.</p>
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1329,"* <p>Checks if String contains a search character, handling {@code null}."
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1330,* This method uses {@link String#indexOf(int)}.</p>
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1353," <p>A {@code null} or empty ("""") CharSequence will return {@code false}.</p>"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1332,"* <p>A {@code null} or empty ("""") String will return {@code false}.</p>"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1362," @param seq  the CharSequence to check, may be null"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1341,"* @param str  the String to check, may be null"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1364," @return true if the CharSequence contains the search character,"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1343,"* @return true if the String contains the search character,"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1368,"ublic static boolean contains(CharSequence seq, int searchChar) {"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1369,f (isEmpty(seq)) {
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1347,"public static boolean contains(String str, int searchChar) {"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1348,if (isEmpty(str)) {
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1372,"eturn indexOfSequence(seq, searchChar, 0) >= 0;"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1351,return str.indexOf(searchChar) >= 0;
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1376," <p>Checks if CharSequence contains a search CharSequence, handling {@code null}."
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1377, This method uses {@link String#indexOf(String)} if possible.</p>
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1355,"* <p>Checks if String contains a search String, handling {@code null}."
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1356,* This method uses {@link String#indexOf(String)}.</p>
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1379, <p>A {@code null} CharSequence will return {@code false}.</p>
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1358,* <p>A {@code null} String will return {@code false}.</p>
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1390," @param seq  the CharSequence to check, may be null"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1391," @param searchSeq  the CharSequence to find, may be null"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1392," @return true if the CharSequence contains the search CharSequence,"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1369,"* @param str  the String to check, may be null"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1370,"* @param searchStr  the String to find, may be null"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1371,"* @return true if the String contains the search String,"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1396,"ublic static boolean contains(CharSequence seq, CharSequence searchSeq) {"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1397,f (seq == null || searchSeq == null) {
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1375,"public static boolean contains(String str, String searchStr) {"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1376,if (str == null || searchStr == null) {
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1400,"eturn indexOfSequence(seq, searchSeq, 0) >= 0;"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1379,return str.indexOf(searchStr) >= 0;
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1441, Check whether the given CharSequence contains any whitespace characters.
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1442, @param seq the CharSequence to check (may be {@code null})
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1443, @return {@code true} if the CharSequence is not empty and
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1420,* Check whether the given String contains any whitespace characters.
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1421,* @param str the String to check (may be {@code null})
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1422,* @return {@code true} if the String is not empty and
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1449,ublic static boolean containsWhitespace(CharSequence seq) {
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1450,f (isEmpty(seq)) {
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1428,public static boolean containsWhitespace(String str) {
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1429,if (isEmpty(str)) {
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1453,nt strLen = seq.length();
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1432,int strLen = str.length();
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1455,f (Character.isWhitespace(seq.charAt(i))) {
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1434,if (Character.isWhitespace(str.charAt(i))) {
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1534," @since 3.0 Changed signature from indexOfAny(String, String) to indexOfAny(CharSequence, CharSequence)"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1513,"* @since 3.0 Changed signature from indexOfAny(String, String) to indexOfAny(CharSequence, String)"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1536,"ublic static int indexOfAny(CharSequence cs, CharSequence searchChars) {"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1515,"public static int indexOfAny(CharSequence cs, String searchChars) {"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1540,"eturn indexOfAny(cs, toCharArraySequence(searchChars));"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1519,"return indexOfAny(cs, searchChars.toCharArray());"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1568,"ublic static boolean containsAny(CharSequence cs, char[] searchChars) {"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1547,"public static boolean containsAny(String cs, char[] searchChars) {"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1625,"ublic static boolean containsAny(CharSequence cs, CharSequence searchChars) {"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1604,"public static boolean containsAny(String cs, String searchChars) {"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1629,"eturn containsAny(cs, toCharArraySequence(searchChars));"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1608,"return containsAny(cs, searchChars.toCharArray());"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1686, <p>Search a CharSequence to find the first index of any
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1665,* <p>Search a String to find the first index of any
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1689, <p>A {@code null} CharSequence will return {@code -1}.
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1668,* <p>A {@code null} String will return {@code -1}.
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1702," @param seq  the CharSequence to check, may be null"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1681,"* @param str  the String to check, may be null"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1707,"ublic static int indexOfAnyBut(CharSequence seq, CharSequence searchChars) {"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1708,f (isEmpty(seq) || isEmpty(searchChars)) {
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1686,"public static int indexOfAnyBut(String str, String searchChars) {"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1687,if (isEmpty(str) || isEmpty(searchChars)) {
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1711,nt strLen = seq.length();
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1690,int strLen = str.length();
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1713,har ch = seq.charAt(i);
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1714,"oolean chFound = indexOfSequence(searchChars, ch, 0) >= 0;"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1692,char ch = str.charAt(i);
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1693,boolean chFound = searchChars.indexOf(ch) >= 0;
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1716,har ch2 = seq.charAt(i + 1);
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1717,"f (chFound && indexOfSequence(searchChars, ch2, 0) < 0) {"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1695,char ch2 = str.charAt(i + 1);
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1696,if (chFound && searchChars.indexOf(ch2) < 0) {
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1748," @param cs  the CharSequence to check, may be null"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1727,"* @param cs  the String to check, may be null"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1785," @param validChars  a CharSequence of valid chars, may be null"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1764,"* @param validChars  a String of valid chars, may be null"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1788," @since 3.0 Changed signature from containsOnly(String, String) to containsOnly(CharSequence, CharSequence)"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1767,"* @since 3.0 Changed signature from containsOnly(String, String) to containsOnly(CharSequence, String)"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1790,"ublic static boolean containsOnly(CharSequence cs, CharSequence validChars) {"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1769,"public static boolean containsOnly(CharSequence cs, String validChars) {"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1794,"eturn containsOnly(cs, toCharArraySequence(validChars));"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1773,"return containsOnly(cs, validChars.toCharArray());"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1870," @param invalidChars  a CharSequence of invalid chars, may be null"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1849,"* @param invalidChars  a String of invalid chars, may be null"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1873," @since 3.0 Changed signature from containsNone(String, String) to containsNone(CharSequence, CharSequence)"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1852,"* @since 3.0 Changed signature from containsNone(String, String) to containsNone(CharSequence, String)"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1875,"ublic static boolean containsNone(CharSequence cs, CharSequence invalidChars) {"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1854,"public static boolean containsNone(CharSequence cs, String invalidChars) {"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1879,"eturn containsNone(cs, toCharArraySequence(invalidChars));"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1858,"return containsNone(cs, invalidChars.toCharArray());"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1887, <p>A {@code null} CharSequence will return {@code -1}.
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1866,* <p>A {@code null} String will return {@code -1}.
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1891, null. This method uses {@link String#indexOf(String)} if possible.</p>
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1870,* null. This method uses {@link String#indexOf(String)}.</p>
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1906," @param str  the CharSequence to check, may be null"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1907," @param searchStrs  the CharSequences to search for, may be null"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1885,"* @param str  the String to check, may be null"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1886,"* @param searchStrs  the Strings to search for, may be null"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1910,"ublic static int indexOfAny(CharSequence str, CharSequence[] searchStrs) {"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1889,"public static int indexOfAny(String str, String[] searchStrs) {"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1921,harSequence search = searchStrs[i];
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1900,String search = searchStrs[i];
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1925,"mp = indexOfSequence(str, search, 0);"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1904,tmp = str.indexOf(search);
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1941, <p>A {@code null} CharSequence will return {@code -1}.
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1920,* <p>A {@code null} String will return {@code -1}.
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1945, if {@code str} is not null. This method uses {@link String#indexOf(String)} if possible</p>
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1924,* if {@code str} is not null. This method uses {@link String#indexOf(String)}</p>
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1959," @param str  the CharSequence to check, may be null"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1960," @param searchStrs  the CharSequences to search for, may be null"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1961," @return the last index of any of the CharSequences, -1 if no match"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1938,"* @param str  the String to check, may be null"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1939,"* @param searchStrs  the Strings to search for, may be null"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1940,"* @return the last index of any of the Strings, -1 if no match"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1963,"ublic static int lastIndexOfAny(CharSequence str, CharSequence[] searchStrs) {"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1942,"public static int lastIndexOfAny(String str, String[] searchStrs) {"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1971,harSequence search = searchStrs[i];
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1950,String search = searchStrs[i];
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1975,"mp = lastIndexOfSequence(str, search, str.length());"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1954,tmp = str.lastIndexOf(search);
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1986, <p>Gets a substring from the specified CharSequence avoiding exceptions.</p>
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1965,* <p>Gets a substring from the specified String avoiding exceptions.</p>
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1989, characters from the end of the CharSequence.</p>
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1968,* characters from the end of the String.</p>
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1991, <p>A {@code null} CharSequence will return {@code null}.
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1992," An empty ("""") CharSequence will return """".</p>"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1970,* <p>A {@code null} String will return {@code null}.
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1971,"* An empty ("""") String will return """".</p>"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,2004," @param str  the CharSequence to get the substring from, may be null"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1983,"* @param str  the String to get the substring from, may be null"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,2006,  count back from the end of the CharSequence by this many characters
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,2007," @return substring from start position, {@code null} if null CharSequence input"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1985,*  count back from the end of the String by this many characters
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1986,"* @return substring from start position, {@code null} if null String input"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,2009,"ublic static String substring(CharSequence str, int start) {"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,1988,"public static String substring(String str, int start) {"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,2026,"eturn str.subSequence(start, str.length()).toString();"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,2005,return str.substring(start);
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,2030, <p>Gets a substring from the specified CharSequence avoiding exceptions.</p>
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,2009,* <p>Gets a substring from the specified String avoiding exceptions.</p>
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,2033, characters from the end of the CharSequence.</p>
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,2012,* characters from the end of the String.</p>
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,2039, specify offsets relative to the end of the CharSequence.</p>
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,2018,* specify offsets relative to the end of the String.</p>
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,2056," @param str  the CharSequence to get the substring from, may be null"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,2035,"* @param str  the String to get the substring from, may be null"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,2058,  count back from the end of the CharSequence by this many characters
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,2037,*  count back from the end of the String by this many characters
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,2060,  count back from the end of the CharSequence by this many characters
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,2039,*  count back from the end of the String by this many characters
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,2062,  {@code null} if null CharSequence input
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,2041,*  {@code null} if null String input
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,2064,"ublic static String substring(CharSequence str, int start, int end) {"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,2043,"public static String substring(String str, int start, int end) {"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,2094,"eturn str.subSequence(start, end).toString();"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,2073,"return str.substring(start, end);"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,2115," @param seq  the CharSequence to get the leftmost characters from, may be null"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,2094,"* @param str  the String to get the leftmost characters from, may be null"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,2119,"ublic static String left(CharSequence seq, int len) {"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,2120,f (seq == null) {
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,2098,"public static String left(String str, int len) {"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,2099,if (str == null) {
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,2126,f (seq.length() <= len) {
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,2127,eturn seq.toString();
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,2105,if (str.length() <= len) {
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,2106,return str;
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,2129,"eturn seq.subSequence(0, len).toString();"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,2108,"return str.substring(0, len);"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,2148," @param seq  the CharSequence to get the rightmost characters from, may be null"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,2127,"* @param str  the String to get the rightmost characters from, may be null"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,2152,"ublic static String right(CharSequence seq, int len) {"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,2153,f (seq == null) {
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,2131,"public static String right(String str, int len) {"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,2132,if (str == null) {
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,2159,f (seq.length() <= len) {
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,2160,eturn seq.toString();
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,2138,if (str.length() <= len) {
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,2139,return str;
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,2162,"eturn StringUtils.subSequence(seq, seq.length() - len).toString();"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,2141,return str.substring(str.length() - len);
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,2172, length of {@code seq}.</p>
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,2151,* length of {@code str}.</p>
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,2185," @param seq  the CharSequence to get the characters from, may be null"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,2164,"* @param str  the String to get the characters from, may be null"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,2190,"ublic static String mid(CharSequence seq, int pos, int len) {"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,2191,f (seq == null) {
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,2169,"public static String mid(String str, int pos, int len) {"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,2170,if (str == null) {
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,2194,f (len < 0 || pos > seq.length()) {
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,2173,if (len < 0 || pos > str.length()) {
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,2200,f (seq.length() <= (pos + len)) {
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,2201,"eturn StringUtils.subSequence(seq, pos).toString();"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,2179,if (str.length() <= (pos + len)) {
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,2180,return str.substring(pos);
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,2203,"eturn seq.subSequence(pos, pos + len).toString();"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,2182,"return str.substring(pos, pos + len);"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4579," @param seq  the CharSequence to pad out, may be null"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4558,"* @param str  the String to pad out, may be null"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4584,"ublic static String rightPad(CharSequence seq, int size) {"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4585,"eturn rightPad(seq, size, ' ');"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4563,"public static String rightPad(String str, int size) {"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4564,"return rightPad(str, size, ' ');"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4602," @param seq  the CharSequence to pad out, may be null"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4581,"* @param str  the String to pad out, may be null"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4609,"ublic static String rightPad(CharSequence seq, int size, char padChar) {"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4610,f (seq == null) {
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4588,"public static String rightPad(String str, int size, char padChar) {"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4589,if (str == null) {
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4613,nt pads = size - seq.length();
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4592,int pads = size - str.length();
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4615,eturn seq.toString(); // returns original String when possible
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4594,return str; // returns original String when possible
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4618,"eturn rightPad(seq, size, String.valueOf(padChar));"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4597,"return rightPad(str, size, String.valueOf(padChar));"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4620,"eturn seq.toString().concat(padding(pads, padChar));"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4599,"return str.concat(padding(pads, padChar));"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4640," @param seq  the CharSequence to pad out, may be null"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4619,"* @param str  the String to pad out, may be null"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4646,"ublic static String rightPad(CharSequence seq, int size, CharSequence padStr) {"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4647,f (seq == null) {
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4625,"public static String rightPad(String str, int size, String padStr) {"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4626,if (str == null) {
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4654,nt strLen = seq.length();
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4633,int strLen = str.length();
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4657,eturn seq.toString(); // returns original String when possible
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4636,return str; // returns original String when possible
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4660,"eturn rightPad(seq, size, padStr.charAt(0));"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4639,"return rightPad(str, size, padStr.charAt(0));"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4664,eturn seq.toString().concat(padStr.toString());
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4643,return str.concat(padStr);
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4666,"eturn seq.toString().concat(padStr.subSequence(0, pads).toString());"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4645,"return str.concat(padStr.substring(0, pads));"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4669,har[] padChars = padStr.toString().toCharArray();
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4648,char[] padChars = padStr.toCharArray();
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4673,eturn seq.toString().concat(new String(padding));
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4652,return str.concat(new String(padding));
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4691," @param seq  the CharSequence to pad out, may be null"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4670,"* @param str  the String to pad out, may be null"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4696,"ublic static String leftPad(CharSequence seq, int size) {"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4697,"eturn leftPad(seq, size, ' ');"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4675,"public static String leftPad(String str, int size) {"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4676,"return leftPad(str, size, ' ');"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4714," @param seq  the CharSequence to pad out, may be null"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4693,"* @param str  the String to pad out, may be null"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4721,"ublic static String leftPad(CharSequence seq, int size, char padChar) {"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4722,f (seq == null) {
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4700,"public static String leftPad(String str, int size, char padChar) {"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4701,if (str == null) {
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4725,nt pads = size - seq.length();
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4704,int pads = size - str.length();
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4727,eturn seq.toString(); // returns original String when possible
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4706,return str; // returns original String when possible
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4730,"eturn leftPad(seq, size, String.valueOf(padChar));"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4709,"return leftPad(str, size, String.valueOf(padChar));"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4732,"eturn padding(pads, padChar).concat(seq.toString());"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4711,"return padding(pads, padChar).concat(str);"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4752," @param seq  the CharSequence to pad out, may be null"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4731,"* @param str  the String to pad out, may be null"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4754," @param padStr  the CharSequence to pad with, null or empty treated as single space"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4733,"* @param padStr  the String to pad with, null or empty treated as single space"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4758,"ublic static String leftPad(CharSequence seq, int size, CharSequence padStr) {"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4759,f (seq == null) {
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4737,"public static String leftPad(String str, int size, String padStr) {"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4738,if (str == null) {
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4766,nt strLen = seq.length();
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4745,int strLen = str.length();
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4769,eturn seq.toString(); // returns original String when possible
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4748,return str; // returns original String when possible
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4772,"eturn leftPad(seq, size, padStr.charAt(0));"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4751,"return leftPad(str, size, padStr.charAt(0));"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4776,eturn padStr.toString().concat(seq.toString());
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4755,return padStr.concat(str);
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4778,"eturn padStr.subSequence(0, pads).toString().concat(seq.toString());"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4757,"return padStr.substring(0, pads).concat(str);"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4781,har[] padChars = padStr.toString().toCharArray();
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4760,char[] padChars = padStr.toCharArray();
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4785,eturn new String(padding).concat(seq.toString());
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4764,return new String(padding).concat(str);
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4825," @param seq  the CharSequence to center, may be null"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4804,"* @param str  the String to center, may be null"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4829,"ublic static String center(CharSequence seq, int size) {"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4830,"eturn center(seq, size, ' ');"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4808,"public static String center(String str, int size) {"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4809,"return center(str, size, ' ');"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4851," @param seq  the CharSequence to center, may be null"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4830,"* @param str  the String to center, may be null"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4857,"ublic static String center(CharSequence seq, int size, char padChar) {"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4858,f (seq == null) {
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4859,eturn null;
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4861,f (size <= 0) {
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4862,eturn seq.toString();
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4836,"public static String center(String str, int size, char padChar) {"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4837,if (str == null || size <= 0) {
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4838,return str;
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4864,nt strLen = seq.length();
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4840,int strLen = str.length();
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4867,eturn seq.toString();
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4843,return str;
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4869,"tring tmp = leftPad(seq, strLen + pads / 2, padChar);"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4870,"mp = rightPad(tmp, size, padChar);"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4871,eturn tmp;
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4845,"str = leftPad(str, strLen + pads / 2, padChar);"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4846,"str = rightPad(str, size, padChar);"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4847,return str;
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4894," @param seq  the CharSequence to center, may be null"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4870,"* @param str  the String to center, may be null"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4896," @param padStr  the CharSequence to pad the new String with, must not be null or empty"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4872,"* @param padStr  the String to pad the new String with, must not be null or empty"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4900,"ublic static String center(CharSequence seq, int size, CharSequence padStr) {"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4901,f (seq == null) {
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4902,eturn null;
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4904,f (size <= 0) {
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4905,eturn seq.toString();
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4876,"public static String center(String str, int size, String padStr) {"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4877,if (str == null || size <= 0) {
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4878,return str;
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4910,nt strLen = seq.length();
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4883,int strLen = str.length();
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4913,eturn seq.toString();
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4886,return str;
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4915,"tring tmp = leftPad(seq, strLen + pads / 2, padStr);"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4916,"mp = rightPad(tmp, size, padStr);"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4917,eturn tmp;
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4888,"str = leftPad(str, strLen + pads / 2, padStr);"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4889,"str = rightPad(str, size, padStr);"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4890,return str;
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4935," For platform-independent case transformations, the method {@link #lowerCase(CharSequence, Locale)}"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4908,"* For platform-independent case transformations, the method {@link #lowerCase(String, Locale)}"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4938," @param seq  the CharSequence to upper case, may be null"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4911,"* @param str  the String to upper case, may be null"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4941,ublic static String upperCase(CharSequence seq) {
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4942,f (seq == null) {
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4914,public static String upperCase(String str) {
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4915,if (str == null) {
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4945,eturn seq.toString().toUpperCase();
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4918,return str.toUpperCase();
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4959," @param seq  the CharSequence to upper case, may be null"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4932,"* @param str  the String to upper case, may be null"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4964,"ublic static String upperCase(CharSequence seq, Locale locale) {"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4965,f (seq == null) {
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4937,"public static String upperCase(String str, Locale locale) {"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4938,if (str == null) {
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4968,eturn seq.toString().toUpperCase(locale);
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4941,return str.toUpperCase(locale);
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4984," For platform-independent case transformations, the method {@link #lowerCase(CharSequence, Locale)}"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4957,"* For platform-independent case transformations, the method {@link #lowerCase(String, Locale)}"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4987," @param seq  the CharSequence to lower case, may be null"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4960,"* @param str  the String to lower case, may be null"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4990,ublic static String lowerCase(CharSequence seq) {
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4991,f (seq == null) {
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4963,public static String lowerCase(String str) {
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4964,if (str == null) {
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4994,eturn seq.toString().toLowerCase();
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4967,return str.toLowerCase();
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,5008," @param seq  the CharSequence to lower case, may be null"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4981,"* @param str  the String to lower case, may be null"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,5013,"ublic static String lowerCase(CharSequence seq, Locale locale) {"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,5014,f (seq == null) {
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4986,"public static String lowerCase(String str, Locale locale) {"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4987,if (str == null) {
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,5017,eturn seq.toString().toLowerCase(locale);
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,4990,return str.toLowerCase(locale);
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,5114," @param seq  the CharSequence to swap case, may be null"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,5087,"* @param str  the String to swap case, may be null"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,5117,ublic static String swapCase(CharSequence seq) {
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,5090,public static String swapCase(String str) {
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,5119,f (seq == null) {
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,5120,eturn null;
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,5122,f ( (strLen = seq.length()) == 0) {
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,5123,eturn seq.toString();
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,5092,if (str == null || (strLen = str.length()) == 0) {
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,5093,return str;
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,5129,h = seq.charAt(i);
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,5099,ch = str.charAt(i);
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,5674,"   <li>Else abbreviate it to {@code (substring(seq, 0, max-3) + ""..."")}.</li>"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,5644,"*   <li>Else abbreviate it to {@code (substring(str, 0, max-3) + ""..."")}.</li>"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,5692," @param seq  the CharSequence to check, may be null"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,5662,"* @param str  the String to check, may be null"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,5698,"ublic static String abbreviate(CharSequence seq, int maxWidth) {"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,5699,"eturn abbreviate(seq, 0, maxWidth);"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,5668,"public static String abbreviate(String str, int maxWidth) {"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,5669,"return abbreviate(str, 0, maxWidth);"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,5730," @param seq  the CharSequence to check, may be null"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,5700,"* @param str  the String to check, may be null"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,5737,"ublic static String abbreviate(CharSequence seq, int offset, int maxWidth) {"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,5738,f (seq == null) {
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,5707,"public static String abbreviate(String str, int offset, int maxWidth) {"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,5708,if (str == null) {
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,5744,f (seq.length() <= maxWidth) {
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,5745,eturn seq.toString();
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,5714,if (str.length() <= maxWidth) {
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,5715,return str;
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,5747,f (offset > seq.length()) {
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,5748,ffset = seq.length();
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,5717,if (offset > str.length()) {
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,5718,offset = str.length();
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,5750,f ((seq.length() - offset) < (maxWidth - 3)) {
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,5751,ffset = seq.length() - (maxWidth - 3);
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,5720,if ((str.length() - offset) < (maxWidth - 3)) {
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,5721,offset = str.length() - (maxWidth - 3);
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,5755,"eturn seq.subSequence(0, maxWidth - 3) + abrevMarker;"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,5725,"return str.substring(0, maxWidth - 3) + abrevMarker;"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,5760,f ((offset + (maxWidth - 3)) < seq.length()) {
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,5761,"eturn abrevMarker + abbreviate(StringUtils.subSequence(seq, offset), maxWidth - 3);"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,5730,if ((offset + (maxWidth - 3)) < str.length()) {
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,5731,"return abrevMarker + abbreviate(str.substring(offset), maxWidth - 3);"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,5763,"eturn abrevMarker + StringUtils.subSequence(seq, seq.length() - (maxWidth - 3));"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,5733,return abrevMarker + str.substring(str.length() - (maxWidth - 3));
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,5789," @param seq  the CharSequence to abbreviate, may be null"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,5790," @param middle the CharSequence to replace the middle characters with, may be null"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,5791, @param length the length to abbreviate {@code seq} to.
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,5759,"* @param str  the String to abbreviate, may be null"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,5760,"* @param middle the String to replace the middle characters with, may be null"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,5761,* @param length the length to abbreviate {@code str} to.
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,5795,"ublic static String abbreviateMiddle(CharSequence seq, CharSequence middle, int length) {"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,5796,f (seq == null) {
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,5797,eturn null;
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,5799,f (isEmpty(seq) || isEmpty(middle)) {
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,5800,eturn seq.toString();
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,5765,"public static String abbreviateMiddle(String str, String middle, int length) {"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,5766,if (isEmpty(str) || isEmpty(middle)) {
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,5767,return str;
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,5803,f (length >= seq.length() || length < (middle.length()+2)) {
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,5804,eturn seq.toString();
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,5770,if (length >= str.length() || length < (middle.length()+2)) {
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,5771,return str;
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,5809,nt endOffset = seq.length()-targetSting/2;
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,5776,int endOffset = str.length()-targetSting/2;
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,5812,"uilder.append(seq.subSequence(0,startOffset));"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,5779,"builder.append(str.substring(0,startOffset));"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,5814,"uilder.append(StringUtils.subSequence(seq, endOffset));"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,5781,builder.append(str.substring(endOffset));
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,5882," @since 3.0 Changed signature from indexOfDifference(String, String) to"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,5883," indexOfDifference(CharSequence, CharSequence)"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,5849,"* @since 3.0 Changed signature from indexOfDifference(String, String) to indexOfDifference(CharSequence, CharSequence)"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6082," @since 3.0 Changed signature from getLevenshteinDistance(String, String) to"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6083," getLevenshteinDistance(CharSequence, CharSequence)"
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6048,"* @since 3.0 Changed signature from getLevenshteinDistance(String, String) to getLevenshteinDistance(CharSequence, CharSequence)"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6435, @throws IndexOutOfBoundsException if {@code start} is negative or if
True,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6400,* @throws IndexOutOfBoundsException if {@code start} is negative or if
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6442,/ The following methods are used to support basic java.lang.String functionality
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6443,/ for CharSequences. Currently keeping these as package private; they may be
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6444,/ useful as public methods so others can also support CharSequence instead of
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6445,/ String. At that point they may make more sense on a CharSequenceUtils and
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6446,/ will want a name change.
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6449, Used by the indexOf(CharSequence methods) as a green implementation of
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6450, indexOf.
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6452, @param cs the {@code CharSequence} to be processed
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6453, @param searchChar the char to be searched for
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6454, @param start the start index
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6455, @return the index where the search char was found
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6457,"tatic int indexOfSequence(CharSequence cs, int searchChar, int start) {"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6458,f (cs instanceof String) {
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6459,"eturn ((String) cs).indexOf(searchChar, start);"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6460, else {
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6461,nt sz = cs.length();
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6462,f ( start < 0 ) {
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6463,tart = 0;
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6465,or ( int i=start; i < sz; i++ ) {
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6466,f ( cs.charAt(i) == searchChar) {
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6467,eturn i;
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6470,eturn -1;
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6475, Used by the indexOf(CharSequence methods) as a green implementation of indexOf.
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6477, @param cs the {@code CharSequence} to be processed
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6478, @param searchChar the {@code CharSequence} to be searched for
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6479, @param start the start index
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6480, @return the index where the search sequence was found
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6482,"tatic int indexOfSequence(CharSequence cs, CharSequence searchChar, int start) {"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6483,f (cs instanceof String && searchChar instanceof String) {
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6484,/ TODO: Do we assume searchChar is usually relatively small;
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6485,/       If so then calling toString() on it is better than reverting to
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6486,/       the green implementation in the else block
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6487,"eturn ((String) cs).indexOf( (String) searchChar, start);"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6488, else {
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6489,/ TODO: Implement rather than convert to String
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6490,"eturn cs.toString().indexOf(searchChar.toString(), start);"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6495, Used by the lastIndexOf(CharSequence methods) as a green implementation of lastIndexOf
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6497, @param cs the {@code CharSequence} to be processed
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6498, @param searchChar the char to be searched for
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6499, @param start the start index
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6500, @return the index where the search char was found
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6502,"tatic int lastIndexOfSequence(CharSequence cs, int searchChar, int start) {"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6503,f (cs instanceof String) {
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6504,"eturn ((String) cs).lastIndexOf(searchChar, start);"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6505, else {
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6506,nt sz = cs.length();
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6507,f ( start < 0 ) {
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6508,eturn -1;
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6510,f ( start >= sz ) {
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6511,tart = sz - 1;
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6513,or ( int i=start; i >= 0; --i ) {
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6514,f ( cs.charAt(i) == searchChar) {
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6515,eturn i;
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6518,eturn -1;
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6523, Used by the lastIndexOf(CharSequence methods) as a green implementation of lastIndexOf
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6525, @param cs the {@code CharSequence} to be processed
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6526, @param searchChar the {@code CharSequence} to be searched for
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6527, @param start the start index
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6528, @return the index where the search sequence was found
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6530,"tatic int lastIndexOfSequence(CharSequence cs, CharSequence searchChar, int start) {"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6531,f (cs instanceof String && searchChar instanceof String) {
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6532,/ TODO: Do we assume searchChar is usually relatively small;
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6533,/       If so then calling toString() on it is better than reverting to
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6534,/       the green implementation in the else block
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6535,"eturn ((String) cs).lastIndexOf( (String) searchChar, start);"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6536, else {
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6537,/ TODO: Implement rather than convert to String
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6538,"eturn cs.toString().lastIndexOf(searchChar.toString(), start);"
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6543, Green implementation of toCharArray.
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6545, @param cs the {@code CharSequence} to be processed
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6546, @return the resulting char array
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6549,tatic char[] toCharArraySequence(CharSequence cs) {
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6550,f (cs instanceof String) {
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6551,eturn ((String) cs).toCharArray();
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6552, else {
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6553,/ TODO: Implement rather than convert to String
False,src/main/java/org/apache/commons/lang3/StringUtils.java,src/main/java/org/apache/commons/lang3/StringUtils.java,6554,eturn cs.toString().toCharArray();
False,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,471,"ssertEquals(2, StringUtils.indexOf(new StringBuilder(""aabaabaa""), 'b'));"
False,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,485,"ssertEquals(5, StringUtils.indexOf(new StringBuilder(""aabaabaa""), 'b', 3));"
False,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,497,"ssertEquals(2, StringUtils.indexOf(new StringBuilder(""aabaabaa""), ""b""));"
False,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,522,"ssertEquals(5, StringUtils.indexOf(new StringBuilder(""aabaabaa""), ""b"", 3));"
False,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,679,"ssertEquals(5, StringUtils.lastIndexOf(new StringBuilder(""aabaabaa""), 'b'));"
False,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,694,"ssertEquals(2, StringUtils.lastIndexOf(new StringBuilder(""aabaabaa""), 'b', 2));"
False,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,707,"ssertEquals(4, StringUtils.lastIndexOf(new StringBuilder(""aabaabaa""), ""ab""));"
False,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,src/test/java/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java,732,"ssertEquals(2, StringUtils.lastIndexOf(new StringBuilder(""aabaabaa""), ""b"", 3));"
