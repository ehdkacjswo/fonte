is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,57,import java.util.Comparator;
False,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,71," @version $Id: ClassUtils.java,v 1.23 2003/10/23 21:03:43 scolebourne Exp $"
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,72,"* @version $Id: ClassUtils.java,v 1.24 2004/02/15 00:51:38 ggregory Exp $"
False,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,76, <p>The package separator character: <code>&#x2e;</code>.</p>
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,77,* <p>The package separator character: <code>'&#x2e;' == {@value}</code>.</p>
False,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,81, <p>The package separator String: <code>&#x2e;</code>.</p>
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,82,"* <p>The package separator String: <code>""&#x2e;""</code>.</p>"
False,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,86, <p>The inner class separator character: <code>$</code>.</p>
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,87,* <p>The inner class separator character: <code>'$' == {@value}</code>.</p>
False,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,91, <p>The inner class separator String: <code>$</code>.</p>
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,92,"* <p>The inner class separator String: <code>""$""</code>.</p>"
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,569,* Compares two <code>Class</code>s by name.
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,571,public static final Comparator CLASS_NAME_COMPARATOR = new Comparator() {
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,573,* Compares two <code>Class</code>s by name.
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,575,* @throws ClassCastException
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,576,*                  If <code>o1</code> or <code>o2</code> are not <code>Class</code>
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,577,*                  instances.
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,579,"public int compare(Object o1, Object o2) {"
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,580,Class class1 = (Class) o1;
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,581,Class class2 = (Class) o2;
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,582,if (class1 == null) {
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,583,return class2 == null ? 0 : -1;
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,585,if (class2 == null) {
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,586,return 1;
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,588,return class1.getName().compareTo(class2.getName());
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,593,* Compares two <code>Package</code>s by name.
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,595,public static final Comparator PACKAGE_NAME_COMPARATOR = new Comparator() {
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,597,* Compares two <code>Package</code>s by name.
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,599,* @throws ClassCastException
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,600,*                  If <code>o1</code> or <code>o2</code> are not <code>Package</code>
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,601,*                  instances.
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,603,"public int compare(Object o1, Object o2) {"
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,604,Package package1 = (Package) o1;
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,605,Package package2 = (Package) o2;
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,606,if (package1 == null) {
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,607,return package2 == null ? 0 : -1;
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,609,if (package2 == null) {
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,610,return 1;
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,612,return package1.getName().compareTo(package2.getName());
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,57,import java.lang.reflect.InvocationTargetException;
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,58,import java.lang.reflect.Method;
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,60,import java.net.URLClassLoader;
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,62,import java.util.Comparator;
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,70,import org.apache.commons.lang.enum.ColorEnum;
False,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,71," @version $Id: ClassUtilsTest.java,v 1.7 2003/10/23 21:03:44 scolebourne Exp $"
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,76,* @author Gary D. Gregory
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,77,"* @version $Id: ClassUtilsTest.java,v 1.8 2004/02/15 00:51:37 ggregory Exp $"
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,420,public void testClassComparator() {
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,421,Comparator comparator = ClassUtils.CLASS_NAME_COMPARATOR;
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,422,Class smallClass = java.lang.Boolean.class;
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,423,Class bigClass =  java.util.Set.class;
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,425,"assertTrue(comparator.compare(smallClass, smallClass) == 0);"
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,426,"assertTrue(comparator.compare(bigClass, smallClass) > 0);"
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,427,"assertTrue(comparator.compare(smallClass, bigClass) < 0);"
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,429,"assertTrue(comparator.compare(smallClass, null) > 0);"
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,430,"assertTrue(comparator.compare(null, smallClass) < 0);"
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,432,"assertComparatorContract(comparator, smallClass, smallClass);"
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,433,"assertComparatorContract(comparator, bigClass, bigClass);"
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,434,"assertComparatorContract(comparator, smallClass, bigClass);"
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,437,public void testPackageComparator() {
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,438,Comparator comparator = ClassUtils.PACKAGE_NAME_COMPARATOR;
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,439,Package smallPackage = java.lang.Boolean.class.getPackage();
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,440,Package bigPackage =  java.util.Set.class.getPackage();
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,442,"assertTrue(comparator.compare(smallPackage, smallPackage) == 0);"
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,443,"assertTrue(comparator.compare(bigPackage, smallPackage) > 0);"
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,444,"assertTrue(comparator.compare(smallPackage, bigPackage) < 0);"
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,446,"assertTrue(comparator.compare(smallPackage, null) > 0);"
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,447,"assertTrue(comparator.compare(null, smallPackage) < 0);"
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,449,"assertComparatorContract(comparator, smallPackage, smallPackage);"
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,450,"assertComparatorContract(comparator, bigPackage, bigPackage);"
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,451,"assertComparatorContract(comparator, smallPackage, bigPackage);"
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,454,"public void testPackageNameComparatorWithDifferentClassLoaders() throws SecurityException, IllegalArgumentException, ClassNotFoundException {"
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,455,Comparator comparator = ClassUtils.PACKAGE_NAME_COMPARATOR;
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,456,Package p1 = java.lang.Boolean.class.getPackage();
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,457,Package p2 = java.util.Set.class.getPackage();
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,458,ClassLoader classLoader = newSystemClassLoader();
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,459,"Object p1Other = this.getPackage(classLoader, ""java.lang.Boolean"");"
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,460,"Object p2Other = this.getPackage(classLoader, ""java.util.Set"");"
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,461,// all here
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,462,"assertComparatorContract(comparator, p1, p1);"
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,463,"assertComparatorContract(comparator, p2, p2);"
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,464,"assertComparatorContract(comparator, p1, p2);"
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,465,// all other
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,466,"assertComparatorContract(comparator, p1Other, p1Other);"
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,467,"assertComparatorContract(comparator, p2Other, p2Other);"
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,468,"assertComparatorContract(comparator, p1Other, p2Other);"
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,469,// p1 and p1Other
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,470,"assertComparatorContract(comparator, p1, p1Other);"
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,471,"assertComparatorContract(comparator, p2, p2);"
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,472,"assertComparatorContract(comparator, p1Other, p2);"
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,473,// p2 and p2Other
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,474,"assertComparatorContract(comparator, p1, p1);"
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,475,"assertComparatorContract(comparator, p2, p2Other);"
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,476,"assertComparatorContract(comparator, p1, p2Other);"
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,479,"Object getPackage(ClassLoader classLoader, String className) throws ClassNotFoundException, SecurityException,"
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,480,IllegalArgumentException {
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,481,// Sanity check:
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,482,"assertNotNull(Package.getPackage(""java.lang""));"
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,483,"Package.getPackage(""java.lang"").equals(Package.getPackage(""java.lang""));"
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,484,// set up:
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,485,assertNotNull(classLoader);
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,486,Class otherClass = classLoader.loadClass(className);
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,487,assertNotNull(otherClass);
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,488,Object otherPackage = otherClass.getPackage();
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,489,assertNotNull(otherPackage);
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,490,return otherPackage;
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,494,* The ordering imposed by a Comparator c on a set of elements S is said to
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,495,"* be consistent with equals if and only if (compare((Object)e1,"
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,496,* (Object)e2)==0) has the same boolean value as e1.equals((Object)e2) for
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,497,* every e1 and e2 in S.
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,499,* http://java.sun.com/j2se/1.3/docs/api/java/util/Comparator.html
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,501,"public void assertComparatorContract(Comparator comparator, Object e1, Object e2) {"
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,502,"assertEquals(comparator.compare(e1, e2) == 0, e1.equals(e2));"
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,505,"public static ClassLoader newSystemClassLoader() throws  SecurityException, IllegalArgumentException {"
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,506,ClassLoader scl = ClassLoader.getSystemClassLoader();
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,507,if (!(scl instanceof URLClassLoader)) {
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,508,"fail(""Need a better test set up."");"
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,510,URLClassLoader urlScl = (URLClassLoader)scl;
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,511,"return URLClassLoader.newInstance(urlScl.getURLs(), null);"
False,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,58,mport java.net.URLClassLoader;
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,68,import org.apache.commons.lang.ClassUtilsTest;
False,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,76," @version $Id: EnumTest.java,v 1.15 2004/02/13 23:17:45 scolebourne Exp $"
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,75,* @author Gary D. Gregory
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,76,"* @version $Id: EnumTest.java,v 1.16 2004/02/15 00:51:38 ggregory Exp $"
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,477,"public void testColorEnumEqualsWithDifferentClassLoaders() throws SecurityException, IllegalArgumentException,"
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,478,"ClassNotFoundException, NoSuchMethodException, IllegalAccessException, InvocationTargetException {"
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,479,this.testEqualsTrueWithDifferentClassLoaders(ColorEnum.BLUE);
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,480,this.testEqualsTrueWithDifferentClassLoaders(ColorEnum.GREEN);
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,481,this.testEqualsTrueWithDifferentClassLoaders(ColorEnum.RED);
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,484,"void testEqualsTrueWithDifferentClassLoaders(ColorEnum colorEnum) throws ClassNotFoundException, SecurityException,"
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,485,"NoSuchMethodException, IllegalArgumentException, IllegalAccessException, InvocationTargetException {"
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,486,// Sanity checks:
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,487,assertTrue(colorEnum.equals(colorEnum));
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,488,assertNotNull(ColorEnum.class.getClassLoader());
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,489,// set up:
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,490,ClassLoader classLoader = ClassUtilsTest.newSystemClassLoader();
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,491,"Object enumObjectFromOtherClassLoader = this.getColorEnum(classLoader, colorEnum.getName());"
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,492,"// the real test, part 1."
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,493,try {
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,494,ColorEnum testCase = (ColorEnum) enumObjectFromOtherClassLoader;
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,495,"fail(""Should have thrown a ClassCastException for "" + testCase);"
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,496,} catch (ClassCastException e) {
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,497,// normal.
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,499,"// the real test, part 2."
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,500,"assertEquals(""The two objects should match even though they are from different class loaders"", colorEnum,"
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,501,enumObjectFromOtherClassLoader);
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,502,"// the real test, part 3."
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,503,int falseCount = 0;
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,504,for (Iterator iter = ColorEnum.iterator(); iter.hasNext();) {
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,505,ColorEnum element = (ColorEnum) iter.next();
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,506,if (!colorEnum.equals(element)) {
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,507,falseCount++;
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,508,assertFalse(enumObjectFromOtherClassLoader.equals(element));
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,511,"assertEquals(ColorEnum.getEnumList().size() - 1, falseCount);"
False,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,477,"ublic void testEqualsWithDifferentClassLoaders() throws ClassNotFoundException, SecurityException, NoSuchMethodException, IllegalArgumentException, IllegalAccessException, InvocationTargetException {"
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,514,"Object getColorEnum(ClassLoader classLoader, String color) throws ClassNotFoundException, SecurityException,"
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,515,"NoSuchMethodException, IllegalArgumentException, IllegalAccessException, InvocationTargetException {"
False,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,482,lassLoader scl = ClassLoader.getSystemClassLoader();
False,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,483,f (!(scl instanceof URLClassLoader)) {
False,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,484,"ail(""Need a better test set up."");"
False,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,486,RLClassLoader urlScl = (URLClassLoader)scl;
False,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,487,"lassLoader classLoader = URLClassLoader.newInstance(urlScl.getURLs(), null);"
False,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,495,"ethod method = otherColorEnumClass.getMethod(""getEnum"", new Class[]{String.class});"
False,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,496,"bject enumObject = method.invoke(otherColorEnumClass, new Object[]{""Red""});"
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,527,"Method method = otherColorEnumClass.getMethod(""getEnum"", new Class[]{String.class});"
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,528,"Object enumObject = method.invoke(otherColorEnumClass, new Object[]{color});"
False,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,498,"/ the real test, part 1."
False,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,499,ry {
False,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,500,olorEnum testCase = (ColorEnum)enumObject;
False,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,501,"ail(""Should have thrown a ClassCastException"");"
False,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,502, catch (ClassCastException e) {
False,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,503,/ normal.
False,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,505,"/ the real test, part 2."
False,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,506,"ssertEquals(""The two objects should match even though they are from different class loaders"", ColorEnum.RED, enumObject);"
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,530,assertFalse(ColorEnum.class.equals(enumObject.getClass()));
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,531,assertFalse(ColorEnum.class == enumObject.getClass());
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,532,return enumObject;
False,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,510,"ssertEquals(false, ColorEnum.RED.equals(""test""));"
False,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,511,"ssertEquals(false, ColorEnum.RED.equals(new Integer(1)));"
False,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,512,"ssertEquals(false, ColorEnum.RED.equals(new Boolean(true)));"
False,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,513,"ssertEquals(false, ColorEnum.RED.equals(new StringBuffer(""test"")));"
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,536,for (Iterator iter = ColorEnum.iterator(); iter.hasNext();) {
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,537,ColorEnum element = (ColorEnum) iter.next();
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,538,this.testEqualsToWrongInstance(element);
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,542,void testEqualsToWrongInstance(ColorEnum colorEnum) {
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,543,"assertEquals(false, colorEnum.equals(""test""));"
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,544,"assertEquals(false, colorEnum.equals(new Integer(1)));"
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,545,"assertEquals(false, colorEnum.equals(new Boolean(true)));"
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,546,"assertEquals(false, colorEnum.equals(new StringBuffer(""test"")));"
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,547,"assertEquals(false, colorEnum.equals(new Object()));"
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,548,"assertEquals(false, colorEnum.equals(null));"
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,549,"assertEquals(false, colorEnum.equals(""""));"
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,550,"assertEquals(false, colorEnum.equals(ColorEnum.getEnum(null)));"
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,551,"assertEquals(false, colorEnum.equals(ColorEnum.getEnum("""")));"
True,src/test/org/apache/commons/lang/enum/EnumTest.java,src/test/org/apache/commons/lang/enum/EnumTest.java,552,"assertEquals(false, colorEnum.equals(ColorEnum.getEnum(""This ColorEnum does not exist."")));"
