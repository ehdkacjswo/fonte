is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,46,"* @author <a href=""mailto:levon@lk.otherinbox.com"">Levon Karayan</a>"
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,445,// nullToEmpty
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,448,* <p>Defensive programming technique to change a <code>null</code>
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,449,* reference to an empty one..</p>
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,451,* <p>This method returns an empty array for a <code>null</code> input array.</p>
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,453,* <p>As a memory optimizing technique an empty array passed in will be overridden with
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,454,* the empty <code>public static</code> references in this class.</p>
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,456,* @param array  the array to check for <code>null</code> or empty
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,457,"* @return the same array, <code>public static</code> empty array if <code>null</code> or empty input"
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,459,public static Object[] nullToEmpty(Object[] array) {
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,460,if (array == null) {
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,461,return EMPTY_OBJECT_ARRAY;
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,462,} else if (array.length == 0) {
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,463,return EMPTY_OBJECT_ARRAY;
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,465,return array;
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,469,* <p>Defensive programming technique to change a <code>null</code>
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,470,* reference to an empty one..</p>
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,472,* <p>This method returns an empty array for a <code>null</code> input array.</p>
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,474,* <p>As a memory optimizing technique an empty array passed in will be overridden with
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,475,* the empty <code>public static</code> references in this class.</p>
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,477,* @param array  the array to check for <code>null</code> or empty
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,478,"* @return the same array, <code>public static</code> empty array if <code>null</code> or empty input"
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,480,public static String[] nullToEmpty(String[] array) {
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,481,if (array == null) {
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,482,return EMPTY_STRING_ARRAY;
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,483,} else if (array.length == 0) {
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,484,return EMPTY_STRING_ARRAY;
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,486,return array;
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,490,* <p>Defensive programming technique to change a <code>null</code>
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,491,* reference to an empty one..</p>
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,493,* <p>This method returns an empty array for a <code>null</code> input array.</p>
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,495,* <p>As a memory optimizing technique an empty array passed in will be overridden with
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,496,* the empty <code>public static</code> references in this class.</p>
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,498,* @param array  the array to check for <code>null</code> or empty
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,499,"* @return the same array, <code>public static</code> empty array if <code>null</code> or empty input"
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,501,public static long[] nullToEmpty(long[] array) {
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,502,if (array == null) {
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,503,return EMPTY_LONG_ARRAY;
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,505,if (array.length == 0) {
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,506,return EMPTY_LONG_ARRAY;
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,508,return array;
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,512,* <p>Defensive programming technique to change a <code>null</code>
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,513,* reference to an empty one..</p>
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,515,* <p>This method returns an empty array for a <code>null</code> input array.</p>
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,517,* <p>As a memory optimizing technique an empty array passed in will be overridden with
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,518,* the empty <code>public static</code> references in this class.</p>
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,520,* @param array  the array to check for <code>null</code> or empty
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,521,"* @return the same array, <code>public static</code> empty array if <code>null</code> or empty input"
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,523,public static int[] nullToEmpty(int[] array) {
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,524,if (array == null) {
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,525,return EMPTY_INT_ARRAY;
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,526,} else if (array.length == 0) {
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,527,return EMPTY_INT_ARRAY;
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,529,return array;
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,533,* <p>Defensive programming technique to change a <code>null</code>
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,534,* reference to an empty one..</p>
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,536,* <p>This method returns an empty array for a <code>null</code> input array.</p>
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,538,* <p>As a memory optimizing technique an empty array passed in will be overridden with
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,539,* the empty <code>public static</code> references in this class.</p>
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,541,* @param array  the array to check for <code>null</code> or empty
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,542,"* @return the same array, <code>public static</code> empty array if <code>null</code> or empty input"
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,544,public static short[] nullToEmpty(short[] array) {
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,545,if (array == null) {
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,546,return EMPTY_SHORT_ARRAY;
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,547,} else if (array.length == 0) {
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,548,return EMPTY_SHORT_ARRAY;
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,550,return array;
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,554,* <p>Defensive programming technique to change a <code>null</code>
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,555,* reference to an empty one..</p>
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,557,* <p>This method returns an empty array for a <code>null</code> input array.</p>
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,559,* <p>As a memory optimizing technique an empty array passed in will be overridden with
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,560,* the empty <code>public static</code> references in this class.</p>
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,562,* @param array  the array to check for <code>null</code> or empty
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,563,"* @return the same array, <code>public static</code> empty array if <code>null</code> or empty input"
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,565,public static char[] nullToEmpty(char[] array) {
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,566,if (array == null) {
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,567,return EMPTY_CHAR_ARRAY;
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,568,} else if (array.length == 0) {
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,569,return EMPTY_CHAR_ARRAY;
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,571,return array;
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,575,* <p>Defensive programming technique to change a <code>null</code>
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,576,* reference to an empty one..</p>
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,578,* <p>This method returns an empty array for a <code>null</code> input array.</p>
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,580,* <p>As a memory optimizing technique an empty array passed in will be overridden with
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,581,* the empty <code>public static</code> references in this class.</p>
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,583,* @param array  the array to check for <code>null</code> or empty
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,584,"* @return the same array, <code>public static</code> empty array if <code>null</code> or empty input"
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,586,public static byte[] nullToEmpty(byte[] array) {
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,587,if (array == null) {
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,588,return EMPTY_BYTE_ARRAY;
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,589,} else if (array.length == 0) {
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,590,return EMPTY_BYTE_ARRAY;
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,592,return array;
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,596,* <p>Defensive programming technique to change a <code>null</code>
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,597,* reference to an empty one..</p>
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,599,* <p>This method returns an empty array for a <code>null</code> input array.</p>
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,601,* <p>As a memory optimizing technique an empty array passed in will be overridden with
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,602,* the empty <code>public static</code> references in this class.</p>
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,604,* @param array  the array to check for <code>null</code> or empty
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,605,"* @return the same array, <code>public static</code> empty array if <code>null</code> or empty input"
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,607,public static double[] nullToEmpty(double[] array) {
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,608,if (array == null) {
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,609,return EMPTY_DOUBLE_ARRAY;
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,610,} else if (array.length == 0) {
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,611,return EMPTY_DOUBLE_ARRAY;
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,613,return array;
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,617,* <p>Defensive programming technique to change a <code>null</code>
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,618,* reference to an empty one..</p>
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,620,* <p>This method returns an empty array for a <code>null</code> input array.</p>
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,622,* <p>As a memory optimizing technique an empty array passed in will be overridden with
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,623,* the empty <code>public static</code> references in this class.</p>
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,625,* @param array  the array to check for <code>null</code> or empty
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,626,"* @return the same array, <code>public static</code> empty array if <code>null</code> or empty input"
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,628,public static float[] nullToEmpty(float[] array) {
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,629,if (array == null) {
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,630,return EMPTY_FLOAT_ARRAY;
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,631,} else if (array.length == 0) {
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,632,return EMPTY_FLOAT_ARRAY;
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,634,return array;
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,638,* <p>Defensive programming technique to change a <code>null</code>
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,639,* reference to an empty one..</p>
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,641,* <p>This method returns an empty array for a <code>null</code> input array.</p>
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,643,* <p>As a memory optimizing technique an empty array passed in will be overridden with
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,644,* the empty <code>public static</code> references in this class.</p>
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,646,* @param array  the array to check for <code>null</code> or empty
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,647,"* @return the same array, <code>public static</code> empty array if <code>null</code> or empty input"
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,649,public static boolean[] nullToEmpty(boolean[] array) {
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,650,if (array == null) {
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,651,return EMPTY_BOOLEAN_ARRAY;
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,652,} else if (array.length == 0) {
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,653,return EMPTY_BOOLEAN_ARRAY;
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,655,return array;
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,659,* <p>Defensive programming technique to change a <code>null</code>
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,660,* reference to an empty one..</p>
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,662,* <p>This method returns an empty array for a <code>null</code> input array.</p>
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,664,* <p>As a memory optimizing technique an empty array passed in will be overridden with
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,665,* the empty <code>public static</code> references in this class.</p>
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,667,* @param array  the array to check for <code>null</code> or empty
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,668,"* @return the same array, <code>public static</code> empty array if <code>null</code> or empty input"
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,670,public static Long[] nullToEmpty(Long[] array) {
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,671,if (array == null) {
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,672,return EMPTY_LONG_OBJECT_ARRAY;
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,673,} else if (array.length == 0) {
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,674,return EMPTY_LONG_OBJECT_ARRAY;
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,676,return array;
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,680,* <p>Defensive programming technique to change a <code>null</code>
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,681,* reference to an empty one..</p>
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,683,* <p>This method returns an empty array for a <code>null</code> input array.</p>
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,685,* <p>As a memory optimizing technique an empty array passed in will be overridden with
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,686,* the empty <code>public static</code> references in this class.</p>
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,688,* @param array  the array to check for <code>null</code> or empty
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,689,"* @return the same array, <code>public static</code> empty array if <code>null</code> or empty input"
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,691,public static Integer[] nullToEmpty(Integer[] array) {
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,692,if (array == null) {
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,693,return EMPTY_INTEGER_OBJECT_ARRAY;
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,694,} else if (array.length == 0) {
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,695,return EMPTY_INTEGER_OBJECT_ARRAY;
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,697,return array;
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,701,* <p>Defensive programming technique to change a <code>null</code>
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,702,* reference to an empty one..</p>
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,704,* <p>This method returns an empty array for a <code>null</code> input array.</p>
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,706,* <p>As a memory optimizing technique an empty array passed in will be overridden with
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,707,* the empty <code>public static</code> references in this class.</p>
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,709,* @param array  the array to check for <code>null</code> or empty
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,710,"* @return the same array, <code>public static</code> empty array if <code>null</code> or empty input"
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,712,public static Short[] nullToEmpty(Short[] array) {
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,713,if (array == null) {
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,714,return EMPTY_SHORT_OBJECT_ARRAY;
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,715,}else if (array.length == 0) {
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,716,return EMPTY_SHORT_OBJECT_ARRAY;
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,718,return array;
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,722,* <p>Defensive programming technique to change a <code>null</code>
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,723,* reference to an empty one..</p>
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,725,* <p>This method returns an empty array for a <code>null</code> input array.</p>
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,727,* <p>As a memory optimizing technique an empty array passed in will be overridden with
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,728,* the empty <code>public static</code> references in this class.</p>
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,730,* @param array  the array to check for <code>null</code> or empty
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,731,"* @return the same array, <code>public static</code> empty array if <code>null</code> or empty input"
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,733,public static Character[] nullToEmpty(Character[] array) {
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,734,if (array == null) {
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,735,return EMPTY_CHARACTER_OBJECT_ARRAY;
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,736,} else if (array.length == 0) {
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,737,return EMPTY_CHARACTER_OBJECT_ARRAY;
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,739,return array;
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,743,* <p>Defensive programming technique to change a <code>null</code>
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,744,* reference to an empty one..</p>
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,746,* <p>This method returns an empty array for a <code>null</code> input array.</p>
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,748,* <p>As a memory optimizing technique an empty array passed in will be overridden with
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,749,* the empty <code>public static</code> references in this class.</p>
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,751,* @param array  the array to check for <code>null</code> or empty
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,752,"* @return the same array, <code>public static</code> empty array if <code>null</code> or empty input"
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,754,public static Byte[] nullToEmpty(Byte[] array) {
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,755,if (array == null) {
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,756,return EMPTY_BYTE_OBJECT_ARRAY;
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,757,} else if (array.length == 0) {
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,758,return EMPTY_BYTE_OBJECT_ARRAY;
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,760,return array;
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,764,* <p>Defensive programming technique to change a <code>null</code>
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,765,* reference to an empty one..</p>
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,767,* <p>This method returns an empty array for a <code>null</code> input array.</p>
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,769,* <p>As a memory optimizing technique an empty array passed in will be overridden with
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,770,* the empty <code>public static</code> references in this class.</p>
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,772,* @param array  the array to check for <code>null</code> or empty
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,773,"* @return the same array, <code>public static</code> empty array if <code>null</code> or empty input"
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,775,public static Double[] nullToEmpty(Double[] array) {
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,776,if (array == null) {
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,777,return EMPTY_DOUBLE_OBJECT_ARRAY;
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,778,} else if (array.length == 0) {
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,779,return EMPTY_DOUBLE_OBJECT_ARRAY;
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,781,return array;
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,785,* <p>Defensive programming technique to change a <code>null</code>
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,786,* reference to an empty one..</p>
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,788,* <p>This method returns an empty array for a <code>null</code> input array.</p>
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,790,* <p>As a memory optimizing technique an empty array passed in will be overridden with
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,791,* the empty <code>public static</code> references in this class.</p>
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,793,* @param array  the array to check for <code>null</code> or empty
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,794,"* @return the same array, <code>public static</code> empty array if <code>null</code> or empty input"
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,796,public static Float[] nullToEmpty(Float[] array) {
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,797,if (array == null) {
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,798,return EMPTY_FLOAT_OBJECT_ARRAY;
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,799,} else if (array.length == 0) {
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,800,return EMPTY_FLOAT_OBJECT_ARRAY;
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,802,return array;
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,806,* <p>Defensive programming technique to change a <code>null</code>
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,807,* reference to an empty one..</p>
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,809,* <p>This method returns an empty array for a <code>null</code> input array.</p>
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,811,* <p>As a memory optimizing technique an empty array passed in will be overridden with
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,812,* the empty <code>public static</code> references in this class.</p>
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,814,* @param array  the array to check for <code>null</code> or empty
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,815,"* @return the same array, <code>public static</code> empty array if <code>null</code> or empty input"
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,817,public static Boolean[] nullToEmpty(Boolean[] array) {
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,818,if (array == null) {
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,819,return EMPTY_BOOLEAN_OBJECT_ARRAY;
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,820,} else if (array.length == 0) {
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,821,return EMPTY_BOOLEAN_OBJECT_ARRAY;
True,src/main/java/org/apache/commons/lang3/ArrayUtils.java,src/main/java/org/apache/commons/lang3/ArrayUtils.java,823,return array;
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,39,"* @author <a href=""mailto:levon@lk.otherinbox.com"">Levon Karayan</a>"
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,329,public void testNullToEmptyBoolean() {
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,330,// Test null handling
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,331,"assertEquals(ArrayUtils.EMPTY_BOOLEAN_ARRAY, ArrayUtils.nullToEmpty((boolean[]) null));"
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,332,// Test valid array handling
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,333,"boolean[] original = new boolean[] {true, false};"
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,334,"assertEquals(original, ArrayUtils.nullToEmpty(original));"
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,335,// Test empty array handling
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,336,boolean[] empty = new boolean[]{};
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,337,boolean[] result = ArrayUtils.nullToEmpty(empty);
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,338,"assertEquals(ArrayUtils.EMPTY_BOOLEAN_ARRAY, result);"
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,339,assertTrue(empty != result);
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,342,public void testNullToEmptyLong() {
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,343,// Test null handling
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,344,"assertEquals(ArrayUtils.EMPTY_LONG_ARRAY, ArrayUtils.nullToEmpty((long[]) null));"
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,345,// Test valid array handling
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,346,"long[] original = new long[] {1L, 2L};"
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,347,"assertEquals(original, ArrayUtils.nullToEmpty(original));"
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,348,// Test empty array handling
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,349,long[] empty = new long[]{};
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,350,long[] result = ArrayUtils.nullToEmpty(empty);
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,351,"assertEquals(ArrayUtils.EMPTY_LONG_ARRAY, result);"
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,352,assertTrue(empty != result);
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,355,public void testNullToEmptyInt() {
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,356,// Test null handling
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,357,"assertEquals(ArrayUtils.EMPTY_INT_ARRAY, ArrayUtils.nullToEmpty((int[]) null));"
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,358,// Test valid array handling
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,359,"int[] original = new int[] {1, 2};"
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,360,"assertEquals(original, ArrayUtils.nullToEmpty(original));"
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,361,// Test empty array handling
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,362,int[] empty = new int[]{};
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,363,int[] result = ArrayUtils.nullToEmpty(empty);
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,364,"assertEquals(ArrayUtils.EMPTY_INT_ARRAY, result);"
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,365,assertTrue(empty != result);
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,368,public void testNullToEmptyShort() {
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,369,// Test null handling
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,370,"assertEquals(ArrayUtils.EMPTY_SHORT_ARRAY, ArrayUtils.nullToEmpty((short[]) null));"
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,371,// Test valid array handling
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,372,"short[] original = new short[] {1, 2};"
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,373,"assertEquals(original, ArrayUtils.nullToEmpty(original));"
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,374,// Test empty array handling
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,375,short[] empty = new short[]{};
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,376,short[] result = ArrayUtils.nullToEmpty(empty);
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,377,"assertEquals(ArrayUtils.EMPTY_SHORT_ARRAY, result);"
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,378,assertTrue(empty != result);
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,381,public void testNullToEmptyChar() {
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,382,// Test null handling
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,383,"assertEquals(ArrayUtils.EMPTY_CHAR_ARRAY, ArrayUtils.nullToEmpty((char[]) null));"
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,384,// Test valid array handling
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,385,"char[] original = new char[] {'a', 'b'};"
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,386,"assertEquals(original, ArrayUtils.nullToEmpty(original));"
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,387,// Test empty array handling
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,388,char[] empty = new char[]{};
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,389,char[] result = ArrayUtils.nullToEmpty(empty);
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,390,"assertEquals(ArrayUtils.EMPTY_CHAR_ARRAY, result);"
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,391,assertTrue(empty != result);
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,394,public void testNullToEmptyByte() {
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,395,// Test null handling
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,396,"assertEquals(ArrayUtils.EMPTY_BYTE_ARRAY, ArrayUtils.nullToEmpty((byte[]) null));"
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,397,// Test valid array handling
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,398,"byte[] original = new byte[] {0x0F, 0x0E};"
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,399,"assertEquals(original, ArrayUtils.nullToEmpty(original));"
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,400,// Test empty array handling
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,401,byte[] empty = new byte[]{};
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,402,byte[] result = ArrayUtils.nullToEmpty(empty);
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,403,"assertEquals(ArrayUtils.EMPTY_BYTE_ARRAY, result);"
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,404,assertTrue(empty != result);
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,407,public void testNullToEmptyDouble() {
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,408,// Test null handling
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,409,"assertEquals(ArrayUtils.EMPTY_DOUBLE_ARRAY, ArrayUtils.nullToEmpty((double[]) null));"
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,410,// Test valid array handling
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,411,"double[] original = new double[] {1L, 2L};"
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,412,"assertEquals(original, ArrayUtils.nullToEmpty(original));"
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,413,// Test empty array handling
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,414,double[] empty = new double[]{};
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,415,double[] result = ArrayUtils.nullToEmpty(empty);
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,416,"assertEquals(ArrayUtils.EMPTY_DOUBLE_ARRAY, result);"
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,417,assertTrue(empty != result);
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,420,public void testNullToEmptyFloat() {
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,421,// Test null handling
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,422,"assertEquals(ArrayUtils.EMPTY_FLOAT_ARRAY, ArrayUtils.nullToEmpty((float[]) null));"
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,423,// Test valid array handling
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,424,"float[] original = new float[] {2.6f, 3.8f};"
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,425,"assertEquals(original, ArrayUtils.nullToEmpty(original));"
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,426,// Test empty array handling
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,427,float[] empty = new float[]{};
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,428,float[] result = ArrayUtils.nullToEmpty(empty);
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,429,"assertEquals(ArrayUtils.EMPTY_FLOAT_ARRAY, result);"
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,430,assertTrue(empty != result);
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,433,public void testNullToEmptyObject() {
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,434,// Test null handling
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,435,"assertEquals(ArrayUtils.EMPTY_OBJECT_ARRAY, ArrayUtils.nullToEmpty((Object[]) null));"
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,436,// Test valid array handling
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,437,"Object[] original = new Object[] {true, false};"
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,438,"assertEquals(original, ArrayUtils.nullToEmpty(original));"
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,439,// Test empty array handling
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,440,Object[] empty = new Object[]{};
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,441,Object[] result = ArrayUtils.nullToEmpty(empty);
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,442,"assertEquals(ArrayUtils.EMPTY_OBJECT_ARRAY, result);"
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,443,assertTrue(empty != result);
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,446,public void testNullToEmptyString() {
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,447,// Test null handling
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,448,"assertEquals(ArrayUtils.EMPTY_STRING_ARRAY, ArrayUtils.nullToEmpty((String[]) null));"
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,449,// Test valid array handling
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,450,"String[] original = new String[] {""abc"", ""def""};"
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,451,"assertEquals(original, ArrayUtils.nullToEmpty(original));"
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,452,// Test empty array handling
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,453,String[] empty = new String[]{};
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,454,String[] result = ArrayUtils.nullToEmpty(empty);
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,455,"assertEquals(ArrayUtils.EMPTY_STRING_ARRAY, result);"
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,456,assertTrue(empty != result);
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,459,public void testNullToEmptyBooleanObject() {
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,460,// Test null handling
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,461,"assertEquals(ArrayUtils.EMPTY_BOOLEAN_OBJECT_ARRAY, ArrayUtils.nullToEmpty((Boolean[]) null));"
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,462,// Test valid array handling
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,463,"Boolean[] original = new Boolean[] {Boolean.TRUE, Boolean.FALSE};"
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,464,"assertEquals(original, ArrayUtils.nullToEmpty(original));"
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,465,// Test empty array handling
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,466,Boolean[] empty = new Boolean[]{};
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,467,Boolean[] result = ArrayUtils.nullToEmpty(empty);
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,468,"assertEquals(ArrayUtils.EMPTY_BOOLEAN_OBJECT_ARRAY, result);"
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,469,assertTrue(empty != result);
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,472,public void testNullToEmptyLongObject() {
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,473,// Test null handling
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,474,"assertEquals(ArrayUtils.EMPTY_LONG_OBJECT_ARRAY, ArrayUtils.nullToEmpty((Long[]) null));"
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,475,// Test valid array handling
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,476,"Long[] original = new Long[] {1L, 2L};"
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,477,"assertEquals(original, ArrayUtils.nullToEmpty(original));"
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,478,// Test empty array handling
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,479,Long[] empty = new Long[]{};
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,480,Long[] result = ArrayUtils.nullToEmpty(empty);
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,481,"assertEquals(ArrayUtils.EMPTY_LONG_OBJECT_ARRAY, result);"
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,482,assertTrue(empty != result);
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,485,public void testNullToEmptyIntObject() {
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,486,// Test null handling
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,487,"assertEquals(ArrayUtils.EMPTY_INTEGER_OBJECT_ARRAY, ArrayUtils.nullToEmpty((Integer[]) null));"
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,488,// Test valid array handling
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,489,"Integer[] original = new Integer[] {1, 2};"
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,490,"assertEquals(original, ArrayUtils.nullToEmpty(original));"
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,491,// Test empty array handling
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,492,Integer[] empty = new Integer[]{};
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,493,Integer[] result = ArrayUtils.nullToEmpty(empty);
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,494,"assertEquals(ArrayUtils.EMPTY_INTEGER_OBJECT_ARRAY, result);"
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,495,assertTrue(empty != result);
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,498,public void testNullToEmptyShortObject() {
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,499,// Test null handling
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,500,"assertEquals(ArrayUtils.EMPTY_SHORT_OBJECT_ARRAY, ArrayUtils.nullToEmpty((Short[]) null));"
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,501,// Test valid array handling
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,502,"Short[] original = new Short[] {1, 2};"
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,503,"assertEquals(original, ArrayUtils.nullToEmpty(original));"
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,504,// Test empty array handling
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,505,Short[] empty = new Short[]{};
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,506,Short[] result = ArrayUtils.nullToEmpty(empty);
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,507,"assertEquals(ArrayUtils.EMPTY_SHORT_OBJECT_ARRAY, result);"
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,508,assertTrue(empty != result);
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,511,public void testNullToEmptyCharObject() {
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,512,// Test null handling
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,513,"assertEquals(ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY, ArrayUtils.nullToEmpty((Character[]) null));"
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,514,// Test valid array handling
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,515,"Character[] original = new Character[] {'a', 'b'};"
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,516,"assertEquals(original, ArrayUtils.nullToEmpty(original));"
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,517,// Test empty array handling
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,518,Character[] empty = new Character[]{};
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,519,Character[] result = ArrayUtils.nullToEmpty(empty);
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,520,"assertEquals(ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY, result);"
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,521,assertTrue(empty != result);
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,524,public void testNullToEmptyByteObject() {
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,525,// Test null handling
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,526,"assertEquals(ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY, ArrayUtils.nullToEmpty((Byte[]) null));"
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,527,// Test valid array handling
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,528,"Byte[] original = new Byte[] {0x0F, 0x0E};"
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,529,"assertEquals(original, ArrayUtils.nullToEmpty(original));"
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,530,// Test empty array handling
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,531,Byte[] empty = new Byte[]{};
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,532,Byte[] result = ArrayUtils.nullToEmpty(empty);
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,533,"assertEquals(ArrayUtils.EMPTY_BYTE_OBJECT_ARRAY, result);"
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,534,assertTrue(empty != result);
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,537,public void testNullToEmptyDoubleObject() {
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,538,// Test null handling
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,539,"assertEquals(ArrayUtils.EMPTY_DOUBLE_OBJECT_ARRAY, ArrayUtils.nullToEmpty((Double[]) null));"
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,540,// Test valid array handling
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,541,"Double[] original = new Double[] {1D, 2D};"
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,542,"assertEquals(original, ArrayUtils.nullToEmpty(original));"
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,543,// Test empty array handling
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,544,Double[] empty = new Double[]{};
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,545,Double[] result = ArrayUtils.nullToEmpty(empty);
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,546,"assertEquals(ArrayUtils.EMPTY_DOUBLE_OBJECT_ARRAY, result);"
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,547,assertTrue(empty != result);
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,550,public void testNullToEmptyFloatObject() {
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,551,// Test null handling
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,552,"assertEquals(ArrayUtils.EMPTY_FLOAT_OBJECT_ARRAY, ArrayUtils.nullToEmpty((Float[]) null));"
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,553,// Test valid array handling
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,554,"Float[] original = new Float[] {2.6f, 3.8f};"
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,555,"assertEquals(original, ArrayUtils.nullToEmpty(original));"
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,556,// Test empty array handling
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,557,Float[] empty = new Float[]{};
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,558,Float[] result = ArrayUtils.nullToEmpty(empty);
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,559,"assertEquals(ArrayUtils.EMPTY_FLOAT_OBJECT_ARRAY, result);"
True,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,src/test/java/org/apache/commons/lang3/ArrayUtilsTest.java,560,assertTrue(empty != result);
