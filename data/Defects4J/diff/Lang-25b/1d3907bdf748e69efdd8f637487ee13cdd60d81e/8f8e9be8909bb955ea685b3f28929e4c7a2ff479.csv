is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,776,* <p>Returns a <code>String</code> value for an unescaped CSV column. </p>
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,778,"* <p>If the value is enclosed in double quotes, and contains a comma, newline"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,779,"*    or double quote, then quotes are removed."
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,780,* </p>
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,782,* <p>Any double quote escaped characters (a pair of double quotes) are unescaped
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,783,*    to just one double quote. </p>
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,785,"* <p>If the value is not enclosed in double quotes, or is and does not contain a"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,786,"*    comma, newline or double quote, then the String value is returned unchanged.</p>"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,787,* </p>
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,789,"* see <a href=""http://en.wikipedia.org/wiki/Comma-separated_values"">Wikipedia</a> and"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,790,"* <a href=""http://tools.ietf.org/html/rfc4180"">RFC 4180</a>."
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,792,"* @param str the input CSV column String, may be null"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,793,"* @return the input String, with enclosing double quotes removed and embedded double"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,794,"* quotes unescaped, <code>null</code> if null string input"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,795,* @since 2.4
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,797,public static String unescapeCsv(String str) {
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,798,if (str == null) {
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,799,return null;
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,801,try {
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,802,StringWriter writer = new StringWriter();
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,803,"unescapeCsv(writer, str);"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,804,return writer.toString();
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,805,} catch (IOException ioe) {
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,806,// this should never ever happen while writing to a StringWriter
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,807,ioe.printStackTrace();
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,808,return null;
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,813,* <p>Returns a <code>String</code> value for an unescaped CSV column. </p>
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,815,"* <p>If the value is enclosed in double quotes, and contains a comma, newline"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,816,"*    or double quote, then quotes are removed."
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,817,* </p>
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,819,* <p>Any double quote escaped characters (a pair of double quotes) are unescaped
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,820,*    to just one double quote. </p>
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,822,"* <p>If the value is not enclosed in double quotes, or is and does not contain a"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,823,"*    comma, newline or double quote, then the String value is returned unchanged.</p>"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,824,* </p>
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,826,"* see <a href=""http://en.wikipedia.org/wiki/Comma-separated_values"">Wikipedia</a> and"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,827,"* <a href=""http://tools.ietf.org/html/rfc4180"">RFC 4180</a>."
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,829,"* @param str the input CSV column String, may be null"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,830,"* @param out Writer to write the input String to, with enclosing double quotes"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,831,"* removed and embedded double quotes unescaped, <code>null</code> if null string input"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,832,* @throws IOException if error occurs on underlying Writer
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,833,* @since 2.4
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,835,"public static void unescapeCsv(Writer out, String str) throws IOException {"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,836,if (str == null) {
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,837,return;
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,839,if (str.length() < 2) {
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,840,out.write(str);
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,841,return;
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,843,if ( str.charAt(0) != CSV_QUOTE || str.charAt(str.length() - 1) != CSV_QUOTE ) {
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,844,out.write(str);
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,845,return;
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,848,// strip quotes
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,849,"String quoteless = str.substring(1, str.length() - 1);"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,851,"if ( StringUtils.containsAny(quoteless, CSV_SEARCH_CHARS) ) {"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,852,"// deal with escaped quotes; ie) """""
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,853,"str = StringUtils.replace(quoteless, """" + CSV_QUOTE + CSV_QUOTE, Character.toString(CSV_QUOTE));"
True,src/java/org/apache/commons/lang/StringEscapeUtils.java,src/java/org/apache/commons/lang/StringEscapeUtils.java,856,out.write(str);
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,367,public void testUnescapeCsvString() throws Exception
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,369,"assertEquals(""foo.bar"",          StringEscapeUtils.unescapeCsv(""foo.bar""));"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,370,"assertEquals(""foo,bar"",      StringEscapeUtils.unescapeCsv(""\""foo,bar\""""));"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,371,"assertEquals(""foo\nbar"",     StringEscapeUtils.unescapeCsv(""\""foo\nbar\""""));"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,372,"assertEquals(""foo\rbar"",     StringEscapeUtils.unescapeCsv(""\""foo\rbar\""""));"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,373,"assertEquals(""foo\""bar"",   StringEscapeUtils.unescapeCsv(""\""foo\""\""bar\""""));"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,374,"assertEquals("""",   StringEscapeUtils.unescapeCsv(""""));"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,375,"assertEquals(null, StringEscapeUtils.unescapeCsv(null));"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,377,"assertEquals(""\""foo.bar\"""",          StringEscapeUtils.unescapeCsv(""\""foo.bar\""""));"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,380,public void testUnescapeCsvWriter() throws Exception
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,382,"checkCsvUnescapeWriter(""foo.bar"",        ""foo.bar"");"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,383,"checkCsvUnescapeWriter(""foo,bar"",    ""\""foo,bar\"""");"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,384,"checkCsvUnescapeWriter(""foo\nbar"",   ""\""foo\nbar\"""");"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,385,"checkCsvUnescapeWriter(""foo\rbar"",   ""\""foo\rbar\"""");"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,386,"checkCsvUnescapeWriter(""foo\""bar"", ""\""foo\""\""bar\"""");"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,387,"checkCsvUnescapeWriter("""", null);"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,388,"checkCsvUnescapeWriter("""", """");"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,390,"checkCsvUnescapeWriter(""\""foo.bar\"""",        ""\""foo.bar\"""");"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,393,"private void checkCsvUnescapeWriter(String expected, String value) {"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,394,try {
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,395,StringWriter writer = new StringWriter();
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,396,"StringEscapeUtils.unescapeCsv(writer, value);"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,397,"assertEquals(expected, writer.toString());"
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,398,} catch (IOException e) {
True,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,src/test/org/apache/commons/lang/StringEscapeUtilsTest.java,399,"fail(""Threw: "" + e);"
