is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,47,/@ThreadSafe
False,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,58,/ Lock object for CAUSE_METHOD_NAMES
False,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,59,rivate static final Object CAUSE_METHOD_NAMES_LOCK = new Object();
False,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,64,"/    @GuardedBy(""CAUSE_METHOD_NAMES_LOCK"")"
False,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,65,rivate static String[] CAUSE_METHOD_NAMES = {
True,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,60,private static final String[] CAUSE_METHOD_NAMES = {
False,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,92, <p>Adds to the list of method names used in the search for <code>Throwable</code>
False,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,93, objects.</p>
False,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,95," @param methodName  the methodName to add to the list, <code>null</code>"
False,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,96,  and empty strings are ignored
False,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,97, @since 2.0
False,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,99,ublic static void addCauseMethodName(String methodName) {
False,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,100,f (StringUtils.isNotEmpty(methodName) && !isCauseMethodName(methodName)) {
False,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,101,ist<String> list = getCauseMethodNameList();
False,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,102,f (list.add(methodName)) {
False,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,103,ynchronized(CAUSE_METHOD_NAMES_LOCK) {
False,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,104,AUSE_METHOD_NAMES = toArray(list);
False,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,111, <p>Removes from the list of method names used in the search for <code>Throwable</code>
False,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,112, objects.</p>
False,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,114," @param methodName  the methodName to remove from the list, <code>null</code>"
False,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,115,  and empty strings are ignored
False,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,116, @since 2.1
False,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,118,ublic static void removeCauseMethodName(String methodName) {
False,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,119,f (StringUtils.isNotEmpty(methodName)) {
False,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,120,ist<String> list = getCauseMethodNameList();
False,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,121,f (list.remove(methodName)) {
False,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,122,ynchronized(CAUSE_METHOD_NAMES_LOCK) {
False,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,123,AUSE_METHOD_NAMES = toArray(list);
False,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,139, Returns {@link #CAUSE_METHOD_NAMES} as a List.
True,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,96,* <p>Returns the default names used when searching for the cause of an exception.</p>
False,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,141, @return {@link #CAUSE_METHOD_NAMES} as a List.
False,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,143,rivate static ArrayList<String> getCauseMethodNameList() {
False,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,144,ynchronized(CAUSE_METHOD_NAMES_LOCK) {
False,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,145,eturn new ArrayList<String>(Arrays.asList(CAUSE_METHOD_NAMES));
False,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,150, <p>Tests if the list of method names used in the search for <code>Throwable</code>
False,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,151, objects include the given name.</p>
False,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,153, @param methodName  the methodName to search in the list.
False,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,154, @return if the list of method names used in the search for <code>Throwable</code>
False,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,155,  objects include the given name.
False,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,156, @since 2.1
True,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,98,"* <p>This may be modified and used in the overloaded getCause(Throwable, String[]) method.</p>"
True,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,100,* @return cloned array of the default method names
True,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,101,* @since 3.0
False,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,158,ublic static boolean isCauseMethodName(String methodName) {
False,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,159,ynchronized(CAUSE_METHOD_NAMES_LOCK) {
False,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,160,"eturn ArrayUtils.indexOf(CAUSE_METHOD_NAMES, methodName) >= 0;"
True,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,103,public static String[] getDefaultCauseMethodNames() {
True,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,104,return ArrayUtils.clone(CAUSE_METHOD_NAMES);
False,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,196,ynchronized(CAUSE_METHOD_NAMES_LOCK) {
False,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,197,"eturn getCause(throwable, CAUSE_METHOD_NAMES);"
True,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,139,"return getCause(throwable, CAUSE_METHOD_NAMES);"
False,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,225,ynchronized(CAUSE_METHOD_NAMES_LOCK) {
False,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,226,ethodNames = CAUSE_METHOD_NAMES;
True,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,src/java/org/apache/commons/lang3/exception/ExceptionUtils.java,166,methodNames = CAUSE_METHOD_NAMES;
False,src/test/org/apache/commons/lang3/exception/ExceptionUtilsTest.java,src/test/org/apache/commons/lang3/exception/ExceptionUtilsTest.java,127,ublic void testCauseMethodNameOps() {
False,src/test/org/apache/commons/lang3/exception/ExceptionUtilsTest.java,src/test/org/apache/commons/lang3/exception/ExceptionUtilsTest.java,128,his.testCauseMethodNameOps(null);
False,src/test/org/apache/commons/lang3/exception/ExceptionUtilsTest.java,src/test/org/apache/commons/lang3/exception/ExceptionUtilsTest.java,129,"his.testCauseMethodNameOps("""");"
False,src/test/org/apache/commons/lang3/exception/ExceptionUtilsTest.java,src/test/org/apache/commons/lang3/exception/ExceptionUtilsTest.java,130,"his.testCauseMethodNameOps("" "");"
False,src/test/org/apache/commons/lang3/exception/ExceptionUtilsTest.java,src/test/org/apache/commons/lang3/exception/ExceptionUtilsTest.java,131,"his.testCauseMethodNameOps(""\t\r\n\t"");"
False,src/test/org/apache/commons/lang3/exception/ExceptionUtilsTest.java,src/test/org/apache/commons/lang3/exception/ExceptionUtilsTest.java,132,"his.testCauseMethodNameOps(""testMethodName"");"
False,src/test/org/apache/commons/lang3/exception/ExceptionUtilsTest.java,src/test/org/apache/commons/lang3/exception/ExceptionUtilsTest.java,135,oid testCauseMethodNameOps(String name) {
False,src/test/org/apache/commons/lang3/exception/ExceptionUtilsTest.java,src/test/org/apache/commons/lang3/exception/ExceptionUtilsTest.java,136,"tring methodName = ""testMethodName"";"
False,src/test/org/apache/commons/lang3/exception/ExceptionUtilsTest.java,src/test/org/apache/commons/lang3/exception/ExceptionUtilsTest.java,137,ry {
False,src/test/org/apache/commons/lang3/exception/ExceptionUtilsTest.java,src/test/org/apache/commons/lang3/exception/ExceptionUtilsTest.java,138,ssert.assertFalse(ExceptionUtils.isCauseMethodName(methodName));
False,src/test/org/apache/commons/lang3/exception/ExceptionUtilsTest.java,src/test/org/apache/commons/lang3/exception/ExceptionUtilsTest.java,139,xceptionUtils.addCauseMethodName(methodName);
False,src/test/org/apache/commons/lang3/exception/ExceptionUtilsTest.java,src/test/org/apache/commons/lang3/exception/ExceptionUtilsTest.java,140,xceptionUtils.addCauseMethodName(methodName);
False,src/test/org/apache/commons/lang3/exception/ExceptionUtilsTest.java,src/test/org/apache/commons/lang3/exception/ExceptionUtilsTest.java,141,ssert.assertTrue(ExceptionUtils.isCauseMethodName(methodName));
False,src/test/org/apache/commons/lang3/exception/ExceptionUtilsTest.java,src/test/org/apache/commons/lang3/exception/ExceptionUtilsTest.java,142, finally {
False,src/test/org/apache/commons/lang3/exception/ExceptionUtilsTest.java,src/test/org/apache/commons/lang3/exception/ExceptionUtilsTest.java,143,xceptionUtils.removeCauseMethodName(methodName);
False,src/test/org/apache/commons/lang3/exception/ExceptionUtilsTest.java,src/test/org/apache/commons/lang3/exception/ExceptionUtilsTest.java,144,ssert.assertFalse(
False,src/test/org/apache/commons/lang3/exception/ExceptionUtilsTest.java,src/test/org/apache/commons/lang3/exception/ExceptionUtilsTest.java,145,"The method name "" + methodName + "" should not be in the array"","
False,src/test/org/apache/commons/lang3/exception/ExceptionUtilsTest.java,src/test/org/apache/commons/lang3/exception/ExceptionUtilsTest.java,146,xceptionUtils.isCauseMethodName(methodName));
