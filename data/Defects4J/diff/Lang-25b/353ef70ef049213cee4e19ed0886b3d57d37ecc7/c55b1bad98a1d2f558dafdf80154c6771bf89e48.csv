is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,80," @version $Id: ExceptionUtils.java,v 1.22 2003/03/23 17:47:51 scolebourne Exp $"
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,80,"* @version $Id: ExceptionUtils.java,v 1.23 2003/05/14 02:59:13 bayard Exp $"
False,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,426,"rivate static void removeCommonFrames(List causeFrames, List wrapperFrames) {"
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,426,"public static void removeCommonFrames(List causeFrames, List wrapperFrames) {"
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,576,private static Object getCauseMethod = null;
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,577,static {
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,578,try {
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,579,"getCauseMethod = Throwable.class.getMethod(""getCause"", null);"
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,580,} catch (Exception e) {
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,581,// ignore
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,585,* Checks if the Throwable class has a <code>getCause</code> method.
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,587,public static boolean isThrowableNested() {
True,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,src/java/org/apache/commons/lang/exception/ExceptionUtils.java,588,return (getCauseMethod != null);
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,59,import java.util.*;
False,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,76," @version $Id: NestableDelegate.java,v 1.12 2003/01/25 13:06:26 scolebourne Exp $"
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,77,"* @version $Id: NestableDelegate.java,v 1.13 2003/05/14 02:59:13 bayard Exp $"
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,96,* Whether to print the stack trace top-down.
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,98,public static boolean topDown = true;
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,101,* Whether to trim the repeated stack trace.
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,103,public static boolean trimStackFrames = true;
False,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,269, writer.
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,280,* writer. If the Throwable class has a <code>getCause</code>
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,281,"* method (i.e. running on jre1.4 or higher), this method just"
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,282,"* uses Throwable's printStackTrace() method. Otherwise, generates"
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,283,"* the stack-trace, by taking into account the 'topDown' and"
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,284,* 'trimStackFrames' parameters. The topDown and trimStackFrames
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,285,* are set to 'true' by default (produces jre1.4-like stack trace).
False,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,274,ynchronized (out) {
False,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,275,tring[] st = getStackFrames(this.nestable);
False,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,276,hrowable nestedCause = ExceptionUtils.getCause(this.nestable);
False,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,277,f (nestedCause != null) {
False,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,278,f (nestedCause instanceof Nestable) {
False,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,279,/ Recurse until a non-Nestable is encountered.
False,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,280,(Nestable) nestedCause).printStackTrace(out);
False,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,281, else {
False,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,282,tring[] nst = getStackFrames(nestedCause);
False,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,283,or (int i = 0; i < nst.length; i++) {
False,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,284,ut.println(nst[i]);
False,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,287,"ut.print(""rethrown as "");"
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,290,Throwable throwable = this.nestable;
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,291,"// if running on jre1.4 or higher, use default printStackTrace"
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,292,if (ExceptionUtils.isThrowableNested()) {
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,293,if (throwable instanceof Nestable) {
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,294,((Nestable)throwable).printPartialStackTrace(out);
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,295,} else {
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,296,throwable.printStackTrace(out);
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,298,return;
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,301,// generating the nested stack trace
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,302,List stacks = new ArrayList();
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,303,while (throwable != null) {
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,304,String[] st = getStackFrames(throwable);
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,305,stacks.add(st);
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,306,throwable = ExceptionUtils.getCause(throwable);
False,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,290,/ Output desired frames from stack trace.
False,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,291,or (int i = 0; i < st.length; i++) {
False,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,292,ut.println(st[i]);
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,309,"// If NOT topDown, reverse the stack"
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,310,"String separatorLine = ""Caused by: "";"
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,311,if (!topDown) {
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,312,"separatorLine = ""Rethrown as: "";"
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,313,Collections.reverse(stacks);
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,316,// Remove the repeated lines in the stack
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,317,if (trimStackFrames) trimStackFrames(stacks);
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,319,synchronized (out) {
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,320,for (Iterator iter=stacks.iterator(); iter.hasNext();) {
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,321,String[] st = (String[]) iter.next();
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,322,"for (int i=0, len=st.length; i < len; i++) {"
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,323,out.println(st[i]);
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,325,if (iter.hasNext())
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,326,out.print(separatorLine);
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,353,* Trims the stack frames. The first set is left untouched. The rest
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,354,* of the frames are truncated from the bottom by comparing with
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,355,* one just on top.
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,357,* @param stacks The list containing String[] elements
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,359,private void trimStackFrames(List stacks) {
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,360,"for (int size=stacks.size(), i=size-1; i > 0; i--) {"
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,361,String[] curr = (String[]) stacks.get(i);
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,362,String[] next = (String[]) stacks.get(i-1);
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,364,List currList = new ArrayList(Arrays.asList(curr));
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,365,List nextList = new ArrayList(Arrays.asList(next));
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,366,"ExceptionUtils.removeCommonFrames(currList, nextList);"
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,368,int trimmed = curr.length - currList.size();
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,369,if (trimmed > 0) {
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,370,"currList.add(""\t... ""+trimmed+"" more"");"
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,371,stacks.set(
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,372,"i,"
True,src/java/org/apache/commons/lang/exception/NestableDelegate.java,src/java/org/apache/commons/lang/exception/NestableDelegate.java,373,(String[])currList.toArray(new String[currList.size()])
False,src/java/org/apache/commons/lang/exception/NestableError.java,src/java/org/apache/commons/lang/exception/NestableError.java,65," @version $Id: NestableError.java,v 1.5 2003/03/23 17:47:51 scolebourne Exp $"
True,src/java/org/apache/commons/lang/exception/NestableError.java,src/java/org/apache/commons/lang/exception/NestableError.java,65,"* @version $Id: NestableError.java,v 1.6 2003/05/14 02:59:13 bayard Exp $"
True,src/java/org/apache/commons/lang/exception/NestableError.java,src/java/org/apache/commons/lang/exception/NestableError.java,129,* Returns the detail message string of this throwable. If it was
True,src/java/org/apache/commons/lang/exception/NestableError.java,src/java/org/apache/commons/lang/exception/NestableError.java,130,"* created with a null message, returns the following:"
True,src/java/org/apache/commons/lang/exception/NestableError.java,src/java/org/apache/commons/lang/exception/NestableError.java,131,* (cause==null ? null : cause.toString()).
False,src/java/org/apache/commons/lang/exception/NestableError.java,src/java/org/apache/commons/lang/exception/NestableError.java,129,eturn delegate.getMessage(super.getMessage());
True,src/java/org/apache/commons/lang/exception/NestableError.java,src/java/org/apache/commons/lang/exception/NestableError.java,134,if (super.getMessage() != null) {
True,src/java/org/apache/commons/lang/exception/NestableError.java,src/java/org/apache/commons/lang/exception/NestableError.java,135,return super.getMessage();
True,src/java/org/apache/commons/lang/exception/NestableError.java,src/java/org/apache/commons/lang/exception/NestableError.java,136,} else if (cause != null) {
True,src/java/org/apache/commons/lang/exception/NestableError.java,src/java/org/apache/commons/lang/exception/NestableError.java,137,return cause.toString();
True,src/java/org/apache/commons/lang/exception/NestableError.java,src/java/org/apache/commons/lang/exception/NestableError.java,138,} else {
True,src/java/org/apache/commons/lang/exception/NestableError.java,src/java/org/apache/commons/lang/exception/NestableError.java,139,return null;
False,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,73,  1 import org.apache.commons.NestedException;
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,73,*  1 import org.apache.commons.lang.exception.NestableException;
False,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,88," 16              throw new NestedException(""foo"", e);"
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,88,"* 16              throw new NestableException(""foo"", e);"
False,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,96," 24              throw new NestedException(""bar"", e);"
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,96,"* 24              throw new NestableException(""bar"", e);"
False,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,107, java.lang.Exception: baz: bar: foo
False,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,108,    at Test.c(Test.java:29)
False,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,109,    at Test.b(Test.java:22)
False,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,110, rethrown as NestedException: bar
False,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,111,    at Test.b(Test.java:24)
False,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,112,    at Test.a(Test.java:14)
False,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,113, rethrown as NestedException: foo
False,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,114,    at Test.a(Test.java:16)
False,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,115,    at Test.main(Test.java:6)
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,107,* org.apache.commons.lang.exception.NestableException: foo
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,108,*         at Test.a(Test.java:16)
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,109,*         at Test.main(Test.java:6)
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,110,* Caused by: org.apache.commons.lang.exception.NestableException: bar
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,111,*         at Test.b(Test.java:24)
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,112,*         at Test.a(Test.java:14)
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,113,*         ... 1 more
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,114,* Caused by: java.lang.Exception: baz
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,115,*         at Test.c(Test.java:29)
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,116,*         at Test.b(Test.java:22)
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,117,*         ... 2 more
False,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,123," @version $Id: NestableException.java,v 1.7 2003/03/23 17:47:51 scolebourne Exp $"
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,125,"* @version $Id: NestableException.java,v 1.8 2003/05/14 02:59:13 bayard Exp $"
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,189,* Returns the detail message string of this throwable. If it was
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,190,"* created with a null message, returns the following:"
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,191,* (cause==null ? null : cause.toString()).
False,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,187,eturn delegate.getMessage(super.getMessage());
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,194,if (super.getMessage() != null) {
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,195,return super.getMessage();
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,196,} else if (cause != null) {
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,197,return cause.toString();
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,198,} else {
True,src/java/org/apache/commons/lang/exception/NestableException.java,src/java/org/apache/commons/lang/exception/NestableException.java,199,return null;
False,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,69," @version $Id: NestableRuntimeException.java,v 1.7 2003/03/23 17:47:51 scolebourne Exp $"
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,69,"* @version $Id: NestableRuntimeException.java,v 1.8 2003/05/14 02:59:13 bayard Exp $"
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,133,* Returns the detail message string of this throwable. If it was
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,134,"* created with a null message, returns the following:"
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,135,* (cause==null ? null : cause.toString()).
False,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,133,eturn delegate.getMessage(super.getMessage());
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,138,if (super.getMessage() != null) {
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,139,return super.getMessage();
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,140,} else if (cause != null) {
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,141,return cause.toString();
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,142,} else {
True,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,src/java/org/apache/commons/lang/exception/NestableRuntimeException.java,143,return null;
False,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,69," @version $Id: AbstractNestableTestCase.java,v 1.2 2002/09/11 19:40:14 stevencaswell Exp $"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,69,"* @version $Id: AbstractNestableTestCase.java,v 1.3 2003/05/14 02:59:13 bayard Exp $"
False,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,155,"ssertTrue(""nestable exception(\""ne2\"") message == ne2"", ne2.getMessage().equals(""ne2""));"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,155,"assertEquals(""nestable exception(\""ne2\"") message == ne2"", ne2.getMessage(), ""ne2"");"
False,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,160,"ssertTrue(""nestable exception(Throwable(\""ne3 exception\"") message == cause message"","
False,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,161,e3.getMessage().equals(ne3.getCause().getMessage()));
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,160,"assertEquals(""nestable exception(Throwable(\""ne3 exception\"") message equals cause.toString()"","
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,161,"ne3.getMessage(), ne3.getCause().toString());"
False,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,166,"ssertTrue(""nestable exception(\""ne4\"", Throwable(\""ne4 exception\"") message == ne4: ne4 exception"","
False,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,167,"e4.getMessage().equals(""ne4: ne4 exception""));"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,166,"assertEquals(""nestable exception(\""ne4\"", Throwable(\""ne4 exception\"") message == ne4"","
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,167,"ne4.getMessage(), ""ne4"");"
False,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,172,"ssertTrue(""nestable exception(\""ne5\"", null) message == ne5"","
False,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,173,"e5.getMessage().equals(""ne5""));"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,172,"assertEquals(""nestable exception(\""ne5\"", null) message == ne5"","
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,173,"ne5.getMessage(), ""ne5"");"
False,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,175,"estable ne6 = getNestable(null, getThrowable(""ne6 exception""));"
False,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,176,"ssertTrue(""nestable exception(null, Throwable(\""ne6 exception\"") cause == ne6 exception"","
False,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,177,"e6.getMessage().equals(""ne6 exception""));"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,175,"Throwable t6 = getThrowable(""ne6 exception"");"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,176,"Nestable ne6 = getNestable(null, t6);"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,177,"assertNotNull(""nestable exception(null, Throwable(\""ne6 exception\"") message is not null"","
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,178,ne6.getMessage());
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,179,"assertEquals(""nestable exception(null, Throwable(\""ne6 exception\"") message equals cause.toString()"","
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,180,"ne6.getMessage(), ne6.getCause().toString());"
False,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,180,"ssertTrue(""nextable exception(\""ne7o\"", getNestable(\""ne7i\"", Throwable(\""ne7 exception\""))) message is ne7o: ne7i: ne7 exception"","
False,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,181,"e7.getMessage().equals(""ne7o: ne7i: ne7 exception""));"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,183,"assertEquals(""nestable exception(\""ne7o\"", getNestable(\""ne7i\"", Throwable(\""ne7 exception\""))) message is ne7o: ne7i: ne7 exception"","
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,184,"ne7.getMessage(), ""ne7o"");"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,186,Nestable ne8 = getNestable();
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,187,"assertNull(""nestable exception() message is null"","
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,188,ne8.getMessage());
False,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,516,"tring startsWith = ne9.getClass().getName() + "": ne9: ne9 exception"";"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,523,"String startsWith = ne9.getClass().getName() + "": ne9"";"
False,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,532,e8.printStackTrace(ps1);
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,539,ne8.printStackTrace(pw1);
False,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,534,"tring startsWith = getThrowableClass().getName() + "": ne8 exception"";"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,541,"String startsWith = ne8.getClass().getName() + "": ne8"";"
False,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,537,"tring indexOf = ne8.getClass().getName() + "": ne8: ne8 exception"";"
True,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,src/test/org/apache/commons/lang/exception/AbstractNestableTestCase.java,544,"String indexOf = getThrowableClass().getName() + "": ne8 exception"";"
False,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,68," @version $Id: NestableDelegateTestCase.java,v 1.3 2002/09/18 15:51:41 stevencaswell Exp $"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,68,"* @version $Id: NestableDelegateTestCase.java,v 1.4 2003/05/14 02:59:13 bayard Exp $"
False,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,76,"rethrown as ThrowableNestedNestable partial stack trace place-holder"";"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,76,"""ThrowableNestedNestable partial stack trace place-holder"";"
False,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,177," = new NestableDelegateTester1(""level 1"", new NestableDelegateTester2(""level 2"", new NestableDelegateTester1(new NestableDelegateTester2(""level 4"", new Exception(""level 5"")))));"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,177,"n = new NestableDelegateTester1(""level 1"","
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,178,"new NestableDelegateTester2(""level 2"","
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,179,new NestableDelegateTester1(
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,180,"new NestableDelegateTester2(""level 4"","
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,181,"new Exception(""level 5"")"
False,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,223," = new NestableDelegateTester1(msgs[0], new NestableDelegateTester2(msgs[1], new NestableDelegateTester1(new NestableDelegateTester2(msgs[3], new Exception(msgs[4])))));"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,231,"n = new NestableDelegateTester1(msgs[0],"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,232,"new NestableDelegateTester2(msgs[1],"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,233,new NestableDelegateTester1(
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,234,"new NestableDelegateTester2(msgs[3],"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,235,new Exception(msgs[4])
False,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,249," = new NestableDelegateTester1(msgs[0], new NestableDelegateTester2(msgs[1], new NestableDelegateTester1(new NestableDelegateTester2(msgs[3], new Exception(msgs[4])))));"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,265,"n = new NestableDelegateTester1(msgs[0],"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,266,"new NestableDelegateTester2(msgs[1],"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,267,new NestableDelegateTester1(
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,268,"new NestableDelegateTester2(msgs[3],"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,269,new Exception(msgs[4])
False,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,304," = new NestableDelegateTester1(msgs[0], new NestableDelegateTester2(msgs[1], new NestableDelegateTester1(new NestableDelegateTester2(msgs[3], new Exception(msgs[4])))));"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,328,"n = new NestableDelegateTester1(msgs[0],"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,329,"new NestableDelegateTester2(msgs[1],"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,330,new NestableDelegateTester1(
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,331,"new NestableDelegateTester2(msgs[3],"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,332,new Exception(msgs[4])
False,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,377," = new NestableDelegateTester1(msgs[0], new NestableDelegateTester2(msgs[1], new NestableDelegateTester1(new NestableDelegateTester2(msgs[3], new Exception(msgs[4])))));"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,409,"n = new NestableDelegateTester1(msgs[0],"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,410,"new NestableDelegateTester2(msgs[1],"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,411,new NestableDelegateTester1(
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,412,"new NestableDelegateTester2(msgs[3],"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,413,new Exception(msgs[4])
False,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,425," = new NestableDelegateTester1(msgs[0], new NestableDelegateTester2(msgs[1], new NestableDelegateTester1(new NestableDelegateTester2(msgs[3], new Exception(msgs[4])))));"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,465,"n = new NestableDelegateTester1(msgs[0],"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,466,"new NestableDelegateTester2(msgs[1],"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,467,new NestableDelegateTester1(
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,468,"new NestableDelegateTester2(msgs[3],"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,469,new Exception(msgs[4])
False,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,493,"ssertTrue(""stack trace startsWith == java.lang.Exception: nested exception 3"","
False,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,494,"tack1.startsWith(""java.lang.Exception: nested exception 3""));"
False,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,495,nt start1 = (stack1.length() - lineSepLen) - partialStackTraceLen;
False,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,496,nt end1 = stack1.length() - lineSepLen;
False,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,497,"ssertEquals(""stack trace substring("" + start1 + "","" + end1 + "") == "" +"
False,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,498,"ARTIAL_STACK_TRACE,"
False,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,499,"ARTIAL_STACK_TRACE,"
False,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,500,"tack1.substring(start1, end1));"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,541,"assertTrue(""stack trace startsWith"", stack1.startsWith(PARTIAL_STACK_TRACE));"
False,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,502,yteArrayOutputStream baos2 = new ByteArrayOutputStream();
False,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,503,rintStream ps2 = new PrintStream(baos2);
False,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,504,ystem.setErr(ps2);
False,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,505,d3.printStackTrace();
False,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,506,tring stack2 = baos2.toString();
False,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,507,"ssertTrue(""stack trace startsWith == java.lang.Exception: nested exception 3"","
False,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,508,"tack2.startsWith(""java.lang.Exception: nested exception 3""));"
False,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,509,nt start2 = (stack2.length() - lineSepLen) - partialStackTraceLen;
False,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,510,nt end2 = stack2.length() - lineSepLen;
False,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,511,"ssertTrue(""stack trace substring("" + start2 + "","" + end2 + "") == "" + PARTIAL_STACK_TRACE,"
False,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,512,"tack2.substring(start2, end2).equals(PARTIAL_STACK_TRACE));"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,543,"Nestable n = new NestableDelegateTester1(""level 1"","
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,544,"new NestableDelegateTester2(""level 2"","
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,545,new NestableDelegateTester1(
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,546,"new NestableDelegateTester2(""level 4"","
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,547,"new Exception(""level 5"")"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,552,NestableDelegate d = new NestableDelegate(n);
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,554,// Only testing the flags for jdk1.3 and below
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,555,if (!ExceptionUtils.isThrowableNested()) {
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,556,d.topDown = true; d.trimStackFrames = true;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,557,"checkStackTrace(d, true, true, NestableDelegateTester1.class.getName()+"": level 1"", 24);"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,558,d.topDown = true; d.trimStackFrames = false;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,559,"checkStackTrace(d, true, false, NestableDelegateTester1.class.getName()+"": level 1"", 80);"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,560,d.topDown = false; d.trimStackFrames = true;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,561,"checkStackTrace(d, false, true, ""java.lang.Exception: level 5"", 24);"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,562,d.topDown = false; d.trimStackFrames = false;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,563,"checkStackTrace(d, false, false, ""java.lang.Exception: level 5"", 80);"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,564,d.topDown = true; d.trimStackFrames = true;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,567,"private void checkStackTrace(NestableDelegate d, boolean topDown, boolean trimStackFrames,"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,568,"String startsWith, int expCount) {"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,569,ByteArrayOutputStream baos1 = new ByteArrayOutputStream();
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,570,PrintStream ps1 = new PrintStream(baos1);
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,571,d.printStackTrace(ps1);
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,572,String stack1 = baos1.toString();
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,573,int actCount = countLines(stack1);
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,574,"assertTrue(""topDown: ""+topDown+"", trimStackFrames: ""+trimStackFrames+"" startsWith"","
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,575,stack1.startsWith(startsWith));
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,576,"assertEquals(""topDown: ""+topDown+"", trimStackFrames: ""+trimStackFrames+"" lineCount"","
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,577,"expCount, actCount);"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,579,private int countLines(String s) {
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,580,if (s == null) return 0;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,582,"int i = 0, ndx = -1;"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,583,"while ((ndx = s.indexOf(""\n"", ndx+1)) != -1) {"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,584,i++;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,586,return i;
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,596,* Nestable and Throwable class which can be passed to the NestableDelegate
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,597,* constructor. Used for testing various methods which iterate through the
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,598,* nested causes.
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,687,super.printStackTrace(out);
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,717,* Nestable and Throwable class which can be passed to the NestableDelegate
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,718,* constructor. Used for testing various methods which iterate through the
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,719,* nested causes.
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,810,super.printStackTrace(out);
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,840,* Used to test that the constructor passes when passed a throwable cause
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,841,"* And, the NestableDelegate.getMessage() returns the message from underlying"
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,842,* nestable (which also has to be a Throwable).
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,955,* Nestable and Throwable class which takes in a 'cause' object.
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,956,* Returns a message wrapping the 'cause' message
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,957,* Prints a fixed stack trace and partial stack trace.
True,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,src/test/org/apache/commons/lang/exception/NestableDelegateTestCase.java,1080,* Used to test that the constructor fails when passed a non-throwable cause
