is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,33,"* Adds an event listener to the specified source.  This looks for an ""add"" method corresponding to the event"
True,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,34,"* type (addActionListener, for example)."
True,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,35,* @param eventSource the event source
True,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,36,* @param listenerType the event listener type
True,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,37,* @param listener the listener
True,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,38,* @param <L> the event listener type
True,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,40,* @throws IllegalArgumentException if the object doesn't support the listener type
False,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,40,"hrow new IllegalArgumentException(""Class "" + eventSource.getClass() + "" does not have an accesible add"" + listenerType.getSimpleName() + "" method which takes a parameter of type "" + listenerType.getClass().getName() + ""."");"
True,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,50,"throw new IllegalArgumentException(""Class "" + eventSource.getClass().getName() + "" does not have a public add"" + listenerType.getSimpleName() + "" method which takes a parameter of type "" + listenerType.getName() + ""."");"
False,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,44,"hrow new IllegalArgumentException(""Class "" + eventSource.getClass() + "" does not have an accesible add"" + listenerType.getSimpleName () + "" method which takes a parameter of type "" + listenerType.getClass().getName() + ""."");"
True,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,54,"throw new IllegalArgumentException(""Class "" + eventSource.getClass().getName() + "" does not have an accesible add"" + listenerType.getSimpleName () + "" method which takes a parameter of type "" + listenerType.getName() + ""."");"
False,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,91,"eturn MethodUtils.invokeMethod(target, methodName, new Object[]{});"
True,src/main/java/org/apache/commons/lang3/event/EventUtils.java,src/main/java/org/apache/commons/lang3/event/EventUtils.java,101,"return MethodUtils.invokeMethod(target, methodName);"
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,21,import java.awt.event.ActionEvent;
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,22,import java.awt.event.ActionListener;
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,25,import java.beans.VetoableChangeListener;
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,46,public void testAddEventListenerWithNoAddMethod()
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,48,final PropertyChangeSource src = new PropertyChangeSource();
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,49,EventCountingInvociationHandler handler = new EventCountingInvociationHandler();
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,50,ActionListener listener = handler.createListener(ActionListener.class);
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,51,try
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,53,"EventUtils.addEventListener(src, ActionListener.class, listener);"
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,54,"fail(""Should not be allowed to add a listener to an object that doesn't support it."");"
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,56,catch (IllegalArgumentException e)
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,58,"assertEquals(""Class "" + src.getClass().getName() + "" does not have a public add"" + ActionListener.class.getSimpleName() + "" method which takes a parameter of type "" + ActionListener.class.getName() + ""."", e.getMessage());"
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,62,public void testAddEventListenerThrowsException()
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,64,final ExceptionEventSource src = new ExceptionEventSource();
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,65,try
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,67,"EventUtils.addEventListener(src, ActionListener.class, new ActionListener()"
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,69,public void actionPerformed(ActionEvent e)
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,71,// Do nothing!
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,74,"fail(""Add method should have thrown an exception, so method should fail."");"
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,76,catch (RuntimeException e)
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,82,public void testAddEventListenerWithPrivateAddMethod()
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,84,final PropertyChangeSource src = new PropertyChangeSource();
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,85,EventCountingInvociationHandler handler = new EventCountingInvociationHandler();
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,86,VetoableChangeListener listener = handler.createListener(VetoableChangeListener.class);
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,87,try
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,89,"EventUtils.addEventListener(src, VetoableChangeListener.class, listener);"
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,90,"fail(""Should not be allowed to add a listener to an object that doesn't support it."");"
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,92,catch (IllegalArgumentException e)
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,94,"assertEquals(""Class "" + src.getClass().getName() + "" does not have a public add"" + VetoableChangeListener.class.getSimpleName() + "" method which takes a parameter of type "" + VetoableChangeListener.class.getName() + ""."", e.getMessage());"
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,109,public void testBindEventsToMethodWithEvent()
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,111,final PropertyChangeSource src = new PropertyChangeSource();
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,112,final EventCounterWithEvent counter = new EventCounterWithEvent();
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,113,"EventUtils.bindEventsToMethod(counter, ""eventOccurred"", src, PropertyChangeListener.class);"
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,114,"assertEquals(0, counter.getCount());"
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,115,"src.setProperty(""newValue"");"
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,116,"assertEquals(1, counter.getCount());"
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,120,public void testBindFilteredEventsToMethod()
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,122,final MultipleEventSource src = new MultipleEventSource();
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,123,final EventCounter counter = new EventCounter();
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,124,"EventUtils.bindEventsToMethod(counter, ""eventOccurred"", src, MultipleEventListener.class, ""event1"");"
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,125,"assertEquals(0, counter.getCount());"
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,126,"src.listeners.fire().event1(new ActionEvent(src, ActionEvent.ACTION_PERFORMED, ""event1""));"
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,127,"assertEquals(1, counter.getCount());"
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,128,"src.listeners.fire().event2(new ActionEvent(src, ActionEvent.ACTION_PERFORMED, ""event2""));"
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,129,"assertEquals(1, counter.getCount());"
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,132,public static interface MultipleEventListener
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,134,public void event1(ActionEvent e);
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,136,public void event2(ActionEvent e);
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,154,public static class EventCounterWithEvent
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,156,private int count;
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,158,public void eventOccurred(PropertyChangeEvent e)
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,160,count++;
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,163,public int getCount()
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,165,return count;
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,202,public static class MultipleEventSource
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,204,private EventListenerSupport<MultipleEventListener> listeners = EventListenerSupport.create(MultipleEventListener.class);
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,206,public void addMultipleEventListener(MultipleEventListener listener)
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,208,listeners.addListener(listener);
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,212,public static class ExceptionEventSource
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,214,public void addActionListener(ActionListener listener)
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,216,throw new RuntimeException();
False,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,110,"isteners.fire().propertyChange(new PropertyChangeEvent(this, ""property"", ""oldValue"", property));"
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,230,"listeners.fire().propertyChange(new PropertyChangeEvent(this, ""property"", oldValue, property));"
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,233,protected void addVetoableChangeListener(VetoableChangeListener listener)
True,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,src/test/java/org/apache/commons/lang3/event/EventUtilsTest.java,235,// Do nothing!
