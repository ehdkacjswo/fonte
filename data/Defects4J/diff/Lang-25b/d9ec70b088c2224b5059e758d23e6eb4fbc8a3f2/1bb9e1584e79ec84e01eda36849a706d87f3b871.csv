is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,2, Licensed to the Apache Software Foundation (ASF) under one
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,3, or more contributor license agreements.  See the NOTICE file
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,4, distributed with this work for additional information
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,5, regarding copyright ownership.  The ASF licenses this file
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,6," to you under the Apache License, Version 2.0 (the"
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,7," ""License""); you may not use this file except in compliance"
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,8, with the License.  You may obtain a copy of the License at
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,10, http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,12," Unless required by applicable law or agreed to in writing,"
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,13, software distributed under the License is distributed on an
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,14," ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY"
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,15," KIND, either express or implied.  See the License for the"
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,16, specific language governing permissions and limitations
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,17, under the License.
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,19,ackage org.apache.commons.lang.math;
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,21,mport java.util.Random;
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,24, <p><code>RandomUtils</code> is a wrapper that supports all possible
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,25, {@link java.util.Random} methods via the {@link java.lang.Math#random()}
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,26, method and its system-wide <code>Random</code> object.
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,28, @author Gary D. Gregory
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,29, @since 2.0
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,30, @version $Id$
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,32,ublic class RandomUtils {
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,35, An instance of {@link JVMRandom}.
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,37,ublic static final Random JVM_RANDOM = new JVMRandom();
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,39,/ should be possible for JVM_RANDOM?
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,40,/    public static void nextBytes(byte[]) {
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,41,/    public synchronized double nextGaussian();
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,45," <p>Returns the next pseudorandom, uniformly distributed int value"
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,46, from the Math.random() sequence.</p>
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,48, @return the random int
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,50,ublic static int nextInt() {
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,51,eturn nextInt(JVM_RANDOM);
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,55," <p>Returns the next pseudorandom, uniformly distributed int value"
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,56, from the given <code>random</code> sequence.</p>
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,58, @param random the Random sequence generator.
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,59, @return the random int
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,61,ublic static int nextInt(Random random) {
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,62,eturn random.nextInt();
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,66," <p>Returns a pseudorandom, uniformly distributed int value"
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,67, between <code>0</code> (inclusive) and the specified value
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,68," (exclusive), from the Math.random() sequence.</p>"
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,70, @param n  the specified exclusive max-value
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,71, @return the random int
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,73,ublic static int nextInt(int n) {
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,74,"eturn nextInt(JVM_RANDOM, n);"
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,78," <p>Returns a pseudorandom, uniformly distributed int value"
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,79, between <code>0</code> (inclusive) and the specified value
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,80," (exclusive), from the given Random sequence.</p>"
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,82, @param random the Random sequence generator.
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,83, @param n  the specified exclusive max-value
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,84, @return the random int
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,86,"ublic static int nextInt(Random random, int n) {"
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,87,/ check this cannot return 'n'
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,88,eturn random.nextInt(n);
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,92," <p>Returns the next pseudorandom, uniformly distributed long value"
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,93, from the Math.random() sequence.</p>
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,95, @return the random long
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,97,ublic static long nextLong() {
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,98,eturn nextLong(JVM_RANDOM);
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,102," <p>Returns the next pseudorandom, uniformly distributed long value"
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,103, from the given Random sequence.</p>
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,105, @param random the Random sequence generator.
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,106, @return the random long
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,108,ublic static long nextLong(Random random) {
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,109,eturn random.nextLong();
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,113," <p>Returns the next pseudorandom, uniformly distributed boolean value"
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,114, from the Math.random() sequence.</p>
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,116, @return the random boolean
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,118,ublic static boolean nextBoolean() {
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,119,eturn nextBoolean(JVM_RANDOM);
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,123," <p>Returns the next pseudorandom, uniformly distributed boolean value"
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,124, from the given random sequence.</p>
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,126, @param random the Random sequence generator.
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,127, @return the random boolean
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,129,ublic static boolean nextBoolean(Random random) {
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,130,eturn random.nextBoolean();
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,134," <p>Returns the next pseudorandom, uniformly distributed float value"
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,135, between <code>0.0</code> and <code>1.0</code> from the Math.random()
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,136, sequence.</p>
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,138, @return the random float
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,140,ublic static float nextFloat() {
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,141,eturn nextFloat(JVM_RANDOM);
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,145," <p>Returns the next pseudorandom, uniformly distributed float value"
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,146, between <code>0.0</code> and <code>1.0</code> from the given Random
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,147, sequence.</p>
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,149, @param random the Random sequence generator.
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,150, @return the random float
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,152,ublic static float nextFloat(Random random) {
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,153,eturn random.nextFloat();
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,157," <p>Returns the next pseudorandom, uniformly distributed float value"
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,158, between <code>0.0</code> and <code>1.0</code> from the Math.random()
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,159, sequence.</p>
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,161, @return the random double
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,163,ublic static double nextDouble() {
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,164,eturn nextDouble(JVM_RANDOM);
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,168," <p>Returns the next pseudorandom, uniformly distributed float value"
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,169, between <code>0.0</code> and <code>1.0</code> from the given Random
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,170, sequence.</p>
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,172, @param random the Random sequence generator.
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,173, @return the random double
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,175,ublic static double nextDouble(Random random) {
False,src/java/org/apache/commons/lang/math/RandomUtils.java,src/java/org/apache/commons/lang/math/RandomUtils.java,176,eturn random.nextDouble();
