is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,38,* @author Tomasz Blachowicz
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,100,* Maps an abbreviation used in array class names to corresponding primitive class name.
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,102,private static Map reverseAbbreviationMap = new HashMap();
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,105,* Add primitive type abbreviation to maps of abbreviations.
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,107,* @param primitive Canonical name of primitive type
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,108,* @param abbreviation Corresponding abbreviation of primitive type
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,110,"private static void addAbbreviation(String primitive, String abbreviation) {"
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,111,"abbreviationMap.put(primitive, abbreviation);"
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,112,"reverseAbbreviationMap.put(abbreviation, primitive);"
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,116,* Feed abbreviation maps
False,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,98,"bbreviationMap.put( ""int"", ""I"" );"
False,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,99,"bbreviationMap.put( ""boolean"", ""Z"" );"
False,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,100,"bbreviationMap.put( ""float"", ""F"" );"
False,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,101,"bbreviationMap.put( ""long"", ""J"" );"
False,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,102,"bbreviationMap.put( ""short"", ""S"" );"
False,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,103,"bbreviationMap.put( ""byte"", ""B"" );"
False,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,104,"bbreviationMap.put( ""double"", ""D"" );"
False,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,105,"bbreviationMap.put( ""char"", ""C"" );"
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,119,"addAbbreviation(""int"", ""I"");"
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,120,"addAbbreviation(""boolean"", ""Z"");"
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,121,"addAbbreviation(""float"", ""F"");"
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,122,"addAbbreviation(""long"", ""J"");"
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,123,"addAbbreviation(""short"", ""S"");"
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,124,"addAbbreviation(""byte"", ""B"");"
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,125,"addAbbreviation(""double"", ""D"");"
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,126,"addAbbreviation(""char"", ""C"");"
False,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,608,"lazz = Class.forName(toProperClassName(className), initialize, classLoader);"
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,629,"clazz = Class.forName(toCanonicalName(className), initialize, classLoader);"
False,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,721,rivate static String toProperClassName(String className) {
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,742,private static String toCanonicalName(String className) {
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,786,// Short canonical name
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,789,* <p>Gets the canonical name minus the package name for an <code>Object</code>.</p>
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,791,"* @param object  the class to get the short name for, may be null"
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,792,* @param valueIfNull  the value to return if null
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,793,"* @return the canonical name of the object without the package name, or the null value"
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,794,* @since 2.4
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,796,"public static String getShortCanonicalName(Object object, String valueIfNull) {"
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,797,if (object == null) {
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,798,return valueIfNull;
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,800,return getShortCanonicalName(object.getClass().getName());
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,804,* <p>Gets the canonical name minus the package name from a <code>Class</code>.</p>
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,806,* @param cls  the class to get the short name for.
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,807,* @return the canonical name without the package name or an empty string
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,808,* @since 2.4
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,810,public static String getShortCanonicalName(Class cls) {
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,811,if (cls == null) {
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,812,return StringUtils.EMPTY;
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,814,return getShortCanonicalName(cls.getName());
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,818,* <p>Gets the canonical name minus the package name from a String.</p>
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,820,* <p>The string passed in is assumed to be a canonical name - it is not checked.</p>
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,822,* @param className  the className to get the short name for
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,823,* @return the canonical name of the class without the package name or an empty string
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,824,* @since 2.4
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,826,public static String getShortCanonicalName(String canonicalName) {
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,827,return ClassUtils.getShortClassName(getCanonicalName(canonicalName));
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,830,// Package name
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,833,* <p>Gets the package name from the canonical name of an <code>Object</code>.</p>
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,835,"* @param object  the class to get the package name for, may be null"
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,836,* @param valueIfNull  the value to return if null
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,837,"* @return the package name of the object, or the null value"
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,838,* @since 2.4
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,840,"public static String getPackageCanonicalName(Object object, String valueIfNull) {"
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,841,if (object == null) {
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,842,return valueIfNull;
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,844,return getPackageCanonicalName(object.getClass().getName());
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,848,* <p>Gets the package name from the canonical name of a <code>Class</code>.</p>
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,850,"* @param cls  the class to get the package name for, may be <code>null</code>."
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,851,* @return the package name or an empty string
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,852,* @since 2.4
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,854,public static String getPackageCanonicalName(Class cls) {
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,855,if (cls == null) {
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,856,return StringUtils.EMPTY;
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,858,return getPackageCanonicalName(cls.getName());
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,862,* <p>Gets the package name from the canonical name. </p>
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,864,* <p>The string passed in is assumed to be a canonical name - it is not checked.</p>
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,865,"* <p>If the class is unpackaged, return an empty string.</p>"
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,867,"* @param canonicalName  the canonical name to get the package name for, may be <code>null</code>"
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,868,* @return the package name or an empty string
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,869,* @since 2.4
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,871,public static String getPackageCanonicalName(String canonicalName) {
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,872,return ClassUtils.getPackageName(getCanonicalName(canonicalName));
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,876,* <p>Converts a given name of class into canonical format.
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,877,* If name of class is not a name of array class it returns
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,878,* unchanged name.</p>
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,879,* <p>Example:
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,880,* <ul>
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,881,"* <li><code>getCanonicalName(""[I"") = ""int[]""</code></li>"
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,882,"* <li><code>getCanonicalName(""[Ljava.lang.String;"") = ""java.lang.String[]""</code></li>"
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,883,"* <li><code>getCanonicalName(""java.lang.String"") = ""java.lang.String""</code></li>"
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,884,* </ul>
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,885,* </p>
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,887,* @param className the name of class
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,888,* @return canonical form of class name
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,889,* @since 2.4
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,891,private static String getCanonicalName(String className) {
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,892,className = StringUtils.deleteWhitespace(className);
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,893,if (className == null) {
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,894,return null;
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,895,} else {
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,896,int dim = 0;
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,897,"while(className.startsWith(""["")) {"
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,898,dim++;
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,899,className = className.substring(1);
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,901,if(dim < 1) {
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,902,return className;
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,903,} else {
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,904,"if(className.startsWith(""L"")) {"
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,905,className = className.substring(
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,906,"1,"
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,907,"className.endsWith("";"")"
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,908,? className.length() - 1
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,909,: className.length());
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,910,} else {
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,911,if(className.length() > 0) {
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,912,className = (String) reverseAbbreviationMap.get(
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,913,"className.substring(0, 1));"
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,916,StringBuffer canonicalClassNameBuffer = new StringBuffer(className);
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,917,for(int i = 0; i < dim; i++) {
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,918,"canonicalClassNameBuffer.append(""[]"");"
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,920,return canonicalClassNameBuffer.toString();
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,41,* @author Tomasz Blachowicz
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,603,public void test_getShortCanonicalName_Object() {
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,604,"assertEquals(""<null>"", ClassUtils.getShortCanonicalName(null, ""<null>""));"
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,605,"assertEquals(""ClassUtils"", ClassUtils.getShortCanonicalName(new ClassUtils(), ""<null>""));"
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,606,"assertEquals(""ClassUtils[]"", ClassUtils.getShortCanonicalName(new ClassUtils[0], ""<null>""));"
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,607,"assertEquals(""ClassUtils[][]"", ClassUtils.getShortCanonicalName(new ClassUtils[0][0], ""<null>""));"
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,608,"assertEquals(""int[]"", ClassUtils.getShortCanonicalName(new int[0], ""<null>""));"
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,609,"assertEquals(""int[][]"", ClassUtils.getShortCanonicalName(new int[0][0], ""<null>""));"
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,612,public void test_getShortCanonicalName_Class() {
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,613,"assertEquals(""ClassUtils"", ClassUtils.getShortCanonicalName(ClassUtils.class));"
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,614,"assertEquals(""ClassUtils[]"", ClassUtils.getShortCanonicalName(ClassUtils[].class));"
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,615,"assertEquals(""ClassUtils[][]"", ClassUtils.getShortCanonicalName(ClassUtils[][].class));"
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,616,"assertEquals(""int[]"", ClassUtils.getShortCanonicalName(int[].class));"
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,617,"assertEquals(""int[][]"", ClassUtils.getShortCanonicalName(int[][].class));"
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,620,public void test_getShortCanonicalName_String() {
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,621,"assertEquals(""ClassUtils"", ClassUtils.getShortCanonicalName(""org.apache.commons.lang.ClassUtils""));"
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,622,"assertEquals(""ClassUtils[]"", ClassUtils.getShortCanonicalName(""[Lorg.apache.commons.lang.ClassUtils;""));"
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,623,"assertEquals(""ClassUtils[][]"", ClassUtils.getShortCanonicalName(""[[Lorg.apache.commons.lang.ClassUtils;""));"
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,624,"assertEquals(""ClassUtils[]"", ClassUtils.getShortCanonicalName(""org.apache.commons.lang.ClassUtils[]""));"
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,625,"assertEquals(""ClassUtils[][]"", ClassUtils.getShortCanonicalName(""org.apache.commons.lang.ClassUtils[][]""));"
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,626,"assertEquals(""int[]"", ClassUtils.getShortCanonicalName(""[I""));"
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,627,"assertEquals(""int[][]"", ClassUtils.getShortCanonicalName(""[[I""));"
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,628,"assertEquals(""int[]"", ClassUtils.getShortCanonicalName(""int[]""));"
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,629,"assertEquals(""int[][]"", ClassUtils.getShortCanonicalName(""int[][]""));"
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,632,public void test_getPackageCanonicalName_Object() {
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,633,"assertEquals(""<null>"", ClassUtils.getPackageCanonicalName(null, ""<null>""));"
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,634,"assertEquals(""org.apache.commons.lang"", ClassUtils.getPackageCanonicalName(new ClassUtils(), ""<null>""));"
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,635,"assertEquals(""org.apache.commons.lang"", ClassUtils.getPackageCanonicalName(new ClassUtils[0], ""<null>""));"
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,636,"assertEquals(""org.apache.commons.lang"", ClassUtils.getPackageCanonicalName(new ClassUtils[0][0], ""<null>""));"
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,637,"assertEquals("""", ClassUtils.getPackageCanonicalName(new int[0], ""<null>""));"
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,638,"assertEquals("""", ClassUtils.getPackageCanonicalName(new int[0][0], ""<null>""));"
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,641,public void test_getPackageCanonicalName_Class() {
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,642,"assertEquals(""org.apache.commons.lang"", ClassUtils.getPackageCanonicalName(ClassUtils.class));"
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,643,"assertEquals(""org.apache.commons.lang"", ClassUtils.getPackageCanonicalName(ClassUtils[].class));"
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,644,"assertEquals(""org.apache.commons.lang"", ClassUtils.getPackageCanonicalName(ClassUtils[][].class));"
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,645,"assertEquals("""", ClassUtils.getPackageCanonicalName(int[].class));"
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,646,"assertEquals("""", ClassUtils.getPackageCanonicalName(int[][].class));"
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,649,public void test_getPackageCanonicalName_String() {
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,650,"assertEquals(""org.apache.commons.lang"","
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,651,"ClassUtils.getPackageCanonicalName(""org.apache.commons.lang.ClassUtils""));"
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,652,"assertEquals(""org.apache.commons.lang"","
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,653,"ClassUtils.getPackageCanonicalName(""[Lorg.apache.commons.lang.ClassUtils;""));"
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,654,"assertEquals(""org.apache.commons.lang"","
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,655,"ClassUtils.getPackageCanonicalName(""[[Lorg.apache.commons.lang.ClassUtils;""));"
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,656,"assertEquals(""org.apache.commons.lang"","
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,657,"ClassUtils.getPackageCanonicalName(""org.apache.commons.lang.ClassUtils[]""));"
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,658,"assertEquals(""org.apache.commons.lang"","
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,659,"ClassUtils.getPackageCanonicalName(""org.apache.commons.lang.ClassUtils[][]""));"
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,660,"assertEquals("""", ClassUtils.getPackageCanonicalName(""[I""));"
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,661,"assertEquals("""", ClassUtils.getPackageCanonicalName(""[[I""));"
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,662,"assertEquals("""", ClassUtils.getPackageCanonicalName(""int[]""));"
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,663,"assertEquals("""", ClassUtils.getPackageCanonicalName(""int[][]""));"
