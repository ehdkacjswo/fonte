is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/lang3/time/DateUtils.java,src/java/org/apache/commons/lang3/time/DateUtils.java,276, A parse is only deemed sucessful if it parses the whole of the input string.
True,src/java/org/apache/commons/lang3/time/DateUtils.java,src/java/org/apache/commons/lang3/time/DateUtils.java,276,* A parse is only deemed successful if it parses the whole of the input string.
True,src/java/org/apache/commons/lang3/time/DateUtils.java,src/java/org/apache/commons/lang3/time/DateUtils.java,278,* The parser will be lenient toward the parsed date.
True,src/java/org/apache/commons/lang3/time/DateUtils.java,src/java/org/apache/commons/lang3/time/DateUtils.java,287,"return parseDateWithLeniency(str, parsePatterns, true);"
True,src/java/org/apache/commons/lang3/time/DateUtils.java,src/java/org/apache/commons/lang3/time/DateUtils.java,292,* <p>Parses a string representing a date by trying a variety of different parsers.</p>
True,src/java/org/apache/commons/lang3/time/DateUtils.java,src/java/org/apache/commons/lang3/time/DateUtils.java,294,* <p>The parse will try each parse pattern in turn.
True,src/java/org/apache/commons/lang3/time/DateUtils.java,src/java/org/apache/commons/lang3/time/DateUtils.java,295,* A parse is only deemed successful if it parses the whole of the input string.
True,src/java/org/apache/commons/lang3/time/DateUtils.java,src/java/org/apache/commons/lang3/time/DateUtils.java,296,"* If no parse patterns match, a ParseException is thrown.</p>"
True,src/java/org/apache/commons/lang3/time/DateUtils.java,src/java/org/apache/commons/lang3/time/DateUtils.java,297,"* The parser parses strictly - it does not allow for dates such as ""February 942, 1996""."
True,src/java/org/apache/commons/lang3/time/DateUtils.java,src/java/org/apache/commons/lang3/time/DateUtils.java,299,"* @param str  the date to parse, not null"
True,src/java/org/apache/commons/lang3/time/DateUtils.java,src/java/org/apache/commons/lang3/time/DateUtils.java,300,"* @param parsePatterns  the date format patterns to use, see SimpleDateFormat, not null"
True,src/java/org/apache/commons/lang3/time/DateUtils.java,src/java/org/apache/commons/lang3/time/DateUtils.java,301,* @param lenient Specify whether or not date/time parsing is to be lenient.
True,src/java/org/apache/commons/lang3/time/DateUtils.java,src/java/org/apache/commons/lang3/time/DateUtils.java,302,* @return the parsed date
True,src/java/org/apache/commons/lang3/time/DateUtils.java,src/java/org/apache/commons/lang3/time/DateUtils.java,303,* @throws IllegalArgumentException if the date string or pattern array is null
True,src/java/org/apache/commons/lang3/time/DateUtils.java,src/java/org/apache/commons/lang3/time/DateUtils.java,304,* @throws ParseException if none of the date patterns were suitable
True,src/java/org/apache/commons/lang3/time/DateUtils.java,src/java/org/apache/commons/lang3/time/DateUtils.java,305,* @see java.util.Calender#isLenient()
True,src/java/org/apache/commons/lang3/time/DateUtils.java,src/java/org/apache/commons/lang3/time/DateUtils.java,307,"public static Date parseDateStrictly(String str, String[] parsePatterns) throws ParseException {"
True,src/java/org/apache/commons/lang3/time/DateUtils.java,src/java/org/apache/commons/lang3/time/DateUtils.java,308,"return parseDateWithLeniency(str, parsePatterns, false);"
True,src/java/org/apache/commons/lang3/time/DateUtils.java,src/java/org/apache/commons/lang3/time/DateUtils.java,310,"private static Date parseDateWithLeniency(String str, String[] parsePatterns,"
True,src/java/org/apache/commons/lang3/time/DateUtils.java,src/java/org/apache/commons/lang3/time/DateUtils.java,311,boolean lenient) throws ParseException {
True,src/java/org/apache/commons/lang3/time/DateUtils.java,src/java/org/apache/commons/lang3/time/DateUtils.java,329,parser.setLenient(lenient);
True,src/test/org/apache/commons/lang3/time/DateUtilsTest.java,src/test/org/apache/commons/lang3/time/DateUtilsTest.java,275,// LANG-486
True,src/test/org/apache/commons/lang3/time/DateUtilsTest.java,src/test/org/apache/commons/lang3/time/DateUtilsTest.java,276,public void testParseDateWithLeniency() throws Exception {
True,src/test/org/apache/commons/lang3/time/DateUtilsTest.java,src/test/org/apache/commons/lang3/time/DateUtilsTest.java,277,"GregorianCalendar cal = new GregorianCalendar(1998, 6, 30);"
True,src/test/org/apache/commons/lang3/time/DateUtilsTest.java,src/test/org/apache/commons/lang3/time/DateUtilsTest.java,278,"String dateStr = ""February 942, 1996"";"
True,src/test/org/apache/commons/lang3/time/DateUtilsTest.java,src/test/org/apache/commons/lang3/time/DateUtilsTest.java,279,"String[] parsers = new String[] {""MMMMM DDD, yyyy""};"
True,src/test/org/apache/commons/lang3/time/DateUtilsTest.java,src/test/org/apache/commons/lang3/time/DateUtilsTest.java,281,"Date date = DateUtils.parseDate(dateStr, parsers);"
True,src/test/org/apache/commons/lang3/time/DateUtilsTest.java,src/test/org/apache/commons/lang3/time/DateUtilsTest.java,282,"assertEquals(cal.getTime(), date);"
True,src/test/org/apache/commons/lang3/time/DateUtilsTest.java,src/test/org/apache/commons/lang3/time/DateUtilsTest.java,284,try {
True,src/test/org/apache/commons/lang3/time/DateUtilsTest.java,src/test/org/apache/commons/lang3/time/DateUtilsTest.java,285,"date = DateUtils.parseDateStrictly(dateStr, parsers);"
True,src/test/org/apache/commons/lang3/time/DateUtilsTest.java,src/test/org/apache/commons/lang3/time/DateUtilsTest.java,286,fail();
True,src/test/org/apache/commons/lang3/time/DateUtilsTest.java,src/test/org/apache/commons/lang3/time/DateUtilsTest.java,287,} catch (ParseException ex) {}
