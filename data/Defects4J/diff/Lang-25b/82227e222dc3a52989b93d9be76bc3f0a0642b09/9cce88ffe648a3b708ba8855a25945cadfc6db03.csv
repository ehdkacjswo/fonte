is_addition,old_file_path,new_file_path,line_num,content
False,src/test/org/apache/commons/lang/builder/MultiLineToStringStyleTest.java,src/test/org/apache/commons/lang/builder/MultiLineToStringStyleTest.java,91,"ssertEquals(baseStr + ""["" + SystemUtils.LINE_SEPARATOR + ""  a=<size=0>"" + SystemUtils.LINE_SEPARATOR + ""]"", new ToStringBuilder(base).append(""a"", new ArrayList(), false).toString());"
False,src/test/org/apache/commons/lang/builder/MultiLineToStringStyleTest.java,src/test/org/apache/commons/lang/builder/MultiLineToStringStyleTest.java,92,"ssertEquals(baseStr + ""["" + SystemUtils.LINE_SEPARATOR + ""  a=[]"" + SystemUtils.LINE_SEPARATOR + ""]"", new ToStringBuilder(base).append(""a"", new ArrayList(), true).toString());"
False,src/test/org/apache/commons/lang/builder/MultiLineToStringStyleTest.java,src/test/org/apache/commons/lang/builder/MultiLineToStringStyleTest.java,93,"ssertEquals(baseStr + ""["" + SystemUtils.LINE_SEPARATOR + ""  a=<size=0>"" + SystemUtils.LINE_SEPARATOR + ""]"", new ToStringBuilder(base).append(""a"", new HashMap(), false).toString());"
False,src/test/org/apache/commons/lang/builder/MultiLineToStringStyleTest.java,src/test/org/apache/commons/lang/builder/MultiLineToStringStyleTest.java,94,"ssertEquals(baseStr + ""["" + SystemUtils.LINE_SEPARATOR + ""  a={}"" + SystemUtils.LINE_SEPARATOR + ""]"", new ToStringBuilder(base).append(""a"", new HashMap(), true).toString());"
True,src/test/org/apache/commons/lang/builder/MultiLineToStringStyleTest.java,src/test/org/apache/commons/lang/builder/MultiLineToStringStyleTest.java,91,"assertEquals(baseStr + ""["" + SystemUtils.LINE_SEPARATOR + ""  a=<size=0>"" + SystemUtils.LINE_SEPARATOR + ""]"", new ToStringBuilder(base).append(""a"", new ArrayList<Object>(), false).toString());"
True,src/test/org/apache/commons/lang/builder/MultiLineToStringStyleTest.java,src/test/org/apache/commons/lang/builder/MultiLineToStringStyleTest.java,92,"assertEquals(baseStr + ""["" + SystemUtils.LINE_SEPARATOR + ""  a=[]"" + SystemUtils.LINE_SEPARATOR + ""]"", new ToStringBuilder(base).append(""a"", new ArrayList<Object>(), true).toString());"
True,src/test/org/apache/commons/lang/builder/MultiLineToStringStyleTest.java,src/test/org/apache/commons/lang/builder/MultiLineToStringStyleTest.java,93,"assertEquals(baseStr + ""["" + SystemUtils.LINE_SEPARATOR + ""  a=<size=0>"" + SystemUtils.LINE_SEPARATOR + ""]"", new ToStringBuilder(base).append(""a"", new HashMap<Object, Object>(), false).toString());"
True,src/test/org/apache/commons/lang/builder/MultiLineToStringStyleTest.java,src/test/org/apache/commons/lang/builder/MultiLineToStringStyleTest.java,94,"assertEquals(baseStr + ""["" + SystemUtils.LINE_SEPARATOR + ""  a={}"" + SystemUtils.LINE_SEPARATOR + ""]"", new ToStringBuilder(base).append(""a"", new HashMap<Object, Object>(), true).toString());"
False,src/test/org/apache/commons/lang/builder/NoFieldNamesToStringStyleTest.java,src/test/org/apache/commons/lang/builder/NoFieldNamesToStringStyleTest.java,90,"ssertEquals(baseStr + ""[<size=0>]"", new ToStringBuilder(base).append(""a"", new ArrayList(), false).toString());"
False,src/test/org/apache/commons/lang/builder/NoFieldNamesToStringStyleTest.java,src/test/org/apache/commons/lang/builder/NoFieldNamesToStringStyleTest.java,91,"ssertEquals(baseStr + ""[[]]"", new ToStringBuilder(base).append(""a"", new ArrayList(), true).toString());"
False,src/test/org/apache/commons/lang/builder/NoFieldNamesToStringStyleTest.java,src/test/org/apache/commons/lang/builder/NoFieldNamesToStringStyleTest.java,92,"ssertEquals(baseStr + ""[<size=0>]"", new ToStringBuilder(base).append(""a"", new HashMap(), false).toString());"
False,src/test/org/apache/commons/lang/builder/NoFieldNamesToStringStyleTest.java,src/test/org/apache/commons/lang/builder/NoFieldNamesToStringStyleTest.java,93,"ssertEquals(baseStr + ""[{}]"", new ToStringBuilder(base).append(""a"", new HashMap(), true).toString());"
True,src/test/org/apache/commons/lang/builder/NoFieldNamesToStringStyleTest.java,src/test/org/apache/commons/lang/builder/NoFieldNamesToStringStyleTest.java,90,"assertEquals(baseStr + ""[<size=0>]"", new ToStringBuilder(base).append(""a"", new ArrayList<Object>(), false).toString());"
True,src/test/org/apache/commons/lang/builder/NoFieldNamesToStringStyleTest.java,src/test/org/apache/commons/lang/builder/NoFieldNamesToStringStyleTest.java,91,"assertEquals(baseStr + ""[[]]"", new ToStringBuilder(base).append(""a"", new ArrayList<Object>(), true).toString());"
True,src/test/org/apache/commons/lang/builder/NoFieldNamesToStringStyleTest.java,src/test/org/apache/commons/lang/builder/NoFieldNamesToStringStyleTest.java,92,"assertEquals(baseStr + ""[<size=0>]"", new ToStringBuilder(base).append(""a"", new HashMap<Object, Object>(), false).toString());"
True,src/test/org/apache/commons/lang/builder/NoFieldNamesToStringStyleTest.java,src/test/org/apache/commons/lang/builder/NoFieldNamesToStringStyleTest.java,93,"assertEquals(baseStr + ""[{}]"", new ToStringBuilder(base).append(""a"", new HashMap<Object, Object>(), true).toString());"
False,src/test/org/apache/commons/lang/builder/ReflectionToStringBuilderExcludeTest.java,src/test/org/apache/commons/lang/builder/ReflectionToStringBuilderExcludeTest.java,72,ist excludeList = new ArrayList();
True,src/test/org/apache/commons/lang/builder/ReflectionToStringBuilderExcludeTest.java,src/test/org/apache/commons/lang/builder/ReflectionToStringBuilderExcludeTest.java,72,List<String> excludeList = new ArrayList<String>();
False,src/test/org/apache/commons/lang/builder/ReflectionToStringBuilderExcludeTest.java,src/test/org/apache/commons/lang/builder/ReflectionToStringBuilderExcludeTest.java,79,ist excludeList = new ArrayList();
True,src/test/org/apache/commons/lang/builder/ReflectionToStringBuilderExcludeTest.java,src/test/org/apache/commons/lang/builder/ReflectionToStringBuilderExcludeTest.java,79,List<String> excludeList = new ArrayList<String>();
False,src/test/org/apache/commons/lang/builder/ReflectionToStringBuilderExcludeTest.java,src/test/org/apache/commons/lang/builder/ReflectionToStringBuilderExcludeTest.java,86,ist excludeList = new ArrayList();
True,src/test/org/apache/commons/lang/builder/ReflectionToStringBuilderExcludeTest.java,src/test/org/apache/commons/lang/builder/ReflectionToStringBuilderExcludeTest.java,86,List<String> excludeList = new ArrayList<String>();
False,src/test/org/apache/commons/lang/builder/ReflectionToStringBuilderExcludeTest.java,src/test/org/apache/commons/lang/builder/ReflectionToStringBuilderExcludeTest.java,99,"tring toString = ReflectionToStringBuilder.toStringExclude(new TestFixture(), new ArrayList());"
True,src/test/org/apache/commons/lang/builder/ReflectionToStringBuilderExcludeTest.java,src/test/org/apache/commons/lang/builder/ReflectionToStringBuilderExcludeTest.java,99,"String toString = ReflectionToStringBuilder.toStringExclude(new TestFixture(), new ArrayList<String>());"
False,src/test/org/apache/commons/lang/builder/ReflectionToStringBuilderExcludeTest.java,src/test/org/apache/commons/lang/builder/ReflectionToStringBuilderExcludeTest.java,109,"tring toString = ReflectionToStringBuilder.toStringExclude(new TestFixture(), (Collection) null);"
True,src/test/org/apache/commons/lang/builder/ReflectionToStringBuilderExcludeTest.java,src/test/org/apache/commons/lang/builder/ReflectionToStringBuilderExcludeTest.java,109,"String toString = ReflectionToStringBuilder.toStringExclude(new TestFixture(), (Collection<String>) null);"
False,src/test/org/apache/commons/lang/builder/ShortPrefixToStringStyleTest.java,src/test/org/apache/commons/lang/builder/ShortPrefixToStringStyleTest.java,73,"ssertEquals(baseStr + ""[a=<size=0>]"", new ToStringBuilder(base).append(""a"", new ArrayList(), false).toString());"
False,src/test/org/apache/commons/lang/builder/ShortPrefixToStringStyleTest.java,src/test/org/apache/commons/lang/builder/ShortPrefixToStringStyleTest.java,74,"ssertEquals(baseStr + ""[a=[]]"", new ToStringBuilder(base).append(""a"", new ArrayList(), true).toString());"
False,src/test/org/apache/commons/lang/builder/ShortPrefixToStringStyleTest.java,src/test/org/apache/commons/lang/builder/ShortPrefixToStringStyleTest.java,75,"ssertEquals(baseStr + ""[a=<size=0>]"", new ToStringBuilder(base).append(""a"", new HashMap(), false).toString());"
False,src/test/org/apache/commons/lang/builder/ShortPrefixToStringStyleTest.java,src/test/org/apache/commons/lang/builder/ShortPrefixToStringStyleTest.java,76,"ssertEquals(baseStr + ""[a={}]"", new ToStringBuilder(base).append(""a"", new HashMap(), true).toString());"
True,src/test/org/apache/commons/lang/builder/ShortPrefixToStringStyleTest.java,src/test/org/apache/commons/lang/builder/ShortPrefixToStringStyleTest.java,73,"assertEquals(baseStr + ""[a=<size=0>]"", new ToStringBuilder(base).append(""a"", new ArrayList<Object>(), false).toString());"
True,src/test/org/apache/commons/lang/builder/ShortPrefixToStringStyleTest.java,src/test/org/apache/commons/lang/builder/ShortPrefixToStringStyleTest.java,74,"assertEquals(baseStr + ""[a=[]]"", new ToStringBuilder(base).append(""a"", new ArrayList<Object>(), true).toString());"
True,src/test/org/apache/commons/lang/builder/ShortPrefixToStringStyleTest.java,src/test/org/apache/commons/lang/builder/ShortPrefixToStringStyleTest.java,75,"assertEquals(baseStr + ""[a=<size=0>]"", new ToStringBuilder(base).append(""a"", new HashMap<Object, Object>(), false).toString());"
True,src/test/org/apache/commons/lang/builder/ShortPrefixToStringStyleTest.java,src/test/org/apache/commons/lang/builder/ShortPrefixToStringStyleTest.java,76,"assertEquals(baseStr + ""[a={}]"", new ToStringBuilder(base).append(""a"", new HashMap<Object, Object>(), true).toString());"
False,src/test/org/apache/commons/lang/builder/SimpleToStringStyleTest.java,src/test/org/apache/commons/lang/builder/SimpleToStringStyleTest.java,89,"ssertEquals(""<size=0>"", new ToStringBuilder(base).append(""a"", new ArrayList(), false).toString());"
False,src/test/org/apache/commons/lang/builder/SimpleToStringStyleTest.java,src/test/org/apache/commons/lang/builder/SimpleToStringStyleTest.java,90,"ssertEquals(""[]"", new ToStringBuilder(base).append(""a"", new ArrayList(), true).toString());"
False,src/test/org/apache/commons/lang/builder/SimpleToStringStyleTest.java,src/test/org/apache/commons/lang/builder/SimpleToStringStyleTest.java,91,"ssertEquals(""<size=0>"", new ToStringBuilder(base).append(""a"", new HashMap(), false).toString());"
False,src/test/org/apache/commons/lang/builder/SimpleToStringStyleTest.java,src/test/org/apache/commons/lang/builder/SimpleToStringStyleTest.java,92,"ssertEquals(""{}"", new ToStringBuilder(base).append(""a"", new HashMap(), true).toString());"
True,src/test/org/apache/commons/lang/builder/SimpleToStringStyleTest.java,src/test/org/apache/commons/lang/builder/SimpleToStringStyleTest.java,89,"assertEquals(""<size=0>"", new ToStringBuilder(base).append(""a"", new ArrayList<Object>(), false).toString());"
True,src/test/org/apache/commons/lang/builder/SimpleToStringStyleTest.java,src/test/org/apache/commons/lang/builder/SimpleToStringStyleTest.java,90,"assertEquals(""[]"", new ToStringBuilder(base).append(""a"", new ArrayList<Object>(), true).toString());"
True,src/test/org/apache/commons/lang/builder/SimpleToStringStyleTest.java,src/test/org/apache/commons/lang/builder/SimpleToStringStyleTest.java,91,"assertEquals(""<size=0>"", new ToStringBuilder(base).append(""a"", new HashMap<Object, Object>(), false).toString());"
True,src/test/org/apache/commons/lang/builder/SimpleToStringStyleTest.java,src/test/org/apache/commons/lang/builder/SimpleToStringStyleTest.java,92,"assertEquals(""{}"", new ToStringBuilder(base).append(""a"", new HashMap<Object, Object>(), true).toString());"
False,src/test/org/apache/commons/lang/builder/StandardToStringStyleTest.java,src/test/org/apache/commons/lang/builder/StandardToStringStyleTest.java,105,"ssertEquals(baseStr + ""[a=%SIZE=0%]"", new ToStringBuilder(base).append(""a"", new ArrayList(), false).toString());"
False,src/test/org/apache/commons/lang/builder/StandardToStringStyleTest.java,src/test/org/apache/commons/lang/builder/StandardToStringStyleTest.java,106,"ssertEquals(baseStr + ""[a=[]]"", new ToStringBuilder(base).append(""a"", new ArrayList(), true).toString());"
False,src/test/org/apache/commons/lang/builder/StandardToStringStyleTest.java,src/test/org/apache/commons/lang/builder/StandardToStringStyleTest.java,107,"ssertEquals(baseStr + ""[a=%SIZE=0%]"", new ToStringBuilder(base).append(""a"", new HashMap(), false).toString());"
False,src/test/org/apache/commons/lang/builder/StandardToStringStyleTest.java,src/test/org/apache/commons/lang/builder/StandardToStringStyleTest.java,108,"ssertEquals(baseStr + ""[a={}]"", new ToStringBuilder(base).append(""a"", new HashMap(), true).toString());"
True,src/test/org/apache/commons/lang/builder/StandardToStringStyleTest.java,src/test/org/apache/commons/lang/builder/StandardToStringStyleTest.java,105,"assertEquals(baseStr + ""[a=%SIZE=0%]"", new ToStringBuilder(base).append(""a"", new ArrayList<Object>(), false).toString());"
True,src/test/org/apache/commons/lang/builder/StandardToStringStyleTest.java,src/test/org/apache/commons/lang/builder/StandardToStringStyleTest.java,106,"assertEquals(baseStr + ""[a=[]]"", new ToStringBuilder(base).append(""a"", new ArrayList<Object>(), true).toString());"
True,src/test/org/apache/commons/lang/builder/StandardToStringStyleTest.java,src/test/org/apache/commons/lang/builder/StandardToStringStyleTest.java,107,"assertEquals(baseStr + ""[a=%SIZE=0%]"", new ToStringBuilder(base).append(""a"", new HashMap<Object, Object>(), false).toString());"
True,src/test/org/apache/commons/lang/builder/StandardToStringStyleTest.java,src/test/org/apache/commons/lang/builder/StandardToStringStyleTest.java,108,"assertEquals(baseStr + ""[a={}]"", new ToStringBuilder(base).append(""a"", new HashMap<Object, Object>(), true).toString());"
False,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,327,ist base = new ArrayList();
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,327,List<Object> base = new ArrayList<Object>();
False,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,641,"ssertEquals(baseStr + ""[a=<size=0>]"", new ToStringBuilder(base).append(""a"", new ArrayList(), false).toString());"
False,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,642,"ssertEquals(baseStr + ""[a=[]]"", new ToStringBuilder(base).append(""a"", new ArrayList(), true).toString());"
False,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,643,"ssertEquals(baseStr + ""[a=<size=0>]"", new ToStringBuilder(base).append(""a"", new HashMap(), false).toString());"
False,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,644,"ssertEquals(baseStr + ""[a={}]"", new ToStringBuilder(base).append(""a"", new HashMap(), true).toString());"
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,641,"assertEquals(baseStr + ""[a=<size=0>]"", new ToStringBuilder(base).append(""a"", new ArrayList<Object>(), false).toString());"
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,642,"assertEquals(baseStr + ""[a=[]]"", new ToStringBuilder(base).append(""a"", new ArrayList<Object>(), true).toString());"
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,643,"assertEquals(baseStr + ""[a=<size=0>]"", new ToStringBuilder(base).append(""a"", new HashMap<Object, Object>(), false).toString());"
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,644,"assertEquals(baseStr + ""[a={}]"", new ToStringBuilder(base).append(""a"", new HashMap<Object, Object>(), true).toString());"
