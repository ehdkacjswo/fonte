is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/lang/enums/ValuedEnum.java,src/java/org/apache/commons/lang/enums/ValuedEnum.java,2, Copyright 2002-2005 The Apache Software Foundation.
True,src/java/org/apache/commons/lang/enums/ValuedEnum.java,src/java/org/apache/commons/lang/enums/ValuedEnum.java,2,* Copyright 2002-2006 The Apache Software Foundation.
True,src/java/org/apache/commons/lang/enums/ValuedEnum.java,src/java/org/apache/commons/lang/enums/ValuedEnum.java,18,import java.lang.reflect.InvocationTargetException;
True,src/java/org/apache/commons/lang/enums/ValuedEnum.java,src/java/org/apache/commons/lang/enums/ValuedEnum.java,19,import java.lang.reflect.Method;
True,src/java/org/apache/commons/lang/enums/ValuedEnum.java,src/java/org/apache/commons/lang/enums/ValuedEnum.java,171,* <p>NOTE: From v2.2 the enums must be of the same type.
True,src/java/org/apache/commons/lang/enums/ValuedEnum.java,src/java/org/apache/commons/lang/enums/ValuedEnum.java,172,"* If the parameter is in a different class loader than this instance,"
True,src/java/org/apache/commons/lang/enums/ValuedEnum.java,src/java/org/apache/commons/lang/enums/ValuedEnum.java,173,* reflection is used to compare the values.</p>
True,src/java/org/apache/commons/lang/enums/ValuedEnum.java,src/java/org/apache/commons/lang/enums/ValuedEnum.java,183,if (other == this) {
True,src/java/org/apache/commons/lang/enums/ValuedEnum.java,src/java/org/apache/commons/lang/enums/ValuedEnum.java,184,return 0;
True,src/java/org/apache/commons/lang/enums/ValuedEnum.java,src/java/org/apache/commons/lang/enums/ValuedEnum.java,186,if (other.getClass() != this.getClass()) {
True,src/java/org/apache/commons/lang/enums/ValuedEnum.java,src/java/org/apache/commons/lang/enums/ValuedEnum.java,187,if (other.getClass().getName().equals(this.getClass().getName())) {
True,src/java/org/apache/commons/lang/enums/ValuedEnum.java,src/java/org/apache/commons/lang/enums/ValuedEnum.java,188,return iValue - getValueInOtherClassLoader(other);
True,src/java/org/apache/commons/lang/enums/ValuedEnum.java,src/java/org/apache/commons/lang/enums/ValuedEnum.java,190,throw new ClassCastException(
True,src/java/org/apache/commons/lang/enums/ValuedEnum.java,src/java/org/apache/commons/lang/enums/ValuedEnum.java,191,"""Different enum class '"" + ClassUtils.getShortClassName(other.getClass()) + ""'"");"
True,src/java/org/apache/commons/lang/enums/ValuedEnum.java,src/java/org/apache/commons/lang/enums/ValuedEnum.java,197,* <p>Use reflection to return an objects value.</p>
True,src/java/org/apache/commons/lang/enums/ValuedEnum.java,src/java/org/apache/commons/lang/enums/ValuedEnum.java,199,* @param other  the object to determine the value for
True,src/java/org/apache/commons/lang/enums/ValuedEnum.java,src/java/org/apache/commons/lang/enums/ValuedEnum.java,200,* @return the value
True,src/java/org/apache/commons/lang/enums/ValuedEnum.java,src/java/org/apache/commons/lang/enums/ValuedEnum.java,202,private int getValueInOtherClassLoader(Object other) {
True,src/java/org/apache/commons/lang/enums/ValuedEnum.java,src/java/org/apache/commons/lang/enums/ValuedEnum.java,203,try {
True,src/java/org/apache/commons/lang/enums/ValuedEnum.java,src/java/org/apache/commons/lang/enums/ValuedEnum.java,204,"Method mth = other.getClass().getMethod(""getValue"", null);"
True,src/java/org/apache/commons/lang/enums/ValuedEnum.java,src/java/org/apache/commons/lang/enums/ValuedEnum.java,205,"Integer value = (Integer) mth.invoke(other, null);"
True,src/java/org/apache/commons/lang/enums/ValuedEnum.java,src/java/org/apache/commons/lang/enums/ValuedEnum.java,206,return value.intValue();
True,src/java/org/apache/commons/lang/enums/ValuedEnum.java,src/java/org/apache/commons/lang/enums/ValuedEnum.java,207,} catch (NoSuchMethodException e) {
True,src/java/org/apache/commons/lang/enums/ValuedEnum.java,src/java/org/apache/commons/lang/enums/ValuedEnum.java,208,// ignore - should never happen
True,src/java/org/apache/commons/lang/enums/ValuedEnum.java,src/java/org/apache/commons/lang/enums/ValuedEnum.java,209,} catch (IllegalAccessException e) {
True,src/java/org/apache/commons/lang/enums/ValuedEnum.java,src/java/org/apache/commons/lang/enums/ValuedEnum.java,210,// ignore - should never happen
True,src/java/org/apache/commons/lang/enums/ValuedEnum.java,src/java/org/apache/commons/lang/enums/ValuedEnum.java,211,} catch (InvocationTargetException e) {
True,src/java/org/apache/commons/lang/enums/ValuedEnum.java,src/java/org/apache/commons/lang/enums/ValuedEnum.java,212,// ignore - should never happen
True,src/java/org/apache/commons/lang/enums/ValuedEnum.java,src/java/org/apache/commons/lang/enums/ValuedEnum.java,214,"throw new IllegalStateException(""This should not happen"");"
False,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,2, Copyright 2004-2005 The Apache Software Foundation.
True,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,2,* Copyright 2004-2006 The Apache Software Foundation.
True,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,18,import java.net.URLClassLoader;
True,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,93,public void testEquals_classloader_equal() throws Exception {
True,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,94,ClassLoader cl = ColorEnum.class.getClassLoader();
True,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,95,if (cl instanceof URLClassLoader) {
True,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,96,URLClassLoader urlCL = (URLClassLoader) cl;
True,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,97,"URLClassLoader urlCL1 = new URLClassLoader(urlCL.getURLs(), null);"
True,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,98,"URLClassLoader urlCL2 = new URLClassLoader(urlCL.getURLs(), null);"
True,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,99,"Class otherEnumClass1 = urlCL1.loadClass(""org.apache.commons.lang.enums.ColorEnum"");"
True,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,100,"Class otherEnumClass2 = urlCL2.loadClass(""org.apache.commons.lang.enums.ColorEnum"");"
True,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,101,"Object blue1 = otherEnumClass1.getDeclaredField(""BLUE"").get(null);"
True,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,102,"Object blue2 = otherEnumClass2.getDeclaredField(""BLUE"").get(null);"
True,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,103,"assertEquals(true, blue1.equals(blue2));"
True,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,107,public void testEquals_classloader_different() throws Exception {
True,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,108,ClassLoader cl = ColorEnum.class.getClassLoader();
True,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,109,if (cl instanceof URLClassLoader) {
True,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,110,URLClassLoader urlCL = (URLClassLoader) cl;
True,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,111,"URLClassLoader urlCL1 = new URLClassLoader(urlCL.getURLs(), null);"
True,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,112,"URLClassLoader urlCL2 = new URLClassLoader(urlCL.getURLs(), null);"
True,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,113,"Class otherEnumClass1 = urlCL1.loadClass(""org.apache.commons.lang.enums.ColorEnum"");"
True,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,114,"Class otherEnumClass2 = urlCL2.loadClass(""org.apache.commons.lang.enums.ColorEnum"");"
True,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,115,"Object blue1 = otherEnumClass1.getDeclaredField(""BLUE"").get(null);"
True,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,116,"Object blue2 = otherEnumClass2.getDeclaredField(""RED"").get(null);"
True,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,src/test/org/apache/commons/lang/enums/EnumEqualsTest.java,117,"assertEquals(false, blue1.equals(blue2));"
False,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,2, Copyright 2002-2005 The Apache Software Foundation.
True,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,2,* Copyright 2002-2006 The Apache Software Foundation.
True,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,18,import java.net.URLClassLoader;
True,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,68,public void testCompareTo_classloader_equal() throws Exception {
True,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,69,ClassLoader cl = ValuedColorEnum.class.getClassLoader();
True,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,70,if (cl instanceof URLClassLoader) {
True,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,71,URLClassLoader urlCL = (URLClassLoader) cl;
True,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,72,"URLClassLoader urlCL1 = new URLClassLoader(urlCL.getURLs(), null);"
True,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,73,"URLClassLoader urlCL2 = new URLClassLoader(urlCL.getURLs(), null);"
True,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,74,"Class otherEnumClass1 = urlCL1.loadClass(""org.apache.commons.lang.enums.ValuedColorEnum"");"
True,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,75,"Class otherEnumClass2 = urlCL2.loadClass(""org.apache.commons.lang.enums.ValuedColorEnum"");"
True,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,76,"Object blue1 = otherEnumClass1.getDeclaredField(""BLUE"").get(null);"
True,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,77,"Object blue2 = otherEnumClass2.getDeclaredField(""BLUE"").get(null);"
True,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,78,assertTrue(((Comparable) blue1).compareTo(blue2) == 0);
True,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,82,public void testCompareTo_classloader_different() throws Exception {
True,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,83,ClassLoader cl = ValuedColorEnum.class.getClassLoader();
True,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,84,if (cl instanceof URLClassLoader) {
True,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,85,URLClassLoader urlCL = (URLClassLoader) cl;
True,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,86,"URLClassLoader urlCL1 = new URLClassLoader(urlCL.getURLs(), null);"
True,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,87,"URLClassLoader urlCL2 = new URLClassLoader(urlCL.getURLs(), null);"
True,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,88,"Class otherEnumClass1 = urlCL1.loadClass(""org.apache.commons.lang.enums.ValuedColorEnum"");"
True,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,89,"Class otherEnumClass2 = urlCL2.loadClass(""org.apache.commons.lang.enums.ValuedColorEnum"");"
True,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,90,"Object blue1 = otherEnumClass1.getDeclaredField(""BLUE"").get(null);"
True,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,91,"Object blue2 = otherEnumClass2.getDeclaredField(""RED"").get(null);"
True,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,92,assertTrue(((Comparable) blue1).compareTo(blue2) != 0);
True,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,96,public void testCompareTo_nonEnumType() {
True,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,97,try {
True,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,98,ValuedColorEnum.BLUE.compareTo(new TotallyUnrelatedClass(ValuedColorEnum.BLUE.getValue()));
True,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,99,fail();
True,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,100,} catch (ClassCastException ex) {
True,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,101,// expected
True,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,105,public void testCompareTo_otherEnumType() {
True,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,106,try {
True,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,107,ValuedColorEnum.BLUE.compareTo(ValuedLanguageEnum.ENGLISH);
True,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,108,fail();
True,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,109,} catch (ClassCastException ex) {
True,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,110,// expected
True,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,114,public void testCompareTo_otherType() {
True,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,115,try {
True,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,116,"ValuedColorEnum.BLUE.compareTo(""Blue"");"
True,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,117,fail();
True,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,118,} catch (ClassCastException ex) {
True,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,119,// expected
True,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,123,public void testCompareTo_null() {
True,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,124,try {
True,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,125,ValuedColorEnum.BLUE.compareTo(null);
True,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,126,fail();
True,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,127,} catch (NullPointerException ex) {
True,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,128,// expected
True,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,137,public void testEquals_classloader_equal() throws Exception {
True,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,138,ClassLoader cl = ValuedColorEnum.class.getClassLoader();
True,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,139,if (cl instanceof URLClassLoader) {
True,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,140,URLClassLoader urlCL = (URLClassLoader) cl;
True,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,141,"URLClassLoader urlCL1 = new URLClassLoader(urlCL.getURLs(), null);"
True,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,142,"URLClassLoader urlCL2 = new URLClassLoader(urlCL.getURLs(), null);"
True,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,143,"Class otherEnumClass1 = urlCL1.loadClass(""org.apache.commons.lang.enums.ValuedColorEnum"");"
True,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,144,"Class otherEnumClass2 = urlCL2.loadClass(""org.apache.commons.lang.enums.ValuedColorEnum"");"
True,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,145,"Object blue1 = otherEnumClass1.getDeclaredField(""BLUE"").get(null);"
True,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,146,"Object blue2 = otherEnumClass2.getDeclaredField(""BLUE"").get(null);"
True,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,147,"assertEquals(true, blue1.equals(blue2));"
True,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,151,public void testEquals_classloader_different() throws Exception {
True,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,152,ClassLoader cl = ValuedColorEnum.class.getClassLoader();
True,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,153,if (cl instanceof URLClassLoader) {
True,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,154,URLClassLoader urlCL = (URLClassLoader) cl;
True,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,155,"URLClassLoader urlCL1 = new URLClassLoader(urlCL.getURLs(), null);"
True,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,156,"URLClassLoader urlCL2 = new URLClassLoader(urlCL.getURLs(), null);"
True,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,157,"Class otherEnumClass1 = urlCL1.loadClass(""org.apache.commons.lang.enums.ValuedColorEnum"");"
True,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,158,"Class otherEnumClass2 = urlCL2.loadClass(""org.apache.commons.lang.enums.ValuedColorEnum"");"
True,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,159,"Object blue1 = otherEnumClass1.getDeclaredField(""BLUE"").get(null);"
True,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,160,"Object blue2 = otherEnumClass2.getDeclaredField(""RED"").get(null);"
True,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,161,"assertEquals(false, blue1.equals(blue2));"
True,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,228,//-----------------------------------------------------------------------s
True,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,229,static class TotallyUnrelatedClass {
True,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,230,private final int value;
True,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,232,public TotallyUnrelatedClass(final int value) {
True,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,233,this.value = value;
True,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,236,public int getValue() {
True,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,src/test/org/apache/commons/lang/enums/ValuedEnumTest.java,237,return value;
True,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,2,* Copyright 2006 The Apache Software Foundation.
True,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,5,* you may not use this file except in compliance with the License.
True,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,6,* You may obtain a copy of the License at
True,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,8,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,13,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,14,* limitations under the License.
True,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,16,package org.apache.commons.lang.enums;
True,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,18,import java.util.Iterator;
True,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,19,import java.util.List;
True,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,20,import java.util.Map;
True,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,23,* Language enumeration.
True,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,25,"* @author <a href=""mailto:scolebourne@joda.org"">Stephen Colebourne</a>"
True,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,26,* @version $Id: ValuedColorEnum.java 161244 2005-04-14 06:16:36Z ggregory $
True,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,28,public final class ValuedLanguageEnum extends ValuedEnum {
True,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,29,"public static final ValuedLanguageEnum ENGLISH = new ValuedLanguageEnum(""English"", 1);"
True,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,30,"public static final ValuedLanguageEnum FRENCH = new ValuedLanguageEnum(""French"", 2);"
True,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,31,"public static final ValuedLanguageEnum GERMAN = new ValuedLanguageEnum(""German"", 3);"
True,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,33,"private ValuedLanguageEnum(String color, int value) {"
True,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,34,"super(color, value);"
True,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,37,public static ValuedLanguageEnum getEnum(String color) {
True,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,38,"return (ValuedLanguageEnum) getEnum(ValuedLanguageEnum.class, color);"
True,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,41,public static ValuedLanguageEnum getEnum(int value) {
True,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,42,"return (ValuedLanguageEnum) getEnum(ValuedLanguageEnum.class, value);"
True,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,45,public static Map getEnumMap() {
True,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,46,return getEnumMap(ValuedLanguageEnum.class);
True,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,49,public static List getEnumList() {
True,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,50,return getEnumList(ValuedLanguageEnum.class);
True,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,53,public static Iterator iterator() {
True,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,src/test/org/apache/commons/lang/enums/ValuedLanguageEnum.java,54,return iterator(ValuedLanguageEnum.class);
