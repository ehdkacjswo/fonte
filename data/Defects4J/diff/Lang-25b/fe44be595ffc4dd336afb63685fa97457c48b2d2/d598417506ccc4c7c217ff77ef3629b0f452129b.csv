is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,64," @version $Id: ObjectUtils.java,v 1.1 2002/07/19 03:35:54 bayard Exp $"
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,64,"* @version $Id: ObjectUtils.java,v 1.2 2002/09/18 19:49:08 scolebourne Exp $"
False,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,69, Prevent construction of ObjectUtils instances
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,69,* ObjectUtils instances should NOT be constructed in standard programming.
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,70,"* Instead, the class should be used as <code>ObjectUtils.defaultIfNull(""a"",""b"");</code>."
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,71,* This constructor is public to permit tools that require a JavaBean instance
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,72,* to operate.
False,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,71,rivate ObjectUtils() {
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,74,public ObjectUtils() {
False,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,77, @param object  the object to test.
False,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,78, @param defaultValue  the default value to return.
False,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,79," @return object if it is not null, defaultValue otherwise."
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,82,* @param object  the object to test
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,83,* @param defaultValue  the default value to return
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,84,"* @return object if it is not null, defaultValue otherwise"
False,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,89, @param object1  the first object.
False,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,90, @param object2  the second object.
False,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,91, @return True if the values of both objects are the same.
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,94,* @param object1  the first object
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,95,* @param object2  the second object
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,96,* @return <code>true</code> if the values of both objects are the same
False,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,94,f (object1 == null) {
False,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,95,eturn (object2 == null);
False,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,96, else if (object2 == null) {
False,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,97,/ object1 is not null
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,99,if (object1 == object2) {
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,100,return true;
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,102,if ((object1 == null) || (object2 == null)) {
False,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,99, else {
False,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,100,eturn object1.equals(object2);
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,105,return object1.equals(object2);
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,109,* Gets the toString that would be produced by Object if a class did not
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,110,* override toString itself. Null will return null.
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,112,"* @param object  the object to create a toString for, may be null"
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,113,"* @return the default toString text, or null if null passed in"
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,115,public static String identityToString(Object object) {
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,116,if (object == null) {
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,117,return null;
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,119,return new StringBuffer()
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,120,.append(object.getClass().getName())
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,121,.append('@')
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,122,.append(Integer.toHexString(System.identityHashCode(object)))
True,src/java/org/apache/commons/lang/ObjectUtils.java,src/java/org/apache/commons/lang/ObjectUtils.java,123,.toString();
