is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,347, Clone an object if possible.
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,347,"* Clone an object if possible. This method is similar to {@link #clone(Object)}, but will"
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,348,* return the provided instance as return value instead of <code>null</code> if the instance
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,349,* is not cloneable. This is convenient in case the caller will use different
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,350,* implementations (e.g. of a service) and some of the instances do not allow concurrent
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,351,* processing or have state. In such a case the implementation can simply provide a proper
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,352,"* clone implementation and the caller has not to take care, it will simply call this method"
True,src/main/java/org/apache/commons/lang3/ObjectUtils.java,src/main/java/org/apache/commons/lang3/ObjectUtils.java,353,* here.
