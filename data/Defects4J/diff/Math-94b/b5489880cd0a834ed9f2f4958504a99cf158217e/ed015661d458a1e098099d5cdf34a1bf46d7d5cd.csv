is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/math/FunctionEvaluationException.java,src/java/org/apache/commons/math/FunctionEvaluationException.java,2,* Copyright 2004 The Apache Software Foundation.
True,src/java/org/apache/commons/math/FunctionEvaluationException.java,src/java/org/apache/commons/math/FunctionEvaluationException.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/java/org/apache/commons/math/FunctionEvaluationException.java,src/java/org/apache/commons/math/FunctionEvaluationException.java,5,* you may not use this file except in compliance with the License.
True,src/java/org/apache/commons/math/FunctionEvaluationException.java,src/java/org/apache/commons/math/FunctionEvaluationException.java,6,* You may obtain a copy of the License at
True,src/java/org/apache/commons/math/FunctionEvaluationException.java,src/java/org/apache/commons/math/FunctionEvaluationException.java,8,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/java/org/apache/commons/math/FunctionEvaluationException.java,src/java/org/apache/commons/math/FunctionEvaluationException.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/java/org/apache/commons/math/FunctionEvaluationException.java,src/java/org/apache/commons/math/FunctionEvaluationException.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/java/org/apache/commons/math/FunctionEvaluationException.java,src/java/org/apache/commons/math/FunctionEvaluationException.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/java/org/apache/commons/math/FunctionEvaluationException.java,src/java/org/apache/commons/math/FunctionEvaluationException.java,13,* See the License for the specific language governing permissions and
True,src/java/org/apache/commons/math/FunctionEvaluationException.java,src/java/org/apache/commons/math/FunctionEvaluationException.java,14,* limitations under the License.
True,src/java/org/apache/commons/math/FunctionEvaluationException.java,src/java/org/apache/commons/math/FunctionEvaluationException.java,16,package org.apache.commons.math;
True,src/java/org/apache/commons/math/FunctionEvaluationException.java,src/java/org/apache/commons/math/FunctionEvaluationException.java,19,* Exeption thrown when an error occurs evaluating a function.
True,src/java/org/apache/commons/math/FunctionEvaluationException.java,src/java/org/apache/commons/math/FunctionEvaluationException.java,20,* <p>
True,src/java/org/apache/commons/math/FunctionEvaluationException.java,src/java/org/apache/commons/math/FunctionEvaluationException.java,21,* Maintains an <code>argument</code> property holding the input value that
True,src/java/org/apache/commons/math/FunctionEvaluationException.java,src/java/org/apache/commons/math/FunctionEvaluationException.java,22,* caused the function evaluation to fail.
True,src/java/org/apache/commons/math/FunctionEvaluationException.java,src/java/org/apache/commons/math/FunctionEvaluationException.java,24,* @version $Revision: 1.1 $ $Date: 2004/07/17 19:41:05 $
True,src/java/org/apache/commons/math/FunctionEvaluationException.java,src/java/org/apache/commons/math/FunctionEvaluationException.java,26,public class FunctionEvaluationException extends MathException  {
True,src/java/org/apache/commons/math/FunctionEvaluationException.java,src/java/org/apache/commons/math/FunctionEvaluationException.java,28,/** Serializable version identifier */
True,src/java/org/apache/commons/math/FunctionEvaluationException.java,src/java/org/apache/commons/math/FunctionEvaluationException.java,29,static final long serialVersionUID = -317289374378977972L;
True,src/java/org/apache/commons/math/FunctionEvaluationException.java,src/java/org/apache/commons/math/FunctionEvaluationException.java,31,/** Argument causing function evaluation failure */
True,src/java/org/apache/commons/math/FunctionEvaluationException.java,src/java/org/apache/commons/math/FunctionEvaluationException.java,32,private double argument = Double.NaN;
True,src/java/org/apache/commons/math/FunctionEvaluationException.java,src/java/org/apache/commons/math/FunctionEvaluationException.java,35,* Construct an exception indicating the argument value
True,src/java/org/apache/commons/math/FunctionEvaluationException.java,src/java/org/apache/commons/math/FunctionEvaluationException.java,36,* that caused the function evaluation to fail.  Generates an exception
True,src/java/org/apache/commons/math/FunctionEvaluationException.java,src/java/org/apache/commons/math/FunctionEvaluationException.java,37,"* message of the form ""Evaluation failed for argument = "" + argument."
True,src/java/org/apache/commons/math/FunctionEvaluationException.java,src/java/org/apache/commons/math/FunctionEvaluationException.java,39,* @param argument  the failing function argument
True,src/java/org/apache/commons/math/FunctionEvaluationException.java,src/java/org/apache/commons/math/FunctionEvaluationException.java,41,public FunctionEvaluationException(double argument) {
True,src/java/org/apache/commons/math/FunctionEvaluationException.java,src/java/org/apache/commons/math/FunctionEvaluationException.java,42,"this(argument, ""Evaluation failed for argument = "" + argument);"
True,src/java/org/apache/commons/math/FunctionEvaluationException.java,src/java/org/apache/commons/math/FunctionEvaluationException.java,46,* Construct an exception using the given argument and message
True,src/java/org/apache/commons/math/FunctionEvaluationException.java,src/java/org/apache/commons/math/FunctionEvaluationException.java,47,* text.  The message text of the exception will start with
True,src/java/org/apache/commons/math/FunctionEvaluationException.java,src/java/org/apache/commons/math/FunctionEvaluationException.java,48,* <code>message</code> and be followed by
True,src/java/org/apache/commons/math/FunctionEvaluationException.java,src/java/org/apache/commons/math/FunctionEvaluationException.java,49,"* "" Evaluation failed for argument = "" + argument."
True,src/java/org/apache/commons/math/FunctionEvaluationException.java,src/java/org/apache/commons/math/FunctionEvaluationException.java,51,* @param argument  the failing function argument
True,src/java/org/apache/commons/math/FunctionEvaluationException.java,src/java/org/apache/commons/math/FunctionEvaluationException.java,52,* @param message  the exception message text
True,src/java/org/apache/commons/math/FunctionEvaluationException.java,src/java/org/apache/commons/math/FunctionEvaluationException.java,54,"public FunctionEvaluationException(double argument, String message) {"
True,src/java/org/apache/commons/math/FunctionEvaluationException.java,src/java/org/apache/commons/math/FunctionEvaluationException.java,55,"this(argument, message, null);"
True,src/java/org/apache/commons/math/FunctionEvaluationException.java,src/java/org/apache/commons/math/FunctionEvaluationException.java,59,"* Construct an exception with the given argument, message and root cause."
True,src/java/org/apache/commons/math/FunctionEvaluationException.java,src/java/org/apache/commons/math/FunctionEvaluationException.java,60,* The message text of the exception will start with  <code>message</code>
True,src/java/org/apache/commons/math/FunctionEvaluationException.java,src/java/org/apache/commons/math/FunctionEvaluationException.java,61,"* and be followed by "" Evaluation failed for argument = "" + argument."
True,src/java/org/apache/commons/math/FunctionEvaluationException.java,src/java/org/apache/commons/math/FunctionEvaluationException.java,63,* @param message descriptive error message.
True,src/java/org/apache/commons/math/FunctionEvaluationException.java,src/java/org/apache/commons/math/FunctionEvaluationException.java,64,* @param cause root cause.
True,src/java/org/apache/commons/math/FunctionEvaluationException.java,src/java/org/apache/commons/math/FunctionEvaluationException.java,66,"public FunctionEvaluationException(double argument, String message,"
True,src/java/org/apache/commons/math/FunctionEvaluationException.java,src/java/org/apache/commons/math/FunctionEvaluationException.java,67,Throwable cause) {
True,src/java/org/apache/commons/math/FunctionEvaluationException.java,src/java/org/apache/commons/math/FunctionEvaluationException.java,68,"super(message + "" Evaluation failed for argument="" + argument, cause);"
True,src/java/org/apache/commons/math/FunctionEvaluationException.java,src/java/org/apache/commons/math/FunctionEvaluationException.java,69,this.argument = argument;
True,src/java/org/apache/commons/math/FunctionEvaluationException.java,src/java/org/apache/commons/math/FunctionEvaluationException.java,73,* Returns the function argument that caused this exception.
True,src/java/org/apache/commons/math/FunctionEvaluationException.java,src/java/org/apache/commons/math/FunctionEvaluationException.java,75,* @return  argument that caused function evaluation to fail
True,src/java/org/apache/commons/math/FunctionEvaluationException.java,src/java/org/apache/commons/math/FunctionEvaluationException.java,77,public double getArgument() {
True,src/java/org/apache/commons/math/FunctionEvaluationException.java,src/java/org/apache/commons/math/FunctionEvaluationException.java,78,return this.argument;
True,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,2,* Copyright 2004 The Apache Software Foundation.
True,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,5,* you may not use this file except in compliance with the License.
True,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,6,* You may obtain a copy of the License at
True,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,8,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,13,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,14,* limitations under the License.
True,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,17,package org.apache.commons.math;
True,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,19,import junit.framework.TestCase;
True,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,22,* @version $Revision: 1.1 $ $Date: 2004/07/17 19:41:05 $
True,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,24,public class FunctionEvaluationExceptionTest extends TestCase {
True,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,26,public void testConstructor(){
True,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,27,FunctionEvaluationException ex = new FunctionEvaluationException(0.0);
True,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,28,assertNull(ex.getCause());
True,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,29,assertNotNull(ex.getMessage());
True,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,30,"assertEquals(0.0, ex.getArgument(), 0);"
True,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,33,public void testConstructorMessage(){
True,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,34,"String msg = ""message"";"
True,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,35,"FunctionEvaluationException  ex = new FunctionEvaluationException(0.0, msg);"
True,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,36,assertNull(ex.getCause());
True,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,37,assertTrue(ex.getMessage().startsWith(msg));
True,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,38,"assertTrue(ex.getMessage().indexOf(""0"") > 0);"
True,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,39,"assertEquals(0.0, ex.getArgument(), 0);"
True,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,42,public void testConstructorMessageCause(){
True,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,43,"String outMsg = ""outer message"";"
True,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,44,"String inMsg = ""inner message"";"
True,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,45,Exception cause = new Exception(inMsg);
True,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,46,"FunctionEvaluationException ex = new FunctionEvaluationException(0, outMsg, cause);"
True,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,47,assertTrue(ex.getMessage().startsWith(outMsg));
True,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,48,"assertTrue(ex.getMessage().indexOf(""0"") > 0);"
True,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,49,"assertEquals(cause, ex.getCause());"
True,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java,50,"assertEquals(0.0, ex.getArgument(), 0);"
