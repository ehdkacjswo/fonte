is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,107,locks = new double[blockRows * blockColumns][];
False,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,108,nt blockIndex = 0;
False,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,109,or (int iBlock = 0; iBlock < blockRows; ++iBlock) {
False,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,110,inal int iHeight = blockHeight(iBlock);
False,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,111,or (int jBlock = 0; jBlock < blockColumns; ++jBlock) {
False,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,112,locks[blockIndex++] = new double[iHeight * blockWidth(jBlock)];
True,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,107,"blocks = createBlocksLayout(rows, columns);"
True,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,140,"* @see #createBlocksLayout(int, int)"
True,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,202,"* @see #createBlocksLayout(int, int)"
True,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,251,* Create a data array in blocks layout.
True,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,252,* <p>
True,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,253,* This method can be used to create the array argument of the {@link
True,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,254,"* DenseRealMatrix#DenseRealMatrix(int, int, double[][], boolean)} constructor."
True,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,255,* </p>
True,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,256,* @param rows  the number of rows in the new matrix
True,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,257,* @param columns  the number of columns in the new matrix
True,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,258,* @return a new data array in blocks layout
True,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,259,* @see #toBlocksLayout(double[][])
True,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,260,"* @see #DenseRealMatrix(int, int, double[][], boolean)"
True,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,262,"public static double[][] createBlocksLayout(final int rows, final int columns)"
True,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,263,throws IllegalArgumentException {
True,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,265,final int blockRows    = (rows    + BLOCK_SIZE - 1) / BLOCK_SIZE;
True,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,266,final int blockColumns = (columns + BLOCK_SIZE - 1) / BLOCK_SIZE;
True,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,268,final double[][] blocks = new double[blockRows * blockColumns][];
True,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,269,"for (int iBlock = 0, blockIndex = 0; iBlock < blockRows; ++iBlock) {"
True,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,270,final int pStart  = iBlock * BLOCK_SIZE;
True,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,271,"final int pEnd    = Math.min(pStart + BLOCK_SIZE, rows);"
True,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,272,final int iHeight = pEnd - pStart;
True,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,273,"for (int jBlock = 0; jBlock < blockColumns; ++jBlock, ++blockIndex) {"
True,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,274,final int qStart = jBlock * BLOCK_SIZE;
True,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,275,"final int qEnd   = Math.min(qStart + BLOCK_SIZE, columns);"
True,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,276,final int jWidth = qEnd - qStart;
True,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,277,blocks[blockIndex] = new double[iHeight * jWidth];
True,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,src/java/org/apache/commons/math/linear/DenseRealMatrix.java,281,return blocks;
