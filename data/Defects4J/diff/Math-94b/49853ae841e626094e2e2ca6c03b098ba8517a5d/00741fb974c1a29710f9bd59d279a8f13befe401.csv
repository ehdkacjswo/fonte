is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/math/stat/AbstractDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/AbstractDescriptiveStatistics.java,4, Copyright (c) 2003 The Apache Software Foundation.  All rights
True,src/java/org/apache/commons/math/stat/AbstractDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/AbstractDescriptiveStatistics.java,4,* Copyright (c) 2003-2004 The Apache Software Foundation.  All rights
False,src/java/org/apache/commons/math/stat/AbstractDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/AbstractDescriptiveStatistics.java,61, Provides univariate measures for an array of doubles.
False,src/java/org/apache/commons/math/stat/AbstractDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/AbstractDescriptiveStatistics.java,62, @version $Revision: 1.1 $ $Date: 2003/11/15 16:01:37 $
True,src/java/org/apache/commons/math/stat/AbstractDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/AbstractDescriptiveStatistics.java,61,* Extends {@link AbstractStorelessDescriptiveStatistics} to include univariate statistics
True,src/java/org/apache/commons/math/stat/AbstractDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/AbstractDescriptiveStatistics.java,62,* that may require access to the full set of sample values.
True,src/java/org/apache/commons/math/stat/AbstractDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/AbstractDescriptiveStatistics.java,63,* @version $Revision: 1.2 $ $Date: 2004/01/18 03:45:02 $
False,src/java/org/apache/commons/math/stat/AbstractStorelessDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/AbstractStorelessDescriptiveStatistics.java,4, Copyright (c) 2003 The Apache Software Foundation.  All rights
True,src/java/org/apache/commons/math/stat/AbstractStorelessDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/AbstractStorelessDescriptiveStatistics.java,4,* Copyright (c) 2003-2004 The Apache Software Foundation.  All rights
False,src/java/org/apache/commons/math/stat/AbstractStorelessDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/AbstractStorelessDescriptiveStatistics.java,70, Provides univariate measures for an array of doubles.
False,src/java/org/apache/commons/math/stat/AbstractStorelessDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/AbstractStorelessDescriptiveStatistics.java,71, @version $Revision: 1.1 $ $Date: 2003/11/15 16:01:37 $
True,src/java/org/apache/commons/math/stat/AbstractStorelessDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/AbstractStorelessDescriptiveStatistics.java,70,"* Provides a default {@link DescriptiveStatistics} implementation, including only statistics"
True,src/java/org/apache/commons/math/stat/AbstractStorelessDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/AbstractStorelessDescriptiveStatistics.java,71,* that can be computed in one pass through the data without storing the full set of sample
True,src/java/org/apache/commons/math/stat/AbstractStorelessDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/AbstractStorelessDescriptiveStatistics.java,72,* data values.
True,src/java/org/apache/commons/math/stat/AbstractStorelessDescriptiveStatistics.java,src/java/org/apache/commons/math/stat/AbstractStorelessDescriptiveStatistics.java,73,* @version $Revision: 1.2 $ $Date: 2004/01/18 03:45:02 $
False,src/java/org/apache/commons/math/stat/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/DescriptiveStatistics.java,4, Copyright (c) 2003 The Apache Software Foundation.  All rights
True,src/java/org/apache/commons/math/stat/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/DescriptiveStatistics.java,4,* Copyright (c) 2003-2004 The Apache Software Foundation.  All rights
False,src/java/org/apache/commons/math/stat/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/DescriptiveStatistics.java,61, DescriptiveStatistics implements the Univariate interface
False,src/java/org/apache/commons/math/stat/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/DescriptiveStatistics.java,62, but maintains the set of values which contribute to
False,src/java/org/apache/commons/math/stat/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/DescriptiveStatistics.java,63, the values being returned.  This implementation of
False,src/java/org/apache/commons/math/stat/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/DescriptiveStatistics.java,64, Univariate provides additional percentile functionality
False,src/java/org/apache/commons/math/stat/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/DescriptiveStatistics.java,65, such as.  This additional functionality comes with
False,src/java/org/apache/commons/math/stat/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/DescriptiveStatistics.java,66, a price of increased storage costs.
False,src/java/org/apache/commons/math/stat/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/DescriptiveStatistics.java,67, @version $Revision: 1.2 $ $Date: 2003/11/19 03:28:23 $
True,src/java/org/apache/commons/math/stat/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/DescriptiveStatistics.java,61,* Abstract factory class for univariate statistical summaries.
True,src/java/org/apache/commons/math/stat/DescriptiveStatistics.java,src/java/org/apache/commons/math/stat/DescriptiveStatistics.java,63,* @version $Revision: 1.3 $ $Date: 2004/01/18 03:45:02 $
False,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,4, Copyright (c) 2003 The Apache Software Foundation.  All rights
True,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,4,* Copyright (c) 2003-2004 The Apache Software Foundation.  All rights
False,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,62, @version $Revision: 1.11 $ $Date: 2003/11/14 22:22:21 $
True,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,62,* @version $Revision: 1.12 $ $Date: 2004/01/18 03:45:02 $
False,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,69, This implements the AbstractUnivariateStatistic impl to funnel
False,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,70, calculation off to the instantanious increment method. In most cases of
False,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,71, StorelessUnivariateStatistic this is never really used because more
False,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,72, efficient algorithms are available for that statistic.
True,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,69,* This default implementation just calls {@link #increment} in a loop and then {@link #getResult} to
True,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/AbstractStorelessUnivariateStatistic.java,70,* compute the return value.  Most implementations will override this method with a more efficient implementation.
False,src/java/org/apache/commons/math/stat/univariate/AbstractUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/AbstractUnivariateStatistic.java,4, Copyright (c) 2003 The Apache Software Foundation.  All rights
True,src/java/org/apache/commons/math/stat/univariate/AbstractUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/AbstractUnivariateStatistic.java,4,* Copyright (c) 2003-2004 The Apache Software Foundation.  All rights
False,src/java/org/apache/commons/math/stat/univariate/AbstractUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/AbstractUnivariateStatistic.java,60, @version $Revision: 1.10 $ $Date: 2003/11/14 22:22:21 $
True,src/java/org/apache/commons/math/stat/univariate/AbstractUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/AbstractUnivariateStatistic.java,60,* @version $Revision: 1.11 $ $Date: 2004/01/18 03:45:02 $
False,src/java/org/apache/commons/math/stat/univariate/AbstractUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/AbstractUnivariateStatistic.java,66, This implementation provides a simple wrapper around the double[]
False,src/java/org/apache/commons/math/stat/univariate/AbstractUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/AbstractUnivariateStatistic.java,67, and passes the request onto the evaluate(DoubleArray da) method.
False,src/java/org/apache/commons/math/stat/univariate/AbstractUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/AbstractUnivariateStatistic.java,75, Subclasses of AbstractUnivariateStatistc need to implement this method.
False,src/java/org/apache/commons/math/stat/univariate/AbstractUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/AbstractUnivariateStatistic.java,84, this protected test method used by all methods to verify the content
False,src/java/org/apache/commons/math/stat/univariate/AbstractUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/AbstractUnivariateStatistic.java,85, of the array and indicies are correct.
True,src/java/org/apache/commons/math/stat/univariate/AbstractUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/AbstractUnivariateStatistic.java,81,* This method is used by all evaluation methods to verify that the content
True,src/java/org/apache/commons/math/stat/univariate/AbstractUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/AbstractUnivariateStatistic.java,82,* of the array and indices are correct.
True,src/java/org/apache/commons/math/stat/univariate/AbstractUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/AbstractUnivariateStatistic.java,83,* <p>
True,src/java/org/apache/commons/math/stat/univariate/AbstractUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/AbstractUnivariateStatistic.java,84,*  It is used by an individual statistic to determine if calculation
True,src/java/org/apache/commons/math/stat/univariate/AbstractUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/AbstractUnivariateStatistic.java,85,"*  should continue, or return <code>Double.NaN</code> </p>"
False,src/java/org/apache/commons/math/stat/univariate/AbstractUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/AbstractUnivariateStatistic.java,89," @return this is used to determine if the array is of 0 length or not,"
False,src/java/org/apache/commons/math/stat/univariate/AbstractUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/AbstractUnivariateStatistic.java,90, it is used by an individual statistic to determine if continuation
False,src/java/org/apache/commons/math/stat/univariate/AbstractUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/AbstractUnivariateStatistic.java,91, of a statistical calculation should continue or return NaN.
True,src/java/org/apache/commons/math/stat/univariate/AbstractUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/AbstractUnivariateStatistic.java,89,* @return true if the array has postive length
True,src/java/org/apache/commons/math/stat/univariate/AbstractUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/AbstractUnivariateStatistic.java,90,* @throws IllegalArgumentException if the indices are invalid or the array is null
False,src/java/org/apache/commons/math/stat/univariate/StorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/StorelessUnivariateStatistic.java,4, Copyright (c) 2003 The Apache Software Foundation.  All rights
True,src/java/org/apache/commons/math/stat/univariate/StorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/StorelessUnivariateStatistic.java,4,* Copyright (c) 2003-2004 The Apache Software Foundation.  All rights
False,src/java/org/apache/commons/math/stat/univariate/StorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/StorelessUnivariateStatistic.java,57, Extends the capabilities of UnivariateStatistic with a statefull incremental
False,src/java/org/apache/commons/math/stat/univariate/StorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/StorelessUnivariateStatistic.java,58, strategy through three methods for calculating a statistic without having to
False,src/java/org/apache/commons/math/stat/univariate/StorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/StorelessUnivariateStatistic.java,59, maintain a double[] of the values. Because a StorelessUnivariateStatistic
False,src/java/org/apache/commons/math/stat/univariate/StorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/StorelessUnivariateStatistic.java,60, does not require that a double[] storage structure be maintained with the
False,src/java/org/apache/commons/math/stat/univariate/StorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/StorelessUnivariateStatistic.java,61," values in it, there are only a subset of known statistics can actually be"
False,src/java/org/apache/commons/math/stat/univariate/StorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/StorelessUnivariateStatistic.java,62, implemented using it. If a Statistic cannot be implemented in a Storeless
False,src/java/org/apache/commons/math/stat/univariate/StorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/StorelessUnivariateStatistic.java,63, approach it should implement the UnivariateStatistic interface directly
False,src/java/org/apache/commons/math/stat/univariate/StorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/StorelessUnivariateStatistic.java,64, instead.
False,src/java/org/apache/commons/math/stat/univariate/StorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/StorelessUnivariateStatistic.java,65, @version $Revision: 1.12 $ $Date: 2003/11/19 03:28:25 $
True,src/java/org/apache/commons/math/stat/univariate/StorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/StorelessUnivariateStatistic.java,57,* Extends the definition of {@link UnivariateStatistic} with an {@link #increment}
True,src/java/org/apache/commons/math/stat/univariate/StorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/StorelessUnivariateStatistic.java,58,* method for adding values and updating internal state incrementally.  This interface
True,src/java/org/apache/commons/math/stat/univariate/StorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/StorelessUnivariateStatistic.java,59,* is designed to be used for calculating statistics that can be computed in one pass through
True,src/java/org/apache/commons/math/stat/univariate/StorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/StorelessUnivariateStatistic.java,60,* the data without storing the full array of sample values.
True,src/java/org/apache/commons/math/stat/univariate/StorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/StorelessUnivariateStatistic.java,62,* @version $Revision: 1.13 $ $Date: 2004/01/18 03:45:02 $
False,src/java/org/apache/commons/math/stat/univariate/StorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/StorelessUnivariateStatistic.java,70, Increments the internal state of the Storagless
False,src/java/org/apache/commons/math/stat/univariate/StorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/StorelessUnivariateStatistic.java,71, Implementation.
False,src/java/org/apache/commons/math/stat/univariate/StorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/StorelessUnivariateStatistic.java,72, @param d is the value to increment the state by.
True,src/java/org/apache/commons/math/stat/univariate/StorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/StorelessUnivariateStatistic.java,67,* Updates the internal state of the statistic to reflect the addition of the new value.
True,src/java/org/apache/commons/math/stat/univariate/StorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/StorelessUnivariateStatistic.java,68,* @param d  the new value.
False,src/java/org/apache/commons/math/stat/univariate/StorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/StorelessUnivariateStatistic.java,77, Returns the current state of the statistic after the
False,src/java/org/apache/commons/math/stat/univariate/StorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/StorelessUnivariateStatistic.java,78, last increment.
False,src/java/org/apache/commons/math/stat/univariate/StorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/StorelessUnivariateStatistic.java,79," @return value of the statistic, Double.NaN if it"
True,src/java/org/apache/commons/math/stat/univariate/StorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/StorelessUnivariateStatistic.java,73,* Returns the current value of the Statistic.
True,src/java/org/apache/commons/math/stat/univariate/StorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/StorelessUnivariateStatistic.java,74,"* @return value of the statistic, <code>Double.NaN</code> if it"
False,src/java/org/apache/commons/math/stat/univariate/StorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/StorelessUnivariateStatistic.java,85, Returns the current state of the statistic after the
False,src/java/org/apache/commons/math/stat/univariate/StorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/StorelessUnivariateStatistic.java,86, last increment.
False,src/java/org/apache/commons/math/stat/univariate/StorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/StorelessUnivariateStatistic.java,87," @return value of the statistic, Double.NaN if it"
False,src/java/org/apache/commons/math/stat/univariate/StorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/StorelessUnivariateStatistic.java,88, has been cleared or just instantiated.
True,src/java/org/apache/commons/math/stat/univariate/StorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/StorelessUnivariateStatistic.java,80,* Returns the number of values that have been added.
True,src/java/org/apache/commons/math/stat/univariate/StorelessUnivariateStatistic.java,src/java/org/apache/commons/math/stat/univariate/StorelessUnivariateStatistic.java,81,* @return the number of values.
