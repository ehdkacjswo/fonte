is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,209,"tableau des indices de colonnes s\u00e9lectionn\u00e9es vide"" }"
True,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,209,"""tableau des indices de colonnes s\u00e9lectionn\u00e9es vide"" },"
True,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,211,// org.apache.commons.math.random.EmpiricalDistributionImpl
True,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,212,// org.apache.commons.math.random.ValueServer
True,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,213,"{ ""URL {0} contains no data"","
True,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,214,"""l''adresse {0} ne contient aucune donn\u00e9e"" },"
True,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,216,// org.apache.commons.math.complex.ComplexFormat
True,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,217,"{ ""unparseable complex number: \""{0}\"""","
True,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,218,"""\u00e9chec d''analyse du nombre complexe \""{0}\"""" },"
True,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,220,// org.apache.commons.math.fraction.FractionFormat
True,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,221,"{ ""unparseable fraction number: \""{0}\"""","
True,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,222,"""\u00e9chec d''analyse du nombre rationnel \""{0}\"""" },"
True,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,224,// org.apache.commons.math.geometry.Vector3DFormat
True,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,225,"{ ""unparseable 3D vector: \""{0}\"""","
True,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,226,"""\u00e9chec d''analyse du vecteur de dimension 3 \""{0}\"""" },"
True,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,228,// org.apache.commons.math.linear.RealVectorFormat
True,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,229,"{ ""unparseable real vector: \""{0}\"""","
True,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,230,"""\u00e9chec d''analyse du vecteur r\u00e9el \""{0}\"""" },"
True,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,232,// org.apache.commons.math.util.ResizableDoubleArray
True,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,233,"{ ""the index specified: {0} is larger than the current maximal index {1}"","
True,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,234,"""l''index sp\u00e9cifi\u00e9 ({0}) d\u00e9passe l''index maximal courant ({1})"" },"
True,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,235,"{ ""elements cannot be retrieved from a negative array index {0}"","
True,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,236,"""impossible d''extraire un \u00e9l\u00e9ment \u00e0 un index n\u00e9gatif ({0})"" },"
True,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,237,"{ ""cannot set an element at a negative index {0}"","
True,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,238,"""impossible de mettre un \u00e9l\u00e9ment \u00e0 un index n\u00e9gatif ({0})"" },"
True,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,240,// org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm
True,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,241,"{ ""identical abscissas x[{0}] == x[{1}] == {2} cause division by zero"","
True,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,242,"""division par z\u00e9ro caus\u00e9e par les abscisses identiques x[{0}] == x[{1}] == {2}"" },"
True,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,244,// org.apache.commons.math.fraction.Fraction
True,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,245,"{ ""zero denominator in fraction {0}/{1}"","
True,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,246,"""d\u00e9nominateur null dans le nombre rationnel {0}/{1}"" },"
True,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,247,"{ ""overflow in fraction {0}/{1}, cannot negate"","
True,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,248,"""d\u00e9passement de capacit\u00e9 pour la fraction {0}/{1}, son signe ne peut \u00eatre chang\u00e9"" },"
True,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,249,"{ ""overflow, numerator too large after multiply: {0}"","
True,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,250,"""d\u00e9passement de capacit\u00e9 pour le num\u00e9rateur apr\u00e8s multiplication : {0}"" },"
True,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,251,"{ ""the fraction to divide by must not be zero: {0}/{1}"","
True,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,252,"""division par un nombre rationnel nul : {0}/{1}"" },"
True,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,254,// org.apache.commons.math.geometry.Rotation
True,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,255,"{ ""zero norm for rotation axis"","
True,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,256,"""norme nulle pour un axe de rotation"" },"
True,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,258,// org.apache.commons.math.geometry.Vector3D
True,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,259,// org.apache.commons.math.linear.RealVectorImpl
True,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,260,"{ ""cannot normalize a zero norm vector"","
True,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,261,"""impossible de normer un vecteur de norme nulle"" },"
True,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,262,"{ ""zero norm"","
True,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,263,"""norme nulle"" }"
True,src/java/org/apache/commons/math/analysis/PolynomialFunctionLagrangeForm.java,src/java/org/apache/commons/math/analysis/PolynomialFunctionLagrangeForm.java,23,import org.apache.commons.math.MathRuntimeException;
False,src/java/org/apache/commons/math/analysis/PolynomialFunctionLagrangeForm.java,src/java/org/apache/commons/math/analysis/PolynomialFunctionLagrangeForm.java,256,hrow new ArithmeticException
False,src/java/org/apache/commons/math/analysis/PolynomialFunctionLagrangeForm.java,src/java/org/apache/commons/math/analysis/PolynomialFunctionLagrangeForm.java,257,"""Identical abscissas cause division by zero."");"
True,src/java/org/apache/commons/math/analysis/PolynomialFunctionLagrangeForm.java,src/java/org/apache/commons/math/analysis/PolynomialFunctionLagrangeForm.java,257,for (int k = 0; k < n; ++k) {
True,src/java/org/apache/commons/math/analysis/PolynomialFunctionLagrangeForm.java,src/java/org/apache/commons/math/analysis/PolynomialFunctionLagrangeForm.java,258,if ((i != k) && (x[i] == x[k])) {
True,src/java/org/apache/commons/math/analysis/PolynomialFunctionLagrangeForm.java,src/java/org/apache/commons/math/analysis/PolynomialFunctionLagrangeForm.java,259,"throw MathRuntimeException.createArithmeticException(""identical abscissas x[{0}] == x[{1}] == {2} cause division by zero"","
True,src/java/org/apache/commons/math/analysis/PolynomialFunctionLagrangeForm.java,src/java/org/apache/commons/math/analysis/PolynomialFunctionLagrangeForm.java,260,new Object[] {
True,src/java/org/apache/commons/math/analysis/PolynomialFunctionLagrangeForm.java,src/java/org/apache/commons/math/analysis/PolynomialFunctionLagrangeForm.java,261,"i, k, x[i]"
True,src/java/org/apache/commons/math/complex/ComplexFormat.java,src/java/org/apache/commons/math/complex/ComplexFormat.java,26,import org.apache.commons.math.MathRuntimeException;
False,src/java/org/apache/commons/math/complex/ComplexFormat.java,src/java/org/apache/commons/math/complex/ComplexFormat.java,253,"hrow new ParseException(""Unparseable complex number: \"""" + source +"
False,src/java/org/apache/commons/math/complex/ComplexFormat.java,src/java/org/apache/commons/math/complex/ComplexFormat.java,254,"\"""", parsePosition.getErrorIndex());"
True,src/java/org/apache/commons/math/complex/ComplexFormat.java,src/java/org/apache/commons/math/complex/ComplexFormat.java,254,"throw MathRuntimeException.createParseException(""unparseable complex number: \""{0}\"""","
True,src/java/org/apache/commons/math/complex/ComplexFormat.java,src/java/org/apache/commons/math/complex/ComplexFormat.java,255,"new Object[] { source },"
True,src/java/org/apache/commons/math/complex/ComplexFormat.java,src/java/org/apache/commons/math/complex/ComplexFormat.java,256,parsePosition.getErrorIndex());
False,src/java/org/apache/commons/math/estimation/AbstractEstimator.java,src/java/org/apache/commons/math/estimation/AbstractEstimator.java,185,ew Object[0]);
True,src/java/org/apache/commons/math/estimation/AbstractEstimator.java,src/java/org/apache/commons/math/estimation/AbstractEstimator.java,185,null);
False,src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java,src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java,164,"hrow new EstimationException(""unable to solve: singular problem"", new Object[0]);"
True,src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java,src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java,164,"throw new EstimationException(""unable to solve: singular problem"", null);"
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,21,import org.apache.commons.math.MathRuntimeException;
False,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,203,"hrow new ArithmeticException(""The denominator must not be zero"");"
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,205,"throw MathRuntimeException.createArithmeticException(""zero denominator in fraction {0}/{1}"","
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,206,"new Object[] { num, den});"
False,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,206,f (num == Integer.MIN_VALUE ||
False,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,207,en == Integer.MIN_VALUE) {
False,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,208,"hrow new ArithmeticException(""overflow: can't negate"");"
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,209,if (num == Integer.MIN_VALUE || den == Integer.MIN_VALUE) {
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,210,"throw MathRuntimeException.createArithmeticException(""overflow in fraction {0}/{1}, cannot negate"","
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,211,"new Object[] { num, den});"
False,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,364,"hrow new ArithmeticException(""overflow: too large to negate"");"
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,367,"throw MathRuntimeException.createArithmeticException(""overflow in fraction {0}/{1}, cannot negate"","
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,368,"new Object[] { numerator, denominator});"
False,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,454,hrow new ArithmeticException
False,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,455,"""overflow: numerator too large after multiply"");"
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,458,"throw MathRuntimeException.createArithmeticException(""overflow, numerator too large after multiply: {0}"","
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,459,new Object[] { w });
False,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,503,"hrow new ArithmeticException(""The fraction to divide by must not be zero"");"
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,507,"throw MathRuntimeException.createArithmeticException(""the fraction to divide by must not be zero: {0}/{1}"","
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,508,"new Object[] { fraction.numerator, fraction.denominator });"
False,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,521,"hrow new ArithmeticException(""The denominator must not be zero"");"
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,526,"throw MathRuntimeException.createArithmeticException(""zero denominator in fraction {0}/{1}"","
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,527,"new Object[] { numerator, denominator});"
False,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,533,"hrow new ArithmeticException(""overflow: can't negate"");"
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,539,"throw MathRuntimeException.createArithmeticException(""overflow in fraction {0}/{1}, cannot negate"","
True,src/java/org/apache/commons/math/fraction/Fraction.java,src/java/org/apache/commons/math/fraction/Fraction.java,540,"new Object[] { numerator, denominator});"
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,29,import org.apache.commons.math.MathRuntimeException;
False,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,247,"hrow new ParseException(""Unparseable fraction number: \"""" +"
False,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,248,"ource + ""\"""", parsePosition.getErrorIndex());"
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,248,"throw MathRuntimeException.createParseException(""unparseable fraction number: \""{0}\"""","
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,249,"new Object[] { source },"
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,250,parsePosition.getErrorIndex());
True,src/java/org/apache/commons/math/geometry/Rotation.java,src/java/org/apache/commons/math/geometry/Rotation.java,22,import org.apache.commons.math.MathRuntimeException;
False,src/java/org/apache/commons/math/geometry/Rotation.java,src/java/org/apache/commons/math/geometry/Rotation.java,157,"hrow new ArithmeticException(""zero norm for rotation axis"");"
True,src/java/org/apache/commons/math/geometry/Rotation.java,src/java/org/apache/commons/math/geometry/Rotation.java,159,"throw MathRuntimeException.createArithmeticException(""zero norm for rotation axis"","
True,src/java/org/apache/commons/math/geometry/Rotation.java,src/java/org/apache/commons/math/geometry/Rotation.java,160,null);
True,src/java/org/apache/commons/math/geometry/Vector3D.java,src/java/org/apache/commons/math/geometry/Vector3D.java,22,import org.apache.commons.math.MathRuntimeException;
False,src/java/org/apache/commons/math/geometry/Vector3D.java,src/java/org/apache/commons/math/geometry/Vector3D.java,269,"hrow new ArithmeticException(""cannot normalize a zero norm vector"");"
True,src/java/org/apache/commons/math/geometry/Vector3D.java,src/java/org/apache/commons/math/geometry/Vector3D.java,270,"throw MathRuntimeException.createArithmeticException(""cannot normalize a zero norm vector"","
True,src/java/org/apache/commons/math/geometry/Vector3D.java,src/java/org/apache/commons/math/geometry/Vector3D.java,271,null);
False,src/java/org/apache/commons/math/geometry/Vector3D.java,src/java/org/apache/commons/math/geometry/Vector3D.java,293,"hrow new ArithmeticException(""null norm"");"
True,src/java/org/apache/commons/math/geometry/Vector3D.java,src/java/org/apache/commons/math/geometry/Vector3D.java,295,"throw MathRuntimeException.createArithmeticException(""zero norm"", null);"
False,src/java/org/apache/commons/math/geometry/Vector3D.java,src/java/org/apache/commons/math/geometry/Vector3D.java,323,"hrow new ArithmeticException(""null norm"");"
True,src/java/org/apache/commons/math/geometry/Vector3D.java,src/java/org/apache/commons/math/geometry/Vector3D.java,325,"throw MathRuntimeException.createArithmeticException(""zero norm"", null);"
True,src/java/org/apache/commons/math/geometry/Vector3DFormat.java,src/java/org/apache/commons/math/geometry/Vector3DFormat.java,26,import org.apache.commons.math.MathRuntimeException;
False,src/java/org/apache/commons/math/geometry/Vector3DFormat.java,src/java/org/apache/commons/math/geometry/Vector3DFormat.java,257,"hrow new ParseException(""Unparseable 3D vector: \"""" + source +"
False,src/java/org/apache/commons/math/geometry/Vector3DFormat.java,src/java/org/apache/commons/math/geometry/Vector3DFormat.java,258,"\"""", parsePosition.getErrorIndex());"
True,src/java/org/apache/commons/math/geometry/Vector3DFormat.java,src/java/org/apache/commons/math/geometry/Vector3DFormat.java,258,"throw MathRuntimeException.createParseException(""unparseable 3D vector: \""{0}\"""","
True,src/java/org/apache/commons/math/geometry/Vector3DFormat.java,src/java/org/apache/commons/math/geometry/Vector3DFormat.java,259,"new Object[] { source },"
True,src/java/org/apache/commons/math/geometry/Vector3DFormat.java,src/java/org/apache/commons/math/geometry/Vector3DFormat.java,260,parsePosition.getErrorIndex());
False,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,625,"hrow new MatrixIndexException(""empty selected row index array"", new Object[0]);"
True,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,625,"throw new MatrixIndexException(""empty selected row index array"", null);"
False,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,627,"hrow new MatrixIndexException(""empty selected column index array"", new Object[0]);"
True,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/java/org/apache/commons/math/linear/BigMatrixImpl.java,627,"throw new MatrixIndexException(""empty selected column index array"", null);"
False,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,416,"hrow new MatrixIndexException(""empty selected row index array"", new Object[0]);"
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,416,"throw new MatrixIndexException(""empty selected row index array"", null);"
False,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,418,"hrow new MatrixIndexException(""empty selected column index array"", new Object[0]);"
True,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,src/java/org/apache/commons/math/linear/RealMatrixImpl.java,418,"throw new MatrixIndexException(""empty selected column index array"", null);"
True,src/java/org/apache/commons/math/linear/RealVectorFormat.java,src/java/org/apache/commons/math/linear/RealVectorFormat.java,28,import org.apache.commons.math.MathRuntimeException;
False,src/java/org/apache/commons/math/linear/RealVectorFormat.java,src/java/org/apache/commons/math/linear/RealVectorFormat.java,261,"hrow new ParseException(""Unparseable real vector: \"""" + source +"
False,src/java/org/apache/commons/math/linear/RealVectorFormat.java,src/java/org/apache/commons/math/linear/RealVectorFormat.java,262,"\"""", parsePosition.getErrorIndex());"
True,src/java/org/apache/commons/math/linear/RealVectorFormat.java,src/java/org/apache/commons/math/linear/RealVectorFormat.java,262,"throw MathRuntimeException.createParseException(""unparseable real vector: \""{0}\"""","
True,src/java/org/apache/commons/math/linear/RealVectorFormat.java,src/java/org/apache/commons/math/linear/RealVectorFormat.java,263,"new Object[] { source },"
True,src/java/org/apache/commons/math/linear/RealVectorFormat.java,src/java/org/apache/commons/math/linear/RealVectorFormat.java,264,parsePosition.getErrorIndex());
True,src/java/org/apache/commons/math/linear/RealVectorImpl.java,src/java/org/apache/commons/math/linear/RealVectorImpl.java,22,import org.apache.commons.math.MathRuntimeException;
False,src/java/org/apache/commons/math/linear/RealVectorImpl.java,src/java/org/apache/commons/math/linear/RealVectorImpl.java,1071,"hrow new ArithmeticException(""null norm"");"
True,src/java/org/apache/commons/math/linear/RealVectorImpl.java,src/java/org/apache/commons/math/linear/RealVectorImpl.java,1072,"throw MathRuntimeException.createArithmeticException(""zero norm"", null);"
False,src/java/org/apache/commons/math/linear/RealVectorImpl.java,src/java/org/apache/commons/math/linear/RealVectorImpl.java,1080,"hrow new ArithmeticException(""null norm"");"
True,src/java/org/apache/commons/math/linear/RealVectorImpl.java,src/java/org/apache/commons/math/linear/RealVectorImpl.java,1081,"throw MathRuntimeException.createArithmeticException(""cannot normalize a zero norm vector"","
True,src/java/org/apache/commons/math/linear/RealVectorImpl.java,src/java/org/apache/commons/math/linear/RealVectorImpl.java,1082,null);
False,src/java/org/apache/commons/math/ode/ContinuousOutputModel.java,src/java/org/apache/commons/math/ode/ContinuousOutputModel.java,318,"hrow new MathRuntimeException(""unexpected exception caught"", new Object[0], de);"
True,src/java/org/apache/commons/math/ode/ContinuousOutputModel.java,src/java/org/apache/commons/math/ode/ContinuousOutputModel.java,318,"throw new MathRuntimeException(""unexpected exception caught"", null, de);"
False,src/java/org/apache/commons/math/optimization/DirectSearchOptimizer.java,src/java/org/apache/commons/math/optimization/DirectSearchOptimizer.java,273,"hrow new MathRuntimeException(""unexpected exception caught"", new Object[0], dme);"
True,src/java/org/apache/commons/math/optimization/DirectSearchOptimizer.java,src/java/org/apache/commons/math/optimization/DirectSearchOptimizer.java,273,"throw new MathRuntimeException(""unexpected exception caught"", null, dme);"
False,src/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,src/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,21,mport java.io.EOFException;
True,src/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,src/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,132,} catch (IOException ioe) {
True,src/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,src/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,133,// don't wrap exceptions which are already IOException
True,src/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,src/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,134,throw ioe;
True,src/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,src/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,135,} catch (RuntimeException rte) {
True,src/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,src/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,136,// don't wrap RuntimeExceptions
True,src/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,src/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,137,throw rte;
False,src/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,src/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,137,"hrow new EOFException(""URL "" + url + "" contains no data"");"
True,src/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,src/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,142,"throw MathRuntimeException.createEOFException(""URL {0} contains no data"","
True,src/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,src/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,143,new Object[] { url });
True,src/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,src/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,171,} catch (IOException ioe) {
True,src/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,src/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,172,// don't wrap exceptions which are already IOException
True,src/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,src/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,173,throw ioe;
True,src/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,src/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,174,} catch (RuntimeException rte) {
True,src/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,src/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,175,// don't wrap RuntimeExceptions
True,src/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,src/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,176,throw rte;
True,src/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,src/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,372,} catch (IOException ioe) {
True,src/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,src/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,373,// don't wrap exceptions which are already IOException
True,src/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,src/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,374,throw ioe;
True,src/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,src/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,375,} catch (RuntimeException rte) {
True,src/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,src/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,376,// don't wrap RuntimeExceptions
True,src/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,src/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,377,throw rte;
False,src/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,src/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,361,f(e instanceof RuntimeException){
False,src/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,src/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,362,hrow new RuntimeException(e.getMessage());
False,src/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,src/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,363,else{
False,src/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,src/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,364,hrow new IOException(e.getMessage());
True,src/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,src/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,379,throw new IOException(e.getMessage());
False,src/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,src/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,422,"hrow new MathRuntimeException(""no bin selected"", new Object[0]);"
True,src/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,src/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java,436,"throw new MathRuntimeException(""no bin selected"", null);"
False,src/java/org/apache/commons/math/random/ValueServer.java,src/java/org/apache/commons/math/random/ValueServer.java,20,mport java.io.EOFException;
False,src/java/org/apache/commons/math/random/ValueServer.java,src/java/org/apache/commons/math/random/ValueServer.java,21,mport java.io.InputStreamReader;
False,src/java/org/apache/commons/math/random/ValueServer.java,src/java/org/apache/commons/math/random/ValueServer.java,23,mport java.net.URL;
True,src/java/org/apache/commons/math/random/ValueServer.java,src/java/org/apache/commons/math/random/ValueServer.java,21,import java.io.InputStreamReader;
True,src/java/org/apache/commons/math/random/ValueServer.java,src/java/org/apache/commons/math/random/ValueServer.java,23,import java.net.URL;
True,src/java/org/apache/commons/math/random/ValueServer.java,src/java/org/apache/commons/math/random/ValueServer.java,25,import org.apache.commons.math.MathRuntimeException;
False,src/java/org/apache/commons/math/random/ValueServer.java,src/java/org/apache/commons/math/random/ValueServer.java,331,"hrow new EOFException(""URL "" + valuesFileURL + "" contains no data"");"
True,src/java/org/apache/commons/math/random/ValueServer.java,src/java/org/apache/commons/math/random/ValueServer.java,332,"throw MathRuntimeException.createEOFException(""URL {0} contains no data"","
True,src/java/org/apache/commons/math/random/ValueServer.java,src/java/org/apache/commons/math/random/ValueServer.java,333,new Object[] { valuesFileURL });
False,src/java/org/apache/commons/math/util/DefaultTransformer.java,src/java/org/apache/commons/math/util/DefaultTransformer.java,47,"hrow new MathException(""Conversion Exception in Transformation, Object is null"", new Object[0]);"
True,src/java/org/apache/commons/math/util/DefaultTransformer.java,src/java/org/apache/commons/math/util/DefaultTransformer.java,47,"throw new MathException(""Conversion Exception in Transformation, Object is null"", null);"
True,src/java/org/apache/commons/math/util/ResizableDoubleArray.java,src/java/org/apache/commons/math/util/ResizableDoubleArray.java,21,import org.apache.commons.math.MathRuntimeException;
False,src/java/org/apache/commons/math/util/ResizableDoubleArray.java,src/java/org/apache/commons/math/util/ResizableDoubleArray.java,457,tring msg =
False,src/java/org/apache/commons/math/util/ResizableDoubleArray.java,src/java/org/apache/commons/math/util/ResizableDoubleArray.java,458,"The index specified: "" + index +"
False,src/java/org/apache/commons/math/util/ResizableDoubleArray.java,src/java/org/apache/commons/math/util/ResizableDoubleArray.java,459," is larger than the current number of elements"";"
False,src/java/org/apache/commons/math/util/ResizableDoubleArray.java,src/java/org/apache/commons/math/util/ResizableDoubleArray.java,460,hrow new ArrayIndexOutOfBoundsException(msg);
True,src/java/org/apache/commons/math/util/ResizableDoubleArray.java,src/java/org/apache/commons/math/util/ResizableDoubleArray.java,459,"throw MathRuntimeException.createArrayIndexOutOfBoundsException(""the index specified: {0} is larger than the current maximal index {1}"","
True,src/java/org/apache/commons/math/util/ResizableDoubleArray.java,src/java/org/apache/commons/math/util/ResizableDoubleArray.java,460,"new Object[] { index, numElements - 1 });"
False,src/java/org/apache/commons/math/util/ResizableDoubleArray.java,src/java/org/apache/commons/math/util/ResizableDoubleArray.java,464,tring msg =
False,src/java/org/apache/commons/math/util/ResizableDoubleArray.java,src/java/org/apache/commons/math/util/ResizableDoubleArray.java,465,"Elements cannot be retrieved from a negative array index"";"
False,src/java/org/apache/commons/math/util/ResizableDoubleArray.java,src/java/org/apache/commons/math/util/ResizableDoubleArray.java,466,hrow new ArrayIndexOutOfBoundsException(msg);
True,src/java/org/apache/commons/math/util/ResizableDoubleArray.java,src/java/org/apache/commons/math/util/ResizableDoubleArray.java,464,"throw MathRuntimeException.createArrayIndexOutOfBoundsException(""elements cannot be retrieved from a negative array index {0}"","
True,src/java/org/apache/commons/math/util/ResizableDoubleArray.java,src/java/org/apache/commons/math/util/ResizableDoubleArray.java,465,new Object[] { index });
False,src/java/org/apache/commons/math/util/ResizableDoubleArray.java,src/java/org/apache/commons/math/util/ResizableDoubleArray.java,573,"tring msg = ""Cannot set an element at a negative index"";"
False,src/java/org/apache/commons/math/util/ResizableDoubleArray.java,src/java/org/apache/commons/math/util/ResizableDoubleArray.java,574,hrow new ArrayIndexOutOfBoundsException(msg);
True,src/java/org/apache/commons/math/util/ResizableDoubleArray.java,src/java/org/apache/commons/math/util/ResizableDoubleArray.java,572,"throw MathRuntimeException.createArrayIndexOutOfBoundsException(""cannot set an element at a negative index {0}"","
True,src/java/org/apache/commons/math/util/ResizableDoubleArray.java,src/java/org/apache/commons/math/util/ResizableDoubleArray.java,573,new Object[] { index });
False,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,786,"hrow new InvalidMatrixException(""incorrect dimensions"", new Object[0]);"
True,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,src/test/org/apache/commons/math/linear/BigMatrixImplTest.java,786,"throw new InvalidMatrixException(""incorrect dimensions"", null);"
False,src/test/org/apache/commons/math/util/TestBean.java,src/test/org/apache/commons/math/util/TestBean.java,62,hrow new MathRuntimeException();
True,src/test/org/apache/commons/math/util/TestBean.java,src/test/org/apache/commons/math/util/TestBean.java,62,"throw new MathRuntimeException(""?"", null);"
