is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,559,* @deprecated in 2.2. Please use {@link org.apache.commons.math.exception.MathUnsupportedOperationException}
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,560,* instead.
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,605,"* @deprecated in 2.2. Checks for ""null"" must not be performed in Commons-Math."
False,src/main/java/org/apache/commons/math/exception/LocalizedFormats.java,src/main/java/org/apache/commons/math/exception/LocalizedFormats.java,284,"NSUPPORTED_OPERATION(""unsupported operation""),"
True,src/main/java/org/apache/commons/math/exception/LocalizedFormats.java,src/main/java/org/apache/commons/math/exception/LocalizedFormats.java,284,"UNSUPPORTED_OPERATION(""unsupported operation""), /* keep */"
False,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,20,mport java.util.List;
False,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,21,mport java.util.ArrayList;
True,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,21,import org.apache.commons.math.exception.util.ArgUtils;
True,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,22,import org.apache.commons.math.exception.util.MessageFactory;
False,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,62,rguments = flatten(args).toArray();
True,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,63,arguments = ArgUtils.flatten(args);
False,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,73,** Gets the message in a specified locale.
False,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,75, @param locale Locale in which the message should be translated
False,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,77, @return localized message
False,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,78, @since 2.2
False,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,80,ublic String getMessage(final Locale locale) {
False,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,81,inal StringBuilder sb = new StringBuilder();
False,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,83,f (specific != null) {
False,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,84,"b.append(MessageFactory.buildMessage(locale, specific, arguments));"
False,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,85,"b.append("": "");"
False,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,87,"b.append(MessageFactory.buildMessage(locale, general, arguments));"
False,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,89,eturn sb.toString();
True,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,75,* Get the message in a specified locale.
True,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,77,* @param locale Locale in which the message should be translated.
True,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,79,* @return the localized message.
True,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,81,public String getMessage(final Locale locale) {
True,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,82,"return MessageFactory.buildMessage(locale, specific, general, arguments);"
False,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,105, Transform a multidimensional array into a one-dimensional list.
False,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,107, @param array Array (possibly multidimensional).
False,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,108, @return a list of all the {@code Object} instances contained in
False,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,109, {@code array}.
False,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,111,rivate List<Object> flatten(Object[] array) {
False,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,112,inal List<Object> list = new ArrayList<Object>();
False,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,113,f (array != null) {
False,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,114,or (Object o : array) {
False,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,115,f (o instanceof Object[]) {
False,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,116,ist.addAll(flatten((Object[]) o));
False,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,117, else {
False,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,118,ist.add(o);
False,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java,122,eturn list;
True,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,4,* this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,7,* the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,14,* See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,15,* limitations under the License.
True,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,17,package org.apache.commons.math.exception;
True,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,19,import java.util.Locale;
True,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,21,import org.apache.commons.math.exception.util.ArgUtils;
True,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,22,import org.apache.commons.math.exception.util.MessageFactory;
True,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,23,import org.apache.commons.math.exception.LocalizedFormats;
True,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,26,* Base class for all unsupported features.
True,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,27,* It is used for all the exceptions that share the semantics of the standard
True,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,28,"* {@link UnsupportedOperationException}, but must also provide a localized"
True,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,29,* message.
True,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,31,* @since 2.2
True,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,32,* @version $Revision$ $Date$
True,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,34,public class MathUnsupportedOperationException extends UnsupportedOperationException {
True,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,36,/** Serializable version Id. */
True,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,37,private static final long serialVersionUID = -6024911025449780478L;
True,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,40,* Pattern used to build the message (specific context).
True,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,42,private final Localizable specific;
True,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,44,* Arguments used to build the message.
True,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,46,private final Object[] arguments;
True,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,49,* @param args Arguments.
True,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,51,public MathUnsupportedOperationException(Object ... args) {
True,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,52,"this(null, args);"
True,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,55,* @param specific Message pattern providing the specific context of
True,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,56,* the error.
True,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,57,* @param args Arguments.
True,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,59,"public MathUnsupportedOperationException(Localizable specific,"
True,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,60,Object ... args) {
True,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,61,this.specific = specific;
True,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,62,arguments = ArgUtils.flatten(args);
True,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,66,* Get the message in a specified locale.
True,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,68,* @param locale Locale in which the message should be translated.
True,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,70,* @return the localized message.
True,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,72,public String getMessage(final Locale locale) {
True,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,73,"return MessageFactory.buildMessage(locale,"
True,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,74,"specific,"
True,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,75,"LocalizedFormats.UNSUPPORTED_OPERATION,"
True,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,76,arguments);
True,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,79,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,80,@Override
True,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,81,public String getMessage() {
True,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,82,return getMessage(Locale.US);
True,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,85,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,86,@Override
True,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,87,public String getLocalizedMessage() {
True,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java,88,return getMessage(Locale.getDefault());
True,src/main/java/org/apache/commons/math/exception/util/ArgUtils.java,src/main/java/org/apache/commons/math/exception/util/ArgUtils.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/main/java/org/apache/commons/math/exception/util/ArgUtils.java,src/main/java/org/apache/commons/math/exception/util/ArgUtils.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/main/java/org/apache/commons/math/exception/util/ArgUtils.java,src/main/java/org/apache/commons/math/exception/util/ArgUtils.java,4,* this work for additional information regarding copyright ownership.
True,src/main/java/org/apache/commons/math/exception/util/ArgUtils.java,src/main/java/org/apache/commons/math/exception/util/ArgUtils.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/main/java/org/apache/commons/math/exception/util/ArgUtils.java,src/main/java/org/apache/commons/math/exception/util/ArgUtils.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/main/java/org/apache/commons/math/exception/util/ArgUtils.java,src/main/java/org/apache/commons/math/exception/util/ArgUtils.java,7,* the License.  You may obtain a copy of the License at
True,src/main/java/org/apache/commons/math/exception/util/ArgUtils.java,src/main/java/org/apache/commons/math/exception/util/ArgUtils.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/main/java/org/apache/commons/math/exception/util/ArgUtils.java,src/main/java/org/apache/commons/math/exception/util/ArgUtils.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/main/java/org/apache/commons/math/exception/util/ArgUtils.java,src/main/java/org/apache/commons/math/exception/util/ArgUtils.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/main/java/org/apache/commons/math/exception/util/ArgUtils.java,src/main/java/org/apache/commons/math/exception/util/ArgUtils.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/main/java/org/apache/commons/math/exception/util/ArgUtils.java,src/main/java/org/apache/commons/math/exception/util/ArgUtils.java,14,* See the License for the specific language governing permissions and
True,src/main/java/org/apache/commons/math/exception/util/ArgUtils.java,src/main/java/org/apache/commons/math/exception/util/ArgUtils.java,15,* limitations under the License.
True,src/main/java/org/apache/commons/math/exception/util/ArgUtils.java,src/main/java/org/apache/commons/math/exception/util/ArgUtils.java,17,package org.apache.commons.math.exception.util;
True,src/main/java/org/apache/commons/math/exception/util/ArgUtils.java,src/main/java/org/apache/commons/math/exception/util/ArgUtils.java,19,import java.util.List;
True,src/main/java/org/apache/commons/math/exception/util/ArgUtils.java,src/main/java/org/apache/commons/math/exception/util/ArgUtils.java,20,import java.util.ArrayList;
True,src/main/java/org/apache/commons/math/exception/util/ArgUtils.java,src/main/java/org/apache/commons/math/exception/util/ArgUtils.java,22,public class ArgUtils {
True,src/main/java/org/apache/commons/math/exception/util/ArgUtils.java,src/main/java/org/apache/commons/math/exception/util/ArgUtils.java,24,* Transform a multidimensional array into a one-dimensional list.
True,src/main/java/org/apache/commons/math/exception/util/ArgUtils.java,src/main/java/org/apache/commons/math/exception/util/ArgUtils.java,26,* @param array Array (possibly multidimensional).
True,src/main/java/org/apache/commons/math/exception/util/ArgUtils.java,src/main/java/org/apache/commons/math/exception/util/ArgUtils.java,27,* @return a list of all the {@code Object} instances contained in
True,src/main/java/org/apache/commons/math/exception/util/ArgUtils.java,src/main/java/org/apache/commons/math/exception/util/ArgUtils.java,28,* {@code array}.
True,src/main/java/org/apache/commons/math/exception/util/ArgUtils.java,src/main/java/org/apache/commons/math/exception/util/ArgUtils.java,30,public static Object[] flatten(Object[] array) {
True,src/main/java/org/apache/commons/math/exception/util/ArgUtils.java,src/main/java/org/apache/commons/math/exception/util/ArgUtils.java,31,final List<Object> list = new ArrayList<Object>();
True,src/main/java/org/apache/commons/math/exception/util/ArgUtils.java,src/main/java/org/apache/commons/math/exception/util/ArgUtils.java,32,if (array != null) {
True,src/main/java/org/apache/commons/math/exception/util/ArgUtils.java,src/main/java/org/apache/commons/math/exception/util/ArgUtils.java,33,for (Object o : array) {
True,src/main/java/org/apache/commons/math/exception/util/ArgUtils.java,src/main/java/org/apache/commons/math/exception/util/ArgUtils.java,34,if (o instanceof Object[]) {
True,src/main/java/org/apache/commons/math/exception/util/ArgUtils.java,src/main/java/org/apache/commons/math/exception/util/ArgUtils.java,35,for (Object oR : flatten((Object[]) o)) {
True,src/main/java/org/apache/commons/math/exception/util/ArgUtils.java,src/main/java/org/apache/commons/math/exception/util/ArgUtils.java,36,list.add(oR);
True,src/main/java/org/apache/commons/math/exception/util/ArgUtils.java,src/main/java/org/apache/commons/math/exception/util/ArgUtils.java,38,} else {
True,src/main/java/org/apache/commons/math/exception/util/ArgUtils.java,src/main/java/org/apache/commons/math/exception/util/ArgUtils.java,39,list.add(o);
True,src/main/java/org/apache/commons/math/exception/util/ArgUtils.java,src/main/java/org/apache/commons/math/exception/util/ArgUtils.java,43,return list.toArray();
False,src/main/java/org/apache/commons/math/exception/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,17,ackage org.apache.commons.math.exception;
True,src/main/java/org/apache/commons/math/exception/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,17,package org.apache.commons.math.exception.util;
True,src/main/java/org/apache/commons/math/exception/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,22,import org.apache.commons.math.exception.Localizable;
False,src/main/java/org/apache/commons/math/exception/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,40, @return a message string.
False,src/main/java/org/apache/commons/math/exception/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,41, @since 2.2
True,src/main/java/org/apache/commons/math/exception/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,42,* @return a localized message string.
False,src/main/java/org/apache/commons/math/exception/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,46,inal String locPattern = pattern.getLocalizedString(locale);
False,src/main/java/org/apache/commons/math/exception/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,47,"eturn (new MessageFormat(locPattern, locale)).format(arguments);"
True,src/main/java/org/apache/commons/math/exception/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,47,"return buildMessage(locale, null, pattern, arguments);"
True,src/main/java/org/apache/commons/math/exception/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,51,* Builds a message string by from two patterns (specific and general) and
True,src/main/java/org/apache/commons/math/exception/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,52,* an argument list.
True,src/main/java/org/apache/commons/math/exception/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,54,* @param locale Locale in which the message should be translated.
True,src/main/java/org/apache/commons/math/exception/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,55,* @param specific Format specifier.
True,src/main/java/org/apache/commons/math/exception/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,56,* @param general Format specifier.
True,src/main/java/org/apache/commons/math/exception/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,57,* @param arguments Format arguments. They will be substituted first in
True,src/main/java/org/apache/commons/math/exception/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,58,"* the {@code specific} format specifier, then the remaining arguments"
True,src/main/java/org/apache/commons/math/exception/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,59,* will be substituted in the {@code general} format specifier.
True,src/main/java/org/apache/commons/math/exception/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,60,* @return a localized message string.
True,src/main/java/org/apache/commons/math/exception/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,62,"public static String buildMessage(Locale locale,"
True,src/main/java/org/apache/commons/math/exception/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,63,"Localizable specific,"
True,src/main/java/org/apache/commons/math/exception/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,64,"Localizable general,"
True,src/main/java/org/apache/commons/math/exception/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,65,Object ... arguments) {
True,src/main/java/org/apache/commons/math/exception/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,66,final StringBuilder sb = new StringBuilder();
True,src/main/java/org/apache/commons/math/exception/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,67,MessageFormat fmt = null;
True,src/main/java/org/apache/commons/math/exception/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,68,if (specific != null) {
True,src/main/java/org/apache/commons/math/exception/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,69,"fmt = new MessageFormat(specific.getLocalizedString(locale), locale);"
True,src/main/java/org/apache/commons/math/exception/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,70,sb.append(fmt.format(arguments));
True,src/main/java/org/apache/commons/math/exception/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,71,"sb.append("": "");"
True,src/main/java/org/apache/commons/math/exception/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,73,"fmt = new MessageFormat(general.getLocalizedString(locale), locale);"
True,src/main/java/org/apache/commons/math/exception/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,74,sb.append(fmt.format(arguments));
True,src/main/java/org/apache/commons/math/exception/MessageFactory.java,src/main/java/org/apache/commons/math/exception/util/MessageFactory.java,76,return sb.toString();
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,118, @throws NullPointerException
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,119,             if the numerator or the denominator is <code>zero</code>.
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,122,f (num == null) {
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,123,hrow MathRuntimeException.createNullPointerException(LocalizedFormats.NULL_NUMERATOR);
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,125,f (den == null) {
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,126,hrow MathRuntimeException.createNullPointerException(LocalizedFormats.NULL_DENOMINATOR);
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,24,mport org.apache.commons.math.MathRuntimeException;
True,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,24,import org.apache.commons.math.exception.MathUnsupportedOperationException;
True,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,25,import org.apache.commons.math.exception.DimensionMismatchException;
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,32, {@link RealVector} interface with.
True,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,33,* {@link RealVector} interface.
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,56,hrows IllegalArgumentException {
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,57,ouble d = getDimension();
True,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,57,throws DimensionMismatchException {
True,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,58,int d = getDimension();
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,59,hrow MathRuntimeException.createIllegalArgumentException(
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,60,"ocalizedFormats.VECTOR_LENGTH_MISMATCH, d, n);"
True,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,60,"throw new DimensionMismatchException(d, n);"
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,819,hrow MathRuntimeException.createUnsupportedOperationException(LocalizedFormats.UNSUPPORTED_OPERATION);
True,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,819,throw new MathUnsupportedOperationException();
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,927,hrow MathRuntimeException.createUnsupportedOperationException(LocalizedFormats.UNSUPPORTED_OPERATION);
True,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,927,throw new MathUnsupportedOperationException();
True,src/test/java/org/apache/commons/math/exception/util/ArgUtilsTest.java,src/test/java/org/apache/commons/math/exception/util/ArgUtilsTest.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/java/org/apache/commons/math/exception/util/ArgUtilsTest.java,src/test/java/org/apache/commons/math/exception/util/ArgUtilsTest.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/test/java/org/apache/commons/math/exception/util/ArgUtilsTest.java,src/test/java/org/apache/commons/math/exception/util/ArgUtilsTest.java,4,* this work for additional information regarding copyright ownership.
True,src/test/java/org/apache/commons/math/exception/util/ArgUtilsTest.java,src/test/java/org/apache/commons/math/exception/util/ArgUtilsTest.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/java/org/apache/commons/math/exception/util/ArgUtilsTest.java,src/test/java/org/apache/commons/math/exception/util/ArgUtilsTest.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/test/java/org/apache/commons/math/exception/util/ArgUtilsTest.java,src/test/java/org/apache/commons/math/exception/util/ArgUtilsTest.java,7,* the License.  You may obtain a copy of the License at
True,src/test/java/org/apache/commons/math/exception/util/ArgUtilsTest.java,src/test/java/org/apache/commons/math/exception/util/ArgUtilsTest.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/java/org/apache/commons/math/exception/util/ArgUtilsTest.java,src/test/java/org/apache/commons/math/exception/util/ArgUtilsTest.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/java/org/apache/commons/math/exception/util/ArgUtilsTest.java,src/test/java/org/apache/commons/math/exception/util/ArgUtilsTest.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/java/org/apache/commons/math/exception/util/ArgUtilsTest.java,src/test/java/org/apache/commons/math/exception/util/ArgUtilsTest.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/java/org/apache/commons/math/exception/util/ArgUtilsTest.java,src/test/java/org/apache/commons/math/exception/util/ArgUtilsTest.java,14,* See the License for the specific language governing permissions and
True,src/test/java/org/apache/commons/math/exception/util/ArgUtilsTest.java,src/test/java/org/apache/commons/math/exception/util/ArgUtilsTest.java,15,* limitations under the License.
True,src/test/java/org/apache/commons/math/exception/util/ArgUtilsTest.java,src/test/java/org/apache/commons/math/exception/util/ArgUtilsTest.java,17,package org.apache.commons.math.exception.util;
True,src/test/java/org/apache/commons/math/exception/util/ArgUtilsTest.java,src/test/java/org/apache/commons/math/exception/util/ArgUtilsTest.java,19,import java.util.List;
True,src/test/java/org/apache/commons/math/exception/util/ArgUtilsTest.java,src/test/java/org/apache/commons/math/exception/util/ArgUtilsTest.java,20,import java.util.ArrayList;
True,src/test/java/org/apache/commons/math/exception/util/ArgUtilsTest.java,src/test/java/org/apache/commons/math/exception/util/ArgUtilsTest.java,22,import org.junit.Assert;
True,src/test/java/org/apache/commons/math/exception/util/ArgUtilsTest.java,src/test/java/org/apache/commons/math/exception/util/ArgUtilsTest.java,23,import org.junit.Test;
True,src/test/java/org/apache/commons/math/exception/util/ArgUtilsTest.java,src/test/java/org/apache/commons/math/exception/util/ArgUtilsTest.java,26,* Test for {@link ArgUtils}.
True,src/test/java/org/apache/commons/math/exception/util/ArgUtilsTest.java,src/test/java/org/apache/commons/math/exception/util/ArgUtilsTest.java,28,* @version $Revision$ $Date$
True,src/test/java/org/apache/commons/math/exception/util/ArgUtilsTest.java,src/test/java/org/apache/commons/math/exception/util/ArgUtilsTest.java,30,public class ArgUtilsTest {
True,src/test/java/org/apache/commons/math/exception/util/ArgUtilsTest.java,src/test/java/org/apache/commons/math/exception/util/ArgUtilsTest.java,31,@Test
True,src/test/java/org/apache/commons/math/exception/util/ArgUtilsTest.java,src/test/java/org/apache/commons/math/exception/util/ArgUtilsTest.java,32,public void testFlatten() {
True,src/test/java/org/apache/commons/math/exception/util/ArgUtilsTest.java,src/test/java/org/apache/commons/math/exception/util/ArgUtilsTest.java,33,final List<Object> orig = new ArrayList<Object>();
True,src/test/java/org/apache/commons/math/exception/util/ArgUtilsTest.java,src/test/java/org/apache/commons/math/exception/util/ArgUtilsTest.java,35,final Object[] struct = new Object[] {
True,src/test/java/org/apache/commons/math/exception/util/ArgUtilsTest.java,src/test/java/org/apache/commons/math/exception/util/ArgUtilsTest.java,36,new Object[] {
True,src/test/java/org/apache/commons/math/exception/util/ArgUtilsTest.java,src/test/java/org/apache/commons/math/exception/util/ArgUtilsTest.java,37,new Object[] {
True,src/test/java/org/apache/commons/math/exception/util/ArgUtilsTest.java,src/test/java/org/apache/commons/math/exception/util/ArgUtilsTest.java,38,"create(orig),"
True,src/test/java/org/apache/commons/math/exception/util/ArgUtilsTest.java,src/test/java/org/apache/commons/math/exception/util/ArgUtilsTest.java,39,"create(orig),"
True,src/test/java/org/apache/commons/math/exception/util/ArgUtilsTest.java,src/test/java/org/apache/commons/math/exception/util/ArgUtilsTest.java,41,"create(orig),"
True,src/test/java/org/apache/commons/math/exception/util/ArgUtilsTest.java,src/test/java/org/apache/commons/math/exception/util/ArgUtilsTest.java,42,new Object[] {
True,src/test/java/org/apache/commons/math/exception/util/ArgUtilsTest.java,src/test/java/org/apache/commons/math/exception/util/ArgUtilsTest.java,43,"create(orig),"
True,src/test/java/org/apache/commons/math/exception/util/ArgUtilsTest.java,src/test/java/org/apache/commons/math/exception/util/ArgUtilsTest.java,46,"create(orig),"
True,src/test/java/org/apache/commons/math/exception/util/ArgUtilsTest.java,src/test/java/org/apache/commons/math/exception/util/ArgUtilsTest.java,47,new Object[] {
True,src/test/java/org/apache/commons/math/exception/util/ArgUtilsTest.java,src/test/java/org/apache/commons/math/exception/util/ArgUtilsTest.java,48,"create(orig),"
True,src/test/java/org/apache/commons/math/exception/util/ArgUtilsTest.java,src/test/java/org/apache/commons/math/exception/util/ArgUtilsTest.java,49,new Object[] {
True,src/test/java/org/apache/commons/math/exception/util/ArgUtilsTest.java,src/test/java/org/apache/commons/math/exception/util/ArgUtilsTest.java,50,"create(orig),"
True,src/test/java/org/apache/commons/math/exception/util/ArgUtilsTest.java,src/test/java/org/apache/commons/math/exception/util/ArgUtilsTest.java,51,"create(orig),"
True,src/test/java/org/apache/commons/math/exception/util/ArgUtilsTest.java,src/test/java/org/apache/commons/math/exception/util/ArgUtilsTest.java,54,"create(orig),"
True,src/test/java/org/apache/commons/math/exception/util/ArgUtilsTest.java,src/test/java/org/apache/commons/math/exception/util/ArgUtilsTest.java,57,Object[] flat = ArgUtils.flatten(struct);
True,src/test/java/org/apache/commons/math/exception/util/ArgUtilsTest.java,src/test/java/org/apache/commons/math/exception/util/ArgUtilsTest.java,58,"Assert.assertEquals(flat.length, orig.size());"
True,src/test/java/org/apache/commons/math/exception/util/ArgUtilsTest.java,src/test/java/org/apache/commons/math/exception/util/ArgUtilsTest.java,60,"for (int i = 0, max = orig.size(); i < max; i++) {"
True,src/test/java/org/apache/commons/math/exception/util/ArgUtilsTest.java,src/test/java/org/apache/commons/math/exception/util/ArgUtilsTest.java,61,"Assert.assertEquals(orig.get(i), flat[i]);"
True,src/test/java/org/apache/commons/math/exception/util/ArgUtilsTest.java,src/test/java/org/apache/commons/math/exception/util/ArgUtilsTest.java,66,* Create and store an {@code Object}.
True,src/test/java/org/apache/commons/math/exception/util/ArgUtilsTest.java,src/test/java/org/apache/commons/math/exception/util/ArgUtilsTest.java,68,* @param list List to store to.
True,src/test/java/org/apache/commons/math/exception/util/ArgUtilsTest.java,src/test/java/org/apache/commons/math/exception/util/ArgUtilsTest.java,69,* @return the stored object.
True,src/test/java/org/apache/commons/math/exception/util/ArgUtilsTest.java,src/test/java/org/apache/commons/math/exception/util/ArgUtilsTest.java,71,private Object create(List<Object> list) {
True,src/test/java/org/apache/commons/math/exception/util/ArgUtilsTest.java,src/test/java/org/apache/commons/math/exception/util/ArgUtilsTest.java,72,final Object o = new Object();
True,src/test/java/org/apache/commons/math/exception/util/ArgUtilsTest.java,src/test/java/org/apache/commons/math/exception/util/ArgUtilsTest.java,73,list.add(o);
True,src/test/java/org/apache/commons/math/exception/util/ArgUtilsTest.java,src/test/java/org/apache/commons/math/exception/util/ArgUtilsTest.java,74,return o;
