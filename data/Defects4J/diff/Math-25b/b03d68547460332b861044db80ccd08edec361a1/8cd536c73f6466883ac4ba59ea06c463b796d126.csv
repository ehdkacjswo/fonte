is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,330,nteger basicRow = getBasicRow(getNumObjectiveFunctions() + decisionVariable);
False,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,331,"eturn basicRow == null ? 0 : getEntry(basicRow, getRhsOffset());"
True,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,330,int col = getNumObjectiveFunctions() + decisionVariable;
True,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,331,Integer basicRow = getBasicRow(col);
True,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,332,if (basicRow == null) {
True,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,333,return 0;
True,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,335,// if there are multiple variables that can take the value on the RHS
True,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,336,// then we'll give the first variable that value
True,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,337,for (int i = getNumObjectiveFunctions(); i < col; i++) {
True,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,338,"if (tableau.getEntry(basicRow, i) == 1) {"
True,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,339,return 0;
True,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,342,"return getEntry(basicRow, getRhsOffset());"
False,src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java,src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java,146,ublic void testSomething() throws OptimizationException {
True,src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java,src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java,146,public void testTrivialModel() throws OptimizationException {
False,src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java,src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java,279,"ssertEquals(13366.0, solution.getValue(), .0000001);"
False,src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java,src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java,280,"/assertEquals(7518.0, solution.getValue(), .0000001);"
True,src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java,src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java,279,"assertEquals(7518.0, solution.getValue(), .0000001);"
