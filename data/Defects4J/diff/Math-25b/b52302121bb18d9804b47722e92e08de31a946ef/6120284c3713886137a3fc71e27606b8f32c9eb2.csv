is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,346,// org.apache.commons.math.transform.FastFourierTransformer
True,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,347,"{ ""cannot compute 0-th root of unity, indefinite result"","
True,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,348,"""impossible de calculer la racine z\u00e9roi\u00e8me de l''unit\u00e9, r\u00e9sultat ind\u00e9fini"" },"
True,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,349,"{ ""number of sample is not positive: {0}"","
True,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,350,"""le nombre d''\u00e9chantillons n''est pas positif : {0}"" },"
True,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,351,"{ ""{0} is not a power of 2, consider padding for fix"","
True,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,352,"""{0} n''est pas une puissance de 2, ajoutez des \u00e9l\u00e9ments pour corriger"" },"
True,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,353,"{ ""endpoints do not specify an interval: [{0}, {1}]"","
True,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,354,"""les extr\u00e9mit\u00e9s ne constituent pas un intervalle : [{0}, {1}]"" },"
True,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,355,"{ ""some dimensions don't math: {0} != {1}"","
True,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,356,"""certaines dimensions sont incoh\u00e9rentes : {0} != {1}"" },"
True,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,358,// org.apache.commons.math.transform.FastCosineTransformer
True,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,359,"{ ""{0} is not a power of 2 plus one"","
True,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,360,"""{0} n''est pas une puissance de 2 plus un"" },"
True,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,362,// org.apache.commons.math.transform.FastSineTransformer
True,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,363,"{ ""first element is not 0: {0}"","
True,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,364,"""le premier \u00e9l\u00e9ment n''est pas nul : {0}"" },"
False,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,19,mport java.io.Serializable;
False,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,20,mport org.apache.commons.math.analysis.*;
False,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,21,mport org.apache.commons.math.complex.*;
False,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,22,mport org.apache.commons.math.MathException;
True,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,19,import org.apache.commons.math.FunctionEvaluationException;
True,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,20,import org.apache.commons.math.MathRuntimeException;
True,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,21,import org.apache.commons.math.analysis.UnivariateRealFunction;
True,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,22,import org.apache.commons.math.complex.Complex;
False,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,40,ublic class FastCosineTransformer implements Serializable {
True,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,40,public class FastCosineTransformer implements RealTransformer {
False,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,43,tatic final long serialVersionUID = -7673941545134707766L;
True,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,43,private static final long serialVersionUID = -831323620109865380L;
False,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,55, The formula is $ F_n = (1/2) [f_0 + (-1)^n f_N] +
False,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,56,                        \Sigma_{k=1}^{N-1} f_k \cos(\pi nk/N) $
True,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,55,* The formula is F<sub>n</sub> = (1/2) [f<sub>0</sub> + (-1)<sup>n</sup> f<sub>N</sub>] +
True,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,56,*                        &sum;<sub>k=1</sub><sup>N-1</sup> f<sub>k</sub> cos(&pi; nk/N)
False,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,61, @throws MathException if any math-related errors occur
False,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,64,"ublic double[] transform(double f[]) throws MathException,"
False,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,65,llegalArgumentException {
True,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,63,public double[] transform(double f[]) throws IllegalArgumentException {
False,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,73, The formula is $ F_n = (1/2) [f_0 + (-1)^n f_N] +
False,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,74,                        \Sigma_{k=1}^{N-1} f_k \cos(\pi nk/N) $
True,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,70,* The formula is F<sub>n</sub> = (1/2) [f<sub>0</sub> + (-1)<sup>n</sup> f<sub>N</sub>] +
True,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,71,*                        &sum;<sub>k=1</sub><sup>N-1</sup> f<sub>k</sub> cos(&pi; nk/N)
False,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,82, @throws MathException if any math-related errors occur
True,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,79,* @throws FunctionEvaluationException if function cannot be evaluated
True,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,80,* at some point
False,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,85,ublic double[] transform(
False,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,86,"nivariateRealFunction f, double min, double max, int n)"
False,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,87,"hrows MathException, IllegalArgumentException {"
True,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,83,"public double[] transform(UnivariateRealFunction f,"
True,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,84,"double min, double max, int n)"
True,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,85,"throws FunctionEvaluationException, IllegalArgumentException {"
False,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,96, The formula is $ F_n = \sqrt{1/2N} [f_0 + (-1)^n f_N] +
False,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,97,                        \sqrt{2/N} \Sigma_{k=1}^{N-1} f_k \cos(\pi nk/N) $
True,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,93,* The formula is F<sub>n</sub> = \sqrt{1/2N} [f<sub>0</sub> + (-1)<sup>n</sup> f<sub>N</sub>] +
True,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,94,*                        &radic;(2/N) &sum;<sub>k=1</sub><sup>N-1</sup> f<sub>k</sub> cos(&pi; nk/N)
False,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,102, @throws MathException if any math-related errors occur
False,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,105,"ublic double[] transform2(double f[]) throws MathException,"
False,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,106,llegalArgumentException {
True,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,101,public double[] transform2(double f[]) throws IllegalArgumentException {
False,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,115, The formula is $ F_n = \sqrt{1/2N} [f_0 + (-1)^n f_N] +
False,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,116,                        \sqrt{2/N} \Sigma_{k=1}^{N-1} f_k \cos(\pi nk/N) $
True,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,110,* The formula is F<sub>n</sub> = \sqrt{1/2N} [f<sub>0</sub> + (-1)<sup>n</sup> f<sub>N</sub>] +
True,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,111,*                        &radic;(2/N) &sum;<sub>k=1</sub><sup>N-1</sup> f<sub>k</sub> cos(&pi; nk/N)
False,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,125, @throws MathException if any math-related errors occur
True,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,120,* @throws FunctionEvaluationException if function cannot be evaluated
True,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,121,* at some point
False,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,128,ublic double[] transform2(
False,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,129,"nivariateRealFunction f, double min, double max, int n)"
False,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,130,"hrows MathException, IllegalArgumentException {"
True,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,124,"public double[] transform2(UnivariateRealFunction f,"
True,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,125,"double min, double max, int n)"
True,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,126,"throws FunctionEvaluationException, IllegalArgumentException {"
False,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,140, The formula is $ f_k = (1/N) [F_0 + (-1)^k F_N] +
False,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,141,                        (2/N) \Sigma_{n=1}^{N-1} F_n \cos(\pi nk/N) $
True,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,136,* The formula is f<sub>k</sub> = (1/N) [F<sub>0</sub> + (-1)<sup>k</sup> F<sub>N</sub>] +
True,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,137,*                        (2/N) &sum;<sub>n=1</sub><sup>N-1</sup> F<sub>n</sub> cos(&pi; nk/N)
False,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,146, @throws MathException if any math-related errors occur
False,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,149,"ublic double[] inversetransform(double f[]) throws MathException,"
False,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,150,llegalArgumentException {
True,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,144,public double[] inversetransform(double f[]) throws IllegalArgumentException {
False,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,159, The formula is $ f_k = (1/N) [F_0 + (-1)^k F_N] +
False,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,160,                        (2/N) \Sigma_{n=1}^{N-1} F_n \cos(\pi nk/N) $
True,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,153,* The formula is f<sub>k</sub> = (1/N) [F<sub>0</sub> + (-1)<sup>k</sup> F<sub>N</sub>] +
True,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,154,*                        (2/N) &sum;<sub>n=1</sub><sup>N-1</sup> F<sub>n</sub> cos(&pi; nk/N)
False,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,168, @throws MathException if any math-related errors occur
True,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,162,* @throws FunctionEvaluationException if function cannot be evaluated
True,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,163,* at some point
False,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,171,ublic double[] inversetransform(
False,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,172,"nivariateRealFunction f, double min, double max, int n)"
False,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,173,"hrows MathException, IllegalArgumentException {"
True,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,166,"public double[] inversetransform(UnivariateRealFunction f,"
True,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,167,"double min, double max, int n)"
True,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,168,"throws FunctionEvaluationException, IllegalArgumentException {"
False,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,183, The formula is $ f_k = \sqrt{1/2N} [F_0 + (-1)^k F_N] +
False,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,184,                        \sqrt{2/N} \Sigma_{n=1}^{N-1} F_n \cos(\pi nk/N) $
True,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,178,* The formula is f<sub>k</sub> = &radic;(1/2N) [F<sub>0</sub> + (-1)<sup>k</sup> F<sub>N</sub>] +
True,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,179,*                        &radic;(2/N) &sum;<sub>n=1</sub><sup>N-1</sup> F<sub>n</sub> cos(&pi; nk/N)
False,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,189, @throws MathException if any math-related errors occur
False,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,192,"ublic double[] inversetransform2(double f[]) throws MathException,"
False,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,193,llegalArgumentException {
True,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,186,public double[] inversetransform2(double f[]) throws IllegalArgumentException {
False,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,201, The formula is $ f_k = \sqrt{1/2N} [F_0 + (-1)^k F_N] +
False,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,202,                        \sqrt{2/N} \Sigma_{n=1}^{N-1} F_n \cos(\pi nk/N) $
True,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,193,* The formula is f<sub>k</sub> = &radic;(1/2N) [F<sub>0</sub> + (-1)<sup>k</sup> F<sub>N</sub>] +
True,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,194,*                        &radic;(2/N) &sum;<sub>n=1</sub><sup>N-1</sup> F<sub>n</sub> cos(&pi; nk/N)
False,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,210, @throws MathException if any math-related errors occur
True,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,202,* @throws FunctionEvaluationException if function cannot be evaluated
True,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,203,* at some point
False,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,213,ublic double[] inversetransform2(
False,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,214,"nivariateRealFunction f, double min, double max, int n)"
False,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,215,"hrows MathException, IllegalArgumentException {"
True,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,206,"public double[] inversetransform2(UnivariateRealFunction f,"
True,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,207,"double min, double max, int n)"
True,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,208,"throws FunctionEvaluationException, IllegalArgumentException {"
False,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,225, @throws MathException if any math-related errors occur
False,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,228,"rotected double[] fct(double f[]) throws MathException,"
False,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,229,llegalArgumentException {
True,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,220,protected double[] fct(double f[])
True,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,221,throws IllegalArgumentException {
False,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,235,hrow new IllegalArgumentException
False,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,236,"""Number of samples not power of 2 plus one: "" + f.length);"
True,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,227,"throw MathRuntimeException.createIllegalArgumentException(""{0} is not a power of 2 plus one"","
True,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,src/java/org/apache/commons/math/transform/FastCosineTransformer.java,228,new Object[] { f.length });
False,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,22,mport org.apache.commons.math.MathException;
True,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,22,import org.apache.commons.math.FunctionEvaluationException;
True,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,23,import org.apache.commons.math.MathRuntimeException;
False,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,74, @throws MathException if any math-related errors occur
False,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,77,"ublic Complex[] transform(double f[]) throws MathException,"
False,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,78,llegalArgumentException {
True,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,77,public Complex[] transform(double f[])
True,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,78,throws IllegalArgumentException {
False,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,94, @throws MathException if any math-related errors occur
True,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,93,* @throws FunctionEvaluationException if function cannot be evaluated
True,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,94,* at some point
False,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,97,ublic Complex[] transform(
False,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,98,"nivariateRealFunction f, double min, double max, int n)"
False,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,99,"hrows MathException, IllegalArgumentException {"
True,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,97,"public Complex[] transform(UnivariateRealFunction f,"
True,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,98,"double min, double max, int n)"
True,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,99,"throws FunctionEvaluationException, IllegalArgumentException {"
False,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,113, @throws MathException if any math-related errors occur
False,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,116,"ublic Complex[] transform(Complex f[]) throws MathException,"
False,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,117,llegalArgumentException {
True,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,114,public Complex[] transform(Complex f[])
True,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,115,throws IllegalArgumentException {
False,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,131, @throws MathException if any math-related errors occur
False,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,134,"ublic Complex[] transform2(double f[]) throws MathException,"
False,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,135,llegalArgumentException {
True,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,130,public Complex[] transform2(double f[])
True,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,131,throws IllegalArgumentException {
False,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,152, @throws MathException if any math-related errors occur
True,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,148,* @throws FunctionEvaluationException if function cannot be evaluated
True,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,149,* at some point
False,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,155,ublic Complex[] transform2(
False,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,156,"nivariateRealFunction f, double min, double max, int n)"
False,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,157,"hrows MathException, IllegalArgumentException {"
True,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,152,"public Complex[] transform2(UnivariateRealFunction f,"
True,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,153,"double min, double max, int n)"
True,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,154,"throws FunctionEvaluationException, IllegalArgumentException {"
False,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,172, @throws MathException if any math-related errors occur
False,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,175,"ublic Complex[] transform2(Complex f[]) throws MathException,"
False,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,176,llegalArgumentException {
True,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,171,public Complex[] transform2(Complex f[])
True,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,172,throws IllegalArgumentException {
False,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,191, @throws MathException if any math-related errors occur
False,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,194,"ublic Complex[] inversetransform(double f[]) throws MathException,"
False,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,195,llegalArgumentException {
True,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,189,public Complex[] inversetransform(double f[])
True,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,190,throws IllegalArgumentException {
False,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,212, @throws MathException if any math-related errors occur
True,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,207,* @throws FunctionEvaluationException if function cannot be evaluated
True,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,208,* at some point
False,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,215,ublic Complex[] inversetransform(
False,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,216,"nivariateRealFunction f, double min, double max, int n)"
False,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,217,"hrows MathException, IllegalArgumentException {"
True,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,211,"public Complex[] inversetransform(UnivariateRealFunction f,"
True,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,212,"double min, double max, int n)"
True,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,213,"throws FunctionEvaluationException, IllegalArgumentException {"
False,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,232, @throws MathException if any math-related errors occur
False,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,235,"ublic Complex[] inversetransform(Complex f[]) throws MathException,"
False,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,236,llegalArgumentException {
True,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,230,public Complex[] inversetransform(Complex f[])
True,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,231,throws IllegalArgumentException {
False,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,251, @throws MathException if any math-related errors occur
False,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,254,"ublic Complex[] inversetransform2(double f[]) throws MathException,"
False,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,255,llegalArgumentException {
True,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,248,public Complex[] inversetransform2(double f[])
True,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,249,throws IllegalArgumentException {
False,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,272, @throws MathException if any math-related errors occur
True,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,266,* @throws FunctionEvaluationException if function cannot be evaluated
True,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,267,* at some point
False,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,275,ublic Complex[] inversetransform2(
False,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,276,"nivariateRealFunction f, double min, double max, int n)"
False,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,277,"hrows MathException, IllegalArgumentException {"
True,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,270,"public Complex[] inversetransform2(UnivariateRealFunction f,"
True,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,271,"double min, double max, int n)"
True,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,272,"throws FunctionEvaluationException, IllegalArgumentException {"
False,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,292, @throws MathException if any math-related errors occur
False,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,295,"ublic Complex[] inversetransform2(Complex f[]) throws MathException,"
False,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,296,llegalArgumentException {
True,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,289,public Complex[] inversetransform2(Complex f[])
True,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,290,throws IllegalArgumentException {
False,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,309, @throws MathException if any math-related errors occur
False,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,312,"rotected Complex[] fft(double f[], boolean isInverse) throws"
False,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,313,"athException, IllegalArgumentException {"
True,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,305,"protected Complex[] fft(double f[], boolean isInverse)"
True,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,306,throws IllegalArgumentException {
False,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,353, @throws MathException if any math-related errors occur
False,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,356,"rotected Complex[] fft(Complex data[]) throws MathException,"
False,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,357,llegalArgumentException {
True,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,348,protected Complex[] fft(Complex data[])
True,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,349,throws IllegalArgumentException {
False,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,424,rotected void computeOmega(int n) throws IllegalArgumentException {
True,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,416,protected void computeOmega(int n)
True,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,417,throws IllegalArgumentException {
False,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,426,hrow new IllegalArgumentException
False,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,427,"""Cannot compute 0-th root of unity, indefinite result."");"
True,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,419,"throw MathRuntimeException.createIllegalArgumentException(""cannot compute 0-th root of unity, indefinite result"","
True,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,420,null);
False,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,465, @throws MathException if any math-related errors occur
True,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,458,* @throws FunctionEvaluationException if function cannot be evaluated
True,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,459,* at some point
False,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,468,ublic static double[] sample(
False,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,469,"nivariateRealFunction f, double min, double max, int n)"
False,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,470,"hrows MathException, IllegalArgumentException {"
True,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,462,"public static double[] sample(UnivariateRealFunction f,"
True,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,463,"double min, double max, int n)"
True,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,464,"throws FunctionEvaluationException, IllegalArgumentException {"
False,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,473,"hrow new IllegalArgumentException(""Number of samples not positive."");"
True,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,467,"throw MathRuntimeException.createIllegalArgumentException(""number of sample is not positive: {0}"","
True,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,468,new Object[] { n });
False,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,533,hrow new IllegalArgumentException
False,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,534,"""Number of samples not power of 2, consider padding for fix."");"
True,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,528,"throw MathRuntimeException.createIllegalArgumentException(""{0} is not a power of 2, consider padding for fix"","
True,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,529,new Object[] { d.length });
False,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,546,hrow new IllegalArgumentException
False,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,547,"""Number of samples not power of 2, consider padding for fix."");"
True,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,541,"throw MathRuntimeException.createIllegalArgumentException(""{0} is not a power of 2, consider padding for fix"","
True,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,542,new Object[] { o.length });
False,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,558,"ublic static void verifyInterval(double lower, double upper) throws"
False,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,559,llegalArgumentException {
True,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,553,"public static void verifyInterval(double lower, double upper)"
True,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,554,throws IllegalArgumentException {
False,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,562,hrow new IllegalArgumentException
False,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,563,"""Endpoints do not specify an interval: ["" + lower +"
False,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,564,", "" + upper + ""]"");"
True,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,557,"throw MathRuntimeException.createIllegalArgumentException(""endpoints do not specify an interval: [{0}, {1}]"","
True,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,558,"new Object[] { lower, upper });"
False,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,580, @throws MathException if any dimension is not a power of two
True,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,574,* @throws IllegalArgumentException if any dimension is not a power of two
False,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,582,"ublic Object mdfft(Object mdca, boolean forward) throws MathException {"
True,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,576,"public Object mdfft(Object mdca, boolean forward)"
True,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,577,throws IllegalArgumentException {
False,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,600, @throws MathException if any dimension is not a power of two
True,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,595,* @throws IllegalArgumentException if any dimension is not a power of two
False,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,603,"nt d, int[] subVector) throws MathException {"
True,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,598,"int d, int[] subVector)"
True,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,599,throws IllegalArgumentException {
False,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,649,"rivate class MultiDimensionalComplexMatrix implements Serializable,"
False,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,650,loneable {
True,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,645,private class MultiDimensionalComplexMatrix
True,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,646,"implements Serializable, Cloneable {"
True,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,692,* @exception IllegalArgumentException if dimensions do not match
False,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,697,ublic Complex get(int... vector) {
False,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,698,f ((vector == null && dimensionSize.length > 1) ||
False,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,699,vector != null && vector.length != dimensionSize.length)) {
False,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,700,"hrow new IllegalArgumentException(""Number of dimensions must match"");"
True,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,694,public Complex get(int... vector)
True,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,695,throws IllegalArgumentException {
True,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,696,if (vector == null && dimensionSize.length > 1) {
True,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,697,"throw MathRuntimeException.createIllegalArgumentException(""some dimensions don't math: {0} != {1}"","
True,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,698,"new Object[] { 0, dimensionSize.length });"
True,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,700,if (vector != null && vector.length != dimensionSize.length) {
True,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,701,"throw MathRuntimeException.createIllegalArgumentException(""some dimensions don't math: {0} != {1}"","
True,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,702,new Object[] {
True,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,703,"vector.length,"
True,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,704,dimensionSize.length
True,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,721,* @exception IllegalArgumentException if dimensions do not match
False,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,717,"ublic Complex set(Complex magnitude, int... vector) {"
False,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,718,f ((vector == null && dimensionSize.length > 1) ||
False,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,719,vector != null && vector.length != dimensionSize.length)) {
False,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,720,"hrow new IllegalArgumentException(""Number of dimensions must match"");"
True,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,723,"public Complex set(Complex magnitude, int... vector)"
True,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,724,throws IllegalArgumentException {
True,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,725,if (vector == null && dimensionSize.length > 1) {
True,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,726,"throw MathRuntimeException.createIllegalArgumentException(""some dimensions don't math: {0} != {1}"","
True,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,727,"new Object[] { 0, dimensionSize.length });"
True,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,729,if (vector != null && vector.length != dimensionSize.length) {
True,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,730,"throw MathRuntimeException.createIllegalArgumentException(""some dimensions don't math: {0} != {1}"","
True,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,731,new Object[] {
True,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,732,"vector.length,"
True,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/java/org/apache/commons/math/transform/FastFourierTransformer.java,733,dimensionSize.length
False,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,19,mport java.io.Serializable;
True,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,19,import org.apache.commons.math.FunctionEvaluationException;
True,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,21,import org.apache.commons.math.analysis.UnivariateRealFunction;
False,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,29,ublic class FastHadamardTransformer implements Serializable {
True,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,29,public class FastHadamardTransformer implements RealTransformer {
False,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,32,rivate static final long serialVersionUID = 5044269102877526860L;
True,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,32,private static final long serialVersionUID = -710169279109099264L;
False,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,35, Wrapper method for fht() for double vectors
False,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,37, @param x input vector
False,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,38, @return y output vector
False,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,39, @throws IllegalArgumentException
False,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,41,ublic double[] transform(double x[]) throws IllegalArgumentException {
False,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,42,eturn fht(x);
True,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,34,/** {@inheritDoc} */
True,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,35,public double[] transform(double f[]) throws IllegalArgumentException {
True,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,36,return fht(f);
True,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,39,/** {@inheritDoc} */
True,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,40,"public double[] transform(UnivariateRealFunction f,"
True,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,41,"double min, double max, int n)"
True,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,42,"throws FunctionEvaluationException, IllegalArgumentException {"
True,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,43,"return fht(FastFourierTransformer.sample(f, min, max, n));"
True,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,46,/** {@inheritDoc} */
True,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,47,public double[] inversetransform(double f[])
True,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,48,throws IllegalArgumentException {
True,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,49,return fht(f);
True,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,52,/** {@inheritDoc} */
True,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,53,"public double[] inversetransform(UnivariateRealFunction f,"
True,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,54,"double min, double max, int n)"
True,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,55,"throws FunctionEvaluationException, IllegalArgumentException {"
True,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,56,"return fht(FastFourierTransformer.sample(f, min, max, n));"
False,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,126,nt n = x.length;
True,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,139,final int n     = x.length;
True,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,140,final int halfN = n / 2;
False,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,129,nt p    = 0;
False,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,130,nt twoP = 1;
False,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,131,hile (twoP < n) {
False,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,132,+p;
False,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,133,woP *= 2;
False,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,135,f (n != twoP) {
True,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,143,if (!FastFourierTransformer.isPowerOf2(n)) {
False,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,146,or (int j = 0; j < p; j++) {
True,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,154,for (int j = 1; j < n; j <<= 1) {
False,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,154,or (int i = 0; i < n; i++) {
False,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,155,f (i < n / 2) {
False,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,156,/ D<sub>top</sub>
False,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,157,/ The top part works with addition
False,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,158,Current[i] = yPrevious[i*2] + yPrevious[i*2 +1];
False,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,159, else {
False,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,160,/ D<sub>bottom</sub>
False,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,161,/ The bottom part works with subtraction
False,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,162,Current[i] = yPrevious[(i-n/2)*2] - yPrevious[(i-n/2)*2 +1];
True,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,162,for (int i = 0; i < halfN; ++i) {
True,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,163,// D<sub>top</sub>
True,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,164,// The top part works with addition
True,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,165,final int twoI = 2 * i;
True,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,166,yCurrent[i] = yPrevious[twoI] + yPrevious[twoI + 1];
True,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,168,for (int i = halfN; i < n; ++i) {
True,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,169,// D<sub>bottom</sub>
True,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,170,// The bottom part works with subtraction
True,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,171,final int twoI = 2 * i;
True,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,src/java/org/apache/commons/math/transform/FastHadamardTransformer.java,172,yCurrent[i] = yPrevious[twoI - n] - yPrevious[twoI - n + 1];
False,src/java/org/apache/commons/math/transform/FastSineTransformer.java,src/java/org/apache/commons/math/transform/FastSineTransformer.java,19,mport java.io.Serializable;
False,src/java/org/apache/commons/math/transform/FastSineTransformer.java,src/java/org/apache/commons/math/transform/FastSineTransformer.java,22,mport org.apache.commons.math.MathException;
True,src/java/org/apache/commons/math/transform/FastSineTransformer.java,src/java/org/apache/commons/math/transform/FastSineTransformer.java,21,import org.apache.commons.math.FunctionEvaluationException;
True,src/java/org/apache/commons/math/transform/FastSineTransformer.java,src/java/org/apache/commons/math/transform/FastSineTransformer.java,22,import org.apache.commons.math.MathRuntimeException;
False,src/java/org/apache/commons/math/transform/FastSineTransformer.java,src/java/org/apache/commons/math/transform/FastSineTransformer.java,40,ublic class FastSineTransformer implements Serializable {
True,src/java/org/apache/commons/math/transform/FastSineTransformer.java,src/java/org/apache/commons/math/transform/FastSineTransformer.java,40,public class FastSineTransformer implements RealTransformer {
False,src/java/org/apache/commons/math/transform/FastSineTransformer.java,src/java/org/apache/commons/math/transform/FastSineTransformer.java,43,tatic final long serialVersionUID = -478002039949390854L;
True,src/java/org/apache/commons/math/transform/FastSineTransformer.java,src/java/org/apache/commons/math/transform/FastSineTransformer.java,43,private static final long serialVersionUID = -7557024407476823001L;
False,src/java/org/apache/commons/math/transform/FastSineTransformer.java,src/java/org/apache/commons/math/transform/FastSineTransformer.java,60, @throws MathException if any math-related errors occur
False,src/java/org/apache/commons/math/transform/FastSineTransformer.java,src/java/org/apache/commons/math/transform/FastSineTransformer.java,63,"ublic double[] transform(double f[]) throws MathException,"
False,src/java/org/apache/commons/math/transform/FastSineTransformer.java,src/java/org/apache/commons/math/transform/FastSineTransformer.java,64,llegalArgumentException {
True,src/java/org/apache/commons/math/transform/FastSineTransformer.java,src/java/org/apache/commons/math/transform/FastSineTransformer.java,62,public double[] transform(double f[])
True,src/java/org/apache/commons/math/transform/FastSineTransformer.java,src/java/org/apache/commons/math/transform/FastSineTransformer.java,63,throws IllegalArgumentException {
False,src/java/org/apache/commons/math/transform/FastSineTransformer.java,src/java/org/apache/commons/math/transform/FastSineTransformer.java,80, @throws MathException if any math-related errors occur
True,src/java/org/apache/commons/math/transform/FastSineTransformer.java,src/java/org/apache/commons/math/transform/FastSineTransformer.java,78,* @throws FunctionEvaluationException if function cannot be evaluated
True,src/java/org/apache/commons/math/transform/FastSineTransformer.java,src/java/org/apache/commons/math/transform/FastSineTransformer.java,79,* at some point
False,src/java/org/apache/commons/math/transform/FastSineTransformer.java,src/java/org/apache/commons/math/transform/FastSineTransformer.java,83,ublic double[] transform(
False,src/java/org/apache/commons/math/transform/FastSineTransformer.java,src/java/org/apache/commons/math/transform/FastSineTransformer.java,84,"nivariateRealFunction f, double min, double max, int n)"
False,src/java/org/apache/commons/math/transform/FastSineTransformer.java,src/java/org/apache/commons/math/transform/FastSineTransformer.java,85,"hrows MathException, IllegalArgumentException {"
True,src/java/org/apache/commons/math/transform/FastSineTransformer.java,src/java/org/apache/commons/math/transform/FastSineTransformer.java,82,"public double[] transform(UnivariateRealFunction f,"
True,src/java/org/apache/commons/math/transform/FastSineTransformer.java,src/java/org/apache/commons/math/transform/FastSineTransformer.java,83,"double min, double max, int n)"
True,src/java/org/apache/commons/math/transform/FastSineTransformer.java,src/java/org/apache/commons/math/transform/FastSineTransformer.java,84,"throws FunctionEvaluationException, IllegalArgumentException {"
False,src/java/org/apache/commons/math/transform/FastSineTransformer.java,src/java/org/apache/commons/math/transform/FastSineTransformer.java,100, @throws MathException if any math-related errors occur
False,src/java/org/apache/commons/math/transform/FastSineTransformer.java,src/java/org/apache/commons/math/transform/FastSineTransformer.java,103,"ublic double[] transform2(double f[]) throws MathException,"
False,src/java/org/apache/commons/math/transform/FastSineTransformer.java,src/java/org/apache/commons/math/transform/FastSineTransformer.java,104,llegalArgumentException {
True,src/java/org/apache/commons/math/transform/FastSineTransformer.java,src/java/org/apache/commons/math/transform/FastSineTransformer.java,101,public double[] transform2(double f[]) throws IllegalArgumentException {
False,src/java/org/apache/commons/math/transform/FastSineTransformer.java,src/java/org/apache/commons/math/transform/FastSineTransformer.java,121, @throws MathException if any math-related errors occur
True,src/java/org/apache/commons/math/transform/FastSineTransformer.java,src/java/org/apache/commons/math/transform/FastSineTransformer.java,118,* @throws FunctionEvaluationException if function cannot be evaluated
True,src/java/org/apache/commons/math/transform/FastSineTransformer.java,src/java/org/apache/commons/math/transform/FastSineTransformer.java,119,* at some point
False,src/java/org/apache/commons/math/transform/FastSineTransformer.java,src/java/org/apache/commons/math/transform/FastSineTransformer.java,126,"hrows MathException, IllegalArgumentException {"
True,src/java/org/apache/commons/math/transform/FastSineTransformer.java,src/java/org/apache/commons/math/transform/FastSineTransformer.java,124,"throws FunctionEvaluationException, IllegalArgumentException {"
False,src/java/org/apache/commons/math/transform/FastSineTransformer.java,src/java/org/apache/commons/math/transform/FastSineTransformer.java,142, @throws MathException if any math-related errors occur
False,src/java/org/apache/commons/math/transform/FastSineTransformer.java,src/java/org/apache/commons/math/transform/FastSineTransformer.java,145,"ublic double[] inversetransform(double f[]) throws MathException,"
False,src/java/org/apache/commons/math/transform/FastSineTransformer.java,src/java/org/apache/commons/math/transform/FastSineTransformer.java,146,llegalArgumentException {
True,src/java/org/apache/commons/math/transform/FastSineTransformer.java,src/java/org/apache/commons/math/transform/FastSineTransformer.java,142,public double[] inversetransform(double f[]) throws IllegalArgumentException {
False,src/java/org/apache/commons/math/transform/FastSineTransformer.java,src/java/org/apache/commons/math/transform/FastSineTransformer.java,163, @throws MathException if any math-related errors occur
True,src/java/org/apache/commons/math/transform/FastSineTransformer.java,src/java/org/apache/commons/math/transform/FastSineTransformer.java,159,* @throws FunctionEvaluationException if function cannot be evaluated
True,src/java/org/apache/commons/math/transform/FastSineTransformer.java,src/java/org/apache/commons/math/transform/FastSineTransformer.java,160,* at some point
False,src/java/org/apache/commons/math/transform/FastSineTransformer.java,src/java/org/apache/commons/math/transform/FastSineTransformer.java,166,ublic double[] inversetransform(
False,src/java/org/apache/commons/math/transform/FastSineTransformer.java,src/java/org/apache/commons/math/transform/FastSineTransformer.java,167,"nivariateRealFunction f, double min, double max, int n)"
False,src/java/org/apache/commons/math/transform/FastSineTransformer.java,src/java/org/apache/commons/math/transform/FastSineTransformer.java,168,"hrows MathException, IllegalArgumentException {"
True,src/java/org/apache/commons/math/transform/FastSineTransformer.java,src/java/org/apache/commons/math/transform/FastSineTransformer.java,163,"public double[] inversetransform(UnivariateRealFunction f, double min, double max, int n)"
True,src/java/org/apache/commons/math/transform/FastSineTransformer.java,src/java/org/apache/commons/math/transform/FastSineTransformer.java,164,"throws FunctionEvaluationException, IllegalArgumentException {"
False,src/java/org/apache/commons/math/transform/FastSineTransformer.java,src/java/org/apache/commons/math/transform/FastSineTransformer.java,184, @throws MathException if any math-related errors occur
False,src/java/org/apache/commons/math/transform/FastSineTransformer.java,src/java/org/apache/commons/math/transform/FastSineTransformer.java,187,"ublic double[] inversetransform2(double f[]) throws MathException,"
False,src/java/org/apache/commons/math/transform/FastSineTransformer.java,src/java/org/apache/commons/math/transform/FastSineTransformer.java,188,llegalArgumentException {
True,src/java/org/apache/commons/math/transform/FastSineTransformer.java,src/java/org/apache/commons/math/transform/FastSineTransformer.java,182,public double[] inversetransform2(double f[]) throws IllegalArgumentException {
False,src/java/org/apache/commons/math/transform/FastSineTransformer.java,src/java/org/apache/commons/math/transform/FastSineTransformer.java,204, @throws MathException if any math-related errors occur
True,src/java/org/apache/commons/math/transform/FastSineTransformer.java,src/java/org/apache/commons/math/transform/FastSineTransformer.java,198,* @throws FunctionEvaluationException if function cannot be evaluated
True,src/java/org/apache/commons/math/transform/FastSineTransformer.java,src/java/org/apache/commons/math/transform/FastSineTransformer.java,199,* at some point
False,src/java/org/apache/commons/math/transform/FastSineTransformer.java,src/java/org/apache/commons/math/transform/FastSineTransformer.java,207,ublic double[] inversetransform2(
False,src/java/org/apache/commons/math/transform/FastSineTransformer.java,src/java/org/apache/commons/math/transform/FastSineTransformer.java,208,"nivariateRealFunction f, double min, double max, int n)"
False,src/java/org/apache/commons/math/transform/FastSineTransformer.java,src/java/org/apache/commons/math/transform/FastSineTransformer.java,209,"hrows MathException, IllegalArgumentException {"
True,src/java/org/apache/commons/math/transform/FastSineTransformer.java,src/java/org/apache/commons/math/transform/FastSineTransformer.java,202,"public double[] inversetransform2(UnivariateRealFunction f, double min, double max, int n)"
True,src/java/org/apache/commons/math/transform/FastSineTransformer.java,src/java/org/apache/commons/math/transform/FastSineTransformer.java,203,"throws FunctionEvaluationException, IllegalArgumentException {"
False,src/java/org/apache/commons/math/transform/FastSineTransformer.java,src/java/org/apache/commons/math/transform/FastSineTransformer.java,219, @throws MathException if any math-related errors occur
False,src/java/org/apache/commons/math/transform/FastSineTransformer.java,src/java/org/apache/commons/math/transform/FastSineTransformer.java,222,"rotected double[] fst(double f[]) throws MathException,"
False,src/java/org/apache/commons/math/transform/FastSineTransformer.java,src/java/org/apache/commons/math/transform/FastSineTransformer.java,223,llegalArgumentException {
True,src/java/org/apache/commons/math/transform/FastSineTransformer.java,src/java/org/apache/commons/math/transform/FastSineTransformer.java,215,protected double[] fst(double f[]) throws IllegalArgumentException {
False,src/java/org/apache/commons/math/transform/FastSineTransformer.java,src/java/org/apache/commons/math/transform/FastSineTransformer.java,229,hrow new IllegalArgumentException
False,src/java/org/apache/commons/math/transform/FastSineTransformer.java,src/java/org/apache/commons/math/transform/FastSineTransformer.java,230,"""The first element is not zero: "" + f[0]);"
True,src/java/org/apache/commons/math/transform/FastSineTransformer.java,src/java/org/apache/commons/math/transform/FastSineTransformer.java,221,"throw MathRuntimeException.createIllegalArgumentException(""first element is not 0: {0}"","
True,src/java/org/apache/commons/math/transform/FastSineTransformer.java,src/java/org/apache/commons/math/transform/FastSineTransformer.java,222,new Object[] { f[0] });
True,src/java/org/apache/commons/math/transform/RealTransformer.java,src/java/org/apache/commons/math/transform/RealTransformer.java,1,package org.apache.commons.math.transform;
True,src/java/org/apache/commons/math/transform/RealTransformer.java,src/java/org/apache/commons/math/transform/RealTransformer.java,3,import java.io.Serializable;
True,src/java/org/apache/commons/math/transform/RealTransformer.java,src/java/org/apache/commons/math/transform/RealTransformer.java,5,import org.apache.commons.math.FunctionEvaluationException;
True,src/java/org/apache/commons/math/transform/RealTransformer.java,src/java/org/apache/commons/math/transform/RealTransformer.java,6,import org.apache.commons.math.analysis.UnivariateRealFunction;
True,src/java/org/apache/commons/math/transform/RealTransformer.java,src/java/org/apache/commons/math/transform/RealTransformer.java,7,import org.apache.commons.math.complex.Complex;
True,src/java/org/apache/commons/math/transform/RealTransformer.java,src/java/org/apache/commons/math/transform/RealTransformer.java,10,* Interface for one-dimensional data sets transformations producing real results.
True,src/java/org/apache/commons/math/transform/RealTransformer.java,src/java/org/apache/commons/math/transform/RealTransformer.java,11,"* <p>Such transforms include {@link FastSineTransformer sine transform},"
True,src/java/org/apache/commons/math/transform/RealTransformer.java,src/java/org/apache/commons/math/transform/RealTransformer.java,12,* {@link FastCosineTransformer cosine transform} or {@link
True,src/java/org/apache/commons/math/transform/RealTransformer.java,src/java/org/apache/commons/math/transform/RealTransformer.java,13,* FastHadamardTransformer Hadamard transform}. {@link FastFourierTransformer
True,src/java/org/apache/commons/math/transform/RealTransformer.java,src/java/org/apache/commons/math/transform/RealTransformer.java,14,* Fourier transform} is of a different kind and does not implement this
True,src/java/org/apache/commons/math/transform/RealTransformer.java,src/java/org/apache/commons/math/transform/RealTransformer.java,15,* interface since it produces {@link Complex complex} results instead of real
True,src/java/org/apache/commons/math/transform/RealTransformer.java,src/java/org/apache/commons/math/transform/RealTransformer.java,16,* ones.
True,src/java/org/apache/commons/math/transform/RealTransformer.java,src/java/org/apache/commons/math/transform/RealTransformer.java,17,* </p>
True,src/java/org/apache/commons/math/transform/RealTransformer.java,src/java/org/apache/commons/math/transform/RealTransformer.java,18,* @version $Revision$ $Date$
True,src/java/org/apache/commons/math/transform/RealTransformer.java,src/java/org/apache/commons/math/transform/RealTransformer.java,19,* @since 2.0
True,src/java/org/apache/commons/math/transform/RealTransformer.java,src/java/org/apache/commons/math/transform/RealTransformer.java,21,public interface RealTransformer extends Serializable {
True,src/java/org/apache/commons/math/transform/RealTransformer.java,src/java/org/apache/commons/math/transform/RealTransformer.java,24,* Transform the given real data set.
True,src/java/org/apache/commons/math/transform/RealTransformer.java,src/java/org/apache/commons/math/transform/RealTransformer.java,25,* @param f the real data array to be transformed (signal)
True,src/java/org/apache/commons/math/transform/RealTransformer.java,src/java/org/apache/commons/math/transform/RealTransformer.java,26,* @return the real transformed array (spectrum)
True,src/java/org/apache/commons/math/transform/RealTransformer.java,src/java/org/apache/commons/math/transform/RealTransformer.java,27,* @throws IllegalArgumentException if any parameters are invalid
True,src/java/org/apache/commons/math/transform/RealTransformer.java,src/java/org/apache/commons/math/transform/RealTransformer.java,29,double[] transform(double f[])
True,src/java/org/apache/commons/math/transform/RealTransformer.java,src/java/org/apache/commons/math/transform/RealTransformer.java,30,throws IllegalArgumentException;
True,src/java/org/apache/commons/math/transform/RealTransformer.java,src/java/org/apache/commons/math/transform/RealTransformer.java,33,"* Transform the given real function, sampled on the given interval."
True,src/java/org/apache/commons/math/transform/RealTransformer.java,src/java/org/apache/commons/math/transform/RealTransformer.java,34,* @param f the function to be sampled and transformed
True,src/java/org/apache/commons/math/transform/RealTransformer.java,src/java/org/apache/commons/math/transform/RealTransformer.java,35,* @param min the lower bound for the interval
True,src/java/org/apache/commons/math/transform/RealTransformer.java,src/java/org/apache/commons/math/transform/RealTransformer.java,36,* @param max the upper bound for the interval
True,src/java/org/apache/commons/math/transform/RealTransformer.java,src/java/org/apache/commons/math/transform/RealTransformer.java,37,* @param n the number of sample points
True,src/java/org/apache/commons/math/transform/RealTransformer.java,src/java/org/apache/commons/math/transform/RealTransformer.java,38,* @return the real transformed array
True,src/java/org/apache/commons/math/transform/RealTransformer.java,src/java/org/apache/commons/math/transform/RealTransformer.java,39,* @throws FunctionEvaluationException if function cannot be evaluated
True,src/java/org/apache/commons/math/transform/RealTransformer.java,src/java/org/apache/commons/math/transform/RealTransformer.java,40,* at some point
True,src/java/org/apache/commons/math/transform/RealTransformer.java,src/java/org/apache/commons/math/transform/RealTransformer.java,41,* @throws IllegalArgumentException if any parameters are invalid
True,src/java/org/apache/commons/math/transform/RealTransformer.java,src/java/org/apache/commons/math/transform/RealTransformer.java,43,"double[] transform(UnivariateRealFunction f, double min, double max, int n)"
True,src/java/org/apache/commons/math/transform/RealTransformer.java,src/java/org/apache/commons/math/transform/RealTransformer.java,44,"throws FunctionEvaluationException, IllegalArgumentException;"
True,src/java/org/apache/commons/math/transform/RealTransformer.java,src/java/org/apache/commons/math/transform/RealTransformer.java,47,* Inversely transform the given real data set.
True,src/java/org/apache/commons/math/transform/RealTransformer.java,src/java/org/apache/commons/math/transform/RealTransformer.java,48,* @param f the real data array to be inversely transformed (spectrum)
True,src/java/org/apache/commons/math/transform/RealTransformer.java,src/java/org/apache/commons/math/transform/RealTransformer.java,49,* @return the real inversely transformed array (signal)
True,src/java/org/apache/commons/math/transform/RealTransformer.java,src/java/org/apache/commons/math/transform/RealTransformer.java,50,* @throws IllegalArgumentException if any parameters are invalid
True,src/java/org/apache/commons/math/transform/RealTransformer.java,src/java/org/apache/commons/math/transform/RealTransformer.java,52,public abstract double[] inversetransform(double f[])
True,src/java/org/apache/commons/math/transform/RealTransformer.java,src/java/org/apache/commons/math/transform/RealTransformer.java,53,throws IllegalArgumentException;
True,src/java/org/apache/commons/math/transform/RealTransformer.java,src/java/org/apache/commons/math/transform/RealTransformer.java,56,"* Inversely transform the given real function, sampled on the given interval."
True,src/java/org/apache/commons/math/transform/RealTransformer.java,src/java/org/apache/commons/math/transform/RealTransformer.java,57,* @param f the function to be sampled and inversely transformed
True,src/java/org/apache/commons/math/transform/RealTransformer.java,src/java/org/apache/commons/math/transform/RealTransformer.java,58,* @param min the lower bound for the interval
True,src/java/org/apache/commons/math/transform/RealTransformer.java,src/java/org/apache/commons/math/transform/RealTransformer.java,59,* @param max the upper bound for the interval
True,src/java/org/apache/commons/math/transform/RealTransformer.java,src/java/org/apache/commons/math/transform/RealTransformer.java,60,* @param n the number of sample points
True,src/java/org/apache/commons/math/transform/RealTransformer.java,src/java/org/apache/commons/math/transform/RealTransformer.java,61,* @return the real inversely transformed array
True,src/java/org/apache/commons/math/transform/RealTransformer.java,src/java/org/apache/commons/math/transform/RealTransformer.java,62,* @throws FunctionEvaluationException if function cannot be evaluated
True,src/java/org/apache/commons/math/transform/RealTransformer.java,src/java/org/apache/commons/math/transform/RealTransformer.java,63,* at some point
True,src/java/org/apache/commons/math/transform/RealTransformer.java,src/java/org/apache/commons/math/transform/RealTransformer.java,64,* @throws IllegalArgumentException if any parameters are invalid
True,src/java/org/apache/commons/math/transform/RealTransformer.java,src/java/org/apache/commons/math/transform/RealTransformer.java,66,"double[] inversetransform(UnivariateRealFunction f, double min, double max, int n)"
True,src/java/org/apache/commons/math/transform/RealTransformer.java,src/java/org/apache/commons/math/transform/RealTransformer.java,67,"throws FunctionEvaluationException, IllegalArgumentException;"
