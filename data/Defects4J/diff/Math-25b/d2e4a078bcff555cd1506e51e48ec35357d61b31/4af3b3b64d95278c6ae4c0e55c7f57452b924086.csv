is_addition,old_file_path,new_file_path,line_num,content
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,4, this work for additional information regarding copyright ownership.
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,7, the License.  You may obtain a copy of the License at
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,9,      http://www.apache.org/licenses/LICENSE-2.0
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,14, See the License for the specific language governing permissions and
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,15, limitations under the License.
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,18,mport org.apache.commons.math3.optimization.general.EstimationException;
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,19,mport org.apache.commons.math3.optimization.general.EstimatedParameter;
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,20,mport org.apache.commons.math3.optimization.general.EstimationProblem;
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,21,mport org.apache.commons.math3.optimization.general.LevenbergMarquardtEstimator;
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,22,mport org.apache.commons.math3.optimization.general.SimpleEstimationProblem;
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,23,mport org.apache.commons.math3.optimization.general.WeightedMeasurement;
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,25,ublic class TrajectoryDeterminationProblem extends SimpleEstimationProblem {
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,27,ublic static void main(String[] args) {
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,28,ry {
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,29,rajectoryDeterminationProblem problem =
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,30,"ew TrajectoryDeterminationProblem(0.0, 100.0, 800.0, 1.0, 0.0);"
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,32,ouble[][] distances = {
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,33,"   0.0, 806.5849 }, {  20.0, 796.8148 }, {  40.0, 791.0833 }, {  60.0, 789.6712 },"
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,34,"  80.0, 793.1334 }, { 100.0, 797.7248 }, { 120.0, 803.2785 }, { 140.0, 813.4939 },"
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,35," 160.0, 826.9295 }, { 180.0, 844.0640 }, { 200.0, 863.3829 }, { 220.0, 883.3143 },"
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,36," 240.0, 908.6867 }, { 260.0, 934.8561 }, { 280.0, 964.0730 }, { 300.0, 992.1033 },"
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,37," 320.0, 1023.998 }, { 340.0, 1057.439 }, { 360.0, 1091.912 }, { 380.0, 1125.968 },"
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,38," 400.0, 1162.789 }, { 420.0, 1201.517 }, { 440.0, 1239.176 }, { 460.0, 1279.347 } };"
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,39,or (int i = 0; i < distances.length; ++i) {
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,40,"roblem.addDistanceMeasurement(1.0,  distances[i][0], distances[i][1]);"
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,43,ouble[][] angles = {
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,44," 10.0, 1.415423 }, { 30.0, 1.352643 }, { 50.0, 1.289290 }, { 70.0, 1.225249 },"
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,45," 90.0, 1.161203 }, {110.0, 1.098538 }, {130.0, 1.036263 }, {150.0, 0.976052 },"
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,46,"170.0, 0.917921 }, {190.0, 0.861830 }, {210.0, 0.808237 }, {230.0, 0.757043 },"
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,47,"250.0, 0.708650 }, {270.0, 0.662949 }, {290.0, 0.619903 }, {310.0, 0.579160 },"
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,48,"330.0, 0.541033 }, {350.0, 0.505590 }, {370.0, 0.471746 }, {390.0, 0.440155 },"
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,49,"410.0, 0.410522 }, {430.0, 0.382701 }, {450.0, 0.356957 }, {470.0, 0.332400 } };"
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,50,or (int i = 0; i < angles.length; ++i) {
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,51,"roblem.addAngularMeasurement(3.0e7, angles[i][0], angles[i][1]);"
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,54,evenbergMarquardtEstimator estimator = new LevenbergMarquardtEstimator();
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,55,stimator.estimate(problem);
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,56,"ystem.out.println(""initial position: "" + problem.getX0() + "" "" + problem.getY0());"
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,57,"ystem.out.println(""velocity: "" + problem.getVx0() + "" "" + problem.getVy0());"
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,59, catch (EstimationException ee) {
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,60,ystem.err.println(ee.getMessage());
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,64,"ublic TrajectoryDeterminationProblem(double t0,"
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,65,"ouble  x0Guess, double  y0Guess,"
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,66,"ouble vx0Guess, double vy0Guess) {"
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,67,his.t0 = t0;
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,68,"0 = new EstimatedParameter( ""x0"",  x0Guess);"
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,69,"0 = new EstimatedParameter( ""y0"",  y0Guess);"
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,70,"x0 = new EstimatedParameter(""vx0"", vx0Guess);"
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,71,"y0 = new EstimatedParameter(""vy0"", vy0Guess);"
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,73,/ inform the base class about the parameters
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,74,ddParameter(x0);
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,75,ddParameter(y0);
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,76,ddParameter(vx0);
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,77,ddParameter(vy0);
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,81,ublic double getX0() {
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,82,eturn x0.getEstimate();
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,85,ublic double getY0() {
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,86,eturn y0.getEstimate();
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,89,ublic double getVx0() {
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,90,eturn vx0.getEstimate();
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,93,ublic double getVy0() {
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,94,eturn vy0.getEstimate();
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,97,"ublic void addAngularMeasurement(double wi, double ti, double ai) {"
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,98,/ let the base class handle the measurement
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,99,"ddMeasurement(new AngularMeasurement(wi, ti, ai));"
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,102,"ublic void addDistanceMeasurement(double wi, double ti, double di) {"
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,103,/ let the base class handle the measurement
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,104,"ddMeasurement(new DistanceMeasurement(wi, ti, di));"
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,107,ublic double x(double t) {
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,108,eturn x0.getEstimate() + (t - t0) * vx0.getEstimate();
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,111,ublic double y(double t) {
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,112,eturn y0.getEstimate() + (t - t0) * vy0.getEstimate();
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,115,rivate class AngularMeasurement extends WeightedMeasurement {
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,117,"ublic AngularMeasurement(double weight, double t, double angle) {"
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,118,"uper(weight, angle);"
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,119,his.t = t;
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,122,ublic double getTheoreticalValue() {
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,123,"eturn Math.atan2(y(t), x(t));"
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,126,ublic double getPartial(EstimatedParameter parameter) {
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,127,ouble xt = x(t);
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,128,ouble yt = y(t);
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,129,ouble r  = Math.sqrt(xt * xt + yt * yt);
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,130,ouble u  = yt / (r + xt);
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,131,ouble c  = 2 * u / (1 + u * u);
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,132,f (parameter == x0) {
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,133,eturn -c;
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,134, else if (parameter == vx0) {
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,135,eturn -c * t;
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,136, else if (parameter == y0) {
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,137,eturn c * xt / yt;
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,138, else {
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,139,eturn c * t * xt / yt;
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,143,rivate final double t;
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,144,rivate static final long serialVersionUID = -5990040582592763282L;
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,148,rivate class DistanceMeasurement extends WeightedMeasurement {
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,150,"ublic DistanceMeasurement(double weight, double t, double angle) {"
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,151,"uper(weight, angle);"
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,152,his.t = t;
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,155,ublic double getTheoreticalValue() {
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,156,ouble xt = x(t);
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,157,ouble yt = y(t);
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,158,eturn Math.sqrt(xt * xt + yt * yt);
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,161,ublic double getPartial(EstimatedParameter parameter) {
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,162,ouble xt = x(t);
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,163,ouble yt = y(t);
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,164,ouble r  = Math.sqrt(xt * xt + yt * yt);
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,165,f (parameter == x0) {
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,166,eturn xt / r;
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,167, else if (parameter == vx0) {
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,168,eturn xt * t / r;
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,169, else if (parameter == y0) {
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,170,eturn yt / r;
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,171, else {
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,172,eturn yt * t / r;
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,176,rivate final double t;
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,177,rivate static final long serialVersionUID = 3257286197740459503L;
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,181,rivate double t0;
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,182,rivate EstimatedParameter x0;
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,183,rivate EstimatedParameter y0;
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,184,rivate EstimatedParameter vx0;
False,src/site/resources/userguide/TrajectoryDeterminationProblem.java,src/site/resources/userguide/TrajectoryDeterminationProblem.java,185,rivate EstimatedParameter vy0;
