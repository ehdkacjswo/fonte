is_addition,old_file_path,new_file_path,line_num,content
False,src/test/org/apache/commons/math/ode/nonstiff/AdamsIntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/AdamsIntegratorTest.java,34,mport org.junit.Ignore;
False,src/test/org/apache/commons/math/ode/nonstiff/AdamsIntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/AdamsIntegratorTest.java,40,Ignore
False,src/test/org/apache/commons/math/ode/nonstiff/AdamsIntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/AdamsIntegratorTest.java,52,or (int k = 3; k < problems.length; ++k) {
True,src/test/org/apache/commons/math/ode/nonstiff/AdamsIntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/AdamsIntegratorTest.java,50,for (int k = 0; k < problems.length; ++k) {
False,src/test/org/apache/commons/math/ode/nonstiff/AdamsIntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/AdamsIntegratorTest.java,87,Ignore
False,src/test/org/apache/commons/math/ode/nonstiff/AdamsIntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/AdamsIntegratorTest.java,108,Ignore
False,src/test/org/apache/commons/math/ode/nonstiff/AdamsIntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/AdamsIntegratorTest.java,128,Ignore
False,src/test/org/apache/commons/math/ode/nonstiff/AdamsIntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/AdamsIntegratorTest.java,147,Ignore
False,src/test/org/apache/commons/math/ode/nonstiff/AdamsIntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/AdamsIntegratorTest.java,170,Ignore
False,src/test/org/apache/commons/math/ode/nonstiff/AdamsIntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/AdamsIntegratorTest.java,197,Ignore
False,src/test/org/apache/commons/math/ode/nonstiff/AdamsIntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/AdamsIntegratorTest.java,207,Ignore
False,src/test/org/apache/commons/math/ode/nonstiff/AdamsIntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/AdamsIntegratorTest.java,247,Ignore
False,src/test/org/apache/commons/math/ode/nonstiff/AdamsIntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/AdamsIntegratorTest.java,269,Ignore
False,src/test/org/apache/commons/math/ode/nonstiff/AdamsIntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/AdamsIntegratorTest.java,288,Ignore
False,src/test/org/apache/commons/math/ode/nonstiff/AdamsIntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/AdamsIntegratorTest.java,308,Ignore
False,src/test/org/apache/commons/math/ode/nonstiff/AdamsIntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/AdamsIntegratorTest.java,327,Test
False,src/test/org/apache/commons/math/ode/nonstiff/AdamsIntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/AdamsIntegratorTest.java,328,Ignore
False,src/test/org/apache/commons/math/ode/nonstiff/AdamsIntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/AdamsIntegratorTest.java,329,ublic void comparison()
False,src/test/org/apache/commons/math/ode/nonstiff/AdamsIntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/AdamsIntegratorTest.java,330,"hrows DerivativeException, IntegratorException {"
False,src/test/org/apache/commons/math/ode/nonstiff/AdamsIntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/AdamsIntegratorTest.java,331,estProblem3 pb = new TestProblem3(0.9);
False,src/test/org/apache/commons/math/ode/nonstiff/AdamsIntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/AdamsIntegratorTest.java,332,ouble range = Math.abs(pb.getFinalTime() - pb.getInitialTime());
False,src/test/org/apache/commons/math/ode/nonstiff/AdamsIntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/AdamsIntegratorTest.java,333,irstOrderIntegrator dp853 =
False,src/test/org/apache/commons/math/ode/nonstiff/AdamsIntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/AdamsIntegratorTest.java,334,"ew DormandPrince853Integrator(0, range, 1.0e-8, 1.0e-8);"
False,src/test/org/apache/commons/math/ode/nonstiff/AdamsIntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/AdamsIntegratorTest.java,335,ontinuousOutputModel model1 = new ContinuousOutputModel();
False,src/test/org/apache/commons/math/ode/nonstiff/AdamsIntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/AdamsIntegratorTest.java,336,p853.addStepHandler(model1);
False,src/test/org/apache/commons/math/ode/nonstiff/AdamsIntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/AdamsIntegratorTest.java,337,"p853.integrate(pb, pb.getInitialTime(), pb.getInitialState(),"
False,src/test/org/apache/commons/math/ode/nonstiff/AdamsIntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/AdamsIntegratorTest.java,338,"b.getFinalTime(), new double[pb.getDimension()]);"
False,src/test/org/apache/commons/math/ode/nonstiff/AdamsIntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/AdamsIntegratorTest.java,339,"damsIntegrator ab8 = new AdamsIntegrator(8, false, range / 100.0);"
False,src/test/org/apache/commons/math/ode/nonstiff/AdamsIntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/AdamsIntegratorTest.java,340,b8.setStarterIntegrator(dp853);
False,src/test/org/apache/commons/math/ode/nonstiff/AdamsIntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/AdamsIntegratorTest.java,341,ontinuousOutputModel model2 = new ContinuousOutputModel();
False,src/test/org/apache/commons/math/ode/nonstiff/AdamsIntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/AdamsIntegratorTest.java,342,b8.addStepHandler(model2);
False,src/test/org/apache/commons/math/ode/nonstiff/AdamsIntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/AdamsIntegratorTest.java,343,"b8.integrate(pb, pb.getInitialTime(), pb.getInitialState(),"
False,src/test/org/apache/commons/math/ode/nonstiff/AdamsIntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/AdamsIntegratorTest.java,344,"b.getFinalTime(), new double[pb.getDimension()]);"
False,src/test/org/apache/commons/math/ode/nonstiff/AdamsIntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/AdamsIntegratorTest.java,345,"damsIntegrator am8 = new AdamsIntegrator(8, true, range / 100.0);"
False,src/test/org/apache/commons/math/ode/nonstiff/AdamsIntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/AdamsIntegratorTest.java,346,m8.setStarterIntegrator(dp853);
False,src/test/org/apache/commons/math/ode/nonstiff/AdamsIntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/AdamsIntegratorTest.java,347,ontinuousOutputModel model3 = new ContinuousOutputModel();
False,src/test/org/apache/commons/math/ode/nonstiff/AdamsIntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/AdamsIntegratorTest.java,348,m8.addStepHandler(model3);
False,src/test/org/apache/commons/math/ode/nonstiff/AdamsIntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/AdamsIntegratorTest.java,349,"m8.integrate(pb, pb.getInitialTime(), pb.getInitialState(),"
False,src/test/org/apache/commons/math/ode/nonstiff/AdamsIntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/AdamsIntegratorTest.java,350,"b.getFinalTime(), new double[pb.getDimension()]);"
False,src/test/org/apache/commons/math/ode/nonstiff/AdamsIntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/AdamsIntegratorTest.java,351,or (double t = pb.getInitialTime(); t < pb.getFinalTime(); t += 1.0e-3 * range) {
False,src/test/org/apache/commons/math/ode/nonstiff/AdamsIntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/AdamsIntegratorTest.java,352,odel1.setInterpolatedTime(t);
False,src/test/org/apache/commons/math/ode/nonstiff/AdamsIntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/AdamsIntegratorTest.java,353,odel2.setInterpolatedTime(t);
False,src/test/org/apache/commons/math/ode/nonstiff/AdamsIntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/AdamsIntegratorTest.java,354,odel3.setInterpolatedTime(t);
False,src/test/org/apache/commons/math/ode/nonstiff/AdamsIntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/AdamsIntegratorTest.java,355,"ystem.out.println(t + "" "" +"
False,src/test/org/apache/commons/math/ode/nonstiff/AdamsIntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/AdamsIntegratorTest.java,356,"b.computeTheoreticalState(t)[0] + "" "" +"
False,src/test/org/apache/commons/math/ode/nonstiff/AdamsIntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/AdamsIntegratorTest.java,357,"model1.getInterpolatedState()[0]-pb.computeTheoreticalState(t)[0]) + "" "" +"
False,src/test/org/apache/commons/math/ode/nonstiff/AdamsIntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/AdamsIntegratorTest.java,358,"model2.getInterpolatedState()[0]-pb.computeTheoreticalState(t)[0]) + "" "" +"
False,src/test/org/apache/commons/math/ode/nonstiff/AdamsIntegratorTest.java,src/test/org/apache/commons/math/ode/nonstiff/AdamsIntegratorTest.java,359,model3.getInterpolatedState()[0]-pb.computeTheoreticalState(t)[0]));
