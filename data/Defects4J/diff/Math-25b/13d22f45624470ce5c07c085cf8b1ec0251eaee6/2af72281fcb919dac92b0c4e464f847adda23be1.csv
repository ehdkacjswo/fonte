is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java,22,import org.apache.commons.math.exception.ConvergenceException;
False,src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java,64, @param absoluteAccuracy absolute accuracy
False,src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java,65, @param method <em>Secant</em>-based root-finding method to use
True,src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java,65,* @param absoluteAccuracy Absolute accuracy.
True,src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java,66,* @param method <em>Secant</em>-based root-finding method to use.
False,src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java,76, @param relativeAccuracy relative accuracy
False,src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java,77, @param absoluteAccuracy absolute accuracy
False,src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java,78, @param method <em>Secant</em>-based root-finding method to use
True,src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java,77,* @param relativeAccuracy Relative accuracy.
True,src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java,78,* @param absoluteAccuracy Absolute accuracy.
True,src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java,79,* @param method <em>Secant</em>-based root-finding method to use.
False,src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java,186,/ Nothing.
True,src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java,187,"// Detect early that algorithm is stuck, instead of waiting"
True,src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java,188,// for the maximum number of iterations to be exceeded.
True,src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java,189,if (x == x1) {
True,src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java,190,throw new ConvergenceException();
False,src/main/java/org/apache/commons/math/analysis/solvers/IllinoisSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/IllinoisSolver.java,29, method.</p>
True,src/main/java/org/apache/commons/math/analysis/solvers/IllinoisSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/IllinoisSolver.java,29,"* method. Furthermore, this implementation of the <em>Illinois</em> method"
True,src/main/java/org/apache/commons/math/analysis/solvers/IllinoisSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/IllinoisSolver.java,30,* should not suffer from the same implementation issues as the <em>Regula
True,src/main/java/org/apache/commons/math/analysis/solvers/IllinoisSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/IllinoisSolver.java,31,"* Falsi</em> method, which may fail to convergence in certain cases.</p>"
False,src/main/java/org/apache/commons/math/analysis/solvers/IllinoisSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/IllinoisSolver.java,52, @param absoluteAccuracy absolute accuracy
True,src/main/java/org/apache/commons/math/analysis/solvers/IllinoisSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/IllinoisSolver.java,54,* @param absoluteAccuracy Absolute accuracy.
False,src/main/java/org/apache/commons/math/analysis/solvers/IllinoisSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/IllinoisSolver.java,61, @param relativeAccuracy relative accuracy
False,src/main/java/org/apache/commons/math/analysis/solvers/IllinoisSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/IllinoisSolver.java,62, @param absoluteAccuracy absolute accuracy
True,src/main/java/org/apache/commons/math/analysis/solvers/IllinoisSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/IllinoisSolver.java,63,* @param relativeAccuracy Relative accuracy.
True,src/main/java/org/apache/commons/math/analysis/solvers/IllinoisSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/IllinoisSolver.java,64,* @param absoluteAccuracy Absolute accuracy.
False,src/main/java/org/apache/commons/math/analysis/solvers/IllinoisSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/IllinoisSolver.java,72, @param relativeAccuracy relative accuracy
False,src/main/java/org/apache/commons/math/analysis/solvers/IllinoisSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/IllinoisSolver.java,73, @param absoluteAccuracy absolute accuracy
True,src/main/java/org/apache/commons/math/analysis/solvers/IllinoisSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/IllinoisSolver.java,74,* @param relativeAccuracy Relative accuracy.
True,src/main/java/org/apache/commons/math/analysis/solvers/IllinoisSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/IllinoisSolver.java,75,* @param absoluteAccuracy Absolute accuracy.
False,src/main/java/org/apache/commons/math/analysis/solvers/PegasusSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/PegasusSolver.java,27, should converge much faster than the original <em>Regula Falsi</em> method.
False,src/main/java/org/apache/commons/math/analysis/solvers/PegasusSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/PegasusSolver.java,28," Furthermore, it should converge faster than the"
False,src/main/java/org/apache/commons/math/analysis/solvers/PegasusSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/PegasusSolver.java,29," {@link IllinoisSolver <em>Illinois</em>} method, another"
False,src/main/java/org/apache/commons/math/analysis/solvers/PegasusSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/PegasusSolver.java,30, <em>Regula Falsi</em>-based method.</p>
True,src/main/java/org/apache/commons/math/analysis/solvers/PegasusSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/PegasusSolver.java,27,* should converge much faster than the original <em>Regula Falsi</em>
True,src/main/java/org/apache/commons/math/analysis/solvers/PegasusSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/PegasusSolver.java,28,"* method. Furthermore, this implementation of the <em>Pegasus</em> method"
True,src/main/java/org/apache/commons/math/analysis/solvers/PegasusSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/PegasusSolver.java,29,* should not suffer from the same implementation issues as the <em>Regula
True,src/main/java/org/apache/commons/math/analysis/solvers/PegasusSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/PegasusSolver.java,30,"* Falsi</em> method, which may fail to convergence in certain cases. Also,"
True,src/main/java/org/apache/commons/math/analysis/solvers/PegasusSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/PegasusSolver.java,31,* the <em>Pegasus</em> method should converge faster than the
True,src/main/java/org/apache/commons/math/analysis/solvers/PegasusSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/PegasusSolver.java,32,"* {@link IllinoisSolver <em>Illinois</em>} method, another <em>Regula"
True,src/main/java/org/apache/commons/math/analysis/solvers/PegasusSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/PegasusSolver.java,33,* Falsi</em>-based method.</p>
False,src/main/java/org/apache/commons/math/analysis/solvers/PegasusSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/PegasusSolver.java,53, @param absoluteAccuracy absolute accuracy
True,src/main/java/org/apache/commons/math/analysis/solvers/PegasusSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/PegasusSolver.java,56,* @param absoluteAccuracy Absolute accuracy.
False,src/main/java/org/apache/commons/math/analysis/solvers/PegasusSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/PegasusSolver.java,62, @param relativeAccuracy relative accuracy
False,src/main/java/org/apache/commons/math/analysis/solvers/PegasusSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/PegasusSolver.java,63, @param absoluteAccuracy absolute accuracy
True,src/main/java/org/apache/commons/math/analysis/solvers/PegasusSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/PegasusSolver.java,65,* @param relativeAccuracy Relative accuracy.
True,src/main/java/org/apache/commons/math/analysis/solvers/PegasusSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/PegasusSolver.java,66,* @param absoluteAccuracy Absolute accuracy.
False,src/main/java/org/apache/commons/math/analysis/solvers/PegasusSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/PegasusSolver.java,73, @param relativeAccuracy relative accuracy
False,src/main/java/org/apache/commons/math/analysis/solvers/PegasusSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/PegasusSolver.java,74, @param absoluteAccuracy absolute accuracy
True,src/main/java/org/apache/commons/math/analysis/solvers/PegasusSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/PegasusSolver.java,76,* @param relativeAccuracy Relative accuracy.
True,src/main/java/org/apache/commons/math/analysis/solvers/PegasusSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/PegasusSolver.java,77,* @param absoluteAccuracy Absolute accuracy.
False,src/main/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolver.java,24, modified {@link SecantSolver <em>Secant</em>} method. Unlike the
False,src/main/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolver.java,25," <em>Secant</em> method, convergence is guaranteed by maintaining a"
False,src/main/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolver.java,26, bracketed solution.
True,src/main/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolver.java,23,* modified {@link SecantSolver <em>Secant</em>} method.
True,src/main/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolver.java,25,"* <p>The <em>Regula Falsi</em> method is included for completeness, for"
True,src/main/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolver.java,26,"* testing purposes, for educational purposes, for comparison to other"
True,src/main/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolver.java,27,"* algorithms, etc. It is however <strong>not</strong> intended to be used"
True,src/main/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolver.java,28,"* for actual problems, as one of the bounds often remains fixed, resulting"
True,src/main/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolver.java,29,"* in very slow convergence. Instead, one of the well-known modified"
True,src/main/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolver.java,30,* <em>Regula Falsi</em> algorithms can be used ({@link IllinoisSolver
True,src/main/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolver.java,31,* <em>Illinois</em>} or {@link PegasusSolver <em>Pegasus</em>}). These two
True,src/main/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolver.java,32,* algorithms solve the fundamental issues of the original <em>Regula
True,src/main/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolver.java,33,"* Falsi</em> algorithm, and greatly out-performs it for most, if not all,"
True,src/main/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolver.java,34,* (practical) functions.
True,src/main/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolver.java,36,"* <p>Unlike the <em>Secant</em> method, the <em>Regula Falsi</em> guarantees"
True,src/main/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolver.java,37,"* convergence, by maintaining a bracketed solution. Note however, that due to"
True,src/main/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolver.java,38,"* the finite/limited precision of Java's {@link Double double} type, which is"
True,src/main/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolver.java,39,"* used in this implementation, the algorithm may get stuck in a situation"
True,src/main/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolver.java,40,* where it no longer makes any progress. Such cases are detected and result
True,src/main/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolver.java,41,"* in a {@code ConvergenceException} exception being thrown. In other words,"
True,src/main/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolver.java,42,"* the algorithm theoretically guarantees convergence, but the implementation"
True,src/main/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolver.java,43,* does not.</p>
False,src/main/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolver.java,49, @param absoluteAccuracy absolute accuracy
True,src/main/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolver.java,66,* @param absoluteAccuracy Absolute accuracy.
False,src/main/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolver.java,58, @param relativeAccuracy relative accuracy
False,src/main/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolver.java,59, @param absoluteAccuracy absolute accuracy
True,src/main/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolver.java,75,* @param relativeAccuracy Relative accuracy.
True,src/main/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolver.java,76,* @param absoluteAccuracy Absolute accuracy.
False,src/main/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolver.java,69, @param relativeAccuracy relative accuracy
False,src/main/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolver.java,70, @param absoluteAccuracy absolute accuracy
True,src/main/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolver.java,86,* @param relativeAccuracy Relative accuracy.
True,src/main/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolver.java,src/main/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolver.java,87,* @param absoluteAccuracy Absolute accuracy.
False,src/test/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolverTest.java,src/test/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolverTest.java,21,mport org.apache.commons.math.exception.TooManyEvaluationsException;
True,src/test/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolverTest.java,src/test/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolverTest.java,21,import org.apache.commons.math.exception.ConvergenceException;
False,src/test/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolverTest.java,src/test/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolverTest.java,44,Test(expected=TooManyEvaluationsException.class)
True,src/test/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolverTest.java,src/test/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolverTest.java,44,@Test(expected=ConvergenceException.class)
