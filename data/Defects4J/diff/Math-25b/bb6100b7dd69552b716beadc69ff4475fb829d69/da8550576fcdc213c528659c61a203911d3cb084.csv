is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/math/Field.java,src/main/java/org/apache/commons/math/Field.java,52,* Returns the runtime class of the FieldElement.
True,src/main/java/org/apache/commons/math/Field.java,src/main/java/org/apache/commons/math/Field.java,54,* @return The {@code Class} object that represents the runtime
True,src/main/java/org/apache/commons/math/Field.java,src/main/java/org/apache/commons/math/Field.java,55,*         class of this object.
True,src/main/java/org/apache/commons/math/Field.java,src/main/java/org/apache/commons/math/Field.java,57,Class<? extends FieldElement<T>> getRuntimeClass();
True,src/main/java/org/apache/commons/math/complex/ComplexField.java,src/main/java/org/apache/commons/math/complex/ComplexField.java,23,import org.apache.commons.math.FieldElement;
True,src/main/java/org/apache/commons/math/complex/ComplexField.java,src/main/java/org/apache/commons/math/complex/ComplexField.java,61,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math/complex/ComplexField.java,src/main/java/org/apache/commons/math/complex/ComplexField.java,62,public Class<? extends FieldElement<Complex>> getRuntimeClass() {
True,src/main/java/org/apache/commons/math/complex/ComplexField.java,src/main/java/org/apache/commons/math/complex/ComplexField.java,63,return Complex.class;
True,src/main/java/org/apache/commons/math/dfp/DfpField.java,src/main/java/org/apache/commons/math/dfp/DfpField.java,21,import org.apache.commons.math.FieldElement;
True,src/main/java/org/apache/commons/math/dfp/DfpField.java,src/main/java/org/apache/commons/math/dfp/DfpField.java,411,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math/dfp/DfpField.java,src/main/java/org/apache/commons/math/dfp/DfpField.java,412,public Class<? extends FieldElement<Dfp>> getRuntimeClass() {
True,src/main/java/org/apache/commons/math/dfp/DfpField.java,src/main/java/org/apache/commons/math/dfp/DfpField.java,413,return Dfp.class;
True,src/main/java/org/apache/commons/math/fraction/BigFractionField.java,src/main/java/org/apache/commons/math/fraction/BigFractionField.java,23,import org.apache.commons.math.FieldElement;
True,src/main/java/org/apache/commons/math/fraction/BigFractionField.java,src/main/java/org/apache/commons/math/fraction/BigFractionField.java,61,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math/fraction/BigFractionField.java,src/main/java/org/apache/commons/math/fraction/BigFractionField.java,62,public Class<? extends FieldElement<BigFraction>> getRuntimeClass() {
True,src/main/java/org/apache/commons/math/fraction/BigFractionField.java,src/main/java/org/apache/commons/math/fraction/BigFractionField.java,63,return BigFraction.class;
True,src/main/java/org/apache/commons/math/fraction/FractionField.java,src/main/java/org/apache/commons/math/fraction/FractionField.java,23,import org.apache.commons.math.FieldElement;
True,src/main/java/org/apache/commons/math/fraction/FractionField.java,src/main/java/org/apache/commons/math/fraction/FractionField.java,61,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math/fraction/FractionField.java,src/main/java/org/apache/commons/math/fraction/FractionField.java,62,public Class<? extends FieldElement<Fraction>> getRuntimeClass() {
True,src/main/java/org/apache/commons/math/fraction/FractionField.java,src/main/java/org/apache/commons/math/fraction/FractionField.java,63,return Fraction.class;
False,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,140,"[] dummyRow = (T[]) Array.newInstance(field.getZero().getClass(), 0);"
True,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,140,"T[] dummyRow = (T[]) Array.newInstance(field.getRuntimeClass(), 0);"
False,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,144,"T[][]) Array.newInstance(field.getZero().getClass(), new int[] { rows, columns });"
True,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,144,"(T[][]) Array.newInstance(field.getRuntimeClass(), new int[] { rows, columns });"
False,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,163,"[] array = (T[]) Array.newInstance(field.getZero().getClass(), length);"
True,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,163,"T[] array = (T[]) Array.newInstance(field.getRuntimeClass(), length);"
False,src/main/java/org/apache/commons/math/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math/linear/ArrayFieldVector.java,386,"eturn (T[]) Array.newInstance(field.getZero().getClass(), length);"
True,src/main/java/org/apache/commons/math/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math/linear/ArrayFieldVector.java,386,"return (T[]) Array.newInstance(field.getRuntimeClass(), length);"
False,src/main/java/org/apache/commons/math/linear/FieldLUDecomposition.java,src/main/java/org/apache/commons/math/linear/FieldLUDecomposition.java,311,"inal T[] bp = (T[]) Array.newInstance(field.getZero().getClass(), m);"
True,src/main/java/org/apache/commons/math/linear/FieldLUDecomposition.java,src/main/java/org/apache/commons/math/linear/FieldLUDecomposition.java,311,"final T[] bp = (T[]) Array.newInstance(field.getRuntimeClass(), m);"
False,src/main/java/org/apache/commons/math/linear/FieldLUDecomposition.java,src/main/java/org/apache/commons/math/linear/FieldLUDecomposition.java,358,"inal T[] bp = (T[]) Array.newInstance(field.getZero().getClass(),"
True,src/main/java/org/apache/commons/math/linear/FieldLUDecomposition.java,src/main/java/org/apache/commons/math/linear/FieldLUDecomposition.java,358,"final T[] bp = (T[]) Array.newInstance(field.getRuntimeClass(),"
False,src/main/java/org/apache/commons/math/linear/FieldLUDecomposition.java,src/main/java/org/apache/commons/math/linear/FieldLUDecomposition.java,400,"inal T[][] bp = (T[][]) Array.newInstance(field.getZero().getClass(), new int[] { m, nColB });"
True,src/main/java/org/apache/commons/math/linear/FieldLUDecomposition.java,src/main/java/org/apache/commons/math/linear/FieldLUDecomposition.java,400,"final T[][] bp = (T[][]) Array.newInstance(field.getRuntimeClass(), new int[] { m, nColB });"
False,src/main/java/org/apache/commons/math/linear/MatrixUtils.java,src/main/java/org/apache/commons/math/linear/MatrixUtils.java,182,"SuppressWarnings(""unchecked"") // zero is type T"
False,src/main/java/org/apache/commons/math/linear/MatrixUtils.java,src/main/java/org/apache/commons/math/linear/MatrixUtils.java,183,"inal T[][] d = (T[][]) Array.newInstance(zero.getClass(), new int[] { dimension, dimension });"
True,src/main/java/org/apache/commons/math/linear/MatrixUtils.java,src/main/java/org/apache/commons/math/linear/MatrixUtils.java,182,"@SuppressWarnings(""unchecked"")"
True,src/main/java/org/apache/commons/math/linear/MatrixUtils.java,src/main/java/org/apache/commons/math/linear/MatrixUtils.java,183,"final T[][] d = (T[][]) Array.newInstance(field.getRuntimeClass(), new int[] { dimension, dimension });"
False,src/main/java/org/apache/commons/math/linear/SparseFieldVector.java,src/main/java/org/apache/commons/math/linear/SparseFieldVector.java,516,"eturn (T[]) Array.newInstance(field.getZero().getClass(), length);"
True,src/main/java/org/apache/commons/math/linear/SparseFieldVector.java,src/main/java/org/apache/commons/math/linear/SparseFieldVector.java,516,"return (T[]) Array.newInstance(field.getRuntimeClass(), length);"
True,src/main/java/org/apache/commons/math/util/BigRealField.java,src/main/java/org/apache/commons/math/util/BigRealField.java,23,import org.apache.commons.math.FieldElement;
True,src/main/java/org/apache/commons/math/util/BigRealField.java,src/main/java/org/apache/commons/math/util/BigRealField.java,61,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math/util/BigRealField.java,src/main/java/org/apache/commons/math/util/BigRealField.java,62,public Class<? extends FieldElement<BigReal>> getRuntimeClass() {
True,src/main/java/org/apache/commons/math/util/BigRealField.java,src/main/java/org/apache/commons/math/util/BigRealField.java,63,return BigReal.class;
False,src/main/java/org/apache/commons/math/util/OpenIntToFieldHashMap.java,src/main/java/org/apache/commons/math/util/OpenIntToFieldHashMap.java,617,"eturn (T[]) Array.newInstance(field.getZero().getClass(), length);"
True,src/main/java/org/apache/commons/math/util/OpenIntToFieldHashMap.java,src/main/java/org/apache/commons/math/util/OpenIntToFieldHashMap.java,617,"return (T[]) Array.newInstance(field.getRuntimeClass(), length);"
False,src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java,79,"eturn (T[]) Array.newInstance(field.getZero().getClass(), length);"
True,src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java,src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java,79,"return (T[]) Array.newInstance(field.getRuntimeClass(), length);"
