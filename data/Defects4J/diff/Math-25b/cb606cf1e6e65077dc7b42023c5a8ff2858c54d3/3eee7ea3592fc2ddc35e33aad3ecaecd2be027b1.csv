is_addition,old_file_path,new_file_path,line_num,content
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,26, @version $Revision: 1.11 $ $Date: 2004/02/21 21:35:17 $
True,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,26,* @version $Revision: 1.12 $ $Date: 2004/03/07 20:47:06 $
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,46,ublic void testChiSquare() {
True,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,46,public void testChiSquare() throws MathException {
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,49,ssertEquals(
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,50,"chi-square statistic"","
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,51,".39743495,"
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,52,"estStatistic.chiSquare(expected, observed),"
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,53,0E-5);
True,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,49,"assertEquals(""chi-square statistic"", 1.39743495, testStatistic.chiSquare(expected, observed), 10E-5);"
True,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,57,// expected
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,69, catch (MathException e) {
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,70,/ TODO Auto-generated catch block
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,71,.printStackTrace();
True,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,64,// expected
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,78,ail(
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,79,"arrays have different lengths,"""
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,80," "" IllegalArgumentException expected"");"
True,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,71,"fail(""arrays have different lengths, IllegalArgumentException expected"");"
True,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,73,// expected
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,90, catch (MathException e) {
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,91,/ TODO Auto-generated catch block
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,92,.printStackTrace();
True,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,80,// expected
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,98,ry {
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,99,ssertEquals(
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,100,"chi-square test statistic"","
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,101,".81,"
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,102,"estStatistic.chiSquare(expected1, observed1),"
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,103,0E-2);
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,104,ssertEquals(
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,105,"chi-square p-value"","
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,106,".21,"
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,107,"estStatistic.chiSquareTest(expected1, observed1),"
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,108,0E-2);
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,109,ssertTrue(
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,110,"chi-square test reject"","
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,111,"estStatistic.chiSquareTest(expected1, observed1, 0.3));"
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,112,ssertTrue(
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,113,"chi-square test accept"","
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,114,"testStatistic.chiSquareTest(expected1, observed1, 0.1));"
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,116, catch (MathException e) {
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,117,/ TODO Auto-generated catch block
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,118,.printStackTrace();
True,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,86,"assertEquals( ""chi-square test statistic"", 5.81, testStatistic.chiSquare(expected1, observed1), 10E-2);"
True,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,87,"assertEquals(""chi-square p-value"", 0.21, testStatistic.chiSquareTest(expected1, observed1), 10E-2);"
True,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,88,"assertTrue(""chi-square test reject"", testStatistic.chiSquareTest(expected1, observed1, 0.3));"
True,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,89,"assertTrue(""chi-square test accept"", !testStatistic.chiSquareTest(expected1, observed1, 0.1));"
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,126, catch (MathException e) {
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,127,/ TODO Auto-generated catch block
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,128,.printStackTrace();
True,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,95,// expected
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,132,ublic void testT() {
True,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,99,public void testT() throws Exception {
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,135,"3.0,"
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,136,"03.0,"
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,137,"5.0,"
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,138,"01.0,"
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,139,"1.0,"
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,140,"05.0,"
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,141,"6.0,"
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,142,"4.0,"
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,143,"01.0,"
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,144,"8.0,"
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,145,"8.0,"
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,146,"4.0,"
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,147,"01.0,"
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,148,"2.0,"
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,149,5.0 };
True,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,101,"{93.0, 103.0, 95.0, 101.0, 91.0, 105.0, 96.0, 94.0, 101.0,  88.0, 98.0, 94.0, 101.0, 92.0, 95.0 };"
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,152,ry {
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,153,ampleStats =
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,154,ummaryStatistics.newInstance(
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,155,ummaryStatisticsImpl.class);
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,156, catch (InstantiationException e5) {
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,157,/ TODO Auto-generated catch block
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,158,5.printStackTrace();
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,159, catch (IllegalAccessException e5) {
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,160,/ TODO Auto-generated catch block
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,161,5.printStackTrace();
True,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,104,sampleStats = SummaryStatistics.newInstance();
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,167,ssertEquals(
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,168,"t statistic"","
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,169,"2.82,"
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,170,"estStatistic.t(mu, observed),"
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,171,0E-3);
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,172,ssertEquals(
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,173,"t statistic"","
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,174,"2.82,"
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,175,"estStatistic.t(mu, sampleStats),"
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,176,0E-3);
True,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,109,"assertEquals(""t statistic"", -2.82, testStatistic.t(mu, observed), 10E-3);"
True,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,110,"assertEquals(""t statistic"", -2.82, testStatistic.t(mu, sampleStats), 10E-3);"
True,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,117,// expected
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,186,ummaryStatistics nullStats = SummaryStatistics.newInstance();
True,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,120,SummaryStatistics nullStats = null;
True,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,125,// expected
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,195,ouble[] emptyObs = {
True,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,128,double[] emptyObs = {};
True,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,133,// expected
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,204,ummaryStatistics emptyStats =SummaryStatistics.newInstance();
True,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,136,SummaryStatistics emptyStats =SummaryStatistics.newInstance();
True,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,141,// expected
True,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,149,// exptected
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,225, catch (MathException e) {
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,226,/ TODO Auto-generated catch block
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,227,.printStackTrace();
True,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,155,// expected
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,230,ummaryStatistics tooShortStats = SummaryStatistics.newInstance();
True,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,158,SummaryStatistics tooShortStats = SummaryStatistics.newInstance();
True,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,165,// exptected
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,245, catch (MathException e) {
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,246,/ TODO Auto-generated catch block
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,247,.printStackTrace();
True,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,171,// exptected
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,253,"d,"
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,254,"d,"
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,255,"d,"
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,256,"d,"
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,257,"d,"
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,258,"d,"
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,259,"d,"
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,260,"d,"
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,261,"6d,"
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,262,"d,"
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,263,"d,"
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,264,"d,"
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,265,"d,"
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,266,"d,"
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,267,"d,"
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,268,"d,"
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,269,"d,"
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,270,"d,"
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,271,"d,"
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,272,d };
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,274,ummaryStatistics oneSidedPStats = SummaryStatistics.newInstance();;
True,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,176,"{2d, 0d, 6d, 6d, 3d, 3d, 2d, 3d, -6d, 6d, 6d, 6d, 3d, 0d, 1d, 1d, 0d, 2d, 3d, 3d };"
True,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,177,SummaryStatistics oneSidedPStats = SummaryStatistics.newInstance();
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,280,ry {
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,281,ssertEquals(
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,282,"one sample t stat"","
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,283,".86,"
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,284,"estStatistic.t(0d, oneSidedP),"
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,285,.01);
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,286,ssertEquals(
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,287,"one sample t stat"","
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,288,".86,"
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,289,"estStatistic.t(0d, oneSidedPStats),"
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,290,.01);
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,291,ssertEquals(
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,292,"one sample p value"","
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,293,".00052,"
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,294,"estStatistic.tTest(0d, oneSidedP) / 2d,"
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,295,0E-5);
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,296,ssertEquals(
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,297,"one sample p value"","
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,298,".00052,"
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,299,"estStatistic.tTest(0d, oneSidedPStats) / 2d,"
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,300,0E-5);
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,301,ssertTrue(
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,302,"one sample t-test reject"","
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,303,"estStatistic.tTest(0d, oneSidedP, 0.01));"
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,304,ssertTrue(
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,305,"one sample t-test reject"","
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,306,"estStatistic.tTest(0d, oneSidedPStats, 0.01));"
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,307,ssertTrue(
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,308,"one sample t-test accept"","
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,309,"testStatistic.tTest(0d, oneSidedP, 0.0001));"
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,310,ssertTrue(
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,311,"one sample t-test accept"","
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,312,"testStatistic.tTest(0d, oneSidedPStats, 0.0001));"
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,314, catch (MathException e) {
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,315,/ TODO Auto-generated catch block
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,316,.printStackTrace();
True,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,181,"assertEquals(""one sample t stat"", 3.86, testStatistic.t(0d, oneSidedP), 0.01);"
True,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,182,"assertEquals(""one sample t stat"", 3.86, testStatistic.t(0d, oneSidedPStats), 0.01);"
True,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,183,"assertEquals(""one sample p value"", 0.00052, testStatistic.tTest(0d, oneSidedP) / 2d, 10E-5);"
True,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,184,"assertEquals(""one sample p value"", 0.00052, testStatistic.tTest(0d, oneSidedPStats) / 2d, 10E-5);"
True,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,185,"assertTrue(""one sample t-test reject"", testStatistic.tTest(0d, oneSidedP, 0.01));"
True,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,186,"assertTrue(""one sample t-test reject"", testStatistic.tTest(0d, oneSidedPStats, 0.01));"
True,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,187,"assertTrue(""one sample t-test accept"", !testStatistic.tTest(0d, oneSidedP, 0.0001));"
True,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,188,"assertTrue(""one sample t-test accept"", !testStatistic.tTest(0d, oneSidedPStats, 0.0001));"
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,324, catch (MathException e) {
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,325,/ TODO Auto-generated catch block
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,326,.printStackTrace();
True,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,194,// exptected
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,333, catch (MathException e) {
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,334,/ TODO Auto-generated catch block
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,335,.printStackTrace();
True,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,201,// expected
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,340,ouble[] sample2 =
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,341," -1d, 12d, -1d, -3d, 3d, -5d, 5d, 2d, -11d, -1d, -3d };"
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,343,ummaryStatistics sampleStats1 = SummaryStatistics.newInstance();
True,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,206,"double[] sample2 = { -1d, 12d, -1d, -3d, 3d, -5d, 5d, 2d, -11d, -1d, -3d };"
True,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,207,SummaryStatistics sampleStats1 = SummaryStatistics.newInstance();
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,349,ummaryStatistics sampleStats2 = SummaryStatistics.newInstance();
True,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,211,SummaryStatistics sampleStats2 = SummaryStatistics.newInstance();
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,354,ry {
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,355,/FIXME: textbook example reported t stat uses pooled variance
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,356,/ should replace with R-verified example
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,357,ssertEquals(
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,358,"two sample t stat"","
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,359,".634,"
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,360,"estStatistic.t(sample1, sample2),"
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,361,.1);
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,362,ssertEquals(
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,363,"two sample t stat"","
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,364,".634,"
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,365,"estStatistic.t(sampleStats1, sampleStats2),"
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,366,.1);
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,367,"/ This test is OK, since book reports non-pooled exact p-value"
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,368,ssertEquals(
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,369,"two sample p value"","
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,370,".059,"
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,371,"estStatistic.tTest(sample1, sample2) / 2d,"
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,372,0E-3);
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,373,ssertEquals(
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,374,"two sample p value"","
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,375,".059,"
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,376,"estStatistic.tTest(sampleStats1, sampleStats2) / 2d,"
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,377,0E-3);
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,378,ssertTrue(
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,379,"two sample t-test reject"","
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,380,"estStatistic.tTest(sample1, sample2, 0.2));"
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,381,ssertTrue(
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,382,"two sample t-test reject"","
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,383,"estStatistic.tTest(sampleStats1, sampleStats2, 0.2));"
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,384,ssertTrue(
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,385,"two sample t-test accept"","
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,386,"testStatistic.tTest(sample1, sample2, 0.1));"
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,387,ssertTrue(
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,388,"two sample t-test accept"","
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,389,"testStatistic.tTest(sampleStats1, sampleStats2, 0.1));"
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,391, catch (MathException e) {
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,392,/ TODO Auto-generated catch block
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,393,.printStackTrace();
True,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,215,//FIXME: textbook example reported t stat uses pooled variance
True,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,216,// should replace the following two tests  with R-verified example
True,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,217,"assertEquals(""two sample t stat"", 1.634, testStatistic.t(sample1, sample2), 0.1);"
True,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,218,"assertEquals(""two sample t stat"", 1.634, testStatistic.t(sampleStats1, sampleStats2), 0.1);"
True,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,220,"// These tests are OK, since book reports non-pooled exact p-value"
True,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,221,"assertEquals(""two sample p value"", 0.059, testStatistic.tTest(sample1, sample2) / 2d, 10E-3);"
True,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,222,"assertEquals(""two sample p value"", 0.059, testStatistic.tTest(sampleStats1, sampleStats2) / 2d, 10E-3);"
True,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,223,"assertTrue(""two sample t-test reject"", testStatistic.tTest(sample1, sample2, 0.2));"
True,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,224,"assertTrue(""two sample t-test reject"", testStatistic.tTest(sampleStats1, sampleStats2, 0.2));"
True,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,225,"assertTrue(""two sample t-test accept"", !testStatistic.tTest(sample1, sample2, 0.1));"
True,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,226,"assertTrue(""two sample t-test accept"", !testStatistic.tTest(sampleStats1, sampleStats2, 0.1));"
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,400, catch (MathException e) {
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,401,/ TODO Auto-generated catch block
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,402,.printStackTrace();
True,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,232,// exptected
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,409, catch (MathException e) {
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,410,/ TODO Auto-generated catch block
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,411,.printStackTrace();
True,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,239,// expected
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,418, catch (MathException e) {
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,419,/ TODO Auto-generated catch block
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,420,.printStackTrace();
True,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,246,// expected
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,427, catch (MathException e) {
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,428,/ TODO Auto-generated catch block
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,429,.printStackTrace();
True,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,253,// expected
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,436, catch (MathException e) {
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,437,/ TODO Auto-generated catch block
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,438,.printStackTrace();
True,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,260,// expected
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,445, catch (MathException e) {
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,446,/ TODO Auto-generated catch block
False,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,447,.printStackTrace();
True,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,267,// expected
True,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,274,// expected
True,src/test/org/apache/commons/math/stat/TestStatisticTest.java,src/test/org/apache/commons/math/stat/TestStatisticTest.java,281,// exptected
