is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,123,rotected GeometricMean geoMean = new GeometricMean();
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,123,protected GeometricMean geoMean = new GeometricMean(sumLog);
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,177,eoMean.increment(value);
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,179,"/ If mean or variance have been overridden,"
False,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,180,"/ need to increment these, since they don't have secondMoment"
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,178,"// If mean, variance or geomean have been overridden,"
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,179,// need to increment these
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,186,if (!(geoMeanImpl instanceof GeometricMean)) {
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,187,geoMeanImpl.increment(value);
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,302,* Returns the sum of the logs of the values that have been added.
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,303,* <p>
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,304,*  Double.NaN is returned if no values have been added.</p>
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,306,* @return the sum of logs
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,308,public double getSumOfLogs() {
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,309,return sumLogImpl.getResult();
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,329,"outBuffer.append(""sum of logs: "" + getSumOfLogs() + ""\n"");"
True,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,522,geoMean.setSumLogImpl(sumLogImpl);
True,src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,20,import org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic;
False,src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,52,rivate SumOfLogs sumOfLogs;
True,src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,53,private StorelessUnivariateStatistic sumOfLogs;
True,src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,63,* Create a GeometricMean instance using the given SumOfLogs instance
True,src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,65,public GeometricMean(SumOfLogs sumOfLogs) {
True,src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,66,this.sumOfLogs = sumOfLogs;
True,src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,124,* <p>Sets the implementation for the sum of logs.</p>
True,src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,125,"* <p>This method must be activated before any data has been added - i.e.,"
True,src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,126,* before {@link #addValue(double) addValue} has been used to add data;
True,src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,127,* otherwise an IllegalStateException will be thrown.</p>
True,src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,129,* @param sumLogImpl the StorelessUnivariateStatistic instance to use
True,src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,130,* for computing the log sum
True,src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,131,* @throws IllegalStateException if data has already been added
True,src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,132,*  (i.e if n > 0)
True,src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,134,public void setSumLogImpl(
True,src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,135,StorelessUnivariateStatistic sumLogImpl) {
True,src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,136,checkEmpty();
True,src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,137,this.sumOfLogs = sumLogImpl;
True,src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,141,* Returns the currently configured sum of logs implementation
True,src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,143,* @return the StorelessUnivariateStatistic implementing the log sum
True,src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,145,public StorelessUnivariateStatistic getSumLogImpl() {
True,src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,146,return sumOfLogs;
True,src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,150,* Throws IllegalStateException if n > 0.
True,src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,152,private void checkEmpty() {
True,src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,153,if (getN() > 0) {
True,src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,154,throw new IllegalStateException(
True,src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,155,"""Implementation must be configured before values are added."");"
True,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,24,import org.apache.commons.math.stat.descriptive.summary.Sum;
False,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,50,.setMeanImpl(new sumMean());
True,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,51,u.setMeanImpl(new Sum());
True,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,52,u.setSumLogImpl(new Sum());
True,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,56,"assertEquals(4, u.getSumOfLogs(), 1E-14);"
True,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,57,"assertEquals(Math.exp(2), u.getGeometricMean(), 1E-14);"
False,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,67,.setMeanImpl(new sumMean());
True,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,71,u.setMeanImpl(new Sum());
False,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,75, Bogus mean implementation to test setter injection.
False,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,76, Returns the sum instead of the mean.
False,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,78,tatic class sumMean implements StorelessUnivariateStatistic {
False,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,79,rivate static final long serialVersionUID = 6492471391340853423L;
False,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,80,rivate double sum = 0;
False,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,81,rivate long n = 0;
False,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,82,"ublic double evaluate(double[] values, int begin, int length) {"
False,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,83,eturn 0;
False,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,85,ublic double evaluate(double[] values) {
False,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,86,eturn 0;
False,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,88,ublic void clear() {
False,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,89,um = 0;
False,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,90, = 0;
False,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,92,ublic long getN() {
False,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,93,eturn n;
False,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,95,ublic double getResult() {
False,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,96,eturn sum;
False,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,98,ublic void increment(double d) {
False,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,99,um += d;
False,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,100,++;
False,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,102,"ublic void incrementAll(double[] values, int start, int length) {"
False,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java,104,ublic void incrementAll(double[] values) {
