is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/math/util/ContinuedFraction.java,src/main/java/org/apache/commons/math/util/ContinuedFraction.java,19,mport org.apache.commons.math.ConvergenceException;
False,src/main/java/org/apache/commons/math/util/ContinuedFraction.java,src/main/java/org/apache/commons/math/util/ContinuedFraction.java,20,mport org.apache.commons.math.MathException;
True,src/main/java/org/apache/commons/math/util/ContinuedFraction.java,src/main/java/org/apache/commons/math/util/ContinuedFraction.java,19,import org.apache.commons.math.exception.ConvergenceException;
False,src/main/java/org/apache/commons/math/util/ContinuedFraction.java,src/main/java/org/apache/commons/math/util/ContinuedFraction.java,72, @throws MathException if the algorithm fails to converge.
True,src/main/java/org/apache/commons/math/util/ContinuedFraction.java,src/main/java/org/apache/commons/math/util/ContinuedFraction.java,70,* @throws ConvergenceException if the algorithm fails to converge.
False,src/main/java/org/apache/commons/math/util/ContinuedFraction.java,src/main/java/org/apache/commons/math/util/ContinuedFraction.java,74,ublic double evaluate(double x) throws MathException {
True,src/main/java/org/apache/commons/math/util/ContinuedFraction.java,src/main/java/org/apache/commons/math/util/ContinuedFraction.java,72,public double evaluate(double x) {
False,src/main/java/org/apache/commons/math/util/ContinuedFraction.java,src/main/java/org/apache/commons/math/util/ContinuedFraction.java,83, @throws MathException if the algorithm fails to converge.
True,src/main/java/org/apache/commons/math/util/ContinuedFraction.java,src/main/java/org/apache/commons/math/util/ContinuedFraction.java,81,* @throws ConvergenceException if the algorithm fails to converge.
False,src/main/java/org/apache/commons/math/util/ContinuedFraction.java,src/main/java/org/apache/commons/math/util/ContinuedFraction.java,85,"ublic double evaluate(double x, double epsilon) throws MathException {"
True,src/main/java/org/apache/commons/math/util/ContinuedFraction.java,src/main/java/org/apache/commons/math/util/ContinuedFraction.java,83,"public double evaluate(double x, double epsilon) {"
False,src/main/java/org/apache/commons/math/util/ContinuedFraction.java,src/main/java/org/apache/commons/math/util/ContinuedFraction.java,94, @throws MathException if the algorithm fails to converge.
True,src/main/java/org/apache/commons/math/util/ContinuedFraction.java,src/main/java/org/apache/commons/math/util/ContinuedFraction.java,92,* @throws ConvergenceException if the algorithm fails to converge.
False,src/main/java/org/apache/commons/math/util/ContinuedFraction.java,src/main/java/org/apache/commons/math/util/ContinuedFraction.java,96,"ublic double evaluate(double x, int maxIterations) throws MathException {"
True,src/main/java/org/apache/commons/math/util/ContinuedFraction.java,src/main/java/org/apache/commons/math/util/ContinuedFraction.java,94,"public double evaluate(double x, int maxIterations) {"
False,src/main/java/org/apache/commons/math/util/ContinuedFraction.java,src/main/java/org/apache/commons/math/util/ContinuedFraction.java,124, @throws MathException if the algorithm fails to converge.
True,src/main/java/org/apache/commons/math/util/ContinuedFraction.java,src/main/java/org/apache/commons/math/util/ContinuedFraction.java,122,* @throws ConvergenceException if the algorithm fails to converge.
False,src/main/java/org/apache/commons/math/util/ContinuedFraction.java,src/main/java/org/apache/commons/math/util/ContinuedFraction.java,126,"ublic double evaluate(double x, double epsilon, int maxIterations)"
False,src/main/java/org/apache/commons/math/util/ContinuedFraction.java,src/main/java/org/apache/commons/math/util/ContinuedFraction.java,127,hrows MathException
True,src/main/java/org/apache/commons/math/util/ContinuedFraction.java,src/main/java/org/apache/commons/math/util/ContinuedFraction.java,124,"public double evaluate(double x, double epsilon, int maxIterations) {"
False,src/main/java/org/apache/commons/math/util/ContinuedFraction.java,src/main/java/org/apache/commons/math/util/ContinuedFraction.java,154,hrow new ConvergenceException(
False,src/main/java/org/apache/commons/math/util/ContinuedFraction.java,src/main/java/org/apache/commons/math/util/ContinuedFraction.java,155,"ocalizedFormats.CONTINUED_FRACTION_INFINITY_DIVERGENCE,"
False,src/main/java/org/apache/commons/math/util/ContinuedFraction.java,src/main/java/org/apache/commons/math/util/ContinuedFraction.java,156,);
True,src/main/java/org/apache/commons/math/util/ContinuedFraction.java,src/main/java/org/apache/commons/math/util/ContinuedFraction.java,150,"throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_INFINITY_DIVERGENCE,"
True,src/main/java/org/apache/commons/math/util/ContinuedFraction.java,src/main/java/org/apache/commons/math/util/ContinuedFraction.java,151,x);
False,src/main/java/org/apache/commons/math/util/ContinuedFraction.java,src/main/java/org/apache/commons/math/util/ContinuedFraction.java,178,hrow new ConvergenceException(
False,src/main/java/org/apache/commons/math/util/ContinuedFraction.java,src/main/java/org/apache/commons/math/util/ContinuedFraction.java,179,"ocalizedFormats.CONTINUED_FRACTION_INFINITY_DIVERGENCE,"
False,src/main/java/org/apache/commons/math/util/ContinuedFraction.java,src/main/java/org/apache/commons/math/util/ContinuedFraction.java,180,);
True,src/main/java/org/apache/commons/math/util/ContinuedFraction.java,src/main/java/org/apache/commons/math/util/ContinuedFraction.java,173,"throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_INFINITY_DIVERGENCE,"
True,src/main/java/org/apache/commons/math/util/ContinuedFraction.java,src/main/java/org/apache/commons/math/util/ContinuedFraction.java,174,x);
False,src/main/java/org/apache/commons/math/util/ContinuedFraction.java,src/main/java/org/apache/commons/math/util/ContinuedFraction.java,186,hrow new ConvergenceException(
False,src/main/java/org/apache/commons/math/util/ContinuedFraction.java,src/main/java/org/apache/commons/math/util/ContinuedFraction.java,187,"ocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,"
False,src/main/java/org/apache/commons/math/util/ContinuedFraction.java,src/main/java/org/apache/commons/math/util/ContinuedFraction.java,188,);
True,src/main/java/org/apache/commons/math/util/ContinuedFraction.java,src/main/java/org/apache/commons/math/util/ContinuedFraction.java,180,"throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,"
True,src/main/java/org/apache/commons/math/util/ContinuedFraction.java,src/main/java/org/apache/commons/math/util/ContinuedFraction.java,181,x);
False,src/main/java/org/apache/commons/math/util/ContinuedFraction.java,src/main/java/org/apache/commons/math/util/ContinuedFraction.java,202,"axIterations, x);"
True,src/main/java/org/apache/commons/math/util/ContinuedFraction.java,src/main/java/org/apache/commons/math/util/ContinuedFraction.java,195,"maxIterations, x);"
