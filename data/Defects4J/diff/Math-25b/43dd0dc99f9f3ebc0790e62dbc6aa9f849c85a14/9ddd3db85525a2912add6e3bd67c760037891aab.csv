is_addition,old_file_path,new_file_path,line_num,content
True,src/test/java/org/apache/commons/math/RetryRunner.java,src/test/java/org/apache/commons/math/RetryRunner.java,2,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/test/java/org/apache/commons/math/RetryRunner.java,src/test/java/org/apache/commons/math/RetryRunner.java,3,* contributor license agreements.  See the NOTICE file distributed with
True,src/test/java/org/apache/commons/math/RetryRunner.java,src/test/java/org/apache/commons/math/RetryRunner.java,4,* this work for additional information regarding copyright ownership.
True,src/test/java/org/apache/commons/math/RetryRunner.java,src/test/java/org/apache/commons/math/RetryRunner.java,5,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/test/java/org/apache/commons/math/RetryRunner.java,src/test/java/org/apache/commons/math/RetryRunner.java,6,"* (the ""License""); you may not use this file except in compliance with"
True,src/test/java/org/apache/commons/math/RetryRunner.java,src/test/java/org/apache/commons/math/RetryRunner.java,7,* the License.  You may obtain a copy of the License at
True,src/test/java/org/apache/commons/math/RetryRunner.java,src/test/java/org/apache/commons/math/RetryRunner.java,9,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/java/org/apache/commons/math/RetryRunner.java,src/test/java/org/apache/commons/math/RetryRunner.java,11,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/java/org/apache/commons/math/RetryRunner.java,src/test/java/org/apache/commons/math/RetryRunner.java,12,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/java/org/apache/commons/math/RetryRunner.java,src/test/java/org/apache/commons/math/RetryRunner.java,13,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/java/org/apache/commons/math/RetryRunner.java,src/test/java/org/apache/commons/math/RetryRunner.java,14,* See the License for the specific language governing permissions and
True,src/test/java/org/apache/commons/math/RetryRunner.java,src/test/java/org/apache/commons/math/RetryRunner.java,15,* limitations under the License.
True,src/test/java/org/apache/commons/math/RetryRunner.java,src/test/java/org/apache/commons/math/RetryRunner.java,18,package org.apache.commons.math;
True,src/test/java/org/apache/commons/math/RetryRunner.java,src/test/java/org/apache/commons/math/RetryRunner.java,20,import org.junit.runners.BlockJUnit4ClassRunner;
True,src/test/java/org/apache/commons/math/RetryRunner.java,src/test/java/org/apache/commons/math/RetryRunner.java,21,import org.junit.runners.model.FrameworkMethod;
True,src/test/java/org/apache/commons/math/RetryRunner.java,src/test/java/org/apache/commons/math/RetryRunner.java,22,import org.junit.runners.model.InitializationError;
True,src/test/java/org/apache/commons/math/RetryRunner.java,src/test/java/org/apache/commons/math/RetryRunner.java,23,import org.junit.runners.model.Statement;
True,src/test/java/org/apache/commons/math/RetryRunner.java,src/test/java/org/apache/commons/math/RetryRunner.java,27,* A test runner that retries tests when assertions fail.
True,src/test/java/org/apache/commons/math/RetryRunner.java,src/test/java/org/apache/commons/math/RetryRunner.java,28,* @version $Revision$ $Date$
True,src/test/java/org/apache/commons/math/RetryRunner.java,src/test/java/org/apache/commons/math/RetryRunner.java,30,public class RetryRunner extends BlockJUnit4ClassRunner {
True,src/test/java/org/apache/commons/math/RetryRunner.java,src/test/java/org/apache/commons/math/RetryRunner.java,32,/** Maximal number of test run attempts. */
True,src/test/java/org/apache/commons/math/RetryRunner.java,src/test/java/org/apache/commons/math/RetryRunner.java,33,private static final int MAX_ATTEMPTS = 3;
True,src/test/java/org/apache/commons/math/RetryRunner.java,src/test/java/org/apache/commons/math/RetryRunner.java,35,/** Simple constructor.
True,src/test/java/org/apache/commons/math/RetryRunner.java,src/test/java/org/apache/commons/math/RetryRunner.java,36,* @param testClass class to test
True,src/test/java/org/apache/commons/math/RetryRunner.java,src/test/java/org/apache/commons/math/RetryRunner.java,37,* @throws InitializationError if default runner cannot be built
True,src/test/java/org/apache/commons/math/RetryRunner.java,src/test/java/org/apache/commons/math/RetryRunner.java,39,public RetryRunner(final Class<?> testClass)
True,src/test/java/org/apache/commons/math/RetryRunner.java,src/test/java/org/apache/commons/math/RetryRunner.java,40,throws InitializationError {
True,src/test/java/org/apache/commons/math/RetryRunner.java,src/test/java/org/apache/commons/math/RetryRunner.java,41,super(testClass);
True,src/test/java/org/apache/commons/math/RetryRunner.java,src/test/java/org/apache/commons/math/RetryRunner.java,44,@Override
True,src/test/java/org/apache/commons/math/RetryRunner.java,src/test/java/org/apache/commons/math/RetryRunner.java,45,"public Statement methodInvoker(FrameworkMethod method, Object test) {"
True,src/test/java/org/apache/commons/math/RetryRunner.java,src/test/java/org/apache/commons/math/RetryRunner.java,46,"final Statement singleTryStatement = super.methodInvoker(method, test);"
True,src/test/java/org/apache/commons/math/RetryRunner.java,src/test/java/org/apache/commons/math/RetryRunner.java,47,return new Statement() {
True,src/test/java/org/apache/commons/math/RetryRunner.java,src/test/java/org/apache/commons/math/RetryRunner.java,49,/** Evaluate the statement.
True,src/test/java/org/apache/commons/math/RetryRunner.java,src/test/java/org/apache/commons/math/RetryRunner.java,50,"* We attempt several runs for the test, at most MAX_ATTEMPTS."
True,src/test/java/org/apache/commons/math/RetryRunner.java,src/test/java/org/apache/commons/math/RetryRunner.java,51,"* if one attempt succeeds, we succeed, if all attempts fail, we"
True,src/test/java/org/apache/commons/math/RetryRunner.java,src/test/java/org/apache/commons/math/RetryRunner.java,52,* fail with the reason corresponding to the last attempt
True,src/test/java/org/apache/commons/math/RetryRunner.java,src/test/java/org/apache/commons/math/RetryRunner.java,54,public void evaluate() throws Throwable {
True,src/test/java/org/apache/commons/math/RetryRunner.java,src/test/java/org/apache/commons/math/RetryRunner.java,55,Throwable failureReason = null;
True,src/test/java/org/apache/commons/math/RetryRunner.java,src/test/java/org/apache/commons/math/RetryRunner.java,56,for (int i = 0; i < MAX_ATTEMPTS; ++i) {
True,src/test/java/org/apache/commons/math/RetryRunner.java,src/test/java/org/apache/commons/math/RetryRunner.java,57,try {
True,src/test/java/org/apache/commons/math/RetryRunner.java,src/test/java/org/apache/commons/math/RetryRunner.java,59,// do one test run attempt
True,src/test/java/org/apache/commons/math/RetryRunner.java,src/test/java/org/apache/commons/math/RetryRunner.java,60,singleTryStatement.evaluate();
True,src/test/java/org/apache/commons/math/RetryRunner.java,src/test/java/org/apache/commons/math/RetryRunner.java,62,"// attempt succeeded, stop evaluation here"
True,src/test/java/org/apache/commons/math/RetryRunner.java,src/test/java/org/apache/commons/math/RetryRunner.java,63,return;
True,src/test/java/org/apache/commons/math/RetryRunner.java,src/test/java/org/apache/commons/math/RetryRunner.java,65,} catch (Throwable t) {
True,src/test/java/org/apache/commons/math/RetryRunner.java,src/test/java/org/apache/commons/math/RetryRunner.java,66,"// attempt failed, store the reason why"
True,src/test/java/org/apache/commons/math/RetryRunner.java,src/test/java/org/apache/commons/math/RetryRunner.java,67,failureReason = t;
True,src/test/java/org/apache/commons/math/RetryRunner.java,src/test/java/org/apache/commons/math/RetryRunner.java,71,// all attempts failed
True,src/test/java/org/apache/commons/math/RetryRunner.java,src/test/java/org/apache/commons/math/RetryRunner.java,72,throw failureReason;
False,src/test/java/org/apache/commons/math/RetryTestCase.java,src/test/java/org/apache/commons/math/RetryTestCase.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/java/org/apache/commons/math/RetryTestCase.java,src/test/java/org/apache/commons/math/RetryTestCase.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/java/org/apache/commons/math/RetryTestCase.java,src/test/java/org/apache/commons/math/RetryTestCase.java,4, this work for additional information regarding copyright ownership.
False,src/test/java/org/apache/commons/math/RetryTestCase.java,src/test/java/org/apache/commons/math/RetryTestCase.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/java/org/apache/commons/math/RetryTestCase.java,src/test/java/org/apache/commons/math/RetryTestCase.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/java/org/apache/commons/math/RetryTestCase.java,src/test/java/org/apache/commons/math/RetryTestCase.java,7, the License.  You may obtain a copy of the License at
False,src/test/java/org/apache/commons/math/RetryTestCase.java,src/test/java/org/apache/commons/math/RetryTestCase.java,9,      http://www.apache.org/licenses/LICENSE-2.0
False,src/test/java/org/apache/commons/math/RetryTestCase.java,src/test/java/org/apache/commons/math/RetryTestCase.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/java/org/apache/commons/math/RetryTestCase.java,src/test/java/org/apache/commons/math/RetryTestCase.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/java/org/apache/commons/math/RetryTestCase.java,src/test/java/org/apache/commons/math/RetryTestCase.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/java/org/apache/commons/math/RetryTestCase.java,src/test/java/org/apache/commons/math/RetryTestCase.java,14, See the License for the specific language governing permissions and
False,src/test/java/org/apache/commons/math/RetryTestCase.java,src/test/java/org/apache/commons/math/RetryTestCase.java,15, limitations under the License.
False,src/test/java/org/apache/commons/math/RetryTestCase.java,src/test/java/org/apache/commons/math/RetryTestCase.java,18,ackage org.apache.commons.math;
False,src/test/java/org/apache/commons/math/RetryTestCase.java,src/test/java/org/apache/commons/math/RetryTestCase.java,22, A Test case that retries tests when assertions fail.
False,src/test/java/org/apache/commons/math/RetryTestCase.java,src/test/java/org/apache/commons/math/RetryTestCase.java,23, @version $Revision$ $Date$
False,src/test/java/org/apache/commons/math/RetryTestCase.java,src/test/java/org/apache/commons/math/RetryTestCase.java,25,ublic abstract class RetryTestCase {
False,src/test/java/org/apache/commons/math/RetryTestCase.java,src/test/java/org/apache/commons/math/RetryTestCase.java,27,/ TODO implement retry policy using Junit 4  API
False,src/test/java/org/apache/commons/math/RetryTestCase.java,src/test/java/org/apache/commons/math/RetryTestCase.java,30,/     *  Override runTest() to catch AssertionFailedError and retry
False,src/test/java/org/apache/commons/math/RetryTestCase.java,src/test/java/org/apache/commons/math/RetryTestCase.java,32,/    @Override
False,src/test/java/org/apache/commons/math/RetryTestCase.java,src/test/java/org/apache/commons/math/RetryTestCase.java,33,/    protected void runTest() throws Throwable {
False,src/test/java/org/apache/commons/math/RetryTestCase.java,src/test/java/org/apache/commons/math/RetryTestCase.java,34,/        try {
False,src/test/java/org/apache/commons/math/RetryTestCase.java,src/test/java/org/apache/commons/math/RetryTestCase.java,35,/            super.runTest();
False,src/test/java/org/apache/commons/math/RetryTestCase.java,src/test/java/org/apache/commons/math/RetryTestCase.java,36,/        } catch (AssertionFailedError err) {
False,src/test/java/org/apache/commons/math/RetryTestCase.java,src/test/java/org/apache/commons/math/RetryTestCase.java,37,"/            // System.out.println(""Retrying "" + this.getName());"
False,src/test/java/org/apache/commons/math/RetryTestCase.java,src/test/java/org/apache/commons/math/RetryTestCase.java,38,/            super.runTest();
False,src/test/java/org/apache/commons/math/random/EmpiricalDistributionTest.java,src/test/java/org/apache/commons/math/random/EmpiricalDistributionTest.java,26,mport org.apache.commons.math.RetryTestCase;
True,src/test/java/org/apache/commons/math/random/EmpiricalDistributionTest.java,src/test/java/org/apache/commons/math/random/EmpiricalDistributionTest.java,26,import org.apache.commons.math.RetryRunner;
True,src/test/java/org/apache/commons/math/random/EmpiricalDistributionTest.java,src/test/java/org/apache/commons/math/random/EmpiricalDistributionTest.java,32,import org.junit.runner.RunWith;
False,src/test/java/org/apache/commons/math/random/EmpiricalDistributionTest.java,src/test/java/org/apache/commons/math/random/EmpiricalDistributionTest.java,39,ublic final class EmpiricalDistributionTest extends RetryTestCase {
True,src/test/java/org/apache/commons/math/random/EmpiricalDistributionTest.java,src/test/java/org/apache/commons/math/random/EmpiricalDistributionTest.java,40,@RunWith(RetryRunner.class)
True,src/test/java/org/apache/commons/math/random/EmpiricalDistributionTest.java,src/test/java/org/apache/commons/math/random/EmpiricalDistributionTest.java,41,public final class EmpiricalDistributionTest {
False,src/test/java/org/apache/commons/math/random/RandomDataTest.java,src/test/java/org/apache/commons/math/random/RandomDataTest.java,25,mport org.apache.commons.math.RetryTestCase;
True,src/test/java/org/apache/commons/math/random/RandomDataTest.java,src/test/java/org/apache/commons/math/random/RandomDataTest.java,25,import org.apache.commons.math.RetryRunner;
True,src/test/java/org/apache/commons/math/random/RandomDataTest.java,src/test/java/org/apache/commons/math/random/RandomDataTest.java,52,import org.junit.runner.RunWith;
False,src/test/java/org/apache/commons/math/random/RandomDataTest.java,src/test/java/org/apache/commons/math/random/RandomDataTest.java,60,ublic class RandomDataTest extends RetryTestCase {
True,src/test/java/org/apache/commons/math/random/RandomDataTest.java,src/test/java/org/apache/commons/math/random/RandomDataTest.java,61,@RunWith(RetryRunner.class)
True,src/test/java/org/apache/commons/math/random/RandomDataTest.java,src/test/java/org/apache/commons/math/random/RandomDataTest.java,62,public class RandomDataTest {
False,src/test/java/org/apache/commons/math/random/ValueServerTest.java,src/test/java/org/apache/commons/math/random/ValueServerTest.java,22,mport org.apache.commons.math.RetryTestCase;
True,src/test/java/org/apache/commons/math/random/ValueServerTest.java,src/test/java/org/apache/commons/math/random/ValueServerTest.java,22,import org.apache.commons.math.RetryRunner;
True,src/test/java/org/apache/commons/math/random/ValueServerTest.java,src/test/java/org/apache/commons/math/random/ValueServerTest.java,27,import org.junit.runner.RunWith;
False,src/test/java/org/apache/commons/math/random/ValueServerTest.java,src/test/java/org/apache/commons/math/random/ValueServerTest.java,34,ublic final class ValueServerTest extends RetryTestCase {
True,src/test/java/org/apache/commons/math/random/ValueServerTest.java,src/test/java/org/apache/commons/math/random/ValueServerTest.java,35,@RunWith(RetryRunner.class)
True,src/test/java/org/apache/commons/math/random/ValueServerTest.java,src/test/java/org/apache/commons/math/random/ValueServerTest.java,36,public final class ValueServerTest {
