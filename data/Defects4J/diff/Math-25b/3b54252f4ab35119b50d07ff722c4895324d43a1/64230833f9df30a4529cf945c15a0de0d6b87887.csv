is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/math/linear/CholeskyDecomposition.java,src/main/java/org/apache/commons/math/linear/CholeskyDecomposition.java,31,"   NotPositiveDefiniteMatrixException} when a matrix cannot be decomposed,</li>"
True,src/main/java/org/apache/commons/math/linear/CholeskyDecomposition.java,src/main/java/org/apache/commons/math/linear/CholeskyDecomposition.java,31,*   org.apache.commons.math.exception.NonPositiveDefiniteMatrixException}
True,src/main/java/org/apache/commons/math/linear/CholeskyDecomposition.java,src/main/java/org/apache/commons/math/linear/CholeskyDecomposition.java,32,"*   when a matrix cannot be decomposed,</li>"
False,src/main/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java,272, @throws IllegalArgumentException if matrices dimensions don't match
False,src/main/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java,273, @throws InvalidMatrixException if decomposed matrix is singular
True,src/main/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java,272,* @throws DimensionMismatchException if the matrices dimensions do not match.
True,src/main/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java,273,* @throws org.apache.commons.math.exception.SingularMatrixException if
True,src/main/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java,274,* the decomposed matrix is singular.
False,src/main/java/org/apache/commons/math/linear/DecompositionSolver.java,src/main/java/org/apache/commons/math/linear/DecompositionSolver.java,43, @exception IllegalArgumentException if matrices dimensions don't match
False,src/main/java/org/apache/commons/math/linear/DecompositionSolver.java,src/main/java/org/apache/commons/math/linear/DecompositionSolver.java,44, @exception InvalidMatrixException if decomposed matrix is singular
True,src/main/java/org/apache/commons/math/linear/DecompositionSolver.java,src/main/java/org/apache/commons/math/linear/DecompositionSolver.java,43,* @throws org.apache.commons.math.exception.DimensionMismatchException
True,src/main/java/org/apache/commons/math/linear/DecompositionSolver.java,src/main/java/org/apache/commons/math/linear/DecompositionSolver.java,44,* if the matrices dimensions do not match.
True,src/main/java/org/apache/commons/math/linear/DecompositionSolver.java,src/main/java/org/apache/commons/math/linear/DecompositionSolver.java,45,* @throws org.apache.commons.math.exception.SingularMatrixException
True,src/main/java/org/apache/commons/math/linear/DecompositionSolver.java,src/main/java/org/apache/commons/math/linear/DecompositionSolver.java,46,* if the decomposed matrix is singular.
False,src/main/java/org/apache/commons/math/linear/DecompositionSolver.java,src/main/java/org/apache/commons/math/linear/DecompositionSolver.java,46,ouble[] solve(final double[] b)
False,src/main/java/org/apache/commons/math/linear/DecompositionSolver.java,src/main/java/org/apache/commons/math/linear/DecompositionSolver.java,47,"hrows IllegalArgumentException, InvalidMatrixException;"
True,src/main/java/org/apache/commons/math/linear/DecompositionSolver.java,src/main/java/org/apache/commons/math/linear/DecompositionSolver.java,48,double[] solve(final double[] b);
False,src/main/java/org/apache/commons/math/linear/DecompositionSolver.java,src/main/java/org/apache/commons/math/linear/DecompositionSolver.java,54, @exception IllegalArgumentException if matrices dimensions don't match
False,src/main/java/org/apache/commons/math/linear/DecompositionSolver.java,src/main/java/org/apache/commons/math/linear/DecompositionSolver.java,55, @exception InvalidMatrixException if decomposed matrix is singular
True,src/main/java/org/apache/commons/math/linear/DecompositionSolver.java,src/main/java/org/apache/commons/math/linear/DecompositionSolver.java,55,* @throws org.apache.commons.math.exception.DimensionMismatchException
True,src/main/java/org/apache/commons/math/linear/DecompositionSolver.java,src/main/java/org/apache/commons/math/linear/DecompositionSolver.java,56,* if the matrices dimensions do not match.
True,src/main/java/org/apache/commons/math/linear/DecompositionSolver.java,src/main/java/org/apache/commons/math/linear/DecompositionSolver.java,57,* @throws org.apache.commons.math.exception.SingularMatrixException
True,src/main/java/org/apache/commons/math/linear/DecompositionSolver.java,src/main/java/org/apache/commons/math/linear/DecompositionSolver.java,58,* if the decomposed matrix is singular.
False,src/main/java/org/apache/commons/math/linear/DecompositionSolver.java,src/main/java/org/apache/commons/math/linear/DecompositionSolver.java,57,ealVector solve(final RealVector b)
False,src/main/java/org/apache/commons/math/linear/DecompositionSolver.java,src/main/java/org/apache/commons/math/linear/DecompositionSolver.java,58,"hrows IllegalArgumentException, InvalidMatrixException;"
True,src/main/java/org/apache/commons/math/linear/DecompositionSolver.java,src/main/java/org/apache/commons/math/linear/DecompositionSolver.java,60,RealVector solve(final RealVector b);
False,src/main/java/org/apache/commons/math/linear/DecompositionSolver.java,src/main/java/org/apache/commons/math/linear/DecompositionSolver.java,65, @exception IllegalArgumentException if matrices dimensions don't match
False,src/main/java/org/apache/commons/math/linear/DecompositionSolver.java,src/main/java/org/apache/commons/math/linear/DecompositionSolver.java,66, @exception InvalidMatrixException if decomposed matrix is singular
True,src/main/java/org/apache/commons/math/linear/DecompositionSolver.java,src/main/java/org/apache/commons/math/linear/DecompositionSolver.java,67,* @throws org.apache.commons.math.exception.DimensionMismatchException
True,src/main/java/org/apache/commons/math/linear/DecompositionSolver.java,src/main/java/org/apache/commons/math/linear/DecompositionSolver.java,68,* if the matrices dimensions do not match.
True,src/main/java/org/apache/commons/math/linear/DecompositionSolver.java,src/main/java/org/apache/commons/math/linear/DecompositionSolver.java,69,* @throws org.apache.commons.math.exception.SingularMatrixException
True,src/main/java/org/apache/commons/math/linear/DecompositionSolver.java,src/main/java/org/apache/commons/math/linear/DecompositionSolver.java,70,* if the decomposed matrix is singular.
False,src/main/java/org/apache/commons/math/linear/DecompositionSolver.java,src/main/java/org/apache/commons/math/linear/DecompositionSolver.java,68,ealMatrix solve(final RealMatrix b)
False,src/main/java/org/apache/commons/math/linear/DecompositionSolver.java,src/main/java/org/apache/commons/math/linear/DecompositionSolver.java,69,"hrows IllegalArgumentException, InvalidMatrixException;"
True,src/main/java/org/apache/commons/math/linear/DecompositionSolver.java,src/main/java/org/apache/commons/math/linear/DecompositionSolver.java,72,RealMatrix solve(final RealMatrix b);
False,src/main/java/org/apache/commons/math/linear/DecompositionSolver.java,src/main/java/org/apache/commons/math/linear/DecompositionSolver.java,73, @return true if the decomposed matrix is non-singular
True,src/main/java/org/apache/commons/math/linear/DecompositionSolver.java,src/main/java/org/apache/commons/math/linear/DecompositionSolver.java,76,* @return true if the decomposed matrix is non-singular.
False,src/main/java/org/apache/commons/math/linear/DecompositionSolver.java,src/main/java/org/apache/commons/math/linear/DecompositionSolver.java,79, @throws InvalidMatrixException if decomposed matrix is singular
True,src/main/java/org/apache/commons/math/linear/DecompositionSolver.java,src/main/java/org/apache/commons/math/linear/DecompositionSolver.java,82,* @throws org.apache.commons.math.exception.SingularMatrixException
True,src/main/java/org/apache/commons/math/linear/DecompositionSolver.java,src/main/java/org/apache/commons/math/linear/DecompositionSolver.java,83,* if the decomposed matrix is singular.
False,src/main/java/org/apache/commons/math/linear/DecompositionSolver.java,src/main/java/org/apache/commons/math/linear/DecompositionSolver.java,81,ealMatrix getInverse()
False,src/main/java/org/apache/commons/math/linear/DecompositionSolver.java,src/main/java/org/apache/commons/math/linear/DecompositionSolver.java,82,hrows InvalidMatrixException;
True,src/main/java/org/apache/commons/math/linear/DecompositionSolver.java,src/main/java/org/apache/commons/math/linear/DecompositionSolver.java,85,RealMatrix getInverse();
False,src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,279, @param b
False,src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,280,            right-hand side of the equation A &times; X = B
False,src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,281, @return a vector X that minimizes the two norm of A &times; X - B
False,src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,282, @exception IllegalArgumentException
False,src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,283,                if matrices dimensions don't match
False,src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,284, @exception InvalidMatrixException
False,src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,285,                if decomposed matrix is singular
True,src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,279,* @param b Right-hand side of the equation A &times; X = B
True,src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,280,* @return a Vector X that minimizes the two norm of A &times; X - B
True,src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,281,* @throws DimensionMismatchException if the matrices dimensions do not match.
True,src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java,282,* @throws SingularMatrixException if the decomposed matrix is singular.
False,src/main/java/org/apache/commons/math/linear/FieldDecompositionSolver.java,src/main/java/org/apache/commons/math/linear/FieldDecompositionSolver.java,45, @exception IllegalArgumentException if matrices dimensions don't match
False,src/main/java/org/apache/commons/math/linear/FieldDecompositionSolver.java,src/main/java/org/apache/commons/math/linear/FieldDecompositionSolver.java,46, @exception InvalidMatrixException if decomposed matrix is singular
True,src/main/java/org/apache/commons/math/linear/FieldDecompositionSolver.java,src/main/java/org/apache/commons/math/linear/FieldDecompositionSolver.java,45,* @throws org.apache.commons.math.exception.DimensionMismatchException
True,src/main/java/org/apache/commons/math/linear/FieldDecompositionSolver.java,src/main/java/org/apache/commons/math/linear/FieldDecompositionSolver.java,46,* if the matrices dimensions do not match.
True,src/main/java/org/apache/commons/math/linear/FieldDecompositionSolver.java,src/main/java/org/apache/commons/math/linear/FieldDecompositionSolver.java,47,* @throws org.apache.commons.math.exception.SingularMatrixException
True,src/main/java/org/apache/commons/math/linear/FieldDecompositionSolver.java,src/main/java/org/apache/commons/math/linear/FieldDecompositionSolver.java,48,* if the decomposed matrix is singular.
False,src/main/java/org/apache/commons/math/linear/FieldDecompositionSolver.java,src/main/java/org/apache/commons/math/linear/FieldDecompositionSolver.java,48,[] solve(final T[] b)
False,src/main/java/org/apache/commons/math/linear/FieldDecompositionSolver.java,src/main/java/org/apache/commons/math/linear/FieldDecompositionSolver.java,49,"hrows IllegalArgumentException, InvalidMatrixException;"
True,src/main/java/org/apache/commons/math/linear/FieldDecompositionSolver.java,src/main/java/org/apache/commons/math/linear/FieldDecompositionSolver.java,50,T[] solve(final T[] b);
False,src/main/java/org/apache/commons/math/linear/FieldDecompositionSolver.java,src/main/java/org/apache/commons/math/linear/FieldDecompositionSolver.java,56, @exception IllegalArgumentException if matrices dimensions don't match
False,src/main/java/org/apache/commons/math/linear/FieldDecompositionSolver.java,src/main/java/org/apache/commons/math/linear/FieldDecompositionSolver.java,57, @exception InvalidMatrixException if decomposed matrix is singular
True,src/main/java/org/apache/commons/math/linear/FieldDecompositionSolver.java,src/main/java/org/apache/commons/math/linear/FieldDecompositionSolver.java,57,* @throws org.apache.commons.math.exception.DimensionMismatchException
True,src/main/java/org/apache/commons/math/linear/FieldDecompositionSolver.java,src/main/java/org/apache/commons/math/linear/FieldDecompositionSolver.java,58,* if the matrices dimensions do not match.
True,src/main/java/org/apache/commons/math/linear/FieldDecompositionSolver.java,src/main/java/org/apache/commons/math/linear/FieldDecompositionSolver.java,59,* @throws org.apache.commons.math.exception.SingularMatrixException
True,src/main/java/org/apache/commons/math/linear/FieldDecompositionSolver.java,src/main/java/org/apache/commons/math/linear/FieldDecompositionSolver.java,60,* if the decomposed matrix is singular.
False,src/main/java/org/apache/commons/math/linear/FieldDecompositionSolver.java,src/main/java/org/apache/commons/math/linear/FieldDecompositionSolver.java,59,ieldVector<T> solve(final FieldVector<T> b)
False,src/main/java/org/apache/commons/math/linear/FieldDecompositionSolver.java,src/main/java/org/apache/commons/math/linear/FieldDecompositionSolver.java,60,"hrows IllegalArgumentException, InvalidMatrixException;"
True,src/main/java/org/apache/commons/math/linear/FieldDecompositionSolver.java,src/main/java/org/apache/commons/math/linear/FieldDecompositionSolver.java,62,FieldVector<T> solve(final FieldVector<T> b);
False,src/main/java/org/apache/commons/math/linear/FieldDecompositionSolver.java,src/main/java/org/apache/commons/math/linear/FieldDecompositionSolver.java,67, @exception IllegalArgumentException if matrices dimensions don't match
False,src/main/java/org/apache/commons/math/linear/FieldDecompositionSolver.java,src/main/java/org/apache/commons/math/linear/FieldDecompositionSolver.java,68, @exception InvalidMatrixException if decomposed matrix is singular
True,src/main/java/org/apache/commons/math/linear/FieldDecompositionSolver.java,src/main/java/org/apache/commons/math/linear/FieldDecompositionSolver.java,69,* @throws org.apache.commons.math.exception.DimensionMismatchException
True,src/main/java/org/apache/commons/math/linear/FieldDecompositionSolver.java,src/main/java/org/apache/commons/math/linear/FieldDecompositionSolver.java,70,* if the matrices dimensions do not match.
True,src/main/java/org/apache/commons/math/linear/FieldDecompositionSolver.java,src/main/java/org/apache/commons/math/linear/FieldDecompositionSolver.java,71,* @throws org.apache.commons.math.exception.SingularMatrixException
True,src/main/java/org/apache/commons/math/linear/FieldDecompositionSolver.java,src/main/java/org/apache/commons/math/linear/FieldDecompositionSolver.java,72,* if the decomposed matrix is singular.
False,src/main/java/org/apache/commons/math/linear/FieldDecompositionSolver.java,src/main/java/org/apache/commons/math/linear/FieldDecompositionSolver.java,70,ieldMatrix<T> solve(final FieldMatrix<T> b)
False,src/main/java/org/apache/commons/math/linear/FieldDecompositionSolver.java,src/main/java/org/apache/commons/math/linear/FieldDecompositionSolver.java,71,"hrows IllegalArgumentException, InvalidMatrixException;"
True,src/main/java/org/apache/commons/math/linear/FieldDecompositionSolver.java,src/main/java/org/apache/commons/math/linear/FieldDecompositionSolver.java,74,FieldMatrix<T> solve(final FieldMatrix<T> b);
False,src/main/java/org/apache/commons/math/linear/FieldDecompositionSolver.java,src/main/java/org/apache/commons/math/linear/FieldDecompositionSolver.java,81, @throws InvalidMatrixException if decomposed matrix is singular
True,src/main/java/org/apache/commons/math/linear/FieldDecompositionSolver.java,src/main/java/org/apache/commons/math/linear/FieldDecompositionSolver.java,84,* @throws org.apache.commons.math.exception.SingularMatrixException
True,src/main/java/org/apache/commons/math/linear/FieldDecompositionSolver.java,src/main/java/org/apache/commons/math/linear/FieldDecompositionSolver.java,85,* if the decomposed matrix is singular.
False,src/main/java/org/apache/commons/math/linear/FieldDecompositionSolver.java,src/main/java/org/apache/commons/math/linear/FieldDecompositionSolver.java,83,ieldMatrix<T> getInverse()
False,src/main/java/org/apache/commons/math/linear/FieldDecompositionSolver.java,src/main/java/org/apache/commons/math/linear/FieldDecompositionSolver.java,84,hrows InvalidMatrixException;
True,src/main/java/org/apache/commons/math/linear/FieldDecompositionSolver.java,src/main/java/org/apache/commons/math/linear/FieldDecompositionSolver.java,87,FieldMatrix<T> getInverse();
False,src/main/java/org/apache/commons/math/linear/FieldLUDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/FieldLUDecompositionImpl.java,347, @throws IllegalArgumentException if matrices dimensions don't match
False,src/main/java/org/apache/commons/math/linear/FieldLUDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/FieldLUDecompositionImpl.java,348, @throws InvalidMatrixException if decomposed matrix is singular
True,src/main/java/org/apache/commons/math/linear/FieldLUDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/FieldLUDecompositionImpl.java,347,* @throws DimensionMismatchException if the matrices dimensions do not match.
True,src/main/java/org/apache/commons/math/linear/FieldLUDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/FieldLUDecompositionImpl.java,348,* @throws SingularMatrixException if the decomposed matrix is singular.
False,src/main/java/org/apache/commons/math/linear/FieldLUDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/FieldLUDecompositionImpl.java,410,ublic FieldMatrix<T> getInverse() throws InvalidMatrixException {
True,src/main/java/org/apache/commons/math/linear/FieldLUDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/FieldLUDecompositionImpl.java,410,public FieldMatrix<T> getInverse() {
False,src/main/java/org/apache/commons/math/linear/InvalidMatrixException.java,src/main/java/org/apache/commons/math/linear/InvalidMatrixException.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/main/java/org/apache/commons/math/linear/InvalidMatrixException.java,src/main/java/org/apache/commons/math/linear/InvalidMatrixException.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/main/java/org/apache/commons/math/linear/InvalidMatrixException.java,src/main/java/org/apache/commons/math/linear/InvalidMatrixException.java,4, this work for additional information regarding copyright ownership.
False,src/main/java/org/apache/commons/math/linear/InvalidMatrixException.java,src/main/java/org/apache/commons/math/linear/InvalidMatrixException.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/main/java/org/apache/commons/math/linear/InvalidMatrixException.java,src/main/java/org/apache/commons/math/linear/InvalidMatrixException.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/main/java/org/apache/commons/math/linear/InvalidMatrixException.java,src/main/java/org/apache/commons/math/linear/InvalidMatrixException.java,7, the License.  You may obtain a copy of the License at
False,src/main/java/org/apache/commons/math/linear/InvalidMatrixException.java,src/main/java/org/apache/commons/math/linear/InvalidMatrixException.java,9,      http://www.apache.org/licenses/LICENSE-2.0
False,src/main/java/org/apache/commons/math/linear/InvalidMatrixException.java,src/main/java/org/apache/commons/math/linear/InvalidMatrixException.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/main/java/org/apache/commons/math/linear/InvalidMatrixException.java,src/main/java/org/apache/commons/math/linear/InvalidMatrixException.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/main/java/org/apache/commons/math/linear/InvalidMatrixException.java,src/main/java/org/apache/commons/math/linear/InvalidMatrixException.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/main/java/org/apache/commons/math/linear/InvalidMatrixException.java,src/main/java/org/apache/commons/math/linear/InvalidMatrixException.java,14, See the License for the specific language governing permissions and
False,src/main/java/org/apache/commons/math/linear/InvalidMatrixException.java,src/main/java/org/apache/commons/math/linear/InvalidMatrixException.java,15, limitations under the License.
False,src/main/java/org/apache/commons/math/linear/InvalidMatrixException.java,src/main/java/org/apache/commons/math/linear/InvalidMatrixException.java,18,ackage org.apache.commons.math.linear;
False,src/main/java/org/apache/commons/math/linear/InvalidMatrixException.java,src/main/java/org/apache/commons/math/linear/InvalidMatrixException.java,20,mport org.apache.commons.math.MathRuntimeException;
False,src/main/java/org/apache/commons/math/linear/InvalidMatrixException.java,src/main/java/org/apache/commons/math/linear/InvalidMatrixException.java,21,mport org.apache.commons.math.exception.util.DummyLocalizable;
False,src/main/java/org/apache/commons/math/linear/InvalidMatrixException.java,src/main/java/org/apache/commons/math/linear/InvalidMatrixException.java,22,mport org.apache.commons.math.exception.util.Localizable;
False,src/main/java/org/apache/commons/math/linear/InvalidMatrixException.java,src/main/java/org/apache/commons/math/linear/InvalidMatrixException.java,25," Thrown when a system attempts an operation on a matrix, and"
False,src/main/java/org/apache/commons/math/linear/InvalidMatrixException.java,src/main/java/org/apache/commons/math/linear/InvalidMatrixException.java,26, that matrix does not satisfy the preconditions for the
False,src/main/java/org/apache/commons/math/linear/InvalidMatrixException.java,src/main/java/org/apache/commons/math/linear/InvalidMatrixException.java,27, aforementioned operation.
False,src/main/java/org/apache/commons/math/linear/InvalidMatrixException.java,src/main/java/org/apache/commons/math/linear/InvalidMatrixException.java,28, @version $Revision$ $Date$
False,src/main/java/org/apache/commons/math/linear/InvalidMatrixException.java,src/main/java/org/apache/commons/math/linear/InvalidMatrixException.java,29, @deprecated since 2.2. Please use the classes in the
False,src/main/java/org/apache/commons/math/linear/InvalidMatrixException.java,src/main/java/org/apache/commons/math/linear/InvalidMatrixException.java,30, {@link org.apache.commons.math.exception} package.
False,src/main/java/org/apache/commons/math/linear/InvalidMatrixException.java,src/main/java/org/apache/commons/math/linear/InvalidMatrixException.java,32,Deprecated
False,src/main/java/org/apache/commons/math/linear/InvalidMatrixException.java,src/main/java/org/apache/commons/math/linear/InvalidMatrixException.java,33,ublic class InvalidMatrixException extends MathRuntimeException {
False,src/main/java/org/apache/commons/math/linear/InvalidMatrixException.java,src/main/java/org/apache/commons/math/linear/InvalidMatrixException.java,35,** Serializable version identifier. */
False,src/main/java/org/apache/commons/math/linear/InvalidMatrixException.java,src/main/java/org/apache/commons/math/linear/InvalidMatrixException.java,36,rivate static final long serialVersionUID = -2068020346562029801L;
False,src/main/java/org/apache/commons/math/linear/InvalidMatrixException.java,src/main/java/org/apache/commons/math/linear/InvalidMatrixException.java,39, Construct an exception with the given message.
False,src/main/java/org/apache/commons/math/linear/InvalidMatrixException.java,src/main/java/org/apache/commons/math/linear/InvalidMatrixException.java,40, @param pattern format specifier
False,src/main/java/org/apache/commons/math/linear/InvalidMatrixException.java,src/main/java/org/apache/commons/math/linear/InvalidMatrixException.java,41, @param arguments format arguments
False,src/main/java/org/apache/commons/math/linear/InvalidMatrixException.java,src/main/java/org/apache/commons/math/linear/InvalidMatrixException.java,42, @since 2.0
False,src/main/java/org/apache/commons/math/linear/InvalidMatrixException.java,src/main/java/org/apache/commons/math/linear/InvalidMatrixException.java,44,"ublic InvalidMatrixException(final String pattern, final Object ... arguments) {"
False,src/main/java/org/apache/commons/math/linear/InvalidMatrixException.java,src/main/java/org/apache/commons/math/linear/InvalidMatrixException.java,45,"his(new DummyLocalizable(pattern), arguments);"
False,src/main/java/org/apache/commons/math/linear/InvalidMatrixException.java,src/main/java/org/apache/commons/math/linear/InvalidMatrixException.java,49, Construct an exception with the given message.
False,src/main/java/org/apache/commons/math/linear/InvalidMatrixException.java,src/main/java/org/apache/commons/math/linear/InvalidMatrixException.java,50, @param pattern format specifier
False,src/main/java/org/apache/commons/math/linear/InvalidMatrixException.java,src/main/java/org/apache/commons/math/linear/InvalidMatrixException.java,51, @param arguments format arguments
False,src/main/java/org/apache/commons/math/linear/InvalidMatrixException.java,src/main/java/org/apache/commons/math/linear/InvalidMatrixException.java,52, @since 2.2
False,src/main/java/org/apache/commons/math/linear/InvalidMatrixException.java,src/main/java/org/apache/commons/math/linear/InvalidMatrixException.java,54,"ublic InvalidMatrixException(final Localizable pattern, final Object ... arguments) {"
False,src/main/java/org/apache/commons/math/linear/InvalidMatrixException.java,src/main/java/org/apache/commons/math/linear/InvalidMatrixException.java,55,"uper(pattern, arguments);"
False,src/main/java/org/apache/commons/math/linear/InvalidMatrixException.java,src/main/java/org/apache/commons/math/linear/InvalidMatrixException.java,59, Construct an exception with the given message.
False,src/main/java/org/apache/commons/math/linear/InvalidMatrixException.java,src/main/java/org/apache/commons/math/linear/InvalidMatrixException.java,60, @param cause the exception or error that caused this exception
False,src/main/java/org/apache/commons/math/linear/InvalidMatrixException.java,src/main/java/org/apache/commons/math/linear/InvalidMatrixException.java,61, to be thrown.
False,src/main/java/org/apache/commons/math/linear/InvalidMatrixException.java,src/main/java/org/apache/commons/math/linear/InvalidMatrixException.java,62, @since 2.0
False,src/main/java/org/apache/commons/math/linear/InvalidMatrixException.java,src/main/java/org/apache/commons/math/linear/InvalidMatrixException.java,64,ublic InvalidMatrixException(final Throwable cause) {
False,src/main/java/org/apache/commons/math/linear/InvalidMatrixException.java,src/main/java/org/apache/commons/math/linear/InvalidMatrixException.java,65,uper(cause);
False,src/main/java/org/apache/commons/math/linear/LUDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/LUDecompositionImpl.java,57, @param matrix The matrix to decompose.
False,src/main/java/org/apache/commons/math/linear/LUDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/LUDecompositionImpl.java,58, @throws InvalidMatrixException if matrix is not square
True,src/main/java/org/apache/commons/math/linear/LUDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/LUDecompositionImpl.java,57,* @param matrix Matrix to decompose.
True,src/main/java/org/apache/commons/math/linear/LUDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/LUDecompositionImpl.java,58,* @throws NonSquareMatrixException if matrix is not square.
False,src/main/java/org/apache/commons/math/linear/LUDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/LUDecompositionImpl.java,60,ublic LUDecompositionImpl(RealMatrix matrix)
False,src/main/java/org/apache/commons/math/linear/LUDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/LUDecompositionImpl.java,61,hrows InvalidMatrixException {
True,src/main/java/org/apache/commons/math/linear/LUDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/LUDecompositionImpl.java,60,public LUDecompositionImpl(RealMatrix matrix) {
False,src/main/java/org/apache/commons/math/linear/LUDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/LUDecompositionImpl.java,336, @throws InvalidMatrixException if decomposed matrix is singular
True,src/main/java/org/apache/commons/math/linear/LUDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/LUDecompositionImpl.java,335,* @throws SingularMatrixException if decomposed matrix is singular.
False,src/main/java/org/apache/commons/math/linear/LUDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/LUDecompositionImpl.java,397,ublic RealMatrix getInverse() throws InvalidMatrixException {
True,src/main/java/org/apache/commons/math/linear/LUDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/LUDecompositionImpl.java,396,public RealMatrix getInverse() {
False,src/main/java/org/apache/commons/math/linear/QRDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/QRDecompositionImpl.java,334, @throws IllegalArgumentException if matrices dimensions don't match
False,src/main/java/org/apache/commons/math/linear/QRDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/QRDecompositionImpl.java,335, @throws InvalidMatrixException if decomposed matrix is singular
True,src/main/java/org/apache/commons/math/linear/QRDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/QRDecompositionImpl.java,334,* @throws DimensionMismatchException if the matrices dimensions do not match.
True,src/main/java/org/apache/commons/math/linear/QRDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/QRDecompositionImpl.java,335,* @throws SingularMatrixException if the decomposed matrix is singular.
False,src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java,69, @param matrix
False,src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java,70,            The matrix to decompose.
False,src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java,71, @exception InvalidMatrixException
False,src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java,72,                (wrapping a
False,src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java,73,                {@link org.apache.commons.math.ConvergenceException} if
False,src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java,74,                algorithm fails to converge
True,src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java,69,* @param matrix Matrix to decompose.
False,src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java,76,ublic SingularValueDecompositionImpl(final RealMatrix matrix)
False,src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java,77,hrows InvalidMatrixException {
True,src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java,71,public SingularValueDecompositionImpl(final RealMatrix matrix) {
False,src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java,157,ublic RealMatrix getU() throws InvalidMatrixException {
True,src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java,150,public RealMatrix getU() {
False,src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java,164,ublic RealMatrix getUT() throws InvalidMatrixException {
True,src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java,157,public RealMatrix getUT() {
False,src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java,176,ublic RealMatrix getS() throws InvalidMatrixException {
True,src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java,169,public RealMatrix getS() {
False,src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java,188,ublic double[] getSingularValues() throws InvalidMatrixException {
True,src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java,181,public double[] getSingularValues() {
False,src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java,193,ublic RealMatrix getV() throws InvalidMatrixException {
True,src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java,186,public RealMatrix getV() {
False,src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java,200,ublic RealMatrix getVT() throws InvalidMatrixException {
True,src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java,193,public RealMatrix getVT() {
False,src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java,243,ublic double getNorm() throws InvalidMatrixException {
True,src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java,236,public double getNorm() {
False,src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java,248,ublic double getConditionNumber() throws InvalidMatrixException {
True,src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java,241,public double getConditionNumber() {
False,src/test/java/org/apache/commons/math/linear/InvalidMatrixExceptionTest.java,src/test/java/org/apache/commons/math/linear/InvalidMatrixExceptionTest.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/java/org/apache/commons/math/linear/InvalidMatrixExceptionTest.java,src/test/java/org/apache/commons/math/linear/InvalidMatrixExceptionTest.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/java/org/apache/commons/math/linear/InvalidMatrixExceptionTest.java,src/test/java/org/apache/commons/math/linear/InvalidMatrixExceptionTest.java,4, this work for additional information regarding copyright ownership.
False,src/test/java/org/apache/commons/math/linear/InvalidMatrixExceptionTest.java,src/test/java/org/apache/commons/math/linear/InvalidMatrixExceptionTest.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/java/org/apache/commons/math/linear/InvalidMatrixExceptionTest.java,src/test/java/org/apache/commons/math/linear/InvalidMatrixExceptionTest.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/java/org/apache/commons/math/linear/InvalidMatrixExceptionTest.java,src/test/java/org/apache/commons/math/linear/InvalidMatrixExceptionTest.java,7, the License.  You may obtain a copy of the License at
False,src/test/java/org/apache/commons/math/linear/InvalidMatrixExceptionTest.java,src/test/java/org/apache/commons/math/linear/InvalidMatrixExceptionTest.java,9,      http://www.apache.org/licenses/LICENSE-2.0
False,src/test/java/org/apache/commons/math/linear/InvalidMatrixExceptionTest.java,src/test/java/org/apache/commons/math/linear/InvalidMatrixExceptionTest.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/java/org/apache/commons/math/linear/InvalidMatrixExceptionTest.java,src/test/java/org/apache/commons/math/linear/InvalidMatrixExceptionTest.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/java/org/apache/commons/math/linear/InvalidMatrixExceptionTest.java,src/test/java/org/apache/commons/math/linear/InvalidMatrixExceptionTest.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/java/org/apache/commons/math/linear/InvalidMatrixExceptionTest.java,src/test/java/org/apache/commons/math/linear/InvalidMatrixExceptionTest.java,14, See the License for the specific language governing permissions and
False,src/test/java/org/apache/commons/math/linear/InvalidMatrixExceptionTest.java,src/test/java/org/apache/commons/math/linear/InvalidMatrixExceptionTest.java,15, limitations under the License.
False,src/test/java/org/apache/commons/math/linear/InvalidMatrixExceptionTest.java,src/test/java/org/apache/commons/math/linear/InvalidMatrixExceptionTest.java,18,ackage org.apache.commons.math.linear;
False,src/test/java/org/apache/commons/math/linear/InvalidMatrixExceptionTest.java,src/test/java/org/apache/commons/math/linear/InvalidMatrixExceptionTest.java,20,mport junit.framework.TestCase;
False,src/test/java/org/apache/commons/math/linear/InvalidMatrixExceptionTest.java,src/test/java/org/apache/commons/math/linear/InvalidMatrixExceptionTest.java,23, @version $Revision$ $Date$
False,src/test/java/org/apache/commons/math/linear/InvalidMatrixExceptionTest.java,src/test/java/org/apache/commons/math/linear/InvalidMatrixExceptionTest.java,25,ublic class InvalidMatrixExceptionTest extends TestCase {
False,src/test/java/org/apache/commons/math/linear/InvalidMatrixExceptionTest.java,src/test/java/org/apache/commons/math/linear/InvalidMatrixExceptionTest.java,27,ublic void testConstructorMessage(){
False,src/test/java/org/apache/commons/math/linear/InvalidMatrixExceptionTest.java,src/test/java/org/apache/commons/math/linear/InvalidMatrixExceptionTest.java,28,"tring msg = ""message"";"
False,src/test/java/org/apache/commons/math/linear/InvalidMatrixExceptionTest.java,src/test/java/org/apache/commons/math/linear/InvalidMatrixExceptionTest.java,29,nvalidMatrixException ex = new InvalidMatrixException(msg);
False,src/test/java/org/apache/commons/math/linear/InvalidMatrixExceptionTest.java,src/test/java/org/apache/commons/math/linear/InvalidMatrixExceptionTest.java,30,"ssertEquals(msg, ex.getMessage());"
