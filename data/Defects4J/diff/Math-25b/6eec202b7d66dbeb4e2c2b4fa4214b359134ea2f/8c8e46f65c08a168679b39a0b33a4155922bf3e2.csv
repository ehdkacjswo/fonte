is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/math/util/MathUtils.java,src/java/org/apache/commons/math/util/MathUtils.java,376,* <p>
True,src/java/org/apache/commons/math/util/MathUtils.java,src/java/org/apache/commons/math/util/MathUtils.java,377,"* Two NaNs are considered equals, as are two infinities with same size."
True,src/java/org/apache/commons/math/util/MathUtils.java,src/java/org/apache/commons/math/util/MathUtils.java,378,* </p>
False,src/java/org/apache/commons/math/util/MathUtils.java,src/java/org/apache/commons/math/util/MathUtils.java,383,eturn x == y || (x < y && (x + eps) >= y) || (x > y && x <= (y + eps));
True,src/java/org/apache/commons/math/util/MathUtils.java,src/java/org/apache/commons/math/util/MathUtils.java,386,"return equals(x, y) || (Math.abs(y - x) <= eps);"
False,src/test/org/apache/commons/math/util/MathUtilsTest.java,src/test/org/apache/commons/math/util/MathUtilsTest.java,339,"ssertTrue(MathUtils.equals(153.0000, 153.0000, .0001));"
False,src/test/org/apache/commons/math/util/MathUtilsTest.java,src/test/org/apache/commons/math/util/MathUtilsTest.java,340,"ssertTrue(MathUtils.equals(153.0000, 153.0001, .0001));"
False,src/test/org/apache/commons/math/util/MathUtilsTest.java,src/test/org/apache/commons/math/util/MathUtilsTest.java,341,"ssertTrue(MathUtils.equals(152.9999, 153.0000, .0001));"
False,src/test/org/apache/commons/math/util/MathUtilsTest.java,src/test/org/apache/commons/math/util/MathUtilsTest.java,342,"ssertFalse(MathUtils.equals(153.0000, 153.0001, .00001));"
False,src/test/org/apache/commons/math/util/MathUtilsTest.java,src/test/org/apache/commons/math/util/MathUtilsTest.java,343,"ssertFalse(MathUtils.equals(152.9998, 153.0000, .0001));"
True,src/test/org/apache/commons/math/util/MathUtilsTest.java,src/test/org/apache/commons/math/util/MathUtilsTest.java,339,"assertTrue(MathUtils.equals(153.0000, 153.0000, .0625));"
True,src/test/org/apache/commons/math/util/MathUtilsTest.java,src/test/org/apache/commons/math/util/MathUtilsTest.java,340,"assertTrue(MathUtils.equals(153.0000, 153.0625, .0625));"
True,src/test/org/apache/commons/math/util/MathUtilsTest.java,src/test/org/apache/commons/math/util/MathUtilsTest.java,341,"assertTrue(MathUtils.equals(152.9375, 153.0000, .0625));"
True,src/test/org/apache/commons/math/util/MathUtilsTest.java,src/test/org/apache/commons/math/util/MathUtilsTest.java,342,"assertTrue(MathUtils.equals(Double.NaN, Double.NaN, 1.0));"
True,src/test/org/apache/commons/math/util/MathUtilsTest.java,src/test/org/apache/commons/math/util/MathUtilsTest.java,343,"assertTrue(MathUtils.equals(Double.POSITIVE_INFINITY, Double.POSITIVE_INFINITY, 1.0));"
True,src/test/org/apache/commons/math/util/MathUtilsTest.java,src/test/org/apache/commons/math/util/MathUtilsTest.java,344,"assertTrue(MathUtils.equals(Double.NEGATIVE_INFINITY, Double.NEGATIVE_INFINITY, 1.0));"
True,src/test/org/apache/commons/math/util/MathUtilsTest.java,src/test/org/apache/commons/math/util/MathUtilsTest.java,345,"assertFalse(MathUtils.equals(Double.NEGATIVE_INFINITY, Double.POSITIVE_INFINITY, 1.0));"
True,src/test/org/apache/commons/math/util/MathUtilsTest.java,src/test/org/apache/commons/math/util/MathUtilsTest.java,346,"assertFalse(MathUtils.equals(153.0000, 153.0625, .0624));"
True,src/test/org/apache/commons/math/util/MathUtilsTest.java,src/test/org/apache/commons/math/util/MathUtilsTest.java,347,"assertFalse(MathUtils.equals(152.9374, 153.0000, .0625));"
