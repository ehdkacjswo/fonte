is_addition,old_file_path,new_file_path,line_num,content
True,src/test/java/org/apache/commons/math/util/FastMathStrictComparisonTest.java,src/test/java/org/apache/commons/math/util/FastMathStrictComparisonTest.java,99,final String methodName = mathMethod.getName();
False,src/test/java/org/apache/commons/math/util/FastMathStrictComparisonTest.java,src/test/java/org/apache/commons/math/util/FastMathStrictComparisonTest.java,105,f (isNumber(exp) && isNumber(act)) { // show difference as hex
True,src/test/java/org/apache/commons/math/util/FastMathStrictComparisonTest.java,src/test/java/org/apache/commons/math/util/FastMathStrictComparisonTest.java,106,if (isNumber(exp) && isNumber(act) && exp != 0) { // show difference as hex
True,src/test/java/org/apache/commons/math/util/FastMathStrictComparisonTest.java,src/test/java/org/apache/commons/math/util/FastMathStrictComparisonTest.java,109,if (Math.abs(actL-expL)==1) {
True,src/test/java/org/apache/commons/math/util/FastMathStrictComparisonTest.java,src/test/java/org/apache/commons/math/util/FastMathStrictComparisonTest.java,110,"// Not 100% sure off-by-one errors are allowed everywhere, so only allow for these methods"
True,src/test/java/org/apache/commons/math/util/FastMathStrictComparisonTest.java,src/test/java/org/apache/commons/math/util/FastMathStrictComparisonTest.java,111,"if (methodName.equals(""toRadians"") || methodName.equals(""atan2"")) {"
True,src/test/java/org/apache/commons/math/util/FastMathStrictComparisonTest.java,src/test/java/org/apache/commons/math/util/FastMathStrictComparisonTest.java,112,return;
False,src/test/java/org/apache/commons/math/util/FastMathStrictComparisonTest.java,src/test/java/org/apache/commons/math/util/FastMathStrictComparisonTest.java,113,f (isNumber(exp) && isNumber(act)) { // show difference as hex
True,src/test/java/org/apache/commons/math/util/FastMathStrictComparisonTest.java,src/test/java/org/apache/commons/math/util/FastMathStrictComparisonTest.java,120,if (isNumber(exp) && isNumber(act) && exp != 0) { // show difference as hex
False,src/test/java/org/apache/commons/math/util/FastMathStrictComparisonTest.java,src/test/java/org/apache/commons/math/util/FastMathStrictComparisonTest.java,122,b.append(mathMethod.getName());
True,src/test/java/org/apache/commons/math/util/FastMathStrictComparisonTest.java,src/test/java/org/apache/commons/math/util/FastMathStrictComparisonTest.java,129,sb.append(methodName);
False,src/test/java/org/apache/commons/math/util/FastMathStrictComparisonTest.java,src/test/java/org/apache/commons/math/util/FastMathStrictComparisonTest.java,132,"b.append(String.format(format, expL));"
True,src/test/java/org/apache/commons/math/util/FastMathStrictComparisonTest.java,src/test/java/org/apache/commons/math/util/FastMathStrictComparisonTest.java,139,"sb.append(String.format(format, expL));"
False,src/test/java/org/apache/commons/math/util/FastMathStrictComparisonTest.java,src/test/java/org/apache/commons/math/util/FastMathStrictComparisonTest.java,138,"b.append(String.format(format, actL));"
True,src/test/java/org/apache/commons/math/util/FastMathStrictComparisonTest.java,src/test/java/org/apache/commons/math/util/FastMathStrictComparisonTest.java,145,"sb.append(String.format(format, actL));"
False,src/test/java/org/apache/commons/math/util/FastMathStrictComparisonTest.java,src/test/java/org/apache/commons/math/util/FastMathStrictComparisonTest.java,167,"rivate static void setupMethodCall(Method mathMethod, Method fastMethod,"
True,src/test/java/org/apache/commons/math/util/FastMathStrictComparisonTest.java,src/test/java/org/apache/commons/math/util/FastMathStrictComparisonTest.java,174,"private static void setupMethodCall(Method mathMethod, Method fastMethod,"
False,src/test/java/org/apache/commons/math/util/FastMathStrictComparisonTest.java,src/test/java/org/apache/commons/math/util/FastMathStrictComparisonTest.java,180,arams[1] = d1;
True,src/test/java/org/apache/commons/math/util/FastMathStrictComparisonTest.java,src/test/java/org/apache/commons/math/util/FastMathStrictComparisonTest.java,187,params[1] = d1;
False,src/test/java/org/apache/commons/math/util/FastMathStrictComparisonTest.java,src/test/java/org/apache/commons/math/util/FastMathStrictComparisonTest.java,182,"allMethods(mathMethod, fastMethod, params, entries);"
True,src/test/java/org/apache/commons/math/util/FastMathStrictComparisonTest.java,src/test/java/org/apache/commons/math/util/FastMathStrictComparisonTest.java,189,"callMethods(mathMethod, fastMethod, params, entries);"
False,src/test/java/org/apache/commons/math/util/FastMathStrictComparisonTest.java,src/test/java/org/apache/commons/math/util/FastMathStrictComparisonTest.java,231,"ystem.out.println(""Cannot find public FastMath method corresponding to: ""+mathMethod);"
True,src/test/java/org/apache/commons/math/util/FastMathStrictComparisonTest.java,src/test/java/org/apache/commons/math/util/FastMathStrictComparisonTest.java,238,"System.out.println(""Cannot find public FastMath method corresponding to: ""+mathMethod);"
