is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/math3/util/Pair.java,src/main/java/org/apache/commons/math3/util/Pair.java,21, Immutable class.
True,src/main/java/org/apache/commons/math3/util/Pair.java,src/main/java/org/apache/commons/math3/util/Pair.java,21,* <br/>
True,src/main/java/org/apache/commons/math3/util/Pair.java,src/main/java/org/apache/commons/math3/util/Pair.java,22,"* Although the instances of this class are immutable, it is impossible"
True,src/main/java/org/apache/commons/math3/util/Pair.java,src/main/java/org/apache/commons/math3/util/Pair.java,23,* to ensure that the references passed to the constructor will not be
True,src/main/java/org/apache/commons/math3/util/Pair.java,src/main/java/org/apache/commons/math3/util/Pair.java,24,* modified by the caller.
True,src/main/java/org/apache/commons/math3/util/Pair.java,src/main/java/org/apache/commons/math3/util/Pair.java,37,/** Whether the pair contents can be assumed to be immutable. */
True,src/main/java/org/apache/commons/math3/util/Pair.java,src/main/java/org/apache/commons/math3/util/Pair.java,38,private final boolean isImmutable;
True,src/main/java/org/apache/commons/math3/util/Pair.java,src/main/java/org/apache/commons/math3/util/Pair.java,39,/** Cached has code. */
True,src/main/java/org/apache/commons/math3/util/Pair.java,src/main/java/org/apache/commons/math3/util/Pair.java,40,private final int cachedHashCode;
True,src/main/java/org/apache/commons/math3/util/Pair.java,src/main/java/org/apache/commons/math3/util/Pair.java,45,"* If the pair can be assumed to be immutable, the hash code will be"
True,src/main/java/org/apache/commons/math3/util/Pair.java,src/main/java/org/apache/commons/math3/util/Pair.java,46,* cached.
True,src/main/java/org/apache/commons/math3/util/Pair.java,src/main/java/org/apache/commons/math3/util/Pair.java,50,* @param assumeImmutable Whether the pair contents can be assumed to
True,src/main/java/org/apache/commons/math3/util/Pair.java,src/main/java/org/apache/commons/math3/util/Pair.java,51,* be immutable.
False,src/main/java/org/apache/commons/math3/util/Pair.java,src/main/java/org/apache/commons/math3/util/Pair.java,42,"ublic Pair(K k, V v) {"
True,src/main/java/org/apache/commons/math3/util/Pair.java,src/main/java/org/apache/commons/math3/util/Pair.java,53,"public Pair(K k, V v, boolean assumeImmutable) {"
True,src/main/java/org/apache/commons/math3/util/Pair.java,src/main/java/org/apache/commons/math3/util/Pair.java,56,isImmutable = assumeImmutable;
True,src/main/java/org/apache/commons/math3/util/Pair.java,src/main/java/org/apache/commons/math3/util/Pair.java,57,cachedHashCode = computeHashCode();
True,src/main/java/org/apache/commons/math3/util/Pair.java,src/main/java/org/apache/commons/math3/util/Pair.java,61,* Create an entry representing a mapping from the specified key to the
True,src/main/java/org/apache/commons/math3/util/Pair.java,src/main/java/org/apache/commons/math3/util/Pair.java,62,* specified value.
True,src/main/java/org/apache/commons/math3/util/Pair.java,src/main/java/org/apache/commons/math3/util/Pair.java,64,* @param k Key.
True,src/main/java/org/apache/commons/math3/util/Pair.java,src/main/java/org/apache/commons/math3/util/Pair.java,65,* @param v Value.
True,src/main/java/org/apache/commons/math3/util/Pair.java,src/main/java/org/apache/commons/math3/util/Pair.java,67,"public Pair(K k, V v) {"
True,src/main/java/org/apache/commons/math3/util/Pair.java,src/main/java/org/apache/commons/math3/util/Pair.java,68,"this(k, v, false);"
True,src/main/java/org/apache/commons/math3/util/Pair.java,src/main/java/org/apache/commons/math3/util/Pair.java,72,* Create an entry representing the same mapping as the specified entry.
True,src/main/java/org/apache/commons/math3/util/Pair.java,src/main/java/org/apache/commons/math3/util/Pair.java,73,"* If the pair can be assumed to be immutable, the hash code will be"
True,src/main/java/org/apache/commons/math3/util/Pair.java,src/main/java/org/apache/commons/math3/util/Pair.java,74,* cached.
True,src/main/java/org/apache/commons/math3/util/Pair.java,src/main/java/org/apache/commons/math3/util/Pair.java,76,* @param entry Entry to copy.
True,src/main/java/org/apache/commons/math3/util/Pair.java,src/main/java/org/apache/commons/math3/util/Pair.java,77,* @param assumeImmutable Whether the pair contents can be assumed to
True,src/main/java/org/apache/commons/math3/util/Pair.java,src/main/java/org/apache/commons/math3/util/Pair.java,78,* be immutable.
True,src/main/java/org/apache/commons/math3/util/Pair.java,src/main/java/org/apache/commons/math3/util/Pair.java,80,"public Pair(Pair<? extends K, ? extends V> entry, boolean assumeImmutable) {"
True,src/main/java/org/apache/commons/math3/util/Pair.java,src/main/java/org/apache/commons/math3/util/Pair.java,81,"this(entry.getKey(), entry.getValue(), assumeImmutable);"
False,src/main/java/org/apache/commons/math3/util/Pair.java,src/main/java/org/apache/commons/math3/util/Pair.java,53,ey = entry.getKey();
False,src/main/java/org/apache/commons/math3/util/Pair.java,src/main/java/org/apache/commons/math3/util/Pair.java,54,alue = entry.getValue();
True,src/main/java/org/apache/commons/math3/util/Pair.java,src/main/java/org/apache/commons/math3/util/Pair.java,90,"this(entry, false);"
False,src/main/java/org/apache/commons/math3/util/Pair.java,src/main/java/org/apache/commons/math3/util/Pair.java,107,eturn (key == null ? 0 : key.hashCode()) ^
False,src/main/java/org/apache/commons/math3/util/Pair.java,src/main/java/org/apache/commons/math3/util/Pair.java,108,value == null ? 0 : value.hashCode());
True,src/main/java/org/apache/commons/math3/util/Pair.java,src/main/java/org/apache/commons/math3/util/Pair.java,143,return isImmutable ? cachedHashCode : computeHashCode();
True,src/main/java/org/apache/commons/math3/util/Pair.java,src/main/java/org/apache/commons/math3/util/Pair.java,147,* Compute a hash code.
True,src/main/java/org/apache/commons/math3/util/Pair.java,src/main/java/org/apache/commons/math3/util/Pair.java,149,* @return the hash code value.
True,src/main/java/org/apache/commons/math3/util/Pair.java,src/main/java/org/apache/commons/math3/util/Pair.java,151,private final int computeHashCode() {
True,src/main/java/org/apache/commons/math3/util/Pair.java,src/main/java/org/apache/commons/math3/util/Pair.java,152,int result = key == null ? 0 : key.hashCode();
True,src/main/java/org/apache/commons/math3/util/Pair.java,src/main/java/org/apache/commons/math3/util/Pair.java,154,final int h = value == null ? 0 : value.hashCode();
True,src/main/java/org/apache/commons/math3/util/Pair.java,src/main/java/org/apache/commons/math3/util/Pair.java,155,result = 37 * result + h ^ (h >>> 16);
True,src/main/java/org/apache/commons/math3/util/Pair.java,src/main/java/org/apache/commons/math3/util/Pair.java,157,return result;
True,src/test/java/org/apache/commons/math3/util/PairTest.java,src/test/java/org/apache/commons/math3/util/PairTest.java,50,@Test
True,src/test/java/org/apache/commons/math3/util/PairTest.java,src/test/java/org/apache/commons/math3/util/PairTest.java,51,public void testHashCode() {
True,src/test/java/org/apache/commons/math3/util/PairTest.java,src/test/java/org/apache/commons/math3/util/PairTest.java,52,final MyInteger m1 = new MyInteger(1);
True,src/test/java/org/apache/commons/math3/util/PairTest.java,src/test/java/org/apache/commons/math3/util/PairTest.java,53,final MyInteger m2 = new MyInteger(1);
True,src/test/java/org/apache/commons/math3/util/PairTest.java,src/test/java/org/apache/commons/math3/util/PairTest.java,55,"final Pair<MyInteger, MyInteger> p1 = new Pair<MyInteger, MyInteger>(m1, m1);"
True,src/test/java/org/apache/commons/math3/util/PairTest.java,src/test/java/org/apache/commons/math3/util/PairTest.java,56,"final Pair<MyInteger, MyInteger> p2 = new Pair<MyInteger, MyInteger>(m2, m2);"
True,src/test/java/org/apache/commons/math3/util/PairTest.java,src/test/java/org/apache/commons/math3/util/PairTest.java,57,"// Same contents, same hash code."
True,src/test/java/org/apache/commons/math3/util/PairTest.java,src/test/java/org/apache/commons/math3/util/PairTest.java,58,Assert.assertTrue(p1.hashCode() == p2.hashCode());
True,src/test/java/org/apache/commons/math3/util/PairTest.java,src/test/java/org/apache/commons/math3/util/PairTest.java,60,"// Different contents, different hash codes."
True,src/test/java/org/apache/commons/math3/util/PairTest.java,src/test/java/org/apache/commons/math3/util/PairTest.java,61,m2.set(2);
True,src/test/java/org/apache/commons/math3/util/PairTest.java,src/test/java/org/apache/commons/math3/util/PairTest.java,62,Assert.assertFalse(p1.hashCode() == p2.hashCode());
True,src/test/java/org/apache/commons/math3/util/PairTest.java,src/test/java/org/apache/commons/math3/util/PairTest.java,64,// Test cache.
True,src/test/java/org/apache/commons/math3/util/PairTest.java,src/test/java/org/apache/commons/math3/util/PairTest.java,66,final MyInteger m3 = new MyInteger(1);
True,src/test/java/org/apache/commons/math3/util/PairTest.java,src/test/java/org/apache/commons/math3/util/PairTest.java,67,"final Pair<MyInteger, MyInteger> p3 = new Pair<MyInteger, MyInteger>(m3, m3, true);"
True,src/test/java/org/apache/commons/math3/util/PairTest.java,src/test/java/org/apache/commons/math3/util/PairTest.java,68,final int hC3 = p3.hashCode();
True,src/test/java/org/apache/commons/math3/util/PairTest.java,src/test/java/org/apache/commons/math3/util/PairTest.java,69,// Contents change will not affect the hash code because it is cached.
True,src/test/java/org/apache/commons/math3/util/PairTest.java,src/test/java/org/apache/commons/math3/util/PairTest.java,70,m3.set(3);
True,src/test/java/org/apache/commons/math3/util/PairTest.java,src/test/java/org/apache/commons/math3/util/PairTest.java,71,Assert.assertTrue(hC3 == p3.hashCode());
True,src/test/java/org/apache/commons/math3/util/PairTest.java,src/test/java/org/apache/commons/math3/util/PairTest.java,73,"final Pair<MyInteger, MyInteger> p4 = new Pair<MyInteger, MyInteger>(p3, false);"
True,src/test/java/org/apache/commons/math3/util/PairTest.java,src/test/java/org/apache/commons/math3/util/PairTest.java,74,// p3 and p4 do not have the same hash code because p4 was contructed after m3
True,src/test/java/org/apache/commons/math3/util/PairTest.java,src/test/java/org/apache/commons/math3/util/PairTest.java,75,// was changed.
True,src/test/java/org/apache/commons/math3/util/PairTest.java,src/test/java/org/apache/commons/math3/util/PairTest.java,76,Assert.assertFalse(p4.hashCode() == p3.hashCode());
True,src/test/java/org/apache/commons/math3/util/PairTest.java,src/test/java/org/apache/commons/math3/util/PairTest.java,77,final int hC4 = p4.hashCode();
True,src/test/java/org/apache/commons/math3/util/PairTest.java,src/test/java/org/apache/commons/math3/util/PairTest.java,78,// Contents change will affect the hash code because it is not cached.
True,src/test/java/org/apache/commons/math3/util/PairTest.java,src/test/java/org/apache/commons/math3/util/PairTest.java,79,m3.set(4);
True,src/test/java/org/apache/commons/math3/util/PairTest.java,src/test/java/org/apache/commons/math3/util/PairTest.java,80,Assert.assertFalse(hC4 == p4.hashCode());
True,src/test/java/org/apache/commons/math3/util/PairTest.java,src/test/java/org/apache/commons/math3/util/PairTest.java,84,* A mutable integer.
True,src/test/java/org/apache/commons/math3/util/PairTest.java,src/test/java/org/apache/commons/math3/util/PairTest.java,86,private static class MyInteger {
True,src/test/java/org/apache/commons/math3/util/PairTest.java,src/test/java/org/apache/commons/math3/util/PairTest.java,87,private int i;
True,src/test/java/org/apache/commons/math3/util/PairTest.java,src/test/java/org/apache/commons/math3/util/PairTest.java,89,public MyInteger(int i) {
True,src/test/java/org/apache/commons/math3/util/PairTest.java,src/test/java/org/apache/commons/math3/util/PairTest.java,90,this.i = i;
True,src/test/java/org/apache/commons/math3/util/PairTest.java,src/test/java/org/apache/commons/math3/util/PairTest.java,93,public void set(int i) {
True,src/test/java/org/apache/commons/math3/util/PairTest.java,src/test/java/org/apache/commons/math3/util/PairTest.java,94,this.i = i;
True,src/test/java/org/apache/commons/math3/util/PairTest.java,src/test/java/org/apache/commons/math3/util/PairTest.java,97,@Override
True,src/test/java/org/apache/commons/math3/util/PairTest.java,src/test/java/org/apache/commons/math3/util/PairTest.java,98,public boolean equals(Object o) {
True,src/test/java/org/apache/commons/math3/util/PairTest.java,src/test/java/org/apache/commons/math3/util/PairTest.java,99,if (o == null) {
True,src/test/java/org/apache/commons/math3/util/PairTest.java,src/test/java/org/apache/commons/math3/util/PairTest.java,100,return false;
True,src/test/java/org/apache/commons/math3/util/PairTest.java,src/test/java/org/apache/commons/math3/util/PairTest.java,102,if (!(o instanceof MyInteger)) {
True,src/test/java/org/apache/commons/math3/util/PairTest.java,src/test/java/org/apache/commons/math3/util/PairTest.java,103,return false;
True,src/test/java/org/apache/commons/math3/util/PairTest.java,src/test/java/org/apache/commons/math3/util/PairTest.java,104,} else {
True,src/test/java/org/apache/commons/math3/util/PairTest.java,src/test/java/org/apache/commons/math3/util/PairTest.java,105,return i == ((MyInteger) o).i;
True,src/test/java/org/apache/commons/math3/util/PairTest.java,src/test/java/org/apache/commons/math3/util/PairTest.java,109,@Override
True,src/test/java/org/apache/commons/math3/util/PairTest.java,src/test/java/org/apache/commons/math3/util/PairTest.java,110,public int hashCode() {
True,src/test/java/org/apache/commons/math3/util/PairTest.java,src/test/java/org/apache/commons/math3/util/PairTest.java,111,return i;
