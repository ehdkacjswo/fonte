is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java,src/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java,201,"eturn optimize(f, goalType, min, max, min + generator.nextDouble() * (max - min));"
False,src/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java,src/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java,204,** {@inheritDoc} */
False,src/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java,src/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java,205,"ublic double optimize(final UnivariateRealFunction f, final GoalType goalType,"
False,src/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java,src/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java,206,"inal double min, final double max, final double startValue)"
False,src/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java,src/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java,207,"hrows ConvergenceException, FunctionEvaluationException {"
False,src/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java,src/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java,219,"ptima[i] = optimizer.optimize(f, goalType, min, max,"
False,src/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java,src/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java,220,i == 0) ? startValue : generator.nextDouble() * (max - min));
True,src/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java,src/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java,212,final double bound1 = min + generator.nextDouble() * (max - min);
True,src/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java,src/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java,213,final double bound2 = min + generator.nextDouble() * (max - min);
True,src/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java,src/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java,214,"optima[i] = optimizer.optimize(f, goalType,"
True,src/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java,src/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java,215,"Math.min(bound1, bound2),"
True,src/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java,src/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java,216,"Math.max(bound1, bound2));"
True,src/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java,src/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java,256,/** {@inheritDoc} */
True,src/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java,src/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java,257,"public double optimize(final UnivariateRealFunction f, final GoalType goalType,"
True,src/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java,src/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java,258,"final double min, final double max, final double startValue)"
True,src/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java,src/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java,259,"throws ConvergenceException, FunctionEvaluationException {"
True,src/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java,src/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java,260,"return optimize(f, goalType, min, max);"
