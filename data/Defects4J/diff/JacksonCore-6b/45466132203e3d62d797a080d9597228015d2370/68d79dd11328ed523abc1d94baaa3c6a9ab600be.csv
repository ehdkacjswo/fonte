is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,8,import com.fasterxml.jackson.core.Versioned;
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,116,Class<?> versionInfoClass = null;
False,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,122,lass<?> versionInfoClass = Class.forName(
False,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,123,"ersionInfoClassName, true, cls.getClassLoader());"
False,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,124,eturn (Version)versionInfoClass.getField(PACKAGE_VERSION_FIELD).get(null);
False,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,125, catch (Exception e) {
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,124,"versionInfoClass = Class.forName(versionInfoClassName, true, cls.getClassLoader());"
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,125,"} catch (Exception e) { // ok to be missing (not good, acceptable)"
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,128,if (versionInfoClass == null) {
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,129,return null;
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,131,"// However, if class exists, it better work correctly, no swallowing exceptions"
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,132,Object v;
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,133,try {
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,134,v = versionInfoClass.newInstance();
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,135,} catch (RuntimeException e) {
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,136,throw e;
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,137,} catch (Exception e) {
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,138,"throw new IllegalArgumentException(""Failed to instantiate ""+versionInfoClass.getName()"
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,139,"+"" to find version information, problem: ""+e.getMessage(), e);"
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,141,if (!(v instanceof Versioned)) {
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,142,"throw new IllegalArgumentException(""Bad version class ""+versionInfoClass.getName()"
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,143,"+"": does not implement ""+Versioned.class.getName());"
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,145,return ((Versioned) v).version();
False,src/test/java/com/fasterxml/jackson/core/TestVersions.java,src/test/java/com/fasterxml/jackson/core/TestVersions.java,13,"/ 18-Nov-2010, tatu: Not a good to do this, but has to do, for now..."
False,src/test/java/com/fasterxml/jackson/core/TestVersions.java,src/test/java/com/fasterxml/jackson/core/TestVersions.java,14,rivate final static int MAJOR_VERSION = 2;
False,src/test/java/com/fasterxml/jackson/core/TestVersions.java,src/test/java/com/fasterxml/jackson/core/TestVersions.java,15,rivate final static int MINOR_VERSION = 2;
False,src/test/java/com/fasterxml/jackson/core/TestVersions.java,src/test/java/com/fasterxml/jackson/core/TestVersions.java,17,"rivate final static String GROUP_ID = ""com.fasterxml.jackson.core"";"
False,src/test/java/com/fasterxml/jackson/core/TestVersions.java,src/test/java/com/fasterxml/jackson/core/TestVersions.java,18,"rivate final static String ARTIFACT_ID = ""jackson-core"";"
False,src/test/java/com/fasterxml/jackson/core/TestVersions.java,src/test/java/com/fasterxml/jackson/core/TestVersions.java,40,"ssertFalse(""Should find version information (got ""+v+"")"", v.isUknownVersion());"
False,src/test/java/com/fasterxml/jackson/core/TestVersions.java,src/test/java/com/fasterxml/jackson/core/TestVersions.java,41,"ssertEquals(MAJOR_VERSION, v.getMajorVersion());"
False,src/test/java/com/fasterxml/jackson/core/TestVersions.java,src/test/java/com/fasterxml/jackson/core/TestVersions.java,42,"ssertEquals(MINOR_VERSION, v.getMinorVersion());"
False,src/test/java/com/fasterxml/jackson/core/TestVersions.java,src/test/java/com/fasterxml/jackson/core/TestVersions.java,43,"/ Check patch level initially, comment out for maint versions"
False,src/test/java/com/fasterxml/jackson/core/TestVersions.java,src/test/java/com/fasterxml/jackson/core/TestVersions.java,44,"/        assertEquals(0, v.getPatchLevel());"
False,src/test/java/com/fasterxml/jackson/core/TestVersions.java,src/test/java/com/fasterxml/jackson/core/TestVersions.java,46,"/ also, group & artifact ids should match:"
False,src/test/java/com/fasterxml/jackson/core/TestVersions.java,src/test/java/com/fasterxml/jackson/core/TestVersions.java,47,"ssertEquals(GROUP_ID, v.getGroupId());"
False,src/test/java/com/fasterxml/jackson/core/TestVersions.java,src/test/java/com/fasterxml/jackson/core/TestVersions.java,48,"ssertEquals(ARTIFACT_ID, v.getArtifactId());"
True,src/test/java/com/fasterxml/jackson/core/TestVersions.java,src/test/java/com/fasterxml/jackson/core/TestVersions.java,33,"assertEquals(PackageVersion.VERSION, v);"
True,src/test/java/com/fasterxml/jackson/core/test/PackageVersion.java,src/test/java/com/fasterxml/jackson/core/test/PackageVersion.java,4,import com.fasterxml.jackson.core.Versioned;
False,src/test/java/com/fasterxml/jackson/core/test/PackageVersion.java,src/test/java/com/fasterxml/jackson/core/test/PackageVersion.java,6,ublic final class PackageVersion {
False,src/test/java/com/fasterxml/jackson/core/test/PackageVersion.java,src/test/java/com/fasterxml/jackson/core/test/PackageVersion.java,7,ublic final static Version VERSION = VersionUtil.parseVersion(
False,src/test/java/com/fasterxml/jackson/core/test/PackageVersion.java,src/test/java/com/fasterxml/jackson/core/test/PackageVersion.java,8,"23.42.64738-foobar"", ""foobar-group"", ""foobar-artifact"");"
True,src/test/java/com/fasterxml/jackson/core/test/PackageVersion.java,src/test/java/com/fasterxml/jackson/core/test/PackageVersion.java,8,* Helper class used for verifying that auto-generated <code>PackageVersion</code>
True,src/test/java/com/fasterxml/jackson/core/test/PackageVersion.java,src/test/java/com/fasterxml/jackson/core/test/PackageVersion.java,9,* classes can be used for verification.
True,src/test/java/com/fasterxml/jackson/core/test/PackageVersion.java,src/test/java/com/fasterxml/jackson/core/test/PackageVersion.java,11,public final class PackageVersion implements Versioned {
True,src/test/java/com/fasterxml/jackson/core/test/PackageVersion.java,src/test/java/com/fasterxml/jackson/core/test/PackageVersion.java,12,@Override
True,src/test/java/com/fasterxml/jackson/core/test/PackageVersion.java,src/test/java/com/fasterxml/jackson/core/test/PackageVersion.java,13,public Version version() {
True,src/test/java/com/fasterxml/jackson/core/test/PackageVersion.java,src/test/java/com/fasterxml/jackson/core/test/PackageVersion.java,14,return VersionUtil.parseVersion(
True,src/test/java/com/fasterxml/jackson/core/test/PackageVersion.java,src/test/java/com/fasterxml/jackson/core/test/PackageVersion.java,15,"""23.42.64738-foobar"", ""foobar-group"", ""foobar-artifact"");"
