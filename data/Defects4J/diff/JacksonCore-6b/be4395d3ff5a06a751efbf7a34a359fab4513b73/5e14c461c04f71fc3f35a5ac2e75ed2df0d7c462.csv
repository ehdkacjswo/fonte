is_addition,old_file_path,new_file_path,line_num,content
True,src/test/java/com/fasterxml/jackson/core/main/TestStringGeneration.java,src/test/java/com/fasterxml/jackson/core/main/TestStringGeneration.java,26,private final JsonFactory FACTORY = new JsonFactory();
False,src/test/java/com/fasterxml/jackson/core/main/TestStringGeneration.java,src/test/java/com/fasterxml/jackson/core/main/TestStringGeneration.java,95,sonGenerator gen = new JsonFactory().createGenerator(sw);
True,src/test/java/com/fasterxml/jackson/core/main/TestStringGeneration.java,src/test/java/com/fasterxml/jackson/core/main/TestStringGeneration.java,97,JsonGenerator gen = FACTORY.createGenerator(sw);
False,src/test/java/com/fasterxml/jackson/core/main/TestStringGeneration.java,src/test/java/com/fasterxml/jackson/core/main/TestStringGeneration.java,122,"sonGenerator gen = new JsonFactory().createGenerator(bow, JsonEncoding.UTF8);"
True,src/test/java/com/fasterxml/jackson/core/main/TestStringGeneration.java,src/test/java/com/fasterxml/jackson/core/main/TestStringGeneration.java,124,"JsonGenerator gen = FACTORY.createGenerator(bow, JsonEncoding.UTF8);"
False,src/test/java/com/fasterxml/jackson/core/main/TestStringGeneration.java,src/test/java/com/fasterxml/jackson/core/main/TestStringGeneration.java,135,sonParser jp = new JsonFactory().createParser(new ByteArrayInputStream(docData));
True,src/test/java/com/fasterxml/jackson/core/main/TestStringGeneration.java,src/test/java/com/fasterxml/jackson/core/main/TestStringGeneration.java,137,JsonParser jp = FACTORY.createParser(new ByteArrayInputStream(docData));
False,src/test/java/com/fasterxml/jackson/core/main/TestStringGeneration.java,src/test/java/com/fasterxml/jackson/core/main/TestStringGeneration.java,161,"sonGenerator gen = new JsonFactory().createGenerator(bow, JsonEncoding.UTF8);"
True,src/test/java/com/fasterxml/jackson/core/main/TestStringGeneration.java,src/test/java/com/fasterxml/jackson/core/main/TestStringGeneration.java,163,"JsonGenerator gen = FACTORY.createGenerator(bow, JsonEncoding.UTF8);"
False,src/test/java/com/fasterxml/jackson/core/main/TestStringGeneration.java,src/test/java/com/fasterxml/jackson/core/main/TestStringGeneration.java,168,"en = new JsonFactory().createGenerator(bow, JsonEncoding.UTF8);"
True,src/test/java/com/fasterxml/jackson/core/main/TestStringGeneration.java,src/test/java/com/fasterxml/jackson/core/main/TestStringGeneration.java,170,"gen = FACTORY.createGenerator(bow, JsonEncoding.UTF8);"
False,src/test/java/com/fasterxml/jackson/core/main/TestStringGeneration.java,src/test/java/com/fasterxml/jackson/core/main/TestStringGeneration.java,200,sonParser jp = new JsonFactory().createParser(new ByteArrayInputStream(docData));
True,src/test/java/com/fasterxml/jackson/core/main/TestStringGeneration.java,src/test/java/com/fasterxml/jackson/core/main/TestStringGeneration.java,202,JsonParser jp = FACTORY.createParser(new ByteArrayInputStream(docData));
