is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,172,* Feature that determines whether {@link JsonParser} will explicitly
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,173,* check that no duplicate JSON Object field names are encountered.
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,174,"* If enabled, parser will check all names within context and report"
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,175,"* duplicates by throwing a {@link JsonParseException}; if disabled,"
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,176,* parser will not do such checking. Assumption in latter case is
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,177,* that caller takes care of handling duplicates at a higher level:
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,178,"* data-binding, for example, has features to specify detection to"
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,179,* be done there.
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,181,* @since 2.3
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,183,"STRICT_DUPLICATE_DETECTION(false),"
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,198,/        public boolean enabledIn(int flags) { return (flags & getMask()) != 0; }
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,214,* @since 2.3
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,216,public boolean enabledIn(int flags) { return (flags & getMask()) != 0; }
False,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,289,parsingContext = JsonReadContext.createRootContext();
True,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,289,JsonReadContext readCtxt = JsonReadContext.createRootContext();
True,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,290,if (Feature.STRICT_DUPLICATE_DETECTION.enabledIn(features)) {
True,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,291,readCtxt.trackDups(this);
True,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,293,_parsingContext = readCtxt;
False,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,327,txt.setCurrentName(name);
True,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,331,"/* 24-Sep-2013, tatu: Unfortunate, but since we did not expose exceptions,"
True,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,332,*   need to wrap this here
True,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,334,try {
True,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,335,ctxt.setCurrentName(name);
True,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,336,} catch (IOException e) {
True,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,337,throw new IllegalStateException(e);
True,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,1,package com.fasterxml.jackson.core.json;
True,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,3,import java.util.*;
True,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,5,import com.fasterxml.jackson.core.JsonLocation;
True,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,6,import com.fasterxml.jackson.core.JsonParseException;
True,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,7,import com.fasterxml.jackson.core.JsonParser;
True,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,10,* Helper class used if
True,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,11,* {@link com.fasterxml.jackson.core.JsonParser.Feature#STRICT_DUPLICATE_DETECTION}
True,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,12,* is enabled.
True,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,13,* Optimized to try to limit memory usage and processing overhead for smallest
True,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,14,"* entries, but without adding trashing (immutable objects would achieve optimal"
True,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,15,* memory usage but lead to significant number of discarded temp objects for
True,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,16,* scopes with large number of entries). Another consideration is trying to limit
True,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,17,* actual number of compiled classes as it contributes significantly to overall
True,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,18,* jar size (due to linkage etc).
True,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,20,* @since 2.3
True,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,22,public class DupDetector
True,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,25,"* We need to store a back-reference here, unfortunately."
True,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,27,protected final JsonParser _parser;
True,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,29,protected String _firstName;
True,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,31,protected String _secondName;
True,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,34,* Lazily constructed set of names already seen within this context.
True,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,36,protected HashSet<String> _seen;
True,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,38,private DupDetector(JsonParser parser) {
True,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,39,_parser = parser;
True,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,42,public static DupDetector rootDetector(JsonParser jp) {
True,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,43,return new DupDetector(jp);
True,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,46,public DupDetector child() {
True,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,47,return new DupDetector(_parser);
True,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,50,public void reset() {
True,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,51,_firstName = null;
True,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,52,_secondName = null;
True,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,53,_seen = null;
True,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,56,public JsonLocation findLocation() {
True,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,57,return _parser.getCurrentLocation();
True,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,60,public boolean isDup(String name) throws JsonParseException
True,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,62,if (_firstName == null) {
True,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,63,_firstName = name;
True,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,64,return false;
True,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,66,if (name.equals(_firstName)) {
True,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,67,return true;
True,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,69,if (_secondName == null) {
True,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,70,_secondName = name;
True,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,71,return false;
True,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,73,if (name.equals(_secondName)) {
True,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,74,return true;
True,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,76,if (_seen == null) {
True,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,77,"_seen = new HashSet<String>(16); // 16 is default, seems reasonable"
True,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,78,_seen.add(_firstName);
True,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,79,_seen.add(_secondName);
True,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,81,return !_seen.add(name);
True,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,25,// // // Optional duplicate detection
True,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,27,protected DupDetector _dups;
True,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,63,if (_dups != null) {
True,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,64,_dups.reset();
True,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,68,public void trackDups(JsonParser jp) {
True,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,69,_dups = DupDetector.rootDetector(jp);
False,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,78,eturn ctxt;
True,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,89,} else {
True,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,90,"ctxt.reset(TYPE_ARRAY, lineNr, colNr);"
True,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,92,if (_dups != null) {
True,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,93,// must pass a placeholder to indicate that tracking is on; not used
True,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,94,ctxt._dups = _dups;
False,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,80,"txt.reset(TYPE_ARRAY, lineNr, colNr);"
True,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,104,if (_dups != null) {
True,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,105,ctxt._dups = _dups.child();
False,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,143,ublic void setCurrentName(String name)
True,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,161,public void setCurrentName(String name) throws JsonProcessingException
True,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,164,if (_dups != null) {
True,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,165,"_checkDup(_dups, name);"
True,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,169,"private void _checkDup(DupDetector dd, String name) throws JsonProcessingException"
True,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,171,if (dd.isDup(name)) {
True,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,172,"throw new JsonParseException(""Duplicate field '""+name+""'"", dd.findLocation());"
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,1,package com.fasterxml.jackson.core.json;
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,3,import com.fasterxml.jackson.core.*;
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,5,public class TestParserDupHandling
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,6,extends com.fasterxml.jackson.test.BaseTest
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,8,public void testSimpleDups() throws Exception
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,10,for (String doc : new String[] {
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,11,"""{ \""a\"":1, \""a\"":2 }"","
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,12,"""[{ \""a\"":1, \""a\"":2 }]"","
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,13,"""{ \""a\"":1, \""b\"":2, \""c\"":3,\""a\"":true,\""e\"":false }"","
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,14,"""{ \""foo\"": { \""bar\"": [ [ { \""x\"":3, \""a\"":1 } ]], \""x\"":0, \""a\"":\""y\"", \""b\"":3,\""a\"":13 } }"","
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,16,JsonFactory f = new JsonFactory();
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,17,assertFalse(f.isEnabled(JsonParser.Feature.STRICT_DUPLICATE_DETECTION));
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,18,"_testSimpleDupsOk(doc, f, false);"
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,19,"_testSimpleDupsOk(doc, f, true);"
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,21,f.enable(JsonParser.Feature.STRICT_DUPLICATE_DETECTION);
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,22,"_testSimpleDupsFail(doc, f, false, ""a"");"
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,23,"_testSimpleDupsFail(doc, f, true, ""a"");"
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,27,"private void _testSimpleDupsOk(final String doc, JsonFactory f, boolean useStream) throws Exception"
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,29,JsonParser jp = useStream ?
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,30,"createParserUsingStream(f, doc, ""UTF-8"") : createParserUsingReader(f, doc);"
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,31,JsonToken t = jp.nextToken();
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,32,assertNotNull(t);
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,33,assertTrue(t.isStructStart());
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,34,while (jp.nextToken() != null) { }
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,35,jp.close();
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,38,"private void _testSimpleDupsFail(final String doc, JsonFactory f,"
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,39,"boolean useStream, String name) throws Exception"
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,41,JsonParser jp = useStream ?
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,42,"createParserUsingStream(f, doc, ""UTF-8"") : createParserUsingReader(f, doc);"
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,43,JsonToken t = jp.nextToken();
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,44,assertNotNull(t);
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,45,assertTrue(t.isStructStart());
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,46,try {
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,47,while (jp.nextToken() != null) { }
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,48,"fail(""Should have caught dups in document: ""+doc);"
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,49,} catch (JsonParseException e) {
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,50,"verifyException(e, ""duplicate field '""+name+""'"");"
True,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserDupHandling.java,52,jp.close();
