is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/com/fasterxml/jackson/core/io/CharTypes.java,src/main/java/com/fasterxml/jackson/core/io/CharTypes.java,7,"rivate final static char[] HEX_CHARS = ""0123456789ABCDEF"".toCharArray();"
False,src/main/java/com/fasterxml/jackson/core/io/CharTypes.java,src/main/java/com/fasterxml/jackson/core/io/CharTypes.java,8,rivate final static byte[] HEX_BYTES;
True,src/main/java/com/fasterxml/jackson/core/io/CharTypes.java,src/main/java/com/fasterxml/jackson/core/io/CharTypes.java,7,"private final static char[] HC = ""0123456789ABCDEF"".toCharArray();"
True,src/main/java/com/fasterxml/jackson/core/io/CharTypes.java,src/main/java/com/fasterxml/jackson/core/io/CharTypes.java,8,private final static byte[] HB;
False,src/main/java/com/fasterxml/jackson/core/io/CharTypes.java,src/main/java/com/fasterxml/jackson/core/io/CharTypes.java,10,nt len = HEX_CHARS.length;
False,src/main/java/com/fasterxml/jackson/core/io/CharTypes.java,src/main/java/com/fasterxml/jackson/core/io/CharTypes.java,11,EX_BYTES = new byte[len];
True,src/main/java/com/fasterxml/jackson/core/io/CharTypes.java,src/main/java/com/fasterxml/jackson/core/io/CharTypes.java,10,int len = HC.length;
True,src/main/java/com/fasterxml/jackson/core/io/CharTypes.java,src/main/java/com/fasterxml/jackson/core/io/CharTypes.java,11,HB = new byte[len];
False,src/main/java/com/fasterxml/jackson/core/io/CharTypes.java,src/main/java/com/fasterxml/jackson/core/io/CharTypes.java,13,EX_BYTES[i] = (byte) HEX_CHARS[i];
True,src/main/java/com/fasterxml/jackson/core/io/CharTypes.java,src/main/java/com/fasterxml/jackson/core/io/CharTypes.java,13,HB[i] = (byte) HC[i];
False,src/main/java/com/fasterxml/jackson/core/io/CharTypes.java,src/main/java/com/fasterxml/jackson/core/io/CharTypes.java,243,b.append(HEX_CHARS[value >> 4]);
False,src/main/java/com/fasterxml/jackson/core/io/CharTypes.java,src/main/java/com/fasterxml/jackson/core/io/CharTypes.java,244,b.append(HEX_CHARS[value & 0xF]);
True,src/main/java/com/fasterxml/jackson/core/io/CharTypes.java,src/main/java/com/fasterxml/jackson/core/io/CharTypes.java,243,sb.append(HC[value >> 4]);
True,src/main/java/com/fasterxml/jackson/core/io/CharTypes.java,src/main/java/com/fasterxml/jackson/core/io/CharTypes.java,244,sb.append(HC[value & 0xF]);
False,src/main/java/com/fasterxml/jackson/core/io/CharTypes.java,src/main/java/com/fasterxml/jackson/core/io/CharTypes.java,251,ublic static char[] copyHexChars()
False,src/main/java/com/fasterxml/jackson/core/io/CharTypes.java,src/main/java/com/fasterxml/jackson/core/io/CharTypes.java,253,eturn (char[]) HEX_CHARS.clone();
True,src/main/java/com/fasterxml/jackson/core/io/CharTypes.java,src/main/java/com/fasterxml/jackson/core/io/CharTypes.java,251,public static char[] copyHexChars() {
True,src/main/java/com/fasterxml/jackson/core/io/CharTypes.java,src/main/java/com/fasterxml/jackson/core/io/CharTypes.java,252,return (char[]) HC.clone();
False,src/main/java/com/fasterxml/jackson/core/io/CharTypes.java,src/main/java/com/fasterxml/jackson/core/io/CharTypes.java,256,ublic static byte[] copyHexBytes()
False,src/main/java/com/fasterxml/jackson/core/io/CharTypes.java,src/main/java/com/fasterxml/jackson/core/io/CharTypes.java,258,eturn (byte[]) HEX_BYTES.clone();
True,src/main/java/com/fasterxml/jackson/core/io/CharTypes.java,src/main/java/com/fasterxml/jackson/core/io/CharTypes.java,255,public static byte[] copyHexBytes() {
True,src/main/java/com/fasterxml/jackson/core/io/CharTypes.java,src/main/java/com/fasterxml/jackson/core/io/CharTypes.java,256,return (byte[]) HB.clone();
True,src/main/java/com/fasterxml/jackson/core/io/CharacterEscapes.java,src/main/java/com/fasterxml/jackson/core/io/CharacterEscapes.java,12,"@SuppressWarnings(""serial"")"
False,src/main/java/com/fasterxml/jackson/core/io/CharacterEscapes.java,src/main/java/com/fasterxml/jackson/core/io/CharacterEscapes.java,15,rivate static final long serialVersionUID = 1L;
False,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,19,rivate final static char[] HEX_CHARS = CharTypes.copyHexChars();
True,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,19,private final static char[] HC = CharTypes.copyHexChars();
False,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,21,rivate final static byte[] HEX_BYTES = CharTypes.copyHexBytes();
True,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,21,private final static byte[] HB = CharTypes.copyHexBytes();
False,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,44,rotected TextBuffer _textBuffer;
True,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,44,protected TextBuffer _text;
False,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,50,rotected ByteArrayBuilder _byteBuilder;
True,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,50,protected ByteArrayBuilder _bytes;
False,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,55,rotected final char[] _quoteBuffer;
True,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,55,protected final char[] _qbuf;
False,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,64,quoteBuffer = new char[6];
False,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,65,quoteBuffer[0] = '\\';
False,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,66,quoteBuffer[2] = '0';
False,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,67,quoteBuffer[3] = '0';
True,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,64,_qbuf = new char[6];
True,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,65,_qbuf[0] = '\\';
True,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,66,_qbuf[2] = '0';
True,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,67,_qbuf[3] = '0';
False,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,97,extBuffer textBuffer = _textBuffer;
True,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,97,TextBuffer textBuffer = _text;
False,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,100,textBuffer = textBuffer = new TextBuffer(null);
True,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,100,_text = textBuffer = new TextBuffer(null);
False,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,109,uter_loop:
True,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,109,outer:
False,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,123,reak outer_loop;
True,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,123,break outer;
False,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,130," _appendNumericEscape(d, _quoteBuffer)"
False,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,131," _appendNamedEscape(escCode, _quoteBuffer);"
True,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,130,"? _appendNumeric(d, _qbuf)"
True,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,131,": _appendNamed(escCode, _qbuf);"
False,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,136,"ystem.arraycopy(_quoteBuffer, 0, outputBuffer, outPtr, first);"
True,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,136,"System.arraycopy(_qbuf, 0, outputBuffer, outPtr, first);"
False,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,140,"ystem.arraycopy(_quoteBuffer, first, outputBuffer, 0, second);"
True,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,140,"System.arraycopy(_qbuf, first, outputBuffer, 0, second);"
False,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,143,"ystem.arraycopy(_quoteBuffer, 0, outputBuffer, outPtr, length);"
True,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,143,"System.arraycopy(_qbuf, 0, outputBuffer, outPtr, length);"
False,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,158,yteArrayBuilder byteBuilder = _byteBuilder;
False,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,159,f (byteBuilder == null) {
True,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,158,ByteArrayBuilder bb = _bytes;
True,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,159,if (bb == null) {
False,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,161,byteBuilder = byteBuilder = new ByteArrayBuilder(null);
True,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,161,_bytes = bb = new ByteArrayBuilder(null);
False,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,166,yte[] outputBuffer = byteBuilder.resetAndGetFirstSegment();
True,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,166,byte[] outputBuffer = bb.resetAndGetFirstSegment();
False,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,168,ain_loop:
True,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,168,main:
False,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,179,utputBuffer = byteBuilder.finishCurrentSegment();
True,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,179,outputBuffer = bb.finishCurrentSegment();
False,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,184,reak main_loop;
True,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,184,break main;
False,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,188,utputBuffer = byteBuilder.finishCurrentSegment();
True,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,188,outputBuffer = bb.finishCurrentSegment();
False,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,196,"utputPtr = _appendByteEscape(ch, escape, byteBuilder, outputPtr);"
False,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,197,utputBuffer = byteBuilder.getCurrentSegment();
False,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,198,ontinue main_loop;
False,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,199," else if (ch <= 0x7FF) { // fine, just needs 2 byte output"
True,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,196,"outputPtr = _appendByte(ch, escape, bb, outputPtr);"
True,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,197,outputBuffer = bb.getCurrentSegment();
True,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,198,continue main;
True,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,200,"if (ch <= 0x7FF) { // fine, just needs 2 byte output"
False,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,207,utputBuffer = byteBuilder.finishCurrentSegment();
True,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,208,outputBuffer = bb.finishCurrentSegment();
False,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,214,illegalSurrogate(ch);
True,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,215,_illegal(ch);
False,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,218,illegalSurrogate(ch);
True,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,219,_illegal(ch);
False,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,220,"h = _convertSurrogate(ch, text.charAt(inputPtr++));"
True,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,221,"ch = _convert(ch, text.charAt(inputPtr++));"
False,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,222,illegalSurrogate(ch);
True,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,223,_illegal(ch);
False,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,226,utputBuffer = byteBuilder.finishCurrentSegment();
True,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,227,outputBuffer = bb.finishCurrentSegment();
False,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,231,utputBuffer = byteBuilder.finishCurrentSegment();
True,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,232,outputBuffer = bb.finishCurrentSegment();
False,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,239,utputBuffer = byteBuilder.finishCurrentSegment();
True,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,240,outputBuffer = bb.finishCurrentSegment();
False,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,244,eturn _byteBuilder.completeAndCoalesce(outputPtr);
True,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,245,return _bytes.completeAndCoalesce(outputPtr);
False,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,254,yteArrayBuilder byteBuilder = _byteBuilder;
True,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,255,ByteArrayBuilder byteBuilder = _bytes;
False,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,257,byteBuilder = byteBuilder = new ByteArrayBuilder(null);
True,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,258,_bytes = byteBuilder = new ByteArrayBuilder(null);
False,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,303,illegalSurrogate(c);
True,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,304,_illegal(c);
False,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,307,illegalSurrogate(c);
True,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,308,_illegal(c);
False,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,309," = _convertSurrogate(c, text.charAt(inputPtr++));"
True,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,310,"c = _convert(c, text.charAt(inputPtr++));"
False,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,311,illegalSurrogate(c);
True,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,312,_illegal(c);
False,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,335,eturn _byteBuilder.completeAndCoalesce(outputPtr);
True,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,336,return _bytes.completeAndCoalesce(outputPtr);
False,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,344,"rivate int _appendNumericEscape(int value, char[] quoteBuffer) {"
False,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,345,uoteBuffer[1] = 'u';
True,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,345,"private int _appendNumeric(int value, char[] qbuf) {"
True,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,346,qbuf[1] = 'u';
False,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,347,uoteBuffer[4] = HEX_CHARS[value >> 4];
False,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,348,uoteBuffer[5] = HEX_CHARS[value & 0xF];
True,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,348,qbuf[4] = HC[value >> 4];
True,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,349,qbuf[5] = HC[value & 0xF];
False,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,352,"rivate int _appendNamedEscape(int escCode, char[] quoteBuffer) {"
False,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,353,uoteBuffer[1] = (char) escCode;
True,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,353,"private int _appendNamed(int esc, char[] qbuf) {"
True,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,354,qbuf[1] = (char) esc;
False,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,357,"rivate int _appendByteEscape(int ch, int escCode, ByteArrayBuilder byteBuilder, int ptr)"
True,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,358,"private int _appendByte(int ch, int esc, ByteArrayBuilder bb, int ptr)"
False,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,359,yteBuilder.setCurrentSegmentLength(ptr);
False,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,360,yteBuilder.append('\\');
False,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,361,f (escCode < 0) { // standard escape
False,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,362,yteBuilder.append('u');
True,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,360,bb.setCurrentSegmentLength(ptr);
True,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,361,bb.append('\\');
True,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,362,if (esc < 0) { // standard escape
True,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,363,bb.append('u');
False,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,365,yteBuilder.append(HEX_BYTES[hi >> 4]);
False,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,366,yteBuilder.append(HEX_BYTES[hi & 0xF]);
True,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,366,bb.append(HB[hi >> 4]);
True,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,367,bb.append(HB[hi & 0xF]);
False,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,369,yteBuilder.append('0');
False,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,370,yteBuilder.append('0');
True,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,370,bb.append('0');
True,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,371,bb.append('0');
False,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,372,yteBuilder.append(HEX_BYTES[ch >> 4]);
False,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,373,yteBuilder.append(HEX_BYTES[ch & 0xF]);
True,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,373,bb.append(HB[ch >> 4]);
True,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,374,bb.append(HB[ch & 0xF]);
False,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,375,yteBuilder.append((byte) escCode);
True,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,376,bb.append((byte) esc);
False,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,377,eturn byteBuilder.getCurrentSegmentLength();
True,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,378,return bb.getCurrentSegmentLength();
False,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,380,"rotected static int _convertSurrogate(int firstPart, int secondPart) {"
True,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,381,"private static int _convert(int p1, int p2) {"
False,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,382,f (secondPart < SURR2_FIRST || secondPart > SURR2_LAST) {
False,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,383,"hrow new IllegalArgumentException(""Broken surrogate pair: first char 0x""+Integer.toHexString(firstPart)+"", second 0x""+Integer.toHexString(secondPart)+""; illegal combination"");"
True,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,383,if (p2 < SURR2_FIRST || p2 > SURR2_LAST) {
True,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,384,"throw new IllegalArgumentException(""Broken surrogate pair: first char 0x""+Integer.toHexString(p1)+"", second 0x""+Integer.toHexString(p2)+""; illegal combination"");"
False,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,385,eturn 0x10000 + ((firstPart - SURR1_FIRST) << 10) + (secondPart - SURR2_FIRST);
True,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,386,return 0x10000 + ((p1 - SURR1_FIRST) << 10) + (p2 - SURR2_FIRST);
False,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,388,rotected static void _illegalSurrogate(int code) {
False,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,389,hrow new IllegalArgumentException(UTF8Writer.illegalSurrogateDesc(code));
True,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,389,private static void _illegal(int c) {
True,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,src/main/java/com/fasterxml/jackson/core/io/JsonStringEncoder.java,390,throw new IllegalArgumentException(UTF8Writer.illegalSurrogateDesc(c));
False,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,13,ublic final class MergedStream
False,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,14,xtends InputStream
True,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,13,public final class MergedStream extends InputStream
False,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,16,inal protected IOContext _context;
True,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,15,final private IOContext _ctxt;
False,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,18,inal InputStream _in;
True,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,17,final private InputStream _in;
False,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,20,yte[] _buffer;
True,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,19,private byte[] _b;
False,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,22,nt _ptr;
True,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,21,private int _ptr;
False,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,24,inal int _end;
True,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,23,final private int _end;
False,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,26,"ublic MergedStream(IOContext context,"
False,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,27,"nputStream in, byte[] buf, int start, int end)"
False,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,29,context = context;
True,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,25,"public MergedStream(IOContext ctxt, InputStream in, byte[] buf, int start, int end) {"
True,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,26,_ctxt = ctxt;
False,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,31,buffer = buf;
True,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,28,_b = buf;
False,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,37,ublic int available() throws IOException
False,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,39,f (_buffer != null) {
True,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,34,public int available() throws IOException {
True,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,35,if (_b != null) {
False,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,45,Override
False,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,46,ublic void close() throws IOException
False,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,48,reeMergedBuffer();
True,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,41,@Override public void close() throws IOException {
True,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,42,_free();
False,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,52,Override
False,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,53,ublic void mark(int readlimit)
False,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,55,f (_buffer == null) {
False,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,56,in.mark(readlimit);
True,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,46,@Override public void mark(int readlimit) {
True,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,47,if (_b == null) { _in.mark(readlimit); }
False,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,60,Override
False,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,61,ublic boolean markSupported()
True,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,50,@Override public boolean markSupported() {
False,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,64,eturn (_buffer == null) && _in.markSupported();
True,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,52,return (_b == null) && _in.markSupported();
False,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,67,Override
False,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,68,ublic int read() throws IOException
False,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,70,f (_buffer != null) {
False,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,71,nt c = _buffer[_ptr++] & 0xFF;
True,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,55,@Override public int read() throws IOException {
True,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,56,if (_b != null) {
True,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,57,int c = _b[_ptr++] & 0xFF;
False,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,73,reeMergedBuffer();
True,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,59,_free();
False,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,80,Override
False,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,81,ublic int read(byte[] b) throws IOException
True,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,66,@Override public int read(byte[] b) throws IOException {
False,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,87,"ublic int 	read(byte[] b, int off, int len) throws IOException"
False,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,89,f (_buffer != null) {
True,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,71,"public int read(byte[] b, int off, int len) throws IOException {"
True,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,72,if (_b != null) {
False,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,94,"ystem.arraycopy(_buffer, _ptr, b, off, len);"
True,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,77,"System.arraycopy(_b, _ptr, b, off, len);"
False,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,97,reeMergedBuffer();
True,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,80,_free();
False,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,105,ublic void reset() throws IOException
False,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,107,f (_buffer == null) {
False,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,108,in.reset();
True,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,88,public void reset() throws IOException {
True,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,89,if (_b == null) { _in.reset(); }
False,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,113,ublic long skip(long n) throws IOException
True,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,93,public long skip(long n) throws IOException {
False,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,117,f (_buffer != null) {
True,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,96,if (_b != null) {
False,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,124,reeMergedBuffer();
True,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,103,_free();
False,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,129,f (n > 0) {
False,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,130,ount += _in.skip(n);
True,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,108,if (n > 0) { count += _in.skip(n); }
False,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,135,rivate void freeMergedBuffer()
False,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,137,yte[] buf = _buffer;
True,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,112,private void _free() {
True,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,113,byte[] buf = _b;
False,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,139,buffer = null;
False,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,140,f (_context != null) {
False,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,141,context.releaseReadIOBuffer(buf);
True,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,115,_b = null;
True,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,116,if (_ctxt != null) {
True,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,src/main/java/com/fasterxml/jackson/core/io/MergedStream.java,117,_ctxt.releaseReadIOBuffer(buf);
False,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,28,"ublic static int parseInt(char[] digitChars, int offset, int len)"
True,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,28,"public static int parseInt(char[] ch, int off, int len)"
False,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,30,nt num = digitChars[offset] - '0';
False,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,31,en += offset;
True,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,30,int num = ch[off] - '0';
True,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,31,len += off;
False,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,33,f (++offset < len) {
False,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,34,um = (num * 10) + (digitChars[offset] - '0');
False,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,35,f (++offset < len) {
False,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,36,um = (num * 10) + (digitChars[offset] - '0');
False,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,37,f (++offset < len) {
False,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,38,um = (num * 10) + (digitChars[offset] - '0');
False,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,39,f (++offset < len) {
False,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,40,um = (num * 10) + (digitChars[offset] - '0');
False,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,41,f (++offset < len) {
False,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,42,um = (num * 10) + (digitChars[offset] - '0');
False,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,43,f (++offset < len) {
False,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,44,um = (num * 10) + (digitChars[offset] - '0');
False,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,45,f (++offset < len) {
False,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,46,um = (num * 10) + (digitChars[offset] - '0');
False,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,47,f (++offset < len) {
False,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,48,um = (num * 10) + (digitChars[offset] - '0');
True,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,33,if (++off < len) {
True,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,34,num = (num * 10) + (ch[off] - '0');
True,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,35,if (++off < len) {
True,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,36,num = (num * 10) + (ch[off] - '0');
True,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,37,if (++off < len) {
True,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,38,num = (num * 10) + (ch[off] - '0');
True,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,39,if (++off < len) {
True,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,40,num = (num * 10) + (ch[off] - '0');
True,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,41,if (++off < len) {
True,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,42,num = (num * 10) + (ch[off] - '0');
True,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,43,if (++off < len) {
True,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,44,num = (num * 10) + (ch[off] - '0');
True,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,45,if (++off < len) {
True,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,46,num = (num * 10) + (ch[off] - '0');
True,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,47,if (++off < len) {
True,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,48,num = (num * 10) + (ch[off] - '0');
False,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,64,ublic static int parseInt(String str)
True,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,64,public static int parseInt(String s)
False,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,70,har c = str.charAt(0);
False,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,71,nt length = str.length();
False,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,72,oolean negative = (c == '-');
True,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,70,char c = s.charAt(0);
True,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,71,int len = s.length();
True,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,72,boolean neg = (c == '-');
False,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,76,f (negative) {
False,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,77,f (length == 1 || length > 10) {
False,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,78,eturn Integer.parseInt(str);
True,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,76,if (neg) {
True,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,77,if (len == 1 || len > 10) {
True,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,78,return Integer.parseInt(s);
False,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,80, = str.charAt(offset++);
True,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,80,c = s.charAt(offset++);
False,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,82,f (length > 9) {
False,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,83,eturn Integer.parseInt(str);
True,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,82,if (len > 9) {
True,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,83,return Integer.parseInt(s);
False,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,87,eturn Integer.parseInt(str);
True,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,87,return Integer.parseInt(s);
False,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,90,f (offset < length) {
False,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,91, = str.charAt(offset++);
True,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,90,if (offset < len) {
True,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,91,c = s.charAt(offset++);
False,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,93,eturn Integer.parseInt(str);
True,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,93,return Integer.parseInt(s);
False,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,96,f (offset < length) {
False,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,97, = str.charAt(offset++);
True,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,96,if (offset < len) {
True,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,97,c = s.charAt(offset++);
False,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,99,eturn Integer.parseInt(str);
True,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,99,return Integer.parseInt(s);
False,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,103,f (offset < length) {
True,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,103,if (offset < len) {
False,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,105, = str.charAt(offset++);
True,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,105,c = s.charAt(offset++);
False,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,107,eturn Integer.parseInt(str);
True,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,107,return Integer.parseInt(s);
False,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,110, while (offset < length);
True,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,110,} while (offset < len);
False,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,114,eturn negative ? -num : num;
True,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,114,return neg ? -num : num;
False,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,117,"ublic static long parseLong(char[] digitChars, int offset, int len)"
True,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,117,"public static long parseLong(char[] ch, int off, int len)"
False,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,121,"ong val = parseInt(digitChars, offset, len1) * L_BILLION;"
False,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,122,"eturn val + (long) parseInt(digitChars, offset+len1, 9);"
True,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,121,"long val = parseInt(ch, off, len1) * L_BILLION;"
True,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,122,"return val + (long) parseInt(ch, off+len1, 9);"
False,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,125,ublic static long parseLong(String str)
True,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,125,public static long parseLong(String s)
False,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,130,nt length = str.length();
True,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,130,int length = s.length();
False,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,132,eturn (long) parseInt(str);
True,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,132,return (long) parseInt(s);
False,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,135,eturn Long.parseLong(str);
True,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,135,return Long.parseLong(s);
False,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,147,"ublic static boolean inLongRange(char[] digitChars, int offset, int len,"
True,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,147,"public static boolean inLongRange(char[] ch, int off, int len,"
False,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,156,nt diff = digitChars[offset+i] - cmpStr.charAt(i);
True,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,156,int diff = ch[off+i] - cmpStr.charAt(i);
False,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,171,"ublic static boolean inLongRange(String numberStr, boolean negative)"
True,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,171,"public static boolean inLongRange(String s, boolean negative)"
False,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,173,tring cmpStr = negative ? MIN_LONG_STR_NO_SIGN : MAX_LONG_STR;
False,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,174,nt cmpLen = cmpStr.length();
False,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,175,nt actualLen = numberStr.length();
False,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,176,f (actualLen < cmpLen) return true;
False,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,177,f (actualLen > cmpLen) return false;
True,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,173,String cmp = negative ? MIN_LONG_STR_NO_SIGN : MAX_LONG_STR;
True,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,174,int cmpLen = cmp.length();
True,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,175,int alen = s.length();
True,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,176,if (alen < cmpLen) return true;
True,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,177,if (alen > cmpLen) return false;
False,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,181,nt diff = numberStr.charAt(i) - cmpStr.charAt(i);
True,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,181,int diff = s.charAt(i) - cmp.charAt(i);
False,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,189,"ublic static int parseAsInt(String input, int defaultValue)"
True,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,189,"public static int parseAsInt(String s, int def)"
False,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,191,f (input == null) {
False,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,192,eturn defaultValue;
True,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,191,if (s == null) {
True,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,192,return def;
False,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,194,nput = input.trim();
False,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,195,nt len = input.length();
True,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,194,s = s.trim();
True,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,195,int len = s.length();
False,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,197,eturn defaultValue;
True,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,197,return def;
False,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,202,har c = input.charAt(0);
True,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,202,char c = s.charAt(0);
False,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,204,nput = input.substring(1);
False,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,205,en = input.length();
True,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,204,s = s.substring(1);
True,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,205,len = s.length();
False,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,211,har c = input.charAt(i);
True,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,211,char c = s.charAt(i);
False,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,215,eturn (int) parseDouble(input);
True,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,215,return (int) parseDouble(s);
False,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,217,eturn defaultValue;
True,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,217,return def;
False,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,222,eturn Integer.parseInt(input);
True,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,222,return Integer.parseInt(s);
False,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,224,eturn defaultValue;
True,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,224,return def;
False,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,227,"ublic static long parseAsLong(String input, long defaultValue)"
True,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,227,"public static long parseAsLong(String s, long def)"
False,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,229,f (input == null) {
False,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,230,eturn defaultValue;
True,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,229,if (s == null) {
True,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,230,return def;
False,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,232,nput = input.trim();
False,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,233,nt len = input.length();
True,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,232,s = s.trim();
True,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,233,int len = s.length();
False,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,235,eturn defaultValue;
True,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,235,return def;
False,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,240,har c = input.charAt(0);
True,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,240,char c = s.charAt(0);
False,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,242,nput = input.substring(1);
False,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,243,en = input.length();
True,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,242,s = s.substring(1);
True,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,243,len = s.length();
False,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,249,har c = input.charAt(i);
True,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,249,char c = s.charAt(i);
False,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,253,eturn (long) parseDouble(input);
True,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,253,return (long) parseDouble(s);
False,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,255,eturn defaultValue;
True,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,255,return def;
False,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,260,eturn Long.parseLong(input);
True,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,260,return Long.parseLong(s);
False,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,262,eturn defaultValue;
True,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,262,return def;
False,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,265,"ublic static double parseAsDouble(String input, double defaultValue)"
True,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,265,"public static double parseAsDouble(String s, double def)"
False,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,267,f (input == null) {
False,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,268,eturn defaultValue;
False,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,270,nput = input.trim();
False,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,271,nt len = input.length();
True,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,267,if (s == null) { return def; }
True,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,268,s = s.trim();
True,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,269,int len = s.length();
False,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,273,eturn defaultValue;
True,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,271,return def;
False,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,276,eturn parseDouble(input);
True,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,274,return parseDouble(s);
False,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,278,eturn defaultValue;
True,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,276,return def;
False,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,281,ublic static double parseDouble(String numStr) throws NumberFormatException
True,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,279,public static double parseDouble(String s) throws NumberFormatException {
False,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,287,f (NASTY_SMALL_DOUBLE.equals(numStr)) {
True,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,284,if (NASTY_SMALL_DOUBLE.equals(s)) {
False,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,290,eturn Double.parseDouble(numStr);
True,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,287,return Double.parseDouble(s);
False,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,293,ublic static BigDecimal parseBigDecimal(String numStr) throws NumberFormatException
False,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,295,ry {
False,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,296,eturn new BigDecimal(numStr);
False,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,297, catch (NumberFormatException e) {
False,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,298,hrow _badBigDecimal(numStr);
True,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,290,public static BigDecimal parseBigDecimal(String s) throws NumberFormatException {
True,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,291,try { return new BigDecimal(s); } catch (NumberFormatException e) {
True,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,292,throw _badBD(s);
False,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,302,ublic static BigDecimal parseBigDecimal(char[] buffer) throws NumberFormatException {
False,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,303,"eturn parseBigDecimal(buffer, 0, buffer.length);"
True,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,296,public static BigDecimal parseBigDecimal(char[] b) throws NumberFormatException {
True,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,297,"return parseBigDecimal(b, 0, b.length);"
False,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,306,"ublic static BigDecimal parseBigDecimal(char[] buffer, int offset, int len)"
False,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,307,hrows NumberFormatException
False,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,309,ry {
False,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,310,"eturn new BigDecimal(buffer, offset, len);"
False,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,311, catch (NumberFormatException e) {
False,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,312,"hrow _badBigDecimal(new String(buffer, offset, len));"
True,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,300,"public static BigDecimal parseBigDecimal(char[] b, int off, int len) throws NumberFormatException {"
True,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,301,"try { return new BigDecimal(b, off, len); } catch (NumberFormatException e) {"
True,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,302,"throw _badBD(new String(b, off, len));"
False,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,316,rivate static NumberFormatException _badBigDecimal(String str) {
False,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,317,"eturn new NumberFormatException(""Value \""""+str+""\"" can not be represented as BigDecimal"");"
True,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,306,private static NumberFormatException _badBD(String s) {
True,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,src/main/java/com/fasterxml/jackson/core/io/NumberInput.java,307,"return new NumberFormatException(""Value \""""+s+""\"" can not be represented as BigDecimal"");"
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,5,rivate final static char NULL_CHAR = (char) 0;
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,5,private final static char NC = (char) 0;
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,17,inal static char[] LEADING_TRIPLETS = new char[4000];
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,18,inal static char[] FULL_TRIPLETS = new char[4000];
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,17,final static char[] LEAD_3 = new char[4000];
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,18,final static char[] FULL_3 = new char[4000];
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,26,har l1 = (i1 == 0) ? NULL_CHAR : f1;
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,26,char l1 = (i1 == 0) ? NC : f1;
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,29,har l2 = (i1 == 0 && i2 == 0) ? NULL_CHAR : f2;
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,29,char l2 = (i1 == 0 && i2 == 0) ? NC : f2;
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,33,EADING_TRIPLETS[ix] = l1;
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,34,EADING_TRIPLETS[ix+1] = l2;
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,35,EADING_TRIPLETS[ix+2] = f3;
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,36,ULL_TRIPLETS[ix] = f1;
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,37,ULL_TRIPLETS[ix+1] = f2;
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,38,ULL_TRIPLETS[ix+2] = f3;
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,33,LEAD_3[ix] = l1;
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,34,LEAD_3[ix+1] = l2;
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,35,LEAD_3[ix+2] = f3;
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,36,FULL_3[ix] = f1;
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,37,FULL_3[ix+1] = f2;
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,38,FULL_3[ix+2] = f3;
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,48,ULL_TRIPLETS_B[i] = (byte) FULL_TRIPLETS[i];
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,48,FULL_TRIPLETS_B[i] = (byte) FULL_3[i];
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,68,"ublic static int outputInt(int value, char[] buffer, int offset)"
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,68,"public static int outputInt(int v, char[] b, int off)"
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,70,f (value < 0) {
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,71,f (value == Integer.MIN_VALUE) {
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,70,if (v < 0) {
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,71,if (v == Integer.MIN_VALUE) {
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,75,"eturn outputLong((long) value, buffer, offset);"
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,75,"return outputLong((long) v, b, off);"
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,77,uffer[offset++] = '-';
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,78,alue = -value;
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,77,b[off++] = '-';
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,78,v = -v;
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,81,f (value < MILLION) { // at most 2 triplets...
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,82,f (value < 1000) {
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,83,f (value < 10) {
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,84,uffer[offset++] = (char) ('0' + value);
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,81,if (v < MILLION) { // at most 2 triplets...
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,82,if (v < 1000) {
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,83,if (v < 10) {
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,84,b[off++] = (char) ('0' + v);
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,86,"ffset = outputLeadingTriplet(value, buffer, offset);"
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,86,"off = leading3(v, b, off);"
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,89,nt thousands = value / 1000;
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,90,alue -= (thousands * 1000); // == value % 1000
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,91,"ffset = outputLeadingTriplet(thousands, buffer, offset);"
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,92,"ffset = outputFullTriplet(value, buffer, offset);"
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,89,int thousands = v / 1000;
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,90,v -= (thousands * 1000); // == value % 1000
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,91,"off = leading3(thousands, b, off);"
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,92,"off = full3(v, b, off);"
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,94,eturn offset;
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,94,return off;
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,102,oolean hasBillions = (value >= BILLION);
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,102,boolean hasBillions = (v >= BILLION);
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,104,alue -= BILLION;
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,105,f (value >= BILLION) {
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,106,alue -= BILLION;
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,107,uffer[offset++] = '2';
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,104,v -= BILLION;
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,105,if (v >= BILLION) {
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,106,v -= BILLION;
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,107,b[off++] = '2';
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,109,uffer[offset++] = '1';
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,109,b[off++] = '1';
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,112,nt newValue = value / 1000;
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,113,nt ones = (value - (newValue * 1000)); // == value % 1000
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,114,alue = newValue;
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,112,int newValue = v / 1000;
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,113,int ones = (v - (newValue * 1000)); // == value % 1000
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,114,v = newValue;
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,116,nt thousands = (value - (newValue * 1000));
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,116,int thousands = (v - (newValue * 1000));
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,120,"ffset = outputFullTriplet(newValue, buffer, offset);"
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,120,"off = full3(newValue, b, off);"
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,122,"ffset = outputLeadingTriplet(newValue, buffer, offset);"
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,122,"off = leading3(newValue, b, off);"
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,124,"ffset = outputFullTriplet(thousands, buffer, offset);"
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,125,"ffset = outputFullTriplet(ones, buffer, offset);"
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,126,eturn offset;
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,124,"off = full3(thousands, b, off);"
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,125,"off = full3(ones, b, off);"
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,126,return off;
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,129,"ublic static int outputInt(int value, byte[] buffer, int offset)"
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,129,"public static int outputInt(int v, byte[] b, int off)"
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,131,f (value < 0) {
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,132,f (value == Integer.MIN_VALUE) {
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,133,"eturn outputLong((long) value, buffer, offset);"
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,131,if (v < 0) {
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,132,if (v == Integer.MIN_VALUE) {
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,133,"return outputLong((long) v, b, off);"
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,135,uffer[offset++] = '-';
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,136,alue = -value;
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,135,b[off++] = '-';
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,136,v = -v;
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,139,f (value < MILLION) { // at most 2 triplets...
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,140,f (value < 1000) {
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,141,f (value < 10) {
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,142,uffer[offset++] = (byte) ('0' + value);
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,139,if (v < MILLION) { // at most 2 triplets...
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,140,if (v < 1000) {
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,141,if (v < 10) {
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,142,b[off++] = (byte) ('0' + v);
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,144,"ffset = outputLeadingTriplet(value, buffer, offset);"
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,144,"off = leading3(v, b, off);"
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,147,nt thousands = value / 1000;
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,148,alue -= (thousands * 1000); // == value % 1000
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,149,"ffset = outputLeadingTriplet(thousands, buffer, offset);"
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,150,"ffset = outputFullTriplet(value, buffer, offset);"
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,147,int thousands = v / 1000;
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,148,v -= (thousands * 1000); // == value % 1000
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,149,"off = leading3(thousands, b, off);"
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,150,"off = full3(v, b, off);"
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,152,eturn offset;
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,152,return off;
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,154,oolean hasBillions = (value >= BILLION);
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,155,f (hasBillions) {
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,156,alue -= BILLION;
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,157,f (value >= BILLION) {
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,158,alue -= BILLION;
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,159,uffer[offset++] = '2';
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,154,boolean hasB = (v >= BILLION);
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,155,if (hasB) {
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,156,v -= BILLION;
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,157,if (v >= BILLION) {
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,158,v -= BILLION;
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,159,b[off++] = '2';
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,161,uffer[offset++] = '1';
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,161,b[off++] = '1';
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,164,nt newValue = value / 1000;
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,165,nt ones = (value - (newValue * 1000)); // == value % 1000
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,166,alue = newValue;
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,164,int newValue = v / 1000;
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,165,int ones = (v - (newValue * 1000)); // == value % 1000
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,166,v = newValue;
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,168,nt thousands = (value - (newValue * 1000));
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,168,int thousands = (v - (newValue * 1000));
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,170,f (hasBillions) {
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,171,"ffset = outputFullTriplet(newValue, buffer, offset);"
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,170,if (hasB) {
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,171,"off = full3(newValue, b, off);"
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,173,"ffset = outputLeadingTriplet(newValue, buffer, offset);"
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,173,"off = leading3(newValue, b, off);"
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,175,"ffset = outputFullTriplet(thousands, buffer, offset);"
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,176,"ffset = outputFullTriplet(ones, buffer, offset);"
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,177,eturn offset;
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,175,"off = full3(thousands, b, off);"
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,176,"off = full3(ones, b, off);"
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,177,return off;
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,183,"ublic static int outputLong(long value, char[] buffer, int offset)"
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,183,"public static int outputLong(long v, char[] b, int off)"
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,186,f (value < 0L) {
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,186,if (v < 0L) {
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,190,f (value > MIN_INT_AS_LONG) {
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,191,"eturn outputInt((int) value, buffer, offset);"
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,190,if (v > MIN_INT_AS_LONG) {
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,191,"return outputInt((int) v, b, off);"
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,193,f (value == Long.MIN_VALUE) {
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,193,if (v == Long.MIN_VALUE) {
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,196,"MALLEST_LONG.getChars(0, len, buffer, offset);"
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,197,eturn (offset + len);
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,196,"SMALLEST_LONG.getChars(0, len, b, off);"
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,197,return (off + len);
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,199,uffer[offset++] = '-';
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,200,alue = -value;
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,199,b[off++] = '-';
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,200,v = -v;
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,202,f (value <= MAX_INT_AS_LONG) {
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,203,"eturn outputInt((int) value, buffer, offset);"
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,202,if (v <= MAX_INT_AS_LONG) {
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,203,"return outputInt((int) v, b, off);"
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,210,nt origOffset = offset;
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,211,ffset += calcLongStrLength(value);
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,212,nt ptr = offset;
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,210,int origOffset = off;
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,211,off += calcLongStrLength(v);
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,212,int ptr = off;
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,215,hile (value > MAX_INT_AS_LONG) { // full triplet
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,215,while (v > MAX_INT_AS_LONG) { // full triplet
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,217,ong newValue = value / THOUSAND_L;
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,218,nt triplet = (int) (value - newValue * THOUSAND_L);
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,219,"utputFullTriplet(triplet, buffer, ptr);"
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,220,alue = newValue;
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,217,long newValue = v / THOUSAND_L;
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,218,int triplet = (int) (v - newValue * THOUSAND_L);
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,219,"full3(triplet, b, ptr);"
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,220,v = newValue;
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,223,nt ivalue = (int) value;
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,223,int ivalue = (int) v;
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,228,"utputFullTriplet(triplet, buffer, ptr);"
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,228,"full3(triplet, b, ptr);"
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,232,"utputLeadingTriplet(ivalue, buffer, origOffset);"
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,232,"leading3(ivalue, b, origOffset);"
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,234,eturn offset;
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,234,return off;
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,237,"ublic static int outputLong(long value, byte[] buffer, int offset)"
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,237,"public static int outputLong(long v, byte[] b, int off)"
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,239,f (value < 0L) {
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,240,f (value > MIN_INT_AS_LONG) {
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,241,"eturn outputInt((int) value, buffer, offset);"
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,239,if (v < 0L) {
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,240,if (v > MIN_INT_AS_LONG) {
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,241,"return outputInt((int) v, b, off);"
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,243,f (value == Long.MIN_VALUE) {
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,243,if (v == Long.MIN_VALUE) {
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,247,uffer[offset++] = (byte) SMALLEST_LONG.charAt(i);
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,247,b[off++] = (byte) SMALLEST_LONG.charAt(i);
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,249,eturn offset;
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,249,return off;
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,251,uffer[offset++] = '-';
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,252,alue = -value;
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,251,b[off++] = '-';
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,252,v = -v;
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,254,f (value <= MAX_INT_AS_LONG) {
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,255,"eturn outputInt((int) value, buffer, offset);"
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,254,if (v <= MAX_INT_AS_LONG) {
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,255,"return outputInt((int) v, b, off);"
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,258,nt origOffset = offset;
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,259,ffset += calcLongStrLength(value);
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,260,nt ptr = offset;
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,258,int origOff = off;
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,259,off += calcLongStrLength(v);
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,260,int ptr = off;
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,263,hile (value > MAX_INT_AS_LONG) { // full triplet
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,263,while (v > MAX_INT_AS_LONG) { // full triplet
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,265,ong newValue = value / THOUSAND_L;
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,266,nt triplet = (int) (value - newValue * THOUSAND_L);
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,267,"utputFullTriplet(triplet, buffer, ptr);"
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,268,alue = newValue;
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,265,long newV = v / THOUSAND_L;
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,266,int t = (int) (v - newV * THOUSAND_L);
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,267,"full3(t, b, ptr);"
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,268,v = newV;
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,271,nt ivalue = (int) value;
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,271,int ivalue = (int) v;
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,274,nt newValue = ivalue / 1000;
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,275,nt triplet = ivalue - (newValue * 1000);
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,276,"utputFullTriplet(triplet, buffer, ptr);"
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,277,value = newValue;
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,274,int newV = ivalue / 1000;
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,275,int t = ivalue - (newV * 1000);
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,276,"full3(t, b, ptr);"
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,277,ivalue = newV;
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,279,"utputLeadingTriplet(ivalue, buffer, origOffset);"
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,280,eturn offset;
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,279,"leading3(ivalue, b, origOff);"
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,280,return off;
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,293,ublic static String toString(int value)
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,293,public static String toString(int v)
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,296,f (value < sSmallIntStrs.length) {
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,297,f (value >= 0) {
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,298,eturn sSmallIntStrs[value];
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,296,if (v < sSmallIntStrs.length) {
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,297,if (v >= 0) {
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,298,return sSmallIntStrs[v];
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,300,nt v2 = -value - 1;
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,300,int v2 = -v - 1;
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,305,eturn Integer.toString(value);
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,305,return Integer.toString(v);
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,308,ublic static String toString(long value)
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,310,f (value <= Integer.MAX_VALUE &&
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,311,alue >= Integer.MIN_VALUE) {
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,312,eturn toString((int) value);
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,308,public static String toString(long v) {
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,309,if (v <= Integer.MAX_VALUE && v >= Integer.MIN_VALUE) {
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,310,return toString((int) v);
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,314,eturn Long.toString(value);
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,312,return Long.toString(v);
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,317,ublic static String toString(double value)
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,319,eturn Double.toString(value);
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,315,public static String toString(double v) {
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,316,return Double.toString(v);
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,328,"rivate static int outputLeadingTriplet(int triplet, char[] buffer, int offset)"
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,325,"private static int leading3(int t, char[] b, int off)"
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,330,nt digitOffset = (triplet << 2);
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,331,har c = LEADING_TRIPLETS[digitOffset++];
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,332,f (c != NULL_CHAR) {
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,333,uffer[offset++] = c;
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,327,int digitOffset = (t << 2);
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,328,char c = LEAD_3[digitOffset++];
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,329,if (c != NC) {
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,330,b[off++] = c;
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,335, = LEADING_TRIPLETS[digitOffset++];
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,336,f (c != NULL_CHAR) {
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,337,uffer[offset++] = c;
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,332,c = LEAD_3[digitOffset++];
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,333,if (c != NC) {
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,334,b[off++] = c;
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,340,uffer[offset++] = LEADING_TRIPLETS[digitOffset];
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,341,eturn offset;
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,337,b[off++] = LEAD_3[digitOffset];
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,338,return off;
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,344,"rivate static int outputLeadingTriplet(int triplet, byte[] buffer, int offset)"
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,341,"private static int leading3(int t, byte[] b, int off)"
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,346,nt digitOffset = (triplet << 2);
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,347,har c = LEADING_TRIPLETS[digitOffset++];
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,348,f (c != NULL_CHAR) {
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,349,uffer[offset++] = (byte) c;
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,343,int digitOffset = (t << 2);
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,344,char c = LEAD_3[digitOffset++];
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,345,if (c != NC) {
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,346,b[off++] = (byte) c;
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,351, = LEADING_TRIPLETS[digitOffset++];
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,352,f (c != NULL_CHAR) {
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,353,uffer[offset++] = (byte) c;
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,348,c = LEAD_3[digitOffset++];
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,349,if (c != NC) {
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,350,b[off++] = (byte) c;
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,356,uffer[offset++] = (byte) LEADING_TRIPLETS[digitOffset];
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,357,eturn offset;
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,353,b[off++] = (byte) LEAD_3[digitOffset];
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,354,return off;
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,360,"rivate static int outputFullTriplet(int triplet, char[] buffer, int offset)"
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,357,"private static int full3(int t, char[] b, int off)"
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,362,nt digitOffset = (triplet << 2);
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,363,uffer[offset++] = FULL_TRIPLETS[digitOffset++];
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,364,uffer[offset++] = FULL_TRIPLETS[digitOffset++];
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,365,uffer[offset++] = FULL_TRIPLETS[digitOffset];
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,366,eturn offset;
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,359,int digitOffset = (t << 2);
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,360,b[off++] = FULL_3[digitOffset++];
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,361,b[off++] = FULL_3[digitOffset++];
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,362,b[off++] = FULL_3[digitOffset];
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,363,return off;
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,369,"rivate static int outputFullTriplet(int triplet, byte[] buffer, int offset)"
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,366,"private static int full3(int t, byte[] b, int off)"
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,371,nt digitOffset = (triplet << 2);
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,372,uffer[offset++] = FULL_TRIPLETS_B[digitOffset++];
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,373,uffer[offset++] = FULL_TRIPLETS_B[digitOffset++];
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,374,uffer[offset++] = FULL_TRIPLETS_B[digitOffset];
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,375,eturn offset;
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,368,int digitOffset = (t << 2);
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,369,b[off++] = FULL_TRIPLETS_B[digitOffset++];
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,370,b[off++] = FULL_TRIPLETS_B[digitOffset++];
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,371,b[off++] = FULL_TRIPLETS_B[digitOffset];
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,372,return off;
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,380," Pre-conditions: posValue is positive, and larger than"
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,377,"* Pre-conditions: <code>c</code> is positive, and larger than"
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,383,rivate static int calcLongStrLength(long posValue)
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,380,private static int calcLongStrLength(long v)
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,386,ong comp = TEN_BILLION_L;
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,383,long cmp = TEN_BILLION_L;
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,389,hile (posValue >= comp) {
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,386,while (v >= cmp) {
False,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,394,omp = (comp << 3) + (comp << 1); // 10x
True,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,src/main/java/com/fasterxml/jackson/core/io/NumberOutput.java,391,cmp = (cmp << 3) + (cmp << 1); // 10x
True,src/main/java/com/fasterxml/jackson/core/io/OutputDecorator.java,src/main/java/com/fasterxml/jackson/core/io/OutputDecorator.java,11,"@SuppressWarnings(""serial"")"
False,src/main/java/com/fasterxml/jackson/core/io/OutputDecorator.java,src/main/java/com/fasterxml/jackson/core/io/OutputDecorator.java,13,rivate static final long serialVersionUID = 1L;
False,src/main/java/com/fasterxml/jackson/core/util/InternCache.java,src/main/java/com/fasterxml/jackson/core/util/InternCache.java,35,rivate final Object _flushLock = new Object();
True,src/main/java/com/fasterxml/jackson/core/util/InternCache.java,src/main/java/com/fasterxml/jackson/core/util/InternCache.java,35,private final Object lock = new Object();
False,src/main/java/com/fasterxml/jackson/core/util/InternCache.java,src/main/java/com/fasterxml/jackson/core/util/InternCache.java,37,rivate InternCache() {
False,src/main/java/com/fasterxml/jackson/core/util/InternCache.java,src/main/java/com/fasterxml/jackson/core/util/InternCache.java,38,"uper(MAX_ENTRIES, 0.8f, 4);"
True,src/main/java/com/fasterxml/jackson/core/util/InternCache.java,src/main/java/com/fasterxml/jackson/core/util/InternCache.java,37,"private InternCache() { super(MAX_ENTRIES, 0.8f, 4); }"
False,src/main/java/com/fasterxml/jackson/core/util/InternCache.java,src/main/java/com/fasterxml/jackson/core/util/InternCache.java,41,ublic String intern(String input)
True,src/main/java/com/fasterxml/jackson/core/util/InternCache.java,src/main/java/com/fasterxml/jackson/core/util/InternCache.java,39,public String intern(String input) {
False,src/main/java/com/fasterxml/jackson/core/util/InternCache.java,src/main/java/com/fasterxml/jackson/core/util/InternCache.java,44,f (result != null) {
False,src/main/java/com/fasterxml/jackson/core/util/InternCache.java,src/main/java/com/fasterxml/jackson/core/util/InternCache.java,45,eturn result;
True,src/main/java/com/fasterxml/jackson/core/util/InternCache.java,src/main/java/com/fasterxml/jackson/core/util/InternCache.java,41,if (result != null) { return result; }
False,src/main/java/com/fasterxml/jackson/core/util/InternCache.java,src/main/java/com/fasterxml/jackson/core/util/InternCache.java,58,ynchronized (_flushLock) {
True,src/main/java/com/fasterxml/jackson/core/util/InternCache.java,src/main/java/com/fasterxml/jackson/core/util/InternCache.java,53,synchronized (lock) {
False,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,25,"rivate final static Pattern VERSION_SEPARATOR = Pattern.compile(""[-_./;:]"");"
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,25,"private final static Pattern V_SEP = Pattern.compile(""[-_./;:]"");"
False,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,27,rivate final Version _version;
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,27,private final Version _v;
False,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,49,version = v;
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,49,_v = v;
False,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,52,ublic Version version() { return _version; }
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,52,public Version version() { return _v; }
False,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,117,rivate static Version doReadVersion(final Reader reader)
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,117,private static Version doReadVersion(final Reader r)
False,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,121,inal BufferedReader br = new BufferedReader(reader);
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,121,final BufferedReader br = new BufferedReader(r);
False,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,150, @param classLoader the ClassLoader to load the pom.properties file from
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,150,* @param cl the ClassLoader to load the pom.properties file from
False,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,156,"ublic static Version mavenVersionFor(ClassLoader classLoader, String groupId, String artifactId)"
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,156,"public static Version mavenVersionFor(ClassLoader cl, String groupId, String artifactId)"
False,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,158,"nputStream pomProperties = classLoader.getResourceAsStream(""META-INF/maven/"""
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,158,"InputStream pomProperties = cl.getResourceAsStream(""META-INF/maven/"""
False,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,177,"ublic static Version parseVersion(String versionStr, String groupId, String artifactId)"
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,177,"public static Version parseVersion(String s, String groupId, String artifactId)"
False,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,179,f (versionStr != null && (versionStr = versionStr.trim()).length() > 0) {
False,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,180,tring[] parts = VERSION_SEPARATOR.split(versionStr);
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,179,if (s != null && (s = s.trim()).length() > 0) {
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,180,String[] parts = V_SEP.split(s);
False,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,190,rotected static int parseVersionPart(String partStr)
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,190,protected static int parseVersionPart(String s) {
False,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,193,"or (int i = 0, len = partStr.length(); i < len; ++i) {"
False,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,194,har c = partStr.charAt(i);
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,192,"for (int i = 0, len = s.length(); i < len; ++i) {"
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,193,char c = s.charAt(i);
