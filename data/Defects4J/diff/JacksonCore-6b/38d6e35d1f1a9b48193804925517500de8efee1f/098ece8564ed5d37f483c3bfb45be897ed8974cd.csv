is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,764,"parseSlowIntValue(expType, buf, offset, len);"
True,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,764,"_parseSlowInt(expType, buf, offset, len);"
False,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,768,parseSlowFloatValue(expType);
True,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,768,_parseSlowFloat(expType);
False,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,774,rivate void _parseSlowFloatValue(int expType)
True,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,774,private void _parseSlowFloat(int expType)
False,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,799,"rivate void _parseSlowIntValue(int expType, char[] buf, int offset, int len)"
True,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserBase.java,799,"private void _parseSlowInt(int expType, char[] buf, int offset, int len)"
False,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,491,rotected void _reportInvalidEOFInValue() throws JsonParseException
True,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,491,protected void _reportInvalidEOFInValue() throws JsonParseException {
True,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,495,protected void _reportMissingRootWS(int ch) throws JsonParseException {
True,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,496,"_reportUnexpectedChar(ch, ""Expected space separating root-level values"");"
True,src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java,951,"// As per #105, need separating space between root values; check here"
True,src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java,952,if (_parsingContext.inRoot()) {
True,src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java,953,_verifyRootSpace(ch);
True,src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java,1084,if (_parsingContext.inRoot()) {
True,src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java,1085,_verifyRootSpace(c);
True,src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java,1162,* Method called to ensure that a root-value is followed by a space
True,src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java,1163,* token.
True,src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java,1164,*<p>
True,src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java,1165,* NOTE: caller MUST ensure there is at least one character available;
True,src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java,1166,* and that input pointer is AT given char (not past)
True,src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java,1168,private final void _verifyRootSpace(int ch) throws IOException
True,src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java,1170,"// caller had pushed it back, before calling; reset"
True,src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java,1171,++_inputPtr;
True,src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java,1172,switch (ch) {
True,src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java,1173,case ' ':
True,src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java,1174,case '\t':
True,src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java,1175,return;
True,src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java,1176,case '\r':
True,src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java,1177,_skipCR();
True,src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java,1178,return;
True,src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java,1179,case '\n':
True,src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java,1180,++_currInputRow;
True,src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java,1181,_currInputRowStart = _inputPtr;
True,src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java,1182,return;
True,src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java,1184,_reportMissingRootWS(ch);
False,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,735, = parseNumberText(i);
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,735,t = _parseNumber(i);
False,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,787,eturn (_currToken = parseNumberText(i));
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,787,return (_currToken = _parseNumber(i));
False,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,976,nextToken = parseNumberText(i);
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,976,_nextToken = _parseNumber(i);
False,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,1044, = parseNumberText(i);
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,1044,t = _parseNumber(i);
False,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,1184,rotected JsonToken parseNumberText(int c)
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,1184,protected JsonToken _parseNumber(int c)
False,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,1238,"eturn _parseFloatText(outBuf, outPtr, c, negative, intLen);"
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,1238,"return _parseFloat(outBuf, outPtr, c, negative, intLen);"
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,1243,"// As per #105, need separating space between root values; check here"
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,1244,if (_parsingContext.inRoot()) {
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,1245,_verifyRootSpace(c);
False,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,1265,"eturn _parseFloatText(outBuf, outPtr, c, negative, intPartLength);"
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,1269,"return _parseFloat(outBuf, outPtr, c, negative, intPartLength);"
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,1282,"// As per #105, need separating space between root values; check here"
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,1283,if (_parsingContext.inRoot()) {
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,1284,_verifyRootSpace(_inputBuffer[_inputPtr++] & 0xFF);
False,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,1321,"rivate JsonToken _parseFloatText(char[] outBuf, int outPtr, int c,"
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,1329,"private JsonToken _parseFloat(char[] outBuf, int outPtr, int c,"
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,1412,"// As per #105, need separating space between root values; check here"
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,1413,if (_parsingContext.inRoot()) {
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,1414,_verifyRootSpace(c);
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,1424,* Method called to ensure that a root-value is followed by a space
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,1425,* token.
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,1426,*<p>
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,1427,* NOTE: caller MUST ensure there is at least one character available;
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,1428,* and that input pointer is AT given char (not past)
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,1430,private final void _verifyRootSpace(int ch) throws IOException
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,1432,"// caller had pushed it back, before calling; reset"
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,1433,++_inputPtr;
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,1434,// TODO? Handle UTF-8 char decoding for error reporting
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,1435,switch (ch) {
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,1436,case ' ':
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,1437,case '\t':
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,1438,return;
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,1439,case '\r':
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,1440,_skipCR();
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,1441,return;
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,1442,case '\n':
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,1443,++_currInputRow;
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,1444,_currInputRowStart = _inputPtr;
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,1445,return;
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,1447,_reportMissingRootWS(ch);
False,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,2562,/ Is this good enough error message?
False,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,2563,f (i < 32) {
False,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,2564,throwInvalidSpace(i);
True,src/test/java/com/fasterxml/jackson/core/json/TestParserErrorHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserErrorHandling.java,20,"// Tests for #105 (""eager number parsing misses errors"")"
True,src/test/java/com/fasterxml/jackson/core/json/TestParserErrorHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserErrorHandling.java,21,public void testMangledNumbersBytes() throws Exception {
True,src/test/java/com/fasterxml/jackson/core/json/TestParserErrorHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserErrorHandling.java,22,_testMangledNumbers(true);
True,src/test/java/com/fasterxml/jackson/core/json/TestParserErrorHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserErrorHandling.java,25,public void testMangledNumbersChars() throws Exception {
True,src/test/java/com/fasterxml/jackson/core/json/TestParserErrorHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserErrorHandling.java,26,_testMangledNumbers(false);
True,src/test/java/com/fasterxml/jackson/core/json/TestParserErrorHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserErrorHandling.java,86,private void _testMangledNumbers(boolean useStream) throws Exception
True,src/test/java/com/fasterxml/jackson/core/json/TestParserErrorHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserErrorHandling.java,88,"String doc = ""123true"";"
True,src/test/java/com/fasterxml/jackson/core/json/TestParserErrorHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserErrorHandling.java,89,"JsonParser jp = useStream ? createParserUsingStream(doc, ""UTF-8"")"
True,src/test/java/com/fasterxml/jackson/core/json/TestParserErrorHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserErrorHandling.java,90,: createParserUsingReader(doc);
True,src/test/java/com/fasterxml/jackson/core/json/TestParserErrorHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserErrorHandling.java,91,try {
True,src/test/java/com/fasterxml/jackson/core/json/TestParserErrorHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserErrorHandling.java,92,JsonToken t = jp.nextToken();
True,src/test/java/com/fasterxml/jackson/core/json/TestParserErrorHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserErrorHandling.java,93,"fail(""Should have gotten an exception; instead got token: ""+t);"
True,src/test/java/com/fasterxml/jackson/core/json/TestParserErrorHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserErrorHandling.java,94,} catch (JsonParseException e) {
True,src/test/java/com/fasterxml/jackson/core/json/TestParserErrorHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserErrorHandling.java,95,"verifyException(e, ""expected space"");"
True,src/test/java/com/fasterxml/jackson/core/json/TestParserErrorHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserErrorHandling.java,97,jp.close();
True,src/test/java/com/fasterxml/jackson/core/json/TestParserErrorHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserErrorHandling.java,99,// Also test with floats
True,src/test/java/com/fasterxml/jackson/core/json/TestParserErrorHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserErrorHandling.java,100,"doc = ""1.5false"";"
True,src/test/java/com/fasterxml/jackson/core/json/TestParserErrorHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserErrorHandling.java,101,"jp = useStream ? createParserUsingStream(doc, ""UTF-8"")"
True,src/test/java/com/fasterxml/jackson/core/json/TestParserErrorHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserErrorHandling.java,102,: createParserUsingReader(doc);
True,src/test/java/com/fasterxml/jackson/core/json/TestParserErrorHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserErrorHandling.java,103,try {
True,src/test/java/com/fasterxml/jackson/core/json/TestParserErrorHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserErrorHandling.java,104,JsonToken t = jp.nextToken();
True,src/test/java/com/fasterxml/jackson/core/json/TestParserErrorHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserErrorHandling.java,105,"fail(""Should have gotten an exception; instead got token: ""+t);"
True,src/test/java/com/fasterxml/jackson/core/json/TestParserErrorHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserErrorHandling.java,106,} catch (JsonParseException e) {
True,src/test/java/com/fasterxml/jackson/core/json/TestParserErrorHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserErrorHandling.java,107,"verifyException(e, ""expected space"");"
True,src/test/java/com/fasterxml/jackson/core/json/TestParserErrorHandling.java,src/test/java/com/fasterxml/jackson/core/json/TestParserErrorHandling.java,109,jp.close();
True,src/test/java/com/fasterxml/jackson/core/json/TestRootValueParsing.java,src/test/java/com/fasterxml/jackson/core/json/TestRootValueParsing.java,1,package com.fasterxml.jackson.core.json;
True,src/test/java/com/fasterxml/jackson/core/json/TestRootValueParsing.java,src/test/java/com/fasterxml/jackson/core/json/TestRootValueParsing.java,3,import com.fasterxml.jackson.core.JsonFactory;
True,src/test/java/com/fasterxml/jackson/core/json/TestRootValueParsing.java,src/test/java/com/fasterxml/jackson/core/json/TestRootValueParsing.java,4,import com.fasterxml.jackson.core.JsonParser;
True,src/test/java/com/fasterxml/jackson/core/json/TestRootValueParsing.java,src/test/java/com/fasterxml/jackson/core/json/TestRootValueParsing.java,5,import com.fasterxml.jackson.core.JsonToken;
True,src/test/java/com/fasterxml/jackson/core/json/TestRootValueParsing.java,src/test/java/com/fasterxml/jackson/core/json/TestRootValueParsing.java,7,public class TestRootValueParsing
True,src/test/java/com/fasterxml/jackson/core/json/TestRootValueParsing.java,src/test/java/com/fasterxml/jackson/core/json/TestRootValueParsing.java,8,extends com.fasterxml.jackson.test.BaseTest
True,src/test/java/com/fasterxml/jackson/core/json/TestRootValueParsing.java,src/test/java/com/fasterxml/jackson/core/json/TestRootValueParsing.java,10,private final JsonFactory JSON_F = new JsonFactory();
True,src/test/java/com/fasterxml/jackson/core/json/TestRootValueParsing.java,src/test/java/com/fasterxml/jackson/core/json/TestRootValueParsing.java,12,public void testSimpleNumbers() throws Exception
True,src/test/java/com/fasterxml/jackson/core/json/TestRootValueParsing.java,src/test/java/com/fasterxml/jackson/core/json/TestRootValueParsing.java,14,_testSimpleNumbers(false);
True,src/test/java/com/fasterxml/jackson/core/json/TestRootValueParsing.java,src/test/java/com/fasterxml/jackson/core/json/TestRootValueParsing.java,15,_testSimpleNumbers(true);
True,src/test/java/com/fasterxml/jackson/core/json/TestRootValueParsing.java,src/test/java/com/fasterxml/jackson/core/json/TestRootValueParsing.java,18,private void _testSimpleNumbers(boolean useStream) throws Exception
True,src/test/java/com/fasterxml/jackson/core/json/TestRootValueParsing.java,src/test/java/com/fasterxml/jackson/core/json/TestRootValueParsing.java,20,"final String DOC = ""1 2\t3\r4\n5\r\n6\r\n   7"";"
True,src/test/java/com/fasterxml/jackson/core/json/TestRootValueParsing.java,src/test/java/com/fasterxml/jackson/core/json/TestRootValueParsing.java,21,JsonParser jp = useStream ?
True,src/test/java/com/fasterxml/jackson/core/json/TestRootValueParsing.java,src/test/java/com/fasterxml/jackson/core/json/TestRootValueParsing.java,22,"createParserUsingStream(JSON_F, DOC, ""UTF-8"")"
True,src/test/java/com/fasterxml/jackson/core/json/TestRootValueParsing.java,src/test/java/com/fasterxml/jackson/core/json/TestRootValueParsing.java,23,": createParserUsingReader(JSON_F, DOC);"
True,src/test/java/com/fasterxml/jackson/core/json/TestRootValueParsing.java,src/test/java/com/fasterxml/jackson/core/json/TestRootValueParsing.java,24,for (int i = 1; i <= 7; ++i) {
True,src/test/java/com/fasterxml/jackson/core/json/TestRootValueParsing.java,src/test/java/com/fasterxml/jackson/core/json/TestRootValueParsing.java,25,"assertToken(JsonToken.VALUE_NUMBER_INT, jp.nextToken());"
True,src/test/java/com/fasterxml/jackson/core/json/TestRootValueParsing.java,src/test/java/com/fasterxml/jackson/core/json/TestRootValueParsing.java,26,"assertEquals(i, jp.getIntValue());"
True,src/test/java/com/fasterxml/jackson/core/json/TestRootValueParsing.java,src/test/java/com/fasterxml/jackson/core/json/TestRootValueParsing.java,28,assertNull(jp.nextToken());
True,src/test/java/com/fasterxml/jackson/core/json/TestRootValueParsing.java,src/test/java/com/fasterxml/jackson/core/json/TestRootValueParsing.java,29,jp.close();
True,src/test/java/com/fasterxml/jackson/core/json/TestRootValueParsing.java,src/test/java/com/fasterxml/jackson/core/json/TestRootValueParsing.java,32,public void testSimpleBooleans() throws Exception
True,src/test/java/com/fasterxml/jackson/core/json/TestRootValueParsing.java,src/test/java/com/fasterxml/jackson/core/json/TestRootValueParsing.java,34,_testSimpleBooleans(false);
True,src/test/java/com/fasterxml/jackson/core/json/TestRootValueParsing.java,src/test/java/com/fasterxml/jackson/core/json/TestRootValueParsing.java,35,_testSimpleBooleans(true);
True,src/test/java/com/fasterxml/jackson/core/json/TestRootValueParsing.java,src/test/java/com/fasterxml/jackson/core/json/TestRootValueParsing.java,38,private void _testSimpleBooleans(boolean useStream) throws Exception
True,src/test/java/com/fasterxml/jackson/core/json/TestRootValueParsing.java,src/test/java/com/fasterxml/jackson/core/json/TestRootValueParsing.java,40,"final String DOC = ""true false\ttrue\rfalse\ntrue\r\nfalse\r\n   true"";"
True,src/test/java/com/fasterxml/jackson/core/json/TestRootValueParsing.java,src/test/java/com/fasterxml/jackson/core/json/TestRootValueParsing.java,41,JsonParser jp = useStream ?
True,src/test/java/com/fasterxml/jackson/core/json/TestRootValueParsing.java,src/test/java/com/fasterxml/jackson/core/json/TestRootValueParsing.java,42,"createParserUsingStream(JSON_F, DOC, ""UTF-8"")"
True,src/test/java/com/fasterxml/jackson/core/json/TestRootValueParsing.java,src/test/java/com/fasterxml/jackson/core/json/TestRootValueParsing.java,43,": createParserUsingReader(JSON_F, DOC);"
True,src/test/java/com/fasterxml/jackson/core/json/TestRootValueParsing.java,src/test/java/com/fasterxml/jackson/core/json/TestRootValueParsing.java,44,boolean exp = true;
True,src/test/java/com/fasterxml/jackson/core/json/TestRootValueParsing.java,src/test/java/com/fasterxml/jackson/core/json/TestRootValueParsing.java,45,for (int i = 1; i <= 7; ++i) {
True,src/test/java/com/fasterxml/jackson/core/json/TestRootValueParsing.java,src/test/java/com/fasterxml/jackson/core/json/TestRootValueParsing.java,46,"assertToken(exp ? JsonToken.VALUE_TRUE : JsonToken.VALUE_FALSE, jp.nextToken());"
True,src/test/java/com/fasterxml/jackson/core/json/TestRootValueParsing.java,src/test/java/com/fasterxml/jackson/core/json/TestRootValueParsing.java,47,exp = !exp;
True,src/test/java/com/fasterxml/jackson/core/json/TestRootValueParsing.java,src/test/java/com/fasterxml/jackson/core/json/TestRootValueParsing.java,49,assertNull(jp.nextToken());
True,src/test/java/com/fasterxml/jackson/core/json/TestRootValueParsing.java,src/test/java/com/fasterxml/jackson/core/json/TestRootValueParsing.java,50,jp.close();
