is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,40,protected final static int INT_HASH = '#';
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,2499,while (_inputPtr < _inputEnd || loadMore()) {
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,2500,int i = _inputBuffer[_inputPtr++] & 0xFF;
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,2501,if (i > INT_SPACE) {
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,2502,if (i == INT_SLASH) {
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,2503,_skipComment();
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,2504,continue;
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,2506,if (i == INT_HASH) {
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,2507,if (_skipYAMLComment()) {
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,2508,continue;
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,2511,return i;
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,2512,} else if (i != INT_SPACE) {
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,2513,if (i == INT_LF) {
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,2514,++_currInputRow;
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,2515,_currInputRowStart = _inputPtr;
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,2516,} else if (i == INT_CR) {
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,2517,_skipCR();
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,2518,} else if (i != INT_TAB) {
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,2519,_throwInvalidSpace(i);
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,2528,while ((_inputPtr < _inputEnd) || loadMore()) {
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,2529,int i = _inputBuffer[_inputPtr++] & 0xFF;
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,2530,if (i > INT_SPACE) {
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,2531,if (i == INT_SLASH) {
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,2532,_skipComment();
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,2533,continue;
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,2535,if (i == INT_HASH) {
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,2536,if (_skipYAMLComment()) {
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,2537,continue;
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,2540,return i;
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,2541,} else if (i != INT_SPACE) {
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,2542,if (i == INT_LF) {
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,2543,++_currInputRow;
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,2544,_currInputRowStart = _inputPtr;
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,2545,} else if (i == INT_CR) {
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,2546,_skipCR();
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,2547,} else if (i != INT_TAB) {
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,2548,_throwInvalidSpace(i);
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,2552,// We ran out of input...
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,2553,_handleEOF();
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,2554,return -1;
False,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,2510,ase 2: // 2-byte UTF
False,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,2511,skipUtf8_2(i);
False,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,2512,reak;
False,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,2513,ase 3: // 3-byte UTF
False,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,2514,skipUtf8_3(i);
False,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,2515,reak;
False,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,2516,ase 4: // 4-byte UTF
False,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,2517,skipUtf8_4(i);
False,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,2518,reak;
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,2580,//            case 2: // 2-byte UTF
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,2581,//            case 3: // 3-byte UTF
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,2582,//            case 4: // 4-byte UTF
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,2603,if (i == INT_SLASH || i == INT_HASH) {
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,2604,return _skipColon2(true);
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,2612,if (i == INT_SLASH || i == INT_HASH) {
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,2613,return _skipColon2(true);
False,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,2570,f (i > 32) {
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,2626,if (i > INT_SPACE) {
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,2627,if (i == INT_SLASH || i == INT_HASH) {
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,2628,return _skipColon2(true);
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,2636,if (i == INT_SLASH || i == INT_HASH) {
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,2637,return _skipColon2(true);
False,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,69,testYAMLComments(true);
True,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,69,JsonFactory f = new JsonFactory();
True,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,70,"f.configure(JsonParser.Feature.ALLOW_YAML_COMMENTS, true);"
True,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,71,"_testYAMLComments(f, true);"
True,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,72,"_testCommentsGenerated(f, true, ""# foo\n"");"
False,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,73,testYAMLComments(false);
True,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,76,JsonFactory f = new JsonFactory();
True,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,77,"f.configure(JsonParser.Feature.ALLOW_YAML_COMMENTS, true);"
True,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,78,"_testYAMLComments(f, false);"
True,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,79,"_testCommentsGenerated(f, false, ""# foo\n"");"
True,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,82,public void testCCommentsBytes() throws Exception {
True,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,83,JsonFactory f = new JsonFactory();
True,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,84,"f.configure(JsonParser.Feature.ALLOW_COMMENTS, true);"
True,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,85,"_testCommentsGenerated(f, true, ""/* foo */\n"");"
True,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,88,public void testCCommentsChars() throws Exception {
True,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,89,JsonFactory f = new JsonFactory();
True,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,90,"f.configure(JsonParser.Feature.ALLOW_COMMENTS, true);"
True,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,91,"_testCommentsGenerated(f, false, ""/* foo */\n"");"
True,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,94,public void testCppCommentsBytes() throws Exception {
True,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,95,JsonFactory f = new JsonFactory();
True,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,96,"f.configure(JsonParser.Feature.ALLOW_COMMENTS, true);"
True,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,97,"_testCommentsGenerated(f, true, ""// foo\n"");"
True,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,100,public void testCppCommentsChars() throws Exception {
True,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,101,JsonFactory f = new JsonFactory();
True,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,102,"f.configure(JsonParser.Feature.ALLOW_COMMENTS, true);"
True,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,103,"_testCommentsGenerated(f, false, ""// foo \n"");"
False,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,76,rivate void _testYAMLComments(boolean useStream) throws Exception
True,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,106,"@SuppressWarnings(""resource"")"
True,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,107,"private void _testCommentsGenerated(JsonFactory f, boolean useStream, String comment) throws Exception"
True,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,109,for (String arg : new String[] {
True,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,110,""":%s123"","
True,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,111,""" :%s123"","
True,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,112,"""\t:%s123"","
True,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,113,""": %s123"","
True,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,114,""":\t%s123"","
True,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,116,"String commented = String.format(arg, comment);"
True,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,118,"final String DOC = ""{\""abc\"""" + commented + ""}"";"
True,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,119,JsonParser jp = useStream ?
True,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,120,"f.createParser(DOC.getBytes(""UTF-8""))"
True,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,121,: f.createParser(DOC);
True,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,122,"assertEquals(JsonToken.START_OBJECT, jp.nextToken());"
True,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,123,JsonToken t = null;
True,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,124,try {
True,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,125,t = jp.nextToken();
True,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,126,} catch (Exception e) {
True,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,127,"throw new RuntimeException(""Failed on '""+DOC+""' due to ""+e, e);"
True,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,129,"assertEquals(JsonToken.FIELD_NAME, t);"
True,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,131,try {
True,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,132,t = jp.nextToken();
True,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,133,} catch (Exception e) {
True,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,134,"throw new RuntimeException(""Failed on '""+DOC+""' due to ""+e, e);"
True,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,136,"assertEquals(JsonToken.VALUE_NUMBER_INT, t);"
True,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,137,"assertEquals(123, jp.getIntValue());"
True,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,138,"assertEquals(JsonToken.END_OBJECT, jp.nextToken());"
True,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,139,jp.close();
True,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,144,"private void _testYAMLComments(JsonFactory f, boolean useStream) throws Exception"
False,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,78,sonFactory jf = new JsonFactory();
False,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,79,"f.configure(JsonParser.Feature.ALLOW_YAML_COMMENTS, true);"
False,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,91,"f.createParser(DOC.getBytes(""UTF-8""))"
False,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,92, jf.createParser(DOC);
True,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,157,"f.createParser(DOC.getBytes(""UTF-8""))"
True,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,src/test/java/com/fasterxml/jackson/core/json/TestComments.java,158,: f.createParser(DOC);
