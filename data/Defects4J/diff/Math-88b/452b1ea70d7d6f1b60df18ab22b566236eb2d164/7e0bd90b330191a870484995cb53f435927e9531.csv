is_addition,old_file_path,new_file_path,line_num,content
False,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,73,"hrows DerivativeException, IntegratorException,"
False,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,74,"OException, ClassNotFoundException {"
False,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,76,"ouble[]   y    =   { 0.0, 1.0, -2.0 };"
False,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,77,"ummyStepInterpolator interpolator = new DummyStepInterpolator(y, true);"
False,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,78,nterpolator.storeTime(0);
False,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,79,nterpolator.shift();
False,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,80,nterpolator.storeTime(1);
False,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,82,yteArrayOutputStream bos = new ByteArrayOutputStream();
False,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,83,bjectOutputStream    oos = new ObjectOutputStream(bos);
False,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,84,os.writeObject(interpolator);
False,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,86,ssertTrue(bos.size () > 150);
False,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,87,ssertTrue(bos.size () < 250);
False,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,89,yteArrayInputStream  bis = new ByteArrayInputStream(bos.toByteArray());
False,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,90,bjectInputStream     ois = new ObjectInputStream(bis);
False,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,91,ummyStepInterpolator dsi = (DummyStepInterpolator) ois.readObject();
False,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,93,si.setInterpolatedTime(0.5);
False,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,94,ouble[] result = dsi.getInterpolatedState();
False,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,95,or (int i = 0; i < result.length; ++i) {
False,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,96,ssertTrue(Math.abs(result[i] - y[i]) < 1.0e-10);
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,73,"throws DerivativeException, IntegratorException,"
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,74,"IOException, ClassNotFoundException {"
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,76,"double[]   y    =   { 0.0, 1.0, -2.0 };"
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,77,"DummyStepInterpolator interpolator = new DummyStepInterpolator(y, true);"
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,78,interpolator.storeTime(0);
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,79,interpolator.shift();
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,80,interpolator.storeTime(1);
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,82,ByteArrayOutputStream bos = new ByteArrayOutputStream();
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,83,ObjectOutputStream    oos = new ObjectOutputStream(bos);
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,84,oos.writeObject(interpolator);
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,86,assertTrue(bos.size () > 150);
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,87,assertTrue(bos.size () < 250);
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,89,ByteArrayInputStream  bis = new ByteArrayInputStream(bos.toByteArray());
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,90,ObjectInputStream     ois = new ObjectInputStream(bis);
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,91,DummyStepInterpolator dsi = (DummyStepInterpolator) ois.readObject();
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,93,dsi.setInterpolatedTime(0.5);
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,94,double[] result = dsi.getInterpolatedState();
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,95,for (int i = 0; i < result.length; ++i) {
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,96,assertTrue(Math.abs(result[i] - y[i]) < 1.0e-10);
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,101,public void testSerializationError()
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,102,"throws DerivativeException, IntegratorException,"
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,103,"IOException, ClassNotFoundException {"
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,105,"double[] y = { 0.0, 1.0, -2.0 };"
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,106,ErrorGeneratingInterpolator interpolator =
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,107,"new ErrorGeneratingInterpolator(y, true);"
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,108,interpolator.storeTime(0);
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,109,interpolator.shift();
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,110,interpolator.storeTime(1);
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,112,ByteArrayOutputStream bos = new ByteArrayOutputStream();
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,113,ObjectOutputStream    oos = new ObjectOutputStream(bos);
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,114,oos.writeObject(interpolator);
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,116,assertTrue(bos.size () > 250);
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,117,assertTrue(bos.size () < 300);
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,119,ByteArrayInputStream  bis = new ByteArrayInputStream(bos.toByteArray());
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,120,ObjectInputStream     ois = new ObjectInputStream(bis);
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,121,try {
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,122,ois.readObject();
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,123,"fail(""an exception should have been thrown"");"
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,124,} catch (IOException ioe) {
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,125,// expected behavior
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,126,assertNull(ioe.getMessage());
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,127,} catch (Exception e) {
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,128,"fail(""wrong exception caught"");"
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,133,private static class ErrorGeneratingInterpolator extends DummyStepInterpolator {
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,134,public ErrorGeneratingInterpolator() {
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,135,super();
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,137,"protected ErrorGeneratingInterpolator(double[] y, boolean forward) {"
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,138,"super(y, forward);"
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,140,"public void computeInterpolatedState(double theta, double oneMinusThetaH)"
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,141,throws DerivativeException {
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,142,throw new DerivativeException(null);
True,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,src/test/org/apache/commons/math/ode/DummyStepInterpolatorTest.java,144,private static final long serialVersionUID = 0x3f6ab636f0c93571L;
