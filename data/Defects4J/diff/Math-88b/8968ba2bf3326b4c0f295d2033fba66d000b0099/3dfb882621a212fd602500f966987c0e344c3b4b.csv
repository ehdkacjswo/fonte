is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/math/ode/ODEIntegrator.java,src/java/org/apache/commons/math/ode/ODEIntegrator.java,27,* This interface defines the common parts shared by integrators
True,src/java/org/apache/commons/math/ode/ODEIntegrator.java,src/java/org/apache/commons/math/ode/ODEIntegrator.java,28,* for first and second order differential equations.
True,src/java/org/apache/commons/math/ode/ODEIntegrator.java,src/java/org/apache/commons/math/ode/ODEIntegrator.java,29,* @see FirstOrderIntegrator
True,src/java/org/apache/commons/math/ode/ODEIntegrator.java,src/java/org/apache/commons/math/ode/ODEIntegrator.java,30,* @see SecondOrderIntegrator
True,src/java/org/apache/commons/math/ode/ODEIntegrator.java,src/java/org/apache/commons/math/ode/ODEIntegrator.java,31,* @version $Revision$ $Date$
True,src/java/org/apache/commons/math/ode/ODEIntegrator.java,src/java/org/apache/commons/math/ode/ODEIntegrator.java,32,* @since 2.0
False,src/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegrator.java,228," <p>This is quite similar to the Pascal triangle, except for a"
False,src/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegrator.java,229," (-1)<sup>i</sup> sign. We use a straightforward approach here,"
False,src/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegrator.java,230, since we don't expect this to be run too many times with too
False,src/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegrator.java,231, high k. It is based on the recurrence relations:</p>
True,src/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegrator.java,228,* <p>This is quite similar to the Pascal triangle containing the
True,src/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegrator.java,229,"* binomial coefficiens, except for an additional (-1)<sup>i</sup> sign."
True,src/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegrator.java,230,"* We use a straightforward approach here, since we don't expect this to"
True,src/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegrator.java,231,* be run too many times with too high k. It is based on the recurrence
True,src/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegrator.java,232,* relations:</p>
True,src/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegrator.java,238,* @return the coefficients array for backward differences
True,src/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthStepInterpolator.java,src/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthStepInterpolator.java,123,* @param truncatedEndTime end time of truncated step
True,src/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonStepInterpolator.java,src/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonStepInterpolator.java,123,* @param truncatedEndTime end time of truncated step
False,src/java/org/apache/commons/math/ode/nonstiff/MultistepIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/MultistepIntegrator.java,290, @param number of steps to store
True,src/java/org/apache/commons/math/ode/nonstiff/MultistepIntegrator.java,src/java/org/apache/commons/math/ode/nonstiff/MultistepIntegrator.java,290,* @param n number of steps to store
