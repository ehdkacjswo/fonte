is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,59, @version $Revision: 1.4 $ $Date: 2003/09/07 03:12:56 $
True,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,59,* @version $Revision: 1.5 $ $Date: 2003/09/26 19:30:32 $
False,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,74,hrow new IllegalArgumentException(
False,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,75,"Dataset arrays must have same length."");"
True,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,74,"throw new IllegalArgumentException(""Dataset arrays must have same length."");"
False,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,85,hrow new IllegalArgumentException(
False,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,86,"Dataset must specify sorted, ascending x values."");"
True,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,84,"throw new IllegalArgumentException(""Dataset must specify sorted, ascending x values."");"
False,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,98,/ Vector b is the right hand side of the system.
True,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,96,// Vector b is the right hand side (RHS) of the system.
False,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,102,"/ u[] and l[] are not really needed, the computation can be folded into the"
False,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,103,/ system solving loops.
False,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,104,/double u[] = new double[n - 2]; // upper diagonal
False,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,105,/double l[] = new double[n - 2]; // lower diagonal
False,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,106,/ Setup RHS and diagonal.
True,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,100,// Setup right hand side and diagonal.
True,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,101,double dquot = (yval[1] - yval[0]) / (xval[1] - xval[0]);
False,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,112,[i] = 6.0 * ((yval[i + 2] - yval[i + 1]) / (xval[i + 2] -
False,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,113,val[i + 1]) - (yval[i + 1] - yval[i]) / (xval[i + 1] -
False,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,114,val[i]));
True,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,107,double dquotNext =
True,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,108,(yval[i + 2] - yval[i + 1]) / (xval[i + 2] - xval[i + 1]);
True,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,109,b[i] = 6.0 * (dquotNext - dquot);
True,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,111,dquot = dquotNext;
True,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,113,// u[] and l[] (for the upper and lower diagonal respectively) are not
True,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,114,"// really needed, the computation is folded into the system solving loops."
True,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,115,// Keep this for documentation purposes:
True,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,116,//double u[] = new double[n - 2]; // upper diagonal
True,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,117,//double l[] = new double[n - 2]; // lower diagonal
False,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,119,/u[i] = xval[i + 2] - xval[i + 1];
False,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,120,/l[i] = xval[i + 2] - xval[i + 1];
True,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,120,//  u[i] = xval[i + 2] - xval[i + 1];
True,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,121,//  l[i] = xval[i + 2] - xval[i + 1];
False,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,124,/ TODO: This relies on compiler for CSE of delta/d[i]. Is this a reasonable assumption?
False,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,126,[i + 1] -= delta * delta / d[i];
False,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,127,[i + 1] -= b[i] * delta / d[i];
True,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,126,double deltaquot = delta / d[i];
True,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,127,d[i + 1] -= delta * deltaquot;
True,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,128,b[i + 1] -= b[i] * deltaquot;
False,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,137,[0][3] = d[0] / (xval[1] - xval[0]) / 6.0;
True,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,138,double delta = xval[1] - xval[0];
True,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,139,c[0][3] = d[0] / delta / 6.0;
False,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,139,[0][1] = (yval[1] - yval[0]) / (xval[1] - xval[0]) - d[0] *
False,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,140,xval[1] - xval[0]) / 6.0;
True,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,141,c[0][1] = (yval[1] - yval[0]) / delta - d[0] * delta / 6.0;
False,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,142,/ TODO: This relies on compiler for CSE of xval[i + 1] - xval[i]. Is this a reasonable assumption?
False,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,143,[i][3] = (d[i] - d[i - 1]) / (xval[i + 1] - xval[i]) / 6.0;
True,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,143,delta = xval[i + 1] - xval[i];
True,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,144,c[i][3] = (d[i] - d[i - 1]) / delta / 6.0;
False,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,145,[i][1] = (yval[i + 1] - yval[i]) / (xval[i + 1] - xval[i]) -
False,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,146,[i] * (xval[i + 1] - xval[i]) / 6.0 - d[i - 1] *
False,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,147,xval[i + 1] - xval[i]) / 3.0;
True,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,146,c[i][1] =
True,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,147,(yval[i + 1] - yval[i]) / delta
True,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,148,- (d[i] / 2.0 - d[i - 1]) * delta / 3.0;
False,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,149,"/ TODO: again, CSE aspects."
False,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,150,[n - 1][3] = -d[n - 2] / (xval[n] - xval[n - 1]) / 6.0;
True,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,150,delta = (xval[n] - xval[n - 1]);
True,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,151,c[n - 1][3] = -d[n - 2] / delta / 6.0;
False,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,152,[n - 1][1] = (yval[n] - yval[n - 1]) / (xval[n] - xval[n - 1]) -
False,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,153,[n - 2] * (xval[n] - xval[n - 1]) / 3.0;
True,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,153,c[n - 1][1] =
True,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,src/java/org/apache/commons/math/analysis/SplineInterpolator.java,154,(yval[n] - yval[n - 1]) / delta - d[n - 2] * delta / 3.0;
False,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,62, @version $Revision: 1.1 $ $Date: 2003/08/16 17:06:15 $
True,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,62,* @version $Revision: 1.2 $ $Date: 2003/09/26 19:30:33 $
False,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,142, {@link #inverseCummulativeProbability(int)} to find critical values.
True,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,142,* {@link #inverseCummulativeProbability(double)} to find critical values.
False,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,153, {@link #inverseCummulativeProbability(int)} to find critical values.
True,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,src/java/org/apache/commons/math/distribution/AbstractDiscreteDistribution.java,153,* {@link #inverseCummulativeProbability(double)} to find critical values.
False,src/java/org/apache/commons/math/distribution/GammaDistributionImpl.java,src/java/org/apache/commons/math/distribution/GammaDistributionImpl.java,61, @version $Revision: 1.6 $ $Date: 2003/09/17 19:29:28 $
True,src/java/org/apache/commons/math/distribution/GammaDistributionImpl.java,src/java/org/apache/commons/math/distribution/GammaDistributionImpl.java,61,* @version $Revision: 1.7 $ $Date: 2003/09/26 19:30:33 $
False,src/java/org/apache/commons/math/distribution/GammaDistributionImpl.java,src/java/org/apache/commons/math/distribution/GammaDistributionImpl.java,156, @todo try to improve on this estimate
True,src/java/org/apache/commons/math/distribution/GammaDistributionImpl.java,src/java/org/apache/commons/math/distribution/GammaDistributionImpl.java,156,* TODO: try to improve on this estimate
False,src/java/org/apache/commons/math/distribution/GammaDistributionImpl.java,src/java/org/apache/commons/math/distribution/GammaDistributionImpl.java,170, @todo try to improve on this estimate
True,src/java/org/apache/commons/math/distribution/GammaDistributionImpl.java,src/java/org/apache/commons/math/distribution/GammaDistributionImpl.java,170,* TODO: try to improve on this estimate
False,src/java/org/apache/commons/math/distribution/GammaDistributionImpl.java,src/java/org/apache/commons/math/distribution/GammaDistributionImpl.java,196, @todo try to improve on this estimate
True,src/java/org/apache/commons/math/distribution/GammaDistributionImpl.java,src/java/org/apache/commons/math/distribution/GammaDistributionImpl.java,196,* TODO: try to improve on this estimate
False,src/java/org/apache/commons/math/distribution/GammaDistributionImpl.java,src/java/org/apache/commons/math/distribution/GammaDistributionImpl.java,199,/ NOTE: gamma is skewed to the left
False,src/java/org/apache/commons/math/distribution/GammaDistributionImpl.java,src/java/org/apache/commons/math/distribution/GammaDistributionImpl.java,200,"/ NOTE: therefore, P(X < &mu;) > .5"
True,src/java/org/apache/commons/math/distribution/GammaDistributionImpl.java,src/java/org/apache/commons/math/distribution/GammaDistributionImpl.java,199,"// Gamma is skewed to the left, therefore, P(X < &mu;) > .5"
False,src/java/org/apache/commons/math/stat/AbstractStoreUnivariate.java,src/java/org/apache/commons/math/stat/AbstractStoreUnivariate.java,62, @version $Revision: 1.10 $ $Date: 2003/07/15 03:45:10 $
True,src/java/org/apache/commons/math/stat/AbstractStoreUnivariate.java,src/java/org/apache/commons/math/stat/AbstractStoreUnivariate.java,62,* @version $Revision: 1.11 $ $Date: 2003/09/26 19:30:32 $
False,src/java/org/apache/commons/math/stat/AbstractStoreUnivariate.java,src/java/org/apache/commons/math/stat/AbstractStoreUnivariate.java,95, @see org.apache.commons.math.stat2.AbstractStoreUnivariate#getSortedValues()
True,src/java/org/apache/commons/math/stat/AbstractStoreUnivariate.java,src/java/org/apache/commons/math/stat/AbstractStoreUnivariate.java,95,* @see org.apache.commons.math.stat.StoreUnivariate#getSortedValues()
False,src/java/org/apache/commons/math/stat/AbstractUnivariate.java,src/java/org/apache/commons/math/stat/AbstractUnivariate.java,71, @version $Revision: 1.2 $ $Date: 2003/07/15 03:45:10 $
True,src/java/org/apache/commons/math/stat/AbstractUnivariate.java,src/java/org/apache/commons/math/stat/AbstractUnivariate.java,71,* @version $Revision: 1.3 $ $Date: 2003/09/26 19:30:32 $
False,src/java/org/apache/commons/math/stat/AbstractUnivariate.java,src/java/org/apache/commons/math/stat/AbstractUnivariate.java,297, @see org.apache.commons.math.Univariate#clear()
True,src/java/org/apache/commons/math/stat/AbstractUnivariate.java,src/java/org/apache/commons/math/stat/AbstractUnivariate.java,297,* @see org.apache.commons.math.stat.Univariate#clear()
False,src/java/org/apache/commons/math/stat/AbstractUnivariate.java,src/java/org/apache/commons/math/stat/AbstractUnivariate.java,316, @see org.apache.commons.math.Univariate#getWindowSize()
True,src/java/org/apache/commons/math/stat/AbstractUnivariate.java,src/java/org/apache/commons/math/stat/AbstractUnivariate.java,316,* @see org.apache.commons.math.stat.Univariate#getWindowSize()
False,src/java/org/apache/commons/math/stat/AbstractUnivariate.java,src/java/org/apache/commons/math/stat/AbstractUnivariate.java,323, @see org.apache.commons.math.Univariate#setWindowSize(int)
True,src/java/org/apache/commons/math/stat/AbstractUnivariate.java,src/java/org/apache/commons/math/stat/AbstractUnivariate.java,323,* @see org.apache.commons.math.stat.Univariate#setWindowSize(int)
False,src/java/org/apache/commons/math/stat/Applyable.java,src/java/org/apache/commons/math/stat/Applyable.java,2," Created on Jul 15, 2003"
True,src/java/org/apache/commons/math/stat/Applyable.java,src/java/org/apache/commons/math/stat/Applyable.java,2,"* The Apache Software License, Version 1.1"
True,src/java/org/apache/commons/math/stat/Applyable.java,src/java/org/apache/commons/math/stat/Applyable.java,4,* Copyright (c) 2003 The Apache Software Foundation.  All rights
True,src/java/org/apache/commons/math/stat/Applyable.java,src/java/org/apache/commons/math/stat/Applyable.java,5,* reserved.
True,src/java/org/apache/commons/math/stat/Applyable.java,src/java/org/apache/commons/math/stat/Applyable.java,7,"* Redistribution and use in source and binary forms, with or without"
True,src/java/org/apache/commons/math/stat/Applyable.java,src/java/org/apache/commons/math/stat/Applyable.java,8,"* modification, are permitted provided that the following conditions"
True,src/java/org/apache/commons/math/stat/Applyable.java,src/java/org/apache/commons/math/stat/Applyable.java,9,* are met:
True,src/java/org/apache/commons/math/stat/Applyable.java,src/java/org/apache/commons/math/stat/Applyable.java,11,* 1. Redistributions of source code must retain the above copyright
True,src/java/org/apache/commons/math/stat/Applyable.java,src/java/org/apache/commons/math/stat/Applyable.java,12,"*    notice, this list of conditions and the following disclaimer."
True,src/java/org/apache/commons/math/stat/Applyable.java,src/java/org/apache/commons/math/stat/Applyable.java,14,* 2. Redistributions in binary form must reproduce the above copyright
True,src/java/org/apache/commons/math/stat/Applyable.java,src/java/org/apache/commons/math/stat/Applyable.java,15,"*    notice, this list of conditions and the following disclaimer in"
True,src/java/org/apache/commons/math/stat/Applyable.java,src/java/org/apache/commons/math/stat/Applyable.java,16,*    the documentation and/or other materials provided with the
True,src/java/org/apache/commons/math/stat/Applyable.java,src/java/org/apache/commons/math/stat/Applyable.java,17,*    distribution.
True,src/java/org/apache/commons/math/stat/Applyable.java,src/java/org/apache/commons/math/stat/Applyable.java,19,"* 3. The end-user documentation included with the redistribution, if"
True,src/java/org/apache/commons/math/stat/Applyable.java,src/java/org/apache/commons/math/stat/Applyable.java,20,"*    any, must include the following acknowlegement:"
True,src/java/org/apache/commons/math/stat/Applyable.java,src/java/org/apache/commons/math/stat/Applyable.java,21,"*       ""This product includes software developed by the"
True,src/java/org/apache/commons/math/stat/Applyable.java,src/java/org/apache/commons/math/stat/Applyable.java,22,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/java/org/apache/commons/math/stat/Applyable.java,src/java/org/apache/commons/math/stat/Applyable.java,23,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/java/org/apache/commons/math/stat/Applyable.java,src/java/org/apache/commons/math/stat/Applyable.java,24,*    if and wherever such third-party acknowlegements normally appear.
True,src/java/org/apache/commons/math/stat/Applyable.java,src/java/org/apache/commons/math/stat/Applyable.java,26,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/java/org/apache/commons/math/stat/Applyable.java,src/java/org/apache/commons/math/stat/Applyable.java,27,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/java/org/apache/commons/math/stat/Applyable.java,src/java/org/apache/commons/math/stat/Applyable.java,28,*    from this software without prior written permission. For written
True,src/java/org/apache/commons/math/stat/Applyable.java,src/java/org/apache/commons/math/stat/Applyable.java,29,"*    permission, please contact apache@apache.org."
True,src/java/org/apache/commons/math/stat/Applyable.java,src/java/org/apache/commons/math/stat/Applyable.java,31,"* 5. Products derived from this software may not be called ""Apache"""
True,src/java/org/apache/commons/math/stat/Applyable.java,src/java/org/apache/commons/math/stat/Applyable.java,32,"*    nor may ""Apache"" appear in their names without prior written"
True,src/java/org/apache/commons/math/stat/Applyable.java,src/java/org/apache/commons/math/stat/Applyable.java,33,*    permission of the Apache Software Foundation.
True,src/java/org/apache/commons/math/stat/Applyable.java,src/java/org/apache/commons/math/stat/Applyable.java,35,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/java/org/apache/commons/math/stat/Applyable.java,src/java/org/apache/commons/math/stat/Applyable.java,36,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/java/org/apache/commons/math/stat/Applyable.java,src/java/org/apache/commons/math/stat/Applyable.java,37,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/java/org/apache/commons/math/stat/Applyable.java,src/java/org/apache/commons/math/stat/Applyable.java,38,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/java/org/apache/commons/math/stat/Applyable.java,src/java/org/apache/commons/math/stat/Applyable.java,39,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/java/org/apache/commons/math/stat/Applyable.java,src/java/org/apache/commons/math/stat/Applyable.java,40,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/java/org/apache/commons/math/stat/Applyable.java,src/java/org/apache/commons/math/stat/Applyable.java,41,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/java/org/apache/commons/math/stat/Applyable.java,src/java/org/apache/commons/math/stat/Applyable.java,42,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/java/org/apache/commons/math/stat/Applyable.java,src/java/org/apache/commons/math/stat/Applyable.java,43,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/java/org/apache/commons/math/stat/Applyable.java,src/java/org/apache/commons/math/stat/Applyable.java,44,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/java/org/apache/commons/math/stat/Applyable.java,src/java/org/apache/commons/math/stat/Applyable.java,45,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/java/org/apache/commons/math/stat/Applyable.java,src/java/org/apache/commons/math/stat/Applyable.java,46,* SUCH DAMAGE.
True,src/java/org/apache/commons/math/stat/Applyable.java,src/java/org/apache/commons/math/stat/Applyable.java,49,* This software consists of voluntary contributions made by many
True,src/java/org/apache/commons/math/stat/Applyable.java,src/java/org/apache/commons/math/stat/Applyable.java,50,* individuals on behalf of the Apache Software Foundation.  For more
True,src/java/org/apache/commons/math/stat/Applyable.java,src/java/org/apache/commons/math/stat/Applyable.java,51,"* information on the Apache Software Foundation, please see"
True,src/java/org/apache/commons/math/stat/Applyable.java,src/java/org/apache/commons/math/stat/Applyable.java,52,* <http://www.apache.org/>.
False,src/java/org/apache/commons/math/stat/Applyable.java,src/java/org/apache/commons/math/stat/Applyable.java,12, To change the template for this generated type comment go to
False,src/java/org/apache/commons/math/stat/Applyable.java,src/java/org/apache/commons/math/stat/Applyable.java,13, Window>Preferences>Java>Code Generation>Code and Comments
True,src/java/org/apache/commons/math/stat/Applyable.java,src/java/org/apache/commons/math/stat/Applyable.java,61,* TODO: add javadocs
False,src/java/org/apache/commons/math/stat/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/stat/BeanListUnivariateImpl.java,65, @version $Revision: 1.5 $ $Date: 2003/09/07 03:12:56 $
True,src/java/org/apache/commons/math/stat/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/stat/BeanListUnivariateImpl.java,65,* @version $Revision: 1.6 $ $Date: 2003/09/26 19:30:32 $
False,src/java/org/apache/commons/math/stat/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/stat/BeanListUnivariateImpl.java,112, @see org.apache.commons.math.Univariate#addValue(double)
True,src/java/org/apache/commons/math/stat/BeanListUnivariateImpl.java,src/java/org/apache/commons/math/stat/BeanListUnivariateImpl.java,112,* @see org.apache.commons.math.stat.Univariate#addValue(double)
False,src/java/org/apache/commons/math/stat/ListUnivariateImpl.java,src/java/org/apache/commons/math/stat/ListUnivariateImpl.java,63, @version $Revision: 1.5 $ $Date: 2003/09/07 03:12:56 $
True,src/java/org/apache/commons/math/stat/ListUnivariateImpl.java,src/java/org/apache/commons/math/stat/ListUnivariateImpl.java,63,* @version $Revision: 1.6 $ $Date: 2003/09/26 19:30:32 $
False,src/java/org/apache/commons/math/stat/ListUnivariateImpl.java,src/java/org/apache/commons/math/stat/ListUnivariateImpl.java,100, @see org.apache.commons.math.StoreUnivariate#getValues()
True,src/java/org/apache/commons/math/stat/ListUnivariateImpl.java,src/java/org/apache/commons/math/stat/ListUnivariateImpl.java,100,* @see org.apache.commons.math.stat.StoreUnivariate#getValues()
False,src/java/org/apache/commons/math/stat/ListUnivariateImpl.java,src/java/org/apache/commons/math/stat/ListUnivariateImpl.java,127, @see org.apache.commons.math.StoreUnivariate#getElement(int)
True,src/java/org/apache/commons/math/stat/ListUnivariateImpl.java,src/java/org/apache/commons/math/stat/ListUnivariateImpl.java,127,* @see org.apache.commons.math.stat.StoreUnivariate#getElement(int)
False,src/java/org/apache/commons/math/stat/ListUnivariateImpl.java,src/java/org/apache/commons/math/stat/ListUnivariateImpl.java,151, @see org.apache.commons.math.Univariate#getN()
True,src/java/org/apache/commons/math/stat/ListUnivariateImpl.java,src/java/org/apache/commons/math/stat/ListUnivariateImpl.java,151,* @see org.apache.commons.math.stat.Univariate#getN()
False,src/java/org/apache/commons/math/stat/ListUnivariateImpl.java,src/java/org/apache/commons/math/stat/ListUnivariateImpl.java,169, @see org.apache.commons.math.Univariate#addValue(double)
True,src/java/org/apache/commons/math/stat/ListUnivariateImpl.java,src/java/org/apache/commons/math/stat/ListUnivariateImpl.java,169,* @see org.apache.commons.math.stat.Univariate#addValue(double)
False,src/java/org/apache/commons/math/stat/ListUnivariateImpl.java,src/java/org/apache/commons/math/stat/ListUnivariateImpl.java,184, @see org.apache.commons.math.Univariate#clear()
True,src/java/org/apache/commons/math/stat/ListUnivariateImpl.java,src/java/org/apache/commons/math/stat/ListUnivariateImpl.java,184,* @see org.apache.commons.math.stat.Univariate#clear()
False,src/java/org/apache/commons/math/stat/StoreUnivariateImpl.java,src/java/org/apache/commons/math/stat/StoreUnivariateImpl.java,60, @version $Revision: 1.6 $ $Date: 2003/09/07 03:12:56 $
True,src/java/org/apache/commons/math/stat/StoreUnivariateImpl.java,src/java/org/apache/commons/math/stat/StoreUnivariateImpl.java,60,* @version $Revision: 1.7 $ $Date: 2003/09/26 19:30:32 $
False,src/java/org/apache/commons/math/stat/StoreUnivariateImpl.java,src/java/org/apache/commons/math/stat/StoreUnivariateImpl.java,77, @see org.apache.commons.math.StoreUnivariate#getValues()
True,src/java/org/apache/commons/math/stat/StoreUnivariateImpl.java,src/java/org/apache/commons/math/stat/StoreUnivariateImpl.java,77,* @see org.apache.commons.math.stat.StoreUnivariate#getValues()
False,src/java/org/apache/commons/math/stat/StoreUnivariateImpl.java,src/java/org/apache/commons/math/stat/StoreUnivariateImpl.java,92, @see org.apache.commons.math.StoreUnivariate#getElement(int)
True,src/java/org/apache/commons/math/stat/StoreUnivariateImpl.java,src/java/org/apache/commons/math/stat/StoreUnivariateImpl.java,92,* @see org.apache.commons.math.stat.StoreUnivariate#getElement(int)
False,src/java/org/apache/commons/math/stat/StoreUnivariateImpl.java,src/java/org/apache/commons/math/stat/StoreUnivariateImpl.java,99, @see org.apache.commons.math.Univariate#getN()
True,src/java/org/apache/commons/math/stat/StoreUnivariateImpl.java,src/java/org/apache/commons/math/stat/StoreUnivariateImpl.java,99,* @see org.apache.commons.math.stat.Univariate#getN()
False,src/java/org/apache/commons/math/stat/StoreUnivariateImpl.java,src/java/org/apache/commons/math/stat/StoreUnivariateImpl.java,106, @see org.apache.commons.math.Univariate#addValue(double)
True,src/java/org/apache/commons/math/stat/StoreUnivariateImpl.java,src/java/org/apache/commons/math/stat/StoreUnivariateImpl.java,106,* @see org.apache.commons.math.stat.Univariate#addValue(double)
False,src/java/org/apache/commons/math/stat/StoreUnivariateImpl.java,src/java/org/apache/commons/math/stat/StoreUnivariateImpl.java,126, @see org.apache.commons.math.Univariate#clear()
True,src/java/org/apache/commons/math/stat/StoreUnivariateImpl.java,src/java/org/apache/commons/math/stat/StoreUnivariateImpl.java,126,* @see org.apache.commons.math.stat.Univariate#clear()
False,src/java/org/apache/commons/math/stat/StoreUnivariateImpl.java,src/java/org/apache/commons/math/stat/StoreUnivariateImpl.java,134, @see org.apache.commons.math.Univariate#setWindowSize(int)
True,src/java/org/apache/commons/math/stat/StoreUnivariateImpl.java,src/java/org/apache/commons/math/stat/StoreUnivariateImpl.java,134,* @see org.apache.commons.math.stat.Univariate#setWindowSize(int)
False,src/java/org/apache/commons/math/stat/UnivariateImpl.java,src/java/org/apache/commons/math/stat/UnivariateImpl.java,70, @version $Revision: 1.19 $ $Date: 2003/07/15 03:45:10 $
True,src/java/org/apache/commons/math/stat/UnivariateImpl.java,src/java/org/apache/commons/math/stat/UnivariateImpl.java,70,* @version $Revision: 1.20 $ $Date: 2003/09/26 19:30:32 $
False,src/java/org/apache/commons/math/stat/UnivariateImpl.java,src/java/org/apache/commons/math/stat/UnivariateImpl.java,155, @see org.apache.commons.math.Univariate#clear()
True,src/java/org/apache/commons/math/stat/UnivariateImpl.java,src/java/org/apache/commons/math/stat/UnivariateImpl.java,155,* @see org.apache.commons.math.stat.Univariate#clear()
False,src/java/org/apache/commons/math/util/ContractableDoubleArray.java,src/java/org/apache/commons/math/util/ContractableDoubleArray.java,91, @version $Revision: 1.4 $ $Date: 2003/09/07 03:12:56 $
True,src/java/org/apache/commons/math/util/ContractableDoubleArray.java,src/java/org/apache/commons/math/util/ContractableDoubleArray.java,91,* @version $Revision: 1.5 $ $Date: 2003/09/26 19:30:33 $
False,src/java/org/apache/commons/math/util/ContractableDoubleArray.java,src/java/org/apache/commons/math/util/ContractableDoubleArray.java,249, @see org.apache.commons.math.ExpandableDoubleArray#setExpansionFactor(float)
True,src/java/org/apache/commons/math/util/ContractableDoubleArray.java,src/java/org/apache/commons/math/util/ContractableDoubleArray.java,249,* @see org.apache.commons.math.util.ExpandableDoubleArray#setExpansionFactor(float)
False,src/java/org/apache/commons/math/util/ContractableDoubleArray.java,src/java/org/apache/commons/math/util/ContractableDoubleArray.java,321, @see org.apache.commons.math.ExpandableDoubleArray#discardFrontElements(int)
True,src/java/org/apache/commons/math/util/ContractableDoubleArray.java,src/java/org/apache/commons/math/util/ContractableDoubleArray.java,321,* @see org.apache.commons.math.util.ExpandableDoubleArray#discardFrontElements(int)
False,src/java/org/apache/commons/math/util/ExpandableDoubleArray.java,src/java/org/apache/commons/math/util/ExpandableDoubleArray.java,91, @version $Revision: 1.5 $ $Date: 2003/09/07 03:12:56 $
True,src/java/org/apache/commons/math/util/ExpandableDoubleArray.java,src/java/org/apache/commons/math/util/ExpandableDoubleArray.java,91,* @version $Revision: 1.6 $ $Date: 2003/09/26 19:30:33 $
False,src/java/org/apache/commons/math/util/ExpandableDoubleArray.java,src/java/org/apache/commons/math/util/ExpandableDoubleArray.java,418, @see org.apache.commons.math.DoubleArray#getElements()
True,src/java/org/apache/commons/math/util/ExpandableDoubleArray.java,src/java/org/apache/commons/math/util/ExpandableDoubleArray.java,418,* @see org.apache.commons.math.util.DoubleArray#getElements()
False,src/java/org/apache/commons/math/util/FixedDoubleArray.java,src/java/org/apache/commons/math/util/FixedDoubleArray.java,85, @version $Revision: 1.6 $ $Date: 2003/09/07 03:12:56 $
True,src/java/org/apache/commons/math/util/FixedDoubleArray.java,src/java/org/apache/commons/math/util/FixedDoubleArray.java,85,* @version $Revision: 1.7 $ $Date: 2003/09/26 19:30:33 $
False,src/java/org/apache/commons/math/util/FixedDoubleArray.java,src/java/org/apache/commons/math/util/FixedDoubleArray.java,147, @see org.apache.commons.math.DoubleArray#getNumElements()
True,src/java/org/apache/commons/math/util/FixedDoubleArray.java,src/java/org/apache/commons/math/util/FixedDoubleArray.java,147,* @see org.apache.commons.math.util.DoubleArray#getNumElements()
False,src/java/org/apache/commons/math/util/FixedDoubleArray.java,src/java/org/apache/commons/math/util/FixedDoubleArray.java,162, @see org.apache.commons.math.DoubleArray#getElement(int)
True,src/java/org/apache/commons/math/util/FixedDoubleArray.java,src/java/org/apache/commons/math/util/FixedDoubleArray.java,162,* @see org.apache.commons.math.util.DoubleArray#getElement(int)
False,src/java/org/apache/commons/math/util/FixedDoubleArray.java,src/java/org/apache/commons/math/util/FixedDoubleArray.java,201," @see org.apache.commons.math.DoubleArray#setElement(int, double)"
True,src/java/org/apache/commons/math/util/FixedDoubleArray.java,src/java/org/apache/commons/math/util/FixedDoubleArray.java,201,"* @see org.apache.commons.math.util.DoubleArray#setElement(int, double)"
False,src/java/org/apache/commons/math/util/FixedDoubleArray.java,src/java/org/apache/commons/math/util/FixedDoubleArray.java,218, @see org.apache.commons.math.DoubleArray#addElement(double)
True,src/java/org/apache/commons/math/util/FixedDoubleArray.java,src/java/org/apache/commons/math/util/FixedDoubleArray.java,218,* @see org.apache.commons.math.util.DoubleArray#addElement(double)
False,src/java/org/apache/commons/math/util/FixedDoubleArray.java,src/java/org/apache/commons/math/util/FixedDoubleArray.java,308, @see org.apache.commons.math.DoubleArray#getElements()
True,src/java/org/apache/commons/math/util/FixedDoubleArray.java,src/java/org/apache/commons/math/util/FixedDoubleArray.java,308,* @see org.apache.commons.math.util.DoubleArray#getElements()
False,src/java/org/apache/commons/math/util/FixedDoubleArray.java,src/java/org/apache/commons/math/util/FixedDoubleArray.java,339, @see org.apache.commons.math.DoubleArray#clear()
True,src/java/org/apache/commons/math/util/FixedDoubleArray.java,src/java/org/apache/commons/math/util/FixedDoubleArray.java,339,* @see org.apache.commons.math.util.DoubleArray#clear()
False,src/test/org/apache/commons/math/random/RandomDataTest.java,src/test/org/apache/commons/math/random/RandomDataTest.java,17,    distribution.
True,src/test/org/apache/commons/math/random/RandomDataTest.java,src/test/org/apache/commons/math/random/RandomDataTest.java,17,*    distribution.
False,src/test/org/apache/commons/math/random/RandomDataTest.java,src/test/org/apache/commons/math/random/RandomDataTest.java,71, @version $Revision: 1.2 $ $Date: 2003/07/07 23:19:21 $
True,src/test/org/apache/commons/math/random/RandomDataTest.java,src/test/org/apache/commons/math/random/RandomDataTest.java,71,* @version $Revision: 1.3 $ $Date: 2003/09/26 19:30:33 $
