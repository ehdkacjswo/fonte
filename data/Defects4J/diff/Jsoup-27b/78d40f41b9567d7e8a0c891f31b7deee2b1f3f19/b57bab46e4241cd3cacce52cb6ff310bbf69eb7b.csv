is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/jsoup/helper/DataUtil.java,src/main/java/org/jsoup/helper/DataUtil.java,59,"Validate.notEmpty(charsetName, ""Must set charset arg to character set of file to parse. Set to null to attempt to detect from HTML"");"
False,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,127,opStackToClose(tag);
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,127,if (!last().tag().isIgnorableEndTag(tag)) // skips </tr> if in <table>
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,128,popStackToClose(tag);
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,31,private List<Tag> ignoreEndTags = Collections.emptyList(); // ignore these end tags
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,200,boolean isIgnorableEndTag(Tag child) {
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,201,for (Tag endTag : ignoreEndTags) {
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,202,if (child.equals(endTag))
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,203,return true;
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,205,return false;
False,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,358,"reateBlock(""TABLE""); // specific list of only includes (tr, td, thead etc) not implemented"
False,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,359,"reateBlock(""CAPTION"").setParent(""TABLE"").setExcludes(""THEAD"", ""TFOOT"", ""TBODY"", ""COLGROUP"", ""COL"", ""TR"", ""TH"", ""TD"").setOptionalClosing();"
False,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,360,"reateBlock(""THEAD"").setParent(""TABLE"").setLimitChildren().setOptionalClosing(); // just TR"
False,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,361,"reateBlock(""TFOOT"").setParent(""TABLE"").setLimitChildren().setOptionalClosing(); // just TR"
False,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,362,"reateBlock(""TBODY"").setParent(""TABLE"").setLimitChildren().setOptionalClosing(); // optional / implicit open too. just TR"
False,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,363,"reateBlock(""COLGROUP"").setParent(""TABLE"").setLimitChildren().setOptionalClosing(); // just COL"
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,367,"createBlock(""TABLE"").setOptionalClosing().setIgnoreEnd(""BODY"", ""CAPTION"", ""COL"", ""COLGROUP"", ""HTML"", ""TBODY"", ""TD"", ""TFOO"", ""TH"", ""THEAD"", ""TR""); // specific list of only includes (tr, td, thead etc) not implemented"
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,368,"createBlock(""CAPTION"").setParent(""TABLE"").setExcludes(""THEAD"", ""TFOOT"", ""TBODY"", ""COLGROUP"", ""COL"", ""TR"", ""TH"", ""TD"").setOptionalClosing().setIgnoreEnd(""BODY"", ""COL"", ""COLGROUP"", ""HTML"", ""TBODY"", ""TD"", ""TFOOT"", ""TH"", ""THEAD"", ""TR"");"
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,369,"createBlock(""THEAD"").setParent(""TABLE"").setLimitChildren().setOptionalClosing().setIgnoreEnd(""BODY"", ""CAPTION"", ""COL"", ""COLGROUP"", ""HTML"", ""TD"", ""TH"", ""TR""); // just TR"
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,370,"createBlock(""TFOOT"").setParent(""TABLE"").setLimitChildren().setOptionalClosing().setIgnoreEnd(""BODY"", ""CAPTION"", ""COL"", ""COLGROUP"", ""HTML"", ""TD"", ""TH"", ""TR""); // just TR"
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,371,"createBlock(""TBODY"").setParent(""TABLE"").setLimitChildren().setOptionalClosing().setIgnoreEnd(""BODY"", ""CAPTION"", ""COL"", ""COLGROUP"", ""HTML"", ""TD"", ""TH"", ""TR""); // optional / implicit open too. just TR"
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,372,"createBlock(""COLGROUP"").setParent(""TABLE"").setLimitChildren().setOptionalClosing().setIgnoreEnd(""COL""); // just COL"
False,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,365,"reateBlock(""TR"").setParent(""TBODY"", ""THEAD"", ""TFOOT"", ""TABLE"").setLimitChildren().setOptionalClosing(); // just TH, TD"
False,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,366,"reateBlock(""TH"").setParent(""TR"").setExcludes(""THEAD"", ""TFOOT"", ""TBODY"", ""COLGROUP"", ""COL"", ""TR"", ""TH"", ""TD"").setOptionalClosing();"
False,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,367,"reateBlock(""TD"").setParent(""TR"").setExcludes(""THEAD"", ""TFOOT"", ""TBODY"", ""COLGROUP"", ""COL"", ""TR"", ""TH"", ""TD"").setOptionalClosing();"
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,374,"createBlock(""TR"").setParent(""TBODY"", ""THEAD"", ""TFOOT"", ""TABLE"").setLimitChildren().setOptionalClosing().setIgnoreEnd(""BODY"", ""CAPTION"", ""COL"", ""COLGROUP"", ""HTML"", ""TD"", ""TH""); // just TH, TD"
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,375,"createBlock(""TH"").setParent(""TR"").setExcludes(""THEAD"", ""TFOOT"", ""TBODY"", ""COLGROUP"", ""COL"", ""TR"", ""TH"", ""TD"").setOptionalClosing().setIgnoreEnd(""BODY"", ""CAPTION"", ""COL"", ""COLGROUP"", ""HTML"");"
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,376,"createBlock(""TD"").setParent(""TR"").setExcludes(""THEAD"", ""TFOOT"", ""TBODY"", ""COLGROUP"", ""COL"", ""TR"", ""TH"", ""TD"").setOptionalClosing().setIgnoreEnd(""BODY"", ""CAPTION"", ""COL"", ""COLGROUP"", ""HTML"");"
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,467,private Tag setIgnoreEnd(String... tagNames) {
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,468,if (tagNames == null || tagNames.length == 0) {
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,469,ignoreEndTags = Collections.emptyList();
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,470,} else {
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,471,ignoreEndTags = new ArrayList<Tag>(tagNames.length);
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,472,for (String name : tagNames) {
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,473,ignoreEndTags.add(Tag.valueOf(name));
True,src/main/java/org/jsoup/parser/Tag.java,src/main/java/org/jsoup/parser/Tag.java,476,return this;
False,src/test/java/org/jsoup/parser/ParserTest.java,src/test/java/org/jsoup/parser/ParserTest.java,204,Test public void handlesNestedImplicitTable() {
True,src/test/java/org/jsoup/parser/ParserTest.java,src/test/java/org/jsoup/parser/ParserTest.java,204,@Test public void handlesNestedImplicitTable() {
True,src/test/java/org/jsoup/parser/ParserTest.java,src/test/java/org/jsoup/parser/ParserTest.java,225,@Test public void noTableDirectInTable() {
True,src/test/java/org/jsoup/parser/ParserTest.java,src/test/java/org/jsoup/parser/ParserTest.java,226,"Document doc = Jsoup.parse(""<table> <td>One <td><table><td>Two</table> <table><td>Three"");"
True,src/test/java/org/jsoup/parser/ParserTest.java,src/test/java/org/jsoup/parser/ParserTest.java,227,"assertEquals(""<table> <tr><td>One </td><td><table><tr><td>Two</td></tr></table> <table><tr><td>Three</td></tr></table></td></tr></table>"","
True,src/test/java/org/jsoup/parser/ParserTest.java,src/test/java/org/jsoup/parser/ParserTest.java,228,TextUtil.stripNewlines(doc.body().html()));
True,src/test/java/org/jsoup/parser/ParserTest.java,src/test/java/org/jsoup/parser/ParserTest.java,231,@Test public void ignoresDupeEndTrTag() {
True,src/test/java/org/jsoup/parser/ParserTest.java,src/test/java/org/jsoup/parser/ParserTest.java,232,"Document doc = Jsoup.parse(""<table><tr><td>One</td><td><table><tr><td>Two</td></tr></tr></table></td><td>Three</td></tr></table>""); // two </tr></tr>, must ignore or will close table"
True,src/test/java/org/jsoup/parser/ParserTest.java,src/test/java/org/jsoup/parser/ParserTest.java,233,"assertEquals(""<table><tr><td>One</td><td><table><tr><td>Two</td></tr></table></td><td>Three</td></tr></table>"","
True,src/test/java/org/jsoup/parser/ParserTest.java,src/test/java/org/jsoup/parser/ParserTest.java,234,TextUtil.stripNewlines(doc.body().html()));
