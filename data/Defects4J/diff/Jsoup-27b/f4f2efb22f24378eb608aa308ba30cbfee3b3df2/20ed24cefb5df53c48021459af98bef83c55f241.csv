is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,16,"ase, extended"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,16,"minimum(minimumByVal), base(baseByVal), extended(fullByVal);"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,18,"private Map<Character, String> map;"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,20,"EscapeMode(Map<Character, String> map) {"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,21,this.map = map;
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,24,"public Map<Character, String> getMap() {"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,25,return map;
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,30,"private static final Map<Character, String> minimumByVal;"
False,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,30,"ap<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,41,"Map<Character, String> map = escapeMode.getMap();"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,90,private static final Object[][] minimumArray = {
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,91,"{""quot"", 0x00022},"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,92,"{""amp"", 0x00026},"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,93,"{""apos"", 0x00027},"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,94,"{""lt"", 0x0003C},"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,95,"{""gt"", 0x0003E}"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,2248,"minimumByVal = new HashMap<Character, String>(minimumArray.length);"
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,2252,for (Object[] entity : minimumArray) {
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,2253,Character c = Character.valueOf((char) ((Integer) entity[1]).intValue());
True,src/main/java/org/jsoup/nodes/Entities.java,src/main/java/org/jsoup/nodes/Entities.java,2254,"minimumByVal.put(c, ((String) entity[0]));"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,50,@Test public void testReferences() {
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,51,"Document doc = Jsoup.parse(""&lt; &gt; &amp; &quot; &apos; &times;"");"
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,52,doc.outputSettings().escapeMode(Entities.EscapeMode.minimum);
True,src/test/java/org/jsoup/nodes/DocumentTest.java,src/test/java/org/jsoup/nodes/DocumentTest.java,53,"assertEquals(""&lt; &gt; &amp; &quot; &apos; Ã—"", doc.body().html());"
