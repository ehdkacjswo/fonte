is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,217,f (tq.peek().equals('<')) {
True,src/main/java/org/jsoup/parser/Parser.java,src/main/java/org/jsoup/parser/Parser.java,217,if (tq.peek() =='<') {
False,src/main/java/org/jsoup/parser/TokenQueue.java,src/main/java/org/jsoup/parser/TokenQueue.java,39," @return First character, or null if empty."
True,src/main/java/org/jsoup/parser/TokenQueue.java,src/main/java/org/jsoup/parser/TokenQueue.java,39,"* @return First character, or 0 if empty."
False,src/main/java/org/jsoup/parser/TokenQueue.java,src/main/java/org/jsoup/parser/TokenQueue.java,41,ublic Character peek() {
False,src/main/java/org/jsoup/parser/TokenQueue.java,src/main/java/org/jsoup/parser/TokenQueue.java,42,eturn isEmpty() ? null : queue.charAt(pos);
True,src/main/java/org/jsoup/parser/TokenQueue.java,src/main/java/org/jsoup/parser/TokenQueue.java,41,public char peek() {
True,src/main/java/org/jsoup/parser/TokenQueue.java,src/main/java/org/jsoup/parser/TokenQueue.java,42,return isEmpty() ? 0 : queue.charAt(pos);
False,src/main/java/org/jsoup/parser/TokenQueue.java,src/main/java/org/jsoup/parser/TokenQueue.java,161,ublic Character consume() {
False,src/main/java/org/jsoup/parser/TokenQueue.java,src/main/java/org/jsoup/parser/TokenQueue.java,162,haracter c = queue.charAt(pos);
True,src/main/java/org/jsoup/parser/TokenQueue.java,src/main/java/org/jsoup/parser/TokenQueue.java,161,public char consume() {
True,src/main/java/org/jsoup/parser/TokenQueue.java,src/main/java/org/jsoup/parser/TokenQueue.java,162,char c = queue.charAt(pos);
False,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,109,ombinator(tq.consume().toString());
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,109,combinator(tq.consume());
False,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,126,ombinator(tq.consume().toString());
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,126,combinator(tq.consume());
False,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,128,"ombinator("" "");"
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,128,combinator(' ');
False,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,137,rivate void combinator(String combinator) {
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,137,private void combinator(char combinator) {
False,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,142,"f (combinator.equals("">""))"
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,142,if (combinator == '>')
False,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,144,"lse if (combinator.equals("" ""))"
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,144,else if (combinator == ' ')
False,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,146,"lse if (combinator.equals(""+""))"
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,146,else if (combinator == '+')
False,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,148,"lse if (combinator.equals(""~""))"
True,src/main/java/org/jsoup/select/Selector.java,src/main/java/org/jsoup/select/Selector.java,148,else if (combinator == '~')
