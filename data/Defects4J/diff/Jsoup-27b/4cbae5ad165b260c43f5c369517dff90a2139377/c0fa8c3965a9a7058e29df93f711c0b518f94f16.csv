is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,41,public Attributes getAttributes() {
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,42,return attributes;
True,src/main/java/org/jsoup/nodes/Node.java,src/main/java/org/jsoup/nodes/Node.java,43,// TODO: probably not have this accessor
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,17,"rivate static final char LT = ""<"".charAt(0);"
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,18,"rivate static final char GT = "">"".charAt(0);"
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,19,"rivate static final char NL = ""\n"".charAt(0);"
True,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,17,private static final char LT = '<';
True,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,18,private static final char GT = '>';
True,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,19,private static final char NL = '\n';
True,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,20,private static final char SQ = '\'';
True,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,21,"private static final char DQ = '""';"
True,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,94,boolean inTag = false;
True,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,95,boolean inQuotedAttribute = false;
True,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,96,Character quote = null;
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,96,f (c == LT && accum.length() > 0) {
True,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,102,if (c == LT && accum.length() > 0 && !inQuotedAttribute) {
True,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,103,// detected start of new tag:
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,99,eturn captureAccum();
True,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,106,break;
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,105,f (c == GT) {
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,106,eturn captureAccum();
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,107, else if (c == NL) {
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,108,os.incLineNum();
True,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,112,if (!inQuotedAttribute) {
True,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,113,if (c == LT) {
True,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,114,inTag = true;
True,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,116,"else if (c == GT) { // >, end of tag"
True,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,117,break;
True,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,118,} else if (c == NL) {
True,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,119,pos.incLineNum();
True,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,120,} else if (inTag && (c == SQ || c == DQ)) {
True,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,121,inQuotedAttribute = true;
True,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,122,quote = c;
True,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,124,} else if (inQuotedAttribute && c == quote) {
True,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,125,"// close quote. note that if there is no closing quote, this will gobble up a lot. might be an idea"
True,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,126,"// to forward search and backtrack (to drop opening quote) if not found in x chars, (or y <|>)"
True,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,127,"// (the quoted attrib allows <p title=""x > y"">Hello</p>. Issue here is with <p title=""x > y>Hello</p>"
True,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,128,inQuotedAttribute = false;
True,src/test/java/org/jsoup/parser/ParserTest.java,src/test/java/org/jsoup/parser/ParserTest.java,4,import org.jsoup.nodes.Element;
True,src/test/java/org/jsoup/parser/ParserTest.java,src/test/java/org/jsoup/parser/ParserTest.java,19,// need a better way to verify these:
True,src/test/java/org/jsoup/parser/ParserTest.java,src/test/java/org/jsoup/parser/ParserTest.java,20,Element p = doc.getChildren().get(1).getChildren().get(0);
True,src/test/java/org/jsoup/parser/ParserTest.java,src/test/java/org/jsoup/parser/ParserTest.java,21,"assertEquals(""p"", p.getTagName());"
True,src/test/java/org/jsoup/parser/ParserTest.java,src/test/java/org/jsoup/parser/ParserTest.java,22,"assertEquals(""foo.png"", p.getChildren().get(0).getAttributes().get(""src""));"
True,src/test/java/org/jsoup/parser/ParserTest.java,src/test/java/org/jsoup/parser/ParserTest.java,25,@Test public void testParsesRoughAttributes() {
True,src/test/java/org/jsoup/parser/ParserTest.java,src/test/java/org/jsoup/parser/ParserTest.java,26,"TokenStream tokenStream = TokenStream.create(""<html><head><title>First!</title></head><body><p class=\""foo > bar\"">First post! <img src=\""foo.png\"" /></p></body></html>"");"
True,src/test/java/org/jsoup/parser/ParserTest.java,src/test/java/org/jsoup/parser/ParserTest.java,27,Parser parser = new Parser(tokenStream);
True,src/test/java/org/jsoup/parser/ParserTest.java,src/test/java/org/jsoup/parser/ParserTest.java,28,Document doc = parser.parse();
True,src/test/java/org/jsoup/parser/ParserTest.java,src/test/java/org/jsoup/parser/ParserTest.java,29,// need a better way to verify these:
True,src/test/java/org/jsoup/parser/ParserTest.java,src/test/java/org/jsoup/parser/ParserTest.java,30,Element p = doc.getChildren().get(1).getChildren().get(0);
True,src/test/java/org/jsoup/parser/ParserTest.java,src/test/java/org/jsoup/parser/ParserTest.java,31,"assertEquals(""p"", p.getTagName());"
True,src/test/java/org/jsoup/parser/ParserTest.java,src/test/java/org/jsoup/parser/ParserTest.java,32,"assertEquals(""foo > bar"", p.getAttributes().get(""class""));"
True,src/test/java/org/jsoup/parser/ParserTest.java,src/test/java/org/jsoup/parser/ParserTest.java,33,"assertEquals(""foo.png"", p.getChildren().get(0).getAttributes().get(""src""));"
False,src/test/java/org/jsoup/parser/TokenStreamTest.java,src/test/java/org/jsoup/parser/TokenStreamTest.java,16,"ist<Token> tokens = TokenStream.create(""<html><body><p>Hello world!</p></body></html>"").asList();"
True,src/test/java/org/jsoup/parser/TokenStreamTest.java,src/test/java/org/jsoup/parser/TokenStreamTest.java,16,"List<Token> tokens = TokenStream.create(""<html><body title='x > y'><p>Hello world!</p></body></html>"").asList();"
