is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/jsoup/select/CombiningEvaluator.java,src/main/java/org/jsoup/select/CombiningEvaluator.java,64,Or() {
True,src/main/java/org/jsoup/select/CombiningEvaluator.java,src/main/java/org/jsoup/select/CombiningEvaluator.java,65,super();
False,src/main/java/org/jsoup/select/QueryParser.java,src/main/java/org/jsoup/select/QueryParser.java,58,"f (tq.matchChomp("","")) { // group or"
False,src/main/java/org/jsoup/select/QueryParser.java,src/main/java/org/jsoup/select/QueryParser.java,59,ombiningEvaluator.Or or = new CombiningEvaluator.Or(evals);
False,src/main/java/org/jsoup/select/QueryParser.java,src/main/java/org/jsoup/select/QueryParser.java,60,vals.clear();
False,src/main/java/org/jsoup/select/QueryParser.java,src/main/java/org/jsoup/select/QueryParser.java,61,vals.add(or);
False,src/main/java/org/jsoup/select/QueryParser.java,src/main/java/org/jsoup/select/QueryParser.java,62,hile (!tq.isEmpty()) {
False,src/main/java/org/jsoup/select/QueryParser.java,src/main/java/org/jsoup/select/QueryParser.java,63,"tring subQuery = tq.chompTo("","");"
False,src/main/java/org/jsoup/select/QueryParser.java,src/main/java/org/jsoup/select/QueryParser.java,64,r.add(parse(subQuery));
False,src/main/java/org/jsoup/select/QueryParser.java,src/main/java/org/jsoup/select/QueryParser.java,66, else if (tq.matchesAny(combinators)) {
True,src/main/java/org/jsoup/select/QueryParser.java,src/main/java/org/jsoup/select/QueryParser.java,58,if (tq.matchesAny(combinators)) {
True,src/main/java/org/jsoup/select/QueryParser.java,src/main/java/org/jsoup/select/QueryParser.java,93,"else if (combinator == ',') { // group or"
True,src/main/java/org/jsoup/select/QueryParser.java,src/main/java/org/jsoup/select/QueryParser.java,94,CombiningEvaluator.Or or;
True,src/main/java/org/jsoup/select/QueryParser.java,src/main/java/org/jsoup/select/QueryParser.java,95,if (e instanceof CombiningEvaluator.Or) {
True,src/main/java/org/jsoup/select/QueryParser.java,src/main/java/org/jsoup/select/QueryParser.java,96,or = (CombiningEvaluator.Or) e;
True,src/main/java/org/jsoup/select/QueryParser.java,src/main/java/org/jsoup/select/QueryParser.java,97,or.add(f);
True,src/main/java/org/jsoup/select/QueryParser.java,src/main/java/org/jsoup/select/QueryParser.java,98,} else {
True,src/main/java/org/jsoup/select/QueryParser.java,src/main/java/org/jsoup/select/QueryParser.java,99,or = new CombiningEvaluator.Or();
True,src/main/java/org/jsoup/select/QueryParser.java,src/main/java/org/jsoup/select/QueryParser.java,100,or.add(e);
True,src/main/java/org/jsoup/select/QueryParser.java,src/main/java/org/jsoup/select/QueryParser.java,101,or.add(f);
True,src/main/java/org/jsoup/select/QueryParser.java,src/main/java/org/jsoup/select/QueryParser.java,103,evals.add(or);
False,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,329,"ssertEquals(3, els.size());"
False,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,330,"ssertEquals(""ol"", els.get(0).tagName());"
False,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,331,"ssertEquals(""Two"", els.get(1).text());"
False,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,332,"ssertEquals(""Three"", els.get(2).text());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,329,"assertEquals(2, els.size());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,330,"assertEquals(""li"", els.get(0).tagName());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,331,"assertEquals(""Three"", els.get(1).text());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,588,@Test public void handlesCommasInSelector() {
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,589,"Document doc = Jsoup.parse(""<p name='1,2'>One</p><div>Two</div><ol><li>123</li><li>Text</li></ol>"");"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,591,"Elements ps = doc.select(""[name=1,2]"");"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,592,"assertEquals(1, ps.size());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,594,"Elements containers = doc.select(""div, li:matches([0-9,]+)"");"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,595,"assertEquals(2, containers.size());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,596,"assertEquals(""div"", containers.get(0).tagName());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,597,"assertEquals(""li"", containers.get(1).tagName());"
True,src/test/java/org/jsoup/select/SelectorTest.java,src/test/java/org/jsoup/select/SelectorTest.java,598,"assertEquals(""123"", containers.get(1).text());"
