is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,9,import org.jsoup.Jsoup;
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,12,import org.jsoup.nodes.Document;
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,13,import org.jsoup.nodes.Element;
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,19,import org.jsoup.select.ng.HasSelector;
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,20,import org.jsoup.select.ng.ImmediateParentSelector;
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,21,import org.jsoup.select.ng.NotSelector;
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,22,import org.jsoup.select.ng.OrSelector;
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,24,import org.jsoup.select.ng.PrevSiblingSelector;
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,25,import org.jsoup.select.ng.PreviousSequentSiblingSelector;
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,26,import org.jsoup.select.ng.SelectMatch;
False,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,31,ublic static Evaluator select(String query) {
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,41,public static Evaluator parse(String query) {
False,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,33,eturn p.select();
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,43,return p.parse();
False,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,36,ublic Evaluator select() {
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,46,public Evaluator parse() {
False,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,41,ombinator(tq.consume().toString());
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,51,combinator(tq.consume());
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,64,OrSelector or = new OrSelector(s);
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,65,s.clear();
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,66,s.push(or);
False,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,60,"/elements.addAll(select(subQuery, root));"
False,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,61,/select(subQuery);
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,69,or.add(parse(subQuery));
False,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,64,ombinator(tq.consume().toString());
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,72,combinator(tq.consume());
False,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,66,"ombinator("" "");"
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,74,combinator(' ');
False,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,78,rivate void combinator(String combinator) {
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,86,private void combinator(char combinator) {
False,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,84,"f (combinator.equals("">"")) {"
False,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,85,"/output = filterForChildren(elements, select(subQuery, elements));"
False,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,86," else if (combinator.equals("" "")) {"
False,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,87,ndSelector a = new AndSelector();
False,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,88,.add(select(subQuery));
False,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,89,.add(new ParentSelector(new AndSelector(s)));
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,91,Evaluator e = null;
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,93,if(s.size() == 1)
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,94,e = s.pop();
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,95,else {
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,96,e = new AndSelector(s);
False,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,91,.push(a);
False,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,94,"/output = filterForDescendants(elements, select(subQuery, elements));"
False,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,95," else if (combinator.equals(""+"")) {"
False,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,96,"/output = filterForAdjacentSiblings(elements, select(subQuery, root));"
False,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,97," else if (combinator.equals(""~"")) {"
False,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,98,"/output = filterForGeneralSiblings(elements, select(subQuery, root));"
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,99,Evaluator f = parse(subQuery);
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,102,if (combinator == '>') {
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,103,"s.push(BasicSelector.and(f, new ImmediateParentSelector(e)));"
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,104,} else if (combinator == ' ') {
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,105,"s.push(BasicSelector.and(f, new ParentSelector(e)));"
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,106,} else if (combinator == '+') {
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,107,"s.push(BasicSelector.and(f, new PrevSiblingSelector(e)));"
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,108,} else if (combinator == '~') {
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,109,"s.push(BasicSelector.and(f, new PreviousSequentSiblingSelector(e)));"
False,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,175,tring value = cq.remainder();
False,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,177,"cPush(new Evaluator.AttributeWithValue(key, value));"
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,187,"ecPush(new Evaluator.AttributeWithValue(key, cq.remainder()));"
False,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,180,"cPush(new Evaluator.AttributeWithValueNot(key, value));"
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,190,"ecPush(new Evaluator.AttributeWithValueNot(key, cq.remainder()));"
False,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,183,"cPush(new Evaluator.AttributeWithValueStarting(key, value));"
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,193,"ecPush(new Evaluator.AttributeWithValueStarting(key, cq.remainder()));"
False,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,186,"cPush(new Evaluator.AttributeWithValueEnding(key, value));"
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,196,"ecPush(new Evaluator.AttributeWithValueEnding(key, cq.remainder()));"
False,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,189,"cPush(new Evaluator.AttributeWithValueContaining(key, value));"
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,199,"ecPush(new Evaluator.AttributeWithValueContaining(key, cq.remainder()));"
False,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,192,"cPush(new Evaluator.AttributeWithValueMatching(key, Pattern.compile(value)));"
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,202,"ecPush(new Evaluator.AttributeWithValueMatching(key, Pattern.compile(cq.remainder())));"
False,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,229,/ TODO: add has parsing
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,238,s.push(new HasSelector(parse(subQuery)));
False,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,238,/ TODO: add :contains parsing
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,249,if(own)
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,250,s.push(new Evaluator.ContainsOwnText(searchText));
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,251,else
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,252,s.push(new Evaluator.ContainsText(searchText));
False,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,247,/ TODO: add :matches parsing
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,261,if(own)
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,262,s.push(new Evaluator.MatchesOwn(Pattern.compile(regex)));
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,263,else
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,264,s.push(new Evaluator.Matches(Pattern.compile(regex)));
False,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,257,/ TODO: add :not parsing
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,275,s.push(new NotSelector(parse(subQuery)));
False,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,268,valuator p = s.peek();
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,286,/*Evaluator p = s.peek();
False,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,275,lementContainerSelector ec = (ElementContainerSelector) p;
False,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,276,c.add(e);
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,293,ElementContainerSelector ec = (ElementContainerSelector) p;*/
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,294,//ec.add(e);
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,295,s.push(e);
False,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,281,"valuator e = select(""div p href"");"
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,300,// make sure doesn't get nested
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,301,"Document doc = Jsoup.parse(""<div id=1><div id=2><div id=3></div></div></div>"");"
True,src/main/java/org/jsoup/select/ng/parser/Parser.java,src/main/java/org/jsoup/select/ng/parser/Parser.java,302,"Element div = SelectMatch.match(SelectMatch.match(doc, Parser.parse(""div"")), Parser.parse("" > div"")).first();"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,1,package org.jsoup.select;
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,3,import org.jsoup.Jsoup;
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,4,import org.jsoup.nodes.Document;
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,5,import org.jsoup.nodes.Element;
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,6,import org.jsoup.select.ng.SelectMatch;
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,7,import org.jsoup.select.ng.parser.Parser;
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,8,import org.junit.Test;
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,10,import junit.framework.TestCase;
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,12,public class ParserSelectorNG extends TestCase {
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,13,@Test
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,14,public void testByTag() {
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,15,"Elements els = SelectMatch.match(Jsoup.parse(""<div id=1><div id=2><p>Hello</p></div></div><div id=3>""), Parser.parse(""div""));"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,16,"assertEquals(3, els.size());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,17,"assertEquals(""1"", els.get(0).id());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,18,"assertEquals(""2"", els.get(1).id());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,19,"assertEquals(""3"", els.get(2).id());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,21,"Elements none = SelectMatch.match(Jsoup.parse(""<div id=1><div id=2><p>Hello</p></div></div><div id=3>""), Parser.parse(""span""));"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,22,"assertEquals(0, none.size());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,25,@Test
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,26,public void testById() {
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,27,"Elements els = SelectMatch.match(Jsoup.parse(""<div><p id=foo>Hello</p><p id=foo>Foo two!</p></div>""), Parser.parse(""#foo""));"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,28,"assertEquals(2, els.size());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,29,"assertEquals(""Hello"", els.get(0).text());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,31,"Elements none = SelectMatch.match(Jsoup.parse(""<div id=1></div>""), Parser.parse(""#foo""));"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,32,"assertEquals(0, none.size());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,35,@Test
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,36,public void testByClass() {
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,37,"Elements els = SelectMatch.match(Jsoup.parse(""<p id=0 class='one two'><p id=1 class='one'><p id=2 class='two'>""), Parser.parse(""p.one""));"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,38,"assertEquals(2, els.size());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,39,"assertEquals(""0"", els.get(0).id());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,40,"assertEquals(""1"", els.get(1).id());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,42,"Elements none = SelectMatch.match(Jsoup.parse(""<div class='one'></div>""), Parser.parse("".foo""));"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,43,"assertEquals(0, none.size());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,45,"Elements els2 = SelectMatch.match(Jsoup.parse(""<div class='one-two'></div>""), Parser.parse("".one-two""));"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,46,"assertEquals(1, els2.size());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,49,@Test
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,50,public void testByAttribute() {
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,51,"String h = ""<div Title=Foo /><div Title=Bar /><div Style=Qux /><div title=Bam /><div title=SLAM /><div />"";"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,52,Document doc = Jsoup.parse(h);
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,54,"Elements withTitle = SelectMatch.match(doc, Parser.parse(""[title]""));"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,55,"assertEquals(4, withTitle.size());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,57,"Elements foo = SelectMatch.match(doc, Parser.parse(""[title=foo]""));"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,58,"assertEquals(1, foo.size());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,60,"Elements not = SelectMatch.match(doc, Parser.parse(""div[title!=bar]""));"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,61,"assertEquals(5, not.size());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,62,"assertEquals(""Foo"", not.first().attr(""title""));"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,64,"Elements starts = SelectMatch.match(doc, Parser.parse(""[title^=ba]""));"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,65,"assertEquals(2, starts.size());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,66,"assertEquals(""Bar"", starts.first().attr(""title""));"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,67,"assertEquals(""Bam"", starts.last().attr(""title""));"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,69,"Elements ends = SelectMatch.match(doc, Parser.parse(""[title$=am]""));"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,70,"assertEquals(2, ends.size());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,71,"assertEquals(""Bam"", ends.first().attr(""title""));"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,72,"assertEquals(""SLAM"", ends.last().attr(""title""));"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,74,"Elements contains = SelectMatch.match(doc, Parser.parse(""[title*=a]""));"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,75,"assertEquals(3, contains.size());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,76,"assertEquals(""Bar"", contains.first().attr(""title""));"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,77,"assertEquals(""SLAM"", contains.last().attr(""title""));"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,80,@Test
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,81,public void testNamespacedTag() {
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,82,"Document doc = Jsoup.parse(""<div><abc:def id=1>Hello</abc:def></div> <abc:def class=bold id=2>There</abc:def>"");"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,83,"Elements byTag = SelectMatch.match(doc, Parser.parse(""abc|def""));"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,84,"assertEquals(2, byTag.size());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,85,"assertEquals(""1"", byTag.first().id());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,86,"assertEquals(""2"", byTag.last().id());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,88,"Elements byAttr = SelectMatch.match(doc, Parser.parse("".bold""));"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,89,"assertEquals(1, byAttr.size());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,90,"assertEquals(""2"", byAttr.last().id());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,92,"Elements byTagAttr = SelectMatch.match(doc, Parser.parse(""abc|def.bold""));"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,93,"assertEquals(1, byTagAttr.size());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,94,"assertEquals(""2"", byTagAttr.last().id());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,96,"Elements byContains = SelectMatch.match(doc, Parser.parse(""abc|def:contains(e)""));"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,97,"assertEquals(2, byContains.size());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,98,"assertEquals(""1"", byContains.first().id());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,99,"assertEquals(""2"", byContains.last().id());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,102,@Test
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,103,public void testByAttributeStarting() {
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,104,"Document doc = Jsoup.parse(""<div id=1 data-name=jsoup>Hello</div><p data-val=5 id=2>There</p><p id=3>No</p>"");"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,105,"Elements withData = SelectMatch.match(doc, Parser.parse(""[^data-]""));"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,106,"assertEquals(2, withData.size());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,107,"assertEquals(""1"", withData.first().id());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,108,"assertEquals(""2"", withData.last().id());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,110,"withData = SelectMatch.match(doc, Parser.parse(""p[^data-]""));"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,111,"assertEquals(1, withData.size());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,112,"assertEquals(""2"", withData.first().id());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,115,@Test
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,116,public void testByAttributeRegex() {
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,117,"Document doc = Jsoup.parse(""<p><img src=foo.png id=1><img src=bar.jpg id=2><img src=qux.JPEG id=3><img src=old.gif><img></p>"");"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,118,"Elements imgs = SelectMatch.match(doc, Parser.parse(""img[src~=(?i)\\.(png|jpe?g)]""));"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,119,"assertEquals(3, imgs.size());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,120,"assertEquals(""1"", imgs.get(0).id());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,121,"assertEquals(""2"", imgs.get(1).id());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,122,"assertEquals(""3"", imgs.get(2).id());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,125,@Test
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,126,public void testByAttributeRegexCharacterClass() {
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,127,"Document doc = Jsoup.parse(""<p><img src=foo.png id=1><img src=bar.jpg id=2><img src=qux.JPEG id=3><img src=old.gif id=4></p>"");"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,128,"Elements imgs = SelectMatch.match(doc, Parser.parse(""img[src~=[o]]""));"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,129,"assertEquals(2, imgs.size());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,130,"assertEquals(""1"", imgs.get(0).id());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,131,"assertEquals(""4"", imgs.get(1).id());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,134,@Test
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,135,public void testAllElements() {
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,136,"String h = ""<div><p>Hello</p><p><b>there</b></p></div>"";"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,137,Document doc = Jsoup.parse(h);
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,138,"Elements allDoc = SelectMatch.match(doc, Parser.parse(""*""));"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,139,"Elements allUnderDiv = SelectMatch.match(doc, Parser.parse(""div *""));"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,140,"assertEquals(8, allDoc.size());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,141,"assertEquals(3, allUnderDiv.size());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,142,"assertEquals(""p"", allUnderDiv.first().tagName());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,145,@Test
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,146,public void testAllWithClass() {
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,147,"String h = ""<p class=first>One<p class=first>Two<p>Three"";"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,148,Document doc = Jsoup.parse(h);
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,149,"Elements ps = SelectMatch.match(doc, Parser.parse(""*.first""));"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,150,"assertEquals(2, ps.size());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,153,@Test
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,154,public void testGroupOr() {
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,155,"String h = ""<div title=foo /><div title=bar /><div /><p></p><img /><span title=qux>"";"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,156,Document doc = Jsoup.parse(h);
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,157,"Elements els = SelectMatch.match(doc, Parser.parse(""p,div,[title]""));"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,159,"assertEquals(5, els.size());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,160,"assertEquals(""div"", els.get(0).tagName());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,161,"assertEquals(""foo"", els.get(0).attr(""title""));"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,162,"assertEquals(""div"", els.get(1).tagName());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,163,"assertEquals(""bar"", els.get(1).attr(""title""));"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,164,"assertEquals(""div"", els.get(2).tagName());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,165,"assertTrue(els.get(2).attr(""title"").length() == 0); // missing attributes come back as empty string"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,166,"assertFalse(els.get(2).hasAttr(""title""));"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,167,"assertEquals(""p"", els.get(3).tagName());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,168,"assertEquals(""span"", els.get(4).tagName());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,171,@Test
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,172,public void testGroupOrAttribute() {
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,173,"String h = ""<div id=1 /><div id=2 /><div title=foo /><div title=bar />"";"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,174,"Elements els = SelectMatch.match(Jsoup.parse(h), Parser.parse(""[id],[title=foo]""));"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,176,"assertEquals(3, els.size());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,177,"assertEquals(""1"", els.get(0).id());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,178,"assertEquals(""2"", els.get(1).id());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,179,"assertEquals(""foo"", els.get(2).attr(""title""));"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,182,@Test
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,183,public void testDescendant() {
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,184,"String h = ""<div class=head><p class=first>Hello</p><p>There</p></div><p>None</p>"";"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,185,Document doc = Jsoup.parse(h);
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,186,"Elements els = SelectMatch.match(doc, Parser.parse("".head p""));"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,187,"assertEquals(2, els.size());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,188,"assertEquals(""Hello"", els.get(0).text());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,189,"assertEquals(""There"", els.get(1).text());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,191,"Elements p = SelectMatch.match(doc, Parser.parse(""p.first""));"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,192,"assertEquals(1, p.size());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,193,"assertEquals(""Hello"", p.get(0).text());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,195,"Elements empty = SelectMatch.match(doc, Parser.parse(""p .first"")); // self, not descend, should not match"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,196,"assertEquals(0, empty.size());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,199,@Test
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,200,public void testAnd() {
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,201,"String h = ""<div id=1 class='foo bar' title=bar name=qux><p class=foo title=bar>Hello</p></div"";"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,202,Document doc = Jsoup.parse(h);
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,204,"Elements div = SelectMatch.match(doc, Parser.parse(""div.foo""));"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,205,"assertEquals(1, div.size());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,206,"assertEquals(""div"", div.first().tagName());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,208,"Elements p = SelectMatch.match(doc, Parser.parse(""div .foo"")); // space indicates like ""div *.foo"""
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,209,"assertEquals(1, p.size());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,210,"assertEquals(""p"", p.first().tagName());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,212,"Elements div2 = SelectMatch.match(doc, Parser.parse(""div#1.foo.bar[title=bar][name=qux]"")); // very specific!"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,213,"assertEquals(1, div2.size());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,214,"assertEquals(""div"", div2.first().tagName());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,216,"Elements p2 = SelectMatch.match(doc, Parser.parse(""div *.foo"")); // space indicates like ""div *.foo"""
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,217,"assertEquals(1, p2.size());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,218,"assertEquals(""p"", p2.first().tagName());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,221,@Test
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,222,public void testDescendant2() {
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,223,"String h = ""<div class=head><p><span class=first>Hello</div><div class=head><p class=first><span>Another</span><p>Again</div>"";"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,224,"Elements els = SelectMatch.match(Jsoup.parse(h), Parser.parse(""div p .first""));"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,225,"assertEquals(1, els.size());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,226,"assertEquals(""Hello"", els.first().text());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,227,"assertEquals(""span"", els.first().tagName());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,230,@Test
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,231,public void testParentChildElement() {
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,232,"String h = ""<div id=1><div id=2><div id = 3></div></div></div><div id=4></div>"";"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,233,Document doc = Jsoup.parse(h);
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,235,"Elements divs = SelectMatch.match(doc, Parser.parse(""div > div""));"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,236,"assertEquals(2, divs.size());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,237,"assertEquals(""2"", divs.get(0).id()); // 2 is child of 1"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,238,"assertEquals(""3"", divs.get(1).id()); // 3 is child of 2"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,240,"Elements div2 = SelectMatch.match(doc, Parser.parse(""div#1 > div""));"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,241,"assertEquals(1, div2.size());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,242,"assertEquals(""2"", div2.get(0).id());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,245,@Test
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,246,public void testParentWithClassChild() {
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,247,"String h = ""<h1 class=foo><a href=1 /></h1><h1 class=foo><a href=2 class=bar /></h1><h1><a href=3 /></h1>"";"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,248,Document doc = Jsoup.parse(h);
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,250,"Elements allAs = SelectMatch.match(doc, Parser.parse(""h1 > a""));"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,251,"assertEquals(3, allAs.size());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,252,"assertEquals(""a"", allAs.first().tagName());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,254,"Elements fooAs = SelectMatch.match(doc, Parser.parse(""h1.foo > a""));"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,255,"assertEquals(2, fooAs.size());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,256,"assertEquals(""a"", fooAs.first().tagName());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,258,"Elements barAs = SelectMatch.match(doc, Parser.parse(""h1.foo > a.bar""));"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,259,"assertEquals(1, barAs.size());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,262,@Test
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,263,public void testParentChildStar() {
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,264,"String h = ""<div id=1><p>Hello<p><b>there</b></p></div><div id=2><span>Hi</span></div>"";"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,265,Document doc = Jsoup.parse(h);
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,266,"Elements divChilds = SelectMatch.match(doc, Parser.parse(""div > *""));"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,267,"assertEquals(3, divChilds.size());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,268,"assertEquals(""p"", divChilds.get(0).tagName());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,269,"assertEquals(""p"", divChilds.get(1).tagName());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,270,"assertEquals(""span"", divChilds.get(2).tagName());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,273,@Test
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,274,public void testMultiChildDescent() {
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,275,"String h = ""<div id=foo><h1 class=bar><a href=http://example.com/>One</a></h1></div>"";"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,276,Document doc = Jsoup.parse(h);
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,277,"Elements els = SelectMatch.match(doc, Parser.parse(""div#foo > h1.bar > a[href*=example]""));"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,278,"assertEquals(1, els.size());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,279,"assertEquals(""a"", els.first().tagName());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,282,/*@Test
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,283,public void testCaseInsensitive() {
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,284,"String h = ""<dIv tItle=bAr><div>""; // mixed case so a simple toLowerCase() on value doesn't catch"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,285,Document doc = Jsoup.parse(h);
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,287,"assertEquals(2, SelectMatch.match(doc, Parser.parse(""DIV"")).size());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,288,"assertEquals(1, SelectMatch.match(doc, Parser.parse(""DIV[TITLE]"")).size());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,289,"assertEquals(1, SelectMatch.match(doc, Parser.parse(""DIV[TITLE=BAR]"")).size());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,290,"assertEquals(0, SelectMatch.match(doc, Parser.parse(""DIV[TITLE=BARBARELLA"")).size());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,293,@Test
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,294,public void testAdjacentSiblings() {
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,295,"String h = ""<ol><li>One<li>Two<li>Three</ol>"";"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,296,Document doc = Jsoup.parse(h);
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,297,"Elements sibs = SelectMatch.match(doc, Parser.parse(""li + li""));"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,298,"assertEquals(2, sibs.size());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,299,"assertEquals(""Two"", sibs.get(0).text());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,300,"assertEquals(""Three"", sibs.get(1).text());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,303,@Test
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,304,public void testAdjacentSiblingsWithId() {
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,305,"String h = ""<ol><li id=1>One<li id=2>Two<li id=3>Three</ol>"";"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,306,Document doc = Jsoup.parse(h);
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,307,"Elements sibs = SelectMatch.match(doc, Parser.parse(""li#1 + li#2""));"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,308,"assertEquals(1, sibs.size());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,309,"assertEquals(""Two"", sibs.get(0).text());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,312,@Test
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,313,public void testNotAdjacent() {
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,314,"String h = ""<ol><li id=1>One<li id=2>Two<li id=3>Three</ol>"";"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,315,Document doc = Jsoup.parse(h);
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,316,"Elements sibs = SelectMatch.match(doc, Parser.parse(""li#1 + li#3""));"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,317,"assertEquals(0, sibs.size());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,320,@Test
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,321,public void testMixCombinator() {
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,322,"String h = ""<div class=foo><ol><li>One<li>Two<li>Three</ol></div>"";"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,323,Document doc = Jsoup.parse(h);
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,324,"Elements sibs = SelectMatch.match(doc, Parser.parse(""body > div.foo li + li""));"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,326,"assertEquals(2, sibs.size());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,327,"assertEquals(""Two"", sibs.get(0).text());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,328,"assertEquals(""Three"", sibs.get(1).text());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,331,@Test
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,332,public void testMixCombinatorGroup() {
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,333,"String h = ""<div class=foo><ol><li>One<li>Two<li>Three</ol></div>"";"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,334,Document doc = Jsoup.parse(h);
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,335,"Elements els = SelectMatch.match(doc, Parser.parse("".foo > ol, ol > li + li""));"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,337,"assertEquals(3, els.size());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,338,"assertEquals(""ol"", els.get(0).tagName());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,339,"assertEquals(""Two"", els.get(1).text());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,340,"assertEquals(""Three"", els.get(2).text());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,343,@Test
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,344,public void testGeneralSiblings() {
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,345,"String h = ""<ol><li id=1>One<li id=2>Two<li id=3>Three</ol>"";"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,346,Document doc = Jsoup.parse(h);
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,347,"Elements els = SelectMatch.match(doc, Parser.parse(""#1 ~ #3""));"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,348,"assertEquals(1, els.size());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,349,"assertEquals(""Three"", els.first().text());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,352,// for http://github.com/jhy/jsoup/issues#issue/10
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,353,@Test
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,354,public void testCharactersInIdAndClass() {
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,355,"// using CSS spec for identifiers (id and class): a-z0-9, -, _. NOT . (which is OK in html spec, but not css)"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,356,"String h = ""<div><p id='a1-foo_bar'>One</p><p class='b2-qux_bif'>Two</p></div>"";"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,357,Document doc = Jsoup.parse(h);
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,359,"Element el1 = doc.getElementById(""a1-foo_bar"");"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,360,"assertEquals(""One"", el1.text());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,361,"Element el2 = doc.getElementsByClass(""b2-qux_bif"").first();"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,362,"assertEquals(""Two"", el2.text());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,364,"Element el3 = SelectMatch.match(doc, Parser.parse(""#a1-foo_bar"")).first();"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,365,"assertEquals(""One"", el3.text());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,366,"Element el4 = SelectMatch.match(doc, Parser.parse("".b2-qux_bif"")).first();"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,367,"assertEquals(""Two"", el4.text());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,370,// for http://github.com/jhy/jsoup/issues#issue/13
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,371,@Test
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,372,public void testSupportsLeadingCombinator() {
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,373,"String h = ""<div><p><span>One</span><span>Two</span></p></div>"";"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,374,Document doc = Jsoup.parse(h);
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,376,"Element p = SelectMatch.match(doc, Parser.parse(""div > p"")).first();"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,377,"Elements spans = p.select(""> span"");"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,378,"assertEquals(2, spans.size());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,379,"assertEquals(""One"", spans.first().text());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,381,// make sure doesn't get nested
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,382,"h = ""<div id=1><div id=2><div id=3></div></div></div>"";"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,383,doc = Jsoup.parse(h);
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,384,"Element div = SelectMatch.match(SelectMatch.match(doc, Parser.parse(""div"")), Parser.parse("" > div"")).first();"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,385,"assertEquals(""2"", div.id());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,388,@Test public void testPseudoLessThan() {
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,389,"Document doc = Jsoup.parse(""<div><p>One</p><p>Two</p><p>Three</>p></div><div><p>Four</p>"");"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,390,"Elements ps = SelectMatch.match(doc, Parser.parse(""div p:lt(2)""));"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,391,"assertEquals(3, ps.size());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,392,"assertEquals(""One"", ps.get(0).text());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,393,"assertEquals(""Two"", ps.get(1).text());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,394,"assertEquals(""Four"", ps.get(2).text());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,397,@Test public void testPseudoGreaterThan() {
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,398,"Document doc = Jsoup.parse(""<div><p>One</p><p>Two</p><p>Three</p></div><div><p>Four</p>"");"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,399,"Elements ps = SelectMatch.match(doc, Parser.parse(""div p:gt(0)""));"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,400,"assertEquals(2, ps.size());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,401,"assertEquals(""Two"", ps.get(0).text());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,402,"assertEquals(""Three"", ps.get(1).text());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,405,@Test public void testPseudoEquals() {
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,406,"Document doc = Jsoup.parse(""<div><p>One</p><p>Two</p><p>Three</>p></div><div><p>Four</p>"");"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,407,"Elements ps = SelectMatch.match(doc, Parser.parse(""div p:eq(0)""));"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,408,"assertEquals(2, ps.size());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,409,"assertEquals(""One"", ps.get(0).text());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,410,"assertEquals(""Four"", ps.get(1).text());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,412,"Elements ps2 = SelectMatch.match(doc, Parser.parse(""div:eq(0) p:eq(0)""));"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,413,"assertEquals(1, ps2.size());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,414,"assertEquals(""One"", ps2.get(0).text());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,415,"assertEquals(""p"", ps2.get(0).tagName());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,418,@Test public void testPseudoBetween() {
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,419,"Document doc = Jsoup.parse(""<div><p>One</p><p>Two</p><p>Three</>p></div><div><p>Four</p>"");"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,420,"Elements ps = SelectMatch.match(doc, Parser.parse(""div p:gt(0):lt(2)""));"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,421,"assertEquals(1, ps.size());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,422,"assertEquals(""Two"", ps.get(0).text());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,425,@Test public void testPseudoCombined() {
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,426,"Document doc = Jsoup.parse(""<div class='foo'><p>One</p><p>Two</p></div><div><p>Three</p><p>Four</p></div>"");"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,427,"Elements ps = SelectMatch.match(doc, Parser.parse(""div.foo p:gt(0)""));"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,428,"assertEquals(1, ps.size());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,429,"assertEquals(""Two"", ps.get(0).text());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,432,@Test public void testPseudoHas() {
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,433,"Document doc = Jsoup.parse(""<div id=0><p><span>Hello</span></p></div> <div id=1><span class=foo>There</span></div> <div id=2><p>Not</p></div>"");"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,435,"Elements divs1 = SelectMatch.match(doc, Parser.parse(""div:has(span)""));"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,436,"assertEquals(2, divs1.size());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,437,"assertEquals(""0"", divs1.get(0).id());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,438,"assertEquals(""1"", divs1.get(1).id());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,440,"Elements divs2 = SelectMatch.match(doc, Parser.parse(""div:has([class]""));"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,441,"assertEquals(1, divs2.size());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,442,"assertEquals(""1"", divs2.get(0).id());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,444,"Elements divs3 = SelectMatch.match(doc, Parser.parse(""div:has(span, p)""));"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,445,"assertEquals(3, divs3.size());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,446,"assertEquals(""0"", divs3.get(0).id());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,447,"assertEquals(""1"", divs3.get(1).id());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,448,"assertEquals(""2"", divs3.get(2).id());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,450,"Elements els1 = SelectMatch.match(doc.body(), Parser.parse("":has(p)""));"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,451,"assertEquals(3, els1.size()); // body, div, dib"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,452,"assertEquals(""body"", els1.first().tagName());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,453,"assertEquals(""0"", els1.get(1).id());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,454,"assertEquals(""2"", els1.get(2).id());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,457,@Test public void testNestedHas() {
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,458,"Document doc = Jsoup.parse(""<div><p><span>One</span></p></div> <div><p>Two</p></div>"");"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,459,"Elements divs = SelectMatch.match(doc, Parser.parse(""div:has(p:has(span))""));"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,460,"assertEquals(1, divs.size());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,461,"assertEquals(""One"", divs.first().text());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,463,// test matches in has
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,464,"divs = SelectMatch.match(doc, Parser.parse(""div:has(p:matches((?i)two))""));"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,465,"assertEquals(1, divs.size());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,466,"assertEquals(""div"", divs.first().tagName());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,467,"assertEquals(""Two"", divs.first().text());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,469,// test contains in has
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,470,"divs = SelectMatch.match(doc, Parser.parse(""div:has(p:contains(two))""));"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,471,"assertEquals(1, divs.size());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,472,"assertEquals(""div"", divs.first().tagName());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,473,"assertEquals(""Two"", divs.first().text());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,476,@Test public void testPseudoContains() {
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,477,"Document doc = Jsoup.parse(""<div><p>The Rain.</p> <p class=light>The <i>rain</i>.</p> <p>Rain, the.</p></div>"");"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,479,"Elements ps1 = SelectMatch.match(doc, Parser.parse(""p:contains(Rain)""));"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,480,"assertEquals(3, ps1.size());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,482,"Elements ps2 = SelectMatch.match(doc, Parser.parse(""p:contains(the rain)""));"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,483,"assertEquals(2, ps2.size());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,484,"assertEquals(""The Rain."", ps2.first().html());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,485,"assertEquals(""The <i>rain</i>."", ps2.last().html());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,487,"Elements ps3 = SelectMatch.match(doc, Parser.parse(""p:contains(the Rain):has(i)""));"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,488,"assertEquals(1, ps3.size());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,489,"assertEquals(""light"", ps3.first().className());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,491,"Elements ps4 = SelectMatch.match(doc, Parser.parse("".light:contains(rain)""));"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,492,"assertEquals(1, ps4.size());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,493,"assertEquals(""light"", ps3.first().className());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,495,"Elements ps5 = SelectMatch.match(doc, Parser.parse("":contains(rain)""));"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,496,"assertEquals(8, ps5.size()); // html, body, div,..."
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,499,@Test public void testPsuedoContainsWithParentheses() {
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,500,"Document doc = Jsoup.parse(""<div><p id=1>This (is good)</p><p id=2>This is bad)</p>"");"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,502,"Elements ps1 = SelectMatch.match(doc, Parser.parse(""p:contains(this (is good))""));"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,503,"assertEquals(1, ps1.size());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,504,"assertEquals(""1"", ps1.first().id());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,506,"Elements ps2 = SelectMatch.match(doc, Parser.parse(""p:contains(this is bad\\))""));"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,507,"assertEquals(1, ps2.size());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,508,"assertEquals(""2"", ps2.first().id());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,511,@Test public void testContainsOwn() {
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,512,"Document doc = Jsoup.parse(""<p id=1>Hello <b>there</b> now</p>"");"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,513,"Elements ps = SelectMatch.match(doc, Parser.parse(""p:containsOwn(Hello now)""));"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,514,"assertEquals(1, ps.size());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,515,"assertEquals(""1"", ps.first().id());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,517,"assertEquals(0, SelectMatch.match(doc, Parser.parse(""p:containsOwn(there)"")).size());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,520,@Test public void testMatches() {
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,521,"Document doc = Jsoup.parse(""<p id=1>The <i>Rain</i></p> <p id=2>There are 99 bottles.</p> <p id=3>Harder (this)</p> <p id=4>Rain</p>"");"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,523,"Elements p1 = SelectMatch.match(doc, Parser.parse(""p:matches(The rain)"")); // no match, case sensitive"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,524,"assertEquals(0, p1.size());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,526,"Elements p2 = SelectMatch.match(doc, Parser.parse(""p:matches((?i)the rain)"")); // case insense. should include root, html, body"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,527,"assertEquals(1, p2.size());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,528,"assertEquals(""1"", p2.first().id());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,530,"Elements p4 = SelectMatch.match(doc, Parser.parse(""p:matches((?i)^rain$)"")); // bounding"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,531,"assertEquals(1, p4.size());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,532,"assertEquals(""4"", p4.first().id());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,534,"Elements p5 = SelectMatch.match(doc, Parser.parse(""p:matches(\\d+)""));"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,535,"assertEquals(1, p5.size());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,536,"assertEquals(""2"", p5.first().id());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,538,"Elements p6 = SelectMatch.match(doc, Parser.parse(""p:matches(\\w+\\s+\\(\\w+\\))"")); // test bracket matching"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,539,"assertEquals(1, p6.size());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,540,"assertEquals(""3"", p6.first().id());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,542,"Elements p7 = SelectMatch.match(doc, Parser.parse(""p:matches((?i)the):has(i)"")); // multi"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,543,"assertEquals(1, p7.size());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,544,"assertEquals(""1"", p7.first().id());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,547,@Test public void testMatchesOwn() {
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,548,"Document doc = Jsoup.parse(""<p id=1>Hello <b>there</b> now</p>"");"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,550,"Elements p1 = SelectMatch.match(doc, Parser.parse(""p:matchesOwn((?i)hello now)""));"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,551,"assertEquals(1, p1.size());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,552,"assertEquals(""1"", p1.first().id());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,554,"assertEquals(0, SelectMatch.match(doc, Parser.parse(""p:matchesOwn(there)"")).size());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,557,@Test public void testRelaxedTags() {
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,558,"Document doc = Jsoup.parse(""<abc_def id=1>Hello</abc_def> <abc-def id=2>There</abc-def>"");"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,560,"Elements el1 = SelectMatch.match(doc, Parser.parse(""abc_def""));"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,561,"assertEquals(1, el1.size());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,562,"assertEquals(""1"", el1.first().id());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,564,"Elements el2 = SelectMatch.match(doc, Parser.parse(""abc-def""));"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,565,"assertEquals(1, el2.size());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,566,"assertEquals(""2"", el2.first().id());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,569,@Test public void notParas() {
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,570,"Document doc = Jsoup.parse(""<p id=1>One</p> <p>Two</p> <p><span>Three</span></p>"");"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,572,"Elements el1 = SelectMatch.match(doc, Parser.parse(""p:not([id=1])""));"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,573,"assertEquals(2, el1.size());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,574,"assertEquals(""Two"", el1.first().text());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,575,"assertEquals(""Three"", el1.last().text());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,577,"Elements el2 = SelectMatch.match(doc, Parser.parse(""p:not(:has(span))""));"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,578,"assertEquals(2, el2.size());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,579,"assertEquals(""One"", el2.first().text());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,580,"assertEquals(""Two"", el2.last().text());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,583,@Test
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,584,public void testNotAll() {
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,585,"Document doc = Jsoup.parse(""<p>Two</p> <p><span>Three</span></p>"");"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,587,"Elements el1 = doc.body().select("":not(p)""); // should just be the span"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,588,"assertEquals(2, el1.size());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,589,"assertEquals(""body"", el1.first().tagName());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,590,"assertEquals(""span"", el1.last().tagName());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,593,@Test
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,594,public void testNotClass() {
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,595,"Document doc = Jsoup.parse(""<div class=left>One</div><div class=right id=1><p>Two</p></div>"");"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,597,"Elements el1 = SelectMatch.match(doc, Parser.parse(""div:not(.left)""));"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,598,"assertEquals(1, el1.size());"
True,src/test/java/org/jsoup/select/ParserSelectorNG.java,src/test/java/org/jsoup/select/ParserSelectorNG.java,599,"assertEquals(""1"", el1.first().id());"
