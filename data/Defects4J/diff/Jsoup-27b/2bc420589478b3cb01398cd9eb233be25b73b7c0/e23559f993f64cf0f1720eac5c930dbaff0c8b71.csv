is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/jsoup/parser/ParserRuntimeException.java,src/main/java/org/jsoup/parser/ParserRuntimeException.java,4,ODO: Document
True,src/main/java/org/jsoup/parser/ParserRuntimeException.java,src/main/java/org/jsoup/parser/ParserRuntimeException.java,4,Runtime exception to wrap up unlikely checked exceptions thrown when parsing.
False,src/main/java/org/jsoup/parser/ParserRuntimeException.java,src/main/java/org/jsoup/parser/ParserRuntimeException.java,7,ublic class ParserRuntimeException {
True,src/main/java/org/jsoup/parser/ParserRuntimeException.java,src/main/java/org/jsoup/parser/ParserRuntimeException.java,7,public class ParserRuntimeException extends RuntimeException {
True,src/main/java/org/jsoup/parser/ParserRuntimeException.java,src/main/java/org/jsoup/parser/ParserRuntimeException.java,8,private Position pos;
True,src/main/java/org/jsoup/parser/ParserRuntimeException.java,src/main/java/org/jsoup/parser/ParserRuntimeException.java,10,"public ParserRuntimeException(String message, Throwable cause, Position pos) {"
True,src/main/java/org/jsoup/parser/ParserRuntimeException.java,src/main/java/org/jsoup/parser/ParserRuntimeException.java,11,"super(message, cause);"
True,src/main/java/org/jsoup/parser/ParserRuntimeException.java,src/main/java/org/jsoup/parser/ParserRuntimeException.java,12,this.pos = pos;
True,src/main/java/org/jsoup/parser/ParserRuntimeException.java,src/main/java/org/jsoup/parser/ParserRuntimeException.java,15,public Position getPos() {
True,src/main/java/org/jsoup/parser/ParserRuntimeException.java,src/main/java/org/jsoup/parser/ParserRuntimeException.java,16,return pos;
False,src/main/java/org/jsoup/parser/Position.java,src/main/java/org/jsoup/parser/Position.java,4,ODO: Document
True,src/main/java/org/jsoup/parser/Position.java,src/main/java/org/jsoup/parser/Position.java,4,The start position (line & column number) that a token / node was found at.
False,src/main/java/org/jsoup/parser/Position.java,src/main/java/org/jsoup/parser/Position.java,7,ublic class Position {
True,src/main/java/org/jsoup/parser/Position.java,src/main/java/org/jsoup/parser/Position.java,7,public final class Position implements Cloneable {
True,src/main/java/org/jsoup/parser/Position.java,src/main/java/org/jsoup/parser/Position.java,8,private int offset = 0;
True,src/main/java/org/jsoup/parser/Position.java,src/main/java/org/jsoup/parser/Position.java,9,private int lineNum = 1;
True,src/main/java/org/jsoup/parser/Position.java,src/main/java/org/jsoup/parser/Position.java,10,private int colNum = 1;
True,src/main/java/org/jsoup/parser/Position.java,src/main/java/org/jsoup/parser/Position.java,12,public int incOffset() {
True,src/main/java/org/jsoup/parser/Position.java,src/main/java/org/jsoup/parser/Position.java,13,return offset++;
True,src/main/java/org/jsoup/parser/Position.java,src/main/java/org/jsoup/parser/Position.java,16,public int incLineNum() {
True,src/main/java/org/jsoup/parser/Position.java,src/main/java/org/jsoup/parser/Position.java,17,return lineNum++;
True,src/main/java/org/jsoup/parser/Position.java,src/main/java/org/jsoup/parser/Position.java,20,public int incColNum() {
True,src/main/java/org/jsoup/parser/Position.java,src/main/java/org/jsoup/parser/Position.java,21,return colNum++;
True,src/main/java/org/jsoup/parser/Position.java,src/main/java/org/jsoup/parser/Position.java,24,public int getOffset() {
True,src/main/java/org/jsoup/parser/Position.java,src/main/java/org/jsoup/parser/Position.java,25,return offset;
True,src/main/java/org/jsoup/parser/Position.java,src/main/java/org/jsoup/parser/Position.java,28,public void setOffset(int offset) {
True,src/main/java/org/jsoup/parser/Position.java,src/main/java/org/jsoup/parser/Position.java,29,this.offset = offset;
True,src/main/java/org/jsoup/parser/Position.java,src/main/java/org/jsoup/parser/Position.java,32,public int getLineNum() {
True,src/main/java/org/jsoup/parser/Position.java,src/main/java/org/jsoup/parser/Position.java,33,return lineNum;
True,src/main/java/org/jsoup/parser/Position.java,src/main/java/org/jsoup/parser/Position.java,36,public void setLineNum(int lineNum) {
True,src/main/java/org/jsoup/parser/Position.java,src/main/java/org/jsoup/parser/Position.java,37,this.lineNum = lineNum;
True,src/main/java/org/jsoup/parser/Position.java,src/main/java/org/jsoup/parser/Position.java,40,public int getColNum() {
True,src/main/java/org/jsoup/parser/Position.java,src/main/java/org/jsoup/parser/Position.java,41,return colNum;
True,src/main/java/org/jsoup/parser/Position.java,src/main/java/org/jsoup/parser/Position.java,44,public void setColNum(int colNum) {
True,src/main/java/org/jsoup/parser/Position.java,src/main/java/org/jsoup/parser/Position.java,45,this.colNum = colNum;
True,src/main/java/org/jsoup/parser/Position.java,src/main/java/org/jsoup/parser/Position.java,48,@Override
True,src/main/java/org/jsoup/parser/Position.java,src/main/java/org/jsoup/parser/Position.java,49,protected Position clone() {
True,src/main/java/org/jsoup/parser/Position.java,src/main/java/org/jsoup/parser/Position.java,50,try {
True,src/main/java/org/jsoup/parser/Position.java,src/main/java/org/jsoup/parser/Position.java,51,return (Position) super.clone();
True,src/main/java/org/jsoup/parser/Position.java,src/main/java/org/jsoup/parser/Position.java,52,} catch (CloneNotSupportedException e) {
True,src/main/java/org/jsoup/parser/Position.java,src/main/java/org/jsoup/parser/Position.java,53,throw new Error(e);
True,src/main/java/org/jsoup/parser/Position.java,src/main/java/org/jsoup/parser/Position.java,57,@Override
True,src/main/java/org/jsoup/parser/Position.java,src/main/java/org/jsoup/parser/Position.java,58,public boolean equals(Object o) {
True,src/main/java/org/jsoup/parser/Position.java,src/main/java/org/jsoup/parser/Position.java,59,if (this == o) return true;
True,src/main/java/org/jsoup/parser/Position.java,src/main/java/org/jsoup/parser/Position.java,60,if (o == null || getClass() != o.getClass()) return false;
True,src/main/java/org/jsoup/parser/Position.java,src/main/java/org/jsoup/parser/Position.java,62,Position position = (Position) o;
True,src/main/java/org/jsoup/parser/Position.java,src/main/java/org/jsoup/parser/Position.java,64,if (colNum != position.colNum) return false;
True,src/main/java/org/jsoup/parser/Position.java,src/main/java/org/jsoup/parser/Position.java,65,if (lineNum != position.lineNum) return false;
True,src/main/java/org/jsoup/parser/Position.java,src/main/java/org/jsoup/parser/Position.java,66,if (offset != position.offset) return false;
True,src/main/java/org/jsoup/parser/Position.java,src/main/java/org/jsoup/parser/Position.java,68,return true;
True,src/main/java/org/jsoup/parser/Position.java,src/main/java/org/jsoup/parser/Position.java,71,@Override
True,src/main/java/org/jsoup/parser/Position.java,src/main/java/org/jsoup/parser/Position.java,72,public int hashCode() {
True,src/main/java/org/jsoup/parser/Position.java,src/main/java/org/jsoup/parser/Position.java,73,int result = offset;
True,src/main/java/org/jsoup/parser/Position.java,src/main/java/org/jsoup/parser/Position.java,74,result = 31 * result + lineNum;
True,src/main/java/org/jsoup/parser/Position.java,src/main/java/org/jsoup/parser/Position.java,75,result = 31 * result + colNum;
True,src/main/java/org/jsoup/parser/Position.java,src/main/java/org/jsoup/parser/Position.java,76,return result;
True,src/main/java/org/jsoup/parser/Position.java,src/main/java/org/jsoup/parser/Position.java,79,@Override
True,src/main/java/org/jsoup/parser/Position.java,src/main/java/org/jsoup/parser/Position.java,80,public String toString() {
True,src/main/java/org/jsoup/parser/Position.java,src/main/java/org/jsoup/parser/Position.java,81,"return String.format(""%s:%s"", lineNum, colNum);"
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,4,ODO: Document
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,4,A Token of HTML. Internal use only.
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,6,"author Jonathan Hedley, jonathan@hedley.net, Dec 19, 2009 */"
False,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,7,ublic class Token {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,6,"@author Jonathan Hedley, jonathan@hedley.net */"
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,7,class Token {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,8,private String data;
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,9,private Position pos;
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,12,"Token(String data, Position pos) {"
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,13,this.data = data;
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,14,this.pos = pos;
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,17,public String getData() {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,18,return data;
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,21,public void setData(String data) {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,22,this.data = data;
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,25,public Position getPos() {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,26,return pos;
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,29,public void setPos(Position pos) {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,30,this.pos = pos;
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,33,@Override
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,34,public boolean equals(Object o) {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,35,if (this == o) return true;
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,36,if (o == null || getClass() != o.getClass()) return false;
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,38,Token token = (Token) o;
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,40,if (data != null ? !data.equals(token.data) : token.data != null) return false;
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,41,if (pos != null ? !pos.equals(token.pos) : token.pos != null) return false;
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,43,return true;
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,46,@Override
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,47,public int hashCode() {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,48,int result = data != null ? data.hashCode() : 0;
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,49,result = 31 * result + (pos != null ? pos.hashCode() : 0);
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,50,return result;
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,53,@Override
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,54,public String toString() {
True,src/main/java/org/jsoup/parser/Token.java,src/main/java/org/jsoup/parser/Token.java,55,"return String.format(""%s (%s)"", data, pos);"
True,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,3,import java.io.IOException;
True,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,4,import java.io.Reader;
True,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,5,import java.io.StringReader;
True,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,6,import java.nio.CharBuffer;
True,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,7,import java.util.ArrayList;
True,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,8,import java.util.Iterator;
True,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,9,import java.util.List;
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,4,ODO: Document
True,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,12,Splits a given input into a stream of {@link Token Tokens}. (Internal use only).
False,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,7,ublic class TokenStream {
True,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,15,class TokenStream implements Iterator<Token> {
True,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,16,private static final int BUFFER_SIZE = 5 * 1024;
True,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,17,"private static final char LT = ""<"".charAt(0);"
True,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,18,"private static final char GT = "">"".charAt(0);"
True,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,19,"private static final char NL = ""\n"".charAt(0);"
True,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,21,private final Reader in;
True,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,22,private final CharBuffer buffer;
True,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,23,private final StringBuilder accum;
True,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,24,private final boolean autoCloseReader;
True,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,25,private final Position pos;
True,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,27,"private TokenStream(Reader reader, boolean autoCloseReader) {"
True,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,28,this.in = reader;
True,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,29,this.autoCloseReader = autoCloseReader;
True,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,30,buffer = CharBuffer.allocate(BUFFER_SIZE);
True,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,31,accum = new StringBuilder(BUFFER_SIZE / 2);
True,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,32,pos = new Position();
True,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,34,fillBuffer();
True,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,38,TokenStream factory: extract tokens from the supplied Reader. Don't forget to close the Reader once you're done.
True,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,39,@param reader input reader
True,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,40,@return TokenStream of HTML.
True,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,42,public static TokenStream create(Reader reader) {
True,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,43,"return new TokenStream(reader, false);"
True,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,47,TokenStream factory method: extract tokens from a String.
True,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,48,@param data String of HTML data.
True,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,49,@return TokenStream of HTML.
True,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,51,public static TokenStream create(String data) {
True,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,52,StringReader reader = new StringReader(data);
True,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,53,"return new TokenStream(reader, true);"
True,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,57,Test if there are any more tokens to be retrieved.
True,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,58,"@return true if there are tokens remaining, false if all have been read."
True,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,60,public boolean hasNext() {
True,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,61,boolean hasNext = (buffer.hasRemaining() || (fillBuffer() > -1));
True,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,63,if (!hasNext && autoCloseReader)
True,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,64,try {
True,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,65,in.close();
True,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,66,} catch (IOException e) {
True,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,67,"throw new ParserRuntimeException(""IO exception whilst auto-closing reader"", e, pos);"
True,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,69,return hasNext;
True,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,73,Retrieve the next Token. Make sure there are some left using hasNext().
True,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,74,@return next token from stream.
True,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,76,public Token next() {
True,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,77,Position curPos = pos.clone();
True,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,79,String tokenData = accumulate();
True,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,80,"return new Token(tokenData, curPos);"
True,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,83,List<Token> asList() {
True,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,84,List<Token> tokens = new ArrayList<Token>();
True,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,85,while (hasNext()) {
True,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,86,tokens.add(next());
True,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,88,return tokens;
True,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,91,private String accumulate() {
True,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,92,while (hasNext()) {
True,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,93,buffer.mark();
True,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,94,char c = buffer.get();
True,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,96,if (c == LT && accum.length() > 0) {
True,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,97,// leave on stack for next accumulate
True,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,98,buffer.reset();
True,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,99,return captureAccum();
True,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,100,} else {
True,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,101,accum.append(c);
True,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,102,pos.incOffset();
True,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,103,pos.incColNum();
True,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,105,if (c == GT) {
True,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,106,return captureAccum();
True,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,107,} else if (c == NL) {
True,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,108,pos.incLineNum();
True,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,112,return captureAccum();
True,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,115,private int fillBuffer() {
True,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,116,buffer.clear();
True,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,117,try {
True,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,118,int charsRead = in.read(buffer);
True,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,119,buffer.flip();
True,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,120,return charsRead;
True,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,121,} catch (IOException e) {
True,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,122,"throw new ParserRuntimeException(""IO exception whilst reading"", e, pos);"
True,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,126,private String captureAccum() {
True,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,127,String output = accum.toString();
True,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,128,"accum.delete(0, accum.length());"
True,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,129,return output;
True,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,132,public void remove() {
True,src/main/java/org/jsoup/parser/TokenStream.java,src/main/java/org/jsoup/parser/TokenStream.java,133,throw new UnsupportedOperationException();
True,src/test/java/org/jsoup/parser/TokenStreamTest.java,src/test/java/org/jsoup/parser/TokenStreamTest.java,3,import org.junit.Test;
True,src/test/java/org/jsoup/parser/TokenStreamTest.java,src/test/java/org/jsoup/parser/TokenStreamTest.java,4,import static org.junit.Assert.*;
True,src/test/java/org/jsoup/parser/TokenStreamTest.java,src/test/java/org/jsoup/parser/TokenStreamTest.java,6,import java.util.List;
False,src/test/java/org/jsoup/parser/TokenStreamTest.java,src/test/java/org/jsoup/parser/TokenStreamTest.java,4,ODO: Document
True,src/test/java/org/jsoup/parser/TokenStreamTest.java,src/test/java/org/jsoup/parser/TokenStreamTest.java,10,TokenStream test cases.
True,src/test/java/org/jsoup/parser/TokenStreamTest.java,src/test/java/org/jsoup/parser/TokenStreamTest.java,14,@Test
True,src/test/java/org/jsoup/parser/TokenStreamTest.java,src/test/java/org/jsoup/parser/TokenStreamTest.java,15,public void createTokenStreamFromString() {
True,src/test/java/org/jsoup/parser/TokenStreamTest.java,src/test/java/org/jsoup/parser/TokenStreamTest.java,16,"List<Token> tokens = TokenStream.create(""<html><body><p>Hello world!</p></body></html>"").asList();"
True,src/test/java/org/jsoup/parser/TokenStreamTest.java,src/test/java/org/jsoup/parser/TokenStreamTest.java,17,"assertEquals(""Correct num tokens"", 7, tokens.size());"
True,src/test/java/org/jsoup/parser/TokenStreamTest.java,src/test/java/org/jsoup/parser/TokenStreamTest.java,20,"// TODO: test data, positions, line breaks"
