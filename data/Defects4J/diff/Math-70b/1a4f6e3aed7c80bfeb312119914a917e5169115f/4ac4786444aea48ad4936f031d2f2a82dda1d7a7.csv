is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/math/stat/TestStatistic.java,src/java/org/apache/commons/math/stat/TestStatistic.java,23, @version $Revision: 1.12 $ $Date: 2004/02/21 21:35:15 $
True,src/java/org/apache/commons/math/stat/TestStatistic.java,src/java/org/apache/commons/math/stat/TestStatistic.java,23,* @version $Revision: 1.13 $ $Date: 2004/03/08 04:22:12 $
False,src/java/org/apache/commons/math/stat/TestStatistic.java,src/java/org/apache/commons/math/stat/TestStatistic.java,51,"hrows IllegalArgumentException, MathException;"
True,src/java/org/apache/commons/math/stat/TestStatistic.java,src/java/org/apache/commons/math/stat/TestStatistic.java,51,throws IllegalArgumentException;
True,src/java/org/apache/commons/math/stat/TestStatistic.java,src/java/org/apache/commons/math/stat/TestStatistic.java,80,* @throws MathException if an error occurs computing the p-value
True,src/java/org/apache/commons/math/stat/TestStatistic.java,src/java/org/apache/commons/math/stat/TestStatistic.java,115,* @throws MathException if an error occurs performing the test
False,src/java/org/apache/commons/math/stat/TestStatistic.java,src/java/org/apache/commons/math/stat/TestStatistic.java,135,"hrows IllegalArgumentException, MathException;"
True,src/java/org/apache/commons/math/stat/TestStatistic.java,src/java/org/apache/commons/math/stat/TestStatistic.java,137,throws IllegalArgumentException;
True,src/java/org/apache/commons/math/stat/TestStatistic.java,src/java/org/apache/commons/math/stat/TestStatistic.java,188,* @throws MathException if an error occurs computing the p-value
True,src/java/org/apache/commons/math/stat/TestStatistic.java,src/java/org/apache/commons/math/stat/TestStatistic.java,236,* @throws MathException if an error occurs performing the test
True,src/java/org/apache/commons/math/stat/TestStatistic.java,src/java/org/apache/commons/math/stat/TestStatistic.java,276,* @throws MathException if an error computing the p-value
True,src/java/org/apache/commons/math/stat/TestStatistic.java,src/java/org/apache/commons/math/stat/TestStatistic.java,306,* @throws MathException if an error occurs computing the p-value
False,src/java/org/apache/commons/math/stat/TestStatistic.java,src/java/org/apache/commons/math/stat/TestStatistic.java,322,"hrows IllegalArgumentException, MathException;"
True,src/java/org/apache/commons/math/stat/TestStatistic.java,src/java/org/apache/commons/math/stat/TestStatistic.java,328,throws IllegalArgumentException;
False,src/java/org/apache/commons/math/stat/TestStatistic.java,src/java/org/apache/commons/math/stat/TestStatistic.java,343,"hrows IllegalArgumentException, MathException;"
True,src/java/org/apache/commons/math/stat/TestStatistic.java,src/java/org/apache/commons/math/stat/TestStatistic.java,349,throws IllegalArgumentException;
True,src/java/org/apache/commons/math/stat/TestStatistic.java,src/java/org/apache/commons/math/stat/TestStatistic.java,381,* @throws MathException if an error occurs computing the p-value
True,src/java/org/apache/commons/math/stat/TestStatistic.java,src/java/org/apache/commons/math/stat/TestStatistic.java,431,* @throws MathException if an error occurs performing the test
True,src/java/org/apache/commons/math/stat/TestStatistic.java,src/java/org/apache/commons/math/stat/TestStatistic.java,472,* @throws MathException if an error occurs computing the p-value
True,src/java/org/apache/commons/math/stat/TestStatistic.java,src/java/org/apache/commons/math/stat/TestStatistic.java,503,* @throws MathException if an error occurs computing the p-value
False,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,29, @version $Revision: 1.13 $ $Date: 2004/02/21 21:35:15 $
True,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,29,* @version $Revision: 1.14 $ $Date: 2004/03/08 04:22:12 $
False,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,56,hrow new IllegalArgumentException(
False,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,57,"observed counts must be non-negative,"""
True,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,56,"throw new IllegalArgumentException( ""observed counts must be non-negative,"""
True,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,71,* @throws MathException if an error occurs computing the p-value
False,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,77,istributionFactory.newInstance().createChiSquareDistribution(
False,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,78,double) expected.length - 1);
False,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,79,eturn 1
False,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,80, chiSquaredDistribution.cumulativeProbability(
False,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,81,"hiSquare(expected, observed));"
True,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,76,DistributionFactory.newInstance().createChiSquareDistribution((double) expected.length - 1);
True,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,77,"return 1 - chiSquaredDistribution.cumulativeProbability(chiSquare(expected, observed));"
True,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,87,* @throws MathException if an error occurs performing the test
False,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,92,ublic boolean chiSquareTest(
False,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,93,"ouble[] expected,"
False,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,94,"ouble[] observed,"
False,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,95,ouble alpha)
True,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,89,"public boolean chiSquareTest(double[] expected, double[] observed, double alpha)"
False,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,98,hrow new IllegalArgumentException(
False,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,99,"bad significance level: "" + alpha);"
True,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,92,"throw new IllegalArgumentException(""bad significance level: "" + alpha);"
False,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,115,eturn t(
False,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,116,"tatUtils.mean(observed),"
False,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,117,"u,"
False,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,118,"tatUtils.variance(observed),"
False,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,119,bserved.length);
True,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,108,"return t(StatUtils.mean(observed), mu, StatUtils.variance(observed), observed.length);"
True,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,117,* @throws MathException if an error occurs computing the p-value
False,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,132,hrow new IllegalArgumentException(
False,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,133,"bad significance level: "" + alpha);"
True,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,122,"throw new IllegalArgumentException(""bad significance level: "" + alpha);"
False,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,146,f ((sample1 == null)
False,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,147,| (sample2 == null
True,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,135,if ((sample1 == null) || (sample2 == null
False,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,151,eturn t(
False,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,152,"tatUtils.mean(sample1),"
False,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,153,"tatUtils.mean(sample2),"
False,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,154,"tatUtils.variance(sample1),"
False,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,155,"tatUtils.variance(sample2),"
False,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,156,"double) sample1.length,"
False,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,157,double) sample2.length);
True,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,139,"return t(StatUtils.mean(sample1), StatUtils.mean(sample2), StatUtils.variance(sample1),"
True,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,140,"StatUtils.variance(sample2),  (double) sample1.length, (double) sample2.length);"
True,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,149,* @throws MathException if an error occurs computing the p-value
False,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,169,f ((sample1 == null)
False,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,170,| (sample2 == null
True,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,153,if ((sample1 == null) || (sample2 == null
False,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,174,eturn tTest(
False,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,175,"tatUtils.mean(sample1),"
False,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,176,"tatUtils.mean(sample2),"
False,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,177,"tatUtils.variance(sample1),"
False,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,178,"tatUtils.variance(sample2),"
False,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,179,"double) sample1.length,"
False,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,180,double) sample2.length);
True,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,157,"return tTest(StatUtils.mean(sample1), StatUtils.mean(sample2), StatUtils.variance(sample1),"
True,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,158,"StatUtils.variance(sample2), (double) sample1.length, (double) sample2.length);"
False,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,188, confidence 1 - alpha
True,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,166,*     confidence 1 - alpha
True,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,168,* @throws MathException if an error occurs performing the test
False,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,194,hrow new IllegalArgumentException(
False,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,195,"bad significance level: "" + alpha);"
True,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,173,"throw new IllegalArgumentException(""bad significance level: "" + alpha);"
True,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,183,* @throws MathException if an error occurs computing the p-value
False,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,211,eturn tTest(
False,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,212,"tatUtils.mean(sample),"
False,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,213,"u,"
False,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,214,"tatUtils.variance(sample),"
False,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,215,ample.length);
True,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,190,"return tTest( StatUtils.mean(sample), mu, StatUtils.variance(sample), sample.length);"
False,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,229,eturn t(
False,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,230,"ampleStats.getMean(),"
False,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,231,"u,"
False,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,232,"ampleStats.getVariance(),"
False,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,233,ampleStats.getN());
True,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,204,"return t(sampleStats.getMean(), mu, sampleStats.getVariance(), sampleStats.getN());"
False,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,242,ublic double t(
False,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,243,"tatisticalSummary sampleStats1,"
False,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,244,tatisticalSummary sampleStats2)
True,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,213,"public double t(StatisticalSummary sampleStats1, StatisticalSummary sampleStats2)"
False,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,251,eturn t(
False,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,252,"ampleStats1.getMean(),"
False,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,253,"ampleStats2.getMean(),"
False,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,254,"ampleStats1.getVariance(),"
False,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,255,"ampleStats2.getVariance(),"
False,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,256,"double) sampleStats1.getN(),"
False,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,257,double) sampleStats2.getN());
True,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,220,"return t(sampleStats1.getMean(), sampleStats2.getMean(), sampleStats1.getVariance(),"
True,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,221,"sampleStats2.getVariance(), (double) sampleStats1.getN(), (double) sampleStats2.getN());"
True,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,229,* @throws MathException if an error occurs computing the p-value
False,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,266,ublic double tTest(
False,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,267,"tatisticalSummary sampleStats1,"
False,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,268,tatisticalSummary sampleStats2)
True,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,231,"public double tTest(StatisticalSummary sampleStats1, StatisticalSummary sampleStats2)"
False,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,270,f ((sampleStats1 == null)
False,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,271,| (sampleStats2 == null
True,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,233,if ((sampleStats1 == null) || (sampleStats2 == null
False,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,275,eturn tTest(
False,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,276,"ampleStats1.getMean(),"
False,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,277,"ampleStats2.getMean(),"
False,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,278,"ampleStats1.getVariance(),"
False,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,279,"ampleStats2.getVariance(),"
False,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,280,"double) sampleStats1.getN(),"
False,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,281,double) sampleStats2.getN());
True,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,237,"return tTest(sampleStats1.getMean(), sampleStats2.getMean(), sampleStats1.getVariance(),"
True,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,238,"sampleStats2.getVariance(), (double) sampleStats1.getN(), (double) sampleStats2.getN());"
False,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,289, confidence 1 - alpha
True,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,246,*     confidence 1 - alpha
True,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,248,* @throws MathException if an error occurs performing the test
False,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,292,ublic boolean tTest(
False,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,293,"tatisticalSummary sampleStats1,"
False,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,294,"tatisticalSummary sampleStats2,"
True,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,250,"public boolean tTest(StatisticalSummary sampleStats1, StatisticalSummary sampleStats2,"
False,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,298,hrow new IllegalArgumentException(
False,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,299,"bad significance level: "" + alpha);"
True,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,254,"throw new IllegalArgumentException(""bad significance level: "" + alpha);"
True,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,265,* @throws MathException if an error occurs computing the p-value
False,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,311,ublic boolean tTest(
False,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,312,"ouble mu,"
False,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,313,"tatisticalSummary sampleStats,"
False,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,314,ouble alpha)
True,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,267,"public boolean tTest( double mu, StatisticalSummary sampleStats,double alpha)"
False,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,317,hrow new IllegalArgumentException(
False,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,318,"bad significance level: "" + alpha);"
True,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,270,"throw new IllegalArgumentException(""bad significance level: "" + alpha);"
True,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,280,* @throws MathException if an error occurs computing the p-value
False,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,334,eturn tTest(
False,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,335,"ampleStats.getMean(),"
False,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,336,"u,"
False,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,337,"ampleStats.getVariance(),"
False,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,338,ampleStats.getN());
True,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,287,"return tTest(sampleStats.getMean(), mu, sampleStats.getVariance(), sampleStats.getN());"
False,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,369,rivate double t(
False,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,370,"ouble m1,"
False,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,371,"ouble m2,"
False,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,372,"ouble v1,"
False,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,373,"ouble v2,"
False,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,374,"ouble n1,"
False,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,375,ouble n2) {
True,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,318,"private double t(double m1, double m2,  double v1, double v2, double n1,double n2)  {"
False,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,403,rivate double tTest(
False,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,404,"ouble m1,"
False,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,405,"ouble m2,"
False,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,406,"ouble v1,"
False,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,407,"ouble v2,"
False,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,408,"ouble n1,"
False,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,409,ouble n2)
True,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,346,"private double tTest(double m1, double m2, double v1, double v2, double n1, double n2)"
False,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,413,istributionFactory.newInstance().createTDistribution(
False,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,414,"f(v1, v2, n1, n2));"
True,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,src/java/org/apache/commons/math/stat/TestStatisticImpl.java,350,"DistributionFactory.newInstance().createTDistribution(df(v1, v2, n1, n2));"
