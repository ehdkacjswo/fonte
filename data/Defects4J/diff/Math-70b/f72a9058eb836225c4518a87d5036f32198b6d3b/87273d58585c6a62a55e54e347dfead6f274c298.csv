is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,22,mport java.text.Format;
False,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,39,ublic class FractionFormat extends Format implements Serializable {
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,38,public class FractionFormat extends NumberFormat implements Serializable {
False,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,186, Formats a object to produce a string.  <code>obj</code> must be either a
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,185,* Formats an object and appends the result to a StringBuffer. <code>obj</code> must be either a
False,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,315, Parses a string to produce a object.
False,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,316, @param source the string to parse
False,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,317, @param pos input/ouput parsing parameter.
False,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,318, @return the parsed object.
False,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,319," @see java.text.Format#parseObject(java.lang.String, java.text.ParsePosition)"
False,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,321,"ublic Object parseObject(String source, ParsePosition pos) {"
False,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,322,"eturn parse(source, pos);"
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,381,* Formats a double value as a fraction and appends the result to a StringBuffer.
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,383,* @param value the double value to format
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,384,* @param buffer StringBuffer to append to
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,385,"* @param position On input: an alignment field, if desired. On output: the"
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,386,*            offsets of the alignment field
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,387,* @return a reference to the appended buffer
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,388,"* @see {@link #format(Object, StringBuffer, FieldPosition)}"
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,390,"public StringBuffer format(double value, StringBuffer buffer,"
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,391,FieldPosition position) {
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,392,"return format(Double.valueOf(value), buffer, position);"
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,397,* Formats a long value as a fraction and appends the result to a StringBuffer.
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,399,* @param value the long value to format
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,400,* @param buffer StringBuffer to append to
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,401,"* @param position On input: an alignment field, if desired. On output: the"
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,402,*            offsets of the alignment field
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,403,* @return a reference to the appended buffer
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,404,"* @see {@link #format(Object, StringBuffer, FieldPosition)}"
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,406,"public StringBuffer format(long value, StringBuffer buffer, FieldPosition position) {"
True,src/java/org/apache/commons/math/fraction/FractionFormat.java,src/java/org/apache/commons/math/fraction/FractionFormat.java,407,"return format(Long.valueOf(value), buffer, position);"
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,293,public void testLongFormat() {
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,294,"assertEquals(""10 / 1"", improperFormat.format(10l));"
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,297,public void testDoubleFormat() {
True,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,src/test/org/apache/commons/math/fraction/FractionFormatTest.java,298,"assertEquals(""355 / 113"", improperFormat.format(Math.PI));"
