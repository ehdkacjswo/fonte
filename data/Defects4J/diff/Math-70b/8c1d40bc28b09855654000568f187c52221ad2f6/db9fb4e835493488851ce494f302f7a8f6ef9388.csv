is_addition,old_file_path,new_file_path,line_num,content
False,src/test/java/org/apache/commons/math/distribution/HypergeometricDistributionTest.java,src/test/java/org/apache/commons/math/distribution/HypergeometricDistributionTest.java,176,"estUtils.assertRelativelyEquals(pdf, actualPdf, 1.0e-9);"
True,src/test/java/org/apache/commons/math/distribution/HypergeometricDistributionTest.java,src/test/java/org/apache/commons/math/distribution/HypergeometricDistributionTest.java,176,"TestUtils.assertRelativelyEquals(""Expected equals for <""+x+""> pdf"",pdf, actualPdf, 1.0e-9);"
False,src/test/java/org/apache/commons/math/distribution/HypergeometricDistributionTest.java,src/test/java/org/apache/commons/math/distribution/HypergeometricDistributionTest.java,180,"estUtils.assertRelativelyEquals(cdf, actualCdf, 1.0e-9);"
True,src/test/java/org/apache/commons/math/distribution/HypergeometricDistributionTest.java,src/test/java/org/apache/commons/math/distribution/HypergeometricDistributionTest.java,180,"TestUtils.assertRelativelyEquals(""Expected equals for <""+x+""> cdf"",cdf, actualCdf, 1.0e-9);"
False,src/test/java/org/apache/commons/math/distribution/HypergeometricDistributionTest.java,src/test/java/org/apache/commons/math/distribution/HypergeometricDistributionTest.java,184,"estUtils.assertRelativelyEquals(cdf1, actualCdf1, 1.0e-9);"
True,src/test/java/org/apache/commons/math/distribution/HypergeometricDistributionTest.java,src/test/java/org/apache/commons/math/distribution/HypergeometricDistributionTest.java,184,"TestUtils.assertRelativelyEquals(""Expected equals for <""+x+""> cdf1"",cdf1, actualCdf1, 1.0e-9);"
