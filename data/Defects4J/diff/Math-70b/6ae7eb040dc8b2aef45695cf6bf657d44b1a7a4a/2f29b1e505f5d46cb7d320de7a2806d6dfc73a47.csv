is_addition,old_file_path,new_file_path,line_num,content
False,src/test/org/apache/commons/math/TestUtils.java,src/test/org/apache/commons/math/TestUtils.java,96,"ublic static void assertEquals(double a[], double b[], double tolerance) {"
False,src/test/org/apache/commons/math/TestUtils.java,src/test/org/apache/commons/math/TestUtils.java,97,"ssert.assertEquals(a.length, b.length);"
False,src/test/org/apache/commons/math/TestUtils.java,src/test/org/apache/commons/math/TestUtils.java,98,or (int i = 0; i < a.length; i++) {
False,src/test/org/apache/commons/math/TestUtils.java,src/test/org/apache/commons/math/TestUtils.java,99,"ssert.assertEquals(a[i], b[i], tolerance);"
True,src/test/org/apache/commons/math/TestUtils.java,src/test/org/apache/commons/math/TestUtils.java,96,"public static void assertEquals(double expected[], double observed[], double tolerance) {"
True,src/test/org/apache/commons/math/TestUtils.java,src/test/org/apache/commons/math/TestUtils.java,97,"assertEquals(""Array comparison failure"", expected, observed, tolerance);"
False,src/test/org/apache/commons/math/TestUtils.java,src/test/org/apache/commons/math/TestUtils.java,315,"ublic static void assertEquals(String msg, double[] m, double[] n,"
True,src/test/org/apache/commons/math/TestUtils.java,src/test/org/apache/commons/math/TestUtils.java,312,"public static void assertEquals(String msg, double[] expected, double[] observed,"
False,src/test/org/apache/commons/math/TestUtils.java,src/test/org/apache/commons/math/TestUtils.java,317,f (m.length != n.length) {
False,src/test/org/apache/commons/math/TestUtils.java,src/test/org/apache/commons/math/TestUtils.java,318,"ssert.fail(""vectors not same length"");"
True,src/test/org/apache/commons/math/TestUtils.java,src/test/org/apache/commons/math/TestUtils.java,314,StringBuffer out = new StringBuffer(msg);
True,src/test/org/apache/commons/math/TestUtils.java,src/test/org/apache/commons/math/TestUtils.java,315,if (expected.length != observed.length) {
True,src/test/org/apache/commons/math/TestUtils.java,src/test/org/apache/commons/math/TestUtils.java,316,"out.append(""\n Arrays not same length. \n"");"
True,src/test/org/apache/commons/math/TestUtils.java,src/test/org/apache/commons/math/TestUtils.java,317,"out.append(""expected has length "");"
True,src/test/org/apache/commons/math/TestUtils.java,src/test/org/apache/commons/math/TestUtils.java,318,out.append(expected.length);
True,src/test/org/apache/commons/math/TestUtils.java,src/test/org/apache/commons/math/TestUtils.java,319,"out.append("" observed length = "");"
True,src/test/org/apache/commons/math/TestUtils.java,src/test/org/apache/commons/math/TestUtils.java,320,out.append(observed.length);
True,src/test/org/apache/commons/math/TestUtils.java,src/test/org/apache/commons/math/TestUtils.java,321,Assert.fail(out.toString());
False,src/test/org/apache/commons/math/TestUtils.java,src/test/org/apache/commons/math/TestUtils.java,320,or (int i = 0; i < m.length; i++) {
False,src/test/org/apache/commons/math/TestUtils.java,src/test/org/apache/commons/math/TestUtils.java,321,"ssert.assertEquals(msg + "" "" +  i + "" elements differ"","
False,src/test/org/apache/commons/math/TestUtils.java,src/test/org/apache/commons/math/TestUtils.java,322,"[i],n[i],tolerance);"
True,src/test/org/apache/commons/math/TestUtils.java,src/test/org/apache/commons/math/TestUtils.java,323,boolean failure = false;
True,src/test/org/apache/commons/math/TestUtils.java,src/test/org/apache/commons/math/TestUtils.java,324,for (int i=0; i < expected.length; i++) {
True,src/test/org/apache/commons/math/TestUtils.java,src/test/org/apache/commons/math/TestUtils.java,325,try {
True,src/test/org/apache/commons/math/TestUtils.java,src/test/org/apache/commons/math/TestUtils.java,326,"Assert.assertEquals(expected[i], observed[i], tolerance);"
True,src/test/org/apache/commons/math/TestUtils.java,src/test/org/apache/commons/math/TestUtils.java,327,} catch (AssertionFailedError ex) {
True,src/test/org/apache/commons/math/TestUtils.java,src/test/org/apache/commons/math/TestUtils.java,328,failure = true;
True,src/test/org/apache/commons/math/TestUtils.java,src/test/org/apache/commons/math/TestUtils.java,329,"out.append(""\n Elements at index "");"
True,src/test/org/apache/commons/math/TestUtils.java,src/test/org/apache/commons/math/TestUtils.java,330,out.append(i);
True,src/test/org/apache/commons/math/TestUtils.java,src/test/org/apache/commons/math/TestUtils.java,331,"out.append("" differ. "");"
True,src/test/org/apache/commons/math/TestUtils.java,src/test/org/apache/commons/math/TestUtils.java,332,"out.append("" expected = "");"
True,src/test/org/apache/commons/math/TestUtils.java,src/test/org/apache/commons/math/TestUtils.java,333,out.append(expected[i]);
True,src/test/org/apache/commons/math/TestUtils.java,src/test/org/apache/commons/math/TestUtils.java,334,"out.append("" observed = "");"
True,src/test/org/apache/commons/math/TestUtils.java,src/test/org/apache/commons/math/TestUtils.java,335,out.append(observed[i]);
True,src/test/org/apache/commons/math/TestUtils.java,src/test/org/apache/commons/math/TestUtils.java,338,if (failure) {
True,src/test/org/apache/commons/math/TestUtils.java,src/test/org/apache/commons/math/TestUtils.java,339,Assert.fail(out.toString());
