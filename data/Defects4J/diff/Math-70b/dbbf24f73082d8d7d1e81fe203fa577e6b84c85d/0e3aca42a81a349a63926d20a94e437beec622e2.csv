is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/math/util/TransformerMap.java,src/java/org/apache/commons/math/util/TransformerMap.java,35,/ TODO: Add Serializable documentation
False,src/java/org/apache/commons/math/util/TransformerMap.java,src/java/org/apache/commons/math/util/TransformerMap.java,36,/ TODO: Check Serializable implementation
True,src/java/org/apache/commons/math/util/TransformerMap.java,src/java/org/apache/commons/math/util/TransformerMap.java,155,/** {@inheritDoc} */
True,src/java/org/apache/commons/math/util/TransformerMap.java,src/java/org/apache/commons/math/util/TransformerMap.java,156,public boolean equals(Object other) {
True,src/java/org/apache/commons/math/util/TransformerMap.java,src/java/org/apache/commons/math/util/TransformerMap.java,157,if (this == other) {
True,src/java/org/apache/commons/math/util/TransformerMap.java,src/java/org/apache/commons/math/util/TransformerMap.java,158,return true;
True,src/java/org/apache/commons/math/util/TransformerMap.java,src/java/org/apache/commons/math/util/TransformerMap.java,160,if (other == null) {
True,src/java/org/apache/commons/math/util/TransformerMap.java,src/java/org/apache/commons/math/util/TransformerMap.java,161,return false;
True,src/java/org/apache/commons/math/util/TransformerMap.java,src/java/org/apache/commons/math/util/TransformerMap.java,163,try {
True,src/java/org/apache/commons/math/util/TransformerMap.java,src/java/org/apache/commons/math/util/TransformerMap.java,164,TransformerMap rhs = (TransformerMap) other;
True,src/java/org/apache/commons/math/util/TransformerMap.java,src/java/org/apache/commons/math/util/TransformerMap.java,165,if (! defaultTransformer.equals(rhs.defaultTransformer)) {
True,src/java/org/apache/commons/math/util/TransformerMap.java,src/java/org/apache/commons/math/util/TransformerMap.java,166,return false;
True,src/java/org/apache/commons/math/util/TransformerMap.java,src/java/org/apache/commons/math/util/TransformerMap.java,168,if (map.size() != rhs.map.size()) {
True,src/java/org/apache/commons/math/util/TransformerMap.java,src/java/org/apache/commons/math/util/TransformerMap.java,169,return false;
True,src/java/org/apache/commons/math/util/TransformerMap.java,src/java/org/apache/commons/math/util/TransformerMap.java,171,"for (Map.Entry<Class<?>, NumberTransformer> entry : map.entrySet()) {"
True,src/java/org/apache/commons/math/util/TransformerMap.java,src/java/org/apache/commons/math/util/TransformerMap.java,172,if (! entry.getValue().equals(rhs.map.get(entry.getKey()))) {
True,src/java/org/apache/commons/math/util/TransformerMap.java,src/java/org/apache/commons/math/util/TransformerMap.java,173,return false;
True,src/java/org/apache/commons/math/util/TransformerMap.java,src/java/org/apache/commons/math/util/TransformerMap.java,176,return true;
True,src/java/org/apache/commons/math/util/TransformerMap.java,src/java/org/apache/commons/math/util/TransformerMap.java,177,} catch (ClassCastException cce) {
True,src/java/org/apache/commons/math/util/TransformerMap.java,src/java/org/apache/commons/math/util/TransformerMap.java,178,return false;
True,src/java/org/apache/commons/math/util/TransformerMap.java,src/java/org/apache/commons/math/util/TransformerMap.java,182,/** {@inheritDoc} */
True,src/java/org/apache/commons/math/util/TransformerMap.java,src/java/org/apache/commons/math/util/TransformerMap.java,183,@Override
True,src/java/org/apache/commons/math/util/TransformerMap.java,src/java/org/apache/commons/math/util/TransformerMap.java,184,public int hashCode() {
True,src/java/org/apache/commons/math/util/TransformerMap.java,src/java/org/apache/commons/math/util/TransformerMap.java,185,int hash = defaultTransformer.hashCode();
True,src/java/org/apache/commons/math/util/TransformerMap.java,src/java/org/apache/commons/math/util/TransformerMap.java,186,for (NumberTransformer t : map.values()) {
True,src/java/org/apache/commons/math/util/TransformerMap.java,src/java/org/apache/commons/math/util/TransformerMap.java,187,hash = hash * 31 + t.hashCode();
True,src/java/org/apache/commons/math/util/TransformerMap.java,src/java/org/apache/commons/math/util/TransformerMap.java,189,return hash;
True,src/test/org/apache/commons/math/util/TransformerMapTest.java,src/test/org/apache/commons/math/util/TransformerMapTest.java,20,import org.apache.commons.math.TestUtils;
True,src/test/org/apache/commons/math/util/TransformerMapTest.java,src/test/org/apache/commons/math/util/TransformerMapTest.java,107,public void testSerial(){
True,src/test/org/apache/commons/math/util/TransformerMapTest.java,src/test/org/apache/commons/math/util/TransformerMapTest.java,108,NumberTransformer expected = new DefaultTransformer();
True,src/test/org/apache/commons/math/util/TransformerMapTest.java,src/test/org/apache/commons/math/util/TransformerMapTest.java,109,TransformerMap map = new TransformerMap();
True,src/test/org/apache/commons/math/util/TransformerMapTest.java,src/test/org/apache/commons/math/util/TransformerMapTest.java,110,"map.putTransformer(TransformerMapTest.class, expected);"
True,src/test/org/apache/commons/math/util/TransformerMapTest.java,src/test/org/apache/commons/math/util/TransformerMapTest.java,111,"assertEquals(map, TestUtils.serializeAndRecover(map));"
