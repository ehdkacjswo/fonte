is_addition,old_file_path,new_file_path,line_num,content
False,src/test/org/apache/commons/math/TestUtils.java,src/test/org/apache/commons/math/TestUtils.java,22,mport java.io.IOException;
False,src/test/org/apache/commons/math/TestUtils.java,src/test/org/apache/commons/math/TestUtils.java,26,mport org.apache.commons.math.complex.Complex;
True,src/test/org/apache/commons/math/TestUtils.java,src/test/org/apache/commons/math/TestUtils.java,27,import org.apache.commons.math.complex.Complex;
False,src/test/org/apache/commons/math/TestUtils.java,src/test/org/apache/commons/math/TestUtils.java,31, @version $Revision: 1.10 $ $Date: 2004/02/21 21:35:16 $
True,src/test/org/apache/commons/math/TestUtils.java,src/test/org/apache/commons/math/TestUtils.java,30,* @version $Revision: 1.11 $ $Date: 2004/03/18 05:52:37 $
False,src/test/org/apache/commons/math/TestUtils.java,src/test/org/apache/commons/math/TestUtils.java,42,/ check for NaN
False,src/test/org/apache/commons/math/TestUtils.java,src/test/org/apache/commons/math/TestUtils.java,43,f(Double.isNaN(expected)){
False,src/test/org/apache/commons/math/TestUtils.java,src/test/org/apache/commons/math/TestUtils.java,44,ssert.assertTrue(Double.isNaN(actual));
False,src/test/org/apache/commons/math/TestUtils.java,src/test/org/apache/commons/math/TestUtils.java,45, else {
False,src/test/org/apache/commons/math/TestUtils.java,src/test/org/apache/commons/math/TestUtils.java,46,"ssert.assertEquals(expected, actual, delta);"
True,src/test/org/apache/commons/math/TestUtils.java,src/test/org/apache/commons/math/TestUtils.java,41,"assertEquals(null, expected, actual, delta);"
True,src/test/org/apache/commons/math/TestUtils.java,src/test/org/apache/commons/math/TestUtils.java,44,"public static void assertEquals(String msg, double expected, double actual, double delta) {"
True,src/test/org/apache/commons/math/TestUtils.java,src/test/org/apache/commons/math/TestUtils.java,45,// check for NaN
True,src/test/org/apache/commons/math/TestUtils.java,src/test/org/apache/commons/math/TestUtils.java,46,if(Double.isNaN(expected)){
True,src/test/org/apache/commons/math/TestUtils.java,src/test/org/apache/commons/math/TestUtils.java,47,"Assert.assertTrue(msg, Double.isNaN(actual));"
True,src/test/org/apache/commons/math/TestUtils.java,src/test/org/apache/commons/math/TestUtils.java,48,} else {
True,src/test/org/apache/commons/math/TestUtils.java,src/test/org/apache/commons/math/TestUtils.java,49,"Assert.assertEquals(msg, expected, actual, delta);"
False,src/test/org/apache/commons/math/stat/CertifiedDataTest.java,src/test/org/apache/commons/math/stat/CertifiedDataTest.java,30, @version $Revision: 1.15 $ $Date: 2004/02/21 21:35:17 $
True,src/test/org/apache/commons/math/stat/CertifiedDataTest.java,src/test/org/apache/commons/math/stat/CertifiedDataTest.java,31,* @version $Revision: 1.16 $ $Date: 2004/03/18 05:52:36 $
False,src/test/org/apache/commons/math/stat/CertifiedDataTest.java,src/test/org/apache/commons/math/stat/CertifiedDataTest.java,78,"oadStats(""data/Lew.txt"", u);"
False,src/test/org/apache/commons/math/stat/CertifiedDataTest.java,src/test/org/apache/commons/math/stat/CertifiedDataTest.java,79,"ssertEquals(""Lew: std"", std, u.getStandardDeviation(), .000000000001);"
False,src/test/org/apache/commons/math/stat/CertifiedDataTest.java,src/test/org/apache/commons/math/stat/CertifiedDataTest.java,80,"ssertEquals(""Lew: mean"", mean, u.getMean(), .000000000001);"
False,src/test/org/apache/commons/math/stat/CertifiedDataTest.java,src/test/org/apache/commons/math/stat/CertifiedDataTest.java,82,"oadStats(""data/Lottery.txt"", u);"
False,src/test/org/apache/commons/math/stat/CertifiedDataTest.java,src/test/org/apache/commons/math/stat/CertifiedDataTest.java,83,"ssertEquals(""Lottery: std"", std, u.getStandardDeviation(), .000000000001);"
False,src/test/org/apache/commons/math/stat/CertifiedDataTest.java,src/test/org/apache/commons/math/stat/CertifiedDataTest.java,84,"ssertEquals(""Lottery: mean"", mean, u.getMean(), .000000000001);"
False,src/test/org/apache/commons/math/stat/CertifiedDataTest.java,src/test/org/apache/commons/math/stat/CertifiedDataTest.java,114,"oadStats(""data/Lew.txt"", u);"
False,src/test/org/apache/commons/math/stat/CertifiedDataTest.java,src/test/org/apache/commons/math/stat/CertifiedDataTest.java,115,"ssertEquals(""Lew: std"", std, u.getStandardDeviation(), .000000000001);"
False,src/test/org/apache/commons/math/stat/CertifiedDataTest.java,src/test/org/apache/commons/math/stat/CertifiedDataTest.java,116,"ssertEquals(""Lew: mean"", mean, u.getMean(), .000000000001);"
False,src/test/org/apache/commons/math/stat/CertifiedDataTest.java,src/test/org/apache/commons/math/stat/CertifiedDataTest.java,118,"oadStats(""data/Lottery.txt"", u);"
False,src/test/org/apache/commons/math/stat/CertifiedDataTest.java,src/test/org/apache/commons/math/stat/CertifiedDataTest.java,119,"ssertEquals(""Lottery: std"", std, u.getStandardDeviation(), .000000000001);"
False,src/test/org/apache/commons/math/stat/CertifiedDataTest.java,src/test/org/apache/commons/math/stat/CertifiedDataTest.java,120,"ssertEquals(""Lottery: mean"", mean, u.getMean(), .000000000001);"
True,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,2,* Copyright 2003-2004 The Apache Software Foundation.
True,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,5,* you may not use this file except in compliance with the License.
True,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,6,* You may obtain a copy of the License at
True,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,8,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,13,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,14,* limitations under the License.
True,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,17,package org.apache.commons.math.stat.data;
True,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,19,import java.io.BufferedReader;
True,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,20,import java.io.IOException;
True,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,21,import java.io.InputStreamReader;
True,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,22,import java.net.URL;
True,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,23,import java.util.HashMap;
True,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,24,import java.util.Iterator;
True,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,25,import java.util.Map;
True,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,27,import org.apache.commons.beanutils.PropertyUtils;
True,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,28,import org.apache.commons.lang.StringUtils;
True,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,29,import org.apache.commons.math.TestUtils;
True,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,30,import org.apache.commons.math.stat.DescriptiveStatistics;
True,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,31,import org.apache.commons.math.stat.SummaryStatistics;
True,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,33,import junit.framework.TestCase;
True,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,36,* @version $Revision: 1.1 $ $Date: 2004/03/18 05:52:37 $
True,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,38,public abstract class CertifiedDataAbstractTest extends TestCase {
True,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,40,private DescriptiveStatistics descriptives;
True,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,42,private SummaryStatistics summaries;
True,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,44,private Map certifiedValues;
True,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,46,protected void setUp() throws Exception {
True,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,47,descriptives = DescriptiveStatistics.newInstance();
True,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,48,summaries = SummaryStatistics.newInstance();
True,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,49,certifiedValues = new HashMap();
True,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,51,loadData();
True,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,54,private void loadData() throws IOException {
True,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,55,BufferedReader in = null;
True,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,57,try {
True,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,58,URL resourceURL = getClass().getClassLoader().getResource(getResourceName());
True,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,59,in = new BufferedReader(new InputStreamReader(resourceURL.openStream()));
True,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,61,String line = in.readLine();
True,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,62,while (line != null) {
True,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,63,line = StringUtils.trimToNull(line);
True,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,64,if (line == null) {
True,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,65,// empty line
True,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,66,"} else if (line.startsWith(""#"")) {"
True,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,67,// comment
True,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,68,} else {
True,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,69,int n = line.indexOf('=');
True,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,70,if (n == -1) {
True,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,71,// data value
True,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,72,double value = Double.parseDouble(line);
True,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,73,descriptives.addValue(value);
True,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,74,summaries.addValue(value);
True,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,75,} else {
True,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,76,// certified value
True,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,77,"String name = line.substring(0, n).trim();"
True,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,78,String valueString = line.substring(n + 1).trim();
True,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,79,Double value = new Double(valueString);
True,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,80,"certifiedValues.put(name, value);"
True,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,83,line = in.readLine();
True,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,85,} finally {
True,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,86,if (in != null) {
True,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,87,in.close();
True,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,93,* @return
True,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,95,protected abstract String getResourceName();
True,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,97,protected double getMaximumAbsoluteError() {
True,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,98,return 1.0e-5;
True,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,101,protected void tearDown() throws Exception {
True,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,102,descriptives.clear();
True,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,103,descriptives = null;
True,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,105,summaries.clear();
True,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,106,summaries = null;
True,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,108,certifiedValues.clear();
True,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,109,certifiedValues = null;
True,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,112,public void testCertifiedValues() throws Exception {
True,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,113,Iterator iter = certifiedValues.keySet().iterator();
True,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,114,while (iter.hasNext()) {
True,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,115,String name = iter.next().toString();
True,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,116,Double expectedValue = (Double)certifiedValues.get(name);
True,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,117,try {
True,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,118,"Double summariesValue = (Double)PropertyUtils.getProperty(summaries, name);"
True,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,119,"TestUtils.assertEquals(""summary value for "" + name + "" is incorrect."","
True,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,120,"summariesValue.doubleValue(), expectedValue.doubleValue(), getMaximumAbsoluteError());"
True,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,121,} catch (Exception ex) {
True,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,124,try {
True,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,125,"Double descriptivesValue = (Double)PropertyUtils.getProperty(descriptives, name);"
True,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,126,"TestUtils.assertEquals(""descriptive value for "" + name + "" is incorrect."","
True,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,127,"descriptivesValue.doubleValue(), expectedValue.doubleValue(), getMaximumAbsoluteError());"
True,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java,128,} catch (Exception ex) {
True,src/test/org/apache/commons/math/stat/data/LewTest.java,src/test/org/apache/commons/math/stat/data/LewTest.java,2,* Copyright 2004 The Apache Software Foundation.
True,src/test/org/apache/commons/math/stat/data/LewTest.java,src/test/org/apache/commons/math/stat/data/LewTest.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/test/org/apache/commons/math/stat/data/LewTest.java,src/test/org/apache/commons/math/stat/data/LewTest.java,5,* you may not use this file except in compliance with the License.
True,src/test/org/apache/commons/math/stat/data/LewTest.java,src/test/org/apache/commons/math/stat/data/LewTest.java,6,* You may obtain a copy of the License at
True,src/test/org/apache/commons/math/stat/data/LewTest.java,src/test/org/apache/commons/math/stat/data/LewTest.java,8,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/math/stat/data/LewTest.java,src/test/org/apache/commons/math/stat/data/LewTest.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/math/stat/data/LewTest.java,src/test/org/apache/commons/math/stat/data/LewTest.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/math/stat/data/LewTest.java,src/test/org/apache/commons/math/stat/data/LewTest.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/math/stat/data/LewTest.java,src/test/org/apache/commons/math/stat/data/LewTest.java,13,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/math/stat/data/LewTest.java,src/test/org/apache/commons/math/stat/data/LewTest.java,14,* limitations under the License.
True,src/test/org/apache/commons/math/stat/data/LewTest.java,src/test/org/apache/commons/math/stat/data/LewTest.java,17,package org.apache.commons.math.stat.data;
True,src/test/org/apache/commons/math/stat/data/LewTest.java,src/test/org/apache/commons/math/stat/data/LewTest.java,20,* @version $Revision: 1.1 $ $Date: 2004/03/18 05:52:37 $
True,src/test/org/apache/commons/math/stat/data/LewTest.java,src/test/org/apache/commons/math/stat/data/LewTest.java,22,public class LewTest extends CertifiedDataAbstractTest {
True,src/test/org/apache/commons/math/stat/data/LewTest.java,src/test/org/apache/commons/math/stat/data/LewTest.java,24,protected String getResourceName() {
True,src/test/org/apache/commons/math/stat/data/LewTest.java,src/test/org/apache/commons/math/stat/data/LewTest.java,25,"return ""org/apache/commons/math/stat/data/Lew.txt"";"
True,src/test/org/apache/commons/math/stat/data/LotteryTest.java,src/test/org/apache/commons/math/stat/data/LotteryTest.java,2,* Copyright 2004 The Apache Software Foundation.
True,src/test/org/apache/commons/math/stat/data/LotteryTest.java,src/test/org/apache/commons/math/stat/data/LotteryTest.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/test/org/apache/commons/math/stat/data/LotteryTest.java,src/test/org/apache/commons/math/stat/data/LotteryTest.java,5,* you may not use this file except in compliance with the License.
True,src/test/org/apache/commons/math/stat/data/LotteryTest.java,src/test/org/apache/commons/math/stat/data/LotteryTest.java,6,* You may obtain a copy of the License at
True,src/test/org/apache/commons/math/stat/data/LotteryTest.java,src/test/org/apache/commons/math/stat/data/LotteryTest.java,8,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/test/org/apache/commons/math/stat/data/LotteryTest.java,src/test/org/apache/commons/math/stat/data/LotteryTest.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/test/org/apache/commons/math/stat/data/LotteryTest.java,src/test/org/apache/commons/math/stat/data/LotteryTest.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/test/org/apache/commons/math/stat/data/LotteryTest.java,src/test/org/apache/commons/math/stat/data/LotteryTest.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/test/org/apache/commons/math/stat/data/LotteryTest.java,src/test/org/apache/commons/math/stat/data/LotteryTest.java,13,* See the License for the specific language governing permissions and
True,src/test/org/apache/commons/math/stat/data/LotteryTest.java,src/test/org/apache/commons/math/stat/data/LotteryTest.java,14,* limitations under the License.
True,src/test/org/apache/commons/math/stat/data/LotteryTest.java,src/test/org/apache/commons/math/stat/data/LotteryTest.java,17,package org.apache.commons.math.stat.data;
True,src/test/org/apache/commons/math/stat/data/LotteryTest.java,src/test/org/apache/commons/math/stat/data/LotteryTest.java,20,* @version $Revision: 1.1 $ $Date: 2004/03/18 05:52:37 $
True,src/test/org/apache/commons/math/stat/data/LotteryTest.java,src/test/org/apache/commons/math/stat/data/LotteryTest.java,22,public class LotteryTest extends CertifiedDataAbstractTest {
True,src/test/org/apache/commons/math/stat/data/LotteryTest.java,src/test/org/apache/commons/math/stat/data/LotteryTest.java,24,protected String getResourceName() {
True,src/test/org/apache/commons/math/stat/data/LotteryTest.java,src/test/org/apache/commons/math/stat/data/LotteryTest.java,25,"return ""org/apache/commons/math/stat/data/Lottery.txt"";"
