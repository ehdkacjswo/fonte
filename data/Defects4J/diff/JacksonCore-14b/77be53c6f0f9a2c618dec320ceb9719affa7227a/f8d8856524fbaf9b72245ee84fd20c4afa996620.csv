is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/com/fasterxml/jackson/core/JsonGenerationException.java,src/main/java/com/fasterxml/jackson/core/JsonGenerationException.java,18,ublic JsonGenerationException(Throwable rootCause)
True,src/main/java/com/fasterxml/jackson/core/JsonGenerationException.java,src/main/java/com/fasterxml/jackson/core/JsonGenerationException.java,18,protected JsonGenerator _processor;
True,src/main/java/com/fasterxml/jackson/core/JsonGenerationException.java,src/main/java/com/fasterxml/jackson/core/JsonGenerationException.java,20,// TODO: mark deprecated in 2.7
True,src/main/java/com/fasterxml/jackson/core/JsonGenerationException.java,src/main/java/com/fasterxml/jackson/core/JsonGenerationException.java,21,public JsonGenerationException(Throwable rootCause) {
False,src/main/java/com/fasterxml/jackson/core/JsonGenerationException.java,src/main/java/com/fasterxml/jackson/core/JsonGenerationException.java,23,ublic JsonGenerationException(String msg)
True,src/main/java/com/fasterxml/jackson/core/JsonGenerationException.java,src/main/java/com/fasterxml/jackson/core/JsonGenerationException.java,25,// TODO: mark deprecated in 2.7
True,src/main/java/com/fasterxml/jackson/core/JsonGenerationException.java,src/main/java/com/fasterxml/jackson/core/JsonGenerationException.java,26,public JsonGenerationException(String msg) {
False,src/main/java/com/fasterxml/jackson/core/JsonGenerationException.java,src/main/java/com/fasterxml/jackson/core/JsonGenerationException.java,28,"ublic JsonGenerationException(String msg, Throwable rootCause)"
True,src/main/java/com/fasterxml/jackson/core/JsonGenerationException.java,src/main/java/com/fasterxml/jackson/core/JsonGenerationException.java,30,// TODO: mark deprecated in 2.7
True,src/main/java/com/fasterxml/jackson/core/JsonGenerationException.java,src/main/java/com/fasterxml/jackson/core/JsonGenerationException.java,31,"public JsonGenerationException(String msg, Throwable rootCause) {"
True,src/main/java/com/fasterxml/jackson/core/JsonGenerationException.java,src/main/java/com/fasterxml/jackson/core/JsonGenerationException.java,32,"super(msg, null, rootCause);"
True,src/main/java/com/fasterxml/jackson/core/JsonGenerationException.java,src/main/java/com/fasterxml/jackson/core/JsonGenerationException.java,36,* @since 2.7
True,src/main/java/com/fasterxml/jackson/core/JsonGenerationException.java,src/main/java/com/fasterxml/jackson/core/JsonGenerationException.java,38,"public JsonGenerationException(Throwable rootCause, JsonGenerator g) {"
True,src/main/java/com/fasterxml/jackson/core/JsonGenerationException.java,src/main/java/com/fasterxml/jackson/core/JsonGenerationException.java,39,super(rootCause);
True,src/main/java/com/fasterxml/jackson/core/JsonGenerationException.java,src/main/java/com/fasterxml/jackson/core/JsonGenerationException.java,40,_processor = g;
True,src/main/java/com/fasterxml/jackson/core/JsonGenerationException.java,src/main/java/com/fasterxml/jackson/core/JsonGenerationException.java,44,* @since 2.7
True,src/main/java/com/fasterxml/jackson/core/JsonGenerationException.java,src/main/java/com/fasterxml/jackson/core/JsonGenerationException.java,46,"public JsonGenerationException(String msg, JsonGenerator g) {"
True,src/main/java/com/fasterxml/jackson/core/JsonGenerationException.java,src/main/java/com/fasterxml/jackson/core/JsonGenerationException.java,47,"super(msg, (JsonLocation) null);"
True,src/main/java/com/fasterxml/jackson/core/JsonGenerationException.java,src/main/java/com/fasterxml/jackson/core/JsonGenerationException.java,48,_processor = g;
True,src/main/java/com/fasterxml/jackson/core/JsonGenerationException.java,src/main/java/com/fasterxml/jackson/core/JsonGenerationException.java,52,* @since 2.7
True,src/main/java/com/fasterxml/jackson/core/JsonGenerationException.java,src/main/java/com/fasterxml/jackson/core/JsonGenerationException.java,54,"public JsonGenerationException(String msg, Throwable rootCause, JsonGenerator g) {"
True,src/main/java/com/fasterxml/jackson/core/JsonGenerationException.java,src/main/java/com/fasterxml/jackson/core/JsonGenerationException.java,56,_processor = g;
True,src/main/java/com/fasterxml/jackson/core/JsonGenerationException.java,src/main/java/com/fasterxml/jackson/core/JsonGenerationException.java,60,"* Fluent method that may be used to assign originating {@link JsonGenerator},"
True,src/main/java/com/fasterxml/jackson/core/JsonGenerationException.java,src/main/java/com/fasterxml/jackson/core/JsonGenerationException.java,61,* to be accessed using {@link #getProcessor()}.
True,src/main/java/com/fasterxml/jackson/core/JsonGenerationException.java,src/main/java/com/fasterxml/jackson/core/JsonGenerationException.java,63,* @since 2.7
True,src/main/java/com/fasterxml/jackson/core/JsonGenerationException.java,src/main/java/com/fasterxml/jackson/core/JsonGenerationException.java,65,public JsonGenerationException withGenerator(JsonGenerator g) {
True,src/main/java/com/fasterxml/jackson/core/JsonGenerationException.java,src/main/java/com/fasterxml/jackson/core/JsonGenerationException.java,66,_processor = g;
True,src/main/java/com/fasterxml/jackson/core/JsonGenerationException.java,src/main/java/com/fasterxml/jackson/core/JsonGenerationException.java,67,return this;
True,src/main/java/com/fasterxml/jackson/core/JsonGenerationException.java,src/main/java/com/fasterxml/jackson/core/JsonGenerationException.java,70,@Override
True,src/main/java/com/fasterxml/jackson/core/JsonGenerationException.java,src/main/java/com/fasterxml/jackson/core/JsonGenerationException.java,71,public JsonGenerator getProcessor() { return _processor; }
False,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,1181,"hrow new JsonGenerationException(""No native support for writing Object Ids"");"
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,1181,"throw new JsonGenerationException(""No native support for writing Object Ids"", this);"
False,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,1194,"hrow new JsonGenerationException(""No native support for writing Object Ids"");"
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,1194,"throw new JsonGenerationException(""No native support for writing Object Ids"", this);"
False,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,1209,"hrow new JsonGenerationException(""No native support for writing Type Ids"");"
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,1209,"throw new JsonGenerationException(""No native support for writing Type Ids"", this);"
False,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,1649,hrow new JsonGenerationException(msg);
True,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,src/main/java/com/fasterxml/jackson/core/JsonGenerator.java,1649,"throw new JsonGenerationException(msg, this);"
False,src/main/java/com/fasterxml/jackson/core/JsonParseException.java,src/main/java/com/fasterxml/jackson/core/JsonParseException.java,14,rivate static final long serialVersionUID = 1L;
True,src/main/java/com/fasterxml/jackson/core/JsonParseException.java,src/main/java/com/fasterxml/jackson/core/JsonParseException.java,14,private static final long serialVersionUID = 2L; // 2.7
True,src/main/java/com/fasterxml/jackson/core/JsonParseException.java,src/main/java/com/fasterxml/jackson/core/JsonParseException.java,16,protected JsonParser _processor;
True,src/main/java/com/fasterxml/jackson/core/JsonParseException.java,src/main/java/com/fasterxml/jackson/core/JsonParseException.java,18,// TODO: mark deprecated in 2.7
True,src/main/java/com/fasterxml/jackson/core/JsonParseException.java,src/main/java/com/fasterxml/jackson/core/JsonParseException.java,23,// TODO: mark deprecated in 2.7
True,src/main/java/com/fasterxml/jackson/core/JsonParseException.java,src/main/java/com/fasterxml/jackson/core/JsonParseException.java,29,"* Constructor that uses current parsing location as location, and"
True,src/main/java/com/fasterxml/jackson/core/JsonParseException.java,src/main/java/com/fasterxml/jackson/core/JsonParseException.java,30,* sets processor (accessible via {@link #getProcessor()}) to
True,src/main/java/com/fasterxml/jackson/core/JsonParseException.java,src/main/java/com/fasterxml/jackson/core/JsonParseException.java,31,* specified parser.
True,src/main/java/com/fasterxml/jackson/core/JsonParseException.java,src/main/java/com/fasterxml/jackson/core/JsonParseException.java,33,* @since 2.7
True,src/main/java/com/fasterxml/jackson/core/JsonParseException.java,src/main/java/com/fasterxml/jackson/core/JsonParseException.java,35,"public JsonParseException(JsonParser p, String msg) {"
True,src/main/java/com/fasterxml/jackson/core/JsonParseException.java,src/main/java/com/fasterxml/jackson/core/JsonParseException.java,36,"super(msg, (p == null) ? null : p.getCurrentLocation());"
True,src/main/java/com/fasterxml/jackson/core/JsonParseException.java,src/main/java/com/fasterxml/jackson/core/JsonParseException.java,37,_processor = p;
True,src/main/java/com/fasterxml/jackson/core/JsonParseException.java,src/main/java/com/fasterxml/jackson/core/JsonParseException.java,41,* @since 2.7
True,src/main/java/com/fasterxml/jackson/core/JsonParseException.java,src/main/java/com/fasterxml/jackson/core/JsonParseException.java,43,"public JsonParseException(JsonParser p, String msg, Throwable root) {"
True,src/main/java/com/fasterxml/jackson/core/JsonParseException.java,src/main/java/com/fasterxml/jackson/core/JsonParseException.java,44,"super(msg, (p == null) ? null : p.getCurrentLocation(), root);"
True,src/main/java/com/fasterxml/jackson/core/JsonParseException.java,src/main/java/com/fasterxml/jackson/core/JsonParseException.java,45,_processor = p;
True,src/main/java/com/fasterxml/jackson/core/JsonParseException.java,src/main/java/com/fasterxml/jackson/core/JsonParseException.java,49,* @since 2.7
True,src/main/java/com/fasterxml/jackson/core/JsonParseException.java,src/main/java/com/fasterxml/jackson/core/JsonParseException.java,51,"public JsonParseException(JsonParser p, String msg, JsonLocation loc) {"
True,src/main/java/com/fasterxml/jackson/core/JsonParseException.java,src/main/java/com/fasterxml/jackson/core/JsonParseException.java,52,"super(msg, loc);"
True,src/main/java/com/fasterxml/jackson/core/JsonParseException.java,src/main/java/com/fasterxml/jackson/core/JsonParseException.java,53,_processor = p;
True,src/main/java/com/fasterxml/jackson/core/JsonParseException.java,src/main/java/com/fasterxml/jackson/core/JsonParseException.java,57,* @since 2.7
True,src/main/java/com/fasterxml/jackson/core/JsonParseException.java,src/main/java/com/fasterxml/jackson/core/JsonParseException.java,59,"public JsonParseException(JsonParser p, String msg, JsonLocation loc, Throwable root) {"
True,src/main/java/com/fasterxml/jackson/core/JsonParseException.java,src/main/java/com/fasterxml/jackson/core/JsonParseException.java,60,"super(msg, loc, root);"
True,src/main/java/com/fasterxml/jackson/core/JsonParseException.java,src/main/java/com/fasterxml/jackson/core/JsonParseException.java,61,_processor = p;
True,src/main/java/com/fasterxml/jackson/core/JsonParseException.java,src/main/java/com/fasterxml/jackson/core/JsonParseException.java,65,"* Fluent method that may be used to assign originating {@link JsonParser},"
True,src/main/java/com/fasterxml/jackson/core/JsonParseException.java,src/main/java/com/fasterxml/jackson/core/JsonParseException.java,66,* to be accessed using {@link #getProcessor()}.
True,src/main/java/com/fasterxml/jackson/core/JsonParseException.java,src/main/java/com/fasterxml/jackson/core/JsonParseException.java,68,* @since 2.7
True,src/main/java/com/fasterxml/jackson/core/JsonParseException.java,src/main/java/com/fasterxml/jackson/core/JsonParseException.java,70,public JsonParseException withParser(JsonParser p) {
True,src/main/java/com/fasterxml/jackson/core/JsonParseException.java,src/main/java/com/fasterxml/jackson/core/JsonParseException.java,71,_processor = p;
True,src/main/java/com/fasterxml/jackson/core/JsonParseException.java,src/main/java/com/fasterxml/jackson/core/JsonParseException.java,72,return this;
True,src/main/java/com/fasterxml/jackson/core/JsonParseException.java,src/main/java/com/fasterxml/jackson/core/JsonParseException.java,75,@Override
True,src/main/java/com/fasterxml/jackson/core/JsonParseException.java,src/main/java/com/fasterxml/jackson/core/JsonParseException.java,76,public JsonParser getProcessor() {
True,src/main/java/com/fasterxml/jackson/core/JsonParseException.java,src/main/java/com/fasterxml/jackson/core/JsonParseException.java,77,return _processor;
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,1175,"hrow new JsonParseException(""Current token (""+t+"") not of boolean type"", getCurrentLocation());"
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,1175,"throw new JsonParseException(this,"
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,1176,"String.format(""Current token (%s) not of boolean type"", t));"
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,1581,"eturn new JsonParseException(msg, getCurrentLocation());"
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,1582,"return new JsonParseException(this, msg);"
False,src/main/java/com/fasterxml/jackson/core/JsonProcessingException.java,src/main/java/com/fasterxml/jackson/core/JsonProcessingException.java,48,ublic JsonLocation getLocation() { return _location; }
True,src/main/java/com/fasterxml/jackson/core/JsonProcessingException.java,src/main/java/com/fasterxml/jackson/core/JsonProcessingException.java,54,public JsonLocation getLocation() { return _location; }
True,src/main/java/com/fasterxml/jackson/core/JsonProcessingException.java,src/main/java/com/fasterxml/jackson/core/JsonProcessingException.java,66,* Method that allows accessing underlying processor that triggered
True,src/main/java/com/fasterxml/jackson/core/JsonProcessingException.java,src/main/java/com/fasterxml/jackson/core/JsonProcessingException.java,67,* this exception; typically either {@link JsonParser} or {@link JsonGenerator}
True,src/main/java/com/fasterxml/jackson/core/JsonProcessingException.java,src/main/java/com/fasterxml/jackson/core/JsonProcessingException.java,68,* for exceptions that originate from streaming API.
True,src/main/java/com/fasterxml/jackson/core/JsonProcessingException.java,src/main/java/com/fasterxml/jackson/core/JsonProcessingException.java,69,* Note that it is possible that `null` may be returned if code throwing
True,src/main/java/com/fasterxml/jackson/core/JsonProcessingException.java,src/main/java/com/fasterxml/jackson/core/JsonProcessingException.java,70,* exception either has no access to processor; or has not been retrofitted
True,src/main/java/com/fasterxml/jackson/core/JsonProcessingException.java,src/main/java/com/fasterxml/jackson/core/JsonProcessingException.java,71,* to set it; this means that caller needs to take care to check for nulls.
True,src/main/java/com/fasterxml/jackson/core/JsonProcessingException.java,src/main/java/com/fasterxml/jackson/core/JsonProcessingException.java,72,"* Subtypes override this method with co-variant return type, for more"
True,src/main/java/com/fasterxml/jackson/core/JsonProcessingException.java,src/main/java/com/fasterxml/jackson/core/JsonProcessingException.java,73,* type-safe access.
True,src/main/java/com/fasterxml/jackson/core/JsonProcessingException.java,src/main/java/com/fasterxml/jackson/core/JsonProcessingException.java,75,"* @return Originating processor, if available; null if not."
True,src/main/java/com/fasterxml/jackson/core/JsonProcessingException.java,src/main/java/com/fasterxml/jackson/core/JsonProcessingException.java,77,* @since 2.7
True,src/main/java/com/fasterxml/jackson/core/JsonProcessingException.java,src/main/java/com/fasterxml/jackson/core/JsonProcessingException.java,79,public Object getProcessor() { return null; }
False,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,533,"eturn new JsonParseException(msg, getCurrentLocation(), t);"
True,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,533,"return new JsonParseException(this, msg, t);"
False,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,23," We need to store a back-reference here to parser/generator, unfortunately."
True,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,23,* We need to store a back-reference here to parser/generator.
True,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,68,* @since 2.7
True,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,70,public Object getSource() {
True,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,src/main/java/com/fasterxml/jackson/core/json/DupDetector.java,71,return _source;
False,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,187,"hrow new JsonParseException(""Duplicate field '""+name+""'"", dd.findLocation());"
True,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,187,Object src = dd.getSource();
True,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,188,"throw new JsonParseException(((src instanceof JsonGenerator) ? ((JsonParser) src) : null),"
True,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonReadContext.java,189,"""Duplicate field '""+name+""'"");"
False,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,159,"f (dd.isDup(name)) { throw new JsonGenerationException(""Duplicate field '""+name+""'""); }"
True,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,159,if (dd.isDup(name)) {
True,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,160,Object src = dd.getSource();
True,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,161,"throw new JsonGenerationException(""Duplicate field '""+name+""'"","
True,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,src/main/java/com/fasterxml/jackson/core/json/JsonWriteContext.java,162,((src instanceof JsonGenerator) ? ((JsonGenerator) src) : null));
True,src/test/java/com/fasterxml/jackson/core/TestExceptions.java,src/test/java/com/fasterxml/jackson/core/TestExceptions.java,3,import java.io.StringWriter;
False,src/test/java/com/fasterxml/jackson/core/TestExceptions.java,src/test/java/com/fasterxml/jackson/core/TestExceptions.java,6,/ For [Issue#10]
True,src/test/java/com/fasterxml/jackson/core/TestExceptions.java,src/test/java/com/fasterxml/jackson/core/TestExceptions.java,7,private final JsonFactory JSON_F = new JsonFactory();
True,src/test/java/com/fasterxml/jackson/core/TestExceptions.java,src/test/java/com/fasterxml/jackson/core/TestExceptions.java,9,// For [core#10]
False,src/test/java/com/fasterxml/jackson/core/TestExceptions.java,src/test/java/com/fasterxml/jackson/core/TestExceptions.java,9,"sonProcessingException exc = new JsonParseException(""Foobar"", JsonLocation.NA);"
True,src/test/java/com/fasterxml/jackson/core/TestExceptions.java,src/test/java/com/fasterxml/jackson/core/TestExceptions.java,12,"JsonProcessingException exc = new JsonParseException(null, ""Foobar"", JsonLocation.NA);"
True,src/test/java/com/fasterxml/jackson/core/TestExceptions.java,src/test/java/com/fasterxml/jackson/core/TestExceptions.java,19,// [core#198]
True,src/test/java/com/fasterxml/jackson/core/TestExceptions.java,src/test/java/com/fasterxml/jackson/core/TestExceptions.java,20,public void testAccessToParser() throws Exception
True,src/test/java/com/fasterxml/jackson/core/TestExceptions.java,src/test/java/com/fasterxml/jackson/core/TestExceptions.java,22,"JsonParser p = JSON_F.createParser(""{}"");"
True,src/test/java/com/fasterxml/jackson/core/TestExceptions.java,src/test/java/com/fasterxml/jackson/core/TestExceptions.java,23,"assertToken(JsonToken.START_OBJECT, p.nextToken());"
True,src/test/java/com/fasterxml/jackson/core/TestExceptions.java,src/test/java/com/fasterxml/jackson/core/TestExceptions.java,24,"JsonParseException e = new JsonParseException(p, ""Test!"");"
True,src/test/java/com/fasterxml/jackson/core/TestExceptions.java,src/test/java/com/fasterxml/jackson/core/TestExceptions.java,25,"assertSame(p, e.getProcessor());"
True,src/test/java/com/fasterxml/jackson/core/TestExceptions.java,src/test/java/com/fasterxml/jackson/core/TestExceptions.java,26,"assertEquals(""Test!"", e.getOriginalMessage());"
True,src/test/java/com/fasterxml/jackson/core/TestExceptions.java,src/test/java/com/fasterxml/jackson/core/TestExceptions.java,27,JsonLocation loc = e.getLocation();
True,src/test/java/com/fasterxml/jackson/core/TestExceptions.java,src/test/java/com/fasterxml/jackson/core/TestExceptions.java,28,assertNotNull(loc);
True,src/test/java/com/fasterxml/jackson/core/TestExceptions.java,src/test/java/com/fasterxml/jackson/core/TestExceptions.java,29,"assertEquals(2, loc.getColumnNr());"
True,src/test/java/com/fasterxml/jackson/core/TestExceptions.java,src/test/java/com/fasterxml/jackson/core/TestExceptions.java,30,"assertEquals(1, loc.getLineNr());"
True,src/test/java/com/fasterxml/jackson/core/TestExceptions.java,src/test/java/com/fasterxml/jackson/core/TestExceptions.java,31,p.close();
True,src/test/java/com/fasterxml/jackson/core/TestExceptions.java,src/test/java/com/fasterxml/jackson/core/TestExceptions.java,34,// [core#198]
True,src/test/java/com/fasterxml/jackson/core/TestExceptions.java,src/test/java/com/fasterxml/jackson/core/TestExceptions.java,35,public void testAccessToGenerator() throws Exception
True,src/test/java/com/fasterxml/jackson/core/TestExceptions.java,src/test/java/com/fasterxml/jackson/core/TestExceptions.java,37,StringWriter w = new StringWriter();
True,src/test/java/com/fasterxml/jackson/core/TestExceptions.java,src/test/java/com/fasterxml/jackson/core/TestExceptions.java,38,JsonGenerator g = JSON_F.createGenerator(w);
True,src/test/java/com/fasterxml/jackson/core/TestExceptions.java,src/test/java/com/fasterxml/jackson/core/TestExceptions.java,39,g.writeStartObject();
True,src/test/java/com/fasterxml/jackson/core/TestExceptions.java,src/test/java/com/fasterxml/jackson/core/TestExceptions.java,40,"JsonGenerationException e = new JsonGenerationException(""Test!"", g);"
True,src/test/java/com/fasterxml/jackson/core/TestExceptions.java,src/test/java/com/fasterxml/jackson/core/TestExceptions.java,41,"assertSame(g, e.getProcessor());"
True,src/test/java/com/fasterxml/jackson/core/TestExceptions.java,src/test/java/com/fasterxml/jackson/core/TestExceptions.java,42,"assertEquals(""Test!"", e.getOriginalMessage());"
True,src/test/java/com/fasterxml/jackson/core/TestExceptions.java,src/test/java/com/fasterxml/jackson/core/TestExceptions.java,43,g.close();
