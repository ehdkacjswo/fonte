is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,105,* Feature that determines whether we will use {@link BufferRecycler} with
True,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,106,"* {@link ThreadLocal} and {@link SoftReference}, for efficient reuse of"
True,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,107,* underlying input/output buffers.
True,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,108,* This usually makes sense on normal J2SE/J2EE server-side processing;
True,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,109,* but may not make sense on platforms where {@link SoftReference} handling
True,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,110,"* is broken (like Android), or if there are retention issues due to"
True,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,111,* {@link ThreadLocal} (see
True,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,112,"* <a href=""https://github.com/FasterXML/jackson-core/issues/189"">Issue #189</a>"
True,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,113,* for a possible case)
True,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,115,* @since 2.6
True,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,117,USE_THREAD_LOCAL_FOR_BUFFER_RECYCLING(true)
False,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,1387,oftReference<BufferRecycler> ref = _recyclerRef.get();
False,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,1388,ufferRecycler br = (ref == null) ? null : ref.get();
True,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,1402,BufferRecycler br;
False,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,1390,f (br == null) {
True,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,1404,"/* 23-Apr-2015, tatu: Let's allow disabling of buffer recycling"
True,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,1405,"*   scheme, for cases where it is considered harmful (possibly"
True,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,1406,"*   on Android, for example)"
True,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,1408,if (isEnabled(Feature.USE_THREAD_LOCAL_FOR_BUFFER_RECYCLING)) {
True,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,1409,SoftReference<BufferRecycler> ref = _recyclerRef.get();
True,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,1410,br = (ref == null) ? null : ref.get();
True,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,1412,if (br == null) {
True,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,1413,br = new BufferRecycler();
True,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,1414,_recyclerRef.set(new SoftReference<BufferRecycler>(br));
True,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,1416,} else {
False,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,src/main/java/com/fasterxml/jackson/core/JsonFactory.java,1392,recyclerRef.set(new SoftReference<BufferRecycler>(br));
False,src/test/java/com/fasterxml/jackson/core/json/TestJsonFactory.java,src/test/java/com/fasterxml/jackson/core/json/JsonFactoryTest.java,7,ublic class TestJsonFactory
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonFactory.java,src/test/java/com/fasterxml/jackson/core/json/JsonFactoryTest.java,7,public class JsonFactoryTest
False,src/test/java/com/fasterxml/jackson/core/json/TestJsonFactory.java,src/test/java/com/fasterxml/jackson/core/json/JsonFactoryTest.java,21,ublic void testParserFeatures() throws Exception
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonFactory.java,src/test/java/com/fasterxml/jackson/core/json/JsonFactoryTest.java,21,public void testFactoryFeatures() throws Exception
False,src/test/java/com/fasterxml/jackson/core/json/TestJsonFactory.java,src/test/java/com/fasterxml/jackson/core/json/JsonFactoryTest.java,24,ssertNull(f.getCodec());
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonFactory.java,src/test/java/com/fasterxml/jackson/core/json/JsonFactoryTest.java,30,"// by default, should be enabled"
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonFactory.java,src/test/java/com/fasterxml/jackson/core/json/JsonFactoryTest.java,31,assertTrue(f.isEnabled(JsonFactory.Feature.USE_THREAD_LOCAL_FOR_BUFFER_RECYCLING));
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonFactory.java,src/test/java/com/fasterxml/jackson/core/json/JsonFactoryTest.java,32,"f.configure(JsonFactory.Feature.USE_THREAD_LOCAL_FOR_BUFFER_RECYCLING, false);"
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonFactory.java,src/test/java/com/fasterxml/jackson/core/json/JsonFactoryTest.java,33,assertFalse(f.isEnabled(JsonFactory.Feature.USE_THREAD_LOCAL_FOR_BUFFER_RECYCLING));
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonFactory.java,src/test/java/com/fasterxml/jackson/core/json/JsonFactoryTest.java,36,// for [core#189]: verify that it's ok to disable recycling
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonFactory.java,src/test/java/com/fasterxml/jackson/core/json/JsonFactoryTest.java,37,"// Basically simply exercises basic functionality, to ensure"
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonFactory.java,src/test/java/com/fasterxml/jackson/core/json/JsonFactoryTest.java,38,// there are no obvious problems; needed since testing never
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonFactory.java,src/test/java/com/fasterxml/jackson/core/json/JsonFactoryTest.java,39,// disables this handling otherwise
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonFactory.java,src/test/java/com/fasterxml/jackson/core/json/JsonFactoryTest.java,40,public void testDisablingBufferRecycling() throws Exception
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonFactory.java,src/test/java/com/fasterxml/jackson/core/json/JsonFactoryTest.java,42,JsonFactory f = new JsonFactory();
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonFactory.java,src/test/java/com/fasterxml/jackson/core/json/JsonFactoryTest.java,44,f.disable(JsonFactory.Feature.USE_THREAD_LOCAL_FOR_BUFFER_RECYCLING);
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonFactory.java,src/test/java/com/fasterxml/jackson/core/json/JsonFactoryTest.java,46,"// First, generation"
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonFactory.java,src/test/java/com/fasterxml/jackson/core/json/JsonFactoryTest.java,47,for (int i = 0; i < 3; ++i) {
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonFactory.java,src/test/java/com/fasterxml/jackson/core/json/JsonFactoryTest.java,48,StringWriter w = new StringWriter();
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonFactory.java,src/test/java/com/fasterxml/jackson/core/json/JsonFactoryTest.java,49,JsonGenerator gen = f.createGenerator(w);
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonFactory.java,src/test/java/com/fasterxml/jackson/core/json/JsonFactoryTest.java,50,gen.writeStartObject();
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonFactory.java,src/test/java/com/fasterxml/jackson/core/json/JsonFactoryTest.java,51,gen.writeEndObject();
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonFactory.java,src/test/java/com/fasterxml/jackson/core/json/JsonFactoryTest.java,52,gen.close();
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonFactory.java,src/test/java/com/fasterxml/jackson/core/json/JsonFactoryTest.java,53,"assertEquals(""{}"", w.toString());"
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonFactory.java,src/test/java/com/fasterxml/jackson/core/json/JsonFactoryTest.java,56,for (int i = 0; i < 3; ++i) {
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonFactory.java,src/test/java/com/fasterxml/jackson/core/json/JsonFactoryTest.java,57,ByteArrayOutputStream bytes = new ByteArrayOutputStream();
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonFactory.java,src/test/java/com/fasterxml/jackson/core/json/JsonFactoryTest.java,58,JsonGenerator gen = f.createGenerator(bytes);
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonFactory.java,src/test/java/com/fasterxml/jackson/core/json/JsonFactoryTest.java,59,gen.writeStartArray();
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonFactory.java,src/test/java/com/fasterxml/jackson/core/json/JsonFactoryTest.java,60,gen.writeEndArray();
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonFactory.java,src/test/java/com/fasterxml/jackson/core/json/JsonFactoryTest.java,61,gen.close();
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonFactory.java,src/test/java/com/fasterxml/jackson/core/json/JsonFactoryTest.java,62,"assertEquals(""[]"", bytes.toString(""UTF-8""));"
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonFactory.java,src/test/java/com/fasterxml/jackson/core/json/JsonFactoryTest.java,65,// Then parsing:
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonFactory.java,src/test/java/com/fasterxml/jackson/core/json/JsonFactoryTest.java,66,for (int i = 0; i < 3; ++i) {
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonFactory.java,src/test/java/com/fasterxml/jackson/core/json/JsonFactoryTest.java,67,"JsonParser p = f.createParser(""{}"");"
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonFactory.java,src/test/java/com/fasterxml/jackson/core/json/JsonFactoryTest.java,68,"assertToken(JsonToken.START_OBJECT, p.nextToken());"
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonFactory.java,src/test/java/com/fasterxml/jackson/core/json/JsonFactoryTest.java,69,"assertToken(JsonToken.END_OBJECT, p.nextToken());"
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonFactory.java,src/test/java/com/fasterxml/jackson/core/json/JsonFactoryTest.java,70,assertNull(p.nextToken());
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonFactory.java,src/test/java/com/fasterxml/jackson/core/json/JsonFactoryTest.java,71,p.close();
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonFactory.java,src/test/java/com/fasterxml/jackson/core/json/JsonFactoryTest.java,73,"p = f.createParser(""{}"".getBytes(""UTF-8""));"
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonFactory.java,src/test/java/com/fasterxml/jackson/core/json/JsonFactoryTest.java,74,"assertToken(JsonToken.START_OBJECT, p.nextToken());"
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonFactory.java,src/test/java/com/fasterxml/jackson/core/json/JsonFactoryTest.java,75,"assertToken(JsonToken.END_OBJECT, p.nextToken());"
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonFactory.java,src/test/java/com/fasterxml/jackson/core/json/JsonFactoryTest.java,76,assertNull(p.nextToken());
True,src/test/java/com/fasterxml/jackson/core/json/TestJsonFactory.java,src/test/java/com/fasterxml/jackson/core/json/JsonFactoryTest.java,77,p.close();
