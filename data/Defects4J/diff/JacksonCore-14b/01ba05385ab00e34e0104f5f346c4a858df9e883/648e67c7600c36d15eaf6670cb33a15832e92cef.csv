is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,36,rivate final static int MAX_BYTE_I = (int) Byte.MAX_VALUE;
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,36,"// as per [JACKSON-804], allow range up to and including 255"
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,37,private final static int MAX_BYTE_I = (int) 255;
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,829,"// [JACKSON-804]: Let's actually allow range of [-128, 255], as those are uniquely mapped"
True,src/main/java/com/fasterxml/jackson/core/JsonParser.java,src/main/java/com/fasterxml/jackson/core/JsonParser.java,830,"//  (instead of just signed range of [-128, 127])"
False,src/main/java/com/fasterxml/jackson/core/JsonToken.java,src/main/java/com/fasterxml/jackson/core/JsonToken.java,66," {@link JsonNode}-based JSON trees, Maps, Lists and such)."
True,src/main/java/com/fasterxml/jackson/core/JsonToken.java,src/main/java/com/fasterxml/jackson/core/JsonToken.java,66,"* <code>JsonNode</code>-based JSON trees, Maps, Lists and such)."
False,src/main/java/com/fasterxml/jackson/core/TreeNode.java,src/main/java/com/fasterxml/jackson/core/TreeNode.java,35," If this node is a numeric type (as per {@link #isNumber}),"
True,src/main/java/com/fasterxml/jackson/core/TreeNode.java,src/main/java/com/fasterxml/jackson/core/TreeNode.java,35,"* If this node is a numeric type (as per {@link JsonToken#isNumeric}),"
