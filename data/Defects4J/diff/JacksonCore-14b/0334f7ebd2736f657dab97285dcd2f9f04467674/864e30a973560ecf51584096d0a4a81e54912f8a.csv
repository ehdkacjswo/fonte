is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/com/fasterxml/jackson/core/TreeNode.java,src/main/java/com/fasterxml/jackson/core/TreeNode.java,264,*<p>
True,src/main/java/com/fasterxml/jackson/core/TreeNode.java,src/main/java/com/fasterxml/jackson/core/TreeNode.java,265,"* NOTE: constructed parser instance will NOT initially point to a token,"
True,src/main/java/com/fasterxml/jackson/core/TreeNode.java,src/main/java/com/fasterxml/jackson/core/TreeNode.java,266,"* so before passing it to deserializers, it is typically necessary to"
True,src/main/java/com/fasterxml/jackson/core/TreeNode.java,src/main/java/com/fasterxml/jackson/core/TreeNode.java,267,* advance it to the first available token by calling {@link JsonParser#nextToken()}.
True,src/main/java/com/fasterxml/jackson/core/TreeNode.java,src/main/java/com/fasterxml/jackson/core/TreeNode.java,268,*<p>
True,src/main/java/com/fasterxml/jackson/core/TreeNode.java,src/main/java/com/fasterxml/jackson/core/TreeNode.java,269,* Also note that calling this method will <b>NOT</b> pass {@link ObjectCodec}
True,src/main/java/com/fasterxml/jackson/core/TreeNode.java,src/main/java/com/fasterxml/jackson/core/TreeNode.java,270,"* reference, so data-binding callback methods like {@link JsonParser#readValueAs(Class)}"
True,src/main/java/com/fasterxml/jackson/core/TreeNode.java,src/main/java/com/fasterxml/jackson/core/TreeNode.java,271,* will not work with calling {@link JsonParser#setCodec}).
True,src/main/java/com/fasterxml/jackson/core/TreeNode.java,src/main/java/com/fasterxml/jackson/core/TreeNode.java,272,* It is often better to call {@link #traverse(ObjectCodec)} to pass the codec explicitly.
True,src/main/java/com/fasterxml/jackson/core/TreeNode.java,src/main/java/com/fasterxml/jackson/core/TreeNode.java,280,*<p>
True,src/main/java/com/fasterxml/jackson/core/TreeNode.java,src/main/java/com/fasterxml/jackson/core/TreeNode.java,281,"* NOTE: constructed parser instance will NOT initially point to a token,"
True,src/main/java/com/fasterxml/jackson/core/TreeNode.java,src/main/java/com/fasterxml/jackson/core/TreeNode.java,282,"* so before passing it to deserializers, it is typically necessary to"
True,src/main/java/com/fasterxml/jackson/core/TreeNode.java,src/main/java/com/fasterxml/jackson/core/TreeNode.java,283,* advance it to the first available token by calling {@link JsonParser#nextToken()}.
False,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,169,rotected final boolean loadMore()
False,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,170,hrows IOException
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,169,protected final boolean loadMore() throws IOException
False,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,176,"nt count = _inputStream.read(_inputBuffer, 0, _inputBuffer.length);"
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,175,int space = _inputBuffer.length;
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,176,if (space == 0) { // only occurs when we've been closed
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,177,return false;
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,180,"int count = _inputStream.read(_inputBuffer, 0, space);"
False,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,196,rotected final boolean _loadToHaveAtLeast(int minAvailable)
False,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,197,hrows IOException
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,200,protected final boolean _loadToHaveAtLeast(int minAvailable) throws IOException
False,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,260,inputBuffer = null;
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,263,"/* 21-Nov-2014, tatu: Let's not set it to null; this way should"
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,264,*   get slightly more meaningful error messages in case someone
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,265,"*   closes parser indirectly, without realizing."
True,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java,267,_inputBuffer = ByteArrayBuilder.NO_BYTES;
False,src/main/java/com/fasterxml/jackson/core/util/ByteArrayBuilder.java,src/main/java/com/fasterxml/jackson/core/util/ByteArrayBuilder.java,26,rivate final static byte[] NO_BYTES = new byte[0];
True,src/main/java/com/fasterxml/jackson/core/util/ByteArrayBuilder.java,src/main/java/com/fasterxml/jackson/core/util/ByteArrayBuilder.java,26,public final static byte[] NO_BYTES = new byte[0];
