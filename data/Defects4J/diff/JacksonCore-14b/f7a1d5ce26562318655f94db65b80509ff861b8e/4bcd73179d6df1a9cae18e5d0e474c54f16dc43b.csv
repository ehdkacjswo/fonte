is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,760,"public String addName(String name, int q1) {"
True,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,761,_verifySharing();
True,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,762,if (_intern) {
True,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,763,name = InternCache.instance.intern(name);
True,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,765,int offset = _findOffsetForAdd(calcHash(q1));
True,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,766,_hashArea[offset] = q1;
True,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,767,_hashArea[offset+3] = 1;
True,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,768,_names[offset >> 2] = name;
True,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,769,++_count;
True,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,770,_verifyNeedForRehash();
True,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,771,return name;
True,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,774,"public String addName(String name, int q1, int q2) {"
True,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,775,_verifySharing();
True,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,776,if (_intern) {
True,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,777,name = InternCache.instance.intern(name);
True,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,779,"int hash = (q2 == 0) ? calcHash(q1) : calcHash(q1, q2);"
True,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,780,int offset = _findOffsetForAdd(hash);
True,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,781,_hashArea[offset] = q1;
True,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,782,_hashArea[offset+1] = q2;
True,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,783,_hashArea[offset+3] = 1;
True,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,784,_names[offset >> 2] = name;
True,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,785,++_count;
True,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,786,_verifyNeedForRehash();
True,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,787,return name;
False,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,762,verifyRehashAndSharing();
True,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,792,_verifySharing();
True,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,837,_verifyNeedForRehash();
True,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,838,return name;
True,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,841,private void _verifyNeedForRehash() {
False,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,818,/ !!! SANITY CHECK -- may uncomment for testing
False,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,820,nt pri = primaryCount();
False,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,821,nt sec = secondaryCount();
False,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,822,nt tert = tertiaryCount();
False,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,823,nt spill = spilloverCount();
False,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,824,nt sum = pri+sec+tert+spill;
False,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,826,f (sum != _count) {
False,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,827,nt total = totalCount();
False,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,828,"ystem.out.printf(""Mismatch adding '%s' at %d (qlen %d)/%d: %d/%d/%d/%d=%d, total=%d, count=%d\n"","
False,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,829,"ame, offset, qlen, _hashSize<<2,"
False,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,830,"ri, sec, tert, spill, sum, total, _count);"
False,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,834,eturn name;
False,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,837,rivate void _verifyRehashAndSharing()
True,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,853,private void _verifySharing()
