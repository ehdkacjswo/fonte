is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,653,"/ Since tertiary uses 8 slots, let's loop"
False,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,654,or (int end = offset + 32; offset < end; offset += 4) {
False,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,659,/ then check up to 4 slots; don't worry about empty slots yet
False,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,660,f ((q1 == hashArea[offset]) && (1 == hashArea[offset+3])) {
False,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,661,eturn _names[offset >> 2];
False,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,663,ffset += 4;
False,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,664,f ((q1 == hashArea[offset]) && (1 == hashArea[offset+3])) {
False,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,665,eturn _names[offset >> 2];
False,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,667,ffset += 4;
False,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,668,f ((q1 == hashArea[offset]) && (1 == hashArea[offset+3])) {
False,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,669,eturn _names[offset >> 2];
False,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,671,ffset += 4;
False,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,672,nt len = hashArea[offset+3];
False,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,673,f ((q1 == hashArea[offset]) && (1 == len)) {
False,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,674,eturn _names[offset >> 2];
True,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,650,"// Since tertiary uses 4 slots (of 4 ints), let's loop"
True,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,651,for (int end = offset + 16; offset < end; offset += 4) {
True,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,652,int len = hashArea[offset+3];
True,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,653,if ((q1 == hashArea[offset]) && (1 == len)) {
True,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,654,return _names[offset >> 2];
True,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,656,if (len == 0) {
True,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,657,return null;
False,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,676,"/ and only at this point see if last slot was occupied or not, to see whether to continue"
False,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,677,f (len != 0) {
False,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,678,/ shared spillover starts at 7/8 of the main hash area
False,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,679,"/ (which is sized at 2 * _hashSize), so:"
False,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,680,or (offset = _spilloverStart(); offset < _spilloverEnd; offset += 4) {
False,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,681,f ((q1 == hashArea[offset]) && (1 == hashArea[offset+3])) {
False,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,682,eturn _names[offset >> 2];
True,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,660,"// but if tertiary full, check out spill-over area as last resort"
True,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,661,// shared spillover starts at 7/8 of the main hash area
True,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,662,"// (which is sized at 2 * _hashSize), so:"
True,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,663,for (offset = _spilloverStart(); offset < _spilloverEnd; offset += 4) {
True,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,664,if ((q1 == hashArea[offset]) && (1 == hashArea[offset+3])) {
True,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,665,return _names[offset >> 2];
False,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,695,f ((q1 == hashArea[offset]) && (q2 == hashArea[offset+1]) && (2 == hashArea[offset+3])) {
False,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,696,eturn _names[offset >> 2];
False,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,698,ffset += 4;
False,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,699,f ((q1 == hashArea[offset]) && (q2 == hashArea[offset+1]) && (2 == hashArea[offset+3])) {
False,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,700,eturn _names[offset >> 2];
False,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,702,ffset += 4;
False,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,703,f ((q1 == hashArea[offset]) && (q2 == hashArea[offset+1]) && (2 == hashArea[offset+3])) {
False,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,704,eturn _names[offset >> 2];
False,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,706,ffset += 4;
False,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,707,nt len = hashArea[offset+3];
False,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,708,f ((q1 == hashArea[offset]) && (q2 == hashArea[offset+1]) && (2 == len)) {
False,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,709,eturn _names[offset >> 2];
True,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,676,for (int end = offset + 16; offset < end; offset += 4) {
True,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,677,int len = hashArea[offset+3];
True,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,678,if ((q1 == hashArea[offset]) && (q2 == hashArea[offset+1]) && (2 == len)) {
True,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,679,return _names[offset >> 2];
True,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,681,if (len == 0) {
True,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,682,return null;
False,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,711,"/ and only at this point see if last slot was occupied or not, to see whether to continue"
False,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,712,f (len != 0) {
False,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,713,/ shared spillover starts at 7/8 of the main hash area
False,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,714,"/ (which is sized at 2 * _hashSize), so:"
False,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,715,or (offset = _spilloverStart(); offset < _spilloverEnd; offset += 4) {
False,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,716,f ((q1 == hashArea[offset]) && (q2 == hashArea[offset+1]) && (2 == hashArea[offset+3])) {
False,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,717,eturn _names[offset >> 2];
True,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,685,for (offset = _spilloverStart(); offset < _spilloverEnd; offset += 4) {
True,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,686,if ((q1 == hashArea[offset]) && (q2 == hashArea[offset+1]) && (2 == hashArea[offset+3])) {
True,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,687,return _names[offset >> 2];
False,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,730,f ((q1 == hashArea[offset]) && (q2 == hashArea[offset+1]) && (q3 == hashArea[offset+2]) && (3 == hashArea[offset+3])) {
False,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,731,eturn _names[offset >> 2];
False,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,733,ffset += 4;
False,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,734,f ((q1 == hashArea[offset]) && (q2 == hashArea[offset+1]) && (q3 == hashArea[offset+2]) && (3 == hashArea[offset+3])) {
False,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,735,eturn _names[offset >> 2];
False,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,737,ffset += 4;
False,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,738,f ((q1 == hashArea[offset]) && (q2 == hashArea[offset+1]) && (q3 == hashArea[offset+2]) && (3 == hashArea[offset+3])) {
False,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,739,eturn _names[offset >> 2];
False,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,741,ffset += 4;
False,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,742,nt len = hashArea[offset+3];
False,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,743,f ((q1 == hashArea[offset]) && (q2 == hashArea[offset+1]) && (q3 == hashArea[offset+2]) && (3 == len)) {
False,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,744,eturn _names[offset >> 2];
True,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,698,for (int end = offset + 16; offset < end; offset += 4) {
True,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,699,int len = hashArea[offset+3];
True,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,700,if ((q1 == hashArea[offset]) && (q2 == hashArea[offset+1]) && (q3 == hashArea[offset+2]) && (3 == len)) {
True,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,701,return _names[offset >> 2];
True,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,703,if (len == 0) {
True,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,704,return null;
False,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,746,"/ and only at this point see if last slot was occupied or not, to see whether to continue"
False,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,747,f (len != 0) {
False,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,748,/ shared spillover starts at 7/8 of the main hash area
False,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,749,"/ (which is sized at 2 * _hashSize), so:"
False,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,750,or (offset = _spilloverStart(); offset < _spilloverEnd; offset += 4) {
False,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,751,f ((q1 == hashArea[offset]) && (q2 == hashArea[offset+1]) && (q3 == hashArea[offset+2])
False,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,752,& (3 == hashArea[offset+3])) {
False,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,753,eturn _names[offset >> 2];
True,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,707,for (offset = _spilloverStart(); offset < _spilloverEnd; offset += 4) {
True,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,708,if ((q1 == hashArea[offset]) && (q2 == hashArea[offset+1]) && (q3 == hashArea[offset+2])
True,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,709,&& (3 == hashArea[offset+3])) {
True,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,710,return _names[offset >> 2];
False,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,766,f ((hash == hashArea[offset]) && (qlen == hashArea[offset+3])) {
False,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,767,"f (_verifyLongName(q, qlen, hashArea[offset+1])) {"
False,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,768,eturn _names[offset >> 2];
False,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,771,ffset += 4;
False,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,772,f ((hash == hashArea[offset]) && (qlen == hashArea[offset+3])) {
False,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,773,"f (_verifyLongName(q, qlen, hashArea[offset+1])) {"
False,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,774,eturn _names[offset >> 2];
False,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,777,ffset += 4;
False,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,778,f ((hash == hashArea[offset]) && (qlen == hashArea[offset+3])) {
False,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,779,"f (_verifyLongName(q, qlen, hashArea[offset+1])) {"
True,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,721,for (int end = offset + 16; offset < end; offset += 4) {
True,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,722,int len = hashArea[offset+3];
True,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,723,if ((hash == hashArea[offset]) && (qlen == len)) {
False,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,783,ffset += 4;
False,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,784,nt len = hashArea[offset+3];
False,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,785,f ((hash == hashArea[offset]) && (qlen == len)) {
False,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,786,"f (_verifyLongName(q, qlen, hashArea[offset+1])) {"
False,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,787,eturn _names[offset >> 2];
True,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,726,if (len == 0) {
True,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,727,return null;
False,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,790,"/ and only at this point see if last slot was occupied or not, to see whether to continue"
False,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,791,f (len != 0) {
False,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,792,/ shared spillover starts at 7/8 of the main hash area
False,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,793,"/ (which is sized at 2 * _hashSize), so:"
False,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,794,or (offset = _spilloverStart(); offset < _spilloverEnd; offset += 4) {
False,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,795,f ((hash == hashArea[offset]) && (3 == len)) {
False,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,796,"f (_verifyLongName(q, qlen, hashArea[offset+1])) {"
False,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,797,eturn _names[offset >> 2];
True,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,730,for (offset = _spilloverStart(); offset < _spilloverEnd; offset += 4) {
True,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,731,if ((hash == hashArea[offset]) && (qlen == hashArea[offset+3])) {
True,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,732,"if (_verifyLongName(q, qlen, hashArea[offset+1])) {"
True,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java,733,return _names[offset >> 2];
