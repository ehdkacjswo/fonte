is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,70,matchingElementIndex = _parseInt(segment);
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,70,_matchingElementIndex = _parseIndex(segment);
False,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,185,rivate final static int _parseInt(String str) {
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,185,private final static int _parseIndex(String str) {
False,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,187,f (len == 0) {
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,187,// [Issue#133]: beware of super long indexes; assume we never
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,188,// have arrays over 2 billion entries so ints are fine.
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,189,if (len == 0 || len > 10) {
False,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,196,"/ for now, we'll assume 32-bit indexes are fine"
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,198,if (len == 10) {
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,199,long l = NumberInput.parseLong(str);
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,200,if (l > Integer.MAX_VALUE) {
True,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,src/main/java/com/fasterxml/jackson/core/JsonPointer.java,201,return -1;
True,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,69,// [Issue#133]
True,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,70,public void testLongNumbers() throws Exception
True,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,72,final long LONG_ID = ((long) Integer.MAX_VALUE) + 1L;
True,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,74,"final String INPUT = ""/User/""+LONG_ID;"
True,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,76,JsonPointer ptr = JsonPointer.compile(INPUT);
True,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,77,"assertEquals(""User"", ptr.getMatchingProperty());"
True,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,78,"assertEquals(INPUT, ptr.toString());"
True,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,80,ptr = ptr.tail();
True,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,81,assertNotNull(ptr);
True,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,82,assertFalse(ptr.matches());
True,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,83,"/* 14-Mar-2014, tatu: We do not support array indexes beyond 32-bit"
True,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,84,*    range; can still match textually of course.
True,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,86,"assertEquals(-1, ptr.getMatchingIndex());"
True,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,87,"assertEquals(String.valueOf(LONG_ID), ptr.getMatchingProperty());"
True,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,89,// done!
True,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,90,ptr = ptr.tail();
True,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,91,assertTrue(ptr.matches());
True,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,src/test/java/com/fasterxml/jackson/core/TestJsonPointer.java,92,assertNull(ptr.tail());
