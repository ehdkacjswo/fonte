is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,28,implements java.io.Serializable
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,30,// We'll only serialize name
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,31,private static final long serialVersionUID = 1L;
False,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,57,rivate final int[] _asciiToBase64 = new int[128];
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,61,private final transient int[] _asciiToBase64 = new int[128];
False,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,63,rivate final char[] _base64ToAsciiC = new char[64];
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,67,private final transient char[] _base64ToAsciiC = new char[64];
False,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,69,rivate final byte[] _base64ToAsciiB = new byte[64];
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,73,private final transient byte[] _base64ToAsciiB = new byte[64];
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,83,*<p>
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,84,* Note that this is the only non-transient field; used when reading
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,85,* back from serialized state
False,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,80,inal String _name;
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,87,protected final String _name;
False,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,85,inal boolean _usesPadding;
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,92,protected final transient boolean _usesPadding;
False,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,90,inal char _paddingChar;
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,97,protected final transient char _paddingChar;
False,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,100,inal int _maxLineLength;
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,107,protected final transient int _maxLineLength;
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,177,/* Serializable overrides
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,182,"* Method used to ""demote"" deserialized instances back to"
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,183,* canonical ones
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,185,protected Object readResolve() {
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,186,return Base64Variants.valueOf(_name);
False,src/main/java/com/fasterxml/jackson/core/Base64Variants.java,src/main/java/com/fasterxml/jackson/core/Base64Variants.java,18, Container for commonly used Base64 variants.
True,src/main/java/com/fasterxml/jackson/core/Base64Variants.java,src/main/java/com/fasterxml/jackson/core/Base64Variants.java,18,* Container for commonly used Base64 variants:
True,src/main/java/com/fasterxml/jackson/core/Base64Variants.java,src/main/java/com/fasterxml/jackson/core/Base64Variants.java,19,*<ul>
True,src/main/java/com/fasterxml/jackson/core/Base64Variants.java,src/main/java/com/fasterxml/jackson/core/Base64Variants.java,20,* <li> {@link #MIME}
True,src/main/java/com/fasterxml/jackson/core/Base64Variants.java,src/main/java/com/fasterxml/jackson/core/Base64Variants.java,21,* <li> {@link #MIME_NO_LINEFEEDS}
True,src/main/java/com/fasterxml/jackson/core/Base64Variants.java,src/main/java/com/fasterxml/jackson/core/Base64Variants.java,22,* <li> {@link #PEM}
True,src/main/java/com/fasterxml/jackson/core/Base64Variants.java,src/main/java/com/fasterxml/jackson/core/Base64Variants.java,23,* <li> {@link #MODIFIED_FOR_URL}
True,src/main/java/com/fasterxml/jackson/core/Base64Variants.java,src/main/java/com/fasterxml/jackson/core/Base64Variants.java,24,* </ul>
True,src/main/java/com/fasterxml/jackson/core/Base64Variants.java,src/main/java/com/fasterxml/jackson/core/Base64Variants.java,98,* @since 2.1
True,src/main/java/com/fasterxml/jackson/core/Base64Variants.java,src/main/java/com/fasterxml/jackson/core/Base64Variants.java,100,public static Base64Variant valueOf(String name) throws IllegalArgumentException
True,src/main/java/com/fasterxml/jackson/core/Base64Variants.java,src/main/java/com/fasterxml/jackson/core/Base64Variants.java,102,if (MIME._name.equals(name)) {
True,src/main/java/com/fasterxml/jackson/core/Base64Variants.java,src/main/java/com/fasterxml/jackson/core/Base64Variants.java,103,return MIME;
True,src/main/java/com/fasterxml/jackson/core/Base64Variants.java,src/main/java/com/fasterxml/jackson/core/Base64Variants.java,105,if (MIME_NO_LINEFEEDS._name.equals(name)) {
True,src/main/java/com/fasterxml/jackson/core/Base64Variants.java,src/main/java/com/fasterxml/jackson/core/Base64Variants.java,106,return MIME_NO_LINEFEEDS;
True,src/main/java/com/fasterxml/jackson/core/Base64Variants.java,src/main/java/com/fasterxml/jackson/core/Base64Variants.java,108,if (PEM._name.equals(name)) {
True,src/main/java/com/fasterxml/jackson/core/Base64Variants.java,src/main/java/com/fasterxml/jackson/core/Base64Variants.java,109,return PEM;
True,src/main/java/com/fasterxml/jackson/core/Base64Variants.java,src/main/java/com/fasterxml/jackson/core/Base64Variants.java,111,if (MODIFIED_FOR_URL._name.equals(name)) {
True,src/main/java/com/fasterxml/jackson/core/Base64Variants.java,src/main/java/com/fasterxml/jackson/core/Base64Variants.java,112,return MODIFIED_FOR_URL;
True,src/main/java/com/fasterxml/jackson/core/Base64Variants.java,src/main/java/com/fasterxml/jackson/core/Base64Variants.java,114,if (name == null) {
True,src/main/java/com/fasterxml/jackson/core/Base64Variants.java,src/main/java/com/fasterxml/jackson/core/Base64Variants.java,115,"name = ""<null>"";"
True,src/main/java/com/fasterxml/jackson/core/Base64Variants.java,src/main/java/com/fasterxml/jackson/core/Base64Variants.java,116,} else {
True,src/main/java/com/fasterxml/jackson/core/Base64Variants.java,src/main/java/com/fasterxml/jackson/core/Base64Variants.java,117,"name = ""'""+name+""'"";"
True,src/main/java/com/fasterxml/jackson/core/Base64Variants.java,src/main/java/com/fasterxml/jackson/core/Base64Variants.java,119,"throw new IllegalArgumentException(""No Base64Variant with name ""+name);"
False,src/test/java/com/fasterxml/jackson/core/TestSerializability.java,src/test/java/com/fasterxml/jackson/core/TestJDKSerializability.java,10,ublic class TestSerializability extends BaseTest
True,src/test/java/com/fasterxml/jackson/core/TestSerializability.java,src/test/java/com/fasterxml/jackson/core/TestJDKSerializability.java,10,public class TestJDKSerializability extends BaseTest
True,src/test/java/com/fasterxml/jackson/core/TestSerializability.java,src/test/java/com/fasterxml/jackson/core/TestJDKSerializability.java,28,public void testBase64Variant() throws Exception
True,src/test/java/com/fasterxml/jackson/core/TestSerializability.java,src/test/java/com/fasterxml/jackson/core/TestJDKSerializability.java,30,Base64Variant orig = Base64Variants.PEM;
True,src/test/java/com/fasterxml/jackson/core/TestSerializability.java,src/test/java/com/fasterxml/jackson/core/TestJDKSerializability.java,31,byte[] stuff = jdkSerialize(orig);
True,src/test/java/com/fasterxml/jackson/core/TestSerializability.java,src/test/java/com/fasterxml/jackson/core/TestJDKSerializability.java,32,Base64Variant back = jdkDeserialize(stuff);
True,src/test/java/com/fasterxml/jackson/core/TestSerializability.java,src/test/java/com/fasterxml/jackson/core/TestJDKSerializability.java,33,"assertSame(orig, back);"
