is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/com/fasterxml/jackson/core/filter/FilteringGeneratorDelegate.java,src/main/java/com/fasterxml/jackson/core/filter/FilteringGeneratorDelegate.java,49,"/* NOTE: this feature is included in the first version (2.6), but"
True,src/main/java/com/fasterxml/jackson/core/filter/FilteringGeneratorDelegate.java,src/main/java/com/fasterxml/jackson/core/filter/FilteringGeneratorDelegate.java,50,"* there is no public API to enable it, yet, since there isn't an"
True,src/main/java/com/fasterxml/jackson/core/filter/FilteringGeneratorDelegate.java,src/main/java/com/fasterxml/jackson/core/filter/FilteringGeneratorDelegate.java,51,"* actual use case. But it seemed possible need could arise, which"
True,src/main/java/com/fasterxml/jackson/core/filter/FilteringGeneratorDelegate.java,src/main/java/com/fasterxml/jackson/core/filter/FilteringGeneratorDelegate.java,52,* is feature has not yet been removed. If no use is found within
True,src/main/java/com/fasterxml/jackson/core/filter/FilteringGeneratorDelegate.java,src/main/java/com/fasterxml/jackson/core/filter/FilteringGeneratorDelegate.java,53,"* first version or two, just remove."
True,src/main/java/com/fasterxml/jackson/core/filter/FilteringGeneratorDelegate.java,src/main/java/com/fasterxml/jackson/core/filter/FilteringGeneratorDelegate.java,55,* Marked as deprecated since its status is uncertain.
True,src/main/java/com/fasterxml/jackson/core/filter/FilteringGeneratorDelegate.java,src/main/java/com/fasterxml/jackson/core/filter/FilteringGeneratorDelegate.java,57,@Deprecated
True,src/main/java/com/fasterxml/jackson/core/filter/FilteringGeneratorDelegate.java,src/main/java/com/fasterxml/jackson/core/filter/FilteringGeneratorDelegate.java,58,protected boolean _includeImmediateParent = false;
False,src/main/java/com/fasterxml/jackson/core/filter/FilteringGeneratorDelegate.java,src/main/java/com/fasterxml/jackson/core/filter/FilteringGeneratorDelegate.java,815, else {
True,src/main/java/com/fasterxml/jackson/core/filter/FilteringGeneratorDelegate.java,src/main/java/com/fasterxml/jackson/core/filter/FilteringGeneratorDelegate.java,826,} else if (_includeImmediateParent) {
True,src/main/java/com/fasterxml/jackson/core/filter/FilteringGeneratorDelegate.java,src/main/java/com/fasterxml/jackson/core/filter/FilteringGeneratorDelegate.java,827,"// 21-Apr-2015, tatu: Note that there is no API to enable this currently..."
True,src/main/java/com/fasterxml/jackson/core/filter/FilteringGeneratorDelegate.java,src/main/java/com/fasterxml/jackson/core/filter/FilteringGeneratorDelegate.java,828,//    retained for speculative future use
True,src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java,src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java,51,"/* NOTE: this feature is included in the first version (2.6), but"
True,src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java,src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java,52,"* there is no public API to enable it, yet, since there isn't an"
True,src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java,src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java,53,"* actual use case. But it seemed possible need could arise, which"
True,src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java,src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java,54,* is feature has not yet been removed. If no use is found within
True,src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java,src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java,55,"* first version or two, just remove."
True,src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java,src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java,57,* Marked as deprecated since its status is uncertain.
True,src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java,src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java,59,@Deprecated
True,src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java,src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java,60,protected boolean _includeImmediateParent = false;
False,src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java,src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java,346,"/ Minor twist here: if parent NOT included, may need to induce output of"
False,src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java,src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java,347,/ surrounding START_OBJECT/END_OBJECT
False,src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java,src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java,348,f (!_includePath && !_headContext.isStartHandled()) {
False,src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java,src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java,349, = _headContext.nextTokenToRead(); // returns START_OBJECT but also marks it handled
False,src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java,src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java,350,exposedContext = _headContext;
True,src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java,src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java,357,if (!_includePath) {
True,src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java,src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java,358,"// Minor twist here: if parent NOT included, may need to induce output of"
True,src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java,src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java,359,// surrounding START_OBJECT/END_OBJECT
True,src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java,src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java,360,if (_includeImmediateParent && !_headContext.isStartHandled()) {
True,src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java,src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java,361,t = _headContext.nextTokenToRead(); // returns START_OBJECT but also marks it handled
True,src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java,src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java,362,_exposedContext = _headContext;
False,src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java,src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java,367,eturn (_currToken = t);
True,src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java,src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java,380,if (_includePath) {
True,src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java,src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java,381,return (_currToken = t);
False,src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java,src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java,510,eturn (_currToken = t);
True,src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java,src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java,525,if (_includePath) {
True,src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java,src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java,526,return (_currToken = t);
True,src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java,src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java,528,//                        if (_includeImmediateParent) { ...
True,src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java,src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java,529,continue main_loop;
True,src/main/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/main/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,1,package com.fasterxml.jackson.core.filter;
True,src/main/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/main/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,3,import com.fasterxml.jackson.core.JsonPointer;
True,src/main/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/main/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,6,* Simple {@link TokenFilter} implementation that takes a single
True,src/main/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/main/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,7,* {@link JsonPointer} and matches a single value accordingly.
True,src/main/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/main/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,8,"* Instances are immutable and fully thread-safe, shareable,"
True,src/main/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/main/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,9,* and efficient to use.
True,src/main/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/main/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,11,* @since 2.6
True,src/main/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/main/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,13,public class JsonPointerBasedFilter extends TokenFilter
True,src/main/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/main/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,15,protected final JsonPointer _pathToMatch;
True,src/main/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/main/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,17,public JsonPointerBasedFilter(String ptrExpr) {
True,src/main/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/main/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,18,this(JsonPointer.compile(ptrExpr));
True,src/main/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/main/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,21,public JsonPointerBasedFilter(JsonPointer match) {
True,src/main/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/main/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,22,_pathToMatch = match;
True,src/main/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/main/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,25,@Override
True,src/main/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/main/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,26,public TokenFilter includeElement(int index) {
True,src/main/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/main/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,27,JsonPointer next = _pathToMatch.matchElement(index);
True,src/main/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/main/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,28,if (next == null) {
True,src/main/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/main/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,29,return null;
True,src/main/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/main/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,31,if (next.matches()) {
True,src/main/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/main/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,32,return TokenFilter.INCLUDE_ALL;
True,src/main/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/main/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,34,return new JsonPointerBasedFilter(next);
True,src/main/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/main/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,37,@Override
True,src/main/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/main/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,38,public TokenFilter includeProperty(String name) {
True,src/main/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/main/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,39,JsonPointer next = _pathToMatch.matchProperty(name);
True,src/main/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/main/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,40,if (next == null) {
True,src/main/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/main/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,41,return null;
True,src/main/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/main/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,43,if (next.matches()) {
True,src/main/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/main/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,44,return TokenFilter.INCLUDE_ALL;
True,src/main/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/main/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,46,return new JsonPointerBasedFilter(next);
True,src/main/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/main/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,49,@Override
True,src/main/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/main/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,50,public TokenFilter filterStartArray() {
True,src/main/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/main/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,51,return this;
True,src/main/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/main/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,54,@Override
True,src/main/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/main/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,55,public TokenFilter filterStartObject() {
True,src/main/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/main/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,56,return this;
True,src/main/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/main/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,59,@Override
True,src/main/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/main/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,60,protected boolean _includeScalar() {
True,src/main/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/main/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,61,"// should only occur for root-level scalars, path ""/"""
True,src/main/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/main/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,62,return _pathToMatch.matches();
True,src/main/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/main/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,65,@Override
True,src/main/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/main/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,66,public String toString() {
True,src/main/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/main/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,67,"return ""[JsonPointerFilter at: ""+_pathToMatch+""]"";"
False,src/test/java/com/fasterxml/jackson/core/filter/BasicGeneratorFilteringTest.java,src/test/java/com/fasterxml/jackson/core/filter/BasicGeneratorFilteringTest.java,98,"/ Since properties MUST be contained within an Object, inclusion needs"
False,src/test/java/com/fasterxml/jackson/core/filter/BasicGeneratorFilteringTest.java,src/test/java/com/fasterxml/jackson/core/filter/BasicGeneratorFilteringTest.java,99,/ to materialize surrounding Object too!
False,src/test/java/com/fasterxml/jackson/core/filter/BasicGeneratorFilteringTest.java,src/test/java/com/fasterxml/jackson/core/filter/BasicGeneratorFilteringTest.java,100,"ssertEquals(aposToQuotes(""{'value':3}""), w.toString());"
True,src/test/java/com/fasterxml/jackson/core/filter/BasicGeneratorFilteringTest.java,src/test/java/com/fasterxml/jackson/core/filter/BasicGeneratorFilteringTest.java,99,"// 21-Apr-2015, tatu: note that there were plans to actually"
True,src/test/java/com/fasterxml/jackson/core/filter/BasicGeneratorFilteringTest.java,src/test/java/com/fasterxml/jackson/core/filter/BasicGeneratorFilteringTest.java,100,"//     allow ""immediate parent inclusion"" for matches on property"
True,src/test/java/com/fasterxml/jackson/core/filter/BasicGeneratorFilteringTest.java,src/test/java/com/fasterxml/jackson/core/filter/BasicGeneratorFilteringTest.java,101,"//    names. This behavior was NOT included in release however, so:"
True,src/test/java/com/fasterxml/jackson/core/filter/BasicGeneratorFilteringTest.java,src/test/java/com/fasterxml/jackson/core/filter/BasicGeneratorFilteringTest.java,102,"//        assertEquals(aposToQuotes(""{'value':3}""), w.toString());"
True,src/test/java/com/fasterxml/jackson/core/filter/BasicGeneratorFilteringTest.java,src/test/java/com/fasterxml/jackson/core/filter/BasicGeneratorFilteringTest.java,104,"assertEquals(aposToQuotes(""3""), w.toString());"
False,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,1,ackage com.fasterxml.jackson.core.filter;
False,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,3,mport com.fasterxml.jackson.core.JsonPointer;
False,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,6, Helper class that implements simple single-match filter based
False,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,7, on a {@link JsonPointer} instance.
False,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,9,lass JsonPointerBasedFilter extends TokenFilter
False,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,11,rotected final JsonPointer _pathToMatch;
False,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,13,rotected final boolean _includeParent;
False,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,15,"ublic JsonPointerBasedFilter(String ptrExpr, boolean inclParent) {"
False,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,16,"his(JsonPointer.compile(ptrExpr), inclParent);"
False,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,19,"ublic JsonPointerBasedFilter(JsonPointer match, boolean inclParent) {"
False,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,20,pathToMatch = match;
False,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,21,includeParent = inclParent;
False,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,24,Override
False,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,25,ublic TokenFilter includeElement(int index) {
False,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,26,sonPointer next = _pathToMatch.matchElement(index);
False,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,27,f (next == null) {
False,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,28,eturn null;
False,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,30,f (next.matches()) {
False,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,31,eturn TokenFilter.INCLUDE_ALL;
False,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,33,"eturn new JsonPointerBasedFilter(next, _includeParent);"
False,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,36,Override
False,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,37,ublic TokenFilter includeProperty(String name) {
False,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,38,sonPointer next = _pathToMatch.matchProperty(name);
False,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,39,f (next == null) {
False,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,40,eturn null;
False,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,42,f (next.matches()) {
False,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,43,f (_includeParent) {
False,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,44,eturn TokenFilter.INCLUDE_ALL;
False,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,46,"/ Minor complication, for non-path-including case"
False,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,47,eturn IncludeAny.instance;
False,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,49,"eturn new JsonPointerBasedFilter(next, _includeParent);"
False,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,52,Override
False,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,53,ublic TokenFilter filterStartArray() {
False,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,54,eturn this;
False,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,57,Override
False,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,58,ublic TokenFilter filterStartObject() {
False,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,59,eturn this;
False,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,62,Override
False,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,63,rotected boolean _includeScalar() {
False,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,64,"/ should only occur for root-level scalars, path ""/"""
False,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,65,eturn _pathToMatch.matches();
False,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,68,Override
False,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,69,ublic String toString() {
False,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,70,"eturn ""[JsonPointerFilter at: ""+_pathToMatch+""]"";"
False,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,74," Helper class needed to include value of an Object property, without"
False,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,75, including surrounding Object. Used when path is not to be included.
False,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,77,tatic class IncludeAny extends TokenFilter {
False,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,78,ublic final static IncludeAny instance = new IncludeAny();
False,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,80,Override
False,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,81,ublic TokenFilter filterStartArray() {
False,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,82,eturn TokenFilter.INCLUDE_ALL;
False,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,85,Override
False,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,86,ublic TokenFilter filterStartObject() {
False,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,87,eturn TokenFilter.INCLUDE_ALL;
False,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,90,Override
False,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,91,rotected boolean _includeScalar() {
False,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerBasedFilter.java,92,eturn true;
False,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerGeneratorFilteringTest.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerGeneratorFilteringTest.java,98,"ew JsonPointerBasedFilter(pathExpr, includeParent),"
True,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerGeneratorFilteringTest.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerGeneratorFilteringTest.java,98,"new JsonPointerBasedFilter(pathExpr),"
False,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerParserFilteringTest.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerParserFilteringTest.java,45,"assert(SIMPLE_INPUT, ""/c"", false, ""{'d':{'a':true}}"");"
True,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerParserFilteringTest.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerParserFilteringTest.java,45,"//        _assert(SIMPLE_INPUT, ""/c"", false, ""{'d':{'a':true}}"");"
False,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerParserFilteringTest.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerParserFilteringTest.java,61,"ew JsonPointerBasedFilter(pathExpr, includeParent),"
True,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerParserFilteringTest.java,src/test/java/com/fasterxml/jackson/core/filter/JsonPointerParserFilteringTest.java,62,"new JsonPointerBasedFilter(pathExpr),"
