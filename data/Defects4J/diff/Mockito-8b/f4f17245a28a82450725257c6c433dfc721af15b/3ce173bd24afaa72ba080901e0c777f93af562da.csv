is_addition,old_file_path,new_file_path,line_num,content
False,src/org/mockito/InjectMocks.java,src/org/mockito/InjectMocks.java,28,     then arguments are resolved with mocks declared in the test only.
True,src/org/mockito/InjectMocks.java,src/org/mockito/InjectMocks.java,28,*     then arguments are resolved with mocks declared in the test only. If the object is successfully created
True,src/org/mockito/InjectMocks.java,src/org/mockito/InjectMocks.java,29,"*     with the constructor, then <strong>Mockito won't try the other strategies</strong>. Mockito has decided to no"
True,src/org/mockito/InjectMocks.java,src/org/mockito/InjectMocks.java,30,*     corrupt an object if it has a parametered constructor.
False,src/org/mockito/InjectMocks.java,src/org/mockito/InjectMocks.java,33,"     <li><strong>Property setter injection</strong>; mocks will first be resolved by type,"
True,src/org/mockito/InjectMocks.java,src/org/mockito/InjectMocks.java,35,*     <li><strong>Property setter injection</strong>; mocks will first be resolved by type (if a single type match
True,src/org/mockito/InjectMocks.java,src/org/mockito/InjectMocks.java,36,"*     injection will happen regardless of the name),"
False,src/org/mockito/InjectMocks.java,src/org/mockito/InjectMocks.java,40,"     <li><strong>Field injection</strong>; mocks will first be resolved by type,"
True,src/org/mockito/InjectMocks.java,src/org/mockito/InjectMocks.java,43,*     <li><strong>Field injection</strong>; mocks will first be resolved by type (if a single type match
True,src/org/mockito/InjectMocks.java,src/org/mockito/InjectMocks.java,44,"*     injection will happen regardless of the name),"
False,src/org/mockito/InjectMocks.java,src/org/mockito/InjectMocks.java,76, In the above example the field ArticleManager annotated with &#064;InjectMocks can have
True,src/org/mockito/InjectMocks.java,src/org/mockito/InjectMocks.java,80,* In the above example the field <code>ArticleManager</code> annotated with <code>&#064;InjectMocks</code> can have
True,src/org/mockito/InjectMocks.java,src/org/mockito/InjectMocks.java,149,* <p>
True,src/org/mockito/InjectMocks.java,src/org/mockito/InjectMocks.java,150,"* Mockito is not an dependency injection framework, don't expect this shorthand utility to inject a complex graph of objects"
True,src/org/mockito/InjectMocks.java,src/org/mockito/InjectMocks.java,151,* be it mocks/spies or real objects.
True,src/org/mockito/InjectMocks.java,src/org/mockito/InjectMocks.java,152,* </p>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,764," Note that &#064;{@link InjectMocks} can only be used in combination with the &#064;{@link Spy} annotation, it means"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,765," that Mockito will inject mocks in a partial mock under testing. As a remainder, please read point 16 about partial mocks."
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,764,"* Note that &#064;{@link InjectMocks} can also be used in combination with the &#064;{@link Spy} annotation, it means"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,765,* that Mockito will inject mocks into the partial mock under test. This complexity is another good reason why you
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,766,* should only use partial mocks as a last resort. See point 16 about partial mocks.
