is_addition,old_file_path,new_file_path,line_num,content
False,src/org/mockito/exceptions/base/MockitoAssertionError.java,src/org/mockito/exceptions/base/MockitoAssertionError.java,8,mport org.mockito.internal.exceptions.base.ConditionalStackTraceFilter;
True,src/org/mockito/exceptions/base/MockitoAssertionError.java,src/org/mockito/exceptions/base/MockitoAssertionError.java,8,import org.mockito.internal.exceptions.stacktrace.ConditionalStackTraceFilter;
False,src/org/mockito/exceptions/base/MockitoException.java,src/org/mockito/exceptions/base/MockitoException.java,8,mport org.mockito.internal.exceptions.base.ConditionalStackTraceFilter;
True,src/org/mockito/exceptions/base/MockitoException.java,src/org/mockito/exceptions/base/MockitoException.java,8,import org.mockito.internal.exceptions.stacktrace.ConditionalStackTraceFilter;
True,src/org/mockito/exceptions/stacktrace/StackTraceCleaner.java,src/org/mockito/exceptions/stacktrace/StackTraceCleaner.java,1,package org.mockito.exceptions.stacktrace;
True,src/org/mockito/exceptions/stacktrace/StackTraceCleaner.java,src/org/mockito/exceptions/stacktrace/StackTraceCleaner.java,3,import org.mockito.Incubating;
True,src/org/mockito/exceptions/stacktrace/StackTraceCleaner.java,src/org/mockito/exceptions/stacktrace/StackTraceCleaner.java,6,* Decides if particular StackTraceElement is excluded from the human-readable stack trace output.
True,src/org/mockito/exceptions/stacktrace/StackTraceCleaner.java,src/org/mockito/exceptions/stacktrace/StackTraceCleaner.java,7,* Mockito stack trace filtering mechanism uses this information.
True,src/org/mockito/exceptions/stacktrace/StackTraceCleaner.java,src/org/mockito/exceptions/stacktrace/StackTraceCleaner.java,8,* <p>
True,src/org/mockito/exceptions/stacktrace/StackTraceCleaner.java,src/org/mockito/exceptions/stacktrace/StackTraceCleaner.java,9,* Excluding an element will make it not show in the cleaned stack trace.
True,src/org/mockito/exceptions/stacktrace/StackTraceCleaner.java,src/org/mockito/exceptions/stacktrace/StackTraceCleaner.java,10,* Not-excluding an element does not guarantee it will be shown
True,src/org/mockito/exceptions/stacktrace/StackTraceCleaner.java,src/org/mockito/exceptions/stacktrace/StackTraceCleaner.java,11,* (e.g. it depends on the implementation of
True,src/org/mockito/exceptions/stacktrace/StackTraceCleaner.java,src/org/mockito/exceptions/stacktrace/StackTraceCleaner.java,12,* Mockito internal {@link org.mockito.internal.exceptions.stacktrace.StackTraceFilter}).
True,src/org/mockito/exceptions/stacktrace/StackTraceCleaner.java,src/org/mockito/exceptions/stacktrace/StackTraceCleaner.java,13,* <p>
True,src/org/mockito/exceptions/stacktrace/StackTraceCleaner.java,src/org/mockito/exceptions/stacktrace/StackTraceCleaner.java,14,"* The implementations are required to be thread safe. For example, make them stateless."
True,src/org/mockito/exceptions/stacktrace/StackTraceCleaner.java,src/org/mockito/exceptions/stacktrace/StackTraceCleaner.java,15,* <p>
True,src/org/mockito/exceptions/stacktrace/StackTraceCleaner.java,src/org/mockito/exceptions/stacktrace/StackTraceCleaner.java,16,* See the default implementation: {@link org.mockito.internal.exceptions.stacktrace.DefaultStackTraceCleaner}.
True,src/org/mockito/exceptions/stacktrace/StackTraceCleaner.java,src/org/mockito/exceptions/stacktrace/StackTraceCleaner.java,19,@Incubating
True,src/org/mockito/exceptions/stacktrace/StackTraceCleaner.java,src/org/mockito/exceptions/stacktrace/StackTraceCleaner.java,20,public interface StackTraceCleaner {
True,src/org/mockito/exceptions/stacktrace/StackTraceCleaner.java,src/org/mockito/exceptions/stacktrace/StackTraceCleaner.java,23,* Decides if element is excluded.
True,src/org/mockito/exceptions/stacktrace/StackTraceCleaner.java,src/org/mockito/exceptions/stacktrace/StackTraceCleaner.java,25,* @param candidate element of the actual stack trace
True,src/org/mockito/exceptions/stacktrace/StackTraceCleaner.java,src/org/mockito/exceptions/stacktrace/StackTraceCleaner.java,26,* @return whether the element should be excluded from cleaned stack trace.
True,src/org/mockito/exceptions/stacktrace/StackTraceCleaner.java,src/org/mockito/exceptions/stacktrace/StackTraceCleaner.java,28,boolean isOut(StackTraceElement candidate);
False,src/org/mockito/exceptions/verification/junit/ArgumentsAreDifferent.java,src/org/mockito/exceptions/verification/junit/ArgumentsAreDifferent.java,10,mport org.mockito.internal.exceptions.base.ConditionalStackTraceFilter;
True,src/org/mockito/exceptions/verification/junit/ArgumentsAreDifferent.java,src/org/mockito/exceptions/verification/junit/ArgumentsAreDifferent.java,9,import org.mockito.internal.exceptions.stacktrace.ConditionalStackTraceFilter;
False,src/org/mockito/internal/configuration/ClassPathLoader.java,src/org/mockito/internal/configuration/ClassPathLoader.java,2, Copyright (c) 2007 Mockito contributors
False,src/org/mockito/internal/configuration/ClassPathLoader.java,src/org/mockito/internal/configuration/ClassPathLoader.java,3, This program is made available under the terms of the MIT License.
True,src/org/mockito/internal/configuration/ClassPathLoader.java,src/org/mockito/internal/configuration/ClassPathLoader.java,2,* Copyright (c) 2007 Mockito contributors
True,src/org/mockito/internal/configuration/ClassPathLoader.java,src/org/mockito/internal/configuration/ClassPathLoader.java,3,* This program is made available under the terms of the MIT License.
True,src/org/mockito/internal/configuration/ClassPathLoader.java,src/org/mockito/internal/configuration/ClassPathLoader.java,11,import org.mockito.internal.exceptions.stacktrace.DefaultStackTraceCleanerProvider;
True,src/org/mockito/internal/configuration/ClassPathLoader.java,src/org/mockito/internal/configuration/ClassPathLoader.java,13,import org.mockito.plugins.StackTraceCleanerProvider;
False,src/org/mockito/internal/configuration/ClassPathLoader.java,src/org/mockito/internal/configuration/ClassPathLoader.java,13,mport java.io.BufferedReader;
False,src/org/mockito/internal/configuration/ClassPathLoader.java,src/org/mockito/internal/configuration/ClassPathLoader.java,14,mport java.io.IOException;
False,src/org/mockito/internal/configuration/ClassPathLoader.java,src/org/mockito/internal/configuration/ClassPathLoader.java,15,mport java.io.InputStream;
False,src/org/mockito/internal/configuration/ClassPathLoader.java,src/org/mockito/internal/configuration/ClassPathLoader.java,16,mport java.io.InputStreamReader;
False,src/org/mockito/internal/configuration/ClassPathLoader.java,src/org/mockito/internal/configuration/ClassPathLoader.java,17,mport java.io.Reader;
True,src/org/mockito/internal/configuration/ClassPathLoader.java,src/org/mockito/internal/configuration/ClassPathLoader.java,15,import java.io.*;
True,src/org/mockito/internal/configuration/ClassPathLoader.java,src/org/mockito/internal/configuration/ClassPathLoader.java,60,private static final StackTraceCleanerProvider stackTraceCleanerProvider =
True,src/org/mockito/internal/configuration/ClassPathLoader.java,src/org/mockito/internal/configuration/ClassPathLoader.java,61,"findPluginImplementation(StackTraceCleanerProvider.class, new DefaultStackTraceCleanerProvider());"
True,src/org/mockito/internal/configuration/ClassPathLoader.java,src/org/mockito/internal/configuration/ClassPathLoader.java,97,public static StackTraceCleanerProvider getStackTraceCleanerProvider() {
True,src/org/mockito/internal/configuration/ClassPathLoader.java,src/org/mockito/internal/configuration/ClassPathLoader.java,98,return stackTraceCleanerProvider;
False,src/org/mockito/internal/configuration/ClassPathLoader.java,src/org/mockito/internal/configuration/ClassPathLoader.java,102,or (MockMaker mockMaker : loadImplementations(MockMaker.class)) {
False,src/org/mockito/internal/configuration/ClassPathLoader.java,src/org/mockito/internal/configuration/ClassPathLoader.java,103,eturn mockMaker; // return the first one service loader finds (if any)
True,src/org/mockito/internal/configuration/ClassPathLoader.java,src/org/mockito/internal/configuration/ClassPathLoader.java,106,"return findPluginImplementation(MockMaker.class, new CglibMockMaker());"
True,src/org/mockito/internal/configuration/ClassPathLoader.java,src/org/mockito/internal/configuration/ClassPathLoader.java,109,"static <T> T findPluginImplementation(Class<T> pluginType, T defaultPlugin) {"
True,src/org/mockito/internal/configuration/ClassPathLoader.java,src/org/mockito/internal/configuration/ClassPathLoader.java,110,for (T plugin : loadImplementations(pluginType)) {
True,src/org/mockito/internal/configuration/ClassPathLoader.java,src/org/mockito/internal/configuration/ClassPathLoader.java,111,return plugin; // return the first one service loader finds (if any)
False,src/org/mockito/internal/configuration/ClassPathLoader.java,src/org/mockito/internal/configuration/ClassPathLoader.java,105,eturn new CglibMockMaker(); // default implementation
True,src/org/mockito/internal/configuration/ClassPathLoader.java,src/org/mockito/internal/configuration/ClassPathLoader.java,113,return defaultPlugin; // default implementation
False,src/org/mockito/internal/debugging/LocationImpl.java,src/org/mockito/internal/debugging/LocationImpl.java,2, Copyright (c) 2007 Mockito contributors
False,src/org/mockito/internal/debugging/LocationImpl.java,src/org/mockito/internal/debugging/LocationImpl.java,3, This program is made available under the terms of the MIT License.
True,src/org/mockito/internal/debugging/LocationImpl.java,src/org/mockito/internal/debugging/LocationImpl.java,2,* Copyright (c) 2007 Mockito contributors
True,src/org/mockito/internal/debugging/LocationImpl.java,src/org/mockito/internal/debugging/LocationImpl.java,3,* This program is made available under the terms of the MIT License.
False,src/org/mockito/internal/debugging/LocationImpl.java,src/org/mockito/internal/debugging/LocationImpl.java,7,mport java.io.Serializable;
False,src/org/mockito/internal/debugging/LocationImpl.java,src/org/mockito/internal/debugging/LocationImpl.java,9,mport org.mockito.internal.exceptions.base.StackTraceFilter;
True,src/org/mockito/internal/debugging/LocationImpl.java,src/org/mockito/internal/debugging/LocationImpl.java,7,import org.mockito.internal.exceptions.stacktrace.StackTraceFilter;
True,src/org/mockito/internal/debugging/LocationImpl.java,src/org/mockito/internal/debugging/LocationImpl.java,10,import java.io.Serializable;
False,src/org/mockito/internal/exceptions/base/ConditionalStackTraceFilter.java,src/org/mockito/internal/exceptions/stacktrace/ConditionalStackTraceFilter.java,6,ackage org.mockito.internal.exceptions.base;
True,src/org/mockito/internal/exceptions/base/ConditionalStackTraceFilter.java,src/org/mockito/internal/exceptions/stacktrace/ConditionalStackTraceFilter.java,6,package org.mockito.internal.exceptions.stacktrace;
True,src/org/mockito/internal/exceptions/stacktrace/DefaultStackTraceCleaner.java,src/org/mockito/internal/exceptions/stacktrace/DefaultStackTraceCleaner.java,1,package org.mockito.internal.exceptions.stacktrace;
True,src/org/mockito/internal/exceptions/stacktrace/DefaultStackTraceCleaner.java,src/org/mockito/internal/exceptions/stacktrace/DefaultStackTraceCleaner.java,3,import org.mockito.exceptions.stacktrace.StackTraceCleaner;
True,src/org/mockito/internal/exceptions/stacktrace/DefaultStackTraceCleaner.java,src/org/mockito/internal/exceptions/stacktrace/DefaultStackTraceCleaner.java,6,"* by Szczepan Faber, created at: 7/29/12"
True,src/org/mockito/internal/exceptions/stacktrace/DefaultStackTraceCleaner.java,src/org/mockito/internal/exceptions/stacktrace/DefaultStackTraceCleaner.java,8,public class DefaultStackTraceCleaner implements StackTraceCleaner {
True,src/org/mockito/internal/exceptions/stacktrace/DefaultStackTraceCleaner.java,src/org/mockito/internal/exceptions/stacktrace/DefaultStackTraceCleaner.java,9,public boolean isOut(StackTraceElement e) {
True,src/org/mockito/internal/exceptions/stacktrace/DefaultStackTraceCleaner.java,src/org/mockito/internal/exceptions/stacktrace/DefaultStackTraceCleaner.java,10,"boolean fromMockObject = e.getClassName().contains(""$$EnhancerByMockitoWithCGLIB$$"");"
True,src/org/mockito/internal/exceptions/stacktrace/DefaultStackTraceCleaner.java,src/org/mockito/internal/exceptions/stacktrace/DefaultStackTraceCleaner.java,11,"boolean fromOrgMockito = e.getClassName().startsWith(""org.mockito."");"
True,src/org/mockito/internal/exceptions/stacktrace/DefaultStackTraceCleaner.java,src/org/mockito/internal/exceptions/stacktrace/DefaultStackTraceCleaner.java,12,"boolean isRunner = e.getClassName().startsWith(""org.mockito.runners."");"
True,src/org/mockito/internal/exceptions/stacktrace/DefaultStackTraceCleaner.java,src/org/mockito/internal/exceptions/stacktrace/DefaultStackTraceCleaner.java,13,"boolean isInternalRunner = e.getClassName().startsWith(""org.mockito.internal.runners."");"
True,src/org/mockito/internal/exceptions/stacktrace/DefaultStackTraceCleaner.java,src/org/mockito/internal/exceptions/stacktrace/DefaultStackTraceCleaner.java,14,return (fromMockObject || fromOrgMockito) && !isRunner && !isInternalRunner;
True,src/org/mockito/internal/exceptions/stacktrace/DefaultStackTraceCleanerProvider.java,src/org/mockito/internal/exceptions/stacktrace/DefaultStackTraceCleanerProvider.java,1,package org.mockito.internal.exceptions.stacktrace;
True,src/org/mockito/internal/exceptions/stacktrace/DefaultStackTraceCleanerProvider.java,src/org/mockito/internal/exceptions/stacktrace/DefaultStackTraceCleanerProvider.java,3,import org.mockito.exceptions.stacktrace.StackTraceCleaner;
True,src/org/mockito/internal/exceptions/stacktrace/DefaultStackTraceCleanerProvider.java,src/org/mockito/internal/exceptions/stacktrace/DefaultStackTraceCleanerProvider.java,4,import org.mockito.plugins.StackTraceCleanerProvider;
True,src/org/mockito/internal/exceptions/stacktrace/DefaultStackTraceCleanerProvider.java,src/org/mockito/internal/exceptions/stacktrace/DefaultStackTraceCleanerProvider.java,7,"* by Szczepan Faber, created at: 7/29/12"
True,src/org/mockito/internal/exceptions/stacktrace/DefaultStackTraceCleanerProvider.java,src/org/mockito/internal/exceptions/stacktrace/DefaultStackTraceCleanerProvider.java,9,public class DefaultStackTraceCleanerProvider implements StackTraceCleanerProvider {
True,src/org/mockito/internal/exceptions/stacktrace/DefaultStackTraceCleanerProvider.java,src/org/mockito/internal/exceptions/stacktrace/DefaultStackTraceCleanerProvider.java,11,public StackTraceCleaner getStackTraceCleaner(StackTraceCleaner defaultCleaner) {
True,src/org/mockito/internal/exceptions/stacktrace/DefaultStackTraceCleanerProvider.java,src/org/mockito/internal/exceptions/stacktrace/DefaultStackTraceCleanerProvider.java,12,return defaultCleaner;
False,src/org/mockito/internal/exceptions/base/StackTraceFilter.java,src/org/mockito/internal/exceptions/stacktrace/StackTraceFilter.java,6,ackage org.mockito.internal.exceptions.base;
True,src/org/mockito/internal/exceptions/base/StackTraceFilter.java,src/org/mockito/internal/exceptions/stacktrace/StackTraceFilter.java,6,package org.mockito.internal.exceptions.stacktrace;
True,src/org/mockito/internal/exceptions/base/StackTraceFilter.java,src/org/mockito/internal/exceptions/stacktrace/StackTraceFilter.java,8,import org.mockito.exceptions.stacktrace.StackTraceCleaner;
True,src/org/mockito/internal/exceptions/base/StackTraceFilter.java,src/org/mockito/internal/exceptions/stacktrace/StackTraceFilter.java,9,import org.mockito.internal.configuration.ClassPathLoader;
False,src/org/mockito/internal/exceptions/base/StackTraceFilter.java,src/org/mockito/internal/exceptions/stacktrace/StackTraceFilter.java,17,ublic boolean isBad(StackTraceElement e) {
False,src/org/mockito/internal/exceptions/base/StackTraceFilter.java,src/org/mockito/internal/exceptions/stacktrace/StackTraceFilter.java,18,"oolean fromMockObject = e.getClassName().contains(""$$EnhancerByMockitoWithCGLIB$$"");"
False,src/org/mockito/internal/exceptions/base/StackTraceFilter.java,src/org/mockito/internal/exceptions/stacktrace/StackTraceFilter.java,19,"oolean fromOrgMockito = e.getClassName().startsWith(""org.mockito."");"
False,src/org/mockito/internal/exceptions/base/StackTraceFilter.java,src/org/mockito/internal/exceptions/stacktrace/StackTraceFilter.java,20,"oolean isRunner = e.getClassName().startsWith(""org.mockito.runners."");"
False,src/org/mockito/internal/exceptions/base/StackTraceFilter.java,src/org/mockito/internal/exceptions/stacktrace/StackTraceFilter.java,21,"oolean isInternalRunner = e.getClassName().startsWith(""org.mockito.internal.runners."");"
False,src/org/mockito/internal/exceptions/base/StackTraceFilter.java,src/org/mockito/internal/exceptions/stacktrace/StackTraceFilter.java,22,eturn (fromMockObject || fromOrgMockito) && !isRunner && !isInternalRunner;
True,src/org/mockito/internal/exceptions/base/StackTraceFilter.java,src/org/mockito/internal/exceptions/stacktrace/StackTraceFilter.java,21,private static StackTraceCleaner cleaner =
True,src/org/mockito/internal/exceptions/base/StackTraceFilter.java,src/org/mockito/internal/exceptions/stacktrace/StackTraceFilter.java,22,ClassPathLoader.getStackTraceCleanerProvider().getStackTraceCleaner(new DefaultStackTraceCleaner());
False,src/org/mockito/internal/exceptions/base/StackTraceFilter.java,src/org/mockito/internal/exceptions/stacktrace/StackTraceFilter.java,37,f (!this.isBad(unfilteredStackTrace.get(i))) {
True,src/org/mockito/internal/exceptions/base/StackTraceFilter.java,src/org/mockito/internal/exceptions/stacktrace/StackTraceFilter.java,36,if (!cleaner.isOut(unfilteredStackTrace.get(i))) {
False,src/org/mockito/internal/invocation/realmethod/FilteredCGLIBProxyRealMethod.java,src/org/mockito/internal/invocation/realmethod/FilteredCGLIBProxyRealMethod.java,2, Copyright (c) 2007 Mockito contributors
False,src/org/mockito/internal/invocation/realmethod/FilteredCGLIBProxyRealMethod.java,src/org/mockito/internal/invocation/realmethod/FilteredCGLIBProxyRealMethod.java,3, This program is made available under the terms of the MIT License.
True,src/org/mockito/internal/invocation/realmethod/FilteredCGLIBProxyRealMethod.java,src/org/mockito/internal/invocation/realmethod/FilteredCGLIBProxyRealMethod.java,2,* Copyright (c) 2007 Mockito contributors
True,src/org/mockito/internal/invocation/realmethod/FilteredCGLIBProxyRealMethod.java,src/org/mockito/internal/invocation/realmethod/FilteredCGLIBProxyRealMethod.java,3,* This program is made available under the terms of the MIT License.
False,src/org/mockito/internal/invocation/realmethod/FilteredCGLIBProxyRealMethod.java,src/org/mockito/internal/invocation/realmethod/FilteredCGLIBProxyRealMethod.java,7,mport java.io.Serializable;
False,src/org/mockito/internal/invocation/realmethod/FilteredCGLIBProxyRealMethod.java,src/org/mockito/internal/invocation/realmethod/FilteredCGLIBProxyRealMethod.java,10,mport org.mockito.internal.exceptions.base.ConditionalStackTraceFilter;
True,src/org/mockito/internal/invocation/realmethod/FilteredCGLIBProxyRealMethod.java,src/org/mockito/internal/invocation/realmethod/FilteredCGLIBProxyRealMethod.java,8,import org.mockito.internal.exceptions.stacktrace.ConditionalStackTraceFilter;
True,src/org/mockito/internal/invocation/realmethod/FilteredCGLIBProxyRealMethod.java,src/org/mockito/internal/invocation/realmethod/FilteredCGLIBProxyRealMethod.java,10,import java.io.Serializable;
False,src/org/mockito/internal/stubbing/answers/ThrowsException.java,src/org/mockito/internal/stubbing/answers/ThrowsException.java,2, Copyright (c) 2007 Mockito contributors
False,src/org/mockito/internal/stubbing/answers/ThrowsException.java,src/org/mockito/internal/stubbing/answers/ThrowsException.java,3, This program is made available under the terms of the MIT License.
True,src/org/mockito/internal/stubbing/answers/ThrowsException.java,src/org/mockito/internal/stubbing/answers/ThrowsException.java,2,* Copyright (c) 2007 Mockito contributors
True,src/org/mockito/internal/stubbing/answers/ThrowsException.java,src/org/mockito/internal/stubbing/answers/ThrowsException.java,3,* This program is made available under the terms of the MIT License.
False,src/org/mockito/internal/stubbing/answers/ThrowsException.java,src/org/mockito/internal/stubbing/answers/ThrowsException.java,7,mport java.io.Serializable;
False,src/org/mockito/internal/stubbing/answers/ThrowsException.java,src/org/mockito/internal/stubbing/answers/ThrowsException.java,9,mport org.mockito.internal.exceptions.base.ConditionalStackTraceFilter;
True,src/org/mockito/internal/stubbing/answers/ThrowsException.java,src/org/mockito/internal/stubbing/answers/ThrowsException.java,7,import org.mockito.internal.exceptions.stacktrace.ConditionalStackTraceFilter;
True,src/org/mockito/internal/stubbing/answers/ThrowsException.java,src/org/mockito/internal/stubbing/answers/ThrowsException.java,12,import java.io.Serializable;
False,src/org/mockito/internal/stubbing/answers/ThrowsExceptionClass.java,src/org/mockito/internal/stubbing/answers/ThrowsExceptionClass.java,8,mport org.mockito.internal.exceptions.base.ConditionalStackTraceFilter;
True,src/org/mockito/internal/stubbing/answers/ThrowsExceptionClass.java,src/org/mockito/internal/stubbing/answers/ThrowsExceptionClass.java,8,import org.mockito.internal.exceptions.stacktrace.ConditionalStackTraceFilter;
True,src/org/mockito/plugins/StackTraceCleanerProvider.java,src/org/mockito/plugins/StackTraceCleanerProvider.java,1,package org.mockito.plugins;
True,src/org/mockito/plugins/StackTraceCleanerProvider.java,src/org/mockito/plugins/StackTraceCleanerProvider.java,3,import org.mockito.Incubating;
True,src/org/mockito/plugins/StackTraceCleanerProvider.java,src/org/mockito/plugins/StackTraceCleanerProvider.java,4,import org.mockito.exceptions.stacktrace.StackTraceCleaner;
True,src/org/mockito/plugins/StackTraceCleanerProvider.java,src/org/mockito/plugins/StackTraceCleanerProvider.java,7,* An extension point to register custom {@link StackTraceCleaner}.
True,src/org/mockito/plugins/StackTraceCleanerProvider.java,src/org/mockito/plugins/StackTraceCleanerProvider.java,8,* You can replace Mockito's default StackTraceCleaner.
True,src/org/mockito/plugins/StackTraceCleanerProvider.java,src/org/mockito/plugins/StackTraceCleanerProvider.java,9,* You can also 'enhance' Mockito's default behavior
True,src/org/mockito/plugins/StackTraceCleanerProvider.java,src/org/mockito/plugins/StackTraceCleanerProvider.java,10,* because the default cleaner is passed as parameter to the method.
True,src/org/mockito/plugins/StackTraceCleanerProvider.java,src/org/mockito/plugins/StackTraceCleanerProvider.java,11,* <p>
True,src/org/mockito/plugins/StackTraceCleanerProvider.java,src/org/mockito/plugins/StackTraceCleanerProvider.java,12,* For more information how to register custom StackTraceCleaner
True,src/org/mockito/plugins/StackTraceCleanerProvider.java,src/org/mockito/plugins/StackTraceCleanerProvider.java,13,* please refer to the documentation of {@link MockMaker}.
True,src/org/mockito/plugins/StackTraceCleanerProvider.java,src/org/mockito/plugins/StackTraceCleanerProvider.java,14,* We will update the documentation shortly.
True,src/org/mockito/plugins/StackTraceCleanerProvider.java,src/org/mockito/plugins/StackTraceCleanerProvider.java,15,* <p>
True,src/org/mockito/plugins/StackTraceCleanerProvider.java,src/org/mockito/plugins/StackTraceCleanerProvider.java,16,* See the default implementation: {@link org.mockito.internal.exceptions.stacktrace.DefaultStackTraceCleanerProvider}
True,src/org/mockito/plugins/StackTraceCleanerProvider.java,src/org/mockito/plugins/StackTraceCleanerProvider.java,18,@Incubating
True,src/org/mockito/plugins/StackTraceCleanerProvider.java,src/org/mockito/plugins/StackTraceCleanerProvider.java,19,public interface StackTraceCleanerProvider {
True,src/org/mockito/plugins/StackTraceCleanerProvider.java,src/org/mockito/plugins/StackTraceCleanerProvider.java,22,* Allows configuring custom StackTraceCleaner.
True,src/org/mockito/plugins/StackTraceCleanerProvider.java,src/org/mockito/plugins/StackTraceCleanerProvider.java,24,* @param defaultCleaner - Mockito's default StackTraceCleaner
True,src/org/mockito/plugins/StackTraceCleanerProvider.java,src/org/mockito/plugins/StackTraceCleanerProvider.java,25,* @return StackTraceCleaner to use
True,src/org/mockito/plugins/StackTraceCleanerProvider.java,src/org/mockito/plugins/StackTraceCleanerProvider.java,27,StackTraceCleaner getStackTraceCleaner(StackTraceCleaner defaultCleaner);
False,test/org/mockito/internal/exceptions/base/ConditionalStackTraceFilterTest.java,test/org/mockito/internal/exceptions/stacktrace/ConditionalStackTraceFilterTest.java,2, Copyright (c) 2007 Mockito contributors
False,test/org/mockito/internal/exceptions/base/ConditionalStackTraceFilterTest.java,test/org/mockito/internal/exceptions/stacktrace/ConditionalStackTraceFilterTest.java,3, This program is made available under the terms of the MIT License.
False,test/org/mockito/internal/exceptions/base/ConditionalStackTraceFilterTest.java,test/org/mockito/internal/exceptions/stacktrace/ConditionalStackTraceFilterTest.java,5,ackage org.mockito.internal.exceptions.base;
False,test/org/mockito/internal/exceptions/base/ConditionalStackTraceFilterTest.java,test/org/mockito/internal/exceptions/stacktrace/ConditionalStackTraceFilterTest.java,7,mport static org.mockitoutil.ExtraMatchers.*;
True,test/org/mockito/internal/exceptions/base/ConditionalStackTraceFilterTest.java,test/org/mockito/internal/exceptions/stacktrace/ConditionalStackTraceFilterTest.java,2,* Copyright (c) 2007 Mockito contributors
True,test/org/mockito/internal/exceptions/base/ConditionalStackTraceFilterTest.java,test/org/mockito/internal/exceptions/stacktrace/ConditionalStackTraceFilterTest.java,3,* This program is made available under the terms of the MIT License.
True,test/org/mockito/internal/exceptions/base/ConditionalStackTraceFilterTest.java,test/org/mockito/internal/exceptions/stacktrace/ConditionalStackTraceFilterTest.java,5,package org.mockito.internal.exceptions.stacktrace;
True,test/org/mockito/internal/exceptions/base/ConditionalStackTraceFilterTest.java,test/org/mockito/internal/exceptions/stacktrace/ConditionalStackTraceFilterTest.java,12,import static org.mockitoutil.ExtraMatchers.hasOnlyThoseClassesInStackTrace;
False,test/org/mockito/internal/exceptions/base/StackTraceFilterTest.java,test/org/mockito/internal/exceptions/stacktrace/StackTraceFilterTest.java,6,ackage org.mockito.internal.exceptions.base;
False,test/org/mockito/internal/exceptions/base/StackTraceFilterTest.java,test/org/mockito/internal/exceptions/stacktrace/StackTraceFilterTest.java,8,mport static org.mockitoutil.ExtraMatchers.*;
True,test/org/mockito/internal/exceptions/base/StackTraceFilterTest.java,test/org/mockito/internal/exceptions/stacktrace/StackTraceFilterTest.java,6,package org.mockito.internal.exceptions.stacktrace;
True,test/org/mockito/internal/exceptions/base/StackTraceFilterTest.java,test/org/mockito/internal/exceptions/stacktrace/StackTraceFilterTest.java,12,import static org.mockitoutil.ExtraMatchers.hasOnlyThoseClasses;
False,test/org/mockitousage/internal/debugging/LocationImplTest.java,test/org/mockitousage/internal/debugging/LocationImplTest.java,2, Copyright (c) 2007 Mockito contributors
False,test/org/mockitousage/internal/debugging/LocationImplTest.java,test/org/mockitousage/internal/debugging/LocationImplTest.java,3, This program is made available under the terms of the MIT License.
True,test/org/mockitousage/internal/debugging/LocationImplTest.java,test/org/mockitousage/internal/debugging/LocationImplTest.java,2,* Copyright (c) 2007 Mockito contributors
True,test/org/mockitousage/internal/debugging/LocationImplTest.java,test/org/mockitousage/internal/debugging/LocationImplTest.java,3,* This program is made available under the terms of the MIT License.
False,test/org/mockitousage/internal/debugging/LocationImplTest.java,test/org/mockitousage/internal/debugging/LocationImplTest.java,9,mport org.mockito.internal.exceptions.base.StackTraceFilter;
True,test/org/mockitousage/internal/debugging/LocationImplTest.java,test/org/mockitousage/internal/debugging/LocationImplTest.java,9,import org.mockito.internal.exceptions.stacktrace.StackTraceFilter;
