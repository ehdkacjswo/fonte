is_addition,old_file_path,new_file_path,line_num,content
True,test/ToDo.java,test/ToDo.java,2,public class ToDo {
True,test/ToDo.java,test/ToDo.java,4,Szczepan's
True,test/ToDo.java,test/ToDo.java,6,TODO review ALL tests from EasyMock and leave only what's needed
True,test/ToDo.java,test/ToDo.java,7,TODO review ALL CODE from EasyMock and leave only what's needed
True,test/ToDo.java,test/ToDo.java,8,TODO the headers in files to show MIT license and copyrights
False,test/org/easymock/internal/ExpectedInvocationTest.java,test/org/easymock/internal/ExpectedInvocationTest.java,4,mport static org.junit.Assert.assertThat;
True,test/org/easymock/internal/ExpectedInvocationTest.java,test/org/easymock/internal/ExpectedInvocationTest.java,4,import static org.junit.Assert.*;
True,test/org/easymock/internal/ExpectedInvocationTest.java,test/org/easymock/internal/ExpectedInvocationTest.java,20,@Test
True,test/org/easymock/internal/ExpectedInvocationTest.java,test/org/easymock/internal/ExpectedInvocationTest.java,21,"public void shouldNotEqualIfNumberOfArgumentsDiffer() throws SecurityException, NoSuchMethodException {"
True,test/org/easymock/internal/ExpectedInvocationTest.java,test/org/easymock/internal/ExpectedInvocationTest.java,22,Object mock = new Object();
True,test/org/easymock/internal/ExpectedInvocationTest.java,test/org/easymock/internal/ExpectedInvocationTest.java,24,"Method dummyMethod = Object.class.getMethod(""equals"","
True,test/org/easymock/internal/ExpectedInvocationTest.java,test/org/easymock/internal/ExpectedInvocationTest.java,25,new Class[] { Object.class });
True,test/org/easymock/internal/ExpectedInvocationTest.java,test/org/easymock/internal/ExpectedInvocationTest.java,27,ExpectedInvocation invocationWithOneArg = new ExpectedInvocation(
True,test/org/easymock/internal/ExpectedInvocationTest.java,test/org/easymock/internal/ExpectedInvocationTest.java,28,"new Invocation(mock, dummyMethod, new Object[] { """" }),"
True,test/org/easymock/internal/ExpectedInvocationTest.java,test/org/easymock/internal/ExpectedInvocationTest.java,29,null);
True,test/org/easymock/internal/ExpectedInvocationTest.java,test/org/easymock/internal/ExpectedInvocationTest.java,30,ExpectedInvocation invocationWithTwoArgs = new ExpectedInvocation(
True,test/org/easymock/internal/ExpectedInvocationTest.java,test/org/easymock/internal/ExpectedInvocationTest.java,31,"new Invocation(mock, dummyMethod, new Object[] { """", """" }),"
True,test/org/easymock/internal/ExpectedInvocationTest.java,test/org/easymock/internal/ExpectedInvocationTest.java,32,null);
True,test/org/easymock/internal/ExpectedInvocationTest.java,test/org/easymock/internal/ExpectedInvocationTest.java,34,assertFalse(invocationWithOneArg.equals(null));
True,test/org/easymock/internal/ExpectedInvocationTest.java,test/org/easymock/internal/ExpectedInvocationTest.java,35,assertFalse(invocationWithOneArg.equals(invocationWithTwoArgs));
True,test/org/easymock/tests/IMethods.java,test/org/easymock/tests/IMethods.java,11,//TODO kill the index
False,test/org/easymock/tests/InvocationTest.java,test/org/easymock/tests/InvocationTest.java,46,Test
False,test/org/easymock/tests/InvocationTest.java,test/org/easymock/tests/InvocationTest.java,47,"ublic void shouldNotEqualIfNumberOfArgsDiffer() throws SecurityException, NoSuchMethodException {"
False,test/org/easymock/tests/InvocationTest.java,test/org/easymock/tests/InvocationTest.java,48,bject mock = new Object();
False,test/org/easymock/tests/InvocationTest.java,test/org/easymock/tests/InvocationTest.java,50,xpectedInvocation invocationWithOneArg = new ExpectedInvocation(
False,test/org/easymock/tests/InvocationTest.java,test/org/easymock/tests/InvocationTest.java,51,"ew Invocation(mock, dummyMethod, new Object[] { """" }),"
False,test/org/easymock/tests/InvocationTest.java,test/org/easymock/tests/InvocationTest.java,52,ull);
False,test/org/easymock/tests/InvocationTest.java,test/org/easymock/tests/InvocationTest.java,53,xpectedInvocation invocationWithTwoArgs = new ExpectedInvocation(
False,test/org/easymock/tests/InvocationTest.java,test/org/easymock/tests/InvocationTest.java,54,"ew Invocation(mock, dummyMethod, new Object[] { """", """" }),"
False,test/org/easymock/tests/InvocationTest.java,test/org/easymock/tests/InvocationTest.java,55,ull);
False,test/org/easymock/tests/InvocationTest.java,test/org/easymock/tests/InvocationTest.java,57,ssertFalse(invocationWithOneArg.equals(null));
False,test/org/easymock/tests/InvocationTest.java,test/org/easymock/tests/InvocationTest.java,58,ssertFalse(invocationWithOneArg.equals(invocationWithTwoArgs));
False,test/org/easymock/tests/NiceMockControlTest.java,test/org/easymock/tests/NiceMockControlTest.java,2," Copyright (c) 2001-2007 OFFIS, Tammo Freese."
False,test/org/easymock/tests/NiceMockControlTest.java,test/org/easymock/tests/NiceMockControlTest.java,3, This program is made available under the terms of the MIT License.
False,test/org/easymock/tests/NiceMockControlTest.java,test/org/easymock/tests/NiceMockControlTest.java,5,ackage org.easymock.tests;
False,test/org/easymock/tests/NiceMockControlTest.java,test/org/easymock/tests/NiceMockControlTest.java,7,mport static org.junit.Assert.*;
False,test/org/easymock/tests/NiceMockControlTest.java,test/org/easymock/tests/NiceMockControlTest.java,9,mport org.easymock.MockControl;
False,test/org/easymock/tests/NiceMockControlTest.java,test/org/easymock/tests/NiceMockControlTest.java,10,mport org.junit.Before;
False,test/org/easymock/tests/NiceMockControlTest.java,test/org/easymock/tests/NiceMockControlTest.java,11,mport org.junit.Test;
False,test/org/easymock/tests/NiceMockControlTest.java,test/org/easymock/tests/NiceMockControlTest.java,13,ublic class NiceMockControlTest {
False,test/org/easymock/tests/NiceMockControlTest.java,test/org/easymock/tests/NiceMockControlTest.java,14,ockControl<IMethods> control;
False,test/org/easymock/tests/NiceMockControlTest.java,test/org/easymock/tests/NiceMockControlTest.java,16,Methods mock;
False,test/org/easymock/tests/NiceMockControlTest.java,test/org/easymock/tests/NiceMockControlTest.java,18,Before
False,test/org/easymock/tests/NiceMockControlTest.java,test/org/easymock/tests/NiceMockControlTest.java,19,ublic void setup() {
False,test/org/easymock/tests/NiceMockControlTest.java,test/org/easymock/tests/NiceMockControlTest.java,20,ontrol = MockControl.createNiceControl(IMethods.class);
False,test/org/easymock/tests/NiceMockControlTest.java,test/org/easymock/tests/NiceMockControlTest.java,21,ock = control.getMock();
False,test/org/easymock/tests/NiceMockControlTest.java,test/org/easymock/tests/NiceMockControlTest.java,22,ontrol.replay();
False,test/org/easymock/tests/NiceMockControlTest.java,test/org/easymock/tests/NiceMockControlTest.java,25,Test
False,test/org/easymock/tests/NiceMockControlTest.java,test/org/easymock/tests/NiceMockControlTest.java,26,ublic void defaultReturnValueBoolean() {
False,test/org/easymock/tests/NiceMockControlTest.java,test/org/easymock/tests/NiceMockControlTest.java,27,"ssertEquals(false, mock.booleanReturningMethod(12));"
False,test/org/easymock/tests/NiceMockControlTest.java,test/org/easymock/tests/NiceMockControlTest.java,28,ontrol.verify();
False,test/org/easymock/tests/NiceMockControlTest.java,test/org/easymock/tests/NiceMockControlTest.java,31,Test
False,test/org/easymock/tests/NiceMockControlTest.java,test/org/easymock/tests/NiceMockControlTest.java,32,ublic void defaultReturnValueFloat() {
False,test/org/easymock/tests/NiceMockControlTest.java,test/org/easymock/tests/NiceMockControlTest.java,33,"ssertEquals(0.0f, mock.floatReturningMethod(12), 0.0f);"
False,test/org/easymock/tests/NiceMockControlTest.java,test/org/easymock/tests/NiceMockControlTest.java,34,ontrol.verify();
False,test/org/easymock/tests/NiceMockControlTest.java,test/org/easymock/tests/NiceMockControlTest.java,37,Test
False,test/org/easymock/tests/NiceMockControlTest.java,test/org/easymock/tests/NiceMockControlTest.java,38,ublic void defaultReturnValueDouble() {
False,test/org/easymock/tests/NiceMockControlTest.java,test/org/easymock/tests/NiceMockControlTest.java,39,"ssertEquals(0.0d, mock.doubleReturningMethod(12), 0.0d);"
False,test/org/easymock/tests/NiceMockControlTest.java,test/org/easymock/tests/NiceMockControlTest.java,40,ontrol.verify();
False,test/org/easymock/tests/NiceMockControlTest.java,test/org/easymock/tests/NiceMockControlTest.java,43,Test
False,test/org/easymock/tests/NiceMockControlTest.java,test/org/easymock/tests/NiceMockControlTest.java,44,ublic void defaultReturnValueObject() {
False,test/org/easymock/tests/NiceMockControlTest.java,test/org/easymock/tests/NiceMockControlTest.java,45,"ssertEquals(null, mock.objectReturningMethod(12));"
False,test/org/easymock/tests/NiceMockControlTest.java,test/org/easymock/tests/NiceMockControlTest.java,46,ontrol.verify();
False,test/org/easymock/tests2/NiceMockReturnsEmptyCollectionsTest.java,test/org/easymock/tests2/NiceMockReturnsEmptyCollectionsTest.java,1,ackage org.easymock.tests2;
False,test/org/easymock/tests2/NiceMockReturnsEmptyCollectionsTest.java,test/org/easymock/tests2/NiceMockReturnsEmptyCollectionsTest.java,3,mport java.util.LinkedList;
False,test/org/easymock/tests2/NiceMockReturnsEmptyCollectionsTest.java,test/org/easymock/tests2/NiceMockReturnsEmptyCollectionsTest.java,4,mport java.util.List;
False,test/org/easymock/tests2/NiceMockReturnsEmptyCollectionsTest.java,test/org/easymock/tests2/NiceMockReturnsEmptyCollectionsTest.java,5,mport java.util.Map;
False,test/org/easymock/tests2/NiceMockReturnsEmptyCollectionsTest.java,test/org/easymock/tests2/NiceMockReturnsEmptyCollectionsTest.java,7,mport org.easymock.EasyMock;
False,test/org/easymock/tests2/NiceMockReturnsEmptyCollectionsTest.java,test/org/easymock/tests2/NiceMockReturnsEmptyCollectionsTest.java,8,mport org.junit.Test;
False,test/org/easymock/tests2/NiceMockReturnsEmptyCollectionsTest.java,test/org/easymock/tests2/NiceMockReturnsEmptyCollectionsTest.java,9,mport static org.junit.Assert.*;
False,test/org/easymock/tests2/NiceMockReturnsEmptyCollectionsTest.java,test/org/easymock/tests2/NiceMockReturnsEmptyCollectionsTest.java,11,ublic class NiceMockReturnsEmptyCollectionsTest {
False,test/org/easymock/tests2/NiceMockReturnsEmptyCollectionsTest.java,test/org/easymock/tests2/NiceMockReturnsEmptyCollectionsTest.java,13,"SuppressWarnings(""unchecked"")"
False,test/org/easymock/tests2/NiceMockReturnsEmptyCollectionsTest.java,test/org/easymock/tests2/NiceMockReturnsEmptyCollectionsTest.java,14,Test public void testBeNiceConvertsDefaultMock() {
False,test/org/easymock/tests2/NiceMockReturnsEmptyCollectionsTest.java,test/org/easymock/tests2/NiceMockReturnsEmptyCollectionsTest.java,15,ollectionServer mock = EasyMock.createNiceMock(CollectionServer.class);
False,test/org/easymock/tests2/NiceMockReturnsEmptyCollectionsTest.java,test/org/easymock/tests2/NiceMockReturnsEmptyCollectionsTest.java,17,asyMock.replay(mock);
False,test/org/easymock/tests2/NiceMockReturnsEmptyCollectionsTest.java,test/org/easymock/tests2/NiceMockReturnsEmptyCollectionsTest.java,19,ssertTrue(mock.list().isEmpty());
False,test/org/easymock/tests2/NiceMockReturnsEmptyCollectionsTest.java,test/org/easymock/tests2/NiceMockReturnsEmptyCollectionsTest.java,20,ssertTrue(mock.linkedList().isEmpty());
False,test/org/easymock/tests2/NiceMockReturnsEmptyCollectionsTest.java,test/org/easymock/tests2/NiceMockReturnsEmptyCollectionsTest.java,21,ssertTrue(mock.map().isEmpty());
False,test/org/easymock/tests2/NiceMockReturnsEmptyCollectionsTest.java,test/org/easymock/tests2/NiceMockReturnsEmptyCollectionsTest.java,22,ssertTrue(mock.hashSet().isEmpty());
False,test/org/easymock/tests2/NiceMockReturnsEmptyCollectionsTest.java,test/org/easymock/tests2/NiceMockReturnsEmptyCollectionsTest.java,24,asyMock.verify(mock);
False,test/org/easymock/tests2/NiceMockReturnsEmptyCollectionsTest.java,test/org/easymock/tests2/NiceMockReturnsEmptyCollectionsTest.java,27,"SuppressWarnings(""unchecked"")"
False,test/org/easymock/tests2/NiceMockReturnsEmptyCollectionsTest.java,test/org/easymock/tests2/NiceMockReturnsEmptyCollectionsTest.java,28,rivate interface CollectionServer {
False,test/org/easymock/tests2/NiceMockReturnsEmptyCollectionsTest.java,test/org/easymock/tests2/NiceMockReturnsEmptyCollectionsTest.java,29,ist list();
False,test/org/easymock/tests2/NiceMockReturnsEmptyCollectionsTest.java,test/org/easymock/tests2/NiceMockReturnsEmptyCollectionsTest.java,30,inkedList linkedList();
False,test/org/easymock/tests2/NiceMockReturnsEmptyCollectionsTest.java,test/org/easymock/tests2/NiceMockReturnsEmptyCollectionsTest.java,31,ap map();
False,test/org/easymock/tests2/NiceMockReturnsEmptyCollectionsTest.java,test/org/easymock/tests2/NiceMockReturnsEmptyCollectionsTest.java,32,ava.util.HashSet hashSet();
False,test/org/easymock/tests2/NiceMockTest.java,test/org/easymock/tests2/NiceMockTest.java,2," Copyright (c) 2001-2007 OFFIS, Tammo Freese."
False,test/org/easymock/tests2/NiceMockTest.java,test/org/easymock/tests2/NiceMockTest.java,3, This program is made available under the terms of the MIT License.
False,test/org/easymock/tests2/NiceMockTest.java,test/org/easymock/tests2/NiceMockTest.java,5,ackage org.easymock.tests2;
False,test/org/easymock/tests2/NiceMockTest.java,test/org/easymock/tests2/NiceMockTest.java,7,mport static org.easymock.EasyMock.*;
False,test/org/easymock/tests2/NiceMockTest.java,test/org/easymock/tests2/NiceMockTest.java,8,mport static org.junit.Assert.*;
False,test/org/easymock/tests2/NiceMockTest.java,test/org/easymock/tests2/NiceMockTest.java,10,mport org.easymock.tests.IMethods;
False,test/org/easymock/tests2/NiceMockTest.java,test/org/easymock/tests2/NiceMockTest.java,11,mport org.junit.Before;
False,test/org/easymock/tests2/NiceMockTest.java,test/org/easymock/tests2/NiceMockTest.java,12,mport org.junit.Test;
False,test/org/easymock/tests2/NiceMockTest.java,test/org/easymock/tests2/NiceMockTest.java,14,ublic class NiceMockTest {
False,test/org/easymock/tests2/NiceMockTest.java,test/org/easymock/tests2/NiceMockTest.java,16,Methods mock;
False,test/org/easymock/tests2/NiceMockTest.java,test/org/easymock/tests2/NiceMockTest.java,18,Before
False,test/org/easymock/tests2/NiceMockTest.java,test/org/easymock/tests2/NiceMockTest.java,19,ublic void setup() {
False,test/org/easymock/tests2/NiceMockTest.java,test/org/easymock/tests2/NiceMockTest.java,20,ock = createNiceMock(IMethods.class);
False,test/org/easymock/tests2/NiceMockTest.java,test/org/easymock/tests2/NiceMockTest.java,21,eplay(mock);
False,test/org/easymock/tests2/NiceMockTest.java,test/org/easymock/tests2/NiceMockTest.java,24,Test
False,test/org/easymock/tests2/NiceMockTest.java,test/org/easymock/tests2/NiceMockTest.java,25,ublic void defaultReturnValueBoolean() {
False,test/org/easymock/tests2/NiceMockTest.java,test/org/easymock/tests2/NiceMockTest.java,26,"ssertEquals(false, mock.booleanReturningMethod(12));"
False,test/org/easymock/tests2/NiceMockTest.java,test/org/easymock/tests2/NiceMockTest.java,27,erify(mock);
False,test/org/easymock/tests2/NiceMockTest.java,test/org/easymock/tests2/NiceMockTest.java,30,Test
False,test/org/easymock/tests2/NiceMockTest.java,test/org/easymock/tests2/NiceMockTest.java,31,ublic void defaultReturnValueFloat() {
False,test/org/easymock/tests2/NiceMockTest.java,test/org/easymock/tests2/NiceMockTest.java,32,"ssertEquals(0.0f, mock.floatReturningMethod(12), 0.0f);"
False,test/org/easymock/tests2/NiceMockTest.java,test/org/easymock/tests2/NiceMockTest.java,33,erify(mock);
False,test/org/easymock/tests2/NiceMockTest.java,test/org/easymock/tests2/NiceMockTest.java,36,Test
False,test/org/easymock/tests2/NiceMockTest.java,test/org/easymock/tests2/NiceMockTest.java,37,ublic void defaultReturnValueDouble() {
False,test/org/easymock/tests2/NiceMockTest.java,test/org/easymock/tests2/NiceMockTest.java,38,"ssertEquals(0.0d, mock.doubleReturningMethod(12), 0.0d);"
False,test/org/easymock/tests2/NiceMockTest.java,test/org/easymock/tests2/NiceMockTest.java,39,erify(mock);
False,test/org/easymock/tests2/NiceMockTest.java,test/org/easymock/tests2/NiceMockTest.java,42,Test
False,test/org/easymock/tests2/NiceMockTest.java,test/org/easymock/tests2/NiceMockTest.java,43,ublic void defaultReturnValueObject() {
False,test/org/easymock/tests2/NiceMockTest.java,test/org/easymock/tests2/NiceMockTest.java,44,"ssertEquals(null, mock.objectReturningMethod(12));"
False,test/org/easymock/tests2/NiceMockTest.java,test/org/easymock/tests2/NiceMockTest.java,45,erify(mock);
False,test/org/mockito/usage/MockReturnsEmptyCollectionsTest.java,test/org/mockito/usage/MockReturnsEmptyCollectionsTest.java,1,ackage org.mockito.usage;
False,test/org/mockito/usage/MockReturnsEmptyCollectionsTest.java,test/org/mockito/usage/MockReturnsEmptyCollectionsTest.java,3,mport static org.junit.Assert.assertTrue;
False,test/org/mockito/usage/MockReturnsEmptyCollectionsTest.java,test/org/mockito/usage/MockReturnsEmptyCollectionsTest.java,5,mport java.util.*;
False,test/org/mockito/usage/MockReturnsEmptyCollectionsTest.java,test/org/mockito/usage/MockReturnsEmptyCollectionsTest.java,7,mport org.junit.Test;
False,test/org/mockito/usage/MockReturnsEmptyCollectionsTest.java,test/org/mockito/usage/MockReturnsEmptyCollectionsTest.java,8,mport org.mockito.Mockito;
False,test/org/mockito/usage/MockReturnsEmptyCollectionsTest.java,test/org/mockito/usage/MockReturnsEmptyCollectionsTest.java,10,ublic class MockReturnsEmptyCollectionsTest {
False,test/org/mockito/usage/MockReturnsEmptyCollectionsTest.java,test/org/mockito/usage/MockReturnsEmptyCollectionsTest.java,12,"SuppressWarnings(""unchecked"")"
False,test/org/mockito/usage/MockReturnsEmptyCollectionsTest.java,test/org/mockito/usage/MockReturnsEmptyCollectionsTest.java,13,Test
False,test/org/mockito/usage/MockReturnsEmptyCollectionsTest.java,test/org/mockito/usage/MockReturnsEmptyCollectionsTest.java,14,ublic void shouldReturnEmptyCollections() {
False,test/org/mockito/usage/MockReturnsEmptyCollectionsTest.java,test/org/mockito/usage/MockReturnsEmptyCollectionsTest.java,15,ollectionsServer mock = Mockito.mock(CollectionsServer.class);
False,test/org/mockito/usage/MockReturnsEmptyCollectionsTest.java,test/org/mockito/usage/MockReturnsEmptyCollectionsTest.java,17,ssertTrue(mock.list().isEmpty());
False,test/org/mockito/usage/MockReturnsEmptyCollectionsTest.java,test/org/mockito/usage/MockReturnsEmptyCollectionsTest.java,18,ssertTrue(mock.linkedList().isEmpty());
False,test/org/mockito/usage/MockReturnsEmptyCollectionsTest.java,test/org/mockito/usage/MockReturnsEmptyCollectionsTest.java,19,ssertTrue(mock.map().isEmpty());
False,test/org/mockito/usage/MockReturnsEmptyCollectionsTest.java,test/org/mockito/usage/MockReturnsEmptyCollectionsTest.java,20,ssertTrue(mock.hashSet().isEmpty());
False,test/org/mockito/usage/MockReturnsEmptyCollectionsTest.java,test/org/mockito/usage/MockReturnsEmptyCollectionsTest.java,23,"SuppressWarnings(""unchecked"")"
False,test/org/mockito/usage/MockReturnsEmptyCollectionsTest.java,test/org/mockito/usage/MockReturnsEmptyCollectionsTest.java,24,rivate class CollectionsServer {
False,test/org/mockito/usage/MockReturnsEmptyCollectionsTest.java,test/org/mockito/usage/MockReturnsEmptyCollectionsTest.java,25,ist list() {
False,test/org/mockito/usage/MockReturnsEmptyCollectionsTest.java,test/org/mockito/usage/MockReturnsEmptyCollectionsTest.java,26,eturn null;
False,test/org/mockito/usage/MockReturnsEmptyCollectionsTest.java,test/org/mockito/usage/MockReturnsEmptyCollectionsTest.java,29,inkedList linkedList() {
False,test/org/mockito/usage/MockReturnsEmptyCollectionsTest.java,test/org/mockito/usage/MockReturnsEmptyCollectionsTest.java,30,eturn null;
False,test/org/mockito/usage/MockReturnsEmptyCollectionsTest.java,test/org/mockito/usage/MockReturnsEmptyCollectionsTest.java,33,ap map() {
False,test/org/mockito/usage/MockReturnsEmptyCollectionsTest.java,test/org/mockito/usage/MockReturnsEmptyCollectionsTest.java,34,eturn null;
False,test/org/mockito/usage/MockReturnsEmptyCollectionsTest.java,test/org/mockito/usage/MockReturnsEmptyCollectionsTest.java,37,ava.util.HashSet hashSet() {
False,test/org/mockito/usage/MockReturnsEmptyCollectionsTest.java,test/org/mockito/usage/MockReturnsEmptyCollectionsTest.java,38,eturn null;
True,test/org/mockito/usage/ReturningDefaultValuesTest.java,test/org/mockito/usage/ReturningDefaultValuesTest.java,2,* Copyright (c) 2007 Szczepan Faber
True,test/org/mockito/usage/ReturningDefaultValuesTest.java,test/org/mockito/usage/ReturningDefaultValuesTest.java,3,* This program is made available under the terms of the MIT License.
True,test/org/mockito/usage/ReturningDefaultValuesTest.java,test/org/mockito/usage/ReturningDefaultValuesTest.java,5,package org.mockito.usage;
True,test/org/mockito/usage/ReturningDefaultValuesTest.java,test/org/mockito/usage/ReturningDefaultValuesTest.java,7,import static org.junit.Assert.*;
True,test/org/mockito/usage/ReturningDefaultValuesTest.java,test/org/mockito/usage/ReturningDefaultValuesTest.java,9,import java.util.*;
True,test/org/mockito/usage/ReturningDefaultValuesTest.java,test/org/mockito/usage/ReturningDefaultValuesTest.java,11,import org.easymock.tests.IMethods;
True,test/org/mockito/usage/ReturningDefaultValuesTest.java,test/org/mockito/usage/ReturningDefaultValuesTest.java,12,import org.junit.Test;
True,test/org/mockito/usage/ReturningDefaultValuesTest.java,test/org/mockito/usage/ReturningDefaultValuesTest.java,13,import org.mockito.Mockito;
True,test/org/mockito/usage/ReturningDefaultValuesTest.java,test/org/mockito/usage/ReturningDefaultValuesTest.java,15,"@SuppressWarnings(""unchecked"")"
True,test/org/mockito/usage/ReturningDefaultValuesTest.java,test/org/mockito/usage/ReturningDefaultValuesTest.java,16,public class ReturningDefaultValuesTest {
True,test/org/mockito/usage/ReturningDefaultValuesTest.java,test/org/mockito/usage/ReturningDefaultValuesTest.java,18,@Test
True,test/org/mockito/usage/ReturningDefaultValuesTest.java,test/org/mockito/usage/ReturningDefaultValuesTest.java,19,public void shouldReturnAllKindsOfPrimitives() {
True,test/org/mockito/usage/ReturningDefaultValuesTest.java,test/org/mockito/usage/ReturningDefaultValuesTest.java,20,IMethods mock = Mockito.mock(IMethods.class);
True,test/org/mockito/usage/ReturningDefaultValuesTest.java,test/org/mockito/usage/ReturningDefaultValuesTest.java,22,//this is mainly to prove that cglib enchanted thing works properly
True,test/org/mockito/usage/ReturningDefaultValuesTest.java,test/org/mockito/usage/ReturningDefaultValuesTest.java,23,"assertEquals((byte)0, mock.byteReturningMethod(12));"
True,test/org/mockito/usage/ReturningDefaultValuesTest.java,test/org/mockito/usage/ReturningDefaultValuesTest.java,24,"assertEquals((short)0, mock.shortReturningMethod(12));"
True,test/org/mockito/usage/ReturningDefaultValuesTest.java,test/org/mockito/usage/ReturningDefaultValuesTest.java,25,"assertEquals(0, mock.intReturningMethod(12));"
True,test/org/mockito/usage/ReturningDefaultValuesTest.java,test/org/mockito/usage/ReturningDefaultValuesTest.java,26,"assertEquals(0L, mock.intReturningMethod(12));"
True,test/org/mockito/usage/ReturningDefaultValuesTest.java,test/org/mockito/usage/ReturningDefaultValuesTest.java,27,"assertEquals(0.0F, mock.floatReturningMethod(12), 0.0F);"
True,test/org/mockito/usage/ReturningDefaultValuesTest.java,test/org/mockito/usage/ReturningDefaultValuesTest.java,28,"assertEquals(0.0D, mock.doubleReturningMethod(12), 0.0D);"
True,test/org/mockito/usage/ReturningDefaultValuesTest.java,test/org/mockito/usage/ReturningDefaultValuesTest.java,29,"assertEquals('\u0000', mock.charReturningMethod(12));"
True,test/org/mockito/usage/ReturningDefaultValuesTest.java,test/org/mockito/usage/ReturningDefaultValuesTest.java,30,"assertEquals(false, mock.booleanReturningMethod(12));"
True,test/org/mockito/usage/ReturningDefaultValuesTest.java,test/org/mockito/usage/ReturningDefaultValuesTest.java,31,"assertEquals(null, mock.objectReturningMethod(12));"
True,test/org/mockito/usage/ReturningDefaultValuesTest.java,test/org/mockito/usage/ReturningDefaultValuesTest.java,34,@Test
True,test/org/mockito/usage/ReturningDefaultValuesTest.java,test/org/mockito/usage/ReturningDefaultValuesTest.java,35,public void shouldReturnEmptyCollections() {
True,test/org/mockito/usage/ReturningDefaultValuesTest.java,test/org/mockito/usage/ReturningDefaultValuesTest.java,36,CollectionsServer mock = Mockito.mock(CollectionsServer.class);
True,test/org/mockito/usage/ReturningDefaultValuesTest.java,test/org/mockito/usage/ReturningDefaultValuesTest.java,38,assertTrue(mock.list().isEmpty());
True,test/org/mockito/usage/ReturningDefaultValuesTest.java,test/org/mockito/usage/ReturningDefaultValuesTest.java,39,assertTrue(mock.linkedList().isEmpty());
True,test/org/mockito/usage/ReturningDefaultValuesTest.java,test/org/mockito/usage/ReturningDefaultValuesTest.java,40,assertTrue(mock.map().isEmpty());
True,test/org/mockito/usage/ReturningDefaultValuesTest.java,test/org/mockito/usage/ReturningDefaultValuesTest.java,41,assertTrue(mock.hashSet().isEmpty());
True,test/org/mockito/usage/ReturningDefaultValuesTest.java,test/org/mockito/usage/ReturningDefaultValuesTest.java,44,private class CollectionsServer {
True,test/org/mockito/usage/ReturningDefaultValuesTest.java,test/org/mockito/usage/ReturningDefaultValuesTest.java,45,List list() {
True,test/org/mockito/usage/ReturningDefaultValuesTest.java,test/org/mockito/usage/ReturningDefaultValuesTest.java,46,return null;
True,test/org/mockito/usage/ReturningDefaultValuesTest.java,test/org/mockito/usage/ReturningDefaultValuesTest.java,49,LinkedList linkedList() {
True,test/org/mockito/usage/ReturningDefaultValuesTest.java,test/org/mockito/usage/ReturningDefaultValuesTest.java,50,return null;
True,test/org/mockito/usage/ReturningDefaultValuesTest.java,test/org/mockito/usage/ReturningDefaultValuesTest.java,53,Map map() {
True,test/org/mockito/usage/ReturningDefaultValuesTest.java,test/org/mockito/usage/ReturningDefaultValuesTest.java,54,return null;
True,test/org/mockito/usage/ReturningDefaultValuesTest.java,test/org/mockito/usage/ReturningDefaultValuesTest.java,57,java.util.HashSet hashSet() {
True,test/org/mockito/usage/ReturningDefaultValuesTest.java,test/org/mockito/usage/ReturningDefaultValuesTest.java,58,return null;
