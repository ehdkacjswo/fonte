is_addition,old_file_path,new_file_path,line_num,content
False,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,66,"ield.set(testInstance, newSpyInstance(testInstance, field));"
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,66,"field.set(testInstance, newSpyInstance(testInstance, field));"
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,68,} catch (MockitoException e) {
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,69,throw e;
False,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,108,"hrow new MockitoException(""0-arg constructor is required to spy "" + type);"
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,110,"throw new MockitoException(""Unable to initialize @Spy annotated field '"" + field.getName()"
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,111,"+ ""'. Please ensure that the type '"" + type.getSimpleName()  + ""' has 0-arg constructor."");"
False,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,2, Copyright (c) 2007 Mockito contributors
False,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,3, This program is made available under the terms of the MIT License.
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,2,* Copyright (c) 2007 Mockito contributors
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,3,* This program is made available under the terms of the MIT License.
False,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,8,mport org.junit.Rule;
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,8,import org.junit.Rule;
False,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,10,mport org.junit.rules.ExpectedException;
False,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,11,mport org.mockito.Mock;
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,10,import org.junit.rules.ExpectedException;
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,11,import org.mockito.Mock;
False,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,19,mport java.util.Arrays;
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,19,import java.util.Arrays;
False,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,22,mport static org.mockito.Mockito.*;
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,22,import static org.mockito.Mockito.doReturn;
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,23,import static org.mockito.Mockito.when;
False,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,32,estedClassWithoutDefinedConstructor staticTypeWithoutDefinedConstructor;
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,33,NestedClassWithoutDefinedConstructor staticTypeWithoutDefinedConstructor;
False,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,57,ockitoAnnotations.initMocks(withSpy);
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,58,MockitoAnnotations.initMocks(withSpy);
False,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,72,"ssertions.assertThat(e.getMessage()).contains(""0-arg constructor is required"");"
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,73,"Assertions.assertThat(e.getMessage()).contains(""0-arg constructor"");"
False,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,94,Spy AbstractList<String> list;
False,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,96,ist<String> asSingletonList(String s) {
False,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,97,hen(list.size()).thenReturn(1);
False,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,98,hen(list.get(0)).thenReturn(s);
False,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,99,eturn list;
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,95,@Spy AbstractList<String> list;
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,97,List<String> asSingletonList(String s) {
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,98,when(list.size()).thenReturn(1);
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,99,when(list.get(0)).thenReturn(s);
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,100,return list;
False,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,103,ockitoAnnotations.initMocks(withSpy);
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,104,MockitoAnnotations.initMocks(withSpy);
False,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,108,ublic void spyInnerClass() throws Exception {
False,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,110,lass WithMockAndSpy {
False,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,111,Spy private InnerStrength strength;
False,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,112,Mock private List<String> list;
False,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,114,bstract class InnerStrength {
False,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,115,rivate final String name;
False,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,117,nnerStrength() {
False,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,118,/ Make sure that @Mock fields are always injected before @Spy fields.
False,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,119,ssertNotNull(list);
False,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,120,/ Make sure constructor is indeed called.
False,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,121,"his.name = ""inner"";"
False,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,124,bstract String strength();
False,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,126,tring fullStrength() {
False,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,127,"eturn name + "" "" + strength();"
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,109,public void spyInnerClass() throws Exception {
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,111,class WithMockAndSpy {
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,112,@Spy private InnerStrength strength;
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,113,@Mock private List<String> list;
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,115,abstract class InnerStrength {
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,116,private final String name;
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,118,InnerStrength() {
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,119,// Make sure that @Mock fields are always injected before @Spy fields.
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,120,assertNotNull(list);
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,121,// Make sure constructor is indeed called.
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,122,"this.name = ""inner"";"
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,125,abstract String strength();
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,127,String fullStrength() {
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,128,"return name + "" "" + strength();"
False,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,132,ockitoAnnotations.initMocks(outer);
False,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,133,"hen(outer.strength.strength()).thenReturn(""strength"");"
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,133,MockitoAnnotations.initMocks(outer);
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,134,"when(outer.strength.strength()).thenReturn(""strength"");"
False,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,142,Test
False,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,143,ublic void shouldReportWhenInnerClassNotEnclosedByTestInstance() throws Exception {
False,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,144,lass Outer {
False,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,145,lass Inner {}
False,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,147,lass WithSpy {
False,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,148,Spy private Outer.Inner inner;
False,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,150,houldThrow.expect(MockitoException.class);
False,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,151,"houldThrow.expectMessage(""Cannot spy inner class "");"
False,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,152,ockitoAnnotations.initMocks(new WithSpy());
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,143,@Test
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,144,public void shouldReportWhenInnerClassNotEnclosedByTestInstance() throws Exception {
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,145,class Outer {
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,146,class Inner {}
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,148,class WithSpy {
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,149,@Spy private Outer.Inner inner;
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,151,shouldThrow.expect(MockitoException.class);
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,152,"shouldThrow.expectMessage(""Cannot spy inner class "");"
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,153,MockitoAnnotations.initMocks(new WithSpy());
