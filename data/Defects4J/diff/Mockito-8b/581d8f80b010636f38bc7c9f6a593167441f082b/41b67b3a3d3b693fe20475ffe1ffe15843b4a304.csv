is_addition,old_file_path,new_file_path,line_num,content
False,src/org/mockito/internal/util/ConsoleMockitoLogger.java,src/org/mockito/internal/util/ConsoleMockitoLogger.java,2, Copyright (c) 2007 Mockito contributors
False,src/org/mockito/internal/util/ConsoleMockitoLogger.java,src/org/mockito/internal/util/ConsoleMockitoLogger.java,3, This program is made available under the terms of the MIT License.
True,src/org/mockito/internal/util/ConsoleMockitoLogger.java,src/org/mockito/internal/util/ConsoleMockitoLogger.java,2,* Copyright (c) 2007 Mockito contributors
True,src/org/mockito/internal/util/ConsoleMockitoLogger.java,src/org/mockito/internal/util/ConsoleMockitoLogger.java,3,* This program is made available under the terms of the MIT License.
False,src/org/mockito/internal/util/ConsoleMockitoLogger.java,src/org/mockito/internal/util/ConsoleMockitoLogger.java,13,ystem.out.print(what);
True,src/org/mockito/internal/util/ConsoleMockitoLogger.java,src/org/mockito/internal/util/ConsoleMockitoLogger.java,13,System.out.println(what);
True,src/org/mockito/internal/util/reflection/GenericMaster.java,src/org/mockito/internal/util/reflection/GenericMaster.java,8,import java.util.ArrayList;
True,src/org/mockito/internal/util/reflection/GenericMaster.java,src/org/mockito/internal/util/reflection/GenericMaster.java,9,import java.util.Arrays;
True,src/org/mockito/internal/util/reflection/GenericMaster.java,src/org/mockito/internal/util/reflection/GenericMaster.java,10,import java.util.List;
True,src/org/mockito/internal/util/reflection/GenericMaster.java,src/org/mockito/internal/util/reflection/GenericMaster.java,46,////////// O  L  D //////////
True,src/org/mockito/internal/util/reflection/GenericMaster.java,src/org/mockito/internal/util/reflection/GenericMaster.java,54,* Identify the returned generic type value of the given method from the given class.
True,src/org/mockito/internal/util/reflection/GenericMaster.java,src/org/mockito/internal/util/reflection/GenericMaster.java,56,* @param method Method whose generic part of the returned type must be identified.
True,src/org/mockito/internal/util/reflection/GenericMaster.java,src/org/mockito/internal/util/reflection/GenericMaster.java,57,* @param onClass Owner class from which the resolution of generic type value must be identified.
True,src/org/mockito/internal/util/reflection/GenericMaster.java,src/org/mockito/internal/util/reflection/GenericMaster.java,58,"* @return Generic type value if found, <code>null</code> otherwise."
True,src/org/mockito/internal/util/reflection/GenericMaster.java,src/org/mockito/internal/util/reflection/GenericMaster.java,63,// if method has return type like List<Number>
False,src/org/mockito/internal/util/reflection/GenericMaster.java,src/org/mockito/internal/util/reflection/GenericMaster.java,38,f (parameterizedType.getActualTypeArguments().length > 0) {
False,src/org/mockito/internal/util/reflection/GenericMaster.java,src/org/mockito/internal/util/reflection/GenericMaster.java,39,ype type = parameterizedType.getActualTypeArguments()[0];
False,src/org/mockito/internal/util/reflection/GenericMaster.java,src/org/mockito/internal/util/reflection/GenericMaster.java,41,f (type instanceof Class) {
False,src/org/mockito/internal/util/reflection/GenericMaster.java,src/org/mockito/internal/util/reflection/GenericMaster.java,42,eturn (Class) type;
False,src/org/mockito/internal/util/reflection/GenericMaster.java,src/org/mockito/internal/util/reflection/GenericMaster.java,44,f (type instanceof TypeVariable) {
False,src/org/mockito/internal/util/reflection/GenericMaster.java,src/org/mockito/internal/util/reflection/GenericMaster.java,45,"eturn identifyReturnTypeFromClass((TypeVariable) type, onClass);"
True,src/org/mockito/internal/util/reflection/GenericMaster.java,src/org/mockito/internal/util/reflection/GenericMaster.java,67,// number of type argument of List for example
True,src/org/mockito/internal/util/reflection/GenericMaster.java,src/org/mockito/internal/util/reflection/GenericMaster.java,68,if (parameterizedType.getActualTypeArguments().length <= 0) {
True,src/org/mockito/internal/util/reflection/GenericMaster.java,src/org/mockito/internal/util/reflection/GenericMaster.java,69,"return null; // not supported yet, see #getActualTypeArguments javadoc"
True,src/org/mockito/internal/util/reflection/GenericMaster.java,src/org/mockito/internal/util/reflection/GenericMaster.java,71,Type type = parameterizedType.getActualTypeArguments()[0];
True,src/org/mockito/internal/util/reflection/GenericMaster.java,src/org/mockito/internal/util/reflection/GenericMaster.java,73,"// if type argument is a simple class, for example Number in List<Number>"
True,src/org/mockito/internal/util/reflection/GenericMaster.java,src/org/mockito/internal/util/reflection/GenericMaster.java,74,if (type instanceof Class) {
True,src/org/mockito/internal/util/reflection/GenericMaster.java,src/org/mockito/internal/util/reflection/GenericMaster.java,75,return (Class) type;
True,src/org/mockito/internal/util/reflection/GenericMaster.java,src/org/mockito/internal/util/reflection/GenericMaster.java,77,if (type instanceof TypeVariable) {
True,src/org/mockito/internal/util/reflection/GenericMaster.java,src/org/mockito/internal/util/reflection/GenericMaster.java,78,throw new IllegalStateException();
True,src/org/mockito/internal/util/reflection/GenericMaster.java,src/org/mockito/internal/util/reflection/GenericMaster.java,79,"//                return identifyReturnTypeFromClass((TypeVariable) type, onClass);"
True,src/org/mockito/internal/util/reflection/GenericMaster.java,src/org/mockito/internal/util/reflection/GenericMaster.java,81,if (type instanceof ParameterizedType) {
True,src/org/mockito/internal/util/reflection/GenericMaster.java,src/org/mockito/internal/util/reflection/GenericMaster.java,82,throw new IllegalStateException();
True,src/org/mockito/internal/util/reflection/GenericMaster.java,src/org/mockito/internal/util/reflection/GenericMaster.java,83,//                ParameterizedType subParameterizedType = (ParameterizedType) type;
True,src/org/mockito/internal/util/reflection/GenericMaster.java,src/org/mockito/internal/util/reflection/GenericMaster.java,84,//                return (Class<?>) subParameterizedType.getRawType();
True,src/org/mockito/internal/util/reflection/GenericMaster.java,src/org/mockito/internal/util/reflection/GenericMaster.java,86,return null;
True,src/org/mockito/internal/util/reflection/GenericMaster.java,src/org/mockito/internal/util/reflection/GenericMaster.java,89,//        if (genericReturnType instanceof TypeVariable) {
True,src/org/mockito/internal/util/reflection/GenericMaster.java,src/org/mockito/internal/util/reflection/GenericMaster.java,90,//            TypeVariable typeVariable = (TypeVariable) genericReturnType;
True,src/org/mockito/internal/util/reflection/GenericMaster.java,src/org/mockito/internal/util/reflection/GenericMaster.java,91,"//            return identifyReturnTypeFromClass(typeVariable, onClass);"
False,src/org/mockito/internal/util/reflection/GenericMaster.java,src/org/mockito/internal/util/reflection/GenericMaster.java,55,ype[] genericInterfaces = onClass.getGenericInterfaces();
True,src/org/mockito/internal/util/reflection/GenericMaster.java,src/org/mockito/internal/util/reflection/GenericMaster.java,98,List<Type> genericInterfaces = new ArrayList<Type>(Arrays.asList(onClass.getGenericInterfaces()));
True,src/org/mockito/internal/util/reflection/GenericMaster.java,src/org/mockito/internal/util/reflection/GenericMaster.java,99,genericInterfaces.add(onClass.getGenericSuperclass());
True,src/org/mockito/internal/util/reflection/GenericMaster.java,src/org/mockito/internal/util/reflection/GenericMaster.java,120,if (typeVariableValue instanceof TypeVariable) {
True,src/org/mockito/internal/util/reflection/GenericMaster.java,src/org/mockito/internal/util/reflection/GenericMaster.java,121,TypeVariable variableValue = (TypeVariable) typeVariableValue;
True,src/org/mockito/internal/util/reflection/GenericMaster.java,src/org/mockito/internal/util/reflection/GenericMaster.java,123,"throw new IllegalStateException(""type var :"" + variableValue);"
True,src/org/mockito/internal/util/reflection/GenericMaster.java,src/org/mockito/internal/util/reflection/GenericMaster.java,126,//                            if (typeVariableValue instanceof ParameterizedType) {
True,src/org/mockito/internal/util/reflection/GenericMaster.java,src/org/mockito/internal/util/reflection/GenericMaster.java,127,//                                return (Class<?>) ((ParameterizedType) typeVariableValue).getRawType();
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,1,package org.mockito.internal.util.reflection;
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,3,import org.mockito.Incubating;
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,4,import org.mockito.exceptions.base.MockitoException;
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,5,import org.mockito.internal.util.Checks;
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,6,import org.mockito.internal.util.ConsoleMockitoLogger;
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,7,import org.mockito.internal.util.MockitoLogger;
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,9,import java.lang.reflect.Method;
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,10,import java.lang.reflect.ParameterizedType;
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,11,import java.lang.reflect.Type;
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,12,import java.lang.reflect.TypeVariable;
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,13,import java.util.Arrays;
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,14,import java.util.HashMap;
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,15,import java.util.Map;
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,18,* Allow easy access to generic type information
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,20,* TODO refactor with polymorphism in mind?
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,22,@Incubating
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,23,public class GenericTypeInfo {
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,25,public static MockitoLogger logger = new ConsoleMockitoLogger();
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,28,* This is the type that we wish to get more generic information.
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,30,private final Type typeToSolve;
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,33,* The source class from which the generic info information should be retrieved.
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,35,private final Class<?> onClass;
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,38,* Represents resolved type variables on class.
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,40,"private Map<TypeVariable, Type> typeVariables = new HashMap<TypeVariable, Type>();"
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,43,"private GenericTypeInfo(Type typeToSolve, Class<?> onClass, Map<TypeVariable, Type> typeVariables) {"
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,44,this.typeToSolve = typeToSolve;
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,45,this.onClass = onClass;
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,46,this.typeVariables = typeVariables;
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,47,readActualTypeParametersOnDeclaringClass();
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,51,* Returns actual type as a raw type.
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,52,* @return Raw type
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,54,public Class<?> asRawType() {
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,55,return extractRawTypeOf(typeToSolve);
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,58,private Class<?> extractRawTypeOf(Type type) {
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,59,if (type instanceof Class) {
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,60,return (Class<?>) type;
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,62,if (type instanceof ParameterizedType) {
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,63,return (Class<?>) ((ParameterizedType) type).getRawType();
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,65,if (type instanceof TypeVariableUpperBounds) {
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,66,return extractRawTypeOf(((TypeVariableUpperBounds) type).firstBound());
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,68,if (type instanceof TypeVariable) {
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,70,"If type is a TypeVariable, then it is needed to gather data elsewhere. Usually TypeVariables are declared"
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,71,"on the class definition, such as such as List<E>."
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,73,return extractRawTypeOf(typeVariables.get(type));
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,75,"throw new MockitoException(""Raw extraction not managed for : '"" + type + ""'"");"
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,79,* Return the type of the type to solve.
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,81,* <p>Different than raw type extraction as it can extract actual type instead of TypeVariable</p>.
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,83,"* TODO Eventually create our own ParameterizedType, with resolved TypeVariables"
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,85,* @return The actual type
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,87,private Type actualType() {
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,88,return extractActualTypeOf(typeToSolve);
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,91,private Type extractActualTypeOf(Type type) {
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,92,if (type instanceof TypeVariableUpperBounds) {
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,93,return extractActualTypeOf(((TypeVariableUpperBounds) type).firstBound());
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,95,if (type instanceof TypeVariable) {
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,97,"If type is a TypeVariable, then it is needed to gather data elsewhere. Usually TypeVariables are declared"
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,98,"on the class definition, such as such as List<E>."
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,100,return extractActualTypeOf(typeVariables.get(type));
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,102,"return type; // irrelevant, we don't manage other types."
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,105,private void readActualTypeParametersOnDeclaringClass() {
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,106,registerTypeVariablesOn(onClass);
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,107,registerTypeVariablesOn(onClass.getGenericSuperclass());
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,108,for (Type genericInterface : onClass.getGenericInterfaces()) {
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,109,registerTypeVariablesOn(genericInterface);
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,113,private void registerTypeVariablesOn(Type classType) {
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,114,if (!(classType instanceof ParameterizedType)) {
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,115,return;
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,117,ParameterizedType parameterizedType = (ParameterizedType) classType;
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,118,TypeVariable[] typeParameters = ((Class<?>) parameterizedType.getRawType()).getTypeParameters();
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,119,Type[] actualTypeArguments = parameterizedType.getActualTypeArguments();
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,120,for (int i = 0; i < actualTypeArguments.length; i++) {
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,121,Type actualTypeArgument = actualTypeArguments[i];
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,122,TypeVariable typeParameter = typeParameters[i];
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,124,"typeVariables.put(typeParameter, actualTypeArgument);"
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,125,"logger.log(""For '"" + parameterizedType + ""' found type variable : { '"" + typeParameter + ""(in '"" + typeParameter.getGenericDeclaration() + ""')"" + ""' : '"" + actualTypeArgument + ""' }"");"
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,129,private void registerTypeVariablesOn(Class<?> clazz) {
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,130,TypeVariable[] typeParameters = clazz.getTypeParameters();
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,131,for (TypeVariable typeParameter : typeParameters) {
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,132,"typeVariables.put(typeParameter, boundsOf(typeParameter));"
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,133,"logger.log(""For '"" + clazz.getCanonicalName() + ""' found type variable : { '"" + typeParameter + ""(in '"" + typeParameter.getGenericDeclaration() + ""')"" + ""' : '"" + boundsOf(typeParameter) + ""' }"");"
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,137,private Type boundsOf(TypeVariable typeParameter) {
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,138,return new TypeVariableUpperBounds(typeParameter.getBounds());
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,142,@Override
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,143,public String toString() {
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,144,final StringBuilder sb = new StringBuilder();
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,145,sb.append(actualType());
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,146,sb.append(' ').append(typeVariables);
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,147,return sb.toString();
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,150,@Override
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,151,public boolean equals(Object o) {
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,152,if (this == o) return true;
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,153,if (o == null || getClass() != o.getClass()) return false;
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,155,GenericTypeInfo that = (GenericTypeInfo) o;
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,157,return !(onClass != null ? !onClass.equals(that.onClass) : that.onClass != null) && typeToSolve.equals(that.typeToSolve);
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,160,@Override
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,161,public int hashCode() {
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,162,int result = typeToSolve.hashCode();
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,163,result = 31 * result + (onClass != null ? onClass.hashCode() : 0);
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,164,return result;
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,169,"* Type representing bounds of a type variable, allows to keep all bounds information."
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,171,"* <p>It uses the first bound in the array, as this array is never null and always contains at least"
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,172,* one element (Object is always here if no bounds are declared).</p>
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,174,"* <p>If upper bounds are declared with SomeClass and additional interfaces, then firstBound will be SomeClass and"
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,175,* interfacesBound will be an array of the additional interfaces.
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,177,* i.e. <code>SomeClass</code>.
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,178,"* <pre class=""code""><code class=""java"">"
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,179,*     interface UpperBoundedTypeWithClass<E extends Comparable<E> & Cloneable> {
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,180,*         E get();
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,182,*     // will return Comparable type
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,183,* </code></pre>
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,184,* </p>
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,186,public static class TypeVariableUpperBounds implements Type {
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,187,private final Type firstBound;
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,188,private final Type[] interfaceBounds;
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,191,public TypeVariableUpperBounds(Type[] bounds) {
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,192,"this.firstBound = bounds[0]; // either a class or an interface, always present"
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,193,this.interfaceBounds = new Type[bounds.length - 1]; // JLS says only interfaces from here
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,194,"System.arraycopy(bounds, 1, interfaceBounds, 0, bounds.length - 1);"
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,197,public Type firstBound() {
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,198,return firstBound;
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,201,public Type[] interfaceBounds() {
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,202,return interfaceBounds;
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,205,@Override
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,206,public String toString() {
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,207,final StringBuilder sb = new StringBuilder();
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,208,"sb.append(""{firstBound="").append(firstBound);"
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,209,"sb.append("", interfaceBounds="").append(Arrays.deepToString(interfaceBounds));"
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,210,sb.append('}');
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,211,return sb.toString();
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,217,@Incubating
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,218,public static Builder on(Class<?> clazz) {
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,219,"Checks.checkNotNull(clazz, ""clazz"");"
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,220,return new Builder().onClass(clazz);
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,223,@Incubating
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,224,public static Builder on(GenericTypeInfo genericTypeInfo) {
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,225,"Checks.checkNotNull(genericTypeInfo, ""genericTypeInfo"");"
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,226,return new Builder().onClass(genericTypeInfo.asRawType())
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,227,.withTypeVariables(genericTypeInfo.typeVariables);
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,233,@Incubating
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,234,public static class Builder {
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,236,private Class<?> clazz;
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,237,private Method method;
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,238,"private Map<TypeVariable, Type> typeVariables = new HashMap<TypeVariable, Type>();"
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,241,public Builder onClass(Class<?> clazz) {
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,242,this.clazz = clazz;
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,243,return this;
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,246,public Builder method(Method method) {
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,247,"Checks.checkNotNull(method, ""method"");"
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,248,this.method = method;
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,249,return this;
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,252,public Builder methodName(String methodName) {
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,253,"Checks.checkNotNull(methodName, ""methodName"");"
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,254,"this.method = pickFirstMatchingMethod(methodName, clazz);"
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,255,return this;
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,258,"private Method pickFirstMatchingMethod(String methodName, Class<?> clazz) {"
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,259,for (Method method : clazz.getMethods()) {
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,260,if (method.getName().contains(methodName)) {
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,261,return method;
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,264,"throw new IllegalStateException(""The method : '"" + methodName + ""' do not exist in '"" + clazz.getSimpleName() + ""'"");"
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,267,"private Builder withTypeVariables(Map<TypeVariable, Type> typeVariables) {"
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,268,this.typeVariables = typeVariables;
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,269,return this;
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,272,public GenericTypeInfo genericReturnTypeInfo() {
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,273,Type genericReturnType = method.getGenericReturnType();
True,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,274,"return new GenericTypeInfo(genericReturnType, clazz, typeVariables);"
False,test/org/mockito/internal/util/reflection/GenericMasterTest.java,test/org/mockito/internal/util/reflection/GenericMasterTest.java,7,mport static org.junit.Assert.*;
True,test/org/mockito/internal/util/reflection/GenericMasterTest.java,test/org/mockito/internal/util/reflection/GenericMasterTest.java,7,import org.junit.Ignore;
True,test/org/mockito/internal/util/reflection/GenericMasterTest.java,test/org/mockito/internal/util/reflection/GenericMasterTest.java,8,import org.junit.Test;
False,test/org/mockito/internal/util/reflection/GenericMasterTest.java,test/org/mockito/internal/util/reflection/GenericMasterTest.java,11,mport java.util.Collection;
False,test/org/mockito/internal/util/reflection/GenericMasterTest.java,test/org/mockito/internal/util/reflection/GenericMasterTest.java,12,mport java.util.List;
False,test/org/mockito/internal/util/reflection/GenericMasterTest.java,test/org/mockito/internal/util/reflection/GenericMasterTest.java,13,mport java.util.Map;
False,test/org/mockito/internal/util/reflection/GenericMasterTest.java,test/org/mockito/internal/util/reflection/GenericMasterTest.java,14,mport java.util.Set;
True,test/org/mockito/internal/util/reflection/GenericMasterTest.java,test/org/mockito/internal/util/reflection/GenericMasterTest.java,12,import java.lang.reflect.Type;
True,test/org/mockito/internal/util/reflection/GenericMasterTest.java,test/org/mockito/internal/util/reflection/GenericMasterTest.java,13,import java.util.*;
False,test/org/mockito/internal/util/reflection/GenericMasterTest.java,test/org/mockito/internal/util/reflection/GenericMasterTest.java,16,mport org.junit.Test;
True,test/org/mockito/internal/util/reflection/GenericMasterTest.java,test/org/mockito/internal/util/reflection/GenericMasterTest.java,15,import static org.junit.Assert.assertEquals;
True,test/org/mockito/internal/util/reflection/GenericMasterTest.java,test/org/mockito/internal/util/reflection/GenericMasterTest.java,29,"public interface MapNumberString extends Map<Number, String> {}"
True,test/org/mockito/internal/util/reflection/GenericMasterTest.java,test/org/mockito/internal/util/reflection/GenericMasterTest.java,30,"public class HashMapNumberString<K extends Number> extends HashMap<K, String> {}"
True,test/org/mockito/internal/util/reflection/GenericMasterTest.java,test/org/mockito/internal/util/reflection/GenericMasterTest.java,35,public List<? extends Type> typeList() { return null; }
False,test/org/mockito/internal/util/reflection/GenericMasterTest.java,test/org/mockito/internal/util/reflection/GenericMasterTest.java,66,ublic void can_identify_generic_type_of_returned_type_when_owner_forces_generic_type() throws Exception {
True,test/org/mockito/internal/util/reflection/GenericMasterTest.java,test/org/mockito/internal/util/reflection/GenericMasterTest.java,68,public void can_identify_generic_type_of_returned_type_when_owner_type_forces_generic_type() throws Exception {
True,test/org/mockito/internal/util/reflection/GenericMasterTest.java,test/org/mockito/internal/util/reflection/GenericMasterTest.java,70,"assertEquals(Number.class, m.identifyGenericReturnType(method(MapNumberString.class, ""keySet""), MapNumberString.class));"
True,test/org/mockito/internal/util/reflection/GenericMasterTest.java,test/org/mockito/internal/util/reflection/GenericMasterTest.java,71,"assertEquals(String.class, m.identifyGenericReturnType(method(MapNumberString.class, ""values""), MapNumberString.class));"
True,test/org/mockito/internal/util/reflection/GenericMasterTest.java,test/org/mockito/internal/util/reflection/GenericMasterTest.java,72,"assertEquals(String.class, m.identifyGenericReturnType(method(MapNumberString.class, ""remove""), MapNumberString.class));"
True,test/org/mockito/internal/util/reflection/GenericMasterTest.java,test/org/mockito/internal/util/reflection/GenericMasterTest.java,73,"assertEquals(Map.Entry.class, m.identifyGenericReturnType(method(MapNumberString.class, ""entrySet""), MapNumberString.class));"
True,test/org/mockito/internal/util/reflection/GenericMasterTest.java,test/org/mockito/internal/util/reflection/GenericMasterTest.java,76,@Test
True,test/org/mockito/internal/util/reflection/GenericMasterTest.java,test/org/mockito/internal/util/reflection/GenericMasterTest.java,77,public void can_identify_type_variable_upper_bound() throws Exception {
True,test/org/mockito/internal/util/reflection/GenericMasterTest.java,test/org/mockito/internal/util/reflection/GenericMasterTest.java,78,"assertEquals(Number.class, m.identifyGenericReturnType(method(HashMapNumberString.class, ""keySet""), HashMapNumberString.class));"
True,test/org/mockito/internal/util/reflection/GenericMasterTest.java,test/org/mockito/internal/util/reflection/GenericMasterTest.java,79,"assertEquals(Type.class, m.identifyGenericReturnType(method(""typeList""), this.getClass()));"
True,test/org/mockito/internal/util/reflection/GenericMasterTest.java,test/org/mockito/internal/util/reflection/GenericMasterTest.java,82,@Test
True,test/org/mockito/internal/util/reflection/GenericMasterTest.java,test/org/mockito/internal/util/reflection/GenericMasterTest.java,83,"@Ignore(""Internal API not ready for nested generics, doesn't work"")"
True,test/org/mockito/internal/util/reflection/GenericMasterTest.java,test/org/mockito/internal/util/reflection/GenericMasterTest.java,84,public void can_identify_nested_generic_type_of_returned_type_when_owner_forces_generic_type() throws Exception {
False,test/org/mockito/internal/util/reflection/GenericMasterTest.java,test/org/mockito/internal/util/reflection/GenericMasterTest.java,83,eturn clazz.getMethod(noArgMethod);
True,test/org/mockito/internal/util/reflection/GenericMasterTest.java,test/org/mockito/internal/util/reflection/GenericMasterTest.java,100,for (Method method : clazz.getMethods()) {
True,test/org/mockito/internal/util/reflection/GenericMasterTest.java,test/org/mockito/internal/util/reflection/GenericMasterTest.java,101,if (method.getName().contains(noArgMethod)) {
True,test/org/mockito/internal/util/reflection/GenericMasterTest.java,test/org/mockito/internal/util/reflection/GenericMasterTest.java,102,return method;
True,test/org/mockito/internal/util/reflection/GenericMasterTest.java,test/org/mockito/internal/util/reflection/GenericMasterTest.java,105,"throw new NoSuchMethodException(""method "" + noArgMethod + "" do not exist in "" + clazz.getSimpleName());"
True,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,1,package org.mockito.internal.util.reflection;
True,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,3,import org.junit.Test;
True,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,5,import java.util.Iterator;
True,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,6,import java.util.List;
True,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,7,import java.util.Map;
True,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,8,import java.util.Set;
True,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,10,import static org.fest.assertions.Assertions.assertThat;
True,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,11,import static org.mockito.internal.util.reflection.GenericTypeInfo.on;
True,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,13,public class GenericTypeInfoTest {
True,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,15,interface UpperBoundedTypeWithClass<E extends Number & Comparable<E>> {
True,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,16,E get();
True,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,18,interface UpperBoundedTypeWithInterfaces<E extends Comparable<E> & Cloneable> {
True,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,19,E get();
True,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,21,interface ListOfNumbers extends List<Number> {}
True,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,22,interface ListOfAnyNumbers<N extends Number & Cloneable> extends List<N> {}
True,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,24,@Test
True,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,25,public void can_get_raw_type_on_simple_return_type() throws Exception {
True,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,26,"assertThat(on(List.class).methodName(""iterator"").genericReturnTypeInfo().asRawType()).isEqualTo(Iterator.class);"
True,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,27,"assertThat(on(List.class).methodName(""size"").genericReturnTypeInfo().asRawType()).isEqualTo(int.class);"
True,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,28,"assertThat(on(Number.class).methodName(""toString"").genericReturnTypeInfo().asRawType()).isEqualTo(String.class);"
True,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,31,@Test
True,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,32,public void can_get_raw_type_of_parameterized_return_type() throws Exception {
True,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,33,"assertThat(on(List.class).methodName(""get"").genericReturnTypeInfo().asRawType()).isEqualTo(Object.class);"
True,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,36,@Test
True,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,37,public void can_get_raw_type_of_parameterized_return_type_with_upper_bounded_type_variable() throws Exception {
True,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,38,"assertThat(on(UpperBoundedTypeWithInterfaces.class).methodName(""get"").genericReturnTypeInfo().asRawType()).isEqualTo(Comparable.class);"
True,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,39,"assertThat(on(UpperBoundedTypeWithClass.class).methodName(""get"").genericReturnTypeInfo().asRawType()).isEqualTo(Number.class);"
True,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,42,@Test
True,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,43,public void can_get_raw_type_of_parameterized_return_type_with_fixed_type_argument() throws Exception {
True,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,44,"assertThat(on(ListOfNumbers.class).methodName(""get"").genericReturnTypeInfo().asRawType()).isEqualTo(Number.class);"
True,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,47,@Test
True,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,48,public void can_get_raw_type_of_parameterized_return_type_with_bounded_type_parameter() throws Exception {
True,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,49,"assertThat(on(ListOfAnyNumbers.class).methodName(""get"").genericReturnTypeInfo().asRawType()).isEqualTo(Number.class);"
True,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,52,"interface MapWithNestedGenerics<K extends Comparable<K> & Cloneable & Set<Number>> extends Map<K, Set<Number>> {}"
True,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,55,@Test
True,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,56,public void test() throws Exception {
True,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,57,"GenericTypeInfo entrySetGenericTypeInfo = on(MapWithNestedGenerics.class).methodName(""entrySet"").genericReturnTypeInfo();"
True,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,58,"System.out.println(entrySetGenericTypeInfo); // Set<Entry<K extends Comparable<K>, Set<Number>>"
True,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,59,//        entrySetGenericTypeInfo.asRawType(); // Set
True,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,60,"//        entrySetGenericTypeInfo.getTypeVariables(); // { 'K' : 'K extends Comparable<K>' , 'V' : 'Set<Number' }"
True,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,61,"System.out.println(""======================================================"");"
True,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,63,"GenericTypeInfo iteratorGenericTypeInfo = on(entrySetGenericTypeInfo).methodName(""iterator"").genericReturnTypeInfo();"
True,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,64,System.out.println(iteratorGenericTypeInfo);
