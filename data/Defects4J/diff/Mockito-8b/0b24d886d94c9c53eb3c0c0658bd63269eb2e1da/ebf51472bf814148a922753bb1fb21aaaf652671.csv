is_addition,old_file_path,new_file_path,line_num,content
False,src/org/easymock/internal/ExpectedInvocation.java,src/org/easymock/internal/ExpectedInvocation.java,70,eturn 1; //invocation.hashCode();
True,src/org/easymock/internal/ExpectedInvocation.java,src/org/easymock/internal/ExpectedInvocation.java,70,return 1;
False,src/org/easymock/internal/Invocation.java,src/org/easymock/internal/Invocation.java,65,/    public int hashCode() {
False,src/org/easymock/internal/Invocation.java,src/org/easymock/internal/Invocation.java,66,"/        throw new UnsupportedOperationException(""hashCode() is not implemented"");"
True,src/org/easymock/internal/Invocation.java,src/org/easymock/internal/Invocation.java,65,public int hashCode() {
True,src/org/easymock/internal/Invocation.java,src/org/easymock/internal/Invocation.java,66,"throw new UnsupportedOperationException(""hashCode() is not implemented"");"
True,test/org/easymock/internal/ExpectedInvocationTest.java,test/org/easymock/internal/ExpectedInvocationTest.java,1,package org.easymock.internal;
True,test/org/easymock/internal/ExpectedInvocationTest.java,test/org/easymock/internal/ExpectedInvocationTest.java,3,import static org.hamcrest.CoreMatchers.equalTo;
True,test/org/easymock/internal/ExpectedInvocationTest.java,test/org/easymock/internal/ExpectedInvocationTest.java,4,import static org.junit.Assert.assertThat;
True,test/org/easymock/internal/ExpectedInvocationTest.java,test/org/easymock/internal/ExpectedInvocationTest.java,6,import java.lang.reflect.Method;
True,test/org/easymock/internal/ExpectedInvocationTest.java,test/org/easymock/internal/ExpectedInvocationTest.java,8,import org.junit.Test;
True,test/org/easymock/internal/ExpectedInvocationTest.java,test/org/easymock/internal/ExpectedInvocationTest.java,10,public class ExpectedInvocationTest {
True,test/org/easymock/internal/ExpectedInvocationTest.java,test/org/easymock/internal/ExpectedInvocationTest.java,12,@Test
True,test/org/easymock/internal/ExpectedInvocationTest.java,test/org/easymock/internal/ExpectedInvocationTest.java,13,public void shouldImplementHashcodeToBeHashMapsCitizen() throws Exception {
True,test/org/easymock/internal/ExpectedInvocationTest.java,test/org/easymock/internal/ExpectedInvocationTest.java,14,"Object[] args = new Object[] { """" };"
True,test/org/easymock/internal/ExpectedInvocationTest.java,test/org/easymock/internal/ExpectedInvocationTest.java,15,"Method m = Object.class.getMethod(""equals"", new Class[] { Object.class });"
True,test/org/easymock/internal/ExpectedInvocationTest.java,test/org/easymock/internal/ExpectedInvocationTest.java,16,"Invocation invocation = new Invocation(null, m, args);"
True,test/org/easymock/internal/ExpectedInvocationTest.java,test/org/easymock/internal/ExpectedInvocationTest.java,17,"assertThat(new ExpectedInvocation(invocation, null).hashCode(), equalTo(1));"
False,test/org/easymock/tests/ArgumentsMatcherTest.java,test/org/easymock/tests/ArgumentsMatcherTest.java,2," Copyright (c) 2001-2007 OFFIS, Tammo Freese."
False,test/org/easymock/tests/ArgumentsMatcherTest.java,test/org/easymock/tests/ArgumentsMatcherTest.java,3, This program is made available under the terms of the MIT License.
False,test/org/easymock/tests/ArgumentsMatcherTest.java,test/org/easymock/tests/ArgumentsMatcherTest.java,5,ackage org.easymock.tests;
False,test/org/easymock/tests/ArgumentsMatcherTest.java,test/org/easymock/tests/ArgumentsMatcherTest.java,7,mport static org.junit.Assert.*;
False,test/org/easymock/tests/ArgumentsMatcherTest.java,test/org/easymock/tests/ArgumentsMatcherTest.java,9,mport org.easymock.AbstractMatcher;
False,test/org/easymock/tests/ArgumentsMatcherTest.java,test/org/easymock/tests/ArgumentsMatcherTest.java,10,mport org.easymock.ArgumentsMatcher;
False,test/org/easymock/tests/ArgumentsMatcherTest.java,test/org/easymock/tests/ArgumentsMatcherTest.java,11,mport org.easymock.MockControl;
False,test/org/easymock/tests/ArgumentsMatcherTest.java,test/org/easymock/tests/ArgumentsMatcherTest.java,12,mport org.junit.Before;
False,test/org/easymock/tests/ArgumentsMatcherTest.java,test/org/easymock/tests/ArgumentsMatcherTest.java,13,mport org.junit.Test;
False,test/org/easymock/tests/ArgumentsMatcherTest.java,test/org/easymock/tests/ArgumentsMatcherTest.java,15,ublic class ArgumentsMatcherTest {
False,test/org/easymock/tests/ArgumentsMatcherTest.java,test/org/easymock/tests/ArgumentsMatcherTest.java,17,ockControl<IMethods> control;
False,test/org/easymock/tests/ArgumentsMatcherTest.java,test/org/easymock/tests/ArgumentsMatcherTest.java,19,Methods mock;
False,test/org/easymock/tests/ArgumentsMatcherTest.java,test/org/easymock/tests/ArgumentsMatcherTest.java,21,Before
False,test/org/easymock/tests/ArgumentsMatcherTest.java,test/org/easymock/tests/ArgumentsMatcherTest.java,22,ublic void setUp() {
False,test/org/easymock/tests/ArgumentsMatcherTest.java,test/org/easymock/tests/ArgumentsMatcherTest.java,23,ontrol = MockControl.createStrictControl(IMethods.class);
False,test/org/easymock/tests/ArgumentsMatcherTest.java,test/org/easymock/tests/ArgumentsMatcherTest.java,24,ock = control.getMock();
False,test/org/easymock/tests/ArgumentsMatcherTest.java,test/org/easymock/tests/ArgumentsMatcherTest.java,27,Test
False,test/org/easymock/tests/ArgumentsMatcherTest.java,test/org/easymock/tests/ArgumentsMatcherTest.java,28,ublic void expectedArgumentsDelegatedToMatcher() {
False,test/org/easymock/tests/ArgumentsMatcherTest.java,test/org/easymock/tests/ArgumentsMatcherTest.java,29,"ock.twoArgumentMethod(0, 5);"
False,test/org/easymock/tests/ArgumentsMatcherTest.java,test/org/easymock/tests/ArgumentsMatcherTest.java,30,ontrol.setMatcher(new AbstractMatcher() {
False,test/org/easymock/tests/ArgumentsMatcherTest.java,test/org/easymock/tests/ArgumentsMatcherTest.java,31,Override
False,test/org/easymock/tests/ArgumentsMatcherTest.java,test/org/easymock/tests/ArgumentsMatcherTest.java,32,"ublic boolean matches(Object[] expected, Object[] actual) {"
False,test/org/easymock/tests/ArgumentsMatcherTest.java,test/org/easymock/tests/ArgumentsMatcherTest.java,33,"ssertEquals(0, ((Integer) expected[0]).intValue());"
False,test/org/easymock/tests/ArgumentsMatcherTest.java,test/org/easymock/tests/ArgumentsMatcherTest.java,34,"ssertEquals(5, ((Integer) expected[1]).intValue());"
False,test/org/easymock/tests/ArgumentsMatcherTest.java,test/org/easymock/tests/ArgumentsMatcherTest.java,35,"ssertEquals(1, ((Integer) actual[0]).intValue());"
False,test/org/easymock/tests/ArgumentsMatcherTest.java,test/org/easymock/tests/ArgumentsMatcherTest.java,36,"ssertEquals(6, ((Integer) actual[1]).intValue());"
False,test/org/easymock/tests/ArgumentsMatcherTest.java,test/org/easymock/tests/ArgumentsMatcherTest.java,37,eturn true;
False,test/org/easymock/tests/ArgumentsMatcherTest.java,test/org/easymock/tests/ArgumentsMatcherTest.java,40,ock.simpleMethod();
False,test/org/easymock/tests/ArgumentsMatcherTest.java,test/org/easymock/tests/ArgumentsMatcherTest.java,41,ontrol.replay();
False,test/org/easymock/tests/ArgumentsMatcherTest.java,test/org/easymock/tests/ArgumentsMatcherTest.java,42,"ock.twoArgumentMethod(1, 6);"
False,test/org/easymock/tests/ArgumentsMatcherTest.java,test/org/easymock/tests/ArgumentsMatcherTest.java,43,ock.simpleMethod();
False,test/org/easymock/tests/ArgumentsMatcherTest.java,test/org/easymock/tests/ArgumentsMatcherTest.java,44,ontrol.verify();
False,test/org/easymock/tests/ArgumentsMatcherTest.java,test/org/easymock/tests/ArgumentsMatcherTest.java,47,Test
False,test/org/easymock/tests/ArgumentsMatcherTest.java,test/org/easymock/tests/ArgumentsMatcherTest.java,48,ublic void expectedArgumentsDelegatedToMatcher2() {
False,test/org/easymock/tests/ArgumentsMatcherTest.java,test/org/easymock/tests/ArgumentsMatcherTest.java,49,"ock.threeArgumentMethod(7, """", ""A test"");"
False,test/org/easymock/tests/ArgumentsMatcherTest.java,test/org/easymock/tests/ArgumentsMatcherTest.java,50,ontrol.setMatcher(new AbstractMatcher() {
False,test/org/easymock/tests/ArgumentsMatcherTest.java,test/org/easymock/tests/ArgumentsMatcherTest.java,51,Override
False,test/org/easymock/tests/ArgumentsMatcherTest.java,test/org/easymock/tests/ArgumentsMatcherTest.java,52,"ublic boolean matches(Object[] expected, Object[] actual) {"
False,test/org/easymock/tests/ArgumentsMatcherTest.java,test/org/easymock/tests/ArgumentsMatcherTest.java,53,nt expectedInt = ((Integer) expected[0]).intValue();
False,test/org/easymock/tests/ArgumentsMatcherTest.java,test/org/easymock/tests/ArgumentsMatcherTest.java,54,nt actualInt = ((Integer) actual[0]).intValue();
False,test/org/easymock/tests/ArgumentsMatcherTest.java,test/org/easymock/tests/ArgumentsMatcherTest.java,55,eturn expectedInt < actualInt;
False,test/org/easymock/tests/ArgumentsMatcherTest.java,test/org/easymock/tests/ArgumentsMatcherTest.java,58,"ontrol.setReturnValue(""1"");"
False,test/org/easymock/tests/ArgumentsMatcherTest.java,test/org/easymock/tests/ArgumentsMatcherTest.java,59,"ock.threeArgumentMethod(6, """", ""A test"");"
False,test/org/easymock/tests/ArgumentsMatcherTest.java,test/org/easymock/tests/ArgumentsMatcherTest.java,60,"ontrol.setReturnValue(""2"");"
False,test/org/easymock/tests/ArgumentsMatcherTest.java,test/org/easymock/tests/ArgumentsMatcherTest.java,61,"ock.threeArgumentMethod(12, """", ""A test"");"
False,test/org/easymock/tests/ArgumentsMatcherTest.java,test/org/easymock/tests/ArgumentsMatcherTest.java,62,"ontrol.setReturnValue(""3"");"
False,test/org/easymock/tests/ArgumentsMatcherTest.java,test/org/easymock/tests/ArgumentsMatcherTest.java,64,ontrol.replay();
False,test/org/easymock/tests/ArgumentsMatcherTest.java,test/org/easymock/tests/ArgumentsMatcherTest.java,65,"ock.threeArgumentMethod(9, ""test"", ""test"");"
False,test/org/easymock/tests/ArgumentsMatcherTest.java,test/org/easymock/tests/ArgumentsMatcherTest.java,66,"ock.threeArgumentMethod(8, ""test"", ""test"");"
False,test/org/easymock/tests/ArgumentsMatcherTest.java,test/org/easymock/tests/ArgumentsMatcherTest.java,67,"ock.threeArgumentMethod(13, ""test"", ""test"");"
False,test/org/easymock/tests/ArgumentsMatcherTest.java,test/org/easymock/tests/ArgumentsMatcherTest.java,68,ontrol.verify();
False,test/org/easymock/tests/ArgumentsMatcherTest.java,test/org/easymock/tests/ArgumentsMatcherTest.java,71,Test
False,test/org/easymock/tests/ArgumentsMatcherTest.java,test/org/easymock/tests/ArgumentsMatcherTest.java,72,ublic void errorString() {
False,test/org/easymock/tests/ArgumentsMatcherTest.java,test/org/easymock/tests/ArgumentsMatcherTest.java,73,"ock.twoArgumentMethod(0, 5);"
False,test/org/easymock/tests/ArgumentsMatcherTest.java,test/org/easymock/tests/ArgumentsMatcherTest.java,74,ontrol.setMatcher(new ArgumentsMatcher() {
False,test/org/easymock/tests/ArgumentsMatcherTest.java,test/org/easymock/tests/ArgumentsMatcherTest.java,75,"ublic boolean matches(Object[] expected, Object[] actual) {"
False,test/org/easymock/tests/ArgumentsMatcherTest.java,test/org/easymock/tests/ArgumentsMatcherTest.java,76,eturn false;
False,test/org/easymock/tests/ArgumentsMatcherTest.java,test/org/easymock/tests/ArgumentsMatcherTest.java,79,ublic String toString(Object[] arguments) {
False,test/org/easymock/tests/ArgumentsMatcherTest.java,test/org/easymock/tests/ArgumentsMatcherTest.java,80,"eturn ""<<"" + arguments[0] + "">>"";"
False,test/org/easymock/tests/ArgumentsMatcherTest.java,test/org/easymock/tests/ArgumentsMatcherTest.java,83,ontrol.replay();
False,test/org/easymock/tests/ArgumentsMatcherTest.java,test/org/easymock/tests/ArgumentsMatcherTest.java,84,oolean failed = false;
False,test/org/easymock/tests/ArgumentsMatcherTest.java,test/org/easymock/tests/ArgumentsMatcherTest.java,85,ry {
False,test/org/easymock/tests/ArgumentsMatcherTest.java,test/org/easymock/tests/ArgumentsMatcherTest.java,86,"ock.twoArgumentMethod(1, 5);"
False,test/org/easymock/tests/ArgumentsMatcherTest.java,test/org/easymock/tests/ArgumentsMatcherTest.java,87, catch (AssertionError expected) {
False,test/org/easymock/tests/ArgumentsMatcherTest.java,test/org/easymock/tests/ArgumentsMatcherTest.java,88,ailed = true;
False,test/org/easymock/tests/ArgumentsMatcherTest.java,test/org/easymock/tests/ArgumentsMatcherTest.java,89,"ssertEquals(""\n  Unexpected method call twoArgumentMethod(1, 5):"""
False,test/org/easymock/tests/ArgumentsMatcherTest.java,test/org/easymock/tests/ArgumentsMatcherTest.java,90," ""\n    twoArgumentMethod(<<0>>): expected: 1, actual: 0"","
False,test/org/easymock/tests/ArgumentsMatcherTest.java,test/org/easymock/tests/ArgumentsMatcherTest.java,91,xpected.getMessage());
False,test/org/easymock/tests/ArgumentsMatcherTest.java,test/org/easymock/tests/ArgumentsMatcherTest.java,93,f (!failed) {
False,test/org/easymock/tests/ArgumentsMatcherTest.java,test/org/easymock/tests/ArgumentsMatcherTest.java,94,"ail(""exception expected"");"
False,test/org/easymock/tests/ArgumentsMatcherTest.java,test/org/easymock/tests/ArgumentsMatcherTest.java,98,Test
False,test/org/easymock/tests/ArgumentsMatcherTest.java,test/org/easymock/tests/ArgumentsMatcherTest.java,99,ublic void settingTheSameMatcherIsOk() {
False,test/org/easymock/tests/ArgumentsMatcherTest.java,test/org/easymock/tests/ArgumentsMatcherTest.java,100,ry {
False,test/org/easymock/tests/ArgumentsMatcherTest.java,test/org/easymock/tests/ArgumentsMatcherTest.java,101,"ock.twoArgumentMethod(1, 2);"
False,test/org/easymock/tests/ArgumentsMatcherTest.java,test/org/easymock/tests/ArgumentsMatcherTest.java,102,ontrol.setMatcher(MockControl.ARRAY_MATCHER);
False,test/org/easymock/tests/ArgumentsMatcherTest.java,test/org/easymock/tests/ArgumentsMatcherTest.java,103,ontrol.setMatcher(MockControl.ARRAY_MATCHER);
False,test/org/easymock/tests/ArgumentsMatcherTest.java,test/org/easymock/tests/ArgumentsMatcherTest.java,104,"ock.twoArgumentMethod(1, 2);"
False,test/org/easymock/tests/ArgumentsMatcherTest.java,test/org/easymock/tests/ArgumentsMatcherTest.java,105,ontrol.setMatcher(MockControl.ARRAY_MATCHER);
False,test/org/easymock/tests/ArgumentsMatcherTest.java,test/org/easymock/tests/ArgumentsMatcherTest.java,107, catch (IllegalStateException unexpected) {
False,test/org/easymock/tests/ArgumentsMatcherTest.java,test/org/easymock/tests/ArgumentsMatcherTest.java,108,"ail(""no exception should be thrown if the same matcher is set twice"");"
False,test/org/easymock/tests/ArgumentsMatcherTest.java,test/org/easymock/tests/ArgumentsMatcherTest.java,112,Test
False,test/org/easymock/tests/ArgumentsMatcherTest.java,test/org/easymock/tests/ArgumentsMatcherTest.java,113,ublic void abstractMatcher() {
False,test/org/easymock/tests/ArgumentsMatcherTest.java,test/org/easymock/tests/ArgumentsMatcherTest.java,114,bstractMatcher trueMatcher = new AbstractMatcher() {
False,test/org/easymock/tests/ArgumentsMatcherTest.java,test/org/easymock/tests/ArgumentsMatcherTest.java,115,"rotected boolean parameterMatches(Object expected, Object actual) {"
False,test/org/easymock/tests/ArgumentsMatcherTest.java,test/org/easymock/tests/ArgumentsMatcherTest.java,116,eturn true;
False,test/org/easymock/tests/ArgumentsMatcherTest.java,test/org/easymock/tests/ArgumentsMatcherTest.java,119,bject[] arrayWithNull = new Object[] { null };
False,test/org/easymock/tests/ArgumentsMatcherTest.java,test/org/easymock/tests/ArgumentsMatcherTest.java,120,bject[] arrayWithObject = new Object[] { new Object() };
False,test/org/easymock/tests/ArgumentsMatcherTest.java,test/org/easymock/tests/ArgumentsMatcherTest.java,121,"ssertFalse(trueMatcher.matches(arrayWithNull, arrayWithObject));"
False,test/org/easymock/tests/ArgumentsMatcherTest.java,test/org/easymock/tests/ArgumentsMatcherTest.java,122,"ssertFalse(trueMatcher.matches(arrayWithObject, arrayWithNull));"
False,test/org/easymock/tests/ArgumentsMatcherTest.java,test/org/easymock/tests/ArgumentsMatcherTest.java,125,Test
False,test/org/easymock/tests/ArgumentsMatcherTest.java,test/org/easymock/tests/ArgumentsMatcherTest.java,126,ublic void abstractMatcherToStringHandlesNullArray() {
False,test/org/easymock/tests/ArgumentsMatcherTest.java,test/org/easymock/tests/ArgumentsMatcherTest.java,127,bstractMatcher matcher = new AbstractMatcher() {
False,test/org/easymock/tests/ArgumentsMatcherTest.java,test/org/easymock/tests/ArgumentsMatcherTest.java,129,"ssertEquals("""", matcher.toString(null));"
False,test/org/easymock/tests/ArrayMatcherTest.java,test/org/easymock/tests/ArrayMatcherTest.java,2," Copyright (c) 2001-2007 OFFIS, Tammo Freese."
False,test/org/easymock/tests/ArrayMatcherTest.java,test/org/easymock/tests/ArrayMatcherTest.java,3, This program is made available under the terms of the MIT License.
False,test/org/easymock/tests/ArrayMatcherTest.java,test/org/easymock/tests/ArrayMatcherTest.java,5,ackage org.easymock.tests;
False,test/org/easymock/tests/ArrayMatcherTest.java,test/org/easymock/tests/ArrayMatcherTest.java,7,mport static org.junit.Assert.*;
False,test/org/easymock/tests/ArrayMatcherTest.java,test/org/easymock/tests/ArrayMatcherTest.java,9,mport org.easymock.ArgumentsMatcher;
False,test/org/easymock/tests/ArrayMatcherTest.java,test/org/easymock/tests/ArrayMatcherTest.java,10,mport org.easymock.MockControl;
False,test/org/easymock/tests/ArrayMatcherTest.java,test/org/easymock/tests/ArrayMatcherTest.java,11,mport org.junit.Test;
False,test/org/easymock/tests/ArrayMatcherTest.java,test/org/easymock/tests/ArrayMatcherTest.java,13,ublic class ArrayMatcherTest {
False,test/org/easymock/tests/ArrayMatcherTest.java,test/org/easymock/tests/ArrayMatcherTest.java,15,rivate static ArgumentsMatcher MATCHER = MockControl.ARRAY_MATCHER;
False,test/org/easymock/tests/ArrayMatcherTest.java,test/org/easymock/tests/ArrayMatcherTest.java,17,Test
False,test/org/easymock/tests/ArrayMatcherTest.java,test/org/easymock/tests/ArrayMatcherTest.java,18,ublic void booleanArray() {
False,test/org/easymock/tests/ArrayMatcherTest.java,test/org/easymock/tests/ArrayMatcherTest.java,19,"ssertTrue(equals(new boolean[] { true }, new boolean[] { true }));"
False,test/org/easymock/tests/ArrayMatcherTest.java,test/org/easymock/tests/ArrayMatcherTest.java,20,"ssertFalse(equals(new boolean[] { true }, new boolean[] { false }));"
False,test/org/easymock/tests/ArrayMatcherTest.java,test/org/easymock/tests/ArrayMatcherTest.java,23,Test
False,test/org/easymock/tests/ArrayMatcherTest.java,test/org/easymock/tests/ArrayMatcherTest.java,24,ublic void byteArray() {
False,test/org/easymock/tests/ArrayMatcherTest.java,test/org/easymock/tests/ArrayMatcherTest.java,25,"ssertTrue(equals(new byte[] { 6 }, new byte[] { 6 }));"
False,test/org/easymock/tests/ArrayMatcherTest.java,test/org/easymock/tests/ArrayMatcherTest.java,26,"ssertFalse(equals(new byte[] { 6 }, new byte[] { 7 }));"
False,test/org/easymock/tests/ArrayMatcherTest.java,test/org/easymock/tests/ArrayMatcherTest.java,29,Test
False,test/org/easymock/tests/ArrayMatcherTest.java,test/org/easymock/tests/ArrayMatcherTest.java,30,ublic void charArray() {
False,test/org/easymock/tests/ArrayMatcherTest.java,test/org/easymock/tests/ArrayMatcherTest.java,31,"ssertTrue(equals(new char[] { 'x' }, new char[] { 'x' }));"
False,test/org/easymock/tests/ArrayMatcherTest.java,test/org/easymock/tests/ArrayMatcherTest.java,32,"ssertFalse(equals(new char[] { 'x' }, new char[] { 'y' }));"
False,test/org/easymock/tests/ArrayMatcherTest.java,test/org/easymock/tests/ArrayMatcherTest.java,35,Test
False,test/org/easymock/tests/ArrayMatcherTest.java,test/org/easymock/tests/ArrayMatcherTest.java,36,ublic void doubleArray() {
False,test/org/easymock/tests/ArrayMatcherTest.java,test/org/easymock/tests/ArrayMatcherTest.java,37,"ssertTrue(equals(new double[] { 6.0 }, new double[] { 6.0 }));"
False,test/org/easymock/tests/ArrayMatcherTest.java,test/org/easymock/tests/ArrayMatcherTest.java,38,"ssertFalse(equals(new double[] { 6.0 }, new double[] { 7.0 }));"
False,test/org/easymock/tests/ArrayMatcherTest.java,test/org/easymock/tests/ArrayMatcherTest.java,41,Test
False,test/org/easymock/tests/ArrayMatcherTest.java,test/org/easymock/tests/ArrayMatcherTest.java,42,ublic void floatArray() {
False,test/org/easymock/tests/ArrayMatcherTest.java,test/org/easymock/tests/ArrayMatcherTest.java,43,"ssertTrue(equals(new float[] { 6.0F }, new float[] { 6.0F }));"
False,test/org/easymock/tests/ArrayMatcherTest.java,test/org/easymock/tests/ArrayMatcherTest.java,44,"ssertFalse(equals(new float[] { 6.0F }, new float[] { 7.0F }));"
False,test/org/easymock/tests/ArrayMatcherTest.java,test/org/easymock/tests/ArrayMatcherTest.java,47,Test
False,test/org/easymock/tests/ArrayMatcherTest.java,test/org/easymock/tests/ArrayMatcherTest.java,48,ublic void intArray() {
False,test/org/easymock/tests/ArrayMatcherTest.java,test/org/easymock/tests/ArrayMatcherTest.java,49,"ssertTrue(equals(new int[] { 6 }, new int[] { 6 }));"
False,test/org/easymock/tests/ArrayMatcherTest.java,test/org/easymock/tests/ArrayMatcherTest.java,50,"ssertFalse(equals(new int[] { 6 }, new int[] { 7 }));"
False,test/org/easymock/tests/ArrayMatcherTest.java,test/org/easymock/tests/ArrayMatcherTest.java,53,Test
False,test/org/easymock/tests/ArrayMatcherTest.java,test/org/easymock/tests/ArrayMatcherTest.java,54,ublic void longArray() {
False,test/org/easymock/tests/ArrayMatcherTest.java,test/org/easymock/tests/ArrayMatcherTest.java,55,"ssertTrue(equals(new long[] { 6 }, new long[] { 6 }));"
False,test/org/easymock/tests/ArrayMatcherTest.java,test/org/easymock/tests/ArrayMatcherTest.java,56,"ssertFalse(equals(new long[] { 6 }, new long[] { 7 }));"
False,test/org/easymock/tests/ArrayMatcherTest.java,test/org/easymock/tests/ArrayMatcherTest.java,59,Test
False,test/org/easymock/tests/ArrayMatcherTest.java,test/org/easymock/tests/ArrayMatcherTest.java,60,ublic void shortArray() {
False,test/org/easymock/tests/ArrayMatcherTest.java,test/org/easymock/tests/ArrayMatcherTest.java,61,"ssertTrue(equals(new short[] { 6 }, new short[] { 6 }));"
False,test/org/easymock/tests/ArrayMatcherTest.java,test/org/easymock/tests/ArrayMatcherTest.java,62,"ssertFalse(equals(new short[] { 6 }, new short[] { 7 }));"
False,test/org/easymock/tests/ArrayMatcherTest.java,test/org/easymock/tests/ArrayMatcherTest.java,65,Test
False,test/org/easymock/tests/ArrayMatcherTest.java,test/org/easymock/tests/ArrayMatcherTest.java,66,ublic void objectArray() {
False,test/org/easymock/tests/ArrayMatcherTest.java,test/org/easymock/tests/ArrayMatcherTest.java,67,"ssertTrue(equals(new String[] { ""1"", ""2"" }, new String[] { ""1"", ""2"" }));"
False,test/org/easymock/tests/ArrayMatcherTest.java,test/org/easymock/tests/ArrayMatcherTest.java,68,"ssertFalse(equals(new String[] { ""1"", ""2"" }, new String[] { ""2"", ""2"" }));"
False,test/org/easymock/tests/ArrayMatcherTest.java,test/org/easymock/tests/ArrayMatcherTest.java,71,Test
False,test/org/easymock/tests/ArrayMatcherTest.java,test/org/easymock/tests/ArrayMatcherTest.java,72,ublic void nonArray() {
False,test/org/easymock/tests/ArrayMatcherTest.java,test/org/easymock/tests/ArrayMatcherTest.java,73,"ssertTrue(equals(""1"", ""1""));"
False,test/org/easymock/tests/ArrayMatcherTest.java,test/org/easymock/tests/ArrayMatcherTest.java,74,"ssertFalse(equals(""1"", ""2""));"
False,test/org/easymock/tests/ArrayMatcherTest.java,test/org/easymock/tests/ArrayMatcherTest.java,77,Test
False,test/org/easymock/tests/ArrayMatcherTest.java,test/org/easymock/tests/ArrayMatcherTest.java,78,ublic void testToString() {
False,test/org/easymock/tests/ArrayMatcherTest.java,test/org/easymock/tests/ArrayMatcherTest.java,79,"ssertEquals(""[true, false]"", stringFor(new boolean[] { true, false }));"
False,test/org/easymock/tests/ArrayMatcherTest.java,test/org/easymock/tests/ArrayMatcherTest.java,80,"ssertEquals(""[6, 7]"", stringFor(new byte[] { 6, 7 }));"
False,test/org/easymock/tests/ArrayMatcherTest.java,test/org/easymock/tests/ArrayMatcherTest.java,81,"ssertEquals(""['x', 'y']"", stringFor(new char[] { 'x', 'y' }));"
False,test/org/easymock/tests/ArrayMatcherTest.java,test/org/easymock/tests/ArrayMatcherTest.java,82,"ssertEquals(""[6.0, 7.0]"", stringFor(new double[] { 6, 7 }));"
False,test/org/easymock/tests/ArrayMatcherTest.java,test/org/easymock/tests/ArrayMatcherTest.java,83,"ssertEquals(""[6.0, 7.0]"", stringFor(new float[] { 6, 7 }));"
False,test/org/easymock/tests/ArrayMatcherTest.java,test/org/easymock/tests/ArrayMatcherTest.java,84,"ssertEquals(""[6, 7]"", stringFor(new int[] { 6, 7 }));"
False,test/org/easymock/tests/ArrayMatcherTest.java,test/org/easymock/tests/ArrayMatcherTest.java,85,"ssertEquals(""[6, 7]"", stringFor(new long[] { 6, 7 }));"
False,test/org/easymock/tests/ArrayMatcherTest.java,test/org/easymock/tests/ArrayMatcherTest.java,86,"ssertEquals(""[6, 7]"", stringFor(new short[] { 6, 7 }));"
False,test/org/easymock/tests/ArrayMatcherTest.java,test/org/easymock/tests/ArrayMatcherTest.java,87,"ssertEquals(""[\""1\"", \""2\""]"", stringFor(new String[] { ""1"", ""2"" }));"
False,test/org/easymock/tests/ArrayMatcherTest.java,test/org/easymock/tests/ArrayMatcherTest.java,88,"ssertEquals(""[\""1\"", \""2\""]"", stringFor(new Object[] { ""1"", ""2"" }));"
False,test/org/easymock/tests/ArrayMatcherTest.java,test/org/easymock/tests/ArrayMatcherTest.java,91,Test
False,test/org/easymock/tests/ArrayMatcherTest.java,test/org/easymock/tests/ArrayMatcherTest.java,92,ublic void toStringMixed() {
False,test/org/easymock/tests/ArrayMatcherTest.java,test/org/easymock/tests/ArrayMatcherTest.java,93,"ssertEquals(""3, [\""1\"", 2.0], \""Test\"""", MATCHER"
False,test/org/easymock/tests/ArrayMatcherTest.java,test/org/easymock/tests/ArrayMatcherTest.java,94,"toString(new Object[] { new Integer(3),"
False,test/org/easymock/tests/ArrayMatcherTest.java,test/org/easymock/tests/ArrayMatcherTest.java,95,"ew Object[] { ""1"", new Float(2.0) }, ""Test"" }));"
False,test/org/easymock/tests/ArrayMatcherTest.java,test/org/easymock/tests/ArrayMatcherTest.java,98,rivate String stringFor(Object argument) {
False,test/org/easymock/tests/ArrayMatcherTest.java,test/org/easymock/tests/ArrayMatcherTest.java,99,eturn MATCHER.toString(new Object[] { argument });
False,test/org/easymock/tests/ArrayMatcherTest.java,test/org/easymock/tests/ArrayMatcherTest.java,102,"rivate boolean equals(Object o1, Object o2) {"
False,test/org/easymock/tests/ArrayMatcherTest.java,test/org/easymock/tests/ArrayMatcherTest.java,103,bject[] expected = new Object[] { o1 };
False,test/org/easymock/tests/ArrayMatcherTest.java,test/org/easymock/tests/ArrayMatcherTest.java,104,bject[] actual = new Object[] { o2 };
False,test/org/easymock/tests/ArrayMatcherTest.java,test/org/easymock/tests/ArrayMatcherTest.java,105,"eturn MATCHER.matches(expected, actual);"
False,test/org/easymock/tests/DefaultMatcherTest.java,test/org/easymock/tests/DefaultMatcherTest.java,2," Copyright (c) 2001-2007 OFFIS, Tammo Freese."
False,test/org/easymock/tests/DefaultMatcherTest.java,test/org/easymock/tests/DefaultMatcherTest.java,3, This program is made available under the terms of the MIT License.
False,test/org/easymock/tests/DefaultMatcherTest.java,test/org/easymock/tests/DefaultMatcherTest.java,5,ackage org.easymock.tests;
False,test/org/easymock/tests/DefaultMatcherTest.java,test/org/easymock/tests/DefaultMatcherTest.java,7,mport static org.junit.Assert.*;
False,test/org/easymock/tests/DefaultMatcherTest.java,test/org/easymock/tests/DefaultMatcherTest.java,9,mport org.easymock.MockControl;
False,test/org/easymock/tests/DefaultMatcherTest.java,test/org/easymock/tests/DefaultMatcherTest.java,10,mport org.junit.Before;
False,test/org/easymock/tests/DefaultMatcherTest.java,test/org/easymock/tests/DefaultMatcherTest.java,11,mport org.junit.Test;
False,test/org/easymock/tests/DefaultMatcherTest.java,test/org/easymock/tests/DefaultMatcherTest.java,13,ublic class DefaultMatcherTest {
False,test/org/easymock/tests/DefaultMatcherTest.java,test/org/easymock/tests/DefaultMatcherTest.java,15,ublic static interface ArrayInterface {
False,test/org/easymock/tests/DefaultMatcherTest.java,test/org/easymock/tests/DefaultMatcherTest.java,16,oid methodA(int[] argument);
False,test/org/easymock/tests/DefaultMatcherTest.java,test/org/easymock/tests/DefaultMatcherTest.java,18,oid methodB(int[] argument);
False,test/org/easymock/tests/DefaultMatcherTest.java,test/org/easymock/tests/DefaultMatcherTest.java,21,rivate MockControl<ArrayInterface> control;
False,test/org/easymock/tests/DefaultMatcherTest.java,test/org/easymock/tests/DefaultMatcherTest.java,23,rivate ArrayInterface mock;
False,test/org/easymock/tests/DefaultMatcherTest.java,test/org/easymock/tests/DefaultMatcherTest.java,25,Before
False,test/org/easymock/tests/DefaultMatcherTest.java,test/org/easymock/tests/DefaultMatcherTest.java,26,ublic void setup() {
False,test/org/easymock/tests/DefaultMatcherTest.java,test/org/easymock/tests/DefaultMatcherTest.java,27,ontrol = MockControl.createControl(ArrayInterface.class);
False,test/org/easymock/tests/DefaultMatcherTest.java,test/org/easymock/tests/DefaultMatcherTest.java,28,ock = control.getMock();
False,test/org/easymock/tests/DefaultMatcherTest.java,test/org/easymock/tests/DefaultMatcherTest.java,31,Test
False,test/org/easymock/tests/DefaultMatcherTest.java,test/org/easymock/tests/DefaultMatcherTest.java,32,ublic void defaultMatcher() {
False,test/org/easymock/tests/DefaultMatcherTest.java,test/org/easymock/tests/DefaultMatcherTest.java,33,ontrol.setDefaultMatcher(MockControl.ARRAY_MATCHER);
False,test/org/easymock/tests/DefaultMatcherTest.java,test/org/easymock/tests/DefaultMatcherTest.java,35,"ock.methodA(new int[] { 1, 1 });"
False,test/org/easymock/tests/DefaultMatcherTest.java,test/org/easymock/tests/DefaultMatcherTest.java,36,"ock.methodB(new int[] { 2, 2 });"
False,test/org/easymock/tests/DefaultMatcherTest.java,test/org/easymock/tests/DefaultMatcherTest.java,38,ontrol.replay();
False,test/org/easymock/tests/DefaultMatcherTest.java,test/org/easymock/tests/DefaultMatcherTest.java,40,"ock.methodA(new int[] { 1, 1 });"
False,test/org/easymock/tests/DefaultMatcherTest.java,test/org/easymock/tests/DefaultMatcherTest.java,41,"ock.methodB(new int[] { 2, 2 });"
False,test/org/easymock/tests/DefaultMatcherTest.java,test/org/easymock/tests/DefaultMatcherTest.java,43,ontrol.verify();
False,test/org/easymock/tests/DefaultMatcherTest.java,test/org/easymock/tests/DefaultMatcherTest.java,46,Test
False,test/org/easymock/tests/DefaultMatcherTest.java,test/org/easymock/tests/DefaultMatcherTest.java,47,ublic void failInReplayState() {
False,test/org/easymock/tests/DefaultMatcherTest.java,test/org/easymock/tests/DefaultMatcherTest.java,48,ontrol.replay();
False,test/org/easymock/tests/DefaultMatcherTest.java,test/org/easymock/tests/DefaultMatcherTest.java,49,ry {
False,test/org/easymock/tests/DefaultMatcherTest.java,test/org/easymock/tests/DefaultMatcherTest.java,50,ontrol.setDefaultMatcher(MockControl.ARRAY_MATCHER);
False,test/org/easymock/tests/DefaultMatcherTest.java,test/org/easymock/tests/DefaultMatcherTest.java,51,ail();
False,test/org/easymock/tests/DefaultMatcherTest.java,test/org/easymock/tests/DefaultMatcherTest.java,52, catch (IllegalStateException expected) {
False,test/org/easymock/tests/DefaultMatcherTest.java,test/org/easymock/tests/DefaultMatcherTest.java,56,Test
False,test/org/easymock/tests/DefaultMatcherTest.java,test/org/easymock/tests/DefaultMatcherTest.java,57,ublic void failIfDefaultMatcherSetTwice() {
False,test/org/easymock/tests/DefaultMatcherTest.java,test/org/easymock/tests/DefaultMatcherTest.java,58,ontrol.setDefaultMatcher(MockControl.ARRAY_MATCHER);
False,test/org/easymock/tests/DefaultMatcherTest.java,test/org/easymock/tests/DefaultMatcherTest.java,59,ry {
False,test/org/easymock/tests/DefaultMatcherTest.java,test/org/easymock/tests/DefaultMatcherTest.java,60,ontrol.setDefaultMatcher(MockControl.ARRAY_MATCHER);
False,test/org/easymock/tests/DefaultMatcherTest.java,test/org/easymock/tests/DefaultMatcherTest.java,61,ail();
False,test/org/easymock/tests/DefaultMatcherTest.java,test/org/easymock/tests/DefaultMatcherTest.java,62, catch (IllegalStateException expected) {
False,test/org/easymock/tests/DefaultMatcherTest.java,test/org/easymock/tests/DefaultMatcherTest.java,63,ssertEquals(
False,test/org/easymock/tests/DefaultMatcherTest.java,test/org/easymock/tests/DefaultMatcherTest.java,64,"default matcher can only be set once directly after creation of the MockControl"","
False,test/org/easymock/tests/DefaultMatcherTest.java,test/org/easymock/tests/DefaultMatcherTest.java,65,xpected.getMessage());
False,test/org/easymock/tests/DefaultMatcherTest.java,test/org/easymock/tests/DefaultMatcherTest.java,69,Test
False,test/org/easymock/tests/DefaultMatcherTest.java,test/org/easymock/tests/DefaultMatcherTest.java,70,ublic void defaultMatcherSetTooLate() {
False,test/org/easymock/tests/DefaultMatcherTest.java,test/org/easymock/tests/DefaultMatcherTest.java,71,"nt[] integers = new int[] { 1, 1 };"
False,test/org/easymock/tests/DefaultMatcherTest.java,test/org/easymock/tests/DefaultMatcherTest.java,72,"nt[] integers2 = new int[] { 2, 2 };"
False,test/org/easymock/tests/DefaultMatcherTest.java,test/org/easymock/tests/DefaultMatcherTest.java,73,ock.methodA(integers);
False,test/org/easymock/tests/DefaultMatcherTest.java,test/org/easymock/tests/DefaultMatcherTest.java,74,ontrol.setVoidCallable();
False,test/org/easymock/tests/DefaultMatcherTest.java,test/org/easymock/tests/DefaultMatcherTest.java,75,ontrol.setDefaultMatcher(MockControl.ARRAY_MATCHER);
False,test/org/easymock/tests/DefaultMatcherTest.java,test/org/easymock/tests/DefaultMatcherTest.java,76,ock.methodA(integers2);
False,test/org/easymock/tests/DefaultMatcherTest.java,test/org/easymock/tests/DefaultMatcherTest.java,77,ontrol.setVoidCallable();
False,test/org/easymock/tests/DefaultMatcherTest.java,test/org/easymock/tests/DefaultMatcherTest.java,78,ontrol.replay();
False,test/org/easymock/tests/DefaultMatcherTest.java,test/org/easymock/tests/DefaultMatcherTest.java,80,oolean failed = true;
False,test/org/easymock/tests/DefaultMatcherTest.java,test/org/easymock/tests/DefaultMatcherTest.java,81,ry {
False,test/org/easymock/tests/DefaultMatcherTest.java,test/org/easymock/tests/DefaultMatcherTest.java,82,"ock.methodA(new int[] { 1, 1 });"
False,test/org/easymock/tests/DefaultMatcherTest.java,test/org/easymock/tests/DefaultMatcherTest.java,83,ailed = false;
False,test/org/easymock/tests/DefaultMatcherTest.java,test/org/easymock/tests/DefaultMatcherTest.java,84, catch (AssertionError expected) {
False,test/org/easymock/tests/DefaultMatcherTest.java,test/org/easymock/tests/DefaultMatcherTest.java,86,f (!failed) {
False,test/org/easymock/tests/DefaultMatcherTest.java,test/org/easymock/tests/DefaultMatcherTest.java,87,ail();
False,test/org/easymock/tests/DefaultMatcherTest.java,test/org/easymock/tests/DefaultMatcherTest.java,89,ock.methodA(integers);
False,test/org/easymock/tests/DefaultMatcherTest.java,test/org/easymock/tests/DefaultMatcherTest.java,90,"ock.methodA(new int[] { 2, 2 });"
False,test/org/easymock/tests/DefaultMatcherTest.java,test/org/easymock/tests/DefaultMatcherTest.java,91,ontrol.verify();
False,test/org/easymock/tests/EqualsMatcherTest.java,test/org/easymock/tests/EqualsMatcherTest.java,2," Copyright (c) 2001-2007 OFFIS, Tammo Freese."
False,test/org/easymock/tests/EqualsMatcherTest.java,test/org/easymock/tests/EqualsMatcherTest.java,3, This program is made available under the terms of the MIT License.
False,test/org/easymock/tests/EqualsMatcherTest.java,test/org/easymock/tests/EqualsMatcherTest.java,5,ackage org.easymock.tests;
False,test/org/easymock/tests/EqualsMatcherTest.java,test/org/easymock/tests/EqualsMatcherTest.java,7,mport static org.junit.Assert.*;
False,test/org/easymock/tests/EqualsMatcherTest.java,test/org/easymock/tests/EqualsMatcherTest.java,9,mport org.easymock.ArgumentsMatcher;
False,test/org/easymock/tests/EqualsMatcherTest.java,test/org/easymock/tests/EqualsMatcherTest.java,10,mport org.easymock.MockControl;
False,test/org/easymock/tests/EqualsMatcherTest.java,test/org/easymock/tests/EqualsMatcherTest.java,11,mport org.junit.Test;
False,test/org/easymock/tests/EqualsMatcherTest.java,test/org/easymock/tests/EqualsMatcherTest.java,13,ublic class EqualsMatcherTest {
False,test/org/easymock/tests/EqualsMatcherTest.java,test/org/easymock/tests/EqualsMatcherTest.java,14,inal ArgumentsMatcher MATCHER = MockControl.EQUALS_MATCHER;
False,test/org/easymock/tests/EqualsMatcherTest.java,test/org/easymock/tests/EqualsMatcherTest.java,16,Test
False,test/org/easymock/tests/EqualsMatcherTest.java,test/org/easymock/tests/EqualsMatcherTest.java,17,ublic void equalsMatcher() {
False,test/org/easymock/tests/EqualsMatcherTest.java,test/org/easymock/tests/EqualsMatcherTest.java,18,"ssertTrue(MATCHER.matches(null, null));"
False,test/org/easymock/tests/EqualsMatcherTest.java,test/org/easymock/tests/EqualsMatcherTest.java,19,"ssertFalse(MATCHER.matches(null, new Object[0]));"
False,test/org/easymock/tests/EqualsMatcherTest.java,test/org/easymock/tests/EqualsMatcherTest.java,20,"ssertFalse(MATCHER.matches(new Object[0], null));"
False,test/org/easymock/tests/EqualsMatcherTest.java,test/org/easymock/tests/EqualsMatcherTest.java,21,"ssertFalse(MATCHER.matches(new Object[] { """" }, new Object[] { null }));"
False,test/org/easymock/tests/EqualsMatcherTest.java,test/org/easymock/tests/EqualsMatcherTest.java,22,"ssertFalse(MATCHER.matches(new Object[] { null }, new Object[] { """" }));"
False,test/org/easymock/tests/EqualsMatcherTest.java,test/org/easymock/tests/EqualsMatcherTest.java,23,ssertTrue(MATCHER
False,test/org/easymock/tests/EqualsMatcherTest.java,test/org/easymock/tests/EqualsMatcherTest.java,24,"matches(new Object[] { null }, new Object[] { null }));"
False,test/org/easymock/tests/EqualsMatcherTest.java,test/org/easymock/tests/EqualsMatcherTest.java,25,"ssertTrue(MATCHER.matches(new Object[] { ""x"" }, new Object[] { ""x"" }));"
False,test/org/easymock/tests/EqualsMatcherTest.java,test/org/easymock/tests/EqualsMatcherTest.java,28,Test
False,test/org/easymock/tests/EqualsMatcherTest.java,test/org/easymock/tests/EqualsMatcherTest.java,29,ublic void differentNumberOfArguments() {
False,test/org/easymock/tests/EqualsMatcherTest.java,test/org/easymock/tests/EqualsMatcherTest.java,30,"ssertFalse(MATCHER.matches(new Object[2], new Object[3]));"
False,test/org/easymock/tests/ExpectedMethodCallTest.java,test/org/easymock/tests/ExpectedMethodCallTest.java,2," Copyright (c) 2001-2007 OFFIS, Tammo Freese."
False,test/org/easymock/tests/ExpectedMethodCallTest.java,test/org/easymock/tests/ExpectedMethodCallTest.java,3, This program is made available under the terms of the MIT License.
False,test/org/easymock/tests/ExpectedMethodCallTest.java,test/org/easymock/tests/ExpectedMethodCallTest.java,5,ackage org.easymock.tests;
False,test/org/easymock/tests/ExpectedMethodCallTest.java,test/org/easymock/tests/ExpectedMethodCallTest.java,7,mport static org.junit.Assert.*;
False,test/org/easymock/tests/ExpectedMethodCallTest.java,test/org/easymock/tests/ExpectedMethodCallTest.java,9,mport java.lang.reflect.Method;
False,test/org/easymock/tests/ExpectedMethodCallTest.java,test/org/easymock/tests/ExpectedMethodCallTest.java,11,mport org.easymock.internal.ExpectedInvocation;
False,test/org/easymock/tests/ExpectedMethodCallTest.java,test/org/easymock/tests/ExpectedMethodCallTest.java,12,mport org.easymock.internal.Invocation;
False,test/org/easymock/tests/ExpectedMethodCallTest.java,test/org/easymock/tests/ExpectedMethodCallTest.java,13,mport org.junit.Before;
False,test/org/easymock/tests/ExpectedMethodCallTest.java,test/org/easymock/tests/ExpectedMethodCallTest.java,14,mport org.junit.Test;
False,test/org/easymock/tests/ExpectedMethodCallTest.java,test/org/easymock/tests/ExpectedMethodCallTest.java,16,ublic class ExpectedMethodCallTest {
False,test/org/easymock/tests/ExpectedMethodCallTest.java,test/org/easymock/tests/ExpectedMethodCallTest.java,18,rivate ExpectedInvocation call;
False,test/org/easymock/tests/ExpectedMethodCallTest.java,test/org/easymock/tests/ExpectedMethodCallTest.java,20,Before
False,test/org/easymock/tests/ExpectedMethodCallTest.java,test/org/easymock/tests/ExpectedMethodCallTest.java,21,"ublic void setup() throws SecurityException, NoSuchMethodException {"
False,test/org/easymock/tests/ExpectedMethodCallTest.java,test/org/easymock/tests/ExpectedMethodCallTest.java,22,"bject[] arguments1 = new Object[] { """" };"
False,test/org/easymock/tests/ExpectedMethodCallTest.java,test/org/easymock/tests/ExpectedMethodCallTest.java,23,"ethod m = Object.class.getMethod(""equals"","
False,test/org/easymock/tests/ExpectedMethodCallTest.java,test/org/easymock/tests/ExpectedMethodCallTest.java,24,ew Class[] { Object.class });
False,test/org/easymock/tests/ExpectedMethodCallTest.java,test/org/easymock/tests/ExpectedMethodCallTest.java,25,"all = new ExpectedInvocation(new Invocation(null, m, arguments1), null);"
False,test/org/easymock/tests/ExpectedMethodCallTest.java,test/org/easymock/tests/ExpectedMethodCallTest.java,28,/    @Test
False,test/org/easymock/tests/ExpectedMethodCallTest.java,test/org/easymock/tests/ExpectedMethodCallTest.java,29,/    public void testHashCode() {
False,test/org/easymock/tests/ExpectedMethodCallTest.java,test/org/easymock/tests/ExpectedMethodCallTest.java,30,/        try {
False,test/org/easymock/tests/ExpectedMethodCallTest.java,test/org/easymock/tests/ExpectedMethodCallTest.java,31,/            call.hashCode();
False,test/org/easymock/tests/ExpectedMethodCallTest.java,test/org/easymock/tests/ExpectedMethodCallTest.java,32,/            fail();
False,test/org/easymock/tests/ExpectedMethodCallTest.java,test/org/easymock/tests/ExpectedMethodCallTest.java,33,/        } catch (UnsupportedOperationException expected) {
False,test/org/easymock/tests/ExpectedMethodCallTest.java,test/org/easymock/tests/ExpectedMethodCallTest.java,34,"/            assertEquals(""hashCode() is not implemented"", expected.getMessage());"
False,test/org/easymock/tests/InvocationTest.java,test/org/easymock/tests/InvocationTest.java,45,/    @Test
False,test/org/easymock/tests/InvocationTest.java,test/org/easymock/tests/InvocationTest.java,46,/    public void testHashCode() {
False,test/org/easymock/tests/InvocationTest.java,test/org/easymock/tests/InvocationTest.java,47,/        try {
False,test/org/easymock/tests/InvocationTest.java,test/org/easymock/tests/InvocationTest.java,48,/            call.hashCode();
False,test/org/easymock/tests/InvocationTest.java,test/org/easymock/tests/InvocationTest.java,49,/            fail();
False,test/org/easymock/tests/InvocationTest.java,test/org/easymock/tests/InvocationTest.java,50,/        } catch (UnsupportedOperationException expected) {
False,test/org/easymock/tests/InvocationTest.java,test/org/easymock/tests/InvocationTest.java,51,"/            assertEquals(""hashCode() is not implemented"", expected.getMessage());"
True,test/org/easymock/tests/InvocationTest.java,test/org/easymock/tests/InvocationTest.java,45,@Test
True,test/org/easymock/tests/InvocationTest.java,test/org/easymock/tests/InvocationTest.java,46,public void testHashCode() {
True,test/org/easymock/tests/InvocationTest.java,test/org/easymock/tests/InvocationTest.java,47,try {
True,test/org/easymock/tests/InvocationTest.java,test/org/easymock/tests/InvocationTest.java,48,call.hashCode();
True,test/org/easymock/tests/InvocationTest.java,test/org/easymock/tests/InvocationTest.java,49,fail();
True,test/org/easymock/tests/InvocationTest.java,test/org/easymock/tests/InvocationTest.java,50,} catch (UnsupportedOperationException expected) {
True,test/org/easymock/tests/InvocationTest.java,test/org/easymock/tests/InvocationTest.java,51,"assertEquals(""hashCode() is not implemented"", expected.getMessage());"
False,test/org/mockito/usage/MockitoExploitsTest.java,test/org/mockito/usage/MockitoExploitsTest.java,94,Test
False,test/org/mockito/usage/MockitoExploitsTest.java,test/org/mockito/usage/MockitoExploitsTest.java,95,ublic void shouldMockString() throws Exception {
False,test/org/mockito/usage/MockitoExploitsTest.java,test/org/mockito/usage/MockitoExploitsTest.java,96,tring s = Mockito.mock(String.class);
False,test/org/mockito/usage/MockitoExploitsTest.java,test/org/mockito/usage/MockitoExploitsTest.java,97,"tub(s.concat(""world"")).andReturn(""hello world"");"
False,test/org/mockito/usage/MockitoExploitsTest.java,test/org/mockito/usage/MockitoExploitsTest.java,99,"ssertThat(s.concat(""world""), equalTo(""hello world""));"
