is_addition,old_file_path,new_file_path,line_num,content
False,src/org/mockito/exceptions/Reporter.java,src/org/mockito/exceptions/Reporter.java,82,"Also, this error might show up because you verify final method, equals() or hashCode() method."","
True,src/org/mockito/exceptions/Reporter.java,src/org/mockito/exceptions/Reporter.java,82,"""Also, this error might show up because you stub final/private/equals() or hashCode() method."","
False,src/org/mockito/exceptions/Reporter.java,src/org/mockito/exceptions/Reporter.java,96,"Also, this error might show up because you stub a final method, equals() or hashCode() method."","
True,src/org/mockito/exceptions/Reporter.java,src/org/mockito/exceptions/Reporter.java,96,"""Also, this error might show up because you verify final/private/equals() or hashCode() method."","
False,src/org/mockito/exceptions/Reporter.java,src/org/mockito/exceptions/Reporter.java,408,"Following methods *cannot* be stubbed/verified: final methods, equals() and hashCode()."","
True,src/org/mockito/exceptions/Reporter.java,src/org/mockito/exceptions/Reporter.java,408,"""Following methods *cannot* be stubbed/verified: final/private/equals()/hashCode() methods."","
False,src/org/mockito/internal/MockHandler.java,src/org/mockito/internal/MockHandler.java,98,"eturn methodProxy.invoke(instance, args);"
True,src/org/mockito/internal/MockHandler.java,src/org/mockito/internal/MockHandler.java,98,"return methodProxy.invokeSuper(proxy, args);"
False,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,32,"ew ShallowCopyTool().copy(optionalInstance, mock);"
True,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,32,"new ShallowCopyTool().copyToMock(optionalInstance, mock);"
True,src/org/mockito/internal/util/ShallowCopyTool.java,src/org/mockito/internal/util/ShallowCopyTool.java,4,import java.lang.reflect.Modifier;
False,src/org/mockito/internal/util/ShallowCopyTool.java,src/org/mockito/internal/util/ShallowCopyTool.java,7,"ublic <T> void copy(T from, T to) throws UnableToCopyFieldValue {"
False,src/org/mockito/internal/util/ShallowCopyTool.java,src/org/mockito/internal/util/ShallowCopyTool.java,8,ield[] fieldsFrom = from.getClass().getDeclaredFields();
False,src/org/mockito/internal/util/ShallowCopyTool.java,src/org/mockito/internal/util/ShallowCopyTool.java,9,ield[] fieldsTo = to.getClass().getDeclaredFields();
True,src/org/mockito/internal/util/ShallowCopyTool.java,src/org/mockito/internal/util/ShallowCopyTool.java,8,"public <T> void copyToMock(T from, T mock) throws UnableToCopyFieldValue {"
True,src/org/mockito/internal/util/ShallowCopyTool.java,src/org/mockito/internal/util/ShallowCopyTool.java,9,Class<? extends Object> classFrom = from.getClass();
True,src/org/mockito/internal/util/ShallowCopyTool.java,src/org/mockito/internal/util/ShallowCopyTool.java,10,Class<?> classTo = mock.getClass().getSuperclass();
True,src/org/mockito/internal/util/ShallowCopyTool.java,src/org/mockito/internal/util/ShallowCopyTool.java,11,"assert classTo == classFrom : ""Classes must have the same type: class from: "" + classFrom + "", class to: "" + classTo;"
True,src/org/mockito/internal/util/ShallowCopyTool.java,src/org/mockito/internal/util/ShallowCopyTool.java,13,Field[] fieldsFrom = classFrom.getDeclaredFields();
True,src/org/mockito/internal/util/ShallowCopyTool.java,src/org/mockito/internal/util/ShallowCopyTool.java,14,Field[] fieldsTo = classTo.getDeclaredFields();
True,src/org/mockito/internal/util/ShallowCopyTool.java,src/org/mockito/internal/util/ShallowCopyTool.java,18,if (Modifier.isStatic(fieldsFrom[i].getModifiers())) {
True,src/org/mockito/internal/util/ShallowCopyTool.java,src/org/mockito/internal/util/ShallowCopyTool.java,19,continue;
False,src/org/mockito/internal/util/ShallowCopyTool.java,src/org/mockito/internal/util/ShallowCopyTool.java,17,"ieldsTo[i].set(to, value);"
True,src/org/mockito/internal/util/ShallowCopyTool.java,src/org/mockito/internal/util/ShallowCopyTool.java,25,"fieldsTo[i].set(mock, value);"
True,src/org/mockito/internal/util/ShallowCopyTool.java,src/org/mockito/internal/util/ShallowCopyTool.java,27,//TODO: add missing unit test
False,test/org/mockito/internal/util/ShallowCopyToolTest.java,test/org/mockito/internal/util/ShallowCopyToolTest.java,3,mport static org.junit.Assert.*;
True,test/org/mockito/internal/util/ShallowCopyToolTest.java,test/org/mockito/internal/util/ShallowCopyToolTest.java,3,import static org.mockito.Mockito.*;
True,test/org/mockito/internal/util/ShallowCopyToolTest.java,test/org/mockito/internal/util/ShallowCopyToolTest.java,5,import java.util.LinkedList;
True,test/org/mockito/internal/util/ShallowCopyToolTest.java,test/org/mockito/internal/util/ShallowCopyToolTest.java,10,"@SuppressWarnings(""unchecked"")"
False,test/org/mockito/internal/util/ShallowCopyToolTest.java,test/org/mockito/internal/util/ShallowCopyToolTest.java,14,lass SomeObject {
False,test/org/mockito/internal/util/ShallowCopyToolTest.java,test/org/mockito/internal/util/ShallowCopyToolTest.java,15,rivate int fieldOne = 1;
False,test/org/mockito/internal/util/ShallowCopyToolTest.java,test/org/mockito/internal/util/ShallowCopyToolTest.java,16,"tring fieldTwo = ""2"";"
False,test/org/mockito/internal/util/ShallowCopyToolTest.java,test/org/mockito/internal/util/ShallowCopyToolTest.java,17,rotected Object fieldThree = new Object();
False,test/org/mockito/internal/util/ShallowCopyToolTest.java,test/org/mockito/internal/util/ShallowCopyToolTest.java,18,ublic SomeOtherObject fieldFour = new SomeOtherObject();
False,test/org/mockito/internal/util/ShallowCopyToolTest.java,test/org/mockito/internal/util/ShallowCopyToolTest.java,19,inal int fieldFive;
False,test/org/mockito/internal/util/ShallowCopyToolTest.java,test/org/mockito/internal/util/ShallowCopyToolTest.java,20,ublic SomeObject(int fieldFiveValue) {
False,test/org/mockito/internal/util/ShallowCopyToolTest.java,test/org/mockito/internal/util/ShallowCopyToolTest.java,21,his.fieldFive = fieldFiveValue;
True,test/org/mockito/internal/util/ShallowCopyToolTest.java,test/org/mockito/internal/util/ShallowCopyToolTest.java,16,//TODO: if one field fails - should carry on
True,test/org/mockito/internal/util/ShallowCopyToolTest.java,test/org/mockito/internal/util/ShallowCopyToolTest.java,17,static class SomeObject {
True,test/org/mockito/internal/util/ShallowCopyToolTest.java,test/org/mockito/internal/util/ShallowCopyToolTest.java,18,private static int staticField = 900;
True,test/org/mockito/internal/util/ShallowCopyToolTest.java,test/org/mockito/internal/util/ShallowCopyToolTest.java,19,private int privateField = 1;
True,test/org/mockito/internal/util/ShallowCopyToolTest.java,test/org/mockito/internal/util/ShallowCopyToolTest.java,20,private transient int privateTransientField = 100;
True,test/org/mockito/internal/util/ShallowCopyToolTest.java,test/org/mockito/internal/util/ShallowCopyToolTest.java,21,"String defaultField = ""2"";"
True,test/org/mockito/internal/util/ShallowCopyToolTest.java,test/org/mockito/internal/util/ShallowCopyToolTest.java,22,protected Object protectedField = new Object();
True,test/org/mockito/internal/util/ShallowCopyToolTest.java,test/org/mockito/internal/util/ShallowCopyToolTest.java,23,public SomeOtherObject instancePublicField = new SomeOtherObject();
True,test/org/mockito/internal/util/ShallowCopyToolTest.java,test/org/mockito/internal/util/ShallowCopyToolTest.java,24,final int finalField;
True,test/org/mockito/internal/util/ShallowCopyToolTest.java,test/org/mockito/internal/util/ShallowCopyToolTest.java,25,public SomeObject(int finalField) {
True,test/org/mockito/internal/util/ShallowCopyToolTest.java,test/org/mockito/internal/util/ShallowCopyToolTest.java,26,this.finalField = finalField;
False,test/org/mockito/internal/util/ShallowCopyToolTest.java,test/org/mockito/internal/util/ShallowCopyToolTest.java,25,lass SomeOtherObject {}
True,test/org/mockito/internal/util/ShallowCopyToolTest.java,test/org/mockito/internal/util/ShallowCopyToolTest.java,30,static class SomeOtherObject {}
True,test/org/mockito/internal/util/ShallowCopyToolTest.java,test/org/mockito/internal/util/ShallowCopyToolTest.java,32,private SomeObject first = new SomeObject(100);
True,test/org/mockito/internal/util/ShallowCopyToolTest.java,test/org/mockito/internal/util/ShallowCopyToolTest.java,33,private SomeObject second = mock(SomeObject.class);
True,test/org/mockito/internal/util/ShallowCopyToolTest.java,test/org/mockito/internal/util/ShallowCopyToolTest.java,35,@Test
True,test/org/mockito/internal/util/ShallowCopyToolTest.java,test/org/mockito/internal/util/ShallowCopyToolTest.java,36,public void shouldShallowCopyBasicFields() throws Exception {
True,test/org/mockito/internal/util/ShallowCopyToolTest.java,test/org/mockito/internal/util/ShallowCopyToolTest.java,37,//given
True,test/org/mockito/internal/util/ShallowCopyToolTest.java,test/org/mockito/internal/util/ShallowCopyToolTest.java,38,"assertEquals(100, first.finalField);"
True,test/org/mockito/internal/util/ShallowCopyToolTest.java,test/org/mockito/internal/util/ShallowCopyToolTest.java,39,"assertNotEquals(100, second.finalField);"
True,test/org/mockito/internal/util/ShallowCopyToolTest.java,test/org/mockito/internal/util/ShallowCopyToolTest.java,41,//when
True,test/org/mockito/internal/util/ShallowCopyToolTest.java,test/org/mockito/internal/util/ShallowCopyToolTest.java,42,"tool.copyToMock(first, second);"
True,test/org/mockito/internal/util/ShallowCopyToolTest.java,test/org/mockito/internal/util/ShallowCopyToolTest.java,44,//then
True,test/org/mockito/internal/util/ShallowCopyToolTest.java,test/org/mockito/internal/util/ShallowCopyToolTest.java,45,"assertEquals(100, second.finalField);"
False,test/org/mockito/internal/util/ShallowCopyToolTest.java,test/org/mockito/internal/util/ShallowCopyToolTest.java,28,ublic void shouldShallowCopy() throws Exception {
True,test/org/mockito/internal/util/ShallowCopyToolTest.java,test/org/mockito/internal/util/ShallowCopyToolTest.java,49,public void shouldShallowCopyTransientPrivateFields() throws Exception {
False,test/org/mockito/internal/util/ShallowCopyToolTest.java,test/org/mockito/internal/util/ShallowCopyToolTest.java,30,omeObject first = new SomeObject(100);
False,test/org/mockito/internal/util/ShallowCopyToolTest.java,test/org/mockito/internal/util/ShallowCopyToolTest.java,31,omeObject second = new SomeObject(200);
False,test/org/mockito/internal/util/ShallowCopyToolTest.java,test/org/mockito/internal/util/ShallowCopyToolTest.java,32,"ssertEquals(200, second.fieldFive);"
True,test/org/mockito/internal/util/ShallowCopyToolTest.java,test/org/mockito/internal/util/ShallowCopyToolTest.java,51,first.privateTransientField = 1000;
True,test/org/mockito/internal/util/ShallowCopyToolTest.java,test/org/mockito/internal/util/ShallowCopyToolTest.java,52,"assertNotEquals(1000, second.privateTransientField);"
False,test/org/mockito/internal/util/ShallowCopyToolTest.java,test/org/mockito/internal/util/ShallowCopyToolTest.java,35,"ool.copy(first, second);"
True,test/org/mockito/internal/util/ShallowCopyToolTest.java,test/org/mockito/internal/util/ShallowCopyToolTest.java,55,"tool.copyToMock(first, second);"
False,test/org/mockito/internal/util/ShallowCopyToolTest.java,test/org/mockito/internal/util/ShallowCopyToolTest.java,38,"ssertEquals(100, second.fieldFive);"
True,test/org/mockito/internal/util/ShallowCopyToolTest.java,test/org/mockito/internal/util/ShallowCopyToolTest.java,58,"assertEquals(1000, second.privateTransientField);"
True,test/org/mockito/internal/util/ShallowCopyToolTest.java,test/org/mockito/internal/util/ShallowCopyToolTest.java,61,@Test
True,test/org/mockito/internal/util/ShallowCopyToolTest.java,test/org/mockito/internal/util/ShallowCopyToolTest.java,62,public void shouldShallowCopyLinkedListIntoMock() throws Exception {
True,test/org/mockito/internal/util/ShallowCopyToolTest.java,test/org/mockito/internal/util/ShallowCopyToolTest.java,63,//given
True,test/org/mockito/internal/util/ShallowCopyToolTest.java,test/org/mockito/internal/util/ShallowCopyToolTest.java,64,LinkedList from = new LinkedList();
True,test/org/mockito/internal/util/ShallowCopyToolTest.java,test/org/mockito/internal/util/ShallowCopyToolTest.java,65,LinkedList to = mock(LinkedList.class);
True,test/org/mockito/internal/util/ShallowCopyToolTest.java,test/org/mockito/internal/util/ShallowCopyToolTest.java,67,//when
True,test/org/mockito/internal/util/ShallowCopyToolTest.java,test/org/mockito/internal/util/ShallowCopyToolTest.java,68,"tool.copyToMock(from, to);"
True,test/org/mockito/internal/util/ShallowCopyToolTest.java,test/org/mockito/internal/util/ShallowCopyToolTest.java,70,//then no exception is thrown
True,test/org/mockitousage/spies/PartialMockingWithSpiesTest.java,test/org/mockitousage/spies/PartialMockingWithSpiesTest.java,9,import org.junit.After;
False,test/org/mockitousage/spies/PartialMockingWithSpiesTest.java,test/org/mockitousage/spies/PartialMockingWithSpiesTest.java,11,mport org.mockito.Mock;
True,test/org/mockitousage/spies/PartialMockingWithSpiesTest.java,test/org/mockitousage/spies/PartialMockingWithSpiesTest.java,12,import org.mockito.Mockito;
True,test/org/mockitousage/spies/PartialMockingWithSpiesTest.java,test/org/mockitousage/spies/PartialMockingWithSpiesTest.java,19,@After
True,test/org/mockitousage/spies/PartialMockingWithSpiesTest.java,test/org/mockitousage/spies/PartialMockingWithSpiesTest.java,20,public void validateMockitoUsage() {
True,test/org/mockitousage/spies/PartialMockingWithSpiesTest.java,test/org/mockitousage/spies/PartialMockingWithSpiesTest.java,21,Mockito.validateMockitoUsage();
False,test/org/mockitousage/spies/PartialMockingWithSpiesTest.java,test/org/mockitousage/spies/PartialMockingWithSpiesTest.java,19,"rivate final String defaultName = ""Default name"";"
True,test/org/mockitousage/spies/PartialMockingWithSpiesTest.java,test/org/mockitousage/spies/PartialMockingWithSpiesTest.java,25,"private final Name defaultName = new Name(""Default name"");"
False,test/org/mockitousage/spies/PartialMockingWithSpiesTest.java,test/org/mockitousage/spies/PartialMockingWithSpiesTest.java,22,eturn guessName();
True,test/org/mockitousage/spies/PartialMockingWithSpiesTest.java,test/org/mockitousage/spies/PartialMockingWithSpiesTest.java,28,return guessName().name;
False,test/org/mockitousage/spies/PartialMockingWithSpiesTest.java,test/org/mockitousage/spies/PartialMockingWithSpiesTest.java,25,rotected String guessName() {
True,test/org/mockitousage/spies/PartialMockingWithSpiesTest.java,test/org/mockitousage/spies/PartialMockingWithSpiesTest.java,31,Name guessName() {
True,test/org/mockitousage/spies/PartialMockingWithSpiesTest.java,test/org/mockitousage/spies/PartialMockingWithSpiesTest.java,36,class Name {
True,test/org/mockitousage/spies/PartialMockingWithSpiesTest.java,test/org/mockitousage/spies/PartialMockingWithSpiesTest.java,37,private final String name;
True,test/org/mockitousage/spies/PartialMockingWithSpiesTest.java,test/org/mockitousage/spies/PartialMockingWithSpiesTest.java,39,public Name(String name) {
True,test/org/mockitousage/spies/PartialMockingWithSpiesTest.java,test/org/mockitousage/spies/PartialMockingWithSpiesTest.java,40,this.name = name;
False,test/org/mockitousage/spies/PartialMockingWithSpiesTest.java,test/org/mockitousage/spies/PartialMockingWithSpiesTest.java,30,Mock
False,test/org/mockitousage/spies/PartialMockingWithSpiesTest.java,test/org/mockitousage/spies/PartialMockingWithSpiesTest.java,31,erson mock;
True,test/org/mockitousage/spies/PartialMockingWithSpiesTest.java,test/org/mockitousage/spies/PartialMockingWithSpiesTest.java,44,Person spy = spy(new Person());
False,test/org/mockitousage/spies/PartialMockingWithSpiesTest.java,test/org/mockitousage/spies/PartialMockingWithSpiesTest.java,36,tring name = mock.getName();
True,test/org/mockitousage/spies/PartialMockingWithSpiesTest.java,test/org/mockitousage/spies/PartialMockingWithSpiesTest.java,49,String name = spy.getName();
True,test/org/mockitousage/spies/PartialMockingWithSpiesTest.java,test/org/mockitousage/spies/PartialMockingWithSpiesTest.java,55,@Test
True,test/org/mockitousage/spies/PartialMockingWithSpiesTest.java,test/org/mockitousage/spies/PartialMockingWithSpiesTest.java,56,public void shouldAllowStubbingOfMethodsThatDelegateToOtherMethods() {
True,test/org/mockitousage/spies/PartialMockingWithSpiesTest.java,test/org/mockitousage/spies/PartialMockingWithSpiesTest.java,57,// when
True,test/org/mockitousage/spies/PartialMockingWithSpiesTest.java,test/org/mockitousage/spies/PartialMockingWithSpiesTest.java,58,"when(spy.getName()).thenReturn(""foo"");"
True,test/org/mockitousage/spies/PartialMockingWithSpiesTest.java,test/org/mockitousage/spies/PartialMockingWithSpiesTest.java,60,// then
True,test/org/mockitousage/spies/PartialMockingWithSpiesTest.java,test/org/mockitousage/spies/PartialMockingWithSpiesTest.java,61,"assertEquals(""foo"", spy.getName());"
False,test/org/mockitousage/spies/PartialMockingWithSpiesTest.java,test/org/mockitousage/spies/PartialMockingWithSpiesTest.java,45,ock.getName();
True,test/org/mockitousage/spies/PartialMockingWithSpiesTest.java,test/org/mockitousage/spies/PartialMockingWithSpiesTest.java,67,spy.getName();
False,test/org/mockitousage/spies/PartialMockingWithSpiesTest.java,test/org/mockitousage/spies/PartialMockingWithSpiesTest.java,48,erify(mock).guessName();
True,test/org/mockitousage/spies/PartialMockingWithSpiesTest.java,test/org/mockitousage/spies/PartialMockingWithSpiesTest.java,70,verify(spy).guessName();
False,test/org/mockitousage/spies/PartialMockingWithSpiesTest.java,test/org/mockitousage/spies/PartialMockingWithSpiesTest.java,54,"hen(mock.guessName()).thenReturn(""John"");"
True,test/org/mockitousage/spies/PartialMockingWithSpiesTest.java,test/org/mockitousage/spies/PartialMockingWithSpiesTest.java,76,"when(spy.guessName()).thenReturn(new Name(""John""));"
False,test/org/mockitousage/spies/PartialMockingWithSpiesTest.java,test/org/mockitousage/spies/PartialMockingWithSpiesTest.java,56,tring name = mock.getName();
True,test/org/mockitousage/spies/PartialMockingWithSpiesTest.java,test/org/mockitousage/spies/PartialMockingWithSpiesTest.java,78,String name = spy.getName();
True,test/org/mockitousage/spies/SpyingOnRealObjectsTest.java,test/org/mockitousage/spies/SpyingOnRealObjectsTest.java,14,import org.junit.Ignore;
True,test/org/mockitousage/spies/SpyingOnRealObjectsTest.java,test/org/mockitousage/spies/SpyingOnRealObjectsTest.java,24,@Ignore
True,test/org/mockitoutil/TestBase.java,test/org/mockitoutil/TestBase.java,65,"public static void assertNotEquals(Object expected, Object got) {"
True,test/org/mockitoutil/TestBase.java,test/org/mockitoutil/TestBase.java,66,assertFalse(expected.equals(got));
