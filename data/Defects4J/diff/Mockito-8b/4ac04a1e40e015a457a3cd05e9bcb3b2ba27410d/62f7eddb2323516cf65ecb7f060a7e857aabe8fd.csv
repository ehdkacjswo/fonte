is_addition,old_file_path,new_file_path,line_num,content
False,src/org/mockito/BDDMockito.java,src/org/mockito/BDDMockito.java,211,eturn verify(mock);
True,src/org/mockito/BDDMockito.java,src/org/mockito/BDDMockito.java,211,return Mockito.verify(mock);
False,src/org/mockito/BDDMockito.java,src/org/mockito/BDDMockito.java,218,"eturn verify(mock, mode);"
True,src/org/mockito/BDDMockito.java,src/org/mockito/BDDMockito.java,218,"return Mockito.verify(mock, mode);"
True,src/org/mockito/BDDMockito.java,src/org/mockito/BDDMockito.java,222,* @see #verify(Object)
True,src/org/mockito/BDDMockito.java,src/org/mockito/BDDMockito.java,224,public T verify() {
True,src/org/mockito/BDDMockito.java,src/org/mockito/BDDMockito.java,225,return Mockito.verify(mock);
True,src/org/mockito/BDDMockito.java,src/org/mockito/BDDMockito.java,229,"* @see #verify(Object, VerificationMode)"
True,src/org/mockito/BDDMockito.java,src/org/mockito/BDDMockito.java,231,public T verify(VerificationMode mode) {
True,src/org/mockito/BDDMockito.java,src/org/mockito/BDDMockito.java,232,"return Mockito.verify(mock, mode);"
True,test/org/mockitousage/customization/BDDMockitoTest.java,test/org/mockitousage/customization/BDDMockitoTest.java,225,@Test(expected = WantedButNotInvoked.class)
True,test/org/mockitousage/customization/BDDMockitoTest.java,test/org/mockitousage/customization/BDDMockitoTest.java,226,public void shouldFailForExpectedBehaviorThatDidNotHappenWithVerify() {
True,test/org/mockitousage/customization/BDDMockitoTest.java,test/org/mockitousage/customization/BDDMockitoTest.java,228,then(mock).verify().booleanObjectReturningMethod();
True,test/org/mockitousage/customization/BDDMockitoTest.java,test/org/mockitousage/customization/BDDMockitoTest.java,231,@Test
True,test/org/mockitousage/customization/BDDMockitoTest.java,test/org/mockitousage/customization/BDDMockitoTest.java,232,public void shouldPassForExpectedBehaviorThatHappenedWithVerify() {
True,test/org/mockitousage/customization/BDDMockitoTest.java,test/org/mockitousage/customization/BDDMockitoTest.java,234,mock.booleanObjectReturningMethod();
True,test/org/mockitousage/customization/BDDMockitoTest.java,test/org/mockitousage/customization/BDDMockitoTest.java,236,then(mock).verify().booleanObjectReturningMethod();
True,test/org/mockitousage/customization/BDDMockitoTest.java,test/org/mockitousage/customization/BDDMockitoTest.java,239,@Test
True,test/org/mockitousage/customization/BDDMockitoTest.java,test/org/mockitousage/customization/BDDMockitoTest.java,240,public void shouldPassFluentBddScenario() {
True,test/org/mockitousage/customization/BDDMockitoTest.java,test/org/mockitousage/customization/BDDMockitoTest.java,242,Bike bike = new Bike();
True,test/org/mockitousage/customization/BDDMockitoTest.java,test/org/mockitousage/customization/BDDMockitoTest.java,243,Person person = mock(Person.class);
True,test/org/mockitousage/customization/BDDMockitoTest.java,test/org/mockitousage/customization/BDDMockitoTest.java,245,person.ride(bike);
True,test/org/mockitousage/customization/BDDMockitoTest.java,test/org/mockitousage/customization/BDDMockitoTest.java,246,person.ride(bike);
True,test/org/mockitousage/customization/BDDMockitoTest.java,test/org/mockitousage/customization/BDDMockitoTest.java,248,then(person).should(times(2)).ride(bike);
True,test/org/mockitousage/customization/BDDMockitoTest.java,test/org/mockitousage/customization/BDDMockitoTest.java,251,@Test
True,test/org/mockitousage/customization/BDDMockitoTest.java,test/org/mockitousage/customization/BDDMockitoTest.java,252,public void shouldPassFluentBddScenarioWithVerify() {
True,test/org/mockitousage/customization/BDDMockitoTest.java,test/org/mockitousage/customization/BDDMockitoTest.java,254,Bike bike = new Bike();
True,test/org/mockitousage/customization/BDDMockitoTest.java,test/org/mockitousage/customization/BDDMockitoTest.java,255,Person person = mock(Person.class);
True,test/org/mockitousage/customization/BDDMockitoTest.java,test/org/mockitousage/customization/BDDMockitoTest.java,257,person.ride(bike);
True,test/org/mockitousage/customization/BDDMockitoTest.java,test/org/mockitousage/customization/BDDMockitoTest.java,258,person.ride(bike);
True,test/org/mockitousage/customization/BDDMockitoTest.java,test/org/mockitousage/customization/BDDMockitoTest.java,260,then(person).verify(times(2)).ride(bike);
True,test/org/mockitousage/customization/BDDMockitoTest.java,test/org/mockitousage/customization/BDDMockitoTest.java,263,static class Person {
True,test/org/mockitousage/customization/BDDMockitoTest.java,test/org/mockitousage/customization/BDDMockitoTest.java,265,void ride(Bike bike) {}
True,test/org/mockitousage/customization/BDDMockitoTest.java,test/org/mockitousage/customization/BDDMockitoTest.java,268,static class Bike {
