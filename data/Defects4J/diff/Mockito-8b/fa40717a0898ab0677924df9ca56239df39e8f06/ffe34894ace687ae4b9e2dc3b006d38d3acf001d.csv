is_addition,old_file_path,new_file_path,line_num,content
False,test/org/mockito/usage/binding/BaseClass.java,test/org/mockito/usage/binding/BaseClass.java,1,ackage org.mockito.usage.binding;
False,test/org/mockito/usage/binding/BaseClass.java,test/org/mockito/usage/binding/BaseClass.java,3,"ublic class BaseClass<M extends BaseMessage, D extends IBaseInteface<M>> {"
False,test/org/mockito/usage/binding/BaseClass.java,test/org/mockito/usage/binding/BaseClass.java,5,rivate final D object;
False,test/org/mockito/usage/binding/BaseClass.java,test/org/mockito/usage/binding/BaseClass.java,7,aseClass(D object) {
False,test/org/mockito/usage/binding/BaseClass.java,test/org/mockito/usage/binding/BaseClass.java,8,his.object = object;
False,test/org/mockito/usage/binding/BaseClass.java,test/org/mockito/usage/binding/BaseClass.java,11,ublic void print(M message) {
False,test/org/mockito/usage/binding/BaseClass.java,test/org/mockito/usage/binding/BaseClass.java,12,bject.print(message);
False,test/org/mockito/usage/binding/BaseMessage.java,test/org/mockito/usage/binding/BaseMessage.java,1,ackage org.mockito.usage.binding;
False,test/org/mockito/usage/binding/BaseMessage.java,test/org/mockito/usage/binding/BaseMessage.java,3,ublic class BaseMessage {
False,test/org/mockito/usage/binding/BaseMessage.java,test/org/mockito/usage/binding/BaseMessage.java,4,rivate String content;
False,test/org/mockito/usage/binding/BaseMessage.java,test/org/mockito/usage/binding/BaseMessage.java,6,ublic String getContent() {
False,test/org/mockito/usage/binding/BaseMessage.java,test/org/mockito/usage/binding/BaseMessage.java,7,eturn content;
False,test/org/mockito/usage/binding/BaseMessage.java,test/org/mockito/usage/binding/BaseMessage.java,10,rotected void setContent(String content) {
False,test/org/mockito/usage/binding/BaseMessage.java,test/org/mockito/usage/binding/BaseMessage.java,11,his.content = content;
False,test/org/mockito/usage/binding/ClassUseDerivedInterface.java,test/org/mockito/usage/binding/ClassUseDerivedInterface.java,1,ackage org.mockito.usage.binding;
False,test/org/mockito/usage/binding/ClassUseDerivedInterface.java,test/org/mockito/usage/binding/ClassUseDerivedInterface.java,3,"ublic class ClassUseDerivedInterface extends BaseClass<Message, IDerivedInterface> {"
False,test/org/mockito/usage/binding/ClassUseDerivedInterface.java,test/org/mockito/usage/binding/ClassUseDerivedInterface.java,5,ublic ClassUseDerivedInterface(IDerivedInterface derivedIterfaceObject) {
False,test/org/mockito/usage/binding/ClassUseDerivedInterface.java,test/org/mockito/usage/binding/ClassUseDerivedInterface.java,6,uper(derivedIterfaceObject);
False,test/org/mockito/usage/binding/IBaseInteface.java,test/org/mockito/usage/binding/IBaseInteface.java,1,ackage org.mockito.usage.binding;
False,test/org/mockito/usage/binding/IBaseInteface.java,test/org/mockito/usage/binding/IBaseInteface.java,4,ublic interface IBaseInteface <E extends BaseMessage>{
False,test/org/mockito/usage/binding/IBaseInteface.java,test/org/mockito/usage/binding/IBaseInteface.java,5,ublic void print(E message);
False,test/org/mockito/usage/binding/IDerivedInterface.java,test/org/mockito/usage/binding/IDerivedInterface.java,1,ackage org.mockito.usage.binding;
False,test/org/mockito/usage/binding/IDerivedInterface.java,test/org/mockito/usage/binding/IDerivedInterface.java,3,ublic interface IDerivedInterface extends IBaseInteface<Message>{
False,test/org/mockito/usage/binding/IDerivedInterface.java,test/org/mockito/usage/binding/IDerivedInterface.java,4,ublic void print(Message message);
False,test/org/mockito/usage/binding/ISuperDerived.java,test/org/mockito/usage/binding/ISuperDerived.java,1,ackage org.mockito.usage.binding;
False,test/org/mockito/usage/binding/ISuperDerived.java,test/org/mockito/usage/binding/ISuperDerived.java,3,ublic interface ISuperDerived extends IBaseInteface<Message> {
False,test/org/mockito/usage/binding/ISuperDerived.java,test/org/mockito/usage/binding/ISuperDerived.java,4,ublic void print(Message Message);
True,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,1,package org.mockito.usage.binding;
True,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,3,import org.junit.*;
True,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,4,import org.mockito.Mockito;
True,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,6,public class IncorectBindingPuzzleFixedTest {
True,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,8,private DerivedInterface mock;
True,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,10,@Before public void setup() {
True,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,11,mock = Mockito.mock(DerivedInterface.class);
True,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,14,private class BaseMessage {}
True,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,15,private class Message extends BaseMessage {}
True,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,17,private interface BaseInteface {
True,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,18,public void print(BaseMessage message);
True,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,21,private interface DerivedInterface extends BaseInteface {
True,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,22,public void print(Message message);
True,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,25,private void print(BaseMessage message) {
True,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,26,mock.print(message);
True,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,29,@Test
True,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,30,public void overriddenInterfaceMethodNotWorking() throws Exception {
True,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,31,Message message = new Message();
True,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,32,print(message);
True,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,33,Mockito.verify(mock).print(message);
True,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,36,@Test
True,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,37,public void overriddenInterfaceMethodWorking() throws Exception {
True,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,38,Message message = new Message();
True,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,39,print(message);
True,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,test/org/mockito/usage/binding/IncorectBindingPuzzleFixedTest.java,40,Mockito.verify(mock).print((BaseMessage)message);
False,test/org/mockito/usage/binding/IncorectBindingTest.java,test/org/mockito/usage/binding/IncorectBindingTest.java,1,ackage org.mockito.usage.binding;
False,test/org/mockito/usage/binding/IncorectBindingTest.java,test/org/mockito/usage/binding/IncorectBindingTest.java,3,mport org.junit.Test;
False,test/org/mockito/usage/binding/IncorectBindingTest.java,test/org/mockito/usage/binding/IncorectBindingTest.java,4,mport org.mockito.Mockito;
False,test/org/mockito/usage/binding/IncorectBindingTest.java,test/org/mockito/usage/binding/IncorectBindingTest.java,7,ublic class IncorectBindingTest {
False,test/org/mockito/usage/binding/IncorectBindingTest.java,test/org/mockito/usage/binding/IncorectBindingTest.java,10,Test
False,test/org/mockito/usage/binding/IncorectBindingTest.java,test/org/mockito/usage/binding/IncorectBindingTest.java,11,ublic void overriddenInterfaceMethod() throws Exception {
False,test/org/mockito/usage/binding/IncorectBindingTest.java,test/org/mockito/usage/binding/IncorectBindingTest.java,12,DerivedInterface mock = Mockito.mock(IDerivedInterface.class);
False,test/org/mockito/usage/binding/IncorectBindingTest.java,test/org/mockito/usage/binding/IncorectBindingTest.java,14,lassUseDerivedInterface superDerived = new ClassUseDerivedInterface(mock);
False,test/org/mockito/usage/binding/IncorectBindingTest.java,test/org/mockito/usage/binding/IncorectBindingTest.java,15,"essage message = new Message(""Shake it baby"");"
False,test/org/mockito/usage/binding/IncorectBindingTest.java,test/org/mockito/usage/binding/IncorectBindingTest.java,18,uperDerived.print(message);
False,test/org/mockito/usage/binding/IncorectBindingTest.java,test/org/mockito/usage/binding/IncorectBindingTest.java,21,ockito.verify(mock).print(message);
False,test/org/mockito/usage/binding/Message.java,test/org/mockito/usage/binding/Message.java,1,ackage org.mockito.usage.binding;
False,test/org/mockito/usage/binding/Message.java,test/org/mockito/usage/binding/Message.java,3,ublic class Message extends BaseMessage{
False,test/org/mockito/usage/binding/Message.java,test/org/mockito/usage/binding/Message.java,5,ublic Message(String content) {
False,test/org/mockito/usage/binding/Message.java,test/org/mockito/usage/binding/Message.java,6,etContent(content);
False,test/org/mockito/usage/binding/OverriddenIntrefaceMethodTest.java,test/org/mockito/usage/binding/OverriddenIntrefaceMethodTest.java,1,ackage org.mockito.usage.binding;
False,test/org/mockito/usage/binding/OverriddenIntrefaceMethodTest.java,test/org/mockito/usage/binding/OverriddenIntrefaceMethodTest.java,3,mport org.junit.Test;
False,test/org/mockito/usage/binding/OverriddenIntrefaceMethodTest.java,test/org/mockito/usage/binding/OverriddenIntrefaceMethodTest.java,4,mport org.mockito.Mockito;
False,test/org/mockito/usage/binding/OverriddenIntrefaceMethodTest.java,test/org/mockito/usage/binding/OverriddenIntrefaceMethodTest.java,7,ublic class OverriddenIntrefaceMethodTest {
False,test/org/mockito/usage/binding/OverriddenIntrefaceMethodTest.java,test/org/mockito/usage/binding/OverriddenIntrefaceMethodTest.java,10,Test
False,test/org/mockito/usage/binding/OverriddenIntrefaceMethodTest.java,test/org/mockito/usage/binding/OverriddenIntrefaceMethodTest.java,11,ublic void virtualMethodTableBinding() throws Exception {
False,test/org/mockito/usage/binding/OverriddenIntrefaceMethodTest.java,test/org/mockito/usage/binding/OverriddenIntrefaceMethodTest.java,12,DerivedInterface mock = Mockito.mock(IDerivedInterface.class);
False,test/org/mockito/usage/binding/OverriddenIntrefaceMethodTest.java,test/org/mockito/usage/binding/OverriddenIntrefaceMethodTest.java,14,lassUseDerivedInterface superDerived = new ClassUseDerivedInterface(mock);
False,test/org/mockito/usage/binding/OverriddenIntrefaceMethodTest.java,test/org/mockito/usage/binding/OverriddenIntrefaceMethodTest.java,15,"essage message = new Message(""Shake it baby"");"
False,test/org/mockito/usage/binding/OverriddenIntrefaceMethodTest.java,test/org/mockito/usage/binding/OverriddenIntrefaceMethodTest.java,18,uperDerived.print(message);
False,test/org/mockito/usage/binding/OverriddenIntrefaceMethodTest.java,test/org/mockito/usage/binding/OverriddenIntrefaceMethodTest.java,20,ockito.verify(mock).print(message);
False,test/org/mockito/usage/binding/SuperClassUseSuperDerived.java,test/org/mockito/usage/binding/SuperClassUseSuperDerived.java,1,ackage org.mockito.usage.binding;
False,test/org/mockito/usage/binding/SuperClassUseSuperDerived.java,test/org/mockito/usage/binding/SuperClassUseSuperDerived.java,3,"ublic class SuperClassUseSuperDerived extends BaseClass<Message, IDerivedInterface> {"
False,test/org/mockito/usage/binding/SuperClassUseSuperDerived.java,test/org/mockito/usage/binding/SuperClassUseSuperDerived.java,5,ublic SuperClassUseSuperDerived(IDerivedInterface derivedIterfaceObject) {
False,test/org/mockito/usage/binding/SuperClassUseSuperDerived.java,test/org/mockito/usage/binding/SuperClassUseSuperDerived.java,6,uper(derivedIterfaceObject);
