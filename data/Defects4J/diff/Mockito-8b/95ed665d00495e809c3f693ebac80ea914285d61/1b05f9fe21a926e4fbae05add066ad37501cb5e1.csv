is_addition,old_file_path,new_file_path,line_num,content
True,src/org/mockito/ArgumentMatcher.java,src/org/mockito/ArgumentMatcher.java,7,import java.util.regex.Pattern;
True,src/org/mockito/ArgumentMatcher.java,src/org/mockito/ArgumentMatcher.java,55,"private static final Pattern CAPS = Pattern.compile(""([A-Z][^A-Z]*)"");"
False,src/org/mockito/ArgumentMatcher.java,src/org/mockito/ArgumentMatcher.java,66, Usually not necessary but you might want to override this method to
True,src/org/mockito/ArgumentMatcher.java,src/org/mockito/ArgumentMatcher.java,70,* You might want to override this method to
False,src/org/mockito/ArgumentMatcher.java,src/org/mockito/ArgumentMatcher.java,74,"escription.appendText(""<custom argument matcher>"");"
True,src/org/mockito/ArgumentMatcher.java,src/org/mockito/ArgumentMatcher.java,78,description.appendText(deCamelCase());
True,src/org/mockito/ArgumentMatcher.java,src/org/mockito/ArgumentMatcher.java,81,private String deCamelCase() {
True,src/org/mockito/ArgumentMatcher.java,src/org/mockito/ArgumentMatcher.java,82,String className = getClass().getSimpleName();
True,src/org/mockito/ArgumentMatcher.java,src/org/mockito/ArgumentMatcher.java,83,if (className.length() == 0) {
True,src/org/mockito/ArgumentMatcher.java,src/org/mockito/ArgumentMatcher.java,84,"return ""<custom argument matcher>"";"
True,src/org/mockito/ArgumentMatcher.java,src/org/mockito/ArgumentMatcher.java,87,java.util.regex.Matcher match = CAPS.matcher(className);
True,src/org/mockito/ArgumentMatcher.java,src/org/mockito/ArgumentMatcher.java,89,StringBuilder deCameled = new StringBuilder();
True,src/org/mockito/ArgumentMatcher.java,src/org/mockito/ArgumentMatcher.java,90,while(match.find()) {
True,src/org/mockito/ArgumentMatcher.java,src/org/mockito/ArgumentMatcher.java,91,if (deCameled.length() == 0) {
True,src/org/mockito/ArgumentMatcher.java,src/org/mockito/ArgumentMatcher.java,92,deCameled.append(match.group());
True,src/org/mockito/ArgumentMatcher.java,src/org/mockito/ArgumentMatcher.java,93,} else {
True,src/org/mockito/ArgumentMatcher.java,src/org/mockito/ArgumentMatcher.java,94,"deCameled.append("" "");"
True,src/org/mockito/ArgumentMatcher.java,src/org/mockito/ArgumentMatcher.java,95,deCameled.append(match.group().toLowerCase());
True,src/org/mockito/ArgumentMatcher.java,src/org/mockito/ArgumentMatcher.java,99,if (deCameled.length() == 0) {
True,src/org/mockito/ArgumentMatcher.java,src/org/mockito/ArgumentMatcher.java,100,return className;
True,src/org/mockito/ArgumentMatcher.java,src/org/mockito/ArgumentMatcher.java,103,return deCameled.toString();
True,test/org/mockito/ArgumentMatcherTest.java,test/org/mockito/ArgumentMatcherTest.java,2,* Copyright (c) 2007 Mockito contributors
True,test/org/mockito/ArgumentMatcherTest.java,test/org/mockito/ArgumentMatcherTest.java,3,* This program is made available under the terms of the MIT License.
True,test/org/mockito/ArgumentMatcherTest.java,test/org/mockito/ArgumentMatcherTest.java,5,package org.mockito;
True,test/org/mockito/ArgumentMatcherTest.java,test/org/mockito/ArgumentMatcherTest.java,7,import static org.junit.Assert.*;
True,test/org/mockito/ArgumentMatcherTest.java,test/org/mockito/ArgumentMatcherTest.java,9,import org.hamcrest.Matcher;
True,test/org/mockito/ArgumentMatcherTest.java,test/org/mockito/ArgumentMatcherTest.java,10,import org.hamcrest.StringDescription;
True,test/org/mockito/ArgumentMatcherTest.java,test/org/mockito/ArgumentMatcherTest.java,11,import org.junit.Test;
True,test/org/mockito/ArgumentMatcherTest.java,test/org/mockito/ArgumentMatcherTest.java,13,"@SuppressWarnings(""unchecked"")"
True,test/org/mockito/ArgumentMatcherTest.java,test/org/mockito/ArgumentMatcherTest.java,14,public class ArgumentMatcherTest {
True,test/org/mockito/ArgumentMatcherTest.java,test/org/mockito/ArgumentMatcherTest.java,16,private class StringWithDirtyWords extends ArgumentMatcher<Object> {
True,test/org/mockito/ArgumentMatcherTest.java,test/org/mockito/ArgumentMatcherTest.java,17,public boolean matches(Object argument) {
True,test/org/mockito/ArgumentMatcherTest.java,test/org/mockito/ArgumentMatcherTest.java,18,return false;
True,test/org/mockito/ArgumentMatcherTest.java,test/org/mockito/ArgumentMatcherTest.java,22,private class WEIRDO1 extends ArgumentMatcher<Object> {
True,test/org/mockito/ArgumentMatcherTest.java,test/org/mockito/ArgumentMatcherTest.java,23,public boolean matches(Object argument) {
True,test/org/mockito/ArgumentMatcherTest.java,test/org/mockito/ArgumentMatcherTest.java,24,return false;
True,test/org/mockito/ArgumentMatcherTest.java,test/org/mockito/ArgumentMatcherTest.java,28,private class _ extends ArgumentMatcher<Object> {
True,test/org/mockito/ArgumentMatcherTest.java,test/org/mockito/ArgumentMatcherTest.java,29,public boolean matches(Object argument) {
True,test/org/mockito/ArgumentMatcherTest.java,test/org/mockito/ArgumentMatcherTest.java,30,return false;
True,test/org/mockito/ArgumentMatcherTest.java,test/org/mockito/ArgumentMatcherTest.java,34,@Test
True,test/org/mockito/ArgumentMatcherTest.java,test/org/mockito/ArgumentMatcherTest.java,35,public void shouldDeCamelCaseTheName() throws Exception {
True,test/org/mockito/ArgumentMatcherTest.java,test/org/mockito/ArgumentMatcherTest.java,36,Matcher matcher = new StringWithDirtyWords();
True,test/org/mockito/ArgumentMatcherTest.java,test/org/mockito/ArgumentMatcherTest.java,37,StringDescription d = new StringDescription();
True,test/org/mockito/ArgumentMatcherTest.java,test/org/mockito/ArgumentMatcherTest.java,38,matcher.describeTo(d);
True,test/org/mockito/ArgumentMatcherTest.java,test/org/mockito/ArgumentMatcherTest.java,39,"assertEquals(""String with dirty words"", d.toString());"
True,test/org/mockito/ArgumentMatcherTest.java,test/org/mockito/ArgumentMatcherTest.java,42,@Test
True,test/org/mockito/ArgumentMatcherTest.java,test/org/mockito/ArgumentMatcherTest.java,43,public void shouldDeCamelCaseWeirdName() throws Exception {
True,test/org/mockito/ArgumentMatcherTest.java,test/org/mockito/ArgumentMatcherTest.java,44,Matcher matcher = new WEIRDO1();
True,test/org/mockito/ArgumentMatcherTest.java,test/org/mockito/ArgumentMatcherTest.java,45,StringDescription d = new StringDescription();
True,test/org/mockito/ArgumentMatcherTest.java,test/org/mockito/ArgumentMatcherTest.java,46,matcher.describeTo(d);
True,test/org/mockito/ArgumentMatcherTest.java,test/org/mockito/ArgumentMatcherTest.java,47,"assertEquals(""W e i r d o1"", d.toString());"
True,test/org/mockito/ArgumentMatcherTest.java,test/org/mockito/ArgumentMatcherTest.java,50,@Test
True,test/org/mockito/ArgumentMatcherTest.java,test/org/mockito/ArgumentMatcherTest.java,51,public void shouldNotDeCamelCaseVeryWeirdName() throws Exception {
True,test/org/mockito/ArgumentMatcherTest.java,test/org/mockito/ArgumentMatcherTest.java,52,Matcher matcher = new _();
True,test/org/mockito/ArgumentMatcherTest.java,test/org/mockito/ArgumentMatcherTest.java,53,StringDescription d = new StringDescription();
True,test/org/mockito/ArgumentMatcherTest.java,test/org/mockito/ArgumentMatcherTest.java,54,matcher.describeTo(d);
True,test/org/mockito/ArgumentMatcherTest.java,test/org/mockito/ArgumentMatcherTest.java,55,"assertEquals(""_"", d.toString());"
True,test/org/mockito/ArgumentMatcherTest.java,test/org/mockito/ArgumentMatcherTest.java,58,@Test
True,test/org/mockito/ArgumentMatcherTest.java,test/org/mockito/ArgumentMatcherTest.java,59,public void shouldNotDeCamelCaseAnnonymousClass() throws Exception {
True,test/org/mockito/ArgumentMatcherTest.java,test/org/mockito/ArgumentMatcherTest.java,60,Matcher matcher = new ArgumentMatcher() {
True,test/org/mockito/ArgumentMatcherTest.java,test/org/mockito/ArgumentMatcherTest.java,61,@Override
True,test/org/mockito/ArgumentMatcherTest.java,test/org/mockito/ArgumentMatcherTest.java,62,public boolean matches(Object argument) {
True,test/org/mockito/ArgumentMatcherTest.java,test/org/mockito/ArgumentMatcherTest.java,63,return false;
True,test/org/mockito/ArgumentMatcherTest.java,test/org/mockito/ArgumentMatcherTest.java,66,StringDescription d = new StringDescription();
True,test/org/mockito/ArgumentMatcherTest.java,test/org/mockito/ArgumentMatcherTest.java,67,matcher.describeTo(d);
True,test/org/mockito/ArgumentMatcherTest.java,test/org/mockito/ArgumentMatcherTest.java,68,"assertEquals(""<custom argument matcher>"", d.toString());"
False,test/org/mockitousage/matchers/CustomMatchersTest.java,test/org/mockitousage/matchers/CustomMatchersTest.java,12,mport org.hamcrest.Description;
False,test/org/mockitousage/matchers/CustomMatchersTest.java,test/org/mockitousage/matchers/CustomMatchersTest.java,127,ublic void shouldCustomMatcherPrintDecentMessage() {
True,test/org/mockitousage/matchers/CustomMatchersTest.java,test/org/mockitousage/matchers/CustomMatchersTest.java,126,public void shouldCustomMatcherPrintMessageBasedOnName() {
False,test/org/mockitousage/matchers/CustomMatchersTest.java,test/org/mockitousage/matchers/CustomMatchersTest.java,134,/            e.printStackTrace();
False,test/org/mockitousage/matchers/CustomMatchersTest.java,test/org/mockitousage/matchers/CustomMatchersTest.java,135,"ssertThat(e, messageContains(""1st: String that contains 'xxx'""));"
True,test/org/mockitousage/matchers/CustomMatchersTest.java,test/org/mockitousage/matchers/CustomMatchersTest.java,133,//TODO add documentation that names are cool
True,test/org/mockitousage/matchers/CustomMatchersTest.java,test/org/mockitousage/matchers/CustomMatchersTest.java,134,"assertThat(e, messageContains(""1st: String that contains xxx""));"
False,test/org/mockitousage/matchers/CustomMatchersTest.java,test/org/mockitousage/matchers/CustomMatchersTest.java,141,eturn argThat(new IsStringThatContainsXxx());
True,test/org/mockitousage/matchers/CustomMatchersTest.java,test/org/mockitousage/matchers/CustomMatchersTest.java,140,return argThat(new StringThatContainsXxx());
False,test/org/mockitousage/matchers/CustomMatchersTest.java,test/org/mockitousage/matchers/CustomMatchersTest.java,144,rivate final class IsStringThatContainsXxx extends ArgumentMatcher<String> {
True,test/org/mockitousage/matchers/CustomMatchersTest.java,test/org/mockitousage/matchers/CustomMatchersTest.java,143,private final class StringThatContainsXxx extends ArgumentMatcher<String> {
False,test/org/mockitousage/matchers/CustomMatchersTest.java,test/org/mockitousage/matchers/CustomMatchersTest.java,150,Override
False,test/org/mockitousage/matchers/CustomMatchersTest.java,test/org/mockitousage/matchers/CustomMatchersTest.java,151,ublic void describeTo(Description description) {
False,test/org/mockitousage/matchers/CustomMatchersTest.java,test/org/mockitousage/matchers/CustomMatchersTest.java,152,"escription.appendText(""String that contains 'xxx'"");"
