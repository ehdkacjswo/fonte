is_addition,old_file_path,new_file_path,line_num,content
False,src/org/mockito/ArgumentMatcher.java,src/org/mockito/ArgumentMatcher.java,7,mport java.util.regex.Pattern;
False,src/org/mockito/ArgumentMatcher.java,src/org/mockito/ArgumentMatcher.java,55,"rivate static final Pattern CAPS = Pattern.compile(""([A-Z][^A-Z]*)"");"
False,src/org/mockito/ArgumentMatcher.java,src/org/mockito/ArgumentMatcher.java,78,escription.appendText(deCamelCase());
False,src/org/mockito/ArgumentMatcher.java,src/org/mockito/ArgumentMatcher.java,81,rivate String deCamelCase() {
False,src/org/mockito/ArgumentMatcher.java,src/org/mockito/ArgumentMatcher.java,83,f (className.length() == 0) {
False,src/org/mockito/ArgumentMatcher.java,src/org/mockito/ArgumentMatcher.java,84,"eturn ""<custom argument matcher>"";"
False,src/org/mockito/ArgumentMatcher.java,src/org/mockito/ArgumentMatcher.java,87,ava.util.regex.Matcher match = CAPS.matcher(className);
False,src/org/mockito/ArgumentMatcher.java,src/org/mockito/ArgumentMatcher.java,89,tringBuilder deCameled = new StringBuilder();
False,src/org/mockito/ArgumentMatcher.java,src/org/mockito/ArgumentMatcher.java,90,hile(match.find()) {
False,src/org/mockito/ArgumentMatcher.java,src/org/mockito/ArgumentMatcher.java,91,f (deCameled.length() == 0) {
False,src/org/mockito/ArgumentMatcher.java,src/org/mockito/ArgumentMatcher.java,92,eCameled.append(match.group());
False,src/org/mockito/ArgumentMatcher.java,src/org/mockito/ArgumentMatcher.java,93, else {
False,src/org/mockito/ArgumentMatcher.java,src/org/mockito/ArgumentMatcher.java,94,"eCameled.append("" "");"
False,src/org/mockito/ArgumentMatcher.java,src/org/mockito/ArgumentMatcher.java,95,eCameled.append(match.group().toLowerCase());
False,src/org/mockito/ArgumentMatcher.java,src/org/mockito/ArgumentMatcher.java,99,f (deCameled.length() == 0) {
False,src/org/mockito/ArgumentMatcher.java,src/org/mockito/ArgumentMatcher.java,100,eturn className;
False,src/org/mockito/ArgumentMatcher.java,src/org/mockito/ArgumentMatcher.java,103,eturn deCameled.toString();
True,src/org/mockito/ArgumentMatcher.java,src/org/mockito/ArgumentMatcher.java,76,description.appendText(Decamelizer.decamelizeMatcher(className));
True,src/org/mockito/Decamelizer.java,src/org/mockito/Decamelizer.java,2,* Copyright (c) 2007 Mockito contributors
True,src/org/mockito/Decamelizer.java,src/org/mockito/Decamelizer.java,3,* This program is made available under the terms of the MIT License.
True,src/org/mockito/Decamelizer.java,src/org/mockito/Decamelizer.java,5,package org.mockito;
True,src/org/mockito/Decamelizer.java,src/org/mockito/Decamelizer.java,7,import java.util.regex.Matcher;
True,src/org/mockito/Decamelizer.java,src/org/mockito/Decamelizer.java,8,import java.util.regex.Pattern;
True,src/org/mockito/Decamelizer.java,src/org/mockito/Decamelizer.java,10,public class Decamelizer {
True,src/org/mockito/Decamelizer.java,src/org/mockito/Decamelizer.java,12,"private static final Pattern CAPS = Pattern.compile(""([A-Z\\d][^A-Z\\d]*)"");"
True,src/org/mockito/Decamelizer.java,src/org/mockito/Decamelizer.java,14,public static String decamelizeMatcher(String className) {
True,src/org/mockito/Decamelizer.java,src/org/mockito/Decamelizer.java,15,if (className.length() == 0) {
True,src/org/mockito/Decamelizer.java,src/org/mockito/Decamelizer.java,16,"return ""<custom argument matcher>"";"
True,src/org/mockito/Decamelizer.java,src/org/mockito/Decamelizer.java,19,String decamelized = decamelizeClassName(className);
True,src/org/mockito/Decamelizer.java,src/org/mockito/Decamelizer.java,21,if (decamelized.length() == 0) {
True,src/org/mockito/Decamelizer.java,src/org/mockito/Decamelizer.java,22,return className;
True,src/org/mockito/Decamelizer.java,src/org/mockito/Decamelizer.java,25,return decamelized.toString();
True,src/org/mockito/Decamelizer.java,src/org/mockito/Decamelizer.java,28,private static String decamelizeClassName(String className) {
True,src/org/mockito/Decamelizer.java,src/org/mockito/Decamelizer.java,29,Matcher match = CAPS.matcher(className);
True,src/org/mockito/Decamelizer.java,src/org/mockito/Decamelizer.java,30,StringBuilder deCameled = new StringBuilder();
True,src/org/mockito/Decamelizer.java,src/org/mockito/Decamelizer.java,31,while(match.find()) {
True,src/org/mockito/Decamelizer.java,src/org/mockito/Decamelizer.java,32,if (deCameled.length() == 0) {
True,src/org/mockito/Decamelizer.java,src/org/mockito/Decamelizer.java,33,deCameled.append(match.group());
True,src/org/mockito/Decamelizer.java,src/org/mockito/Decamelizer.java,34,} else {
True,src/org/mockito/Decamelizer.java,src/org/mockito/Decamelizer.java,35,"deCameled.append("" "");"
True,src/org/mockito/Decamelizer.java,src/org/mockito/Decamelizer.java,36,deCameled.append(match.group().toLowerCase());
True,src/org/mockito/Decamelizer.java,src/org/mockito/Decamelizer.java,39,return deCameled.toString();
False,test/org/mockito/ArgumentMatcherTest.java,test/org/mockito/ArgumentMatcherTest.java,2, Copyright (c) 2007 Mockito contributors
False,test/org/mockito/ArgumentMatcherTest.java,test/org/mockito/ArgumentMatcherTest.java,3, This program is made available under the terms of the MIT License.
False,test/org/mockito/ArgumentMatcherTest.java,test/org/mockito/ArgumentMatcherTest.java,5,ackage org.mockito;
False,test/org/mockito/ArgumentMatcherTest.java,test/org/mockito/ArgumentMatcherTest.java,7,mport static org.junit.Assert.*;
False,test/org/mockito/ArgumentMatcherTest.java,test/org/mockito/ArgumentMatcherTest.java,9,mport org.hamcrest.Matcher;
False,test/org/mockito/ArgumentMatcherTest.java,test/org/mockito/ArgumentMatcherTest.java,10,mport org.hamcrest.StringDescription;
False,test/org/mockito/ArgumentMatcherTest.java,test/org/mockito/ArgumentMatcherTest.java,11,mport org.junit.Test;
False,test/org/mockito/ArgumentMatcherTest.java,test/org/mockito/ArgumentMatcherTest.java,13,"SuppressWarnings(""unchecked"")"
False,test/org/mockito/ArgumentMatcherTest.java,test/org/mockito/ArgumentMatcherTest.java,14,ublic class ArgumentMatcherTest extends TestBase {
False,test/org/mockito/ArgumentMatcherTest.java,test/org/mockito/ArgumentMatcherTest.java,16,rivate class StringWithDirtyWords extends ArgumentMatcher<Object> {
False,test/org/mockito/ArgumentMatcherTest.java,test/org/mockito/ArgumentMatcherTest.java,17,ublic boolean matches(Object argument) {
False,test/org/mockito/ArgumentMatcherTest.java,test/org/mockito/ArgumentMatcherTest.java,18,eturn false;
False,test/org/mockito/ArgumentMatcherTest.java,test/org/mockito/ArgumentMatcherTest.java,22,rivate class WEIRDO1 extends ArgumentMatcher<Object> {
False,test/org/mockito/ArgumentMatcherTest.java,test/org/mockito/ArgumentMatcherTest.java,23,ublic boolean matches(Object argument) {
False,test/org/mockito/ArgumentMatcherTest.java,test/org/mockito/ArgumentMatcherTest.java,24,eturn false;
False,test/org/mockito/ArgumentMatcherTest.java,test/org/mockito/ArgumentMatcherTest.java,28,rivate class _ extends ArgumentMatcher<Object> {
False,test/org/mockito/ArgumentMatcherTest.java,test/org/mockito/ArgumentMatcherTest.java,29,ublic boolean matches(Object argument) {
False,test/org/mockito/ArgumentMatcherTest.java,test/org/mockito/ArgumentMatcherTest.java,30,eturn false;
False,test/org/mockito/ArgumentMatcherTest.java,test/org/mockito/ArgumentMatcherTest.java,34,Test
False,test/org/mockito/ArgumentMatcherTest.java,test/org/mockito/ArgumentMatcherTest.java,35,ublic void shouldDeCamelCaseTheName() throws Exception {
False,test/org/mockito/ArgumentMatcherTest.java,test/org/mockito/ArgumentMatcherTest.java,36,atcher matcher = new StringWithDirtyWords();
False,test/org/mockito/ArgumentMatcherTest.java,test/org/mockito/ArgumentMatcherTest.java,37,tringDescription d = new StringDescription();
False,test/org/mockito/ArgumentMatcherTest.java,test/org/mockito/ArgumentMatcherTest.java,38,atcher.describeTo(d);
False,test/org/mockito/ArgumentMatcherTest.java,test/org/mockito/ArgumentMatcherTest.java,39,"ssertEquals(""String with dirty words"", d.toString());"
False,test/org/mockito/ArgumentMatcherTest.java,test/org/mockito/ArgumentMatcherTest.java,42,Test
False,test/org/mockito/ArgumentMatcherTest.java,test/org/mockito/ArgumentMatcherTest.java,43,ublic void shouldDeCamelCaseWeirdName() throws Exception {
False,test/org/mockito/ArgumentMatcherTest.java,test/org/mockito/ArgumentMatcherTest.java,44,atcher matcher = new WEIRDO1();
False,test/org/mockito/ArgumentMatcherTest.java,test/org/mockito/ArgumentMatcherTest.java,45,tringDescription d = new StringDescription();
False,test/org/mockito/ArgumentMatcherTest.java,test/org/mockito/ArgumentMatcherTest.java,46,atcher.describeTo(d);
False,test/org/mockito/ArgumentMatcherTest.java,test/org/mockito/ArgumentMatcherTest.java,47,"ssertEquals(""W e i r d o1"", d.toString());"
False,test/org/mockito/ArgumentMatcherTest.java,test/org/mockito/ArgumentMatcherTest.java,50,Test
False,test/org/mockito/ArgumentMatcherTest.java,test/org/mockito/ArgumentMatcherTest.java,51,ublic void shouldNotDeCamelCaseVeryWeirdName() throws Exception {
False,test/org/mockito/ArgumentMatcherTest.java,test/org/mockito/ArgumentMatcherTest.java,52,atcher matcher = new _();
False,test/org/mockito/ArgumentMatcherTest.java,test/org/mockito/ArgumentMatcherTest.java,53,tringDescription d = new StringDescription();
False,test/org/mockito/ArgumentMatcherTest.java,test/org/mockito/ArgumentMatcherTest.java,54,atcher.describeTo(d);
False,test/org/mockito/ArgumentMatcherTest.java,test/org/mockito/ArgumentMatcherTest.java,55,"ssertEquals(""_"", d.toString());"
False,test/org/mockito/ArgumentMatcherTest.java,test/org/mockito/ArgumentMatcherTest.java,58,Test
False,test/org/mockito/ArgumentMatcherTest.java,test/org/mockito/ArgumentMatcherTest.java,59,ublic void shouldNotDeCamelCaseAnnonymousClass() throws Exception {
False,test/org/mockito/ArgumentMatcherTest.java,test/org/mockito/ArgumentMatcherTest.java,60,atcher matcher = new ArgumentMatcher() {
False,test/org/mockito/ArgumentMatcherTest.java,test/org/mockito/ArgumentMatcherTest.java,61,Override
False,test/org/mockito/ArgumentMatcherTest.java,test/org/mockito/ArgumentMatcherTest.java,62,ublic boolean matches(Object argument) {
False,test/org/mockito/ArgumentMatcherTest.java,test/org/mockito/ArgumentMatcherTest.java,63,eturn false;
False,test/org/mockito/ArgumentMatcherTest.java,test/org/mockito/ArgumentMatcherTest.java,66,tringDescription d = new StringDescription();
False,test/org/mockito/ArgumentMatcherTest.java,test/org/mockito/ArgumentMatcherTest.java,67,atcher.describeTo(d);
False,test/org/mockito/ArgumentMatcherTest.java,test/org/mockito/ArgumentMatcherTest.java,68,"ssertEquals(""<custom argument matcher>"", d.toString());"
True,test/org/mockito/DecamelizerTest.java,test/org/mockito/DecamelizerTest.java,2,* Copyright (c) 2007 Mockito contributors
True,test/org/mockito/DecamelizerTest.java,test/org/mockito/DecamelizerTest.java,3,* This program is made available under the terms of the MIT License.
True,test/org/mockito/DecamelizerTest.java,test/org/mockito/DecamelizerTest.java,5,package org.mockito;
True,test/org/mockito/DecamelizerTest.java,test/org/mockito/DecamelizerTest.java,7,import static org.junit.Assert.*;
True,test/org/mockito/DecamelizerTest.java,test/org/mockito/DecamelizerTest.java,8,import static org.mockito.Decamelizer.*;
True,test/org/mockito/DecamelizerTest.java,test/org/mockito/DecamelizerTest.java,10,import org.junit.Test;
True,test/org/mockito/DecamelizerTest.java,test/org/mockito/DecamelizerTest.java,12,"@SuppressWarnings(""unchecked"")"
True,test/org/mockito/DecamelizerTest.java,test/org/mockito/DecamelizerTest.java,13,public class DecamelizerTest extends TestBase {
True,test/org/mockito/DecamelizerTest.java,test/org/mockito/DecamelizerTest.java,15,@Test
True,test/org/mockito/DecamelizerTest.java,test/org/mockito/DecamelizerTest.java,16,public void shouldDecamelize() throws Exception {
True,test/org/mockito/DecamelizerTest.java,test/org/mockito/DecamelizerTest.java,17,"assertEquals(""Sentence with strong language"", decamelizeMatcher(""SentenceWithStrongLanguage""));"
True,test/org/mockito/DecamelizerTest.java,test/org/mockito/DecamelizerTest.java,18,"assertEquals(""W e i r d o 1"", decamelizeMatcher(""WEIRDO1""));"
True,test/org/mockito/DecamelizerTest.java,test/org/mockito/DecamelizerTest.java,19,"assertEquals(""_"", decamelizeMatcher(""_""));"
True,test/org/mockito/DecamelizerTest.java,test/org/mockito/DecamelizerTest.java,20,"assertEquals(""Has exactly 3 elements"", decamelizeMatcher(""HasExactly3Elements""));"
True,test/org/mockito/DecamelizerTest.java,test/org/mockito/DecamelizerTest.java,21,"assertEquals(""<custom argument matcher>"", decamelizeMatcher(""""));"
