is_addition,old_file_path,new_file_path,line_num,content
True,src/org/mockito/internal/MockHandler.java,src/org/mockito/internal/MockHandler.java,26,import org.mockito.internal.util.MockName;
False,src/org/mockito/internal/MockHandler.java,src/org/mockito/internal/MockHandler.java,44,rivate final String mockName;
True,src/org/mockito/internal/MockHandler.java,src/org/mockito/internal/MockHandler.java,45,private final MockName mockName;
False,src/org/mockito/internal/MockHandler.java,src/org/mockito/internal/MockHandler.java,49,"ublic MockHandler(String mockName, MockingProgress mockingProgress, MatchersBinder matchersBinder, ReturnValues returnValues) {"
True,src/org/mockito/internal/MockHandler.java,src/org/mockito/internal/MockHandler.java,50,"public MockHandler(MockName mockName, MockingProgress mockingProgress, MatchersBinder matchersBinder, ReturnValues returnValues) {"
False,src/org/mockito/internal/MockHandler.java,src/org/mockito/internal/MockHandler.java,117,ublic String getMockName() {
True,src/org/mockito/internal/MockHandler.java,src/org/mockito/internal/MockHandler.java,118,public MockName getMockName() {
True,src/org/mockito/internal/MockHandler.java,src/org/mockito/internal/MockHandler.java,224,public boolean hasName() {
True,src/org/mockito/internal/MockHandler.java,src/org/mockito/internal/MockHandler.java,225,return false;
True,src/org/mockito/internal/returnvalues/EmptyReturnValues.java,src/org/mockito/internal/returnvalues/EmptyReturnValues.java,25,import org.mockito.internal.util.MockName;
True,src/org/mockito/internal/returnvalues/EmptyReturnValues.java,src/org/mockito/internal/returnvalues/EmptyReturnValues.java,26,import org.mockito.internal.util.MockUtil;
False,src/org/mockito/internal/returnvalues/EmptyReturnValues.java,src/org/mockito/internal/returnvalues/EmptyReturnValues.java,56,"tring mockDescription = ""Mock for "" + ClassNameFinder.classNameForMock(mock) + "", hashCode: "" + mock.hashCode();"
False,src/org/mockito/internal/returnvalues/EmptyReturnValues.java,src/org/mockito/internal/returnvalues/EmptyReturnValues.java,57,eturn mockDescription;
True,src/org/mockito/internal/returnvalues/EmptyReturnValues.java,src/org/mockito/internal/returnvalues/EmptyReturnValues.java,58,MockName name = MockUtil.getMockName(mock);
True,src/org/mockito/internal/returnvalues/EmptyReturnValues.java,src/org/mockito/internal/returnvalues/EmptyReturnValues.java,59,if (name.isSurrogate()) {
True,src/org/mockito/internal/returnvalues/EmptyReturnValues.java,src/org/mockito/internal/returnvalues/EmptyReturnValues.java,60,"return ""Mock for "" + ClassNameFinder.classNameForMock(mock) + "", hashCode: "" + mock.hashCode();"
True,src/org/mockito/internal/returnvalues/EmptyReturnValues.java,src/org/mockito/internal/returnvalues/EmptyReturnValues.java,61,} else {
True,src/org/mockito/internal/returnvalues/EmptyReturnValues.java,src/org/mockito/internal/returnvalues/EmptyReturnValues.java,62,return name.toString();
True,src/org/mockito/internal/util/MockName.java,src/org/mockito/internal/util/MockName.java,1,package org.mockito.internal.util;
True,src/org/mockito/internal/util/MockName.java,src/org/mockito/internal/util/MockName.java,3,public class MockName {
True,src/org/mockito/internal/util/MockName.java,src/org/mockito/internal/util/MockName.java,5,private final String mockName;
True,src/org/mockito/internal/util/MockName.java,src/org/mockito/internal/util/MockName.java,6,private boolean surrogate;
True,src/org/mockito/internal/util/MockName.java,src/org/mockito/internal/util/MockName.java,8,"@SuppressWarnings(""unchecked"")"
True,src/org/mockito/internal/util/MockName.java,src/org/mockito/internal/util/MockName.java,9,"public MockName(String mockName, Class classToMock) {"
True,src/org/mockito/internal/util/MockName.java,src/org/mockito/internal/util/MockName.java,10,if (mockName == null) {
True,src/org/mockito/internal/util/MockName.java,src/org/mockito/internal/util/MockName.java,11,this.mockName = toInstanceName(classToMock);
True,src/org/mockito/internal/util/MockName.java,src/org/mockito/internal/util/MockName.java,12,this.surrogate = true;
True,src/org/mockito/internal/util/MockName.java,src/org/mockito/internal/util/MockName.java,13,} else {
True,src/org/mockito/internal/util/MockName.java,src/org/mockito/internal/util/MockName.java,14,this.mockName = mockName;
True,src/org/mockito/internal/util/MockName.java,src/org/mockito/internal/util/MockName.java,18,private static String toInstanceName(Class<?> clazz) {
True,src/org/mockito/internal/util/MockName.java,src/org/mockito/internal/util/MockName.java,19,String className = clazz.getSimpleName();
True,src/org/mockito/internal/util/MockName.java,src/org/mockito/internal/util/MockName.java,20,//lower case first letter
True,src/org/mockito/internal/util/MockName.java,src/org/mockito/internal/util/MockName.java,21,"return className.substring(0, 1).toLowerCase() + className.substring(1);"
True,src/org/mockito/internal/util/MockName.java,src/org/mockito/internal/util/MockName.java,24,public boolean isSurrogate() {
True,src/org/mockito/internal/util/MockName.java,src/org/mockito/internal/util/MockName.java,25,return surrogate;
True,src/org/mockito/internal/util/MockName.java,src/org/mockito/internal/util/MockName.java,28,@Override
True,src/org/mockito/internal/util/MockName.java,src/org/mockito/internal/util/MockName.java,29,public String toString() {
True,src/org/mockito/internal/util/MockName.java,src/org/mockito/internal/util/MockName.java,30,return mockName;
False,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,24,f (mockName == null) {
False,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,25,ockName = toInstanceName(classToMock);
False,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,27,"ockHandler<T> mockHandler = new MockHandler<T>(mockName, progress, new MatchersBinder(), returnValues);"
True,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,24,"MockHandler<T> mockHandler = new MockHandler<T>(new MockName(mockName, classToMock), progress, new MatchersBinder(), returnValues);"
False,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,41,rivate static String toInstanceName(Class<?> clazz) {
False,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,42,tring className = clazz.getSimpleName();
False,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,43,/lower case first letter
False,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,44,"eturn className.substring(0, 1).toLowerCase() + className.substring(1);"
False,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,77,ublic static String getMockName(Object mock) {
True,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,68,public static MockName getMockName(Object mock) {
False,test/org/mockito/MockitoTest.java,test/org/mockito/MockitoTest.java,57,/TODO after 1.7 add initMocks that allows to send own annotation/own implementation of creation logic
True,test/org/mockitousage/stubbing/BasicStubbingTest.java,test/org/mockitousage/stubbing/BasicStubbingTest.java,77,@Test
True,test/org/mockitousage/stubbing/BasicStubbingTest.java,test/org/mockitousage/stubbing/BasicStubbingTest.java,78,public void shouldToStringMockName() {
True,test/org/mockitousage/stubbing/BasicStubbingTest.java,test/org/mockitousage/stubbing/BasicStubbingTest.java,79,"IMethods mock = mock(IMethods.class, ""mockie"");"
True,test/org/mockitousage/stubbing/BasicStubbingTest.java,test/org/mockitousage/stubbing/BasicStubbingTest.java,80,IMethods mockTwo = mock(IMethods.class);
True,test/org/mockitousage/stubbing/BasicStubbingTest.java,test/org/mockitousage/stubbing/BasicStubbingTest.java,82,"assertContains(""Mock for IMethods"", """" + mockTwo);"
True,test/org/mockitousage/stubbing/BasicStubbingTest.java,test/org/mockitousage/stubbing/BasicStubbingTest.java,83,"assertEquals(""mockie"", """" + mock);"
True,test/org/mockitoutil/TestBase.java,test/org/mockitoutil/TestBase.java,107,"public static void assertContains(String sub, String string) {"
True,test/org/mockitoutil/TestBase.java,test/org/mockitoutil/TestBase.java,108,"assertTrue(""\n"" +"
True,test/org/mockitoutil/TestBase.java,test/org/mockitoutil/TestBase.java,109,"""This substing:"" +"
True,test/org/mockitoutil/TestBase.java,test/org/mockitoutil/TestBase.java,110,sub +
True,test/org/mockitoutil/TestBase.java,test/org/mockitoutil/TestBase.java,111,"""\n"" +"
True,test/org/mockitoutil/TestBase.java,test/org/mockitoutil/TestBase.java,112,"""should be inside of:"" +"
True,test/org/mockitoutil/TestBase.java,test/org/mockitoutil/TestBase.java,113,string +
True,test/org/mockitoutil/TestBase.java,test/org/mockitoutil/TestBase.java,114,"""\n"""
True,test/org/mockitoutil/TestBase.java,test/org/mockitoutil/TestBase.java,115,", string.contains(sub));"
