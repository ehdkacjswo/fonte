is_addition,old_file_path,new_file_path,line_num,content
True,src/org/mockito/exceptions/Exceptions.java,src/org/mockito/exceptions/Exceptions.java,95,"public static void tooManyActualInvocations(int wantedCount, int actualCount, String wanted, HasStackTrace firstUndesired) {"
True,src/org/mockito/exceptions/Exceptions.java,src/org/mockito/exceptions/Exceptions.java,96,"FirstUndesiredInvocation cause = new FirstUndesiredInvocation(join(""First undesired invocation:""));"
True,src/org/mockito/exceptions/Exceptions.java,src/org/mockito/exceptions/Exceptions.java,97,cause.setStackTrace(firstUndesired.getStackTrace());
True,src/org/mockito/exceptions/Exceptions.java,src/org/mockito/exceptions/Exceptions.java,99,throw new TooManyActualInvocationsError(join(
True,src/org/mockito/exceptions/Exceptions.java,src/org/mockito/exceptions/Exceptions.java,100,"wanted,"
True,src/org/mockito/exceptions/Exceptions.java,src/org/mockito/exceptions/Exceptions.java,101,"""Wanted "" + pluralize(wantedCount) + "" but was "" + actualCount"
True,src/org/mockito/exceptions/Exceptions.java,src/org/mockito/exceptions/Exceptions.java,102,"), cause);"
False,src/org/mockito/exceptions/Exceptions.java,src/org/mockito/exceptions/Exceptions.java,109,"ndesiredInvocation cause = buildCause(actualInvocationStackTrace, ""Undesired invocation:"", undesired);"
True,src/org/mockito/exceptions/Exceptions.java,src/org/mockito/exceptions/Exceptions.java,119,"UndesiredInvocation cause = buildUndesiredInvocationCause(actualInvocationStackTrace, ""Undesired invocation:"", undesired);"
False,src/org/mockito/exceptions/Exceptions.java,src/org/mockito/exceptions/Exceptions.java,114,"ndesiredInvocation cause = buildCause(actualInvocationStackTrace, ""Undesired invocation:"", undesired);"
True,src/org/mockito/exceptions/Exceptions.java,src/org/mockito/exceptions/Exceptions.java,124,"UndesiredInvocation cause = buildUndesiredInvocationCause(actualInvocationStackTrace, ""Undesired invocation:"", undesired);"
False,src/org/mockito/exceptions/Exceptions.java,src/org/mockito/exceptions/Exceptions.java,118,"rivate static UndesiredInvocation buildCause(HasStackTrace actualInvocationStackTrace, String ... messageLines) {"
True,src/org/mockito/exceptions/Exceptions.java,src/org/mockito/exceptions/Exceptions.java,128,"private static UndesiredInvocation buildUndesiredInvocationCause(HasStackTrace actualInvocationStackTrace, String ... messageLines) {"
True,src/org/mockito/exceptions/TooManyActualInvocationsError.java,src/org/mockito/exceptions/TooManyActualInvocationsError.java,1,package org.mockito.exceptions;
True,src/org/mockito/exceptions/TooManyActualInvocationsError.java,src/org/mockito/exceptions/TooManyActualInvocationsError.java,3,public class TooManyActualInvocationsError extends MockitoAssertionError {
True,src/org/mockito/exceptions/TooManyActualInvocationsError.java,src/org/mockito/exceptions/TooManyActualInvocationsError.java,5,private static final long serialVersionUID = 1L;
True,src/org/mockito/exceptions/TooManyActualInvocationsError.java,src/org/mockito/exceptions/TooManyActualInvocationsError.java,7,"public TooManyActualInvocationsError(String message, Throwable cause) {"
True,src/org/mockito/exceptions/TooManyActualInvocationsError.java,src/org/mockito/exceptions/TooManyActualInvocationsError.java,8,"super(message, cause);"
True,src/org/mockito/exceptions/cause/FirstUndesiredInvocation.java,src/org/mockito/exceptions/cause/FirstUndesiredInvocation.java,1,package org.mockito.exceptions.cause;
True,src/org/mockito/exceptions/cause/FirstUndesiredInvocation.java,src/org/mockito/exceptions/cause/FirstUndesiredInvocation.java,3,import org.mockito.exceptions.MockitoException;
True,src/org/mockito/exceptions/cause/FirstUndesiredInvocation.java,src/org/mockito/exceptions/cause/FirstUndesiredInvocation.java,5,public class FirstUndesiredInvocation extends MockitoException {
True,src/org/mockito/exceptions/cause/FirstUndesiredInvocation.java,src/org/mockito/exceptions/cause/FirstUndesiredInvocation.java,7,private static final long serialVersionUID = 1L;
True,src/org/mockito/exceptions/cause/FirstUndesiredInvocation.java,src/org/mockito/exceptions/cause/FirstUndesiredInvocation.java,9,public FirstUndesiredInvocation(String message) {
True,src/org/mockito/exceptions/cause/FirstUndesiredInvocation.java,src/org/mockito/exceptions/cause/FirstUndesiredInvocation.java,10,super(message);
False,src/org/mockito/internal/MockitoBehavior.java,src/org/mockito/internal/MockitoBehavior.java,56,asStackTrace lastInvocationStackTrace = registeredInvocations.getLastInvocationStackTrace(wanted);
False,src/org/mockito/internal/MockitoBehavior.java,src/org/mockito/internal/MockitoBehavior.java,57,"xceptions.tooLittleActualInvocations(wantedCount, actualCount, wanted.toString(), lastInvocationStackTrace);"
True,src/org/mockito/internal/MockitoBehavior.java,src/org/mockito/internal/MockitoBehavior.java,56,HasStackTrace lastInvocation = registeredInvocations.getLastInvocationStackTrace(wanted);
True,src/org/mockito/internal/MockitoBehavior.java,src/org/mockito/internal/MockitoBehavior.java,57,"Exceptions.tooLittleActualInvocations(wantedCount, actualCount, wanted.toString(), lastInvocation);"
False,src/org/mockito/internal/MockitoBehavior.java,src/org/mockito/internal/MockitoBehavior.java,59,"/            registeredInvocations.findFirstUndesiredInvocation(wanted, mode);"
False,src/org/mockito/internal/MockitoBehavior.java,src/org/mockito/internal/MockitoBehavior.java,60,"xceptions.numberOfInvocationsDiffers(wantedCount, actualCount, wanted.toString());"
True,src/org/mockito/internal/MockitoBehavior.java,src/org/mockito/internal/MockitoBehavior.java,59,"HasStackTrace firstUndesired = registeredInvocations.getFirstUndesiredInvocationStackTrace(wanted, mode);"
True,src/org/mockito/internal/MockitoBehavior.java,src/org/mockito/internal/MockitoBehavior.java,60,"Exceptions.tooManyActualInvocations(wantedCount, actualCount, wanted.toString(), firstUndesired);"
True,src/org/mockito/internal/RegisteredInvocations.java,src/org/mockito/internal/RegisteredInvocations.java,121,"public HasStackTrace getFirstUndesiredInvocationStackTrace(ExpectedInvocation wanted, VerifyingMode mode) {"
True,src/org/mockito/internal/RegisteredInvocations.java,src/org/mockito/internal/RegisteredInvocations.java,122,int counter = 0;
True,src/org/mockito/internal/RegisteredInvocations.java,src/org/mockito/internal/RegisteredInvocations.java,123,for (Invocation registered : registeredInvocations) {
True,src/org/mockito/internal/RegisteredInvocations.java,src/org/mockito/internal/RegisteredInvocations.java,124,if (wanted.matches(registered)) {
True,src/org/mockito/internal/RegisteredInvocations.java,src/org/mockito/internal/RegisteredInvocations.java,125,counter++;
True,src/org/mockito/internal/RegisteredInvocations.java,src/org/mockito/internal/RegisteredInvocations.java,126,if (counter > mode.wantedCount()) {
True,src/org/mockito/internal/RegisteredInvocations.java,src/org/mockito/internal/RegisteredInvocations.java,127,return registered.getStackTrace();
True,src/org/mockito/internal/RegisteredInvocations.java,src/org/mockito/internal/RegisteredInvocations.java,131,"throw new IllegalArgumentException(""There are no undesired invocations!"");"
True,test/org/mockito/internal/RegisteredInvocationsTest.java,test/org/mockito/internal/RegisteredInvocationsTest.java,15,import org.mockito.exceptions.HasStackTrace;
True,test/org/mockito/internal/RegisteredInvocationsTest.java,test/org/mockito/internal/RegisteredInvocationsTest.java,227,@Test
True,test/org/mockito/internal/RegisteredInvocationsTest.java,test/org/mockito/internal/RegisteredInvocationsTest.java,228,public void shouldGetFirstUndesiredWhenWantedNumberOfTimesIsZero() throws Exception {
True,test/org/mockito/internal/RegisteredInvocationsTest.java,test/org/mockito/internal/RegisteredInvocationsTest.java,229,"HasStackTrace firstUndesired = registered.getFirstUndesiredInvocationStackTrace(new ExpectedInvocation(simpleMethodInvocation), VerifyingMode.times(0));"
True,test/org/mockito/internal/RegisteredInvocationsTest.java,test/org/mockito/internal/RegisteredInvocationsTest.java,230,HasStackTrace expected = simpleMethodInvocation.getStackTrace();
True,test/org/mockito/internal/RegisteredInvocationsTest.java,test/org/mockito/internal/RegisteredInvocationsTest.java,231,"assertSame(firstUndesired, expected);"
True,test/org/mockito/internal/RegisteredInvocationsTest.java,test/org/mockito/internal/RegisteredInvocationsTest.java,234,@Test
True,test/org/mockito/internal/RegisteredInvocationsTest.java,test/org/mockito/internal/RegisteredInvocationsTest.java,235,public void shouldGetFirstUndesiredWhenWantedNumberOfTimesIsOne() throws Exception {
True,test/org/mockito/internal/RegisteredInvocationsTest.java,test/org/mockito/internal/RegisteredInvocationsTest.java,236,"HasStackTrace firstUndesired = registered.getFirstUndesiredInvocationStackTrace(new ExpectedInvocation(simpleMethodInvocation), VerifyingMode.times(1));"
True,test/org/mockito/internal/RegisteredInvocationsTest.java,test/org/mockito/internal/RegisteredInvocationsTest.java,237,HasStackTrace expected = simpleMethodInvocationTwo.getStackTrace();
True,test/org/mockito/internal/RegisteredInvocationsTest.java,test/org/mockito/internal/RegisteredInvocationsTest.java,238,"assertSame(firstUndesired, expected);"
True,test/org/mockito/internal/RegisteredInvocationsTest.java,test/org/mockito/internal/RegisteredInvocationsTest.java,241,@Test
True,test/org/mockito/internal/RegisteredInvocationsTest.java,test/org/mockito/internal/RegisteredInvocationsTest.java,242,public void shouldGetFirstUndesiredWhenWantedNumberOfTimesIsTwo() throws Exception {
True,test/org/mockito/internal/RegisteredInvocationsTest.java,test/org/mockito/internal/RegisteredInvocationsTest.java,243,"HasStackTrace firstUndesired = registered.getFirstUndesiredInvocationStackTrace(new ExpectedInvocation(simpleMethodInvocation), VerifyingMode.times(2));"
True,test/org/mockito/internal/RegisteredInvocationsTest.java,test/org/mockito/internal/RegisteredInvocationsTest.java,244,HasStackTrace expected = simpleMethodInvocationThree.getStackTrace();
True,test/org/mockito/internal/RegisteredInvocationsTest.java,test/org/mockito/internal/RegisteredInvocationsTest.java,245,"assertSame(firstUndesired, expected);"
False,test/org/mockitousage/verification/BasicVerificationTest.java,test/org/mockitousage/verification/BasicVerificationTest.java,98, catch (NumberOfInvocationsError e) {};
True,test/org/mockitousage/verification/BasicVerificationTest.java,test/org/mockitousage/verification/BasicVerificationTest.java,98,} catch (TooManyActualInvocationsError e) {};
False,test/org/mockitousage/verification/ExactNumberOfTimesVerificationTest.java,test/org/mockitousage/verification/ExactNumberOfTimesVerificationTest.java,15,mport org.mockito.exceptions.cause.TooLittleInvocations;
True,test/org/mockitousage/verification/ExactNumberOfTimesVerificationTest.java,test/org/mockitousage/verification/ExactNumberOfTimesVerificationTest.java,15,import org.mockito.exceptions.cause.*;
True,test/org/mockitousage/verification/ExactNumberOfTimesVerificationTest.java,test/org/mockitousage/verification/ExactNumberOfTimesVerificationTest.java,60,mock.clear();
False,test/org/mockitousage/verification/ExactNumberOfTimesVerificationTest.java,test/org/mockitousage/verification/ExactNumberOfTimesVerificationTest.java,61,"ockito.verify(mock, 3).clear();"
True,test/org/mockitousage/verification/ExactNumberOfTimesVerificationTest.java,test/org/mockitousage/verification/ExactNumberOfTimesVerificationTest.java,62,"Mockito.verify(mock, 4).clear();"
False,test/org/mockitousage/verification/ExactNumberOfTimesVerificationTest.java,test/org/mockitousage/verification/ExactNumberOfTimesVerificationTest.java,65, catch (NumberOfInvocationsError e) {
True,test/org/mockitousage/verification/ExactNumberOfTimesVerificationTest.java,test/org/mockitousage/verification/ExactNumberOfTimesVerificationTest.java,66,} catch (TooManyActualInvocationsError e) {
False,test/org/mockitousage/verification/ExactNumberOfTimesVerificationTest.java,test/org/mockitousage/verification/ExactNumberOfTimesVerificationTest.java,70,"Wanted 1 time but was 3"";"
True,test/org/mockitousage/verification/ExactNumberOfTimesVerificationTest.java,test/org/mockitousage/verification/ExactNumberOfTimesVerificationTest.java,71,"""Wanted 1 time but was 4"";"
True,test/org/mockitousage/verification/ExactNumberOfTimesVerificationTest.java,test/org/mockitousage/verification/ExactNumberOfTimesVerificationTest.java,74,"assertEquals(FirstUndesiredInvocation.class, e.getCause().getClass());"
True,test/org/mockitousage/verification/ExactNumberOfTimesVerificationTest.java,test/org/mockitousage/verification/ExactNumberOfTimesVerificationTest.java,76,String expectedCause =
True,test/org/mockitousage/verification/ExactNumberOfTimesVerificationTest.java,test/org/mockitousage/verification/ExactNumberOfTimesVerificationTest.java,77,"""\n"" +"
True,test/org/mockitousage/verification/ExactNumberOfTimesVerificationTest.java,test/org/mockitousage/verification/ExactNumberOfTimesVerificationTest.java,78,"""First undesired invocation:"";"
True,test/org/mockitousage/verification/ExactNumberOfTimesVerificationTest.java,test/org/mockitousage/verification/ExactNumberOfTimesVerificationTest.java,80,"assertEquals(expectedCause, e.getCause().getMessage());"
False,test/org/mockitousage/verification/ExactNumberOfTimesVerificationTest.java,test/org/mockitousage/verification/ExactNumberOfTimesVerificationTest.java,106, catch (NumberOfInvocationsError e) {
True,test/org/mockitousage/verification/ExactNumberOfTimesVerificationTest.java,test/org/mockitousage/verification/ExactNumberOfTimesVerificationTest.java,115,} catch (TooManyActualInvocationsError e) {
