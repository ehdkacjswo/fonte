is_addition,old_file_path,new_file_path,line_num,content
False,src/org/mockito/exceptions/Reporter.java,src/org/mockito/exceptions/Reporter.java,758," do not implement Serializable."","
True,src/org/mockito/exceptions/Reporter.java,src/org/mockito/exceptions/Reporter.java,758,"""do not implement Serializable AND do not have a no-arg constructor."","
True,src/org/mockito/exceptions/base/MockitoException.java,src/org/mockito/exceptions/base/MockitoException.java,12,"* Raised by mockito to emit an error either due to Mockito, or due to the User."
True,src/org/mockito/exceptions/base/MockitoException.java,src/org/mockito/exceptions/base/MockitoException.java,14,* <p>
True,src/org/mockito/exceptions/base/MockitoException.java,src/org/mockito/exceptions/base/MockitoException.java,15,*     The stack trace is filtered from mockito calls if you are using {@link #getStackTrace()}.
True,src/org/mockito/exceptions/base/MockitoException.java,src/org/mockito/exceptions/base/MockitoException.java,16,*     For debugging purpose though you can still access the full stacktrace using {@link #getUnfilteredStackTrace()}.
True,src/org/mockito/exceptions/base/MockitoException.java,src/org/mockito/exceptions/base/MockitoException.java,17,*     However note that other calls related to the stackTrace will refer to the filter stacktrace.
True,src/org/mockito/exceptions/base/MockitoException.java,src/org/mockito/exceptions/base/MockitoException.java,18,* </p>
True,src/org/mockito/exceptions/base/MockitoException.java,src/org/mockito/exceptions/base/MockitoException.java,27,// TODO lazy filtered stacktrace initialization
True,src/org/mockito/exceptions/base/MockitoSerializationIssue.java,src/org/mockito/exceptions/base/MockitoSerializationIssue.java,2,* Copyright (c) 2007 Mockito contributors
True,src/org/mockito/exceptions/base/MockitoSerializationIssue.java,src/org/mockito/exceptions/base/MockitoSerializationIssue.java,3,* This program is made available under the terms of the MIT License.
True,src/org/mockito/exceptions/base/MockitoSerializationIssue.java,src/org/mockito/exceptions/base/MockitoSerializationIssue.java,6,package org.mockito.exceptions.base;
True,src/org/mockito/exceptions/base/MockitoSerializationIssue.java,src/org/mockito/exceptions/base/MockitoSerializationIssue.java,8,import org.mockito.internal.exceptions.stacktrace.ConditionalStackTraceFilter;
True,src/org/mockito/exceptions/base/MockitoSerializationIssue.java,src/org/mockito/exceptions/base/MockitoSerializationIssue.java,10,import java.io.ObjectStreamException;
True,src/org/mockito/exceptions/base/MockitoSerializationIssue.java,src/org/mockito/exceptions/base/MockitoSerializationIssue.java,13,"* Raised by mockito to emit an error either due to Mockito, or due to the User."
True,src/org/mockito/exceptions/base/MockitoSerializationIssue.java,src/org/mockito/exceptions/base/MockitoSerializationIssue.java,15,* <p>
True,src/org/mockito/exceptions/base/MockitoSerializationIssue.java,src/org/mockito/exceptions/base/MockitoSerializationIssue.java,16,*     The stack trace is filtered from mockito calls if you are using {@link #getStackTrace()}.
True,src/org/mockito/exceptions/base/MockitoSerializationIssue.java,src/org/mockito/exceptions/base/MockitoSerializationIssue.java,17,*     For debugging purpose though you can still access the full stacktrace using {@link #getUnfilteredStackTrace()}.
True,src/org/mockito/exceptions/base/MockitoSerializationIssue.java,src/org/mockito/exceptions/base/MockitoSerializationIssue.java,18,*     However note that other calls related to the stackTrace will refer to the filter stacktrace.
True,src/org/mockito/exceptions/base/MockitoSerializationIssue.java,src/org/mockito/exceptions/base/MockitoSerializationIssue.java,19,* </p>
True,src/org/mockito/exceptions/base/MockitoSerializationIssue.java,src/org/mockito/exceptions/base/MockitoSerializationIssue.java,21,* @since 1.9.6
True,src/org/mockito/exceptions/base/MockitoSerializationIssue.java,src/org/mockito/exceptions/base/MockitoSerializationIssue.java,23,public class MockitoSerializationIssue extends ObjectStreamException {
True,src/org/mockito/exceptions/base/MockitoSerializationIssue.java,src/org/mockito/exceptions/base/MockitoSerializationIssue.java,25,private StackTraceElement[] unfilteredStackTrace;
True,src/org/mockito/exceptions/base/MockitoSerializationIssue.java,src/org/mockito/exceptions/base/MockitoSerializationIssue.java,27,"public MockitoSerializationIssue(String message, Exception cause) {"
True,src/org/mockito/exceptions/base/MockitoSerializationIssue.java,src/org/mockito/exceptions/base/MockitoSerializationIssue.java,28,super(message);
True,src/org/mockito/exceptions/base/MockitoSerializationIssue.java,src/org/mockito/exceptions/base/MockitoSerializationIssue.java,29,initCause(cause);
True,src/org/mockito/exceptions/base/MockitoSerializationIssue.java,src/org/mockito/exceptions/base/MockitoSerializationIssue.java,30,filterStackTrace();
True,src/org/mockito/exceptions/base/MockitoSerializationIssue.java,src/org/mockito/exceptions/base/MockitoSerializationIssue.java,33,@Override
True,src/org/mockito/exceptions/base/MockitoSerializationIssue.java,src/org/mockito/exceptions/base/MockitoSerializationIssue.java,34,public StackTraceElement[] getStackTrace() {
True,src/org/mockito/exceptions/base/MockitoSerializationIssue.java,src/org/mockito/exceptions/base/MockitoSerializationIssue.java,35,filterStackTrace();
True,src/org/mockito/exceptions/base/MockitoSerializationIssue.java,src/org/mockito/exceptions/base/MockitoSerializationIssue.java,36,return super.getStackTrace();
True,src/org/mockito/exceptions/base/MockitoSerializationIssue.java,src/org/mockito/exceptions/base/MockitoSerializationIssue.java,39,private void filterStackTrace() {
True,src/org/mockito/exceptions/base/MockitoSerializationIssue.java,src/org/mockito/exceptions/base/MockitoSerializationIssue.java,40,unfilteredStackTrace = super.getStackTrace();
True,src/org/mockito/exceptions/base/MockitoSerializationIssue.java,src/org/mockito/exceptions/base/MockitoSerializationIssue.java,42,ConditionalStackTraceFilter filter = new ConditionalStackTraceFilter();
True,src/org/mockito/exceptions/base/MockitoSerializationIssue.java,src/org/mockito/exceptions/base/MockitoSerializationIssue.java,43,filter.filter(this);
True,src/org/mockito/exceptions/base/MockitoSerializationIssue.java,src/org/mockito/exceptions/base/MockitoSerializationIssue.java,46,public StackTraceElement[] getUnfilteredStackTrace() {
True,src/org/mockito/exceptions/base/MockitoSerializationIssue.java,src/org/mockito/exceptions/base/MockitoSerializationIssue.java,47,return unfilteredStackTrace;
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,2,* Copyright (c) 2007 Mockito contributors
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,3,* This program is made available under the terms of the MIT License.
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,6,package org.mockito.internal.creation;
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,8,import org.mockito.Incubating;
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,9,import org.mockito.exceptions.base.MockitoSerializationIssue;
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,10,import org.mockito.internal.creation.jmock.ClassImposterizer;
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,11,import org.mockito.internal.util.MockUtil;
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,12,import org.mockito.internal.util.reflection.FieldSetter;
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,13,import org.mockito.mock.MockCreationSettings;
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,14,import org.mockito.mock.MockName;
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,16,import java.io.*;
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,17,import java.lang.reflect.Field;
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,18,import java.lang.reflect.Method;
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,19,import java.util.Set;
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,20,import java.util.concurrent.locks.Lock;
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,21,import java.util.concurrent.locks.ReentrantLock;
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,23,import static org.mockito.internal.util.StringJoiner.join;
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,26,"* This is responsible for serializing a mock, it is enabled if the mock is implementing"
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,27,* {@link Serializable}.
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,29,* <p>
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,30,"*     The way it works is to enable serialization via the {@link #enableSerializationAcrossJVM(MockCreationSettings)},"
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,31,*     if the mock settings is set to be serializable it will add the {@link org.mockito.internal.creation.AcrossJVMSerializationFeature.AcrossJVMMockitoMockSerializable} interface.
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,32,*     This interface defines a the {@link org.mockito.internal.creation.AcrossJVMSerializationFeature.AcrossJVMMockitoMockSerializable#writeReplace()}
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,33,*     whose signature match the one that is looked by the standard Java serialization.
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,34,* </p>
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,36,* <p>
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,37,"*     Then in the {@link MethodInterceptorFilter} of mockito, if the <code>writeReplace</code> method is called,"
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,38,*     it will use the custom implementation of this class {@link #writeReplace(Object)}. This method has a specific
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,39,*     knowledge on how to serialize a mockito mock that is based on CGLIB.
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,40,* </p>
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,42,* <p><strong>Only one instance per mock! See {@link MethodInterceptorFilter}</strong></p>
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,44,* TODO use a proper way to add the interface
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,45,"* TODO offer a way to disable completely this behavior, or maybe enable this behavior only with a specific setting"
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,46,* TODO check the class is mockable in the deserialization side
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,48,* @see CglibMockMaker
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,49,* @see MethodInterceptorFilter
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,50,* @author Brice Dutheil
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,51,* @since 1.9.6
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,53,@Incubating
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,54,public class AcrossJVMSerializationFeature implements Serializable {
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,55,private static final long serialVersionUID = 7411152578314420778L;
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,56,"private static final String MOCKITO_PROXY_MARKER = ""MockitoProxyMarker"";"
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,57,private final MockUtil mockUtil = new MockUtil();
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,58,private boolean instanceLocalCurrentlySerializingFlag = false;
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,59,private Lock mutex = new ReentrantLock();
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,61,public boolean isWriteReplace(Method method) {
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,62,return  method.getReturnType() == Object.class
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,63,&& method.getParameterTypes().length == 0
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,64,"&& method.getName().equals(""writeReplace"");"
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,69,* Custom implementation of the <code>writeReplace</code> method for serialization.
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,71,* Here's how it's working and why :
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,72,* <ol>
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,73,*     <li>
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,74,"*         <p>When first entering in this method, it's because some is serializing the mock, with some code like :"
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,75,"* <pre class=""code""><code class=""java"">"
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,76,*     objectOutputStream.writeObject(mock);
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,77,* </code></pre>
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,78,"*         So, {@link ObjectOutputStream} will track the <code>writeReplace</code> method in the instance and"
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,79,"*         execute it, which is wanted to replace the mock by another type that will encapsulate the actual mock."
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,80,"*         At this point, the code will return an {@link AcrossJVMMockSerializationProxy}.</p>"
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,81,*     </li>
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,82,*     <li>
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,83,"*         <p>Now, in the constructor {@link AcrossJVMMockSerializationProxy#AcrossJVMMockSerializationProxy(Object)}"
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,84,*         the mock is being serialized in a custom way (using {@link MockitoMockObjectOutputStream}) to a
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,85,*         byte array. So basically it means the code is performing double nested serialization of the passed
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,86,*         <code>mockitoMock</code>.</p>
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,88,*         <p>However the <code>ObjectOutputStream</code> will still detect the custom
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,89,*         <code>writeReplace</code> and execute it.
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,90,*         <em>(For that matter disabling replacement via {@link ObjectOutputStream#enableReplaceObject(boolean)}
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,91,"*         doesn't disable the <code>writeReplace</code> call, but just just toggle replacement in the"
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,92,"*         written stream, <strong><code>writeReplace</code> is always called by"
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,93,*         <code>ObjectOutputStream</code></strong>.)</em></p>
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,95,"*         <p>In order to avoid this recursion, obviously leading to a {@link StackOverflowError}, this method is using"
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,96,"*         a flag that marks the mock as already being replaced, and then shouldn't replace itself again."
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,97,"*         <strong>This flag is local to this class</strong>, which means the flag of this class unfortunately needs"
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,98,"*         to be protected against concurrent access, hence the reentrant lock.</p>"
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,99,*     </li>
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,100,* </ol>
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,103,* @param mockitoMock The Mockito mock to be serialized.
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,104,* @return A wrapper ({@link AcrossJVMMockSerializationProxy}) to be serialized by the calling ObjectOutputStream.
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,105,* @throws ObjectStreamException
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,107,public Object writeReplace(Object mockitoMock) throws ObjectStreamException {
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,108,try {
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,109,// reentrant lock for critical section. could it be improved ?
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,110,mutex.lock();
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,111,"// mark started flag // per thread, not per instance"
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,112,// temporary loosy hack to avoid stackoverflow
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,113,if(mockIsCurrentlyBeingReplaced()) {
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,114,return mockitoMock;
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,116,mockReplacementStarted();
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,118,return new AcrossJVMMockSerializationProxy(mockitoMock);
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,119,} catch (IOException ioe) {
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,120,MockName mockName = mockUtil.getMockName(mockitoMock);
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,121,String mockedType = mockUtil.getMockSettings(mockitoMock).getTypeToMock().getCanonicalName();
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,122,throw new MockitoSerializationIssue(join(
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,123,"""The mock '"" + mockName + ""' of type '"" + mockedType + ""'"","
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,124,"""The Java Standard Serialization reported an '"" + ioe.getClass().getSimpleName() + ""' saying : "" + ioe.getMessage()"
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,125,"), ioe);"
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,126,} finally {
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,127,// unmark
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,128,mockReplacementCompleted();
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,129,mutex.unlock();
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,134,private void mockReplacementCompleted() {
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,135,instanceLocalCurrentlySerializingFlag = false;
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,139,private void mockReplacementStarted() {
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,140,instanceLocalCurrentlySerializingFlag = true;
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,144,private boolean mockIsCurrentlyBeingReplaced() {
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,145,return instanceLocalCurrentlySerializingFlag;
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,150,* Enable serialization serialization that will work across classloaders / and JVM.
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,152,* <p>Only enable if settings says the mock should be serializable. In this case add the
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,153,* {@link AcrossJVMMockitoMockSerializable} to the extra interface list.</p>
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,155,* @param settings Mock creation settings.
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,156,* @param <T> Type param to not be bothered by the generics
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,158,public <T> void enableSerializationAcrossJVM(MockCreationSettings<T> settings) {
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,159,if (settings.isSerializable()) {
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,160,// havin faith that this set is modifiable
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,161,// TODO use a proper way to add the interface
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,162,settings.getExtraInterfaces().add(AcrossJVMMockitoMockSerializable.class);
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,168,* This is the serialization proxy that will encapsulate the real mock data as a byte array.
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,170,* <p>When called in the constructor it will serialize the mock in a byte array using a
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,171,* custom {@link MockitoMockObjectOutputStream} that will annotate the mock class in the stream.
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,172,* other information are used in this class in order to facilitate deserialization.
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,173,* </p>
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,175,* <p>Deserialization of the mock will be performed by the {@link #readResolve()} method via
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,176,* the custom {@link MockitoMockObjectInputStream} that will be in charge of creating the mock class.</p>
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,178,public static class AcrossJVMMockSerializationProxy implements Serializable {
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,181,private static final long serialVersionUID = -7600267929109286514L;
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,182,private byte[] serializedMock;
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,183,private Class typeToMock;
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,184,private Set<Class> extraInterfaces;
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,186,* Creates the wrapper that be used in the serialization stream.
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,188,"* <p>Immediately serializes the Mockito mock using specifically crafted {@link MockitoMockObjectOutputStream},"
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,189,* in a byte array.</p>
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,191,* @param mockitoMock The Mockito mock to serialize.
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,192,* @throws IOException
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,194,public AcrossJVMMockSerializationProxy(Object mockitoMock) throws IOException {
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,195,ByteArrayOutputStream out = new ByteArrayOutputStream();
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,196,ObjectOutputStream objectOutputStream = new MockitoMockObjectOutputStream(out);
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,198,objectOutputStream.writeObject(mockitoMock);
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,200,objectOutputStream.close();
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,201,out.close();
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,203,MockCreationSettings mockSettings = new MockUtil().getMockSettings(mockitoMock);
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,204,this.serializedMock = out.toByteArray();
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,205,this.typeToMock = mockSettings.getTypeToMock();
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,206,this.extraInterfaces = mockSettings.getExtraInterfaces();
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,210,* Resolves the proxy to a new deserialized instance of the Mockito mock.
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,212,* <p>Uses the custom crafted {@link MockitoMockObjectInputStream} to deserialize the mock.</p>
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,214,* @return A deserialized instance of the Mockito mock.
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,215,* @throws ObjectStreamException
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,217,private Object readResolve() throws ObjectStreamException {
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,218,try {
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,219,ByteArrayInputStream bis = new ByteArrayInputStream(serializedMock);
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,220,"ObjectInputStream objectInputStream = new MockitoMockObjectInputStream(bis, typeToMock, extraInterfaces);"
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,222,Object deserializedMock = objectInputStream.readObject();
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,224,bis.close();
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,225,objectInputStream.close();
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,227,return deserializedMock;
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,228,} catch (IOException ioe) {
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,229,throw new MockitoSerializationIssue(join(
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,230,"""Mockito mock cannot be deserialized to a mock of '"" + typeToMock.getCanonicalName() + ""'."","
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,231,"""If you are unsure what is the reason of this exception, feel free to contact us on the mailing list."""
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,232,"), ioe);"
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,233,} catch (ClassNotFoundException cce) {
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,234,throw new MockitoSerializationIssue(join(
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,235,"""A class couldn't be found while deserializing a Mockito mock, you should check your classpath."","
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,236,"""If you are still unsure what is the reason of this exception, feel free to contact us on the mailing list."""
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,237,"), cce);"
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,244,* Special Mockito aware <code>ObjectInputStream</code> that will resolve the Mockito proxy class.
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,246,* <p>
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,247,*     This specificaly crafted ObjectInoutStream has the most important role to resolve the Mockito generated
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,248,*     class. It is doing so via the {@link #resolveClass(java.io.ObjectStreamClass)} which looks in the stream
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,249,*     for a Mockito marker. If this marker is found it will try to resolve the mockito class otherwise it
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,250,*     delegates class resolution to the default super behavior.
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,251,*     The mirror method used for serializing the mock is {@link MockitoMockObjectOutputStream#annotateClass(Class)}.
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,252,* </p>
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,254,* <p>
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,255,"*     When this marker is found, {@link ClassImposterizer} methods are being used to create the mock class."
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,256,*     <em>Note that behind the <code>ClassImposterizer</code> there is CGLIB and the
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,257,*     {@link org.mockito.internal.creation.jmock.SearchingClassLoader} that will look if this enhanced class has
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,258,*     already been created in an accessible classloader ; so basically this code trusts the ClassImposterizer
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,259,*     code.</em>
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,260,* </p>
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,262,public static class MockitoMockObjectInputStream extends ObjectInputStream {
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,263,private Class typeToMock;
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,264,private Set<Class> extraInterfaces;
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,266,"public MockitoMockObjectInputStream(InputStream in, Class typeToMock, Set<Class> extraInterfaces) throws IOException {"
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,267,super(in) ;
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,268,this.typeToMock = typeToMock;
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,269,this.extraInterfaces = extraInterfaces;
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,270,enableResolveObject(true); // ensure resolving is enabled
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,274,* Resolve the Mockito proxy class if it is marked as such.
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,276,* <p>Uses the fields {@link #typeToMock} and {@link #extraInterfaces} to
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,277,* create the Mockito proxy class as the <code>ObjectStreamClass</code>
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,278,* doesn't carry useful information for this purpose.</p>
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,280,"* @param desc Description of the class in the stream, not used."
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,281,* @return The class that will be used to deserialize the instance mock.
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,282,* @throws IOException
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,283,* @throws ClassNotFoundException
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,285,@Override
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,286,"protected Class<?> resolveClass(ObjectStreamClass desc) throws IOException, ClassNotFoundException {"
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,287,if (notMarkedAsAMockitoMock(readObject())) {
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,288,return super.resolveClass(desc);
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,291,// TODO check the class is mockable in the deserialization side
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,292,// ClassImposterizer.INSTANCE.canImposterise(typeToMock);
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,294,// create the Mockito mock class before it can even be deserialized
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,295,"ClassImposterizer.INSTANCE.setConstructorsAccessible(typeToMock, true);"
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,296,Class<?> proxyClass = ClassImposterizer.INSTANCE.createProxyClass(
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,297,"typeToMock,"
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,298,extraInterfaces.toArray(new Class[extraInterfaces.size()])
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,301,"hackClassNameToMatchNewlyCreatedClass(desc, proxyClass);"
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,303,return proxyClass;
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,308,* Hack the <code>name</code> field of the given <code>ObjectStreamClass</code> with
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,309,* the <code>newProxyClass</code>.
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,311,* The parent ObjectInputStream will check the name of the class in the stream matches the name of the one
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,312,* that is created in this method.
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,314,* The CGLIB classes uses a hash of the classloader and/or maybe some other data that allow them to be
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,315,* relatively unique in a JVM.
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,317,"* When names differ, which happens when the mock is deserialized in another ClassLoader, a"
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,318,"* <code>java.io.InvalidObjectException</code> is thrown, so this part of the code is hacking through"
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,319,* the given <code>ObjectStreamClass</code> to change the name with the newly created class.
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,321,* @param descInstance The <code>ObjectStreamClass</code> that will be hacked.
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,322,* @param proxyClass The proxy class whose name will be applied.
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,323,* @throws InvalidObjectException
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,325,"private void hackClassNameToMatchNewlyCreatedClass(ObjectStreamClass descInstance, Class<?> proxyClass) throws ObjectStreamException {"
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,326,try {
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,327,"Field classNameField = descInstance.getClass().getDeclaredField(""name"");"
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,328,"new FieldSetter(descInstance, classNameField).set(proxyClass.getCanonicalName());"
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,329,} catch (NoSuchFieldException e) {
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,330,// TODO use our own mockito mock serialization exception
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,331,throw new MockitoSerializationIssue(join(
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,332,"""Wow, the class 'ObjectStreamClass' in the JDK don't have the field 'name',"","
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,333,"""this is definitely a bug in our code as it means the JDK team changed a few internal things."","
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,335,"""Please report an issue with the JDK used, a code sample and a link to download the JDK would be welcome."""
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,336,"), e);"
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,341,* Read the stream class annotation and identify it as a Mockito mock or not.
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,343,* @param marker The marker to identify.
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,344,"* @return <code>true</code> if not marked as a Mockito, <code>false</code> if the class annotation marks a Mockito mock."
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,345,* @throws IOException
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,346,* @throws ClassNotFoundException
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,348,"private boolean notMarkedAsAMockitoMock(Object marker) throws IOException, ClassNotFoundException {"
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,349,return !MOCKITO_PROXY_MARKER.equals(marker);
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,355,* Special Mockito aware <code>ObjectOutputStream</code>.
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,357,* <p>
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,358,*     This output stream has the role of marking in the stream the Mockito class. This
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,359,*     marking process is necessary to identify the proxy class that will need to be recreated.
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,361,*     The mirror method used for deserializing the mock is
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,362,*     {@link MockitoMockObjectInputStream#resolveClass(ObjectStreamClass)}.
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,363,* </p>
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,366,private static class MockitoMockObjectOutputStream extends ObjectOutputStream {
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,367,"private static final String NOTHING = """";"
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,368,private MockUtil mockUtil = new MockUtil();
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,370,public MockitoMockObjectOutputStream(ByteArrayOutputStream out) throws IOException {
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,371,super(out);
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,375,* Annotates (marks) the class if this class is a Mockito mock.
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,377,* @param cl The class to annotate.
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,378,* @throws IOException
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,380,@Override
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,381,protected void annotateClass(Class<?> cl) throws IOException {
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,382,writeObject(mockitoProxyClassMarker(cl));
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,383,"// might be also useful later, for embedding classloader info ...maybe ...maybe not"
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,387,* Returns the Mockito marker if this class is a Mockito mock.
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,389,* @param cl The class to mark.
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,390,"* @return The marker if this is a Mockito proxy class, otherwise returns a void marker."
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,392,private String mockitoProxyClassMarker(Class<?> cl) {
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,393,if (mockUtil.isMock(cl)) {
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,394,return MOCKITO_PROXY_MARKER;
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,395,} else {
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,396,return NOTHING;
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,403,* Simple interface that hold a correct <code>writeReplace</code> signature that can be seen by an
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,404,* <code>ObjectOutputStream</code>.
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,406,* It will be applied before the creation of the mock when the mock setting says it should serializable.
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,408,* @see #enableSerializationAcrossJVM(org.mockito.mock.MockCreationSettings)
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,410,public interface AcrossJVMMockitoMockSerializable {
True,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,src/org/mockito/internal/creation/AcrossJVMSerializationFeature.java,411,public Object writeReplace() throws java.io.ObjectStreamException;
True,src/org/mockito/internal/creation/CglibMockMaker.java,src/org/mockito/internal/creation/CglibMockMaker.java,23,new AcrossJVMSerializationFeature().enableSerializationAcrossJVM(settings);
False,src/org/mockito/internal/creation/ClassNameFinder.java,src/org/mockito/internal/creation/ClassNameFinder.java,2, Copyright (c) 2007 Mockito contributors
False,src/org/mockito/internal/creation/ClassNameFinder.java,src/org/mockito/internal/creation/ClassNameFinder.java,3, This program is made available under the terms of the MIT License.
False,src/org/mockito/internal/creation/ClassNameFinder.java,src/org/mockito/internal/creation/ClassNameFinder.java,6,ackage org.mockito.internal.creation;
False,src/org/mockito/internal/creation/ClassNameFinder.java,src/org/mockito/internal/creation/ClassNameFinder.java,8,ublic class ClassNameFinder {
False,src/org/mockito/internal/creation/ClassNameFinder.java,src/org/mockito/internal/creation/ClassNameFinder.java,10,ublic static String classNameForMock(Object mock) {
False,src/org/mockito/internal/creation/ClassNameFinder.java,src/org/mockito/internal/creation/ClassNameFinder.java,11,f (mock.getClass().getInterfaces().length == 2) {
False,src/org/mockito/internal/creation/ClassNameFinder.java,src/org/mockito/internal/creation/ClassNameFinder.java,12,eturn mock.getClass().getInterfaces()[0].getSimpleName();
False,src/org/mockito/internal/creation/ClassNameFinder.java,src/org/mockito/internal/creation/ClassNameFinder.java,13, else {
False,src/org/mockito/internal/creation/ClassNameFinder.java,src/org/mockito/internal/creation/ClassNameFinder.java,14,eturn mock.getClass().getSuperclass().getSimpleName();
False,src/org/mockito/internal/creation/MethodInterceptorFilter.java,src/org/mockito/internal/creation/MethodInterceptorFilter.java,8,mport java.io.Serializable;
False,src/org/mockito/internal/creation/MethodInterceptorFilter.java,src/org/mockito/internal/creation/MethodInterceptorFilter.java,9,mport java.lang.reflect.Method;
False,src/org/mockito/internal/creation/MethodInterceptorFilter.java,src/org/mockito/internal/creation/MethodInterceptorFilter.java,14,mport org.mockito.invocation.Invocation;
False,src/org/mockito/internal/creation/MethodInterceptorFilter.java,src/org/mockito/internal/creation/MethodInterceptorFilter.java,15,mport org.mockito.invocation.MockHandler;
False,src/org/mockito/internal/creation/MethodInterceptorFilter.java,src/org/mockito/internal/creation/MethodInterceptorFilter.java,17,mport org.mockito.internal.invocation.*;
True,src/org/mockito/internal/creation/MethodInterceptorFilter.java,src/org/mockito/internal/creation/MethodInterceptorFilter.java,12,import org.mockito.internal.invocation.InvocationImpl;
True,src/org/mockito/internal/creation/MethodInterceptorFilter.java,src/org/mockito/internal/creation/MethodInterceptorFilter.java,13,import org.mockito.internal.invocation.MockitoMethod;
True,src/org/mockito/internal/creation/MethodInterceptorFilter.java,src/org/mockito/internal/creation/MethodInterceptorFilter.java,14,import org.mockito.internal.invocation.SerializableMethod;
True,src/org/mockito/internal/creation/MethodInterceptorFilter.java,src/org/mockito/internal/creation/MethodInterceptorFilter.java,18,import org.mockito.invocation.Invocation;
True,src/org/mockito/internal/creation/MethodInterceptorFilter.java,src/org/mockito/internal/creation/MethodInterceptorFilter.java,19,import org.mockito.invocation.MockHandler;
True,src/org/mockito/internal/creation/MethodInterceptorFilter.java,src/org/mockito/internal/creation/MethodInterceptorFilter.java,22,import java.io.Serializable;
True,src/org/mockito/internal/creation/MethodInterceptorFilter.java,src/org/mockito/internal/creation/MethodInterceptorFilter.java,23,import java.lang.reflect.Method;
True,src/org/mockito/internal/creation/MethodInterceptorFilter.java,src/org/mockito/internal/creation/MethodInterceptorFilter.java,26,"* Should be one instance per mock instance, see CglibMockMaker."
True,src/org/mockito/internal/creation/MethodInterceptorFilter.java,src/org/mockito/internal/creation/MethodInterceptorFilter.java,37,private AcrossJVMSerializationFeature acrossJVMSerializationFeature = new AcrossJVMSerializationFeature();
True,src/org/mockito/internal/creation/MethodInterceptorFilter.java,src/org/mockito/internal/creation/MethodInterceptorFilter.java,50,} else if (acrossJVMSerializationFeature.isWriteReplace(method)) {
True,src/org/mockito/internal/creation/MethodInterceptorFilter.java,src/org/mockito/internal/creation/MethodInterceptorFilter.java,51,return acrossJVMSerializationFeature.writeReplace(proxy);
True,src/org/mockito/internal/creation/MockSettingsImpl.java,src/org/mockito/internal/creation/MockSettingsImpl.java,13,import org.mockito.internal.util.MockitoMock;
True,src/org/mockito/internal/creation/MockSettingsImpl.java,src/org/mockito/internal/creation/MockSettingsImpl.java,166,interfaces.add(MockitoMock.class);
True,src/org/mockito/internal/creation/jmock/ClassImposterizer.java,src/org/mockito/internal/creation/jmock/ClassImposterizer.java,56,Class<?> proxyClass = null;
True,src/org/mockito/internal/creation/jmock/ClassImposterizer.java,src/org/mockito/internal/creation/jmock/ClassImposterizer.java,57,Object proxyInstance = null;
False,src/org/mockito/internal/creation/jmock/ClassImposterizer.java,src/org/mockito/internal/creation/jmock/ClassImposterizer.java,58,"lass<?> proxyClass = createProxyClass(mockedType, ancillaryTypes);"
False,src/org/mockito/internal/creation/jmock/ClassImposterizer.java,src/org/mockito/internal/creation/jmock/ClassImposterizer.java,59,"eturn mockedType.cast(createProxy(proxyClass, interceptor));"
True,src/org/mockito/internal/creation/jmock/ClassImposterizer.java,src/org/mockito/internal/creation/jmock/ClassImposterizer.java,60,"proxyClass = createProxyClass(mockedType, ancillaryTypes);"
True,src/org/mockito/internal/creation/jmock/ClassImposterizer.java,src/org/mockito/internal/creation/jmock/ClassImposterizer.java,61,"proxyInstance = createProxy(proxyClass, interceptor);"
True,src/org/mockito/internal/creation/jmock/ClassImposterizer.java,src/org/mockito/internal/creation/jmock/ClassImposterizer.java,62,return mockedType.cast(proxyInstance);
True,src/org/mockito/internal/creation/jmock/ClassImposterizer.java,src/org/mockito/internal/creation/jmock/ClassImposterizer.java,64,// NPE unlikely to happen because CCE will only happen on the cast statement
False,src/org/mockito/internal/creation/jmock/ClassImposterizer.java,src/org/mockito/internal/creation/jmock/ClassImposterizer.java,62,"ClassCastException occurred when creating the proxy."","
True,src/org/mockito/internal/creation/jmock/ClassImposterizer.java,src/org/mockito/internal/creation/jmock/ClassImposterizer.java,66,"""ClassCastException occurred while creating the mockito proxy :"","
True,src/org/mockito/internal/creation/jmock/ClassImposterizer.java,src/org/mockito/internal/creation/jmock/ClassImposterizer.java,67,"""  class to imposterize : '"" + mockedType.getCanonicalName() + ""', loaded by classloader : '"" + mockedType.getClassLoader() + ""'"","
True,src/org/mockito/internal/creation/jmock/ClassImposterizer.java,src/org/mockito/internal/creation/jmock/ClassImposterizer.java,68,"""  imposterizing class : '"" + proxyClass.getCanonicalName() + ""', loaded by classloader : '"" + proxyClass.getClassLoader() + ""'"","
True,src/org/mockito/internal/creation/jmock/ClassImposterizer.java,src/org/mockito/internal/creation/jmock/ClassImposterizer.java,69,"""  proxy instance class : '"" + proxyInstance.getClass().getCanonicalName() + ""', loaded by classloader : '"" + proxyInstance.getClass().getClassLoader() + ""'"","
False,src/org/mockito/internal/creation/jmock/ClassImposterizer.java,src/org/mockito/internal/creation/jmock/ClassImposterizer.java,70,"rivate void setConstructorsAccessible(Class<?> mockedType, boolean accessible) {"
True,src/org/mockito/internal/creation/jmock/ClassImposterizer.java,src/org/mockito/internal/creation/jmock/ClassImposterizer.java,78,"public void setConstructorsAccessible(Class<?> mockedType, boolean accessible) {"
False,src/org/mockito/internal/creation/jmock/ClassImposterizer.java,src/org/mockito/internal/creation/jmock/ClassImposterizer.java,76,"rivate Class<?> createProxyClass(Class<?> mockedType, Class<?>...interfaces) {"
True,src/org/mockito/internal/creation/jmock/ClassImposterizer.java,src/org/mockito/internal/creation/jmock/ClassImposterizer.java,84,"public Class<?> createProxyClass(Class<?> mockedType, Class<?>... interfaces) {"
True,src/org/mockito/internal/creation/jmock/ClassImposterizer.java,src/org/mockito/internal/creation/jmock/ClassImposterizer.java,113,enhancer.setSerialVersionUID(42L);
False,src/org/mockito/internal/creation/jmock/SerializableNoOp.java,src/org/mockito/internal/creation/jmock/SerializableNoOp.java,2, Copyright (c) 2007 Mockito contributors
False,src/org/mockito/internal/creation/jmock/SerializableNoOp.java,src/org/mockito/internal/creation/jmock/SerializableNoOp.java,3, This program is made available under the terms of the MIT License.
True,src/org/mockito/internal/creation/jmock/SerializableNoOp.java,src/org/mockito/internal/creation/jmock/SerializableNoOp.java,2,* Copyright (c) 2007 Mockito contributors
True,src/org/mockito/internal/creation/jmock/SerializableNoOp.java,src/org/mockito/internal/creation/jmock/SerializableNoOp.java,3,* This program is made available under the terms of the MIT License.
False,src/org/mockito/internal/creation/jmock/SerializableNoOp.java,src/org/mockito/internal/creation/jmock/SerializableNoOp.java,7,mport java.io.Serializable;
True,src/org/mockito/internal/creation/jmock/SerializableNoOp.java,src/org/mockito/internal/creation/jmock/SerializableNoOp.java,10,import java.io.Serializable;
True,src/org/mockito/internal/creation/jmock/SerializableNoOp.java,src/org/mockito/internal/creation/jmock/SerializableNoOp.java,13,* Offer a Serializable implementation of the NoOp CGLIB callback.
False,src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java,src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java,8,mport org.mockito.internal.creation.ClassNameFinder;
False,src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java,src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java,17,mport java.util.*;
True,src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java,src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java,16,import java.util.ArrayList;
True,src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java,src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java,17,import java.util.Collection;
True,src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java,src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java,18,import java.util.HashMap;
True,src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java,src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java,19,import java.util.HashSet;
True,src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java,src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java,20,import java.util.LinkedHashMap;
True,src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java,src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java,21,import java.util.LinkedHashSet;
True,src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java,src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java,22,import java.util.LinkedList;
True,src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java,src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java,23,import java.util.List;
True,src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java,src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java,24,import java.util.Map;
True,src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java,src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java,25,import java.util.Set;
True,src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java,src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java,26,import java.util.SortedMap;
True,src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java,src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java,27,import java.util.SortedSet;
True,src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java,src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java,28,import java.util.TreeMap;
True,src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java,src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java,29,import java.util.TreeSet;
True,src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java,src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java,58,MockUtil mockUtil = new MockUtil();
False,src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java,src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java,53,ockName name = new MockUtil().getMockName(mock);
True,src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java,src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java,66,MockName name = mockUtil.getMockName(mock);
False,src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java,src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java,55,"eturn ""Mock for "" + ClassNameFinder.classNameForMock(mock) + "", hashCode: "" + mock.hashCode();"
True,src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java,src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java,68,"return ""Mock for "" + mockUtil.getMockSettings(mock).getTypeToMock().getSimpleName() + "", hashCode: "" + mock.hashCode();"
True,src/org/mockito/internal/util/MockCreationValidator.java,src/org/mockito/internal/util/MockCreationValidator.java,8,import org.mockito.internal.util.reflection.Constructors;
False,src/org/mockito/internal/util/MockCreationValidator.java,src/org/mockito/internal/util/MockCreationValidator.java,57,f(serializable && !classToMock.isInterface() && !(Serializable.class.isAssignableFrom(classToMock))) {
True,src/org/mockito/internal/util/MockCreationValidator.java,src/org/mockito/internal/util/MockCreationValidator.java,58,if(serializable
True,src/org/mockito/internal/util/MockCreationValidator.java,src/org/mockito/internal/util/MockCreationValidator.java,59,&& !classToMock.isInterface()
True,src/org/mockito/internal/util/MockCreationValidator.java,src/org/mockito/internal/util/MockCreationValidator.java,60,&& !(Serializable.class.isAssignableFrom(classToMock))
True,src/org/mockito/internal/util/MockCreationValidator.java,src/org/mockito/internal/util/MockCreationValidator.java,61,&& Constructors.noArgConstructorOf(classToMock) == null
False,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,2, Copyright (c) 2007 Mockito contributors
False,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,3, This program is made available under the terms of the MIT License.
True,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,2,* Copyright (c) 2007 Mockito contributors
True,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,3,* This program is made available under the terms of the MIT License.
False,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,63,eturn mock != null && isMockitoMock(mock);
True,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,63,"// double check to avoid classes that have the same interfaces, could be great to have a custom mockito field in the proxy instead of relying on instance fields"
True,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,64,return mock instanceof MockitoMock && isMockitoMock(mock);
False,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,67,eturn mock instanceof MockitoSpy && isMock(mock);
True,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,68,return mock instanceof MockitoSpy;
True,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,71,public boolean isMock(Class mockClass) {
True,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,72,return mockClass != null && MockitoMock.class.isAssignableFrom(mockClass);
True,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,75,public boolean isSpy(Class mockClass) {
True,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,76,return mockClass != null && MockitoSpy.class.isAssignableFrom(mockClass);
True,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,95,public MockCreationSettings getMockSettings(Object mock) {
True,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,96,return getMockHandler(mock).getMockSettings();
True,src/org/mockito/internal/util/MockitoMock.java,src/org/mockito/internal/util/MockitoMock.java,1,package org.mockito.internal.util;
True,src/org/mockito/internal/util/MockitoMock.java,src/org/mockito/internal/util/MockitoMock.java,4,* Mark internally a Mockito mock.
True,src/org/mockito/internal/util/MockitoMock.java,src/org/mockito/internal/util/MockitoMock.java,6,* To be used un conjunction with {@link MockUtil#isMock(Object)}
True,src/org/mockito/internal/util/MockitoMock.java,src/org/mockito/internal/util/MockitoMock.java,8,public interface MockitoMock {
False,src/org/mockito/internal/util/MockitoSpy.java,src/org/mockito/internal/util/MockitoSpy.java,8, Mark internally a MockitoSpy.
True,src/org/mockito/internal/util/MockitoSpy.java,src/org/mockito/internal/util/MockitoSpy.java,8,* Mark internally a Mockito spy.
False,src/org/mockito/internal/util/MockitoSpy.java,src/org/mockito/internal/util/MockitoSpy.java,10, To be used un conjunction with {@link MockUtil#isMock(Object)}
True,src/org/mockito/internal/util/MockitoSpy.java,src/org/mockito/internal/util/MockitoSpy.java,10,* To be used un conjunction with {@link MockUtil#isMock(Object)} or {@link MockUtil#isSpy(Object)}.
False,src/org/mockito/internal/util/MockitoSpy.java,src/org/mockito/internal/util/MockitoSpy.java,12,ublic interface MockitoSpy {
True,src/org/mockito/internal/util/MockitoSpy.java,src/org/mockito/internal/util/MockitoSpy.java,12,public interface MockitoSpy extends MockitoMock {
False,src/org/mockito/internal/util/ObjectMethodsGuru.java,src/org/mockito/internal/util/ObjectMethodsGuru.java,2, Copyright (c) 2007 Mockito contributors
False,src/org/mockito/internal/util/ObjectMethodsGuru.java,src/org/mockito/internal/util/ObjectMethodsGuru.java,3, This program is made available under the terms of the MIT License.
True,src/org/mockito/internal/util/ObjectMethodsGuru.java,src/org/mockito/internal/util/ObjectMethodsGuru.java,2,* Copyright (c) 2007 Mockito contributors
True,src/org/mockito/internal/util/ObjectMethodsGuru.java,src/org/mockito/internal/util/ObjectMethodsGuru.java,3,* This program is made available under the terms of the MIT License.
False,src/org/mockito/internal/util/ObjectMethodsGuru.java,src/org/mockito/internal/util/ObjectMethodsGuru.java,7,mport java.io.Serializable;
False,src/org/mockito/internal/util/ObjectMethodsGuru.java,src/org/mockito/internal/util/ObjectMethodsGuru.java,8,mport java.lang.reflect.Method;
True,src/org/mockito/internal/util/ObjectMethodsGuru.java,src/org/mockito/internal/util/ObjectMethodsGuru.java,10,import java.io.Serializable;
True,src/org/mockito/internal/util/ObjectMethodsGuru.java,src/org/mockito/internal/util/ObjectMethodsGuru.java,11,import java.lang.reflect.Method;
False,src/org/mockito/internal/util/ObjectMethodsGuru.java,src/org/mockito/internal/util/ObjectMethodsGuru.java,22,eturn method.getReturnType() == String.class && method.getParameterTypes().length == 0
True,src/org/mockito/internal/util/ObjectMethodsGuru.java,src/org/mockito/internal/util/ObjectMethodsGuru.java,22,return method.getReturnType() == String.class
True,src/org/mockito/internal/util/ObjectMethodsGuru.java,src/org/mockito/internal/util/ObjectMethodsGuru.java,23,&& method.getParameterTypes().length == 0
False,src/org/mockito/internal/util/ObjectMethodsGuru.java,src/org/mockito/internal/util/ObjectMethodsGuru.java,27,"eturn method.getName().equals(""equals"") && method.getParameterTypes().length == 1 && method.getParameterTypes()[0] == Object.class;"
True,src/org/mockito/internal/util/ObjectMethodsGuru.java,src/org/mockito/internal/util/ObjectMethodsGuru.java,28,"return method.getName().equals(""equals"")"
True,src/org/mockito/internal/util/ObjectMethodsGuru.java,src/org/mockito/internal/util/ObjectMethodsGuru.java,29,&& method.getParameterTypes().length == 1
True,src/org/mockito/internal/util/ObjectMethodsGuru.java,src/org/mockito/internal/util/ObjectMethodsGuru.java,30,&& method.getParameterTypes()[0] == Object.class;
False,src/org/mockito/internal/util/ObjectMethodsGuru.java,src/org/mockito/internal/util/ObjectMethodsGuru.java,31,"eturn method.getName().equals(""hashCode"") && method.getParameterTypes().length == 0;"
True,src/org/mockito/internal/util/ObjectMethodsGuru.java,src/org/mockito/internal/util/ObjectMethodsGuru.java,34,"return method.getName().equals(""hashCode"")"
True,src/org/mockito/internal/util/ObjectMethodsGuru.java,src/org/mockito/internal/util/ObjectMethodsGuru.java,35,&& method.getParameterTypes().length == 0;
False,src/org/mockito/internal/util/ObjectMethodsGuru.java,src/org/mockito/internal/util/ObjectMethodsGuru.java,35,"eturn Comparable.class.isAssignableFrom(method.getDeclaringClass()) && method.getName().equals(""compareTo"")"
False,src/org/mockito/internal/util/ObjectMethodsGuru.java,src/org/mockito/internal/util/ObjectMethodsGuru.java,36,& method.getParameterTypes().length == 1 && method.getParameterTypes()[0] == method.getDeclaringClass();
True,src/org/mockito/internal/util/ObjectMethodsGuru.java,src/org/mockito/internal/util/ObjectMethodsGuru.java,39,return Comparable.class.isAssignableFrom(method.getDeclaringClass())
True,src/org/mockito/internal/util/ObjectMethodsGuru.java,src/org/mockito/internal/util/ObjectMethodsGuru.java,40,"&& method.getName().equals(""compareTo"")"
True,src/org/mockito/internal/util/ObjectMethodsGuru.java,src/org/mockito/internal/util/ObjectMethodsGuru.java,41,&& method.getParameterTypes().length == 1
True,src/org/mockito/internal/util/ObjectMethodsGuru.java,src/org/mockito/internal/util/ObjectMethodsGuru.java,42,&& method.getParameterTypes()[0] == method.getDeclaringClass();
True,src/org/mockito/internal/util/reflection/Constructors.java,src/org/mockito/internal/util/reflection/Constructors.java,1,package org.mockito.internal.util.reflection;
True,src/org/mockito/internal/util/reflection/Constructors.java,src/org/mockito/internal/util/reflection/Constructors.java,3,import java.lang.reflect.Constructor;
True,src/org/mockito/internal/util/reflection/Constructors.java,src/org/mockito/internal/util/reflection/Constructors.java,5,public abstract class Constructors {
True,src/org/mockito/internal/util/reflection/Constructors.java,src/org/mockito/internal/util/reflection/Constructors.java,8,* Returns the no arg constructor of the type if any.
True,src/org/mockito/internal/util/reflection/Constructors.java,src/org/mockito/internal/util/reflection/Constructors.java,10,* @param classToMock The type to look for a no-arg constructor
True,src/org/mockito/internal/util/reflection/Constructors.java,src/org/mockito/internal/util/reflection/Constructors.java,11,* @return The no-arg constructor or null if none is declared.
True,src/org/mockito/internal/util/reflection/Constructors.java,src/org/mockito/internal/util/reflection/Constructors.java,13,public static Constructor<?> noArgConstructorOf(Class<?> classToMock) {
True,src/org/mockito/internal/util/reflection/Constructors.java,src/org/mockito/internal/util/reflection/Constructors.java,14,try {
True,src/org/mockito/internal/util/reflection/Constructors.java,src/org/mockito/internal/util/reflection/Constructors.java,15,return classToMock.getDeclaredConstructor();
True,src/org/mockito/internal/util/reflection/Constructors.java,src/org/mockito/internal/util/reflection/Constructors.java,16,} catch (NoSuchMethodException e) {
True,src/org/mockito/internal/util/reflection/Constructors.java,src/org/mockito/internal/util/reflection/Constructors.java,17,return null;
False,src/org/mockito/internal/util/reflection/Fields.java,src/org/mockito/internal/util/reflection/Fields.java,26, Instance fields declared in thes class and superclasses of the given instance.
True,src/org/mockito/internal/util/reflection/Fields.java,src/org/mockito/internal/util/reflection/Fields.java,26,* Instance fields declared in the class and superclasses of the given instance.
False,src/org/mockito/internal/util/reflection/Fields.java,src/org/mockito/internal/util/reflection/Fields.java,40, Instance fields declared in the of the given instance.
True,src/org/mockito/internal/util/reflection/Fields.java,src/org/mockito/internal/util/reflection/Fields.java,40,* Instance fields declared in the class of the given instance.
False,test/org/mockito/internal/util/MockCreationValidatorTest.java,test/org/mockito/internal/util/MockCreationValidatorTest.java,11,mport java.util.*;
True,test/org/mockito/internal/util/MockCreationValidatorTest.java,test/org/mockito/internal/util/MockCreationValidatorTest.java,11,import java.util.ArrayList;
True,test/org/mockito/internal/util/MockCreationValidatorTest.java,test/org/mockito/internal/util/MockCreationValidatorTest.java,12,import java.util.Collection;
True,test/org/mockito/internal/util/MockCreationValidatorTest.java,test/org/mockito/internal/util/MockCreationValidatorTest.java,13,import java.util.List;
True,test/org/mockito/internal/util/MockCreationValidatorTest.java,test/org/mockito/internal/util/MockCreationValidatorTest.java,14,import java.util.Observer;
True,test/org/mockito/internal/util/MockCreationValidatorTest.java,test/org/mockito/internal/util/MockCreationValidatorTest.java,63,class NonSerializableInnerClassThatHaveAHiddenOneArgConstructor {}
False,test/org/mockito/internal/util/MockCreationValidatorTest.java,test/org/mockito/internal/util/MockCreationValidatorTest.java,61,"alidator.validateSerializable(Observable.class, serializable);"
True,test/org/mockito/internal/util/MockCreationValidatorTest.java,test/org/mockito/internal/util/MockCreationValidatorTest.java,65,"validator.validateSerializable(NonSerializableInnerClassThatHaveAHiddenOneArgConstructor.class, serializable);"
False,test/org/mockito/internal/util/MockUtilTest.java,test/org/mockito/internal/util/MockUtilTest.java,15,mport org.mockito.internal.creation.MockSettingsImpl;
False,test/org/mockito/internal/util/MockUtilTest.java,test/org/mockito/internal/util/MockUtilTest.java,16,mport org.mockitousage.IMethods;
False,test/org/mockito/internal/util/MockUtilTest.java,test/org/mockito/internal/util/MockUtilTest.java,20,mport java.util.Collection;
False,test/org/mockito/internal/util/MockUtilTest.java,test/org/mockito/internal/util/MockUtilTest.java,22,mport java.util.Set;
False,test/org/mockito/internal/util/MockUtilTest.java,test/org/mockito/internal/util/MockUtilTest.java,30,ublic void shouldGetHandler() {
True,test/org/mockito/internal/util/MockUtilTest.java,test/org/mockito/internal/util/MockUtilTest.java,26,public void should_get_handler() {
False,test/org/mockito/internal/util/MockUtilTest.java,test/org/mockito/internal/util/MockUtilTest.java,36,ublic void shouldScreamWhenEnhancedButNotAMockPassed() {
True,test/org/mockito/internal/util/MockUtilTest.java,test/org/mockito/internal/util/MockUtilTest.java,32,public void should_scream_when_enhanced_but_not_a_mock_passed() {
False,test/org/mockito/internal/util/MockUtilTest.java,test/org/mockito/internal/util/MockUtilTest.java,45,ublic void shouldScreamWhenNotAMockPassed() {
True,test/org/mockito/internal/util/MockUtilTest.java,test/org/mockito/internal/util/MockUtilTest.java,41,public void should_scream_when_not_a_mock_passed() {
False,test/org/mockito/internal/util/MockUtilTest.java,test/org/mockito/internal/util/MockUtilTest.java,50,ublic void shouldScreamWhenNullPassed() {
True,test/org/mockito/internal/util/MockUtilTest.java,test/org/mockito/internal/util/MockUtilTest.java,46,public void should_scream_when_null_passed() {
True,test/org/mockito/internal/util/MockUtilTest.java,test/org/mockito/internal/util/MockUtilTest.java,50,@Test
True,test/org/mockito/internal/util/MockUtilTest.java,test/org/mockito/internal/util/MockUtilTest.java,51,public void should_get_mock_settings() {
True,test/org/mockito/internal/util/MockUtilTest.java,test/org/mockito/internal/util/MockUtilTest.java,52,List mock = Mockito.mock(List.class);
True,test/org/mockito/internal/util/MockUtilTest.java,test/org/mockito/internal/util/MockUtilTest.java,53,assertNotNull(mockUtil.getMockSettings(mock));
False,test/org/mockito/internal/util/MockUtilTest.java,test/org/mockito/internal/util/MockUtilTest.java,55,ublic void shouldValidateMock() {
True,test/org/mockito/internal/util/MockUtilTest.java,test/org/mockito/internal/util/MockUtilTest.java,57,public void should_validate_mock() {
True,test/org/mockito/internal/util/MockUtilTest.java,test/org/mockito/internal/util/MockUtilTest.java,60,assertFalse(mockUtil.isMock((Class) null));
True,test/org/mockito/internal/util/MockUtilTest.java,test/org/mockito/internal/util/MockUtilTest.java,61,assertFalse(mockUtil.isMock(String.class));
True,test/org/mockito/internal/util/MockUtilTest.java,test/org/mockito/internal/util/MockUtilTest.java,62,assertTrue(mockUtil.isMock(Mockito.mock(List.class).getClass()));
False,test/org/mockito/internal/util/MockUtilTest.java,test/org/mockito/internal/util/MockUtilTest.java,61,ublic void shouldValidateSpy() {
True,test/org/mockito/internal/util/MockUtilTest.java,test/org/mockito/internal/util/MockUtilTest.java,66,public void should_validate_spy() {
True,test/org/mockito/internal/util/MockUtilTest.java,test/org/mockito/internal/util/MockUtilTest.java,70,assertFalse(mockUtil.isSpy((Class) null));
True,test/org/mockito/internal/util/MockUtilTest.java,test/org/mockito/internal/util/MockUtilTest.java,71,assertFalse(mockUtil.isSpy(String.class));
True,test/org/mockito/internal/util/MockUtilTest.java,test/org/mockito/internal/util/MockUtilTest.java,72,assertFalse(mockUtil.isSpy(Mockito.mock(List.class).getClass()));
True,test/org/mockito/internal/util/MockUtilTest.java,test/org/mockito/internal/util/MockUtilTest.java,73,assertTrue(mockUtil.isSpy(Mockito.spy(new ArrayList()).getClass()));
False,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,8,mport static org.mockito.Matchers.anyObject;
False,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,9,mport static org.mockito.Matchers.anyString;
False,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,10,mport static org.mockito.Mockito.CALLS_REAL_METHODS;
False,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,11,mport static org.mockito.Mockito.inOrder;
False,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,12,mport static org.mockito.Mockito.mock;
False,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,13,mport static org.mockito.Mockito.never;
False,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,14,mport static org.mockito.Mockito.times;
False,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,15,mport static org.mockito.Mockito.verify;
False,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,16,mport static org.mockito.Mockito.when;
False,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,17,mport static org.mockito.Mockito.withSettings;
False,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,19,mport java.io.ByteArrayOutputStream;
False,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,20,mport java.io.Serializable;
False,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,21,mport java.util.ArrayList;
False,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,22,mport java.util.Collections;
False,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,23,mport java.util.List;
False,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,24,mport java.util.Observable;
True,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,21,import java.io.ByteArrayOutputStream;
True,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,22,import java.io.Serializable;
True,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,23,import java.util.ArrayList;
True,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,24,import java.util.Collections;
True,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,25,import java.util.List;
True,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,26,import java.util.Observable;
True,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,28,import static org.mockito.Matchers.anyObject;
True,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,29,import static org.mockito.Matchers.anyString;
True,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,30,import static org.mockito.Mockito.CALLS_REAL_METHODS;
True,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,31,import static org.mockito.Mockito.inOrder;
True,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,32,import static org.mockito.Mockito.mock;
True,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,33,import static org.mockito.Mockito.never;
True,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,34,import static org.mockito.Mockito.times;
True,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,35,import static org.mockito.Mockito.verify;
True,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,36,import static org.mockito.Mockito.when;
True,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,37,import static org.mockito.Mockito.withSettings;
True,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,38,import static org.mockitoutil.SimpleSerializationUtil.deserializeMock;
True,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,39,import static org.mockitoutil.SimpleSerializationUtil.serializeAndBack;
True,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,40,import static org.mockitoutil.SimpleSerializationUtil.serializeMock;
False,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,252,lass CustomAnswersMustImplementSerializableForSerializationToWork
True,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,255,static class CustomAnswersMustImplementSerializableForSerializationToWork
True,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,265,@Test
False,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,318,erializeAndBack((List) imethodsWithExtraInterfacesMock);
True,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,322,Assertions.assertThat((Object) serializeAndBack((List) imethodsWithExtraInterfacesMock))
True,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,323,.isInstanceOf(List.class)
True,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,324,.isInstanceOf(IMethods.class);
True,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,329,static class NotSerializableAndNoDefaultConstructor {
True,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,330,NotSerializableAndNoDefaultConstructor(Observable o) { super(); }
False,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,321,ublic static class FailTestClass{
False,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,322,Mock(serializable=true) Observable observable;
True,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,333,public static class FailTestClass {
True,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,334,@Mock(serializable=true)
True,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,335,NotSerializableAndNoDefaultConstructor notSerializableAndNoDefaultConstructor;
False,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,326,ublic void should_fail_when_serializable_used_with_object_that_dont_implements_Serializable() throws Exception {
True,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,339,public void should_fail_when_serializable_used_with_type_that_dont_implements_Serializable_and_dont_declare_a_no_arg_constructor() throws Exception {
False,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,328,ockitoAnnotations.initMocks(new FailTestClass());
False,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,329,ail();
True,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,341,FailTestClass testClass = new FailTestClass();
True,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,342,MockitoAnnotations.initMocks(testClass);
True,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,343,serializeAndBack(testClass.notSerializableAndNoDefaultConstructor);
True,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,344,"fail(""should have thrown an exception to say the object is not serializable"");"
False,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,331,"ssertions.assertThat(e.getMessage()).contains(Observable.class.getSimpleName()).contains(""serializable()"").contains(""implement Serializable"");"
True,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,346,Assertions.assertThat(e.getMessage())
True,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,347,.contains(NotSerializableAndNoDefaultConstructor.class.getSimpleName())
True,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,348,".contains(""serializable()"")"
True,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,349,".contains(""implement Serializable"")"
True,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,350,".contains(""no-arg constructor"");"
True,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,356,static class SerializableAndNoDefaultConstructor implements Serializable {
True,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,357,SerializableAndNoDefaultConstructor(Observable o) { super(); }
True,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,360,public static class TestClassThatHoldValidField {
True,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,361,@Mock(serializable=true)
True,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,362,SerializableAndNoDefaultConstructor serializableAndNoDefaultConstructor;
True,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,365,@Test
True,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,366,public void should_be_able_to_serialize_type_that_implements_Serializable_but_but_dont_declare_a_no_arg_constructor() throws Exception {
True,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,367,TestClassThatHoldValidField testClass = new TestClassThatHoldValidField();
True,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,368,MockitoAnnotations.initMocks(testClass);
True,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,test/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java,370,serializeAndBack(testClass.serializableAndNoDefaultConstructor);
True,test/org/mockitousage/basicapi/MocksSerializationTest.java,test/org/mockitousage/basicapi/MocksSerializationTest.java,9,import org.junit.Ignore;
True,test/org/mockitousage/basicapi/MocksSerializationTest.java,test/org/mockitousage/basicapi/MocksSerializationTest.java,12,import org.mockito.Mockito;
True,test/org/mockitousage/basicapi/MocksSerializationTest.java,test/org/mockitousage/basicapi/MocksSerializationTest.java,19,import org.mockitoutil.SimpleSerializationUtil;
True,test/org/mockitousage/basicapi/MocksSerializationTest.java,test/org/mockitousage/basicapi/MocksSerializationTest.java,23,import java.io.ObjectStreamException;
True,test/org/mockitousage/basicapi/MocksSerializationTest.java,test/org/mockitousage/basicapi/MocksSerializationTest.java,30,import static org.mockito.Matchers.anyString;
True,test/org/mockitousage/basicapi/MocksSerializationTest.java,test/org/mockitousage/basicapi/MocksSerializationTest.java,32,import static org.mockitoutil.SimpleSerializationUtil.*;
False,test/org/mockitousage/basicapi/MocksSerializationTest.java,test/org/mockitousage/basicapi/MocksSerializationTest.java,336,erializeAndBack((List) mock);
False,test/org/mockitousage/basicapi/MocksSerializationTest.java,test/org/mockitousage/basicapi/MocksSerializationTest.java,337,erializeAndBack((List) mockTwo);
True,test/org/mockitousage/basicapi/MocksSerializationTest.java,test/org/mockitousage/basicapi/MocksSerializationTest.java,342,Assertions.assertThat((Object) serializeAndBack((List) mock))
True,test/org/mockitousage/basicapi/MocksSerializationTest.java,test/org/mockitousage/basicapi/MocksSerializationTest.java,343,.isInstanceOf(List.class)
True,test/org/mockitousage/basicapi/MocksSerializationTest.java,test/org/mockitousage/basicapi/MocksSerializationTest.java,344,.isInstanceOf(IMethods.class);
True,test/org/mockitousage/basicapi/MocksSerializationTest.java,test/org/mockitousage/basicapi/MocksSerializationTest.java,345,Assertions.assertThat((Object) serializeAndBack((List) mockTwo))
True,test/org/mockitousage/basicapi/MocksSerializationTest.java,test/org/mockitousage/basicapi/MocksSerializationTest.java,346,.isInstanceOf(List.class)
True,test/org/mockitousage/basicapi/MocksSerializationTest.java,test/org/mockitousage/basicapi/MocksSerializationTest.java,347,.isInstanceOf(IMethods.class);
True,test/org/mockitousage/basicapi/MocksSerializationTest.java,test/org/mockitousage/basicapi/MocksSerializationTest.java,352,static class NotSerializableAndNoDefaultConstructor {
True,test/org/mockitousage/basicapi/MocksSerializationTest.java,test/org/mockitousage/basicapi/MocksSerializationTest.java,353,NotSerializableAndNoDefaultConstructor(Observable o) { super(); }
False,test/org/mockitousage/basicapi/MocksSerializationTest.java,test/org/mockitousage/basicapi/MocksSerializationTest.java,341,ublic void should_fail_when_serializable_used_with_object_that_dont_implements_Serializable() throws Exception {
True,test/org/mockitousage/basicapi/MocksSerializationTest.java,test/org/mockitousage/basicapi/MocksSerializationTest.java,357,public void should_fail_when_serializable_used_with_type_that_dont_implements_Serializable_and_dont_declare_a_no_arg_constructor() throws Exception {
False,test/org/mockitousage/basicapi/MocksSerializationTest.java,test/org/mockitousage/basicapi/MocksSerializationTest.java,343,"erializeMock(mock(Observable.class, withSettings().serializable()));"
False,test/org/mockitousage/basicapi/MocksSerializationTest.java,test/org/mockitousage/basicapi/MocksSerializationTest.java,344,ail();
True,test/org/mockitousage/basicapi/MocksSerializationTest.java,test/org/mockitousage/basicapi/MocksSerializationTest.java,359,"serializeAndBack(mock(NotSerializableAndNoDefaultConstructor.class, withSettings().serializable()));"
True,test/org/mockitousage/basicapi/MocksSerializationTest.java,test/org/mockitousage/basicapi/MocksSerializationTest.java,360,"fail(""should have thrown an exception to say the object is not serializable"");"
False,test/org/mockitousage/basicapi/MocksSerializationTest.java,test/org/mockitousage/basicapi/MocksSerializationTest.java,346,"ssertions.assertThat(e.getMessage()).contains(Observable.class.getSimpleName()).contains(""serializable()"").contains(""implement Serializable"");"
True,test/org/mockitousage/basicapi/MocksSerializationTest.java,test/org/mockitousage/basicapi/MocksSerializationTest.java,362,Assertions.assertThat(e.getMessage())
True,test/org/mockitousage/basicapi/MocksSerializationTest.java,test/org/mockitousage/basicapi/MocksSerializationTest.java,363,.contains(NotSerializableAndNoDefaultConstructor.class.getSimpleName())
True,test/org/mockitousage/basicapi/MocksSerializationTest.java,test/org/mockitousage/basicapi/MocksSerializationTest.java,364,".contains(""serializable()"")"
True,test/org/mockitousage/basicapi/MocksSerializationTest.java,test/org/mockitousage/basicapi/MocksSerializationTest.java,365,".contains(""implement Serializable"")"
True,test/org/mockitousage/basicapi/MocksSerializationTest.java,test/org/mockitousage/basicapi/MocksSerializationTest.java,366,".contains(""no-arg constructor"");"
True,test/org/mockitousage/basicapi/MocksSerializationTest.java,test/org/mockitousage/basicapi/MocksSerializationTest.java,372,static class SerializableAndNoDefaultConstructor implements Serializable {
True,test/org/mockitousage/basicapi/MocksSerializationTest.java,test/org/mockitousage/basicapi/MocksSerializationTest.java,373,SerializableAndNoDefaultConstructor(Observable o) { super(); }
True,test/org/mockitousage/basicapi/MocksSerializationTest.java,test/org/mockitousage/basicapi/MocksSerializationTest.java,376,@Test
True,test/org/mockitousage/basicapi/MocksSerializationTest.java,test/org/mockitousage/basicapi/MocksSerializationTest.java,377,public void should_be_able_to_serialize_type_that_implements_Serializable_but_but_dont_declare_a_no_arg_constructor() throws Exception {
True,test/org/mockitousage/basicapi/MocksSerializationTest.java,test/org/mockitousage/basicapi/MocksSerializationTest.java,378,serializeAndBack(mock(SerializableAndNoDefaultConstructor.class));
True,test/org/mockitousage/basicapi/MocksSerializationTest.java,test/org/mockitousage/basicapi/MocksSerializationTest.java,383,public static class AClassWithPrivateNoArgConstructor {
True,test/org/mockitousage/basicapi/MocksSerializationTest.java,test/org/mockitousage/basicapi/MocksSerializationTest.java,384,private AClassWithPrivateNoArgConstructor() {}
True,test/org/mockitousage/basicapi/MocksSerializationTest.java,test/org/mockitousage/basicapi/MocksSerializationTest.java,385,List returningSomething() { return Collections.emptyList(); }
True,test/org/mockitousage/basicapi/MocksSerializationTest.java,test/org/mockitousage/basicapi/MocksSerializationTest.java,388,@Test
True,test/org/mockitousage/basicapi/MocksSerializationTest.java,test/org/mockitousage/basicapi/MocksSerializationTest.java,389,public void private_constructor_currently_not_supported_at_the_moment_at_deserialization_time() throws Exception {
True,test/org/mockitousage/basicapi/MocksSerializationTest.java,test/org/mockitousage/basicapi/MocksSerializationTest.java,390,// given
True,test/org/mockitousage/basicapi/MocksSerializationTest.java,test/org/mockitousage/basicapi/MocksSerializationTest.java,391,AClassWithPrivateNoArgConstructor mockWithPrivateConstructor = Mockito.mock(
True,test/org/mockitousage/basicapi/MocksSerializationTest.java,test/org/mockitousage/basicapi/MocksSerializationTest.java,392,"AClassWithPrivateNoArgConstructor.class,"
True,test/org/mockitousage/basicapi/MocksSerializationTest.java,test/org/mockitousage/basicapi/MocksSerializationTest.java,393,Mockito.withSettings().serializable()
True,test/org/mockitousage/basicapi/MocksSerializationTest.java,test/org/mockitousage/basicapi/MocksSerializationTest.java,396,try {
True,test/org/mockitousage/basicapi/MocksSerializationTest.java,test/org/mockitousage/basicapi/MocksSerializationTest.java,397,// when
True,test/org/mockitousage/basicapi/MocksSerializationTest.java,test/org/mockitousage/basicapi/MocksSerializationTest.java,398,SimpleSerializationUtil.serializeAndBack(mockWithPrivateConstructor);
True,test/org/mockitousage/basicapi/MocksSerializationTest.java,test/org/mockitousage/basicapi/MocksSerializationTest.java,399,} catch (ObjectStreamException e) {
True,test/org/mockitousage/basicapi/MocksSerializationTest.java,test/org/mockitousage/basicapi/MocksSerializationTest.java,400,// then
True,test/org/mockitousage/basicapi/MocksSerializationTest.java,test/org/mockitousage/basicapi/MocksSerializationTest.java,401,"Assertions.assertThat(e.getMessage()).contains(""no valid constructor"");"
True,test/org/mockitousage/basicapi/MocksSerializationTest.java,test/org/mockitousage/basicapi/MocksSerializationTest.java,406,@Test
True,test/org/mockitousage/basicapi/MocksSerializationTest.java,test/org/mockitousage/basicapi/MocksSerializationTest.java,407,"@Ignore(""Bug to fix !!! see issue 399"")"
True,test/org/mockitousage/basicapi/MocksSerializationTest.java,test/org/mockitousage/basicapi/MocksSerializationTest.java,408,public void BUG_ISSUE_399_try_some_mocks_with_current_answers() throws Exception {
True,test/org/mockitousage/basicapi/MocksSerializationTest.java,test/org/mockitousage/basicapi/MocksSerializationTest.java,409,"IMethods iMethods = mock(IMethods.class, withSettings().serializable().defaultAnswer(RETURNS_DEEP_STUBS));"
True,test/org/mockitousage/basicapi/MocksSerializationTest.java,test/org/mockitousage/basicapi/MocksSerializationTest.java,411,when(iMethods.iMethodsReturningMethod().linkedListReturningMethod().contains(anyString())).thenReturn(false);
True,test/org/mockitousage/basicapi/MocksSerializationTest.java,test/org/mockitousage/basicapi/MocksSerializationTest.java,413,serializeAndBack(iMethods);
False,test/org/mockitousage/basicapi/ObjectsSerializationTest.java,test/org/mockitousage/basicapi/ObjectsSerializationTest.java,8,mport java.io.Serializable;
True,test/org/mockitousage/basicapi/ObjectsSerializationTest.java,test/org/mockitousage/basicapi/ObjectsSerializationTest.java,11,import java.io.Serializable;
True,test/org/mockitousage/basicapi/ObjectsSerializationTest.java,test/org/mockitousage/basicapi/ObjectsSerializationTest.java,13,import static org.mockitoutil.SimpleSerializationUtil.serializeAndBack;
True,test/org/mockitousage/configuration/ClassCacheVersusClassReloadingTest.java,test/org/mockitousage/configuration/ClassCacheVersusClassReloadingTest.java,12,import org.mockitoutil.SimplePerRealmReloadingClassLoader;
False,test/org/mockitousage/configuration/ClassCacheVersusClassReloadingTest.java,test/org/mockitousage/configuration/ClassCacheVersusClassReloadingTest.java,13,mport java.net.MalformedURLException;
False,test/org/mockitousage/configuration/ClassCacheVersusClassReloadingTest.java,test/org/mockitousage/configuration/ClassCacheVersusClassReloadingTest.java,14,mport java.net.URL;
False,test/org/mockitousage/configuration/ClassCacheVersusClassReloadingTest.java,test/org/mockitousage/configuration/ClassCacheVersusClassReloadingTest.java,15,mport java.net.URLClassLoader;
False,test/org/mockitousage/configuration/ClassCacheVersusClassReloadingTest.java,test/org/mockitousage/configuration/ClassCacheVersusClassReloadingTest.java,33,"ail(""should have raised a ClassCastException when Objenis Cache is enabled"");"
True,test/org/mockitousage/configuration/ClassCacheVersusClassReloadingTest.java,test/org/mockitousage/configuration/ClassCacheVersusClassReloadingTest.java,31,"fail(""should have raised a ClassCastException when Objenesis Cache is enabled"");"
False,test/org/mockitousage/configuration/ClassCacheVersusClassReloadingTest.java,test/org/mockitousage/configuration/ClassCacheVersusClassReloadingTest.java,83,ublic boolean needReload(String qualifiedName) {
True,test/org/mockitousage/configuration/ClassCacheVersusClassReloadingTest.java,test/org/mockitousage/configuration/ClassCacheVersusClassReloadingTest.java,81,public boolean acceptReloadOf(String qualifiedName) {
False,test/org/mockitousage/configuration/ClassCacheVersusClassReloadingTest.java,test/org/mockitousage/configuration/ClassCacheVersusClassReloadingTest.java,104,ublic boolean needReload(String qualifiedName) {
True,test/org/mockitousage/configuration/ClassCacheVersusClassReloadingTest.java,test/org/mockitousage/configuration/ClassCacheVersusClassReloadingTest.java,102,public boolean acceptReloadOf(String qualifiedName) {
False,test/org/mockitousage/configuration/ClassCacheVersusClassReloadingTest.java,test/org/mockitousage/configuration/ClassCacheVersusClassReloadingTest.java,111, Custom classloader to load classes in hierarchic realm.
False,test/org/mockitousage/configuration/ClassCacheVersusClassReloadingTest.java,test/org/mockitousage/configuration/ClassCacheVersusClassReloadingTest.java,113, Each class can be reloaded in the realm if the LoadClassPredicate says so.
False,test/org/mockitousage/configuration/ClassCacheVersusClassReloadingTest.java,test/org/mockitousage/configuration/ClassCacheVersusClassReloadingTest.java,115,rivate static class SimplePerRealmReloadingClassLoader extends URLClassLoader {
False,test/org/mockitousage/configuration/ClassCacheVersusClassReloadingTest.java,test/org/mockitousage/configuration/ClassCacheVersusClassReloadingTest.java,117,rivate ReloadClassPredicate reloadClassPredicate;
False,test/org/mockitousage/configuration/ClassCacheVersusClassReloadingTest.java,test/org/mockitousage/configuration/ClassCacheVersusClassReloadingTest.java,119,ublic SimplePerRealmReloadingClassLoader(ReloadClassPredicate reloadClassPredicate) {
False,test/org/mockitousage/configuration/ClassCacheVersusClassReloadingTest.java,test/org/mockitousage/configuration/ClassCacheVersusClassReloadingTest.java,120,"uper(new URL[]{obtainClassPath(), obtainClassPath(""org.mockito.Mockito"")});"
False,test/org/mockitousage/configuration/ClassCacheVersusClassReloadingTest.java,test/org/mockitousage/configuration/ClassCacheVersusClassReloadingTest.java,121,his.reloadClassPredicate = reloadClassPredicate;
False,test/org/mockitousage/configuration/ClassCacheVersusClassReloadingTest.java,test/org/mockitousage/configuration/ClassCacheVersusClassReloadingTest.java,124,"ublic SimplePerRealmReloadingClassLoader(ClassLoader parentClassLoader, ReloadClassPredicate reloadClassPredicate) {"
False,test/org/mockitousage/configuration/ClassCacheVersusClassReloadingTest.java,test/org/mockitousage/configuration/ClassCacheVersusClassReloadingTest.java,125,uper(new URL[]{
False,test/org/mockitousage/configuration/ClassCacheVersusClassReloadingTest.java,test/org/mockitousage/configuration/ClassCacheVersusClassReloadingTest.java,126,"btainClassPath(),"
False,test/org/mockitousage/configuration/ClassCacheVersusClassReloadingTest.java,test/org/mockitousage/configuration/ClassCacheVersusClassReloadingTest.java,127,"btainClassPath(""org.mockito.Mockito""),"
False,test/org/mockitousage/configuration/ClassCacheVersusClassReloadingTest.java,test/org/mockitousage/configuration/ClassCacheVersusClassReloadingTest.java,128,", parentClassLoader);"
False,test/org/mockitousage/configuration/ClassCacheVersusClassReloadingTest.java,test/org/mockitousage/configuration/ClassCacheVersusClassReloadingTest.java,129,his.reloadClassPredicate = reloadClassPredicate;
False,test/org/mockitousage/configuration/ClassCacheVersusClassReloadingTest.java,test/org/mockitousage/configuration/ClassCacheVersusClassReloadingTest.java,132,rivate static URL obtainClassPath() {
False,test/org/mockitousage/configuration/ClassCacheVersusClassReloadingTest.java,test/org/mockitousage/configuration/ClassCacheVersusClassReloadingTest.java,133,tring className = SimplePerRealmReloadingClassLoader.class.getName();
False,test/org/mockitousage/configuration/ClassCacheVersusClassReloadingTest.java,test/org/mockitousage/configuration/ClassCacheVersusClassReloadingTest.java,134,eturn obtainClassPath(className);
False,test/org/mockitousage/configuration/ClassCacheVersusClassReloadingTest.java,test/org/mockitousage/configuration/ClassCacheVersusClassReloadingTest.java,137,rivate static URL obtainClassPath(String className) {
False,test/org/mockitousage/configuration/ClassCacheVersusClassReloadingTest.java,test/org/mockitousage/configuration/ClassCacheVersusClassReloadingTest.java,138,"tring path = className.replace('.', '/') + "".class"";"
False,test/org/mockitousage/configuration/ClassCacheVersusClassReloadingTest.java,test/org/mockitousage/configuration/ClassCacheVersusClassReloadingTest.java,139,tring url = SimplePerRealmReloadingClassLoader.class.getClassLoader().getResource(path).toExternalForm();
False,test/org/mockitousage/configuration/ClassCacheVersusClassReloadingTest.java,test/org/mockitousage/configuration/ClassCacheVersusClassReloadingTest.java,141,ry {
False,test/org/mockitousage/configuration/ClassCacheVersusClassReloadingTest.java,test/org/mockitousage/configuration/ClassCacheVersusClassReloadingTest.java,142,"eturn new URL(url.substring(0, url.length() - path.length()));"
False,test/org/mockitousage/configuration/ClassCacheVersusClassReloadingTest.java,test/org/mockitousage/configuration/ClassCacheVersusClassReloadingTest.java,143, catch (MalformedURLException e) {
False,test/org/mockitousage/configuration/ClassCacheVersusClassReloadingTest.java,test/org/mockitousage/configuration/ClassCacheVersusClassReloadingTest.java,144,"hrow new RuntimeException(""Classloader couldn't obtain a proper classpath URL"", e);"
False,test/org/mockitousage/configuration/ClassCacheVersusClassReloadingTest.java,test/org/mockitousage/configuration/ClassCacheVersusClassReloadingTest.java,148,Override
False,test/org/mockitousage/configuration/ClassCacheVersusClassReloadingTest.java,test/org/mockitousage/configuration/ClassCacheVersusClassReloadingTest.java,149,ublic Class<?> loadClass(String qualifiedName) throws ClassNotFoundException {
False,test/org/mockitousage/configuration/ClassCacheVersusClassReloadingTest.java,test/org/mockitousage/configuration/ClassCacheVersusClassReloadingTest.java,150,f(reloadClassPredicate.needReload(qualifiedName)) {
False,test/org/mockitousage/configuration/ClassCacheVersusClassReloadingTest.java,test/org/mockitousage/configuration/ClassCacheVersusClassReloadingTest.java,151,/ return customLoadClass(qualifiedName);
False,test/org/mockitousage/configuration/ClassCacheVersusClassReloadingTest.java,test/org/mockitousage/configuration/ClassCacheVersusClassReloadingTest.java,152,lass<?> foundClass = findClass(qualifiedName);
False,test/org/mockitousage/configuration/ClassCacheVersusClassReloadingTest.java,test/org/mockitousage/configuration/ClassCacheVersusClassReloadingTest.java,153,eturn foundClass;
False,test/org/mockitousage/configuration/ClassCacheVersusClassReloadingTest.java,test/org/mockitousage/configuration/ClassCacheVersusClassReloadingTest.java,155,eturn super.loadClass(qualifiedName);
False,test/org/mockitousage/configuration/ClassCacheVersusClassReloadingTest.java,test/org/mockitousage/configuration/ClassCacheVersusClassReloadingTest.java,158,ublic Object doInRealm(String callableCalledInClassLoaderRealm) throws Exception {
False,test/org/mockitousage/configuration/ClassCacheVersusClassReloadingTest.java,test/org/mockitousage/configuration/ClassCacheVersusClassReloadingTest.java,159,allable<?> callableInRealm = (Callable<?>) this.loadClass(callableCalledInClassLoaderRealm).newInstance();
False,test/org/mockitousage/configuration/ClassCacheVersusClassReloadingTest.java,test/org/mockitousage/configuration/ClassCacheVersusClassReloadingTest.java,160,eturn callableInRealm.call();
False,test/org/mockitousage/configuration/ClassCacheVersusClassReloadingTest.java,test/org/mockitousage/configuration/ClassCacheVersusClassReloadingTest.java,163,ublic static interface ReloadClassPredicate {
False,test/org/mockitousage/configuration/ClassCacheVersusClassReloadingTest.java,test/org/mockitousage/configuration/ClassCacheVersusClassReloadingTest.java,164,oolean needReload(String qualifiedName);
False,test/org/mockitousage/configuration/ClassToBeMocked.java,test/org/mockitousage/configuration/ClassToBeMocked.java,8, Some class to mock
True,test/org/mockitousage/configuration/ClassToBeMocked.java,test/org/mockitousage/configuration/ClassToBeMocked.java,8,* Some class to mock that is created via Class.forClass
True,test/org/mockitousage/performance/StubOnlyAvoidMemoryConsumptionTest.java,test/org/mockitousage/performance/StubOnlyAvoidMemoryConsumptionTest.java,1,package org.mockitousage.performance;
True,test/org/mockitousage/performance/StubOnlyAvoidMemoryConsumptionTest.java,test/org/mockitousage/performance/StubOnlyAvoidMemoryConsumptionTest.java,3,import org.junit.Ignore;
True,test/org/mockitousage/performance/StubOnlyAvoidMemoryConsumptionTest.java,test/org/mockitousage/performance/StubOnlyAvoidMemoryConsumptionTest.java,4,import org.junit.Test;
True,test/org/mockitousage/performance/StubOnlyAvoidMemoryConsumptionTest.java,test/org/mockitousage/performance/StubOnlyAvoidMemoryConsumptionTest.java,6,import static org.mockito.Mockito.mock;
True,test/org/mockitousage/performance/StubOnlyAvoidMemoryConsumptionTest.java,test/org/mockitousage/performance/StubOnlyAvoidMemoryConsumptionTest.java,7,import static org.mockito.Mockito.when;
True,test/org/mockitousage/performance/StubOnlyAvoidMemoryConsumptionTest.java,test/org/mockitousage/performance/StubOnlyAvoidMemoryConsumptionTest.java,8,import static org.mockito.Mockito.withSettings;
True,test/org/mockitousage/performance/StubOnlyAvoidMemoryConsumptionTest.java,test/org/mockitousage/performance/StubOnlyAvoidMemoryConsumptionTest.java,10,public class StubOnlyAvoidMemoryConsumptionTest {
True,test/org/mockitousage/performance/StubOnlyAvoidMemoryConsumptionTest.java,test/org/mockitousage/performance/StubOnlyAvoidMemoryConsumptionTest.java,12,@Test
True,test/org/mockitousage/performance/StubOnlyAvoidMemoryConsumptionTest.java,test/org/mockitousage/performance/StubOnlyAvoidMemoryConsumptionTest.java,13,public void using_stub_only_wont_thrown_an_OutOfMemoryError() {
True,test/org/mockitousage/performance/StubOnlyAvoidMemoryConsumptionTest.java,test/org/mockitousage/performance/StubOnlyAvoidMemoryConsumptionTest.java,14,"Object obj = mock(Object.class, withSettings().stubOnly());"
True,test/org/mockitousage/performance/StubOnlyAvoidMemoryConsumptionTest.java,test/org/mockitousage/performance/StubOnlyAvoidMemoryConsumptionTest.java,15,"when(obj.toString()).thenReturn(""asdf"");"
True,test/org/mockitousage/performance/StubOnlyAvoidMemoryConsumptionTest.java,test/org/mockitousage/performance/StubOnlyAvoidMemoryConsumptionTest.java,17,for (int i = 0; i < 1000000; i++) {
True,test/org/mockitousage/performance/StubOnlyAvoidMemoryConsumptionTest.java,test/org/mockitousage/performance/StubOnlyAvoidMemoryConsumptionTest.java,18,obj.toString();
True,test/org/mockitousage/performance/StubOnlyAvoidMemoryConsumptionTest.java,test/org/mockitousage/performance/StubOnlyAvoidMemoryConsumptionTest.java,22,@Test
True,test/org/mockitousage/performance/StubOnlyAvoidMemoryConsumptionTest.java,test/org/mockitousage/performance/StubOnlyAvoidMemoryConsumptionTest.java,23,"@Ignore(""ignored because it will detonate our test suite with an OOM for real"")"
True,test/org/mockitousage/performance/StubOnlyAvoidMemoryConsumptionTest.java,test/org/mockitousage/performance/StubOnlyAvoidMemoryConsumptionTest.java,24,public void without_stub_only_mocks_will_store_invocations_leading_to_an_OutOfMemoryError() {
True,test/org/mockitousage/performance/StubOnlyAvoidMemoryConsumptionTest.java,test/org/mockitousage/performance/StubOnlyAvoidMemoryConsumptionTest.java,25,"Object obj = mock(Object.class, withSettings());"
True,test/org/mockitousage/performance/StubOnlyAvoidMemoryConsumptionTest.java,test/org/mockitousage/performance/StubOnlyAvoidMemoryConsumptionTest.java,26,"when(obj.toString()).thenReturn(""asdf"");"
True,test/org/mockitousage/performance/StubOnlyAvoidMemoryConsumptionTest.java,test/org/mockitousage/performance/StubOnlyAvoidMemoryConsumptionTest.java,28,for (int i = 0; i < 1000000; i++) {
True,test/org/mockitousage/performance/StubOnlyAvoidMemoryConsumptionTest.java,test/org/mockitousage/performance/StubOnlyAvoidMemoryConsumptionTest.java,29,obj.toString();
True,test/org/mockitousage/serialization/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/serialization/AcrossClassLoaderSerializationTest.java,2,* Copyright (c) 2007 Mockito contributors
True,test/org/mockitousage/serialization/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/serialization/AcrossClassLoaderSerializationTest.java,3,* This program is made available under the terms of the MIT License.
True,test/org/mockitousage/serialization/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/serialization/AcrossClassLoaderSerializationTest.java,6,package org.mockitousage.serialization;
True,test/org/mockitousage/serialization/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/serialization/AcrossClassLoaderSerializationTest.java,8,import org.junit.Before;
True,test/org/mockitousage/serialization/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/serialization/AcrossClassLoaderSerializationTest.java,9,import org.junit.Test;
True,test/org/mockitousage/serialization/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/serialization/AcrossClassLoaderSerializationTest.java,10,import org.mockito.Mockito;
True,test/org/mockitousage/serialization/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/serialization/AcrossClassLoaderSerializationTest.java,11,import org.mockitousage.IMethods;
True,test/org/mockitousage/serialization/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/serialization/AcrossClassLoaderSerializationTest.java,12,import org.mockitoutil.SimplePerRealmReloadingClassLoader;
True,test/org/mockitousage/serialization/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/serialization/AcrossClassLoaderSerializationTest.java,13,import org.mockitoutil.SimpleSerializationUtil;
True,test/org/mockitousage/serialization/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/serialization/AcrossClassLoaderSerializationTest.java,15,import java.io.ByteArrayInputStream;
True,test/org/mockitousage/serialization/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/serialization/AcrossClassLoaderSerializationTest.java,16,import java.util.Collections;
True,test/org/mockitousage/serialization/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/serialization/AcrossClassLoaderSerializationTest.java,17,import java.util.List;
True,test/org/mockitousage/serialization/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/serialization/AcrossClassLoaderSerializationTest.java,18,import java.util.concurrent.Callable;
True,test/org/mockitousage/serialization/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/serialization/AcrossClassLoaderSerializationTest.java,21,public class AcrossClassLoaderSerializationTest {
True,test/org/mockitousage/serialization/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/serialization/AcrossClassLoaderSerializationTest.java,23,public IMethods mock;
True,test/org/mockitousage/serialization/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/serialization/AcrossClassLoaderSerializationTest.java,25,@Before
True,test/org/mockitousage/serialization/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/serialization/AcrossClassLoaderSerializationTest.java,26,public void reproduce_CCE_by_creating_a_mock_with_IMethods_before() throws Exception {
True,test/org/mockitousage/serialization/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/serialization/AcrossClassLoaderSerializationTest.java,27,mock = Mockito.mock(IMethods.class);
True,test/org/mockitousage/serialization/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/serialization/AcrossClassLoaderSerializationTest.java,30,@Test
True,test/org/mockitousage/serialization/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/serialization/AcrossClassLoaderSerializationTest.java,31,public void check_that_mock_can_be_serialized_in_a_classloader_and_deserialized_in_another() throws Exception {
True,test/org/mockitousage/serialization/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/serialization/AcrossClassLoaderSerializationTest.java,32,byte[] bytes = create_mock_and_serialize_it_in_class_loader_A();
True,test/org/mockitousage/serialization/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/serialization/AcrossClassLoaderSerializationTest.java,34,Object the_deserialized_mock = read_stream_and_deserialize_it_in_class_loader_B(bytes);
True,test/org/mockitousage/serialization/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/serialization/AcrossClassLoaderSerializationTest.java,37,private Object read_stream_and_deserialize_it_in_class_loader_B(byte[] bytes) throws Exception {
True,test/org/mockitousage/serialization/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/serialization/AcrossClassLoaderSerializationTest.java,38,"return new SimplePerRealmReloadingClassLoader(this.getClass().getClassLoader(), isolating_test_classes())"
True,test/org/mockitousage/serialization/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/serialization/AcrossClassLoaderSerializationTest.java,39,.doInRealm(
True,test/org/mockitousage/serialization/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/serialization/AcrossClassLoaderSerializationTest.java,40,"""org.mockitousage.serialization.AcrossClassLoaderSerializationTest$ReadStreamAndDeserializeIt"","
True,test/org/mockitousage/serialization/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/serialization/AcrossClassLoaderSerializationTest.java,41,"new Class[]{ byte[].class },"
True,test/org/mockitousage/serialization/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/serialization/AcrossClassLoaderSerializationTest.java,42,new Object[]{ bytes }
True,test/org/mockitousage/serialization/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/serialization/AcrossClassLoaderSerializationTest.java,46,private byte[] create_mock_and_serialize_it_in_class_loader_A() throws Exception {
True,test/org/mockitousage/serialization/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/serialization/AcrossClassLoaderSerializationTest.java,47,"return (byte[]) new SimplePerRealmReloadingClassLoader(this.getClass().getClassLoader(), isolating_test_classes())"
True,test/org/mockitousage/serialization/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/serialization/AcrossClassLoaderSerializationTest.java,48,".doInRealm(""org.mockitousage.serialization.AcrossClassLoaderSerializationTest$CreateMockAndSerializeIt"");"
True,test/org/mockitousage/serialization/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/serialization/AcrossClassLoaderSerializationTest.java,52,private SimplePerRealmReloadingClassLoader.ReloadClassPredicate isolating_test_classes() {
True,test/org/mockitousage/serialization/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/serialization/AcrossClassLoaderSerializationTest.java,53,return new SimplePerRealmReloadingClassLoader.ReloadClassPredicate() {
True,test/org/mockitousage/serialization/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/serialization/AcrossClassLoaderSerializationTest.java,54,public boolean acceptReloadOf(String qualifiedName) {
True,test/org/mockitousage/serialization/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/serialization/AcrossClassLoaderSerializationTest.java,55,"return qualifiedName.contains(""org.mockitousage"")"
True,test/org/mockitousage/serialization/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/serialization/AcrossClassLoaderSerializationTest.java,56,"|| qualifiedName.contains(""org.mockitoutil"")"
True,test/org/mockitousage/serialization/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/serialization/AcrossClassLoaderSerializationTest.java,63,// see create_mock_and_serialize_it_in_class_loader_A
True,test/org/mockitousage/serialization/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/serialization/AcrossClassLoaderSerializationTest.java,64,public static class CreateMockAndSerializeIt implements Callable<byte[]> {
True,test/org/mockitousage/serialization/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/serialization/AcrossClassLoaderSerializationTest.java,65,public byte[] call() throws Exception {
True,test/org/mockitousage/serialization/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/serialization/AcrossClassLoaderSerializationTest.java,66,AClassToBeMockedInThisTestOnlyAndInCallablesOnly mock = Mockito.mock(
True,test/org/mockitousage/serialization/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/serialization/AcrossClassLoaderSerializationTest.java,67,"AClassToBeMockedInThisTestOnlyAndInCallablesOnly.class,"
True,test/org/mockitousage/serialization/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/serialization/AcrossClassLoaderSerializationTest.java,68,Mockito.withSettings().serializable()
True,test/org/mockitousage/serialization/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/serialization/AcrossClassLoaderSerializationTest.java,70,// use MethodProxy before
True,test/org/mockitousage/serialization/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/serialization/AcrossClassLoaderSerializationTest.java,71,mock.returningSomething();
True,test/org/mockitousage/serialization/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/serialization/AcrossClassLoaderSerializationTest.java,73,return SimpleSerializationUtil.serializeMock(mock).toByteArray();
True,test/org/mockitousage/serialization/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/serialization/AcrossClassLoaderSerializationTest.java,77,// see read_stream_and_deserialize_it_in_class_loader_B
True,test/org/mockitousage/serialization/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/serialization/AcrossClassLoaderSerializationTest.java,78,public static class ReadStreamAndDeserializeIt implements Callable<Object> {
True,test/org/mockitousage/serialization/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/serialization/AcrossClassLoaderSerializationTest.java,79,private byte[] bytes;
True,test/org/mockitousage/serialization/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/serialization/AcrossClassLoaderSerializationTest.java,81,public ReadStreamAndDeserializeIt(byte[] bytes) {
True,test/org/mockitousage/serialization/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/serialization/AcrossClassLoaderSerializationTest.java,82,this.bytes = bytes;
True,test/org/mockitousage/serialization/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/serialization/AcrossClassLoaderSerializationTest.java,85,public Object call() throws Exception {
True,test/org/mockitousage/serialization/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/serialization/AcrossClassLoaderSerializationTest.java,86,ByteArrayInputStream to_unserialize = new ByteArrayInputStream(bytes);
True,test/org/mockitousage/serialization/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/serialization/AcrossClassLoaderSerializationTest.java,87,return SimpleSerializationUtil.deserializeMock(
True,test/org/mockitousage/serialization/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/serialization/AcrossClassLoaderSerializationTest.java,88,"to_unserialize,"
True,test/org/mockitousage/serialization/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/serialization/AcrossClassLoaderSerializationTest.java,89,AClassToBeMockedInThisTestOnlyAndInCallablesOnly.class
True,test/org/mockitousage/serialization/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/serialization/AcrossClassLoaderSerializationTest.java,95,public static class AClassToBeMockedInThisTestOnlyAndInCallablesOnly {
True,test/org/mockitousage/serialization/AcrossClassLoaderSerializationTest.java,test/org/mockitousage/serialization/AcrossClassLoaderSerializationTest.java,96,List returningSomething() { return Collections.emptyList(); }
True,test/org/mockitousage/serialization/DeserializeMockFromFile.java,test/org/mockitousage/serialization/DeserializeMockFromFile.java,2,* Copyright (c) 2007 Mockito contributors
True,test/org/mockitousage/serialization/DeserializeMockFromFile.java,test/org/mockitousage/serialization/DeserializeMockFromFile.java,3,* This program is made available under the terms of the MIT License.
True,test/org/mockitousage/serialization/DeserializeMockFromFile.java,test/org/mockitousage/serialization/DeserializeMockFromFile.java,6,package org.mockitousage.serialization;
True,test/org/mockitousage/serialization/DeserializeMockFromFile.java,test/org/mockitousage/serialization/DeserializeMockFromFile.java,8,import org.mockito.Mockito;
True,test/org/mockitousage/serialization/DeserializeMockFromFile.java,test/org/mockitousage/serialization/DeserializeMockFromFile.java,10,import java.io.BufferedInputStream;
True,test/org/mockitousage/serialization/DeserializeMockFromFile.java,test/org/mockitousage/serialization/DeserializeMockFromFile.java,11,import java.io.FileInputStream;
True,test/org/mockitousage/serialization/DeserializeMockFromFile.java,test/org/mockitousage/serialization/DeserializeMockFromFile.java,12,import java.io.InputStream;
True,test/org/mockitousage/serialization/DeserializeMockFromFile.java,test/org/mockitousage/serialization/DeserializeMockFromFile.java,13,import java.io.ObjectInputStream;
True,test/org/mockitousage/serialization/DeserializeMockFromFile.java,test/org/mockitousage/serialization/DeserializeMockFromFile.java,14,import java.util.Observable;
True,test/org/mockitousage/serialization/DeserializeMockFromFile.java,test/org/mockitousage/serialization/DeserializeMockFromFile.java,17,* These classes are here purely to show that mocks can be serialized in a different VM
True,test/org/mockitousage/serialization/DeserializeMockFromFile.java,test/org/mockitousage/serialization/DeserializeMockFromFile.java,19,"* Just run as standalone app {@link SerializeMockToFile}, then {@link DeserializeMockFromFile}"
True,test/org/mockitousage/serialization/DeserializeMockFromFile.java,test/org/mockitousage/serialization/DeserializeMockFromFile.java,22,public class DeserializeMockFromFile {
True,test/org/mockitousage/serialization/DeserializeMockFromFile.java,test/org/mockitousage/serialization/DeserializeMockFromFile.java,24,public static void main(String[] args) {
True,test/org/mockitousage/serialization/DeserializeMockFromFile.java,test/org/mockitousage/serialization/DeserializeMockFromFile.java,25,"Observable o = (Observable) deSerializeObject(""mockito_mock.ser"");"
True,test/org/mockitousage/serialization/DeserializeMockFromFile.java,test/org/mockitousage/serialization/DeserializeMockFromFile.java,27,// then verify
True,test/org/mockitousage/serialization/DeserializeMockFromFile.java,test/org/mockitousage/serialization/DeserializeMockFromFile.java,28,Mockito.verify(o).addObserver(null);
True,test/org/mockitousage/serialization/DeserializeMockFromFile.java,test/org/mockitousage/serialization/DeserializeMockFromFile.java,29,Mockito.verify(o).countObservers();
True,test/org/mockitousage/serialization/DeserializeMockFromFile.java,test/org/mockitousage/serialization/DeserializeMockFromFile.java,32,private static Object deSerializeObject(String filename) {
True,test/org/mockitousage/serialization/DeserializeMockFromFile.java,test/org/mockitousage/serialization/DeserializeMockFromFile.java,33,InputStream is = null;
True,test/org/mockitousage/serialization/DeserializeMockFromFile.java,test/org/mockitousage/serialization/DeserializeMockFromFile.java,34,ObjectInputStream ois = null;
True,test/org/mockitousage/serialization/DeserializeMockFromFile.java,test/org/mockitousage/serialization/DeserializeMockFromFile.java,35,Object returnObject = null;
True,test/org/mockitousage/serialization/DeserializeMockFromFile.java,test/org/mockitousage/serialization/DeserializeMockFromFile.java,36,try {
True,test/org/mockitousage/serialization/DeserializeMockFromFile.java,test/org/mockitousage/serialization/DeserializeMockFromFile.java,38,is = new BufferedInputStream(new FileInputStream(filename));
True,test/org/mockitousage/serialization/DeserializeMockFromFile.java,test/org/mockitousage/serialization/DeserializeMockFromFile.java,39,ois = new ObjectInputStream(is);
True,test/org/mockitousage/serialization/DeserializeMockFromFile.java,test/org/mockitousage/serialization/DeserializeMockFromFile.java,40,returnObject = ois.readObject();
True,test/org/mockitousage/serialization/DeserializeMockFromFile.java,test/org/mockitousage/serialization/DeserializeMockFromFile.java,42,} catch (Exception e) {
True,test/org/mockitousage/serialization/DeserializeMockFromFile.java,test/org/mockitousage/serialization/DeserializeMockFromFile.java,43,e.printStackTrace();
True,test/org/mockitousage/serialization/DeserializeMockFromFile.java,test/org/mockitousage/serialization/DeserializeMockFromFile.java,44,} finally {
True,test/org/mockitousage/serialization/DeserializeMockFromFile.java,test/org/mockitousage/serialization/DeserializeMockFromFile.java,45,try {
True,test/org/mockitousage/serialization/DeserializeMockFromFile.java,test/org/mockitousage/serialization/DeserializeMockFromFile.java,46,if (is != null)
True,test/org/mockitousage/serialization/DeserializeMockFromFile.java,test/org/mockitousage/serialization/DeserializeMockFromFile.java,47,is.close();
True,test/org/mockitousage/serialization/DeserializeMockFromFile.java,test/org/mockitousage/serialization/DeserializeMockFromFile.java,48,} catch (Exception e) {
True,test/org/mockitousage/serialization/DeserializeMockFromFile.java,test/org/mockitousage/serialization/DeserializeMockFromFile.java,49,e.printStackTrace();
True,test/org/mockitousage/serialization/DeserializeMockFromFile.java,test/org/mockitousage/serialization/DeserializeMockFromFile.java,51,try {
True,test/org/mockitousage/serialization/DeserializeMockFromFile.java,test/org/mockitousage/serialization/DeserializeMockFromFile.java,52,if (ois != null)
True,test/org/mockitousage/serialization/DeserializeMockFromFile.java,test/org/mockitousage/serialization/DeserializeMockFromFile.java,53,ois.close();
True,test/org/mockitousage/serialization/DeserializeMockFromFile.java,test/org/mockitousage/serialization/DeserializeMockFromFile.java,54,} catch (Exception e) {
True,test/org/mockitousage/serialization/DeserializeMockFromFile.java,test/org/mockitousage/serialization/DeserializeMockFromFile.java,55,e.printStackTrace();
True,test/org/mockitousage/serialization/DeserializeMockFromFile.java,test/org/mockitousage/serialization/DeserializeMockFromFile.java,58,return returnObject;
True,test/org/mockitousage/serialization/ParallelSerializationTest.java,test/org/mockitousage/serialization/ParallelSerializationTest.java,2,* Copyright (c) 2007 Mockito contributors
True,test/org/mockitousage/serialization/ParallelSerializationTest.java,test/org/mockitousage/serialization/ParallelSerializationTest.java,3,* This program is made available under the terms of the MIT License.
True,test/org/mockitousage/serialization/ParallelSerializationTest.java,test/org/mockitousage/serialization/ParallelSerializationTest.java,6,package org.mockitousage.serialization;
True,test/org/mockitousage/serialization/ParallelSerializationTest.java,test/org/mockitousage/serialization/ParallelSerializationTest.java,8,import org.junit.Test;
True,test/org/mockitousage/serialization/ParallelSerializationTest.java,test/org/mockitousage/serialization/ParallelSerializationTest.java,9,import org.mockitousage.IMethods;
True,test/org/mockitousage/serialization/ParallelSerializationTest.java,test/org/mockitousage/serialization/ParallelSerializationTest.java,10,import org.mockitoutil.SimpleSerializationUtil;
True,test/org/mockitousage/serialization/ParallelSerializationTest.java,test/org/mockitousage/serialization/ParallelSerializationTest.java,12,import java.util.ArrayList;
True,test/org/mockitousage/serialization/ParallelSerializationTest.java,test/org/mockitousage/serialization/ParallelSerializationTest.java,13,import java.util.List;
True,test/org/mockitousage/serialization/ParallelSerializationTest.java,test/org/mockitousage/serialization/ParallelSerializationTest.java,14,import java.util.concurrent.*;
True,test/org/mockitousage/serialization/ParallelSerializationTest.java,test/org/mockitousage/serialization/ParallelSerializationTest.java,16,import static org.mockito.Mockito.mock;
True,test/org/mockitousage/serialization/ParallelSerializationTest.java,test/org/mockitousage/serialization/ParallelSerializationTest.java,17,import static org.mockito.Mockito.withSettings;
True,test/org/mockitousage/serialization/ParallelSerializationTest.java,test/org/mockitousage/serialization/ParallelSerializationTest.java,19,public class ParallelSerializationTest {
True,test/org/mockitousage/serialization/ParallelSerializationTest.java,test/org/mockitousage/serialization/ParallelSerializationTest.java,21,@Test
True,test/org/mockitousage/serialization/ParallelSerializationTest.java,test/org/mockitousage/serialization/ParallelSerializationTest.java,22,"public void single_mock_being_serialized_and_deserialized_in_different_classloaders_by_multiple_threads() throws ExecutionException, InterruptedException {"
True,test/org/mockitousage/serialization/ParallelSerializationTest.java,test/org/mockitousage/serialization/ParallelSerializationTest.java,23,// given
True,test/org/mockitousage/serialization/ParallelSerializationTest.java,test/org/mockitousage/serialization/ParallelSerializationTest.java,24,int iterations = 2;
True,test/org/mockitousage/serialization/ParallelSerializationTest.java,test/org/mockitousage/serialization/ParallelSerializationTest.java,25,int threadingFactor = 200;
True,test/org/mockitousage/serialization/ParallelSerializationTest.java,test/org/mockitousage/serialization/ParallelSerializationTest.java,26,final ExecutorService executorService = Executors.newFixedThreadPool(threadingFactor);
True,test/org/mockitousage/serialization/ParallelSerializationTest.java,test/org/mockitousage/serialization/ParallelSerializationTest.java,27,"final IMethods iMethods = mock(IMethods.class, withSettings().serializable());"
True,test/org/mockitousage/serialization/ParallelSerializationTest.java,test/org/mockitousage/serialization/ParallelSerializationTest.java,29,// when
True,test/org/mockitousage/serialization/ParallelSerializationTest.java,test/org/mockitousage/serialization/ParallelSerializationTest.java,30,for (int i = 0; i <= iterations; i++) {
True,test/org/mockitousage/serialization/ParallelSerializationTest.java,test/org/mockitousage/serialization/ParallelSerializationTest.java,31,List<Future> futures = new ArrayList<Future>(threadingFactor);
True,test/org/mockitousage/serialization/ParallelSerializationTest.java,test/org/mockitousage/serialization/ParallelSerializationTest.java,32,final CyclicBarrier barrier_that_will_wait_until_threads_are_ready = new CyclicBarrier(threadingFactor);
True,test/org/mockitousage/serialization/ParallelSerializationTest.java,test/org/mockitousage/serialization/ParallelSerializationTest.java,34,// prepare all threads by submitting a callable
True,test/org/mockitousage/serialization/ParallelSerializationTest.java,test/org/mockitousage/serialization/ParallelSerializationTest.java,35,//  - that will serialize the mock a 'threadingFactor' times
True,test/org/mockitousage/serialization/ParallelSerializationTest.java,test/org/mockitousage/serialization/ParallelSerializationTest.java,36,//  - that will use the mock a 'threadingFactor' times
True,test/org/mockitousage/serialization/ParallelSerializationTest.java,test/org/mockitousage/serialization/ParallelSerializationTest.java,37,for (int j = 0; j < threadingFactor; j++) {
True,test/org/mockitousage/serialization/ParallelSerializationTest.java,test/org/mockitousage/serialization/ParallelSerializationTest.java,38,// submit a callable that will serialize the mock 'iMethods'
True,test/org/mockitousage/serialization/ParallelSerializationTest.java,test/org/mockitousage/serialization/ParallelSerializationTest.java,39,futures.add(executorService.submit(new Callable<Object>() {
True,test/org/mockitousage/serialization/ParallelSerializationTest.java,test/org/mockitousage/serialization/ParallelSerializationTest.java,40,public Object call() throws Exception {
True,test/org/mockitousage/serialization/ParallelSerializationTest.java,test/org/mockitousage/serialization/ParallelSerializationTest.java,41,barrier_that_will_wait_until_threads_are_ready.await();
True,test/org/mockitousage/serialization/ParallelSerializationTest.java,test/org/mockitousage/serialization/ParallelSerializationTest.java,42,iMethods.arrayReturningMethod();
True,test/org/mockitousage/serialization/ParallelSerializationTest.java,test/org/mockitousage/serialization/ParallelSerializationTest.java,44,return SimpleSerializationUtil.serializeMock(iMethods).toByteArray();
True,test/org/mockitousage/serialization/ParallelSerializationTest.java,test/org/mockitousage/serialization/ParallelSerializationTest.java,48,// submit a callable that will only use the mock 'iMethods'
True,test/org/mockitousage/serialization/ParallelSerializationTest.java,test/org/mockitousage/serialization/ParallelSerializationTest.java,49,executorService.submit(new Callable<Object>() {
True,test/org/mockitousage/serialization/ParallelSerializationTest.java,test/org/mockitousage/serialization/ParallelSerializationTest.java,50,public Object call() throws Exception {
True,test/org/mockitousage/serialization/ParallelSerializationTest.java,test/org/mockitousage/serialization/ParallelSerializationTest.java,51,barrier_that_will_wait_until_threads_are_ready.await();
True,test/org/mockitousage/serialization/ParallelSerializationTest.java,test/org/mockitousage/serialization/ParallelSerializationTest.java,52,return iMethods.longObjectReturningMethod();
True,test/org/mockitousage/serialization/ParallelSerializationTest.java,test/org/mockitousage/serialization/ParallelSerializationTest.java,57,// ensure we are getting the futures
True,test/org/mockitousage/serialization/ParallelSerializationTest.java,test/org/mockitousage/serialization/ParallelSerializationTest.java,58,for (Future future : futures) {
True,test/org/mockitousage/serialization/ParallelSerializationTest.java,test/org/mockitousage/serialization/ParallelSerializationTest.java,59,future.get();
True,test/org/mockitousage/serialization/SerializeMockToFile.java,test/org/mockitousage/serialization/SerializeMockToFile.java,2,* Copyright (c) 2007 Mockito contributors
True,test/org/mockitousage/serialization/SerializeMockToFile.java,test/org/mockitousage/serialization/SerializeMockToFile.java,3,* This program is made available under the terms of the MIT License.
True,test/org/mockitousage/serialization/SerializeMockToFile.java,test/org/mockitousage/serialization/SerializeMockToFile.java,6,package org.mockitousage.serialization;
True,test/org/mockitousage/serialization/SerializeMockToFile.java,test/org/mockitousage/serialization/SerializeMockToFile.java,8,import org.mockito.Mockito;
True,test/org/mockitousage/serialization/SerializeMockToFile.java,test/org/mockitousage/serialization/SerializeMockToFile.java,9,import org.mockito.cglib.proxy.MethodInterceptor;
True,test/org/mockitousage/serialization/SerializeMockToFile.java,test/org/mockitousage/serialization/SerializeMockToFile.java,10,import org.mockito.cglib.proxy.MethodProxy;
True,test/org/mockitousage/serialization/SerializeMockToFile.java,test/org/mockitousage/serialization/SerializeMockToFile.java,12,import java.io.BufferedOutputStream;
True,test/org/mockitousage/serialization/SerializeMockToFile.java,test/org/mockitousage/serialization/SerializeMockToFile.java,13,import java.io.FileOutputStream;
True,test/org/mockitousage/serialization/SerializeMockToFile.java,test/org/mockitousage/serialization/SerializeMockToFile.java,14,import java.io.ObjectOutputStream;
True,test/org/mockitousage/serialization/SerializeMockToFile.java,test/org/mockitousage/serialization/SerializeMockToFile.java,15,import java.io.OutputStream;
True,test/org/mockitousage/serialization/SerializeMockToFile.java,test/org/mockitousage/serialization/SerializeMockToFile.java,16,import java.io.Serializable;
True,test/org/mockitousage/serialization/SerializeMockToFile.java,test/org/mockitousage/serialization/SerializeMockToFile.java,17,import java.lang.reflect.Method;
True,test/org/mockitousage/serialization/SerializeMockToFile.java,test/org/mockitousage/serialization/SerializeMockToFile.java,18,import java.util.Observable;
True,test/org/mockitousage/serialization/SerializeMockToFile.java,test/org/mockitousage/serialization/SerializeMockToFile.java,21,* These classes are here purely to show that mocks can be serialized in a different VM
True,test/org/mockitousage/serialization/SerializeMockToFile.java,test/org/mockitousage/serialization/SerializeMockToFile.java,23,"* Just run as standalone app {@link SerializeMockToFile}, then {@link DeserializeMockFromFile}"
True,test/org/mockitousage/serialization/SerializeMockToFile.java,test/org/mockitousage/serialization/SerializeMockToFile.java,25,public class SerializeMockToFile {
True,test/org/mockitousage/serialization/SerializeMockToFile.java,test/org/mockitousage/serialization/SerializeMockToFile.java,27,public static void main(String[] args) {
True,test/org/mockitousage/serialization/SerializeMockToFile.java,test/org/mockitousage/serialization/SerializeMockToFile.java,29,Observable observable = Mockito.mock(
True,test/org/mockitousage/serialization/SerializeMockToFile.java,test/org/mockitousage/serialization/SerializeMockToFile.java,30,"Observable.class,"
True,test/org/mockitousage/serialization/SerializeMockToFile.java,test/org/mockitousage/serialization/SerializeMockToFile.java,31,Mockito.withSettings().serializable()
True,test/org/mockitousage/serialization/SerializeMockToFile.java,test/org/mockitousage/serialization/SerializeMockToFile.java,34,// play with mock
True,test/org/mockitousage/serialization/SerializeMockToFile.java,test/org/mockitousage/serialization/SerializeMockToFile.java,35,observable.addObserver(null);
True,test/org/mockitousage/serialization/SerializeMockToFile.java,test/org/mockitousage/serialization/SerializeMockToFile.java,36,observable.countObservers();
True,test/org/mockitousage/serialization/SerializeMockToFile.java,test/org/mockitousage/serialization/SerializeMockToFile.java,38,// serialize to file
True,test/org/mockitousage/serialization/SerializeMockToFile.java,test/org/mockitousage/serialization/SerializeMockToFile.java,39,"serializeMock(observable, ""mockito_mock.ser"");"
True,test/org/mockitousage/serialization/SerializeMockToFile.java,test/org/mockitousage/serialization/SerializeMockToFile.java,42,"private static void serializeMock(Object obj, String filename) {"
True,test/org/mockitousage/serialization/SerializeMockToFile.java,test/org/mockitousage/serialization/SerializeMockToFile.java,43,OutputStream os = null;
True,test/org/mockitousage/serialization/SerializeMockToFile.java,test/org/mockitousage/serialization/SerializeMockToFile.java,44,ObjectOutputStream oos = null;
True,test/org/mockitousage/serialization/SerializeMockToFile.java,test/org/mockitousage/serialization/SerializeMockToFile.java,46,try {
True,test/org/mockitousage/serialization/SerializeMockToFile.java,test/org/mockitousage/serialization/SerializeMockToFile.java,47,"os = new BufferedOutputStream(new FileOutputStream(filename, false));"
True,test/org/mockitousage/serialization/SerializeMockToFile.java,test/org/mockitousage/serialization/SerializeMockToFile.java,48,oos = new ObjectOutputStream(os);
True,test/org/mockitousage/serialization/SerializeMockToFile.java,test/org/mockitousage/serialization/SerializeMockToFile.java,50,oos.writeObject(obj);
True,test/org/mockitousage/serialization/SerializeMockToFile.java,test/org/mockitousage/serialization/SerializeMockToFile.java,52,} catch (Exception e) {
True,test/org/mockitousage/serialization/SerializeMockToFile.java,test/org/mockitousage/serialization/SerializeMockToFile.java,53,e.printStackTrace();
True,test/org/mockitousage/serialization/SerializeMockToFile.java,test/org/mockitousage/serialization/SerializeMockToFile.java,54,} finally {
True,test/org/mockitousage/serialization/SerializeMockToFile.java,test/org/mockitousage/serialization/SerializeMockToFile.java,55,try {
True,test/org/mockitousage/serialization/SerializeMockToFile.java,test/org/mockitousage/serialization/SerializeMockToFile.java,56,if (os != null) os.close();
True,test/org/mockitousage/serialization/SerializeMockToFile.java,test/org/mockitousage/serialization/SerializeMockToFile.java,57,} catch (Exception e) {
True,test/org/mockitousage/serialization/SerializeMockToFile.java,test/org/mockitousage/serialization/SerializeMockToFile.java,58,e.printStackTrace();
True,test/org/mockitousage/serialization/SerializeMockToFile.java,test/org/mockitousage/serialization/SerializeMockToFile.java,60,try {
True,test/org/mockitousage/serialization/SerializeMockToFile.java,test/org/mockitousage/serialization/SerializeMockToFile.java,61,if (oos != null) oos.close();
True,test/org/mockitousage/serialization/SerializeMockToFile.java,test/org/mockitousage/serialization/SerializeMockToFile.java,62,} catch (Exception e) {
True,test/org/mockitousage/serialization/SerializeMockToFile.java,test/org/mockitousage/serialization/SerializeMockToFile.java,63,e.printStackTrace();
True,test/org/mockitousage/serialization/SerializeMockToFile.java,test/org/mockitousage/serialization/SerializeMockToFile.java,69,"private static class DefaultMethodInterceptor implements MethodInterceptor, Serializable {"
True,test/org/mockitousage/serialization/SerializeMockToFile.java,test/org/mockitousage/serialization/SerializeMockToFile.java,70,private static final long serialVersionUID = 6606245777399406255L;
True,test/org/mockitousage/serialization/SerializeMockToFile.java,test/org/mockitousage/serialization/SerializeMockToFile.java,72,"public Object intercept(Object o, Method method, Object[] objects, MethodProxy methodProxy) throws Throwable {"
True,test/org/mockitousage/serialization/SerializeMockToFile.java,test/org/mockitousage/serialization/SerializeMockToFile.java,73,"return methodProxy.invokeSuper(o, objects);"
False,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,8,mport static org.mockito.AdditionalMatchers.*;
False,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,9,mport static org.mockito.Matchers.*;
False,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,10,mport static org.mockito.Mockito.*;
True,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,9,import org.junit.Ignore;
True,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,20,import static org.mockito.AdditionalMatchers.aryEq;
True,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,21,import static org.mockito.Matchers.anyInt;
True,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,22,import static org.mockito.Matchers.eq;
True,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,23,import static org.mockito.Matchers.matches;
True,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,24,import static org.mockito.Mockito.atLeastOnce;
True,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,25,import static org.mockito.Mockito.never;
True,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,26,import static org.mockito.Mockito.verify;
True,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,27,import static org.mockito.Mockito.verifyNoMoreInteractions;
True,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,28,import static org.mockito.Mockito.verifyZeroInteractions;
False,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,359,ublic void should_print_method_name_and_arguments_of_other_interactions() throws Exception {
True,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,366,public void should_print_method_name_and_arguments_of_other_interactions_with_different_methods() throws Exception {
True,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,381,@Test
True,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,382,"@Ignore(""issue 380 related"")"
True,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,383,public void should_print_method_name_and_arguments_of_other_interactions_of_same_method() throws Exception {
True,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,384,try {
True,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,385,mock.forByte((byte) 25);
True,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,386,mock.forByte((byte) 12);
True,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,388,verify(mock).forByte((byte) 42);
True,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,389,fail();
True,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,390,} catch (WantedButNotInvoked e) {
True,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,391,System.out.println(e);
True,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,392,"assertContains(""iMethods.forByte(42)"", e.getMessage());"
True,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,393,"assertContains(""iMethods.forByte(25)"", e.getMessage());"
True,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,394,"assertContains(""iMethods.forByte(12)"", e.getMessage());"
True,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,398,@Test
True,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,399,"@Ignore(""issue 380 related"")"
True,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,400,public void test1() {
True,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,401,AnInterface m = Mockito.mock(AnInterface.class);
True,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,403,for (int i = 1; i <= 2; i++) {
True,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,404,m.foo(i);
True,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,407,verify(m).foo(1);
True,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,408,verify(m).foo(2);
True,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,409,verify(m).foo(3); // XXX: doesn't mention the parameters of foo(1) and foo(2)
True,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,410,verify(m).foo(4);
True,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,413,@Test
True,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,414,"@Ignore(""issue 380 related"")"
True,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,415,public void test2() {
True,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,416,AnInterface m = Mockito.mock(AnInterface.class);
True,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,418,for (int i = 1; i <= 4; i++) {
True,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,419,m.foo(i);
True,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,422,verify(m).foo(1);
True,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,423,verify(m).foo(2);
True,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,424,verify(m).foo(5); // XXX: doesn't mention foo(4) at all
True,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,427,public interface AnInterface {
True,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,test/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java,428,void foo(int i);
True,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,1,package org.mockitoutil;
True,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,3,import java.net.MalformedURLException;
True,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,4,import java.net.URL;
True,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,5,import java.net.URLClassLoader;
True,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,6,import java.util.HashMap;
True,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,7,import java.util.Map;
True,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,8,import java.util.concurrent.Callable;
True,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,11,* Custom classloader to load classes in hierarchic realm.
True,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,13,* Each class can be reloaded in the realm if the LoadClassPredicate says so.
True,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,15,public class SimplePerRealmReloadingClassLoader extends URLClassLoader {
True,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,17,"private final Map<String,Class> classHashMap = new HashMap<String, Class>();"
True,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,18,private ReloadClassPredicate reloadClassPredicate;
True,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,20,public SimplePerRealmReloadingClassLoader(ReloadClassPredicate reloadClassPredicate) {
True,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,21,super(getPossibleClassPathsUrls());
True,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,22,this.reloadClassPredicate = reloadClassPredicate;
True,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,25,"public SimplePerRealmReloadingClassLoader(ClassLoader parentClassLoader, ReloadClassPredicate reloadClassPredicate) {"
True,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,26,"super(getPossibleClassPathsUrls(), parentClassLoader);"
True,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,27,this.reloadClassPredicate = reloadClassPredicate;
True,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,30,private static URL[] getPossibleClassPathsUrls() {
True,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,31,return new URL[]{
True,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,32,"obtainClassPath(),"
True,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,33,"obtainClassPath(""org.mockito.Mockito""),"
True,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,34,"obtainClassPath(""org.mockito.cglib.proxy.Enhancer""),"
True,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,38,private static URL obtainClassPath() {
True,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,39,String className = SimplePerRealmReloadingClassLoader.class.getName();
True,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,40,return obtainClassPath(className);
True,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,43,private static URL obtainClassPath(String className) {
True,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,44,"String path = className.replace('.', '/') + "".class"";"
True,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,45,String url = SimplePerRealmReloadingClassLoader.class.getClassLoader().getResource(path).toExternalForm();
True,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,47,try {
True,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,48,"return new URL(url.substring(0, url.length() - path.length()));"
True,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,49,} catch (MalformedURLException e) {
True,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,50,"throw new RuntimeException(""Classloader couldn't obtain a proper classpath URL"", e);"
True,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,56,@Override
True,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,57,public Class<?> loadClass(String qualifiedClassName) throws ClassNotFoundException {
True,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,58,if(reloadClassPredicate.acceptReloadOf(qualifiedClassName)) {
True,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,59,// return customLoadClass(qualifiedClassName);
True,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,60,//            Class<?> loadedClass = findLoadedClass(qualifiedClassName);
True,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,61,if(!classHashMap.containsKey(qualifiedClassName)) {
True,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,62,Class<?> foundClass = findClass(qualifiedClassName);
True,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,63,"saveFoundClass(qualifiedClassName, foundClass);"
True,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,64,return foundClass;
True,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,67,return classHashMap.get(qualifiedClassName);
True,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,69,return useParentClassLoaderFor(qualifiedClassName);
True,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,72,"private void saveFoundClass(String qualifiedClassName, Class<?> foundClass) {"
True,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,73,"classHashMap.put(qualifiedClassName, foundClass);"
True,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,77,private Class<?> useParentClassLoaderFor(String qualifiedName) throws ClassNotFoundException {
True,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,78,return super.loadClass(qualifiedName);
True,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,82,public Object doInRealm(String callableCalledInClassLoaderRealm) throws Exception {
True,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,83,ClassLoader current = Thread.currentThread().getContextClassLoader();
True,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,84,try {
True,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,85,Thread.currentThread().setContextClassLoader(this);
True,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,86,Object instance = this.loadClass(callableCalledInClassLoaderRealm).getConstructor().newInstance();
True,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,87,if (instance instanceof Callable) {
True,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,88,Callable<?> callableInRealm = (Callable<?>) instance;
True,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,89,return callableInRealm.call();
True,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,91,} finally {
True,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,92,Thread.currentThread().setContextClassLoader(current);
True,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,94,"throw new IllegalArgumentException(""qualified name '"" + callableCalledInClassLoaderRealm + ""' should represent a class implementing Callable"");"
True,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,98,"public Object doInRealm(String callableCalledInClassLoaderRealm, Class[] argTypes, Object[] args) throws Exception {"
True,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,99,ClassLoader current = Thread.currentThread().getContextClassLoader();
True,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,100,try {
True,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,101,Thread.currentThread().setContextClassLoader(this);
True,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,102,Object instance = this.loadClass(callableCalledInClassLoaderRealm).getConstructor(argTypes).newInstance(args);
True,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,103,if (instance instanceof Callable) {
True,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,104,Callable<?> callableInRealm = (Callable<?>) instance;
True,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,105,return callableInRealm.call();
True,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,107,} finally {
True,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,108,Thread.currentThread().setContextClassLoader(current);
True,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,111,"throw new IllegalArgumentException(""qualified name '"" + callableCalledInClassLoaderRealm + ""' should represent a class implementing Callable"");"
True,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,115,public static interface ReloadClassPredicate {
True,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,test/org/mockitoutil/SimplePerRealmReloadingClassLoader.java,116,boolean acceptReloadOf(String qualifiedName);
True,test/org/mockitoutil/SimpleSerializationUtil.java,test/org/mockitoutil/SimpleSerializationUtil.java,1,package org.mockitoutil;
True,test/org/mockitoutil/SimpleSerializationUtil.java,test/org/mockitoutil/SimpleSerializationUtil.java,3,import junit.framework.Assert;
True,test/org/mockitoutil/SimpleSerializationUtil.java,test/org/mockitoutil/SimpleSerializationUtil.java,5,import java.io.ByteArrayInputStream;
True,test/org/mockitoutil/SimpleSerializationUtil.java,test/org/mockitoutil/SimpleSerializationUtil.java,6,import java.io.ByteArrayOutputStream;
True,test/org/mockitoutil/SimpleSerializationUtil.java,test/org/mockitoutil/SimpleSerializationUtil.java,7,import java.io.IOException;
True,test/org/mockitoutil/SimpleSerializationUtil.java,test/org/mockitoutil/SimpleSerializationUtil.java,8,import java.io.InputStream;
True,test/org/mockitoutil/SimpleSerializationUtil.java,test/org/mockitoutil/SimpleSerializationUtil.java,9,import java.io.ObjectInputStream;
True,test/org/mockitoutil/SimpleSerializationUtil.java,test/org/mockitoutil/SimpleSerializationUtil.java,10,import java.io.ObjectOutputStream;
True,test/org/mockitoutil/SimpleSerializationUtil.java,test/org/mockitoutil/SimpleSerializationUtil.java,12,public abstract class SimpleSerializationUtil {
True,test/org/mockitoutil/SimpleSerializationUtil.java,test/org/mockitoutil/SimpleSerializationUtil.java,14,//TODO use widely
True,test/org/mockitoutil/SimpleSerializationUtil.java,test/org/mockitoutil/SimpleSerializationUtil.java,15,public static <T> T serializeAndBack(T obj) throws Exception {
True,test/org/mockitoutil/SimpleSerializationUtil.java,test/org/mockitoutil/SimpleSerializationUtil.java,16,ByteArrayOutputStream os = serializeMock(obj);
True,test/org/mockitoutil/SimpleSerializationUtil.java,test/org/mockitoutil/SimpleSerializationUtil.java,17,"return (T) deserializeMock(os, Object.class);"
True,test/org/mockitoutil/SimpleSerializationUtil.java,test/org/mockitoutil/SimpleSerializationUtil.java,20,"public static <T> T deserializeMock(ByteArrayOutputStream serialized, Class<T> type) throws IOException,"
True,test/org/mockitoutil/SimpleSerializationUtil.java,test/org/mockitoutil/SimpleSerializationUtil.java,21,ClassNotFoundException {
True,test/org/mockitoutil/SimpleSerializationUtil.java,test/org/mockitoutil/SimpleSerializationUtil.java,22,InputStream unserialize = new ByteArrayInputStream(serialized.toByteArray());
True,test/org/mockitoutil/SimpleSerializationUtil.java,test/org/mockitoutil/SimpleSerializationUtil.java,23,"return deserializeMock(unserialize, type);"
True,test/org/mockitoutil/SimpleSerializationUtil.java,test/org/mockitoutil/SimpleSerializationUtil.java,26,"public static <T> T deserializeMock(InputStream unserialize, Class<T> type) throws IOException, ClassNotFoundException {"
True,test/org/mockitoutil/SimpleSerializationUtil.java,test/org/mockitoutil/SimpleSerializationUtil.java,27,Object readObject = new ObjectInputStream(unserialize).readObject();
True,test/org/mockitoutil/SimpleSerializationUtil.java,test/org/mockitoutil/SimpleSerializationUtil.java,28,Assert.assertNotNull(readObject);
True,test/org/mockitoutil/SimpleSerializationUtil.java,test/org/mockitoutil/SimpleSerializationUtil.java,29,return type.cast(readObject);
True,test/org/mockitoutil/SimpleSerializationUtil.java,test/org/mockitoutil/SimpleSerializationUtil.java,32,public static ByteArrayOutputStream serializeMock(Object mock) throws IOException {
True,test/org/mockitoutil/SimpleSerializationUtil.java,test/org/mockitoutil/SimpleSerializationUtil.java,33,ByteArrayOutputStream serialized = new ByteArrayOutputStream();
True,test/org/mockitoutil/SimpleSerializationUtil.java,test/org/mockitoutil/SimpleSerializationUtil.java,34,new ObjectOutputStream(serialized).writeObject(mock);
True,test/org/mockitoutil/SimpleSerializationUtil.java,test/org/mockitoutil/SimpleSerializationUtil.java,35,return serialized;
False,test/org/mockitoutil/TestBase.java,test/org/mockitoutil/TestBase.java,156,/TODO use widely
False,test/org/mockitoutil/TestBase.java,test/org/mockitoutil/TestBase.java,157,rotected <T> T serializeAndBack(T obj) throws Exception {
False,test/org/mockitoutil/TestBase.java,test/org/mockitoutil/TestBase.java,158,yteArrayOutputStream os = this.serializeMock(obj);
False,test/org/mockitoutil/TestBase.java,test/org/mockitoutil/TestBase.java,159,"eturn (T) this.deserializeMock(os, Object.class);"
False,test/org/mockitoutil/TestBase.java,test/org/mockitoutil/TestBase.java,162,"rotected <T> T deserializeMock(ByteArrayOutputStream serialized, Class<T> type) throws IOException,"
False,test/org/mockitoutil/TestBase.java,test/org/mockitoutil/TestBase.java,163,lassNotFoundException {
False,test/org/mockitoutil/TestBase.java,test/org/mockitoutil/TestBase.java,164,nputStream unserialize = new ByteArrayInputStream(serialized.toByteArray());
False,test/org/mockitoutil/TestBase.java,test/org/mockitoutil/TestBase.java,165,bject readObject = new ObjectInputStream(unserialize).readObject();
False,test/org/mockitoutil/TestBase.java,test/org/mockitoutil/TestBase.java,166,ssertNotNull(readObject);
False,test/org/mockitoutil/TestBase.java,test/org/mockitoutil/TestBase.java,167,eturn type.cast(readObject);
False,test/org/mockitoutil/TestBase.java,test/org/mockitoutil/TestBase.java,170,rotected ByteArrayOutputStream serializeMock(Object mock) throws IOException {
False,test/org/mockitoutil/TestBase.java,test/org/mockitoutil/TestBase.java,171,yteArrayOutputStream serialized = new ByteArrayOutputStream();
False,test/org/mockitoutil/TestBase.java,test/org/mockitoutil/TestBase.java,172,ew ObjectOutputStream(serialized).writeObject(mock);
False,test/org/mockitoutil/TestBase.java,test/org/mockitoutil/TestBase.java,173,eturn serialized;
