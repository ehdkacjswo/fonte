is_addition,old_file_path,new_file_path,line_num,content
True,test/org/mockitousage/debugging/PrintingInvocationsDetectsUnusedStubTest.java,test/org/mockitousage/debugging/PrintingInvocationsDetectsUnusedStubTest.java,1,package org.mockitousage.debugging;
True,test/org/mockitousage/debugging/PrintingInvocationsDetectsUnusedStubTest.java,test/org/mockitousage/debugging/PrintingInvocationsDetectsUnusedStubTest.java,3,import org.junit.Test;
True,test/org/mockitousage/debugging/PrintingInvocationsDetectsUnusedStubTest.java,test/org/mockitousage/debugging/PrintingInvocationsDetectsUnusedStubTest.java,4,import org.mockito.Mock;
True,test/org/mockitousage/debugging/PrintingInvocationsDetectsUnusedStubTest.java,test/org/mockitousage/debugging/PrintingInvocationsDetectsUnusedStubTest.java,5,import org.mockito.Mockito;
True,test/org/mockitousage/debugging/PrintingInvocationsDetectsUnusedStubTest.java,test/org/mockitousage/debugging/PrintingInvocationsDetectsUnusedStubTest.java,6,import org.mockitoutil.TestBase;
True,test/org/mockitousage/debugging/PrintingInvocationsDetectsUnusedStubTest.java,test/org/mockitousage/debugging/PrintingInvocationsDetectsUnusedStubTest.java,8,import static org.mockito.BDDMockito.*;
True,test/org/mockitousage/debugging/PrintingInvocationsDetectsUnusedStubTest.java,test/org/mockitousage/debugging/PrintingInvocationsDetectsUnusedStubTest.java,10,public class PrintingInvocationsDetectsUnusedStubTest extends TestBase {
True,test/org/mockitousage/debugging/PrintingInvocationsDetectsUnusedStubTest.java,test/org/mockitousage/debugging/PrintingInvocationsDetectsUnusedStubTest.java,12,@Mock Foo mock;
True,test/org/mockitousage/debugging/PrintingInvocationsDetectsUnusedStubTest.java,test/org/mockitousage/debugging/PrintingInvocationsDetectsUnusedStubTest.java,13,@Mock Foo mockTwo;
True,test/org/mockitousage/debugging/PrintingInvocationsDetectsUnusedStubTest.java,test/org/mockitousage/debugging/PrintingInvocationsDetectsUnusedStubTest.java,15,@Test
True,test/org/mockitousage/debugging/PrintingInvocationsDetectsUnusedStubTest.java,test/org/mockitousage/debugging/PrintingInvocationsDetectsUnusedStubTest.java,16,public void shouldDetectUnusedStubbingWhenPrinting() throws Exception {
True,test/org/mockitousage/debugging/PrintingInvocationsDetectsUnusedStubTest.java,test/org/mockitousage/debugging/PrintingInvocationsDetectsUnusedStubTest.java,17,//given
True,test/org/mockitousage/debugging/PrintingInvocationsDetectsUnusedStubTest.java,test/org/mockitousage/debugging/PrintingInvocationsDetectsUnusedStubTest.java,18,"given(mock.giveMeSomeString(""different arg"")).willReturn(""foo"");"
True,test/org/mockitousage/debugging/PrintingInvocationsDetectsUnusedStubTest.java,test/org/mockitousage/debugging/PrintingInvocationsDetectsUnusedStubTest.java,19,"mock.giveMeSomeString(""arg"");"
True,test/org/mockitousage/debugging/PrintingInvocationsDetectsUnusedStubTest.java,test/org/mockitousage/debugging/PrintingInvocationsDetectsUnusedStubTest.java,21,//when
True,test/org/mockitousage/debugging/PrintingInvocationsDetectsUnusedStubTest.java,test/org/mockitousage/debugging/PrintingInvocationsDetectsUnusedStubTest.java,22,"String log = Mockito.debug().printInvocations(mock, mockTwo);"
True,test/org/mockitousage/debugging/PrintingInvocationsDetectsUnusedStubTest.java,test/org/mockitousage/debugging/PrintingInvocationsDetectsUnusedStubTest.java,24,//then
True,test/org/mockitousage/debugging/PrintingInvocationsDetectsUnusedStubTest.java,test/org/mockitousage/debugging/PrintingInvocationsDetectsUnusedStubTest.java,25,"assertContainsIgnoringCase(""unused"", log);"
True,test/org/mockitoutil/CustomAssertionsTest.java,test/org/mockitoutil/CustomAssertionsTest.java,2,* Copyright (c) 2007 Mockito contributors
True,test/org/mockitoutil/CustomAssertionsTest.java,test/org/mockitoutil/CustomAssertionsTest.java,3,* This program is made available under the terms of the MIT License.
True,test/org/mockitoutil/CustomAssertionsTest.java,test/org/mockitoutil/CustomAssertionsTest.java,5,package org.mockitoutil;
True,test/org/mockitoutil/CustomAssertionsTest.java,test/org/mockitoutil/CustomAssertionsTest.java,7,import org.junit.Test;
True,test/org/mockitoutil/CustomAssertionsTest.java,test/org/mockitoutil/CustomAssertionsTest.java,9,public class CustomAssertionsTest extends TestBase {
True,test/org/mockitoutil/CustomAssertionsTest.java,test/org/mockitoutil/CustomAssertionsTest.java,11,@Test
True,test/org/mockitoutil/CustomAssertionsTest.java,test/org/mockitoutil/CustomAssertionsTest.java,12,public void shouldKnowWhenStringContainsIgnoringCase() throws Exception {
True,test/org/mockitoutil/CustomAssertionsTest.java,test/org/mockitoutil/CustomAssertionsTest.java,13,"assertContainsIgnoringCase(""foo"", ""foo"");"
True,test/org/mockitoutil/CustomAssertionsTest.java,test/org/mockitoutil/CustomAssertionsTest.java,14,"assertContainsIgnoringCase(""fOo"", ""foo"");"
True,test/org/mockitoutil/CustomAssertionsTest.java,test/org/mockitoutil/CustomAssertionsTest.java,15,"assertContainsIgnoringCase(""FoO"", ""foo"");"
True,test/org/mockitoutil/CustomAssertionsTest.java,test/org/mockitoutil/CustomAssertionsTest.java,16,"assertContainsIgnoringCase(""foo"", ""a foo :)"");"
True,test/org/mockitoutil/CustomAssertionsTest.java,test/org/mockitoutil/CustomAssertionsTest.java,17,"assertContainsIgnoringCase(""fOo"", ""a foo :)"");"
True,test/org/mockitoutil/CustomAssertionsTest.java,test/org/mockitoutil/CustomAssertionsTest.java,18,"assertContainsIgnoringCase(""FoO"", ""a foo :)"");"
True,test/org/mockitoutil/CustomAssertionsTest.java,test/org/mockitoutil/CustomAssertionsTest.java,19,"assertContainsIgnoringCase("""", ""a foo :)"");"
True,test/org/mockitoutil/CustomAssertionsTest.java,test/org/mockitoutil/CustomAssertionsTest.java,20,"assertContainsIgnoringCase("""", """");"
True,test/org/mockitoutil/CustomAssertionsTest.java,test/org/mockitoutil/CustomAssertionsTest.java,23,@Test(expected = AssertionError.class)
True,test/org/mockitoutil/CustomAssertionsTest.java,test/org/mockitoutil/CustomAssertionsTest.java,24,public void shouldKnowWhenStringDoesNotContainIgnoringCase() throws Exception {
True,test/org/mockitoutil/CustomAssertionsTest.java,test/org/mockitoutil/CustomAssertionsTest.java,25,"assertContainsIgnoringCase(""fooo"", ""foo"");"
True,test/org/mockitoutil/CustomAssertionsTest.java,test/org/mockitoutil/CustomAssertionsTest.java,28,@Test(expected = AssertionError.class)
True,test/org/mockitoutil/CustomAssertionsTest.java,test/org/mockitoutil/CustomAssertionsTest.java,29,public void shouldKnowWhenStringDoesNotContainIgnoringCase2() throws Exception {
True,test/org/mockitoutil/CustomAssertionsTest.java,test/org/mockitoutil/CustomAssertionsTest.java,30,"assertContainsIgnoringCase(""fOo"", ""f oo"");"
False,test/org/mockitoutil/TestBase.java,test/org/mockitoutil/TestBase.java,18,mport org.mockito.internal.invocation.*;
True,test/org/mockitoutil/TestBase.java,test/org/mockitoutil/TestBase.java,17,import org.mockito.internal.invocation.Invocation;
True,test/org/mockitoutil/TestBase.java,test/org/mockitoutil/TestBase.java,18,import org.mockito.internal.invocation.SerializableMethod;
True,test/org/mockitoutil/TestBase.java,test/org/mockitoutil/TestBase.java,91,"public static void assertContainsIgnoringCase(String sub, String string) {"
True,test/org/mockitoutil/TestBase.java,test/org/mockitoutil/TestBase.java,92,"assertTrue(""\n"" +"
True,test/org/mockitoutil/TestBase.java,test/org/mockitoutil/TestBase.java,93,"""This substing:"" +"
True,test/org/mockitoutil/TestBase.java,test/org/mockitoutil/TestBase.java,94,sub +
True,test/org/mockitoutil/TestBase.java,test/org/mockitoutil/TestBase.java,95,"""\n"" +"
True,test/org/mockitoutil/TestBase.java,test/org/mockitoutil/TestBase.java,96,"""should be inside of:"" +"
True,test/org/mockitoutil/TestBase.java,test/org/mockitoutil/TestBase.java,97,string +
True,test/org/mockitoutil/TestBase.java,test/org/mockitoutil/TestBase.java,98,"""\n"""
True,test/org/mockitoutil/TestBase.java,test/org/mockitoutil/TestBase.java,99,", containsIgnoringCase(string, sub));"
True,test/org/mockitoutil/TestBase.java,test/org/mockitoutil/TestBase.java,102,"private static boolean containsIgnoringCase(String string, String sub) {"
True,test/org/mockitoutil/TestBase.java,test/org/mockitoutil/TestBase.java,103,int subLength = sub.length();
True,test/org/mockitoutil/TestBase.java,test/org/mockitoutil/TestBase.java,104,if (string.length() < subLength) {
True,test/org/mockitoutil/TestBase.java,test/org/mockitoutil/TestBase.java,105,return false;
True,test/org/mockitoutil/TestBase.java,test/org/mockitoutil/TestBase.java,107,int i = 0;
True,test/org/mockitoutil/TestBase.java,test/org/mockitoutil/TestBase.java,108,while(i+subLength <= string.length()) {
True,test/org/mockitoutil/TestBase.java,test/org/mockitoutil/TestBase.java,109,"boolean temp = string.substring(i, i+subLength).equalsIgnoreCase(sub);"
True,test/org/mockitoutil/TestBase.java,test/org/mockitoutil/TestBase.java,110,if (temp) {
True,test/org/mockitoutil/TestBase.java,test/org/mockitoutil/TestBase.java,111,return true;
True,test/org/mockitoutil/TestBase.java,test/org/mockitoutil/TestBase.java,113,i++;
True,test/org/mockitoutil/TestBase.java,test/org/mockitoutil/TestBase.java,115,return false;
