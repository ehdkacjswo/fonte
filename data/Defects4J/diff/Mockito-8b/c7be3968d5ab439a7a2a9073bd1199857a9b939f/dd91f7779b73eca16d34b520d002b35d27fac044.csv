is_addition,old_file_path,new_file_path,line_num,content
False,src/org/mockito/exceptions/Reporter.java,src/org/mockito/exceptions/Reporter.java,26,mport org.mockito.exceptions.verification.junit.JUnitTool;
True,src/org/mockito/exceptions/Reporter.java,src/org/mockito/exceptions/Reporter.java,29,import org.mockito.internal.junit.JUnitTool;
False,src/org/mockito/exceptions/verification/junit/JUnitTool.java,src/org/mockito/exceptions/verification/junit/JUnitTool.java,2, Copyright (c) 2007 Mockito contributors
False,src/org/mockito/exceptions/verification/junit/JUnitTool.java,src/org/mockito/exceptions/verification/junit/JUnitTool.java,3, This program is made available under the terms of the MIT License.
True,src/org/mockito/exceptions/verification/junit/JUnitTool.java,src/org/mockito/exceptions/verification/junit/JUnitTool.java,2,* Copyright (c) 2007 Mockito contributors
True,src/org/mockito/exceptions/verification/junit/JUnitTool.java,src/org/mockito/exceptions/verification/junit/JUnitTool.java,3,* This program is made available under the terms of the MIT License.
False,src/org/mockito/exceptions/verification/junit/JUnitTool.java,src/org/mockito/exceptions/verification/junit/JUnitTool.java,7,mport org.mockito.exceptions.verification.ArgumentsAreDifferent;
True,src/org/mockito/exceptions/verification/junit/JUnitTool.java,src/org/mockito/exceptions/verification/junit/JUnitTool.java,7,@Deprecated
True,src/org/mockito/exceptions/verification/junit/JUnitTool.java,src/org/mockito/exceptions/verification/junit/JUnitTool.java,9,* @Deprecated. This class has been moved to internal packages because it was never meant to be public.
True,src/org/mockito/exceptions/verification/junit/JUnitTool.java,src/org/mockito/exceptions/verification/junit/JUnitTool.java,10,* If you need it for extending Mockito please let us know. You can still use {@link org.mockito.internal.junit.JUnitTool}.
True,src/org/mockito/exceptions/verification/junit/JUnitTool.java,src/org/mockito/exceptions/verification/junit/JUnitTool.java,11,"* However, the package clearly states that the class in a part of a public API so it can change."
False,src/org/mockito/exceptions/verification/junit/JUnitTool.java,src/org/mockito/exceptions/verification/junit/JUnitTool.java,11,rivate static boolean hasJUnit;
False,src/org/mockito/exceptions/verification/junit/JUnitTool.java,src/org/mockito/exceptions/verification/junit/JUnitTool.java,13,tatic {
False,src/org/mockito/exceptions/verification/junit/JUnitTool.java,src/org/mockito/exceptions/verification/junit/JUnitTool.java,14,ry {
False,src/org/mockito/exceptions/verification/junit/JUnitTool.java,src/org/mockito/exceptions/verification/junit/JUnitTool.java,15,"lass.forName(""junit.framework.ComparisonFailure"");"
False,src/org/mockito/exceptions/verification/junit/JUnitTool.java,src/org/mockito/exceptions/verification/junit/JUnitTool.java,16,asJUnit = true;
False,src/org/mockito/exceptions/verification/junit/JUnitTool.java,src/org/mockito/exceptions/verification/junit/JUnitTool.java,17, catch (Throwable t) {
False,src/org/mockito/exceptions/verification/junit/JUnitTool.java,src/org/mockito/exceptions/verification/junit/JUnitTool.java,18,asJUnit = false;
False,src/org/mockito/exceptions/verification/junit/JUnitTool.java,src/org/mockito/exceptions/verification/junit/JUnitTool.java,23,eturn hasJUnit;
True,src/org/mockito/exceptions/verification/junit/JUnitTool.java,src/org/mockito/exceptions/verification/junit/JUnitTool.java,16,return org.mockito.internal.junit.JUnitTool.hasJUnit();
False,src/org/mockito/exceptions/verification/junit/JUnitTool.java,src/org/mockito/exceptions/verification/junit/JUnitTool.java,27,ry {
False,src/org/mockito/exceptions/verification/junit/JUnitTool.java,src/org/mockito/exceptions/verification/junit/JUnitTool.java,28,"lass<?> clazz = Class.forName(""org.mockito.exceptions.verification.junit.ArgumentsAreDifferent"");"
False,src/org/mockito/exceptions/verification/junit/JUnitTool.java,src/org/mockito/exceptions/verification/junit/JUnitTool.java,29,"ssertionError throwable = (AssertionError) clazz.getConstructors()[0].newInstance(message, wanted, actual);"
False,src/org/mockito/exceptions/verification/junit/JUnitTool.java,src/org/mockito/exceptions/verification/junit/JUnitTool.java,30,eturn throwable;
False,src/org/mockito/exceptions/verification/junit/JUnitTool.java,src/org/mockito/exceptions/verification/junit/JUnitTool.java,31, catch (Throwable t) {
False,src/org/mockito/exceptions/verification/junit/JUnitTool.java,src/org/mockito/exceptions/verification/junit/JUnitTool.java,32,/            throw the default exception in case of problems
False,src/org/mockito/exceptions/verification/junit/JUnitTool.java,src/org/mockito/exceptions/verification/junit/JUnitTool.java,33,eturn new ArgumentsAreDifferent(message);
True,src/org/mockito/exceptions/verification/junit/JUnitTool.java,src/org/mockito/exceptions/verification/junit/JUnitTool.java,20,"return org.mockito.internal.junit.JUnitTool.createArgumentsAreDifferentException(message, wanted, actual);"
True,src/org/mockito/internal/junit/JUnitTool.java,src/org/mockito/internal/junit/JUnitTool.java,2,* Copyright (c) 2007 Mockito contributors
True,src/org/mockito/internal/junit/JUnitTool.java,src/org/mockito/internal/junit/JUnitTool.java,3,* This program is made available under the terms of the MIT License.
True,src/org/mockito/internal/junit/JUnitTool.java,src/org/mockito/internal/junit/JUnitTool.java,5,package org.mockito.internal.junit;
True,src/org/mockito/internal/junit/JUnitTool.java,src/org/mockito/internal/junit/JUnitTool.java,7,import org.mockito.exceptions.verification.ArgumentsAreDifferent;
True,src/org/mockito/internal/junit/JUnitTool.java,src/org/mockito/internal/junit/JUnitTool.java,9,public class JUnitTool {
True,src/org/mockito/internal/junit/JUnitTool.java,src/org/mockito/internal/junit/JUnitTool.java,11,private static boolean hasJUnit;
True,src/org/mockito/internal/junit/JUnitTool.java,src/org/mockito/internal/junit/JUnitTool.java,13,static {
True,src/org/mockito/internal/junit/JUnitTool.java,src/org/mockito/internal/junit/JUnitTool.java,14,try {
True,src/org/mockito/internal/junit/JUnitTool.java,src/org/mockito/internal/junit/JUnitTool.java,15,"Class.forName(""junit.framework.ComparisonFailure"");"
True,src/org/mockito/internal/junit/JUnitTool.java,src/org/mockito/internal/junit/JUnitTool.java,16,hasJUnit = true;
True,src/org/mockito/internal/junit/JUnitTool.java,src/org/mockito/internal/junit/JUnitTool.java,17,} catch (Throwable t) {
True,src/org/mockito/internal/junit/JUnitTool.java,src/org/mockito/internal/junit/JUnitTool.java,18,hasJUnit = false;
True,src/org/mockito/internal/junit/JUnitTool.java,src/org/mockito/internal/junit/JUnitTool.java,22,public static boolean hasJUnit() {
True,src/org/mockito/internal/junit/JUnitTool.java,src/org/mockito/internal/junit/JUnitTool.java,23,return hasJUnit;
True,src/org/mockito/internal/junit/JUnitTool.java,src/org/mockito/internal/junit/JUnitTool.java,26,"public static AssertionError createArgumentsAreDifferentException(String message, String wanted, String actual)  {"
True,src/org/mockito/internal/junit/JUnitTool.java,src/org/mockito/internal/junit/JUnitTool.java,27,try {
True,src/org/mockito/internal/junit/JUnitTool.java,src/org/mockito/internal/junit/JUnitTool.java,28,"Class<?> clazz = Class.forName(""org.mockito.exceptions.verification.junit.ArgumentsAreDifferent"");"
True,src/org/mockito/internal/junit/JUnitTool.java,src/org/mockito/internal/junit/JUnitTool.java,29,"AssertionError throwable = (AssertionError) clazz.getConstructors()[0].newInstance(message, wanted, actual);"
True,src/org/mockito/internal/junit/JUnitTool.java,src/org/mockito/internal/junit/JUnitTool.java,30,return throwable;
True,src/org/mockito/internal/junit/JUnitTool.java,src/org/mockito/internal/junit/JUnitTool.java,31,} catch (Throwable t) {
True,src/org/mockito/internal/junit/JUnitTool.java,src/org/mockito/internal/junit/JUnitTool.java,32,//            throw the default exception in case of problems
True,src/org/mockito/internal/junit/JUnitTool.java,src/org/mockito/internal/junit/JUnitTool.java,33,return new ArgumentsAreDifferent(message);
