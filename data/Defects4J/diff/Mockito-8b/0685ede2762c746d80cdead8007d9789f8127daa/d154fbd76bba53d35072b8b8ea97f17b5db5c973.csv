is_addition,old_file_path,new_file_path,line_num,content
False,src/org/mockito/internal/configuration/ClassPathLoader.java,src/org/mockito/internal/configuration/ClassPathLoader.java,57,rivate static final String DEFAULT_MOCK_MAKER_CLASS =
False,src/org/mockito/internal/configuration/ClassPathLoader.java,src/org/mockito/internal/configuration/ClassPathLoader.java,58,"org.mockito.internal.creation.cglib.CglibMockMaker"";"
False,src/org/mockito/internal/configuration/ClassPathLoader.java,src/org/mockito/internal/configuration/ClassPathLoader.java,59,rivate static final String DEFAULT_STACK_TRACE_CLEANER_PROVIDER_CLASS =
False,src/org/mockito/internal/configuration/ClassPathLoader.java,src/org/mockito/internal/configuration/ClassPathLoader.java,60,"org.mockito.internal.exceptions.stacktrace.DefaultStackTraceCleanerProvider"";"
False,src/org/mockito/internal/configuration/ClassPathLoader.java,src/org/mockito/internal/configuration/ClassPathLoader.java,61,"ublic static final String MOCKITO_CONFIGURATION_CLASS_NAME = ""org.mockito.configuration.MockitoConfiguration"";"
False,src/org/mockito/internal/configuration/ClassPathLoader.java,src/org/mockito/internal/configuration/ClassPathLoader.java,63,rivate static final MockMaker mockMaker = findPlatformMockMaker();
False,src/org/mockito/internal/configuration/ClassPathLoader.java,src/org/mockito/internal/configuration/ClassPathLoader.java,64,rivate static final StackTraceCleanerProvider stackTraceCleanerProvider =
False,src/org/mockito/internal/configuration/ClassPathLoader.java,src/org/mockito/internal/configuration/ClassPathLoader.java,65,indPlatformStackTraceCleanerProvider();
True,src/org/mockito/internal/configuration/ClassPathLoader.java,src/org/mockito/internal/configuration/ClassPathLoader.java,58,"public static final String MOCKITO_CONFIGURATION_CLASS_NAME = ""org.mockito.configuration.MockitoConfiguration"";"
False,src/org/mockito/internal/configuration/ClassPathLoader.java,src/org/mockito/internal/configuration/ClassPathLoader.java,91, Returns the implementation of the mock maker available for the current runtime.
False,src/org/mockito/internal/configuration/ClassPathLoader.java,src/org/mockito/internal/configuration/ClassPathLoader.java,93, <p>Returns {@link org.mockito.internal.creation.cglib.CglibMockMaker} if no
False,src/org/mockito/internal/configuration/ClassPathLoader.java,src/org/mockito/internal/configuration/ClassPathLoader.java,94, {@link MockMaker} extension exists or is visible in the current classpath.</p>
False,src/org/mockito/internal/configuration/ClassPathLoader.java,src/org/mockito/internal/configuration/ClassPathLoader.java,96,ublic static MockMaker getMockMaker() {
False,src/org/mockito/internal/configuration/ClassPathLoader.java,src/org/mockito/internal/configuration/ClassPathLoader.java,97,eturn mockMaker;
False,src/org/mockito/internal/configuration/ClassPathLoader.java,src/org/mockito/internal/configuration/ClassPathLoader.java,100,ublic static StackTraceCleanerProvider getStackTraceCleanerProvider() {
False,src/org/mockito/internal/configuration/ClassPathLoader.java,src/org/mockito/internal/configuration/ClassPathLoader.java,101,/TODO we should throw some sensible exception if this is null.
False,src/org/mockito/internal/configuration/ClassPathLoader.java,src/org/mockito/internal/configuration/ClassPathLoader.java,102,eturn stackTraceCleanerProvider;
False,src/org/mockito/internal/configuration/ClassPathLoader.java,src/org/mockito/internal/configuration/ClassPathLoader.java,106," Scans the classpath to find a mock maker plugin if one is available,"
False,src/org/mockito/internal/configuration/ClassPathLoader.java,src/org/mockito/internal/configuration/ClassPathLoader.java,107, allowing mockito to run on alternative platforms like Android.
False,src/org/mockito/internal/configuration/ClassPathLoader.java,src/org/mockito/internal/configuration/ClassPathLoader.java,109,tatic MockMaker findPlatformMockMaker() {
False,src/org/mockito/internal/configuration/ClassPathLoader.java,src/org/mockito/internal/configuration/ClassPathLoader.java,110,"eturn findPluginImplementation(MockMaker.class, DEFAULT_MOCK_MAKER_CLASS);"
False,src/org/mockito/internal/configuration/ClassPathLoader.java,src/org/mockito/internal/configuration/ClassPathLoader.java,113,tatic StackTraceCleanerProvider findPlatformStackTraceCleanerProvider() {
False,src/org/mockito/internal/configuration/ClassPathLoader.java,src/org/mockito/internal/configuration/ClassPathLoader.java,114,eturn findPluginImplementation(
False,src/org/mockito/internal/configuration/ClassPathLoader.java,src/org/mockito/internal/configuration/ClassPathLoader.java,115,"tackTraceCleanerProvider.class, DEFAULT_STACK_TRACE_CLEANER_PROVIDER_CLASS);"
False,src/org/mockito/internal/configuration/ClassPathLoader.java,src/org/mockito/internal/configuration/ClassPathLoader.java,118,"tatic <T> T findPluginImplementation(Class<T> pluginType, String defaultPluginClassName) {"
False,src/org/mockito/internal/configuration/ClassPathLoader.java,src/org/mockito/internal/configuration/ClassPathLoader.java,119,or (T plugin : loadImplementations(pluginType)) {
False,src/org/mockito/internal/configuration/ClassPathLoader.java,src/org/mockito/internal/configuration/ClassPathLoader.java,120,eturn plugin; // return the first one service loader finds (if any)
False,src/org/mockito/internal/configuration/ClassPathLoader.java,src/org/mockito/internal/configuration/ClassPathLoader.java,123,ry {
False,src/org/mockito/internal/configuration/ClassPathLoader.java,src/org/mockito/internal/configuration/ClassPathLoader.java,124,/ Default implementation. Use our own ClassLoader instead of the context
False,src/org/mockito/internal/configuration/ClassPathLoader.java,src/org/mockito/internal/configuration/ClassPathLoader.java,125,"/ ClassLoader, as the default implementation is assumed to be part of"
False,src/org/mockito/internal/configuration/ClassPathLoader.java,src/org/mockito/internal/configuration/ClassPathLoader.java,126,/ Mockito and may not be available via the context ClassLoader.
False,src/org/mockito/internal/configuration/ClassPathLoader.java,src/org/mockito/internal/configuration/ClassPathLoader.java,127,eturn pluginType.cast(Class.forName(defaultPluginClassName).newInstance());
False,src/org/mockito/internal/configuration/ClassPathLoader.java,src/org/mockito/internal/configuration/ClassPathLoader.java,128, catch (Exception e) {
False,src/org/mockito/internal/configuration/ClassPathLoader.java,src/org/mockito/internal/configuration/ClassPathLoader.java,129,"hrow new MockitoException(""Internal problem occurred, please report it. "" +"
False,src/org/mockito/internal/configuration/ClassPathLoader.java,src/org/mockito/internal/configuration/ClassPathLoader.java,130,"Mockito is unable to load the default implementation of class that is a part of Mockito distribution. "" +"
False,src/org/mockito/internal/configuration/ClassPathLoader.java,src/org/mockito/internal/configuration/ClassPathLoader.java,131,"Failed to load "" + pluginType, e);"
False,src/org/mockito/internal/configuration/ClassPathLoader.java,src/org/mockito/internal/configuration/ClassPathLoader.java,136, Equivalent to {@link java.util.ServiceLoader#load} but without requiring
False,src/org/mockito/internal/configuration/ClassPathLoader.java,src/org/mockito/internal/configuration/ClassPathLoader.java,137, Java 6 / Android 2.3 (Gingerbread).
False,src/org/mockito/internal/configuration/ClassPathLoader.java,src/org/mockito/internal/configuration/ClassPathLoader.java,139,tatic <T> List<T> loadImplementations(Class<T> service) {
False,src/org/mockito/internal/configuration/ClassPathLoader.java,src/org/mockito/internal/configuration/ClassPathLoader.java,140,lassLoader loader = Thread.currentThread().getContextClassLoader();
False,src/org/mockito/internal/configuration/ClassPathLoader.java,src/org/mockito/internal/configuration/ClassPathLoader.java,141,f (loader == null) {
False,src/org/mockito/internal/configuration/ClassPathLoader.java,src/org/mockito/internal/configuration/ClassPathLoader.java,142,oader = ClassLoader.getSystemClassLoader();
False,src/org/mockito/internal/configuration/ClassPathLoader.java,src/org/mockito/internal/configuration/ClassPathLoader.java,144,numeration<URL> resources;
False,src/org/mockito/internal/configuration/ClassPathLoader.java,src/org/mockito/internal/configuration/ClassPathLoader.java,145,ry {
False,src/org/mockito/internal/configuration/ClassPathLoader.java,src/org/mockito/internal/configuration/ClassPathLoader.java,146,"esources = loader.getResources(""mockito-extensions/"" + service.getName());"
False,src/org/mockito/internal/configuration/ClassPathLoader.java,src/org/mockito/internal/configuration/ClassPathLoader.java,147, catch (IOException e) {
False,src/org/mockito/internal/configuration/ClassPathLoader.java,src/org/mockito/internal/configuration/ClassPathLoader.java,148,"hrow new MockitoException(""Failed to load "" + service, e);"
False,src/org/mockito/internal/configuration/ClassPathLoader.java,src/org/mockito/internal/configuration/ClassPathLoader.java,151,ist<T> result = new ArrayList<T>();
False,src/org/mockito/internal/configuration/ClassPathLoader.java,src/org/mockito/internal/configuration/ClassPathLoader.java,152,or (URL resource : Collections.list(resources)) {
False,src/org/mockito/internal/configuration/ClassPathLoader.java,src/org/mockito/internal/configuration/ClassPathLoader.java,153,nputStream in = null;
False,src/org/mockito/internal/configuration/ClassPathLoader.java,src/org/mockito/internal/configuration/ClassPathLoader.java,154,ry {
False,src/org/mockito/internal/configuration/ClassPathLoader.java,src/org/mockito/internal/configuration/ClassPathLoader.java,155,n = resource.openStream();
False,src/org/mockito/internal/configuration/ClassPathLoader.java,src/org/mockito/internal/configuration/ClassPathLoader.java,156,"or (String line : readerToLines(new InputStreamReader(in, ""UTF-8""))) {"
False,src/org/mockito/internal/configuration/ClassPathLoader.java,src/org/mockito/internal/configuration/ClassPathLoader.java,157,tring name = stripCommentAndWhitespace(line);
False,src/org/mockito/internal/configuration/ClassPathLoader.java,src/org/mockito/internal/configuration/ClassPathLoader.java,158,f (name.length() != 0) {
False,src/org/mockito/internal/configuration/ClassPathLoader.java,src/org/mockito/internal/configuration/ClassPathLoader.java,159,esult.add(service.cast(loader.loadClass(name).newInstance()));
False,src/org/mockito/internal/configuration/ClassPathLoader.java,src/org/mockito/internal/configuration/ClassPathLoader.java,162, catch (Exception e) {
False,src/org/mockito/internal/configuration/ClassPathLoader.java,src/org/mockito/internal/configuration/ClassPathLoader.java,163,hrow new MockitoConfigurationException(
False,src/org/mockito/internal/configuration/ClassPathLoader.java,src/org/mockito/internal/configuration/ClassPathLoader.java,164,"Failed to load "" + service + "" using "" + resource, e);"
False,src/org/mockito/internal/configuration/ClassPathLoader.java,src/org/mockito/internal/configuration/ClassPathLoader.java,165, finally {
False,src/org/mockito/internal/configuration/ClassPathLoader.java,src/org/mockito/internal/configuration/ClassPathLoader.java,166,loseQuietly(in);
False,src/org/mockito/internal/configuration/ClassPathLoader.java,src/org/mockito/internal/configuration/ClassPathLoader.java,169,eturn result;
False,src/org/mockito/internal/configuration/ClassPathLoader.java,src/org/mockito/internal/configuration/ClassPathLoader.java,172,tatic List<String> readerToLines(Reader reader) throws IOException {
False,src/org/mockito/internal/configuration/ClassPathLoader.java,src/org/mockito/internal/configuration/ClassPathLoader.java,173,ist<String> result = new ArrayList<String>();
False,src/org/mockito/internal/configuration/ClassPathLoader.java,src/org/mockito/internal/configuration/ClassPathLoader.java,174,ufferedReader lineReader = new BufferedReader(reader);
False,src/org/mockito/internal/configuration/ClassPathLoader.java,src/org/mockito/internal/configuration/ClassPathLoader.java,175,tring line;
False,src/org/mockito/internal/configuration/ClassPathLoader.java,src/org/mockito/internal/configuration/ClassPathLoader.java,176,hile ((line = lineReader.readLine()) != null) {
False,src/org/mockito/internal/configuration/ClassPathLoader.java,src/org/mockito/internal/configuration/ClassPathLoader.java,177,esult.add(line);
False,src/org/mockito/internal/configuration/ClassPathLoader.java,src/org/mockito/internal/configuration/ClassPathLoader.java,179,eturn result;
False,src/org/mockito/internal/configuration/ClassPathLoader.java,src/org/mockito/internal/configuration/ClassPathLoader.java,182,tatic String stripCommentAndWhitespace(String line) {
False,src/org/mockito/internal/configuration/ClassPathLoader.java,src/org/mockito/internal/configuration/ClassPathLoader.java,183,nt hash = line.indexOf('#');
False,src/org/mockito/internal/configuration/ClassPathLoader.java,src/org/mockito/internal/configuration/ClassPathLoader.java,184,f (hash != -1) {
False,src/org/mockito/internal/configuration/ClassPathLoader.java,src/org/mockito/internal/configuration/ClassPathLoader.java,185,"ine = line.substring(0, hash);"
False,src/org/mockito/internal/configuration/ClassPathLoader.java,src/org/mockito/internal/configuration/ClassPathLoader.java,187,eturn line.trim();
False,src/org/mockito/internal/configuration/ClassPathLoader.java,src/org/mockito/internal/configuration/ClassPathLoader.java,190,rivate static void closeQuietly(InputStream in) {
False,src/org/mockito/internal/configuration/ClassPathLoader.java,src/org/mockito/internal/configuration/ClassPathLoader.java,191,f (in != null) {
False,src/org/mockito/internal/configuration/ClassPathLoader.java,src/org/mockito/internal/configuration/ClassPathLoader.java,192,ry {
False,src/org/mockito/internal/configuration/ClassPathLoader.java,src/org/mockito/internal/configuration/ClassPathLoader.java,193,n.close();
False,src/org/mockito/internal/configuration/ClassPathLoader.java,src/org/mockito/internal/configuration/ClassPathLoader.java,194, catch (IOException ignored) {
True,src/org/mockito/internal/configuration/plugins/PluginLoader.java,src/org/mockito/internal/configuration/plugins/PluginLoader.java,1,package org.mockito.internal.configuration.plugins;
True,src/org/mockito/internal/configuration/plugins/PluginLoader.java,src/org/mockito/internal/configuration/plugins/PluginLoader.java,3,import org.mockito.exceptions.base.MockitoException;
True,src/org/mockito/internal/configuration/plugins/PluginLoader.java,src/org/mockito/internal/configuration/plugins/PluginLoader.java,4,import org.mockito.exceptions.misusing.MockitoConfigurationException;
True,src/org/mockito/internal/configuration/plugins/PluginLoader.java,src/org/mockito/internal/configuration/plugins/PluginLoader.java,6,import java.io.*;
True,src/org/mockito/internal/configuration/plugins/PluginLoader.java,src/org/mockito/internal/configuration/plugins/PluginLoader.java,7,import java.net.URL;
True,src/org/mockito/internal/configuration/plugins/PluginLoader.java,src/org/mockito/internal/configuration/plugins/PluginLoader.java,8,import java.util.ArrayList;
True,src/org/mockito/internal/configuration/plugins/PluginLoader.java,src/org/mockito/internal/configuration/plugins/PluginLoader.java,9,import java.util.Collections;
True,src/org/mockito/internal/configuration/plugins/PluginLoader.java,src/org/mockito/internal/configuration/plugins/PluginLoader.java,10,import java.util.Enumeration;
True,src/org/mockito/internal/configuration/plugins/PluginLoader.java,src/org/mockito/internal/configuration/plugins/PluginLoader.java,11,import java.util.List;
True,src/org/mockito/internal/configuration/plugins/PluginLoader.java,src/org/mockito/internal/configuration/plugins/PluginLoader.java,13,public class PluginLoader {
True,src/org/mockito/internal/configuration/plugins/PluginLoader.java,src/org/mockito/internal/configuration/plugins/PluginLoader.java,16,"* Scans the classpath for given pluginType. If not found, default class is used."
True,src/org/mockito/internal/configuration/plugins/PluginLoader.java,src/org/mockito/internal/configuration/plugins/PluginLoader.java,18,"static <T> T plugin(Class<T> pluginType, String defaultPluginClassName) {"
True,src/org/mockito/internal/configuration/plugins/PluginLoader.java,src/org/mockito/internal/configuration/plugins/PluginLoader.java,19,for (T plugin : loadImplementations(pluginType)) {
True,src/org/mockito/internal/configuration/plugins/PluginLoader.java,src/org/mockito/internal/configuration/plugins/PluginLoader.java,20,return plugin; // return the first one service loader finds (if any)
True,src/org/mockito/internal/configuration/plugins/PluginLoader.java,src/org/mockito/internal/configuration/plugins/PluginLoader.java,23,try {
True,src/org/mockito/internal/configuration/plugins/PluginLoader.java,src/org/mockito/internal/configuration/plugins/PluginLoader.java,24,// Default implementation. Use our own ClassLoader instead of the context
True,src/org/mockito/internal/configuration/plugins/PluginLoader.java,src/org/mockito/internal/configuration/plugins/PluginLoader.java,25,"// ClassLoader, as the default implementation is assumed to be part of"
True,src/org/mockito/internal/configuration/plugins/PluginLoader.java,src/org/mockito/internal/configuration/plugins/PluginLoader.java,26,// Mockito and may not be available via the context ClassLoader.
True,src/org/mockito/internal/configuration/plugins/PluginLoader.java,src/org/mockito/internal/configuration/plugins/PluginLoader.java,27,return pluginType.cast(Class.forName(defaultPluginClassName).newInstance());
True,src/org/mockito/internal/configuration/plugins/PluginLoader.java,src/org/mockito/internal/configuration/plugins/PluginLoader.java,28,} catch (Exception e) {
True,src/org/mockito/internal/configuration/plugins/PluginLoader.java,src/org/mockito/internal/configuration/plugins/PluginLoader.java,29,"throw new MockitoException(""Internal problem occurred, please report it. "" +"
True,src/org/mockito/internal/configuration/plugins/PluginLoader.java,src/org/mockito/internal/configuration/plugins/PluginLoader.java,30,"""Mockito is unable to load the default implementation of class that is a part of Mockito distribution. "" +"
True,src/org/mockito/internal/configuration/plugins/PluginLoader.java,src/org/mockito/internal/configuration/plugins/PluginLoader.java,31,"""Failed to load "" + pluginType, e);"
True,src/org/mockito/internal/configuration/plugins/PluginLoader.java,src/org/mockito/internal/configuration/plugins/PluginLoader.java,36,* Equivalent to {@link java.util.ServiceLoader#load} but without requiring
True,src/org/mockito/internal/configuration/plugins/PluginLoader.java,src/org/mockito/internal/configuration/plugins/PluginLoader.java,37,* Java 6 / Android 2.3 (Gingerbread).
True,src/org/mockito/internal/configuration/plugins/PluginLoader.java,src/org/mockito/internal/configuration/plugins/PluginLoader.java,39,static <T> List<T> loadImplementations(Class<T> service) {
True,src/org/mockito/internal/configuration/plugins/PluginLoader.java,src/org/mockito/internal/configuration/plugins/PluginLoader.java,40,ClassLoader loader = Thread.currentThread().getContextClassLoader();
True,src/org/mockito/internal/configuration/plugins/PluginLoader.java,src/org/mockito/internal/configuration/plugins/PluginLoader.java,41,if (loader == null) {
True,src/org/mockito/internal/configuration/plugins/PluginLoader.java,src/org/mockito/internal/configuration/plugins/PluginLoader.java,42,loader = ClassLoader.getSystemClassLoader();
True,src/org/mockito/internal/configuration/plugins/PluginLoader.java,src/org/mockito/internal/configuration/plugins/PluginLoader.java,44,Enumeration<URL> resources;
True,src/org/mockito/internal/configuration/plugins/PluginLoader.java,src/org/mockito/internal/configuration/plugins/PluginLoader.java,45,try {
True,src/org/mockito/internal/configuration/plugins/PluginLoader.java,src/org/mockito/internal/configuration/plugins/PluginLoader.java,46,"resources = loader.getResources(""mockito-extensions/"" + service.getName());"
True,src/org/mockito/internal/configuration/plugins/PluginLoader.java,src/org/mockito/internal/configuration/plugins/PluginLoader.java,47,} catch (IOException e) {
True,src/org/mockito/internal/configuration/plugins/PluginLoader.java,src/org/mockito/internal/configuration/plugins/PluginLoader.java,48,"throw new MockitoException(""Failed to load "" + service, e);"
True,src/org/mockito/internal/configuration/plugins/PluginLoader.java,src/org/mockito/internal/configuration/plugins/PluginLoader.java,51,List<T> result = new ArrayList<T>();
True,src/org/mockito/internal/configuration/plugins/PluginLoader.java,src/org/mockito/internal/configuration/plugins/PluginLoader.java,52,for (URL resource : Collections.list(resources)) {
True,src/org/mockito/internal/configuration/plugins/PluginLoader.java,src/org/mockito/internal/configuration/plugins/PluginLoader.java,53,InputStream in = null;
True,src/org/mockito/internal/configuration/plugins/PluginLoader.java,src/org/mockito/internal/configuration/plugins/PluginLoader.java,54,try {
True,src/org/mockito/internal/configuration/plugins/PluginLoader.java,src/org/mockito/internal/configuration/plugins/PluginLoader.java,55,in = resource.openStream();
True,src/org/mockito/internal/configuration/plugins/PluginLoader.java,src/org/mockito/internal/configuration/plugins/PluginLoader.java,56,"for (String line : readerToLines(new InputStreamReader(in, ""UTF-8""))) {"
True,src/org/mockito/internal/configuration/plugins/PluginLoader.java,src/org/mockito/internal/configuration/plugins/PluginLoader.java,57,String name = stripCommentAndWhitespace(line);
True,src/org/mockito/internal/configuration/plugins/PluginLoader.java,src/org/mockito/internal/configuration/plugins/PluginLoader.java,58,if (name.length() != 0) {
True,src/org/mockito/internal/configuration/plugins/PluginLoader.java,src/org/mockito/internal/configuration/plugins/PluginLoader.java,59,result.add(service.cast(loader.loadClass(name).newInstance()));
True,src/org/mockito/internal/configuration/plugins/PluginLoader.java,src/org/mockito/internal/configuration/plugins/PluginLoader.java,62,} catch (Exception e) {
True,src/org/mockito/internal/configuration/plugins/PluginLoader.java,src/org/mockito/internal/configuration/plugins/PluginLoader.java,63,throw new MockitoConfigurationException(
True,src/org/mockito/internal/configuration/plugins/PluginLoader.java,src/org/mockito/internal/configuration/plugins/PluginLoader.java,64,"""Failed to load "" + service + "" using "" + resource, e);"
True,src/org/mockito/internal/configuration/plugins/PluginLoader.java,src/org/mockito/internal/configuration/plugins/PluginLoader.java,65,} finally {
True,src/org/mockito/internal/configuration/plugins/PluginLoader.java,src/org/mockito/internal/configuration/plugins/PluginLoader.java,66,closeQuietly(in);
True,src/org/mockito/internal/configuration/plugins/PluginLoader.java,src/org/mockito/internal/configuration/plugins/PluginLoader.java,69,return result;
True,src/org/mockito/internal/configuration/plugins/PluginLoader.java,src/org/mockito/internal/configuration/plugins/PluginLoader.java,72,static List<String> readerToLines(Reader reader) throws IOException {
True,src/org/mockito/internal/configuration/plugins/PluginLoader.java,src/org/mockito/internal/configuration/plugins/PluginLoader.java,73,List<String> result = new ArrayList<String>();
True,src/org/mockito/internal/configuration/plugins/PluginLoader.java,src/org/mockito/internal/configuration/plugins/PluginLoader.java,74,BufferedReader lineReader = new BufferedReader(reader);
True,src/org/mockito/internal/configuration/plugins/PluginLoader.java,src/org/mockito/internal/configuration/plugins/PluginLoader.java,75,String line;
True,src/org/mockito/internal/configuration/plugins/PluginLoader.java,src/org/mockito/internal/configuration/plugins/PluginLoader.java,76,while ((line = lineReader.readLine()) != null) {
True,src/org/mockito/internal/configuration/plugins/PluginLoader.java,src/org/mockito/internal/configuration/plugins/PluginLoader.java,77,result.add(line);
True,src/org/mockito/internal/configuration/plugins/PluginLoader.java,src/org/mockito/internal/configuration/plugins/PluginLoader.java,79,return result;
True,src/org/mockito/internal/configuration/plugins/PluginLoader.java,src/org/mockito/internal/configuration/plugins/PluginLoader.java,82,static String stripCommentAndWhitespace(String line) {
True,src/org/mockito/internal/configuration/plugins/PluginLoader.java,src/org/mockito/internal/configuration/plugins/PluginLoader.java,83,int hash = line.indexOf('#');
True,src/org/mockito/internal/configuration/plugins/PluginLoader.java,src/org/mockito/internal/configuration/plugins/PluginLoader.java,84,if (hash != -1) {
True,src/org/mockito/internal/configuration/plugins/PluginLoader.java,src/org/mockito/internal/configuration/plugins/PluginLoader.java,85,"line = line.substring(0, hash);"
True,src/org/mockito/internal/configuration/plugins/PluginLoader.java,src/org/mockito/internal/configuration/plugins/PluginLoader.java,87,return line.trim();
True,src/org/mockito/internal/configuration/plugins/PluginLoader.java,src/org/mockito/internal/configuration/plugins/PluginLoader.java,90,private static void closeQuietly(InputStream in) {
True,src/org/mockito/internal/configuration/plugins/PluginLoader.java,src/org/mockito/internal/configuration/plugins/PluginLoader.java,91,if (in != null) {
True,src/org/mockito/internal/configuration/plugins/PluginLoader.java,src/org/mockito/internal/configuration/plugins/PluginLoader.java,92,try {
True,src/org/mockito/internal/configuration/plugins/PluginLoader.java,src/org/mockito/internal/configuration/plugins/PluginLoader.java,93,in.close();
True,src/org/mockito/internal/configuration/plugins/PluginLoader.java,src/org/mockito/internal/configuration/plugins/PluginLoader.java,94,} catch (IOException ignored) {
True,src/org/mockito/internal/configuration/plugins/PluginRegistry.java,src/org/mockito/internal/configuration/plugins/PluginRegistry.java,1,package org.mockito.internal.configuration.plugins;
True,src/org/mockito/internal/configuration/plugins/PluginRegistry.java,src/org/mockito/internal/configuration/plugins/PluginRegistry.java,3,import org.mockito.plugins.MockMaker;
True,src/org/mockito/internal/configuration/plugins/PluginRegistry.java,src/org/mockito/internal/configuration/plugins/PluginRegistry.java,4,import org.mockito.plugins.StackTraceCleanerProvider;
True,src/org/mockito/internal/configuration/plugins/PluginRegistry.java,src/org/mockito/internal/configuration/plugins/PluginRegistry.java,7,* Access to Mockito behavior that can be reconfigured by plugins
True,src/org/mockito/internal/configuration/plugins/PluginRegistry.java,src/org/mockito/internal/configuration/plugins/PluginRegistry.java,9,public class PluginRegistry {
True,src/org/mockito/internal/configuration/plugins/PluginRegistry.java,src/org/mockito/internal/configuration/plugins/PluginRegistry.java,11,private static final MockMaker mockMaker
True,src/org/mockito/internal/configuration/plugins/PluginRegistry.java,src/org/mockito/internal/configuration/plugins/PluginRegistry.java,12,"= PluginLoader.plugin(MockMaker.class, ""org.mockito.internal.creation.cglib.CglibMockMaker"");"
True,src/org/mockito/internal/configuration/plugins/PluginRegistry.java,src/org/mockito/internal/configuration/plugins/PluginRegistry.java,14,private static final StackTraceCleanerProvider stackTraceCleanerProvider
True,src/org/mockito/internal/configuration/plugins/PluginRegistry.java,src/org/mockito/internal/configuration/plugins/PluginRegistry.java,15,"= PluginLoader.plugin(StackTraceCleanerProvider.class, ""org.mockito.internal.exceptions.stacktrace.DefaultStackTraceCleanerProvider"");"
True,src/org/mockito/internal/configuration/plugins/PluginRegistry.java,src/org/mockito/internal/configuration/plugins/PluginRegistry.java,18,* The implementation of the stack trace cleaner
True,src/org/mockito/internal/configuration/plugins/PluginRegistry.java,src/org/mockito/internal/configuration/plugins/PluginRegistry.java,20,public static StackTraceCleanerProvider getStackTraceCleanerProvider() {
True,src/org/mockito/internal/configuration/plugins/PluginRegistry.java,src/org/mockito/internal/configuration/plugins/PluginRegistry.java,21,//TODO we should throw some sensible exception if this is null.
True,src/org/mockito/internal/configuration/plugins/PluginRegistry.java,src/org/mockito/internal/configuration/plugins/PluginRegistry.java,22,return stackTraceCleanerProvider;
True,src/org/mockito/internal/configuration/plugins/PluginRegistry.java,src/org/mockito/internal/configuration/plugins/PluginRegistry.java,26,* Returns the implementation of the mock maker available for the current runtime.
True,src/org/mockito/internal/configuration/plugins/PluginRegistry.java,src/org/mockito/internal/configuration/plugins/PluginRegistry.java,28,* <p>Returns {@link org.mockito.internal.creation.cglib.CglibMockMaker} if no
True,src/org/mockito/internal/configuration/plugins/PluginRegistry.java,src/org/mockito/internal/configuration/plugins/PluginRegistry.java,29,* {@link org.mockito.plugins.MockMaker} extension exists or is visible in the current classpath.</p>
True,src/org/mockito/internal/configuration/plugins/PluginRegistry.java,src/org/mockito/internal/configuration/plugins/PluginRegistry.java,31,public static MockMaker getMockMaker() {
True,src/org/mockito/internal/configuration/plugins/PluginRegistry.java,src/org/mockito/internal/configuration/plugins/PluginRegistry.java,32,return mockMaker;
True,src/org/mockito/internal/exceptions/stacktrace/StackTraceFilter.java,src/org/mockito/internal/exceptions/stacktrace/StackTraceFilter.java,10,import org.mockito.internal.configuration.plugins.PluginRegistry;
False,src/org/mockito/internal/exceptions/stacktrace/StackTraceFilter.java,src/org/mockito/internal/exceptions/stacktrace/StackTraceFilter.java,22,lassPathLoader.getStackTraceCleanerProvider().getStackTraceCleaner(new DefaultStackTraceCleaner());
True,src/org/mockito/internal/exceptions/stacktrace/StackTraceFilter.java,src/org/mockito/internal/exceptions/stacktrace/StackTraceFilter.java,23,PluginRegistry.getStackTraceCleanerProvider().getStackTraceCleaner(new DefaultStackTraceCleaner());
True,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,11,import org.mockito.internal.configuration.plugins.PluginRegistry;
False,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,24,rivate static final MockMaker mockMaker = ClassPathLoader.getMockMaker();
True,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,25,private static final MockMaker mockMaker = PluginRegistry.getMockMaker();
True,test/org/mockito/internal/configuration/ClassPathLoaderTest.java,test/org/mockito/internal/configuration/ClassPathLoaderTest.java,1,package org.mockito.internal.configuration;
True,test/org/mockito/internal/configuration/ClassPathLoaderTest.java,test/org/mockito/internal/configuration/ClassPathLoaderTest.java,3,import org.junit.Test;
True,test/org/mockito/internal/configuration/ClassPathLoaderTest.java,test/org/mockito/internal/configuration/ClassPathLoaderTest.java,4,import org.mockito.invocation.InvocationOnMock;
True,test/org/mockito/internal/configuration/ClassPathLoaderTest.java,test/org/mockito/internal/configuration/ClassPathLoaderTest.java,5,import org.mockito.stubbing.Answer;
True,test/org/mockito/internal/configuration/ClassPathLoaderTest.java,test/org/mockito/internal/configuration/ClassPathLoaderTest.java,6,import org.mockitousage.IMethods;
True,test/org/mockito/internal/configuration/ClassPathLoaderTest.java,test/org/mockito/internal/configuration/ClassPathLoaderTest.java,8,import static org.junit.Assert.assertEquals;
True,test/org/mockito/internal/configuration/ClassPathLoaderTest.java,test/org/mockito/internal/configuration/ClassPathLoaderTest.java,9,import static org.mockito.Mockito.mock;
True,test/org/mockito/internal/configuration/ClassPathLoaderTest.java,test/org/mockito/internal/configuration/ClassPathLoaderTest.java,11,public class ClassPathLoaderTest {
True,test/org/mockito/internal/configuration/ClassPathLoaderTest.java,test/org/mockito/internal/configuration/ClassPathLoaderTest.java,13,@Test
True,test/org/mockito/internal/configuration/ClassPathLoaderTest.java,test/org/mockito/internal/configuration/ClassPathLoaderTest.java,14,public void shouldReadConfigurationClassFromClassPath() {
True,test/org/mockito/internal/configuration/ClassPathLoaderTest.java,test/org/mockito/internal/configuration/ClassPathLoaderTest.java,15,ConfigurationAccess.getConfig().overrideDefaultAnswer(new Answer<Object>() {
True,test/org/mockito/internal/configuration/ClassPathLoaderTest.java,test/org/mockito/internal/configuration/ClassPathLoaderTest.java,16,public Object answer(InvocationOnMock invocation) {
True,test/org/mockito/internal/configuration/ClassPathLoaderTest.java,test/org/mockito/internal/configuration/ClassPathLoaderTest.java,17,"return ""foo"";"
True,test/org/mockito/internal/configuration/ClassPathLoaderTest.java,test/org/mockito/internal/configuration/ClassPathLoaderTest.java,20,IMethods mock = mock(IMethods.class);
True,test/org/mockito/internal/configuration/ClassPathLoaderTest.java,test/org/mockito/internal/configuration/ClassPathLoaderTest.java,21,"assertEquals(""foo"", mock.simpleMethod());"
False,test/org/mockito/internal/configuration/ReadingConfigurationFromClasspathTest.java,test/org/mockito/internal/configuration/plugins/PluginLoaderTest.java,5,ackage org.mockito.internal.configuration;
False,test/org/mockito/internal/configuration/ReadingConfigurationFromClasspathTest.java,test/org/mockito/internal/configuration/plugins/PluginLoaderTest.java,7,mport java.io.IOException;
False,test/org/mockito/internal/configuration/ReadingConfigurationFromClasspathTest.java,test/org/mockito/internal/configuration/plugins/PluginLoaderTest.java,8,mport java.io.StringReader;
False,test/org/mockito/internal/configuration/ReadingConfigurationFromClasspathTest.java,test/org/mockito/internal/configuration/plugins/PluginLoaderTest.java,9,mport java.util.Arrays;
False,test/org/mockito/internal/configuration/ReadingConfigurationFromClasspathTest.java,test/org/mockito/internal/configuration/plugins/PluginLoaderTest.java,10,mport java.util.Collections;
False,test/org/mockito/internal/configuration/ReadingConfigurationFromClasspathTest.java,test/org/mockito/internal/configuration/plugins/PluginLoaderTest.java,11,mport static org.mockito.Mockito.*;
False,test/org/mockito/internal/configuration/ReadingConfigurationFromClasspathTest.java,test/org/mockito/internal/configuration/plugins/PluginLoaderTest.java,13,mport org.junit.Test;
False,test/org/mockito/internal/configuration/ReadingConfigurationFromClasspathTest.java,test/org/mockito/internal/configuration/plugins/PluginLoaderTest.java,14,mport org.mockito.invocation.InvocationOnMock;
False,test/org/mockito/internal/configuration/ReadingConfigurationFromClasspathTest.java,test/org/mockito/internal/configuration/plugins/PluginLoaderTest.java,15,mport org.mockito.stubbing.Answer;
False,test/org/mockito/internal/configuration/ReadingConfigurationFromClasspathTest.java,test/org/mockito/internal/configuration/plugins/PluginLoaderTest.java,16,mport org.mockitousage.IMethods;
False,test/org/mockito/internal/configuration/ReadingConfigurationFromClasspathTest.java,test/org/mockito/internal/configuration/plugins/PluginLoaderTest.java,17,mport org.mockitoutil.TestBase;
False,test/org/mockito/internal/configuration/ReadingConfigurationFromClasspathTest.java,test/org/mockito/internal/configuration/plugins/PluginLoaderTest.java,19,ublic class ReadingConfigurationFromClasspathTest extends TestBase {
False,test/org/mockito/internal/configuration/ReadingConfigurationFromClasspathTest.java,test/org/mockito/internal/configuration/plugins/PluginLoaderTest.java,21,Test
False,test/org/mockito/internal/configuration/ReadingConfigurationFromClasspathTest.java,test/org/mockito/internal/configuration/plugins/PluginLoaderTest.java,22,ublic void shouldReadConfigurationClassFromClassPath() {
False,test/org/mockito/internal/configuration/ReadingConfigurationFromClasspathTest.java,test/org/mockito/internal/configuration/plugins/PluginLoaderTest.java,23,onfigurationAccess.getConfig().overrideDefaultAnswer(new Answer<Object>() {
False,test/org/mockito/internal/configuration/ReadingConfigurationFromClasspathTest.java,test/org/mockito/internal/configuration/plugins/PluginLoaderTest.java,24,ublic Object answer(InvocationOnMock invocation) {
False,test/org/mockito/internal/configuration/ReadingConfigurationFromClasspathTest.java,test/org/mockito/internal/configuration/plugins/PluginLoaderTest.java,25,"eturn ""foo"";"
False,test/org/mockito/internal/configuration/ReadingConfigurationFromClasspathTest.java,test/org/mockito/internal/configuration/plugins/PluginLoaderTest.java,28,Methods mock = mock(IMethods.class);
False,test/org/mockito/internal/configuration/ReadingConfigurationFromClasspathTest.java,test/org/mockito/internal/configuration/plugins/PluginLoaderTest.java,29,"ssertEquals(""foo"", mock.simpleMethod());"
False,test/org/mockito/internal/configuration/ReadingConfigurationFromClasspathTest.java,test/org/mockito/internal/configuration/plugins/PluginLoaderTest.java,32,Test
False,test/org/mockito/internal/configuration/ReadingConfigurationFromClasspathTest.java,test/org/mockito/internal/configuration/plugins/PluginLoaderTest.java,33,ublic void readerToLinesEmptyString() throws IOException {
False,test/org/mockito/internal/configuration/ReadingConfigurationFromClasspathTest.java,test/org/mockito/internal/configuration/plugins/PluginLoaderTest.java,34,"ssertEquals(Collections.emptyList(), ClassPathLoader.readerToLines(new StringReader("""")));"
False,test/org/mockito/internal/configuration/ReadingConfigurationFromClasspathTest.java,test/org/mockito/internal/configuration/plugins/PluginLoaderTest.java,37,Test
False,test/org/mockito/internal/configuration/ReadingConfigurationFromClasspathTest.java,test/org/mockito/internal/configuration/plugins/PluginLoaderTest.java,38,ublic void readerToLinesNoLineBreaks() throws IOException {
False,test/org/mockito/internal/configuration/ReadingConfigurationFromClasspathTest.java,test/org/mockito/internal/configuration/plugins/PluginLoaderTest.java,39,"ssertEquals(Arrays.asList(""a""), ClassPathLoader.readerToLines(new StringReader(""a"")));"
False,test/org/mockito/internal/configuration/ReadingConfigurationFromClasspathTest.java,test/org/mockito/internal/configuration/plugins/PluginLoaderTest.java,42,Test
False,test/org/mockito/internal/configuration/ReadingConfigurationFromClasspathTest.java,test/org/mockito/internal/configuration/plugins/PluginLoaderTest.java,43,ublic void readerToLinesWithLineBreaks() throws IOException {
False,test/org/mockito/internal/configuration/ReadingConfigurationFromClasspathTest.java,test/org/mockito/internal/configuration/plugins/PluginLoaderTest.java,44,"ssertEquals(Arrays.asList(""a"", ""b"", ""c""),"
False,test/org/mockito/internal/configuration/ReadingConfigurationFromClasspathTest.java,test/org/mockito/internal/configuration/plugins/PluginLoaderTest.java,45,"lassPathLoader.readerToLines(new StringReader(""a\nb\nc"")));"
False,test/org/mockito/internal/configuration/ReadingConfigurationFromClasspathTest.java,test/org/mockito/internal/configuration/plugins/PluginLoaderTest.java,48,Test
False,test/org/mockito/internal/configuration/ReadingConfigurationFromClasspathTest.java,test/org/mockito/internal/configuration/plugins/PluginLoaderTest.java,49,ublic void readerToLinesWithEmptyLines() throws IOException {
False,test/org/mockito/internal/configuration/ReadingConfigurationFromClasspathTest.java,test/org/mockito/internal/configuration/plugins/PluginLoaderTest.java,50,"ssertEquals(Arrays.asList(""a"", """", ""c""),"
False,test/org/mockito/internal/configuration/ReadingConfigurationFromClasspathTest.java,test/org/mockito/internal/configuration/plugins/PluginLoaderTest.java,51,"lassPathLoader.readerToLines(new StringReader(""a\n\nc"")));"
False,test/org/mockito/internal/configuration/ReadingConfigurationFromClasspathTest.java,test/org/mockito/internal/configuration/plugins/PluginLoaderTest.java,54,Test
False,test/org/mockito/internal/configuration/ReadingConfigurationFromClasspathTest.java,test/org/mockito/internal/configuration/plugins/PluginLoaderTest.java,55,ublic void stripCommentsAndWhitespaceEmptyInput() throws IOException {
False,test/org/mockito/internal/configuration/ReadingConfigurationFromClasspathTest.java,test/org/mockito/internal/configuration/plugins/PluginLoaderTest.java,56,"ssertEquals("""", ClassPathLoader.stripCommentAndWhitespace(""""));"
False,test/org/mockito/internal/configuration/ReadingConfigurationFromClasspathTest.java,test/org/mockito/internal/configuration/plugins/PluginLoaderTest.java,59,Test
False,test/org/mockito/internal/configuration/ReadingConfigurationFromClasspathTest.java,test/org/mockito/internal/configuration/plugins/PluginLoaderTest.java,60,ublic void stripCommentsAndWhitespaceWhitespaceInput() throws IOException {
False,test/org/mockito/internal/configuration/ReadingConfigurationFromClasspathTest.java,test/org/mockito/internal/configuration/plugins/PluginLoaderTest.java,61,"ssertEquals("""", ClassPathLoader.stripCommentAndWhitespace("" ""));"
False,test/org/mockito/internal/configuration/ReadingConfigurationFromClasspathTest.java,test/org/mockito/internal/configuration/plugins/PluginLoaderTest.java,64,Test
False,test/org/mockito/internal/configuration/ReadingConfigurationFromClasspathTest.java,test/org/mockito/internal/configuration/plugins/PluginLoaderTest.java,65,ublic void stripCommentsAndWhitespaceCommentInInput() throws IOException {
False,test/org/mockito/internal/configuration/ReadingConfigurationFromClasspathTest.java,test/org/mockito/internal/configuration/plugins/PluginLoaderTest.java,66,"ssertEquals(""a"", ClassPathLoader.stripCommentAndWhitespace(""a#b""));"
False,test/org/mockito/internal/configuration/ReadingConfigurationFromClasspathTest.java,test/org/mockito/internal/configuration/plugins/PluginLoaderTest.java,69,Test
False,test/org/mockito/internal/configuration/ReadingConfigurationFromClasspathTest.java,test/org/mockito/internal/configuration/plugins/PluginLoaderTest.java,70,ublic void stripCommentsAndWhitespaceMultipleHashes() throws IOException {
False,test/org/mockito/internal/configuration/ReadingConfigurationFromClasspathTest.java,test/org/mockito/internal/configuration/plugins/PluginLoaderTest.java,71,"ssertEquals(""a"", ClassPathLoader.stripCommentAndWhitespace(""a#b#c""));"
False,test/org/mockito/internal/configuration/ReadingConfigurationFromClasspathTest.java,test/org/mockito/internal/configuration/plugins/PluginLoaderTest.java,74,Test
False,test/org/mockito/internal/configuration/ReadingConfigurationFromClasspathTest.java,test/org/mockito/internal/configuration/plugins/PluginLoaderTest.java,75,ublic void stripCommentsAndWhitespaceWithWhitespaceAndComments() throws IOException {
False,test/org/mockito/internal/configuration/ReadingConfigurationFromClasspathTest.java,test/org/mockito/internal/configuration/plugins/PluginLoaderTest.java,76,"ssertEquals(""a"", ClassPathLoader.stripCommentAndWhitespace("" a #b""));"
True,test/org/mockito/internal/configuration/ReadingConfigurationFromClasspathTest.java,test/org/mockito/internal/configuration/plugins/PluginLoaderTest.java,5,package org.mockito.internal.configuration.plugins;
True,test/org/mockito/internal/configuration/ReadingConfigurationFromClasspathTest.java,test/org/mockito/internal/configuration/plugins/PluginLoaderTest.java,7,import java.io.IOException;
True,test/org/mockito/internal/configuration/ReadingConfigurationFromClasspathTest.java,test/org/mockito/internal/configuration/plugins/PluginLoaderTest.java,8,import java.io.StringReader;
True,test/org/mockito/internal/configuration/ReadingConfigurationFromClasspathTest.java,test/org/mockito/internal/configuration/plugins/PluginLoaderTest.java,9,import java.util.Arrays;
True,test/org/mockito/internal/configuration/ReadingConfigurationFromClasspathTest.java,test/org/mockito/internal/configuration/plugins/PluginLoaderTest.java,10,import java.util.Collections;
True,test/org/mockito/internal/configuration/ReadingConfigurationFromClasspathTest.java,test/org/mockito/internal/configuration/plugins/PluginLoaderTest.java,11,import static org.mockito.Mockito.*;
True,test/org/mockito/internal/configuration/ReadingConfigurationFromClasspathTest.java,test/org/mockito/internal/configuration/plugins/PluginLoaderTest.java,13,import junit.framework.Assert;
True,test/org/mockito/internal/configuration/ReadingConfigurationFromClasspathTest.java,test/org/mockito/internal/configuration/plugins/PluginLoaderTest.java,14,import org.junit.Test;
True,test/org/mockito/internal/configuration/ReadingConfigurationFromClasspathTest.java,test/org/mockito/internal/configuration/plugins/PluginLoaderTest.java,15,import org.mockito.internal.configuration.ClassPathLoader;
True,test/org/mockito/internal/configuration/ReadingConfigurationFromClasspathTest.java,test/org/mockito/internal/configuration/plugins/PluginLoaderTest.java,16,import org.mockito.invocation.InvocationOnMock;
True,test/org/mockito/internal/configuration/ReadingConfigurationFromClasspathTest.java,test/org/mockito/internal/configuration/plugins/PluginLoaderTest.java,17,import org.mockito.stubbing.Answer;
True,test/org/mockito/internal/configuration/ReadingConfigurationFromClasspathTest.java,test/org/mockito/internal/configuration/plugins/PluginLoaderTest.java,18,import org.mockitousage.IMethods;
True,test/org/mockito/internal/configuration/ReadingConfigurationFromClasspathTest.java,test/org/mockito/internal/configuration/plugins/PluginLoaderTest.java,19,import org.mockitoutil.TestBase;
True,test/org/mockito/internal/configuration/ReadingConfigurationFromClasspathTest.java,test/org/mockito/internal/configuration/plugins/PluginLoaderTest.java,21,public class PluginLoaderTest extends TestBase {
True,test/org/mockito/internal/configuration/ReadingConfigurationFromClasspathTest.java,test/org/mockito/internal/configuration/plugins/PluginLoaderTest.java,23,@Test
True,test/org/mockito/internal/configuration/ReadingConfigurationFromClasspathTest.java,test/org/mockito/internal/configuration/plugins/PluginLoaderTest.java,24,public void readerToLinesEmptyString() throws IOException {
True,test/org/mockito/internal/configuration/ReadingConfigurationFromClasspathTest.java,test/org/mockito/internal/configuration/plugins/PluginLoaderTest.java,25,"assertEquals(Collections.emptyList(), PluginLoader.readerToLines(new StringReader("""")));"
True,test/org/mockito/internal/configuration/ReadingConfigurationFromClasspathTest.java,test/org/mockito/internal/configuration/plugins/PluginLoaderTest.java,28,@Test
True,test/org/mockito/internal/configuration/ReadingConfigurationFromClasspathTest.java,test/org/mockito/internal/configuration/plugins/PluginLoaderTest.java,29,public void readerToLinesNoLineBreaks() throws IOException {
True,test/org/mockito/internal/configuration/ReadingConfigurationFromClasspathTest.java,test/org/mockito/internal/configuration/plugins/PluginLoaderTest.java,30,"assertEquals(Arrays.asList(""a""), PluginLoader.readerToLines(new StringReader(""a"")));"
True,test/org/mockito/internal/configuration/ReadingConfigurationFromClasspathTest.java,test/org/mockito/internal/configuration/plugins/PluginLoaderTest.java,33,@Test
True,test/org/mockito/internal/configuration/ReadingConfigurationFromClasspathTest.java,test/org/mockito/internal/configuration/plugins/PluginLoaderTest.java,34,public void readerToLinesWithLineBreaks() throws IOException {
True,test/org/mockito/internal/configuration/ReadingConfigurationFromClasspathTest.java,test/org/mockito/internal/configuration/plugins/PluginLoaderTest.java,35,"assertEquals(Arrays.asList(""a"", ""b"", ""c""),"
True,test/org/mockito/internal/configuration/ReadingConfigurationFromClasspathTest.java,test/org/mockito/internal/configuration/plugins/PluginLoaderTest.java,36,"PluginLoader.readerToLines(new StringReader(""a\nb\nc"")));"
True,test/org/mockito/internal/configuration/ReadingConfigurationFromClasspathTest.java,test/org/mockito/internal/configuration/plugins/PluginLoaderTest.java,39,@Test
True,test/org/mockito/internal/configuration/ReadingConfigurationFromClasspathTest.java,test/org/mockito/internal/configuration/plugins/PluginLoaderTest.java,40,public void readerToLinesWithEmptyLines() throws IOException {
True,test/org/mockito/internal/configuration/ReadingConfigurationFromClasspathTest.java,test/org/mockito/internal/configuration/plugins/PluginLoaderTest.java,41,"assertEquals(Arrays.asList(""a"", """", ""c""),"
True,test/org/mockito/internal/configuration/ReadingConfigurationFromClasspathTest.java,test/org/mockito/internal/configuration/plugins/PluginLoaderTest.java,42,"PluginLoader.readerToLines(new StringReader(""a\n\nc"")));"
True,test/org/mockito/internal/configuration/ReadingConfigurationFromClasspathTest.java,test/org/mockito/internal/configuration/plugins/PluginLoaderTest.java,45,@Test
True,test/org/mockito/internal/configuration/ReadingConfigurationFromClasspathTest.java,test/org/mockito/internal/configuration/plugins/PluginLoaderTest.java,46,public void stripCommentsAndWhitespaceEmptyInput() throws IOException {
True,test/org/mockito/internal/configuration/ReadingConfigurationFromClasspathTest.java,test/org/mockito/internal/configuration/plugins/PluginLoaderTest.java,47,"assertEquals("""", PluginLoader.stripCommentAndWhitespace(""""));"
True,test/org/mockito/internal/configuration/ReadingConfigurationFromClasspathTest.java,test/org/mockito/internal/configuration/plugins/PluginLoaderTest.java,50,@Test
True,test/org/mockito/internal/configuration/ReadingConfigurationFromClasspathTest.java,test/org/mockito/internal/configuration/plugins/PluginLoaderTest.java,51,public void stripCommentsAndWhitespaceWhitespaceInput() throws IOException {
True,test/org/mockito/internal/configuration/ReadingConfigurationFromClasspathTest.java,test/org/mockito/internal/configuration/plugins/PluginLoaderTest.java,52,"assertEquals("""", PluginLoader.stripCommentAndWhitespace("" ""));"
True,test/org/mockito/internal/configuration/ReadingConfigurationFromClasspathTest.java,test/org/mockito/internal/configuration/plugins/PluginLoaderTest.java,55,@Test
True,test/org/mockito/internal/configuration/ReadingConfigurationFromClasspathTest.java,test/org/mockito/internal/configuration/plugins/PluginLoaderTest.java,56,public void stripCommentsAndWhitespaceCommentInInput() throws IOException {
True,test/org/mockito/internal/configuration/ReadingConfigurationFromClasspathTest.java,test/org/mockito/internal/configuration/plugins/PluginLoaderTest.java,57,"assertEquals(""a"", PluginLoader.stripCommentAndWhitespace(""a#b""));"
True,test/org/mockito/internal/configuration/ReadingConfigurationFromClasspathTest.java,test/org/mockito/internal/configuration/plugins/PluginLoaderTest.java,60,@Test
True,test/org/mockito/internal/configuration/ReadingConfigurationFromClasspathTest.java,test/org/mockito/internal/configuration/plugins/PluginLoaderTest.java,61,public void stripCommentsAndWhitespaceMultipleHashes() throws IOException {
True,test/org/mockito/internal/configuration/ReadingConfigurationFromClasspathTest.java,test/org/mockito/internal/configuration/plugins/PluginLoaderTest.java,62,"assertEquals(""a"", PluginLoader.stripCommentAndWhitespace(""a#b#c""));"
True,test/org/mockito/internal/configuration/ReadingConfigurationFromClasspathTest.java,test/org/mockito/internal/configuration/plugins/PluginLoaderTest.java,65,@Test
True,test/org/mockito/internal/configuration/ReadingConfigurationFromClasspathTest.java,test/org/mockito/internal/configuration/plugins/PluginLoaderTest.java,66,public void stripCommentsAndWhitespaceWithWhitespaceAndComments() throws IOException {
True,test/org/mockito/internal/configuration/ReadingConfigurationFromClasspathTest.java,test/org/mockito/internal/configuration/plugins/PluginLoaderTest.java,67,"assertEquals(""a"", PluginLoader.stripCommentAndWhitespace("" a #b""));"
