is_addition,old_file_path,new_file_path,line_num,content
True,test/org/mockito/usage/binding/BaseClass.java,test/org/mockito/usage/binding/BaseClass.java,1,package org.mockito.usage.binding;
True,test/org/mockito/usage/binding/BaseClass.java,test/org/mockito/usage/binding/BaseClass.java,3,"public class BaseClass<M extends BaseMessage, D extends IBaseInteface<M>> {"
True,test/org/mockito/usage/binding/BaseClass.java,test/org/mockito/usage/binding/BaseClass.java,5,private final D object;
True,test/org/mockito/usage/binding/BaseClass.java,test/org/mockito/usage/binding/BaseClass.java,7,BaseClass(D object) {
True,test/org/mockito/usage/binding/BaseClass.java,test/org/mockito/usage/binding/BaseClass.java,8,this.object = object;
True,test/org/mockito/usage/binding/BaseClass.java,test/org/mockito/usage/binding/BaseClass.java,11,public void print(M message) {
True,test/org/mockito/usage/binding/BaseClass.java,test/org/mockito/usage/binding/BaseClass.java,12,object.print(message);
True,test/org/mockito/usage/binding/BaseMessage.java,test/org/mockito/usage/binding/BaseMessage.java,1,package org.mockito.usage.binding;
True,test/org/mockito/usage/binding/BaseMessage.java,test/org/mockito/usage/binding/BaseMessage.java,3,public class BaseMessage {
True,test/org/mockito/usage/binding/BaseMessage.java,test/org/mockito/usage/binding/BaseMessage.java,4,private String content;
True,test/org/mockito/usage/binding/BaseMessage.java,test/org/mockito/usage/binding/BaseMessage.java,6,public String getContent() {
True,test/org/mockito/usage/binding/BaseMessage.java,test/org/mockito/usage/binding/BaseMessage.java,7,return content;
True,test/org/mockito/usage/binding/BaseMessage.java,test/org/mockito/usage/binding/BaseMessage.java,10,protected void setContent(String content) {
True,test/org/mockito/usage/binding/BaseMessage.java,test/org/mockito/usage/binding/BaseMessage.java,11,this.content = content;
True,test/org/mockito/usage/binding/ClassUseDerivedInterface.java,test/org/mockito/usage/binding/ClassUseDerivedInterface.java,1,package org.mockito.usage.binding;
True,test/org/mockito/usage/binding/ClassUseDerivedInterface.java,test/org/mockito/usage/binding/ClassUseDerivedInterface.java,3,"public class ClassUseDerivedInterface extends BaseClass<Message, IDerivedInterface> {"
True,test/org/mockito/usage/binding/ClassUseDerivedInterface.java,test/org/mockito/usage/binding/ClassUseDerivedInterface.java,5,public ClassUseDerivedInterface(IDerivedInterface derivedIterfaceObject) {
True,test/org/mockito/usage/binding/ClassUseDerivedInterface.java,test/org/mockito/usage/binding/ClassUseDerivedInterface.java,6,super(derivedIterfaceObject);
True,test/org/mockito/usage/binding/IBaseInteface.java,test/org/mockito/usage/binding/IBaseInteface.java,1,package org.mockito.usage.binding;
True,test/org/mockito/usage/binding/IBaseInteface.java,test/org/mockito/usage/binding/IBaseInteface.java,4,public interface IBaseInteface <E extends BaseMessage>{
True,test/org/mockito/usage/binding/IBaseInteface.java,test/org/mockito/usage/binding/IBaseInteface.java,5,public void print(E message);
True,test/org/mockito/usage/binding/IDerivedInterface.java,test/org/mockito/usage/binding/IDerivedInterface.java,1,package org.mockito.usage.binding;
True,test/org/mockito/usage/binding/IDerivedInterface.java,test/org/mockito/usage/binding/IDerivedInterface.java,3,public interface IDerivedInterface extends IBaseInteface<Message>{
True,test/org/mockito/usage/binding/IDerivedInterface.java,test/org/mockito/usage/binding/IDerivedInterface.java,4,public void print(Message message);
True,test/org/mockito/usage/binding/ISuperDerived.java,test/org/mockito/usage/binding/ISuperDerived.java,1,package org.mockito.usage.binding;
True,test/org/mockito/usage/binding/ISuperDerived.java,test/org/mockito/usage/binding/ISuperDerived.java,3,public interface ISuperDerived extends IBaseInteface<Message> {
True,test/org/mockito/usage/binding/ISuperDerived.java,test/org/mockito/usage/binding/ISuperDerived.java,4,public void print(Message Message);
True,test/org/mockito/usage/binding/IncorectBindingTest.java,test/org/mockito/usage/binding/IncorectBindingTest.java,1,package org.mockito.usage.binding;
True,test/org/mockito/usage/binding/IncorectBindingTest.java,test/org/mockito/usage/binding/IncorectBindingTest.java,3,import org.junit.Test;
True,test/org/mockito/usage/binding/IncorectBindingTest.java,test/org/mockito/usage/binding/IncorectBindingTest.java,4,import org.mockito.Mockito;
True,test/org/mockito/usage/binding/IncorectBindingTest.java,test/org/mockito/usage/binding/IncorectBindingTest.java,7,public class IncorectBindingTest {
True,test/org/mockito/usage/binding/IncorectBindingTest.java,test/org/mockito/usage/binding/IncorectBindingTest.java,10,@Test
True,test/org/mockito/usage/binding/IncorectBindingTest.java,test/org/mockito/usage/binding/IncorectBindingTest.java,11,public void overriddenInterfaceMethod() throws Exception {
True,test/org/mockito/usage/binding/IncorectBindingTest.java,test/org/mockito/usage/binding/IncorectBindingTest.java,12,IDerivedInterface mock = Mockito.mock(IDerivedInterface.class);
True,test/org/mockito/usage/binding/IncorectBindingTest.java,test/org/mockito/usage/binding/IncorectBindingTest.java,14,ClassUseDerivedInterface superDerived = new ClassUseDerivedInterface(mock);
True,test/org/mockito/usage/binding/IncorectBindingTest.java,test/org/mockito/usage/binding/IncorectBindingTest.java,15,"Message message = new Message(""Shake it baby"");"
True,test/org/mockito/usage/binding/IncorectBindingTest.java,test/org/mockito/usage/binding/IncorectBindingTest.java,18,superDerived.print(message);
True,test/org/mockito/usage/binding/IncorectBindingTest.java,test/org/mockito/usage/binding/IncorectBindingTest.java,21,Mockito.verify(mock).print(message);
True,test/org/mockito/usage/binding/Message.java,test/org/mockito/usage/binding/Message.java,1,package org.mockito.usage.binding;
True,test/org/mockito/usage/binding/Message.java,test/org/mockito/usage/binding/Message.java,3,public class Message extends BaseMessage{
True,test/org/mockito/usage/binding/Message.java,test/org/mockito/usage/binding/Message.java,5,public Message(String content) {
True,test/org/mockito/usage/binding/Message.java,test/org/mockito/usage/binding/Message.java,6,setContent(content);
True,test/org/mockito/usage/binding/OverriddenIntrefaceMethodTest.java,test/org/mockito/usage/binding/OverriddenIntrefaceMethodTest.java,1,package org.mockito.usage.binding;
True,test/org/mockito/usage/binding/OverriddenIntrefaceMethodTest.java,test/org/mockito/usage/binding/OverriddenIntrefaceMethodTest.java,3,import org.junit.Test;
True,test/org/mockito/usage/binding/OverriddenIntrefaceMethodTest.java,test/org/mockito/usage/binding/OverriddenIntrefaceMethodTest.java,4,import org.mockito.Mockito;
True,test/org/mockito/usage/binding/OverriddenIntrefaceMethodTest.java,test/org/mockito/usage/binding/OverriddenIntrefaceMethodTest.java,7,public class OverriddenIntrefaceMethodTest {
True,test/org/mockito/usage/binding/OverriddenIntrefaceMethodTest.java,test/org/mockito/usage/binding/OverriddenIntrefaceMethodTest.java,10,@Test
True,test/org/mockito/usage/binding/OverriddenIntrefaceMethodTest.java,test/org/mockito/usage/binding/OverriddenIntrefaceMethodTest.java,11,public void virtualMethodTableBinding() throws Exception {
True,test/org/mockito/usage/binding/OverriddenIntrefaceMethodTest.java,test/org/mockito/usage/binding/OverriddenIntrefaceMethodTest.java,12,IDerivedInterface mock = Mockito.mock(IDerivedInterface.class);
True,test/org/mockito/usage/binding/OverriddenIntrefaceMethodTest.java,test/org/mockito/usage/binding/OverriddenIntrefaceMethodTest.java,14,ClassUseDerivedInterface superDerived = new ClassUseDerivedInterface(mock);
True,test/org/mockito/usage/binding/OverriddenIntrefaceMethodTest.java,test/org/mockito/usage/binding/OverriddenIntrefaceMethodTest.java,15,"Message message = new Message(""Shake it baby"");"
True,test/org/mockito/usage/binding/OverriddenIntrefaceMethodTest.java,test/org/mockito/usage/binding/OverriddenIntrefaceMethodTest.java,18,superDerived.print(message);
True,test/org/mockito/usage/binding/OverriddenIntrefaceMethodTest.java,test/org/mockito/usage/binding/OverriddenIntrefaceMethodTest.java,20,Mockito.verify(mock).print(message);
True,test/org/mockito/usage/binding/SuperClassUseSuperDerived.java,test/org/mockito/usage/binding/SuperClassUseSuperDerived.java,1,package org.mockito.usage.binding;
True,test/org/mockito/usage/binding/SuperClassUseSuperDerived.java,test/org/mockito/usage/binding/SuperClassUseSuperDerived.java,3,"public class SuperClassUseSuperDerived extends BaseClass<Message, IDerivedInterface> {"
True,test/org/mockito/usage/binding/SuperClassUseSuperDerived.java,test/org/mockito/usage/binding/SuperClassUseSuperDerived.java,5,public SuperClassUseSuperDerived(IDerivedInterface derivedIterfaceObject) {
True,test/org/mockito/usage/binding/SuperClassUseSuperDerived.java,test/org/mockito/usage/binding/SuperClassUseSuperDerived.java,6,super(derivedIterfaceObject);
