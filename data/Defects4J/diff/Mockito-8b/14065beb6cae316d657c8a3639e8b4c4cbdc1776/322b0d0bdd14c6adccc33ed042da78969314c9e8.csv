is_addition,old_file_path,new_file_path,line_num,content
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,26, <b>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,27,         1. Let's verify some behaviour!
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,28,   <br/> 2. How about some stubbing?
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,29,   <br/> 3. Argument matchers
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,30,   <br/> 4. Verifying exact number of invocations / at least once / never
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,31,   <br/> 5. Stubbing void methods with exceptions
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,32,   <br/> 6. Verification in order
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,33,   <br/> 7. Making sure interaction(s) never happened on mock
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,34,   <br/> 8. Finding redundant invocations
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,35,   <br/> 9. Shorthand for mocks creation - &#064;Mock annotation
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,36,   <br/> 10. (**New**) Stubbing consecutive calls (iterator-style stubbing)
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,37,   <br/> 11. (**New**) Stubbing with callbacks
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,26,* <b> 1. Let's verify some behaviour! <br/> 2. How about some stubbing? <br/>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,27,* 3. Argument matchers <br/> 4. Verifying exact number of invocations / at
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,28,* least once / never <br/> 5. Stubbing void methods with exceptions <br/> 6.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,29,* Verification in order <br/> 7. Making sure interaction(s) never happened on
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,30,* mock <br/> 8. Finding redundant invocations <br/> 9. Shorthand for mocks
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,31,* creation - &#064;Mock annotation <br/> 10. (**New**) Stubbing consecutive
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,32,* calls (iterator-style stubbing) <br/> 11. (**New**) Stubbing with callbacks
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,41," Following examples mock List, because everyone knows its interface (methods like add(), get(), clear() will be used)."
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,42, <br>You probably wouldn't mock List class 'in real'.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,36,"* Following examples mock List, because everyone knows its interface (methods"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,37,"* like add(), get(), clear() will be used). <br>"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,38,* You probably wouldn't mock List class 'in real'.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,63," Once created, mock will remember all invocations. Then you can"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,64, selectively verify whatever interaction you are interested in.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,59,"* Once created, mock will remember all invocations. Then you can selectively"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,60,* verify whatever interaction you are interested in.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,85, //Stubbed invocations <b>are verified implicitly</b>. The execution flow of your own code does it completely <b>for free</b>.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,86," //Although it is possible to verify a stubbed invocation, in majority of cases <b>it's not necessary</b>:"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,81,* //Stubbed invocations &lt;b&gt;are verified implicitly&lt;/b&gt;. The execution flow of your own code does it completely &lt;b&gt;for free&lt;/b&gt;.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,82,"* //Although it is possible to verify a stubbed invocation, in majority of cases &lt;b&gt;it's not necessary&lt;/b&gt;:"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,91, <li>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,92," By default, for all methods that return value, mock returns null,"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,93, an empty collection or appropriate primitive/primitive wrapper value
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,94," (e.g: 0, false, ... for int/Integer, boolean/Boolean, ...)."
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,95, </li>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,96, <li>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,97, Stubbing can be overridden: for example common stubbing can go to fixture setup
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,98, but test methods can override it.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,99, </li>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,100, <li>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,101," Once stubbed, mocked method will always return stubbed value regardless of how many times it is called."
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,102, </li>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,103, <li>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,104, Last stubbing is more important - when you stubbed the same method with the same arguments many times.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,105, </li>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,106, <li>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,107," Although it is possible to verify a stubbed invocation, in majority of cases <b>it's not necessary</b>."
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,108, Stubbed invocations <b>are verified implicitly</b>. The execution flow of your own code does it completely <b>for free</b>.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,109, </li>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,87,"* <li> By default, for all methods that return value, mock returns null, an"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,88,"* empty collection or appropriate primitive/primitive wrapper value (e.g: 0,"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,89,"* false, ... for int/Integer, boolean/Boolean, ...). </li>"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,90,* <li> Stubbing can be overridden: for example common stubbing can go to
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,91,* fixture setup but test methods can override it. </li>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,92,"* <li> Once stubbed, mocked method will always return stubbed value regardless"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,93,* of how many times it is called. </li>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,94,* <li> Last stubbing is more important - when you stubbed the same method with
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,95,* the same arguments many times. </li>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,96,"* <li> Although it is possible to verify a stubbed invocation, in majority of"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,97,* cases <b>it's not necessary</b>. Stubbed invocations <b>are verified
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,98,* implicitly</b>. The execution flow of your own code does it completely
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,99,* <b>for free</b>. </li>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,115,  //stubbing using built-in anyInt() argument matcher
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,116,"  stub(mockedList.get(anyInt())).toReturn(""element"");"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,118,  //stubbing using hamcrest (let's say isValid() returns your own hamcrest matcher):
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,119,"  stub(mockedList.contains(argThat(isValid()))).toReturn(""element"");"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,121,"  //following prints ""element"""
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,122,  System.out.println(mockedList.get(999));
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,124,  //<b>you can also verify using argument matcher</b>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,125,  verify(mockedList).get(anyInt());
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,105,* //stubbing using built-in anyInt() argument matcher
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,106,"* stub(mockedList.get(anyInt())).toReturn(""element"");"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,108,* //stubbing using hamcrest (let's say isValid() returns your own hamcrest matcher):
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,109,"* stub(mockedList.contains(argThat(isValid()))).toReturn(""element"");"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,111,"* //following prints ""element"""
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,112,* System.out.println(mockedList.get(999));
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,114,* //&lt;b&gt;you can also verify using argument matcher&lt;/b&gt;
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,115,* verify(mockedList).get(anyInt());
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,129, Argument matchers allow flexible verification or stubbing.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,130, See the <b>whole library of</b> {@link Matchers} including examples of <b>custom argument matchers / hamcrest matchers</b>.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,119,* Argument matchers allow flexible verification or stubbing. See the <b>whole
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,120,* library of</b> {@link Matchers} including examples of <b>custom argument
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,121,* matchers / hamcrest matchers</b>.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,134," If you are using argument matchers, <b>all arguments</b> have to be provided by matchers."
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,125,"* If you are using argument matchers, <b>all arguments</b> have to be provided"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,126,* by matchers.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,138,"   verify(mock).someMethod(anyInt(), anyString(), <b>eq(""third argument"")</b>);"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,131,"*   verify(mock).someMethod(anyInt(), anyString(), &lt;b&gt;eq(""third argument"")&lt;/b&gt;);"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,141,"   verify(mock).someMethod(anyInt(), anyString(), <b>""third argument""</b>);"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,134,"*   verify(mock).someMethod(anyInt(), anyString(), &lt;b&gt;""third argument""&lt;/b&gt;);"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,147,<pre>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,148,  //using mock
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,149,"  mockedList.add(""once"");"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,151,"  mockedList.add(""twice"");"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,152,"  mockedList.add(""twice"");"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,154,"  mockedList.add(""three times"");"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,155,"  mockedList.add(""three times"");"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,156,"  mockedList.add(""three times"");"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,158,  //following two verifications work exactly the same - times(1) is used by default
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,159,"  verify(mockedList).add(""once"");"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,160,"  verify(mockedList, times(1)).add(""once"");"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,162,  //exact number of invocations verification
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,163,"  verify(mockedList, times(2)).add(""twice"");"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,164,"  verify(mockedList, times(3)).add(""three times"");"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,166,  //verification using never(). never() is an alias to times(0)
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,167,"  verify(mockedList, never()).add(""never happened"");"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,169,  //verification using atLeastOnce()
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,170,"  verify(mockedList, atLeastOnce()).add(""three times"");"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,140,* <pre>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,141,* //using mock
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,142,"* mockedList.add(""once"");"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,144,"* mockedList.add(""twice"");"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,145,"* mockedList.add(""twice"");"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,147,"* mockedList.add(""three times"");"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,148,"* mockedList.add(""three times"");"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,149,"* mockedList.add(""three times"");"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,151,* //following two verifications work exactly the same - times(1) is used by default
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,152,"* verify(mockedList).add(""once"");"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,153,"* verify(mockedList, times(1)).add(""once"");"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,155,* //exact number of invocations verification
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,156,"* verify(mockedList, times(2)).add(""twice"");"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,157,"* verify(mockedList, times(3)).add(""three times"");"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,159,* //verification using never(). never() is an alias to times(0)
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,160,"* verify(mockedList, never()).add(""never happened"");"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,162,* //verification using atLeastOnce()
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,163,"* verify(mockedList, atLeastOnce()).add(""three times"");"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,175, <b>times(1) is the default.</b> Therefore using times(1) explicitly can be omitted.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,168,* <b>times(1) is the default.</b> Therefore using times(1) explicitly can be
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,169,* omitted.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,180,   stubVoid(mockedList).toThrow(new RuntimeException()).on().clear();
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,182,   //following throws exception
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,183,   mockedList.clear();
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,174,* stubVoid(mockedList).toThrow(new RuntimeException()).on().clear();
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,176,* //following throws exception
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,177,* mockedList.clear();
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,189,   List firstMock = mock(List.class);
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,190,   List secondMock = mock(List.class);
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,192,   //using mocks
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,193,"   firstMock.add(""was called first"");"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,194,"   secondMock.add(""was called second"");"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,196,   //create inOrder object passing any mocks that need to be verified in order
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,197,"   InOrder inOrder = inOrder(firstMock, secondMock);"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,199,   //following will make sure that firstMock was called before secondMock
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,200,"   inOrder.verify(firstMock).add(""was called first"");"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,201,"   inOrder.verify(secondMock).add(""was called second"");"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,183,* List firstMock = mock(List.class);
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,184,* List secondMock = mock(List.class);
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,186,* //using mocks
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,187,"* firstMock.add(""was called first"");"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,188,"* secondMock.add(""was called second"");"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,190,* //create inOrder object passing any mocks that need to be verified in order
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,191,"* InOrder inOrder = inOrder(firstMock, secondMock);"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,193,* //following will make sure that firstMock was called before secondMock
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,194,"* inOrder.verify(firstMock).add(""was called first"");"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,195,"* inOrder.verify(secondMock).add(""was called second"");"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,204, Verification in order is flexible - <b>you don't have to verify all interactions</b> one-by-one
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,205, but only those that you are interested in testing in order.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,198,* Verification in order is flexible - <b>you don't have to verify all
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,199,* interactions</b> one-by-one but only those that you are interested in
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,200,* testing in order.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,207," Also, you can create InOrder object passing only mocks that relevant for in-order verification."
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,202,"* Also, you can create InOrder object passing only mocks that relevant for"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,203,* in-order verification.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,212,   //using mocks - only mockOne is interacted
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,213,"   mockOne.add(""one"");"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,215,   //ordinary verification
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,216,"   verify(mockOne).add(""one"");"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,218,   //verify that method was never called on a mock
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,219,"   verify(mockOne, never()).add(""two"");"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,221,   //verify that other mocks were not interacted
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,222,"   verifyZeroInteractions(mockTwo, mockThree);"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,224,   //following works exactly the same as above
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,225,"   verifyNoMoreInteractions(mockTwo, mockThree);"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,208,* //using mocks - only mockOne is interacted
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,209,"* mockOne.add(""one"");"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,211,* //ordinary verification
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,212,"* verify(mockOne).add(""one"");"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,214,* //verify that method was never called on a mock
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,215,"* verify(mockOne, never()).add(""two"");"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,217,* //verify that other mocks were not interacted
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,218,"* verifyZeroInteractions(mockTwo, mockThree);"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,220,* //following works exactly the same as above
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,221,"* verifyNoMoreInteractions(mockTwo, mockThree);"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,231, Instead of verifyZeroInteractions() you can call verifyNoMoreInteractions() but
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,232, the first one is more explicit and can read better.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,227,* Instead of verifyZeroInteractions() you can call verifyNoMoreInteractions()
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,228,* but the first one is more explicit and can read better.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,237,   //using mocks
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,238,"   mockedList.add(""one"");"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,239,"   mockedList.add(""two"");"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,241,"   verify(mockedList).add(""one"");"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,243,   //following verification will fail
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,244,   verifyNoMoreInteractions(mockedList);
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,233,* //using mocks
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,234,"* mockedList.add(""one"");"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,235,"* mockedList.add(""two"");"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,237,"* verify(mockedList).add(""one"");"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,239,* //following verification will fail
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,240,* verifyNoMoreInteractions(mockedList);
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,247, Remember that usually it's not necessary to call verifyNoMoreInteractions() all the time.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,248, See also {@link Mockito#never()} - it is more explicit and communicates an intent well.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,243,* Remember that usually it's not necessary to call verifyNoMoreInteractions()
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,244,* all the time. See also {@link Mockito#never()} - it is more explicit and
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,245,* communicates an intent well.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,254, <li>Minimizes repetitive mock creation code.</li>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,251,* <li>Minimizes repetitive mock creation code.</li>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,256, <li>Makes the verification error easier to read because <b>field name</b> is used to identify the mock.</li>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,253,* <li>Makes the verification error easier to read because <b>field name</b>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,254,* is used to identify the mock.</li>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,269, <b>Important!</b> This needs to be somewhere in the base class or a test runner:
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,267,* <b>Important!</b> This needs to be somewhere in the base class or a test
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,268,* runner:
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,272,   MockitoAnnotations.initMocks(testClass);
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,271,* MockitoAnnotations.initMocks(testClass);
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,275, Examples how to write a junit test runner are in Mockito test code (mockito/test/org/mockitousage/examples/junitrunner package);
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,274,* Examples how to write a junit test runner are in Mockito test code
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,275,* (mockito/test/org/mockitousage/examples/junitrunner package);
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,281, Sometimes we need to stub with different return value/exception for the same method call.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,282, Typical use case could be mocking iterators. Initially this feature was not included in original version of Mockito to promote simple mocking.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,283, Instead of iterators we strongly recommend using Iterable or simply collections. Those offer natural ways of stubbing (e.g. using real collections).
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,284," In rare scenarios stubbing consecutive calls could useful, though:"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,281,* Sometimes we need to stub with different return value/exception for the same
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,282,* method call. Typical use case could be mocking iterators. Initially this
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,283,* feature was not included in original version of Mockito to promote simple
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,284,* mocking. Instead of iterators we strongly recommend using Iterable or simply
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,285,* collections. Those offer natural ways of stubbing (e.g. using real
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,286,"* collections). In rare scenarios stubbing consecutive calls could useful,"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,287,* though:
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,287,"   stub(mock.someMethod(""some arg""))"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,288,    .toThrow(new RuntimeException())
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,289,"    .toReturn(""foo"");"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,291,   //First call: throws runtime exception:
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,292,"   mock.someMethod(""some arg"");"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,294,"   //Second call: prints ""foo"""
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,295,"   System.out.println(mock.someMethod(""some arg""));"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,297,"   //Any consecutive call: prints ""foo"" as well (last stubbing wins)."
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,298,"   System.out.println(mock.someMethod(""some arg""));"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,291,"* stub(mock.someMethod(""some arg"")).toThrow(new RuntimeException()).toReturn(""foo"");"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,293,* //First call: throws runtime exception:
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,294,"* mock.someMethod(""some arg"");"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,296,"* //Second call: prints ""foo"""
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,297,"* System.out.println(mock.someMethod(""some arg""));"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,299,"* //Any consecutive call: prints ""foo"" as well (last stubbing wins)."
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,300,"* System.out.println(mock.someMethod(""some arg""));"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,303, Yet another controversial feature which was not included in Mockito originally.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,304, We strongly recommend using simple stubbing (toReturn() or toThrow() only).
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,305, Those two should be <b>just enough</b> to test/test-drive any decent (clean & simple) code.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,305,* Yet another controversial feature which was not included in Mockito
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,306,* originally. We strongly recommend using simple stubbing (toReturn() or
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,307,* toThrow() only). Those two should be <b>just enough</b> to test/test-drive
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,308,* any decent (clean & simple) code.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,311,   stub(mock.someMethod(anyString()))
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,312,     .toAnswer(new Answer() {
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,313,       Object answer(InvocationOnMock invocation) {
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,315,* stub(mock.someMethod(anyString())).toAnswer(new Answer() {
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,316,*     Object answer(InvocationOnMock invocation) {
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,320,"   //Following prints ""called with arguments: foo"""
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,321,"   System.out.println(mock.someMethod(""foo""));"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,323,"* //Following prints ""called with arguments: foo"""
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,324,"* System.out.println(mock.someMethod(""foo""));"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,325,* </pre>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,327,* <h3> 13. (**New**) Spying on real objects</h3>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,329,* You can create spies of real objects. When you use the spy then the <b>real</b> methods are called (unless a method was stubbed).
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,331,* <pre>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,332,*   List list = new LinkedList();
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,333,*   List spy = Mockito.spy(list);
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,335,"*   //optionally, you can stub out some methods:"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,336,*   stub(spy.size()).toReturn(100);
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,338,*   //using the spy calls <b>real</b> methods
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,339,"*   spy.add(""one"");"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,340,"*   spy.add(""two"");"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,342,"*   //prints ""one"" - the first element of a list"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,343,*   System.out.println(spy.get(0));
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,345,*   //size() method was stubbed - 100 is printed
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,346,*   System.out.println(spy.size());
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,348,"*   //optionally, you can verify"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,349,"*   verify(spy).add(""one"");"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,350,"*   verify(spy).add(""two"");"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,351,* </pre>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,353,* <h3>IMPORTANT</h3>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,355,* Sometimes it's impossible to use {@link Mockito#stub(Object)} for stubbing spies. Example:
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,357,* <pre>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,358,*   List list = new LinkedList();
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,359,*   List spy = Mockito.spy(list);
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,361,*   //Impossible: real method is called so spy.get(0) throws IndexOutOfBoundsException because the list is yet empty
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,362,"*   stub(spy.get(0)).toReturn(""foo"");"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,364,*   //You have to use doReturn() for stubbing
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,365,"*   doReturn(""foo"").when(spy).get(0);"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,368,"@SuppressWarnings(""unchecked"")"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,341,"eturn MockUtil.createMock(classToMock, null, MOCKING_PROGRESS);"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,386,"return mock(classToMock, null);"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,344,"tatic <T> T mock(Class<T> classToMock, String name) {"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,345,"eturn MockUtil.createMock(classToMock, name, MOCKING_PROGRESS);"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,390,* Creates mock with a name. Naming mocks can be helpful for debugging.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,391,* Remember that naming mocks is not a solution for complex test/code which uses too many mocks.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,392,* <p>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,393,* If you use &#064;Mock annotation then you've got naming mocks for free. &#064;Mock uses field name as mock name.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,394,* <p>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,396,* See examples in javadoc for {@link Mockito} class
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,398,* @param classToMock class or interface to mock
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,399,* @return mock object
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,401,"public static <T> T mock(Class<T> classToMock, String name) {"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,402,"return MockUtil.createMock(classToMock, name, MOCKING_PROGRESS, null);"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,406,* Creates a spy of the real object. Example:
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,408,* <pre>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,409,*   List list = new LinkedList();
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,410,*   List spy = Mockito.spy(list);
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,412,"*   //optionally, you can stub out some methods:"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,413,*   stub(spy.size()).toReturn(100);
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,415,*   //using the spy calls <b>real</b> methods
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,416,"*   spy.add(""one"");"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,417,"*   spy.add(""two"");"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,419,"*   //prints ""one"" - the first element of a list"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,420,*   System.out.println(spy.get(0));
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,422,*   //size() method was stubbed - 100 is printed
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,423,*   System.out.println(spy.size());
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,425,"*   //optionally, you can verify"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,426,"*   verify(spy).add(""one"");"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,427,"*   verify(spy).add(""two"");"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,428,* </pre>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,430,* <h3>IMPORTANT</h3>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,432,* Sometimes it's impossible to use {@link Mockito#stub(Object)} for stubbing spies. Example:
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,434,* <pre>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,435,*   List list = new LinkedList();
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,436,*   List spy = Mockito.spy(list);
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,438,*   //Impossible: real method is called so spy.get(0) throws IndexOutOfBoundsException because the list is yet empty
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,439,"*   stub(spy.get(0)).toReturn(""foo"");"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,441,*   //You have to use doReturn() for stubbing
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,442,"*   doReturn(""foo"").when(spy).get(0);"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,443,* </pre>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,445,* <p>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,446,* See examples in javadoc for {@link Mockito} class
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,448,* @param <T>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,449,* @param object
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,450,*            to spy on
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,451,* @return a spy of the real object
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,453,public static <T> T spy(T object) {
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,454,"return MockUtil.createMock((Class<T>) object.getClass(), null, MOCKING_PROGRESS, object);"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,358,   stub(mock.someMethod(&quot;some arg&quot;)).toThrow(new RuntimeException());
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,467,"*   stub(mock.someMethod(""some arg"")).toThrow(new RuntimeException());"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,497,//TODO change the javadoc to what was said on the mailing list
False,src/org/mockito/internal/MockHandler.java,src/org/mockito/internal/MockHandler.java,14,mport org.mockito.internal.creation.ClassNameFinder;
False,src/org/mockito/internal/MockHandler.java,src/org/mockito/internal/MockHandler.java,23,mport org.mockito.internal.stubbing.Stubber;
False,src/org/mockito/internal/MockHandler.java,src/org/mockito/internal/MockHandler.java,25,mport org.mockito.internal.stubbing.VoidMethodStubbable;
True,src/org/mockito/internal/MockHandler.java,src/org/mockito/internal/MockHandler.java,23,import org.mockito.internal.stubbing.Stubber;
True,src/org/mockito/internal/MockHandler.java,src/org/mockito/internal/MockHandler.java,25,import org.mockito.internal.stubbing.VoidMethodStubbable;
True,src/org/mockito/internal/MockHandler.java,src/org/mockito/internal/MockHandler.java,26,import org.mockito.internal.util.MockUtil;
False,src/org/mockito/internal/MockHandler.java,src/org/mockito/internal/MockHandler.java,49,rivate T mock;
True,src/org/mockito/internal/MockHandler.java,src/org/mockito/internal/MockHandler.java,49,private T instance;
False,src/org/mockito/internal/MockHandler.java,src/org/mockito/internal/MockHandler.java,55,tubber = new Stubber(mockingProgress);
True,src/org/mockito/internal/MockHandler.java,src/org/mockito/internal/MockHandler.java,55,this.stubber = new Stubber(mockingProgress);
True,src/org/mockito/internal/MockHandler.java,src/org/mockito/internal/MockHandler.java,62,//stubbing voids
True,src/org/mockito/internal/MockHandler.java,src/org/mockito/internal/MockHandler.java,76,//verifying
False,src/org/mockito/internal/MockHandler.java,src/org/mockito/internal/MockHandler.java,76,eturn Configuration.instance().getReturnValues().valueFor(invocationMatcher.getInvocation());
True,src/org/mockito/internal/MockHandler.java,src/org/mockito/internal/MockHandler.java,78,return null;
False,src/org/mockito/internal/MockHandler.java,src/org/mockito/internal/MockHandler.java,84,eturn stubber.resultFor(invocationMatcher.getInvocation());
True,src/org/mockito/internal/MockHandler.java,src/org/mockito/internal/MockHandler.java,86,if (stubber.hasResultFor(invocation)) {
True,src/org/mockito/internal/MockHandler.java,src/org/mockito/internal/MockHandler.java,87,return stubber.getResultFor(invocation);
True,src/org/mockito/internal/MockHandler.java,src/org/mockito/internal/MockHandler.java,88,} else if (MockUtil.isMock(instance)) {
True,src/org/mockito/internal/MockHandler.java,src/org/mockito/internal/MockHandler.java,89,return Configuration.instance().getReturnValues().valueFor(invocation);
True,src/org/mockito/internal/MockHandler.java,src/org/mockito/internal/MockHandler.java,90,} else {
True,src/org/mockito/internal/MockHandler.java,src/org/mockito/internal/MockHandler.java,91,"return methodProxy.invoke(instance, args);"
False,src/org/mockito/internal/MockHandler.java,src/org/mockito/internal/MockHandler.java,95,ublic void setMock(T mock) {
False,src/org/mockito/internal/MockHandler.java,src/org/mockito/internal/MockHandler.java,96,his.mock = mock;
True,src/org/mockito/internal/MockHandler.java,src/org/mockito/internal/MockHandler.java,103,public void setInstance(T instance) {
True,src/org/mockito/internal/MockHandler.java,src/org/mockito/internal/MockHandler.java,104,this.instance = instance;
False,src/org/mockito/internal/MockHandler.java,src/org/mockito/internal/MockHandler.java,104,f (mockName != null) {
False,src/org/mockito/internal/MockHandler.java,src/org/mockito/internal/MockHandler.java,105,eturn mockName;
False,src/org/mockito/internal/MockHandler.java,src/org/mockito/internal/MockHandler.java,106, else {
False,src/org/mockito/internal/MockHandler.java,src/org/mockito/internal/MockHandler.java,107,eturn toInstanceName(ClassNameFinder.classNameForMock(mock));
False,src/org/mockito/internal/MockHandler.java,src/org/mockito/internal/MockHandler.java,111,/lower case first letter
False,src/org/mockito/internal/MockHandler.java,src/org/mockito/internal/MockHandler.java,112,rivate String toInstanceName(String className) {
False,src/org/mockito/internal/MockHandler.java,src/org/mockito/internal/MockHandler.java,113,"eturn className.substring(0, 1).toLowerCase() + className.substring(1);"
True,src/org/mockito/internal/MockHandler.java,src/org/mockito/internal/MockHandler.java,112,return mockName;
False,src/org/mockito/internal/MockHandler.java,src/org/mockito/internal/MockHandler.java,143,eturn mock;
True,src/org/mockito/internal/MockHandler.java,src/org/mockito/internal/MockHandler.java,142,return instance;
False,src/org/mockito/internal/creation/MethodInterceptorFilter.java,src/org/mockito/internal/creation/MethodInterceptorFilter.java,45,"eturn delegate.intercept(proxy, method, args, null);"
True,src/org/mockito/internal/creation/MethodInterceptorFilter.java,src/org/mockito/internal/creation/MethodInterceptorFilter.java,45,"return delegate.intercept(proxy, method, args, methodProxy);"
False,src/org/mockito/internal/creation/MethodInterceptorFilter.java,src/org/mockito/internal/creation/MethodInterceptorFilter.java,56,ublic void setMock(Object mock) {
False,src/org/mockito/internal/creation/MethodInterceptorFilter.java,src/org/mockito/internal/creation/MethodInterceptorFilter.java,57,elegate.setMock(mock);
True,src/org/mockito/internal/creation/MethodInterceptorFilter.java,src/org/mockito/internal/creation/MethodInterceptorFilter.java,56,public void setInstance(Object instance) {
True,src/org/mockito/internal/creation/MethodInterceptorFilter.java,src/org/mockito/internal/creation/MethodInterceptorFilter.java,57,delegate.setInstance(instance);
False,src/org/mockito/internal/creation/MockAwareInterceptor.java,src/org/mockito/internal/creation/MockAwareInterceptor.java,16,oid setMock(T mock);
True,src/org/mockito/internal/creation/MockAwareInterceptor.java,src/org/mockito/internal/creation/MockAwareInterceptor.java,16,void setInstance(T mock);
False,src/org/mockito/internal/creation/MockFactory.java,src/org/mockito/internal/creation/MockFactory.java,27,"ublic T createMock(Class<T> toMock, final MethodInterceptorFilter filter) {"
True,src/org/mockito/internal/creation/MockFactory.java,src/org/mockito/internal/creation/MockFactory.java,27,"public T createMock(Class<T> toMock, final MethodInterceptorFilter filter, Object optionalInstance) {"
False,src/org/mockito/internal/creation/MockFactory.java,src/org/mockito/internal/creation/MockFactory.java,38,ilter.setMock(mock);
True,src/org/mockito/internal/creation/MockFactory.java,src/org/mockito/internal/creation/MockFactory.java,38,filter.setInstance(optionalInstance != null ? optionalInstance : mock);
False,src/org/mockito/internal/stubbing/Stubber.java,src/org/mockito/internal/stubbing/Stubber.java,11,mport org.mockito.internal.configuration.Configuration;
True,src/org/mockito/internal/stubbing/Stubber.java,src/org/mockito/internal/stubbing/Stubber.java,54,public boolean hasResultFor(Invocation invocation) {
True,src/org/mockito/internal/stubbing/Stubber.java,src/org/mockito/internal/stubbing/Stubber.java,55,return findMatch(invocation) != null;
True,src/org/mockito/internal/stubbing/Stubber.java,src/org/mockito/internal/stubbing/Stubber.java,58,public Object getResultFor(Invocation invocation) throws Throwable {
True,src/org/mockito/internal/stubbing/Stubber.java,src/org/mockito/internal/stubbing/Stubber.java,59,return findMatch(invocation).answer(invocation);
False,src/org/mockito/internal/stubbing/Stubber.java,src/org/mockito/internal/stubbing/Stubber.java,55,ublic Object resultFor(Invocation invocation) throws Throwable {
True,src/org/mockito/internal/stubbing/Stubber.java,src/org/mockito/internal/stubbing/Stubber.java,62,private StubbedInvocationMatcher findMatch(Invocation invocation) {
False,src/org/mockito/internal/stubbing/Stubber.java,src/org/mockito/internal/stubbing/Stubber.java,58,eturn s.answer(invocation);
True,src/org/mockito/internal/stubbing/Stubber.java,src/org/mockito/internal/stubbing/Stubber.java,65,return s;
False,src/org/mockito/internal/stubbing/Stubber.java,src/org/mockito/internal/stubbing/Stubber.java,61,eturn Configuration.instance().getReturnValues().valueFor(invocation);
True,src/org/mockito/internal/stubbing/Stubber.java,src/org/mockito/internal/stubbing/Stubber.java,69,return null;
False,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,20,"ublic static <T> T createMock(Class<T> classToMock, String mockName, MockingProgress progress) {"
True,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,20,//TODO reorder args
True,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,21,"public static <T> T createMock(Class<T> classToMock, String mockName, MockingProgress progress, T optionalInstance) {"
True,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,22,if (mockName == null) {
True,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,23,mockName = toInstanceName(classToMock);
False,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,24,"eturn proxyFactory.createMock(classToMock, filter);"
True,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,28,"return proxyFactory.createMock(classToMock, filter, optionalInstance);"
True,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,31,private static String toInstanceName(Class<?> clazz) {
True,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,32,String className = clazz.getSimpleName();
True,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,33,//lower case first letter
True,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,34,"return className.substring(0, 1).toLowerCase() + className.substring(1);"
False,test/org/mockito/internal/creation/MockFactoryTest.java,test/org/mockito/internal/creation/MockFactoryTest.java,18,"omeInterface proxy = factory.createMock(SomeInterface.class, new MockAwareStub());"
True,test/org/mockito/internal/creation/MockFactoryTest.java,test/org/mockito/internal/creation/MockFactoryTest.java,18,"SomeInterface proxy = factory.createMock(SomeInterface.class, new MockAwareStub(), null);"
False,test/org/mockito/internal/creation/MockFactoryTest.java,test/org/mockito/internal/creation/MockFactoryTest.java,27,"lassWithoutConstructor proxy = factory.createMock(ClassWithoutConstructor.class, new MockAwareStub());"
True,test/org/mockito/internal/creation/MockFactoryTest.java,test/org/mockito/internal/creation/MockFactoryTest.java,27,"ClassWithoutConstructor proxy = factory.createMock(ClassWithoutConstructor.class, new MockAwareStub(), null);"
False,test/org/mockito/internal/creation/MockFactoryTest.java,test/org/mockito/internal/creation/MockFactoryTest.java,41,"lassWithDodgyConstructor mock = factory.createMock(ClassWithDodgyConstructor.class, new MockAwareStub());"
True,test/org/mockito/internal/creation/MockFactoryTest.java,test/org/mockito/internal/creation/MockFactoryTest.java,41,"ClassWithDodgyConstructor mock = factory.createMock(ClassWithDodgyConstructor.class, new MockAwareStub(), null);"
False,test/org/mockito/internal/creation/MockFactoryTest.java,test/org/mockito/internal/creation/MockFactoryTest.java,48,"omeClass mockOne = factory.createMock(SomeClass.class, new MockAwareStub());"
False,test/org/mockito/internal/creation/MockFactoryTest.java,test/org/mockito/internal/creation/MockFactoryTest.java,49,"omeClass mockTwo = factory.createMock(SomeClass.class, new MockAwareStub());"
True,test/org/mockito/internal/creation/MockFactoryTest.java,test/org/mockito/internal/creation/MockFactoryTest.java,48,"SomeClass mockOne = factory.createMock(SomeClass.class, new MockAwareStub(), null);"
True,test/org/mockito/internal/creation/MockFactoryTest.java,test/org/mockito/internal/creation/MockFactoryTest.java,49,"SomeClass mockTwo = factory.createMock(SomeClass.class, new MockAwareStub(), null);"
False,test/org/mockito/internal/creation/MockFactoryTest.java,test/org/mockito/internal/creation/MockFactoryTest.java,73,ublic void setMock(Object mock) {}
True,test/org/mockito/internal/creation/MockFactoryTest.java,test/org/mockito/internal/creation/MockFactoryTest.java,73,public void setInstance(Object mock) {}
False,test/org/mockito/internal/stubbing/StubberTest.java,test/org/mockito/internal/stubbing/StubberTest.java,59,"ssertEquals(""simpleMethod"", stubber.resultFor(simpleMethod));"
True,test/org/mockito/internal/stubbing/StubberTest.java,test/org/mockito/internal/stubbing/StubberTest.java,59,"assertEquals(""simpleMethod"", stubber.getResultFor(simpleMethod));"
False,test/org/mockito/internal/stubbing/StubberTest.java,test/org/mockito/internal/stubbing/StubberTest.java,62,tubber.resultFor(differentMethod);
True,test/org/mockito/internal/stubbing/StubberTest.java,test/org/mockito/internal/stubbing/StubberTest.java,62,stubber.getResultFor(differentMethod);
False,test/org/mockito/internal/stubbing/StubberTest.java,test/org/mockito/internal/stubbing/StubberTest.java,67,Test
False,test/org/mockito/internal/stubbing/StubberTest.java,test/org/mockito/internal/stubbing/StubberTest.java,68,ublic void shouldGetEmptyResultIfMethodsDontMatch() throws Throwable {
False,test/org/mockito/internal/stubbing/StubberTest.java,test/org/mockito/internal/stubbing/StubberTest.java,69,tubber.setInvocationForPotentialStubbing(new InvocationMatcher(simpleMethod));
False,test/org/mockito/internal/stubbing/StubberTest.java,test/org/mockito/internal/stubbing/StubberTest.java,70,"tubber.addAnswer(new Returns(""simpleMethod""));"
False,test/org/mockito/internal/stubbing/StubberTest.java,test/org/mockito/internal/stubbing/StubberTest.java,72,nvocation differentMethod = new InvocationBuilder().differentMethod().toInvocation();
False,test/org/mockito/internal/stubbing/StubberTest.java,test/org/mockito/internal/stubbing/StubberTest.java,74,"ssertEquals(null, stubber.resultFor(differentMethod));"
False,test/org/mockito/internal/stubbing/StubberTest.java,test/org/mockito/internal/stubbing/StubberTest.java,83,tubber.resultFor(simpleMethod);
True,test/org/mockito/internal/stubbing/StubberTest.java,test/org/mockito/internal/stubbing/StubberTest.java,73,stubber.getResultFor(simpleMethod);
True,test/org/mockitousage/MockingRealObjectsTest.java,test/org/mockitousage/MockingRealObjectsTest.java,2,* Copyright (c) 2007 Mockito contributors
True,test/org/mockitousage/MockingRealObjectsTest.java,test/org/mockitousage/MockingRealObjectsTest.java,3,* This program is made available under the terms of the MIT License.
True,test/org/mockitousage/MockingRealObjectsTest.java,test/org/mockitousage/MockingRealObjectsTest.java,5,package org.mockitousage;
True,test/org/mockitousage/MockingRealObjectsTest.java,test/org/mockitousage/MockingRealObjectsTest.java,7,import static org.mockito.Mockito.*;
True,test/org/mockitousage/MockingRealObjectsTest.java,test/org/mockitousage/MockingRealObjectsTest.java,9,import java.util.LinkedList;
True,test/org/mockitousage/MockingRealObjectsTest.java,test/org/mockitousage/MockingRealObjectsTest.java,10,import java.util.List;
True,test/org/mockitousage/MockingRealObjectsTest.java,test/org/mockitousage/MockingRealObjectsTest.java,12,import org.junit.Ignore;
True,test/org/mockitousage/MockingRealObjectsTest.java,test/org/mockitousage/MockingRealObjectsTest.java,13,import org.junit.Test;
True,test/org/mockitousage/MockingRealObjectsTest.java,test/org/mockitousage/MockingRealObjectsTest.java,14,import org.mockito.Mockito;
True,test/org/mockitousage/MockingRealObjectsTest.java,test/org/mockitousage/MockingRealObjectsTest.java,15,import org.mockito.TestBase;
True,test/org/mockitousage/MockingRealObjectsTest.java,test/org/mockitousage/MockingRealObjectsTest.java,17,"@SuppressWarnings(""unchecked"")"
True,test/org/mockitousage/MockingRealObjectsTest.java,test/org/mockitousage/MockingRealObjectsTest.java,18,public class MockingRealObjectsTest extends TestBase {
True,test/org/mockitousage/MockingRealObjectsTest.java,test/org/mockitousage/MockingRealObjectsTest.java,20,List list = new LinkedList();
True,test/org/mockitousage/MockingRealObjectsTest.java,test/org/mockitousage/MockingRealObjectsTest.java,21,List spy = Mockito.spy(list);
True,test/org/mockitousage/MockingRealObjectsTest.java,test/org/mockitousage/MockingRealObjectsTest.java,23,@Test
True,test/org/mockitousage/MockingRealObjectsTest.java,test/org/mockitousage/MockingRealObjectsTest.java,24,public void shouldVerify() {
True,test/org/mockitousage/MockingRealObjectsTest.java,test/org/mockitousage/MockingRealObjectsTest.java,25,"spy.add(""one"");"
True,test/org/mockitousage/MockingRealObjectsTest.java,test/org/mockitousage/MockingRealObjectsTest.java,26,"spy.add(""two"");"
True,test/org/mockitousage/MockingRealObjectsTest.java,test/org/mockitousage/MockingRealObjectsTest.java,28,"assertEquals(""one"", spy.get(0));"
True,test/org/mockitousage/MockingRealObjectsTest.java,test/org/mockitousage/MockingRealObjectsTest.java,29,"assertEquals(""two"", spy.get(1));"
True,test/org/mockitousage/MockingRealObjectsTest.java,test/org/mockitousage/MockingRealObjectsTest.java,31,"verify(spy).add(""one"");"
True,test/org/mockitousage/MockingRealObjectsTest.java,test/org/mockitousage/MockingRealObjectsTest.java,32,"verify(spy).add(""two"");"
True,test/org/mockitousage/MockingRealObjectsTest.java,test/org/mockitousage/MockingRealObjectsTest.java,35,@Test
True,test/org/mockitousage/MockingRealObjectsTest.java,test/org/mockitousage/MockingRealObjectsTest.java,36,public void shouldStub() {
True,test/org/mockitousage/MockingRealObjectsTest.java,test/org/mockitousage/MockingRealObjectsTest.java,37,"spy.add(""one"");"
True,test/org/mockitousage/MockingRealObjectsTest.java,test/org/mockitousage/MockingRealObjectsTest.java,38,stub(spy.get(0))
True,test/org/mockitousage/MockingRealObjectsTest.java,test/org/mockitousage/MockingRealObjectsTest.java,39,".toReturn(""1"")"
True,test/org/mockitousage/MockingRealObjectsTest.java,test/org/mockitousage/MockingRealObjectsTest.java,40,".toReturn(""1 again"");"
True,test/org/mockitousage/MockingRealObjectsTest.java,test/org/mockitousage/MockingRealObjectsTest.java,42,"assertEquals(""1"", spy.get(0));"
True,test/org/mockitousage/MockingRealObjectsTest.java,test/org/mockitousage/MockingRealObjectsTest.java,43,"assertEquals(""1 again"", spy.get(0));"
True,test/org/mockitousage/MockingRealObjectsTest.java,test/org/mockitousage/MockingRealObjectsTest.java,44,"assertEquals(""one"", spy.iterator().next());"
True,test/org/mockitousage/MockingRealObjectsTest.java,test/org/mockitousage/MockingRealObjectsTest.java,46,"assertEquals(1, spy.size());"
True,test/org/mockitousage/MockingRealObjectsTest.java,test/org/mockitousage/MockingRealObjectsTest.java,49,"@Ignore(""needs fixing - the real clear() method is called :)"")"
True,test/org/mockitousage/MockingRealObjectsTest.java,test/org/mockitousage/MockingRealObjectsTest.java,50,@Test
True,test/org/mockitousage/MockingRealObjectsTest.java,test/org/mockitousage/MockingRealObjectsTest.java,51,public void shouldStubVoid() {
True,test/org/mockitousage/MockingRealObjectsTest.java,test/org/mockitousage/MockingRealObjectsTest.java,52,"spy.add(""one"");"
True,test/org/mockitousage/MockingRealObjectsTest.java,test/org/mockitousage/MockingRealObjectsTest.java,53,stubVoid(spy)
True,test/org/mockitousage/MockingRealObjectsTest.java,test/org/mockitousage/MockingRealObjectsTest.java,54,.toReturn()
True,test/org/mockitousage/MockingRealObjectsTest.java,test/org/mockitousage/MockingRealObjectsTest.java,55,.toThrow(new RuntimeException())
True,test/org/mockitousage/MockingRealObjectsTest.java,test/org/mockitousage/MockingRealObjectsTest.java,56,.on().clear();
True,test/org/mockitousage/MockingRealObjectsTest.java,test/org/mockitousage/MockingRealObjectsTest.java,58,"spy.add(""one"");"
True,test/org/mockitousage/MockingRealObjectsTest.java,test/org/mockitousage/MockingRealObjectsTest.java,59,spy.clear();
True,test/org/mockitousage/MockingRealObjectsTest.java,test/org/mockitousage/MockingRealObjectsTest.java,60,try {
True,test/org/mockitousage/MockingRealObjectsTest.java,test/org/mockitousage/MockingRealObjectsTest.java,61,spy.clear();
True,test/org/mockitousage/MockingRealObjectsTest.java,test/org/mockitousage/MockingRealObjectsTest.java,62,fail();
True,test/org/mockitousage/MockingRealObjectsTest.java,test/org/mockitousage/MockingRealObjectsTest.java,63,} catch (RuntimeException e) {}
True,test/org/mockitousage/MockingRealObjectsTest.java,test/org/mockitousage/MockingRealObjectsTest.java,65,"assertEquals(1, spy.size());"
True,test/org/mockitousage/MockingRealObjectsTest.java,test/org/mockitousage/MockingRealObjectsTest.java,68,@Test
True,test/org/mockitousage/MockingRealObjectsTest.java,test/org/mockitousage/MockingRealObjectsTest.java,69,public void shouldToString() {
True,test/org/mockitousage/MockingRealObjectsTest.java,test/org/mockitousage/MockingRealObjectsTest.java,70,"spy.add(""foo"");"
True,test/org/mockitousage/MockingRealObjectsTest.java,test/org/mockitousage/MockingRealObjectsTest.java,71,"assertEquals(""[foo]"" , spy.toString());"
