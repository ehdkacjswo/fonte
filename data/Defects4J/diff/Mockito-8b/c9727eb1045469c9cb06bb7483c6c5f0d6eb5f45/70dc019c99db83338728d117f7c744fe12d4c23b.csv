is_addition,old_file_path,new_file_path,line_num,content
True,test/org/mockito/exceptions/MockitoAssertionErrorTest.java,test/org/mockito/exceptions/MockitoAssertionErrorTest.java,1,package org.mockito.exceptions;
True,test/org/mockito/exceptions/MockitoAssertionErrorTest.java,test/org/mockito/exceptions/MockitoAssertionErrorTest.java,3,import static org.junit.Assert.*;
True,test/org/mockito/exceptions/MockitoAssertionErrorTest.java,test/org/mockito/exceptions/MockitoAssertionErrorTest.java,5,import org.junit.Test;
True,test/org/mockito/exceptions/MockitoAssertionErrorTest.java,test/org/mockito/exceptions/MockitoAssertionErrorTest.java,7,public class MockitoAssertionErrorTest {
True,test/org/mockito/exceptions/MockitoAssertionErrorTest.java,test/org/mockito/exceptions/MockitoAssertionErrorTest.java,9,private void throwIt() {
True,test/org/mockito/exceptions/MockitoAssertionErrorTest.java,test/org/mockito/exceptions/MockitoAssertionErrorTest.java,10,"throw new MockitoAssertionError(""boom"");"
True,test/org/mockito/exceptions/MockitoAssertionErrorTest.java,test/org/mockito/exceptions/MockitoAssertionErrorTest.java,13,@Test
True,test/org/mockito/exceptions/MockitoAssertionErrorTest.java,test/org/mockito/exceptions/MockitoAssertionErrorTest.java,14,public void shouldKeepUnfilteredStackTrace() {
True,test/org/mockito/exceptions/MockitoAssertionErrorTest.java,test/org/mockito/exceptions/MockitoAssertionErrorTest.java,15,try {
True,test/org/mockito/exceptions/MockitoAssertionErrorTest.java,test/org/mockito/exceptions/MockitoAssertionErrorTest.java,16,throwIt();
True,test/org/mockito/exceptions/MockitoAssertionErrorTest.java,test/org/mockito/exceptions/MockitoAssertionErrorTest.java,17,fail();
True,test/org/mockito/exceptions/MockitoAssertionErrorTest.java,test/org/mockito/exceptions/MockitoAssertionErrorTest.java,18,} catch (MockitoAssertionError e) {
True,test/org/mockito/exceptions/MockitoAssertionErrorTest.java,test/org/mockito/exceptions/MockitoAssertionErrorTest.java,19,"assertEquals(""throwIt"", e.getUnfilteredStackTrace()[0].getMethodName());"
True,test/org/mockito/exceptions/MockitoErrorTest.java,test/org/mockito/exceptions/MockitoErrorTest.java,1,package org.mockito.exceptions;
True,test/org/mockito/exceptions/MockitoErrorTest.java,test/org/mockito/exceptions/MockitoErrorTest.java,3,import org.junit.*;
True,test/org/mockito/exceptions/MockitoErrorTest.java,test/org/mockito/exceptions/MockitoErrorTest.java,4,import static org.mockito.util.ExtraMatchers.*;
True,test/org/mockito/exceptions/MockitoErrorTest.java,test/org/mockito/exceptions/MockitoErrorTest.java,6,import static org.junit.Assert.*;
True,test/org/mockito/exceptions/MockitoErrorTest.java,test/org/mockito/exceptions/MockitoErrorTest.java,8,public class MockitoErrorTest {
True,test/org/mockito/exceptions/MockitoErrorTest.java,test/org/mockito/exceptions/MockitoErrorTest.java,10,private void throwIt() {
True,test/org/mockito/exceptions/MockitoErrorTest.java,test/org/mockito/exceptions/MockitoErrorTest.java,11,"throw new MockitoException(""boom"");"
True,test/org/mockito/exceptions/MockitoErrorTest.java,test/org/mockito/exceptions/MockitoErrorTest.java,14,@Test
True,test/org/mockito/exceptions/MockitoErrorTest.java,test/org/mockito/exceptions/MockitoErrorTest.java,15,public void shouldKeepUnfilteredStackTrace() {
True,test/org/mockito/exceptions/MockitoErrorTest.java,test/org/mockito/exceptions/MockitoErrorTest.java,16,try {
True,test/org/mockito/exceptions/MockitoErrorTest.java,test/org/mockito/exceptions/MockitoErrorTest.java,17,throwIt();
True,test/org/mockito/exceptions/MockitoErrorTest.java,test/org/mockito/exceptions/MockitoErrorTest.java,18,fail();
True,test/org/mockito/exceptions/MockitoErrorTest.java,test/org/mockito/exceptions/MockitoErrorTest.java,19,} catch (MockitoException e) {
True,test/org/mockito/exceptions/MockitoErrorTest.java,test/org/mockito/exceptions/MockitoErrorTest.java,20,"assertEquals(""throwIt"", e.getUnfilteredStackTrace()[0].getMethodName());"
False,test/org/mockito/usage/StackTrackeFilteringTest.java,test/org/mockito/usage/StackTrackeFilteringTest.java,40,/TODO get rid of following test: and move that testing to MockitoStackTraceFilterTest
False,test/org/mockito/usage/StackTrackeFilteringTest.java,test/org/mockito/usage/StackTrackeFilteringTest.java,41,tackTraceElement[] unfilteredStackTrace = expected.getUnfilteredStackTrace();
False,test/org/mockito/usage/StackTrackeFilteringTest.java,test/org/mockito/usage/StackTrackeFilteringTest.java,42,"ssertEquals(""reportMissingInvocationError"", unfilteredStackTrace[0].getMethodName());"
False,test/org/mockito/usage/StackTrackeFilteringTest.java,test/org/mockito/usage/StackTrackeFilteringTest.java,55,tackTraceElement[] unfilteredStackTrace = expected.getUnfilteredStackTrace();
False,test/org/mockito/usage/StackTrackeFilteringTest.java,test/org/mockito/usage/StackTrackeFilteringTest.java,56,"ssertEquals(""verifyNoMoreInteractions"", unfilteredStackTrace[0].getMethodName());"
False,test/org/mockito/usage/StackTrackeFilteringTest.java,test/org/mockito/usage/StackTrackeFilteringTest.java,69,tackTraceElement[] unfilteredStackTrace = expected.getUnfilteredStackTrace();
False,test/org/mockito/usage/StackTrackeFilteringTest.java,test/org/mockito/usage/StackTrackeFilteringTest.java,70,"ssertEquals(""verifyNoMoreInteractions"", unfilteredStackTrace[0].getMethodName());"
False,test/org/mockito/usage/StackTrackeFilteringTest.java,test/org/mockito/usage/StackTrackeFilteringTest.java,83,tackTraceElement[] unfilteredStackTrace = expected.getUnfilteredStackTrace();
False,test/org/mockito/usage/StackTrackeFilteringTest.java,test/org/mockito/usage/StackTrackeFilteringTest.java,84,"ssertEquals(""checkForUnfinishedVerification"", unfilteredStackTrace[0].getMethodName());"
False,test/org/mockito/usage/StackTrackeFilteringTest.java,test/org/mockito/usage/StackTrackeFilteringTest.java,99,tackTraceElement[] unfilteredStackTrace = expected.getUnfilteredStackTrace();
False,test/org/mockito/usage/StackTrackeFilteringTest.java,test/org/mockito/usage/StackTrackeFilteringTest.java,100,"ssertEquals(""checkOrderOfInvocations"", unfilteredStackTrace[0].getMethodName());"
