is_addition,old_file_path,new_file_path,line_num,content
False,src/org/mockito/MockSettings.java,src/org/mockito/MockSettings.java,10, @author SG0897539
True,src/org/mockito/MockSettings.java,src/org/mockito/MockSettings.java,10,* Allows mock creation with additional mock settings.
True,src/org/mockito/MockSettings.java,src/org/mockito/MockSettings.java,11,* <p>
True,src/org/mockito/MockSettings.java,src/org/mockito/MockSettings.java,12,* Don't use it too often.
True,src/org/mockito/MockSettings.java,src/org/mockito/MockSettings.java,13,* Consider writing simple tests that use simple mocks.
True,src/org/mockito/MockSettings.java,src/org/mockito/MockSettings.java,14,"* Repeat after me: simple tests push simple, KISSy, readable & maintainable code."
True,src/org/mockito/MockSettings.java,src/org/mockito/MockSettings.java,15,* If you cannot write a test in a simple way - refactor the code under test.
True,src/org/mockito/MockSettings.java,src/org/mockito/MockSettings.java,16,* <p>
True,src/org/mockito/MockSettings.java,src/org/mockito/MockSettings.java,17,* Examples of mock settings:
True,src/org/mockito/MockSettings.java,src/org/mockito/MockSettings.java,18,* <pre>
True,src/org/mockito/MockSettings.java,src/org/mockito/MockSettings.java,19,*   //Creates mock with different default answer & name
True,src/org/mockito/MockSettings.java,src/org/mockito/MockSettings.java,20,"*   Foo mock = mock(Foo.class, withSettings()"
True,src/org/mockito/MockSettings.java,src/org/mockito/MockSettings.java,21,*       .defaultAnswer(RETURNS_SMART_NULLS)
True,src/org/mockito/MockSettings.java,src/org/mockito/MockSettings.java,22,"*       .name(""cool mockie""));"
True,src/org/mockito/MockSettings.java,src/org/mockito/MockSettings.java,24,"*   //Creates mock with different default answer, descriptive name and extra interfaces"
True,src/org/mockito/MockSettings.java,src/org/mockito/MockSettings.java,25,"*   Foo mock = mock(Foo.class, withSettings()"
True,src/org/mockito/MockSettings.java,src/org/mockito/MockSettings.java,26,*       .defaultAnswer(RETURNS_SMART_NULLS)
True,src/org/mockito/MockSettings.java,src/org/mockito/MockSettings.java,27,"*       .name(""cool mockie"")"
True,src/org/mockito/MockSettings.java,src/org/mockito/MockSettings.java,28,*       .extraInterfaces(Bar.class));
True,src/org/mockito/MockSettings.java,src/org/mockito/MockSettings.java,29,* </pre>
True,src/org/mockito/MockSettings.java,src/org/mockito/MockSettings.java,30,* {@link MockSettings} has been introduced for two reasons.
True,src/org/mockito/MockSettings.java,src/org/mockito/MockSettings.java,31,"* Firstly, to make it easy to add another mock setting when the demand comes."
True,src/org/mockito/MockSettings.java,src/org/mockito/MockSettings.java,32,"* Secondly, to enable combining together different mock settings without introducing zillions of overloaded mock() methods."
False,src/org/mockito/MockSettings.java,src/org/mockito/MockSettings.java,14,/TODO: validate javadoc
False,src/org/mockito/MockSettings.java,src/org/mockito/MockSettings.java,35, @return settings instance so that you can fluently specify other settings
True,src/org/mockito/MockSettings.java,src/org/mockito/MockSettings.java,54,* @return settings instance so that you can fluently specify other settings
False,src/org/mockito/MockSettings.java,src/org/mockito/MockSettings.java,59,ockSettings spiedInstance(Object object);
True,src/org/mockito/MockSettings.java,src/org/mockito/MockSettings.java,79,* Specifies the instance to spy on. Makes sense only for spies/partial mocks.
True,src/org/mockito/MockSettings.java,src/org/mockito/MockSettings.java,80,* <p>
True,src/org/mockito/MockSettings.java,src/org/mockito/MockSettings.java,81,* As usual you are going to read the partial mock warning:
True,src/org/mockito/MockSettings.java,src/org/mockito/MockSettings.java,82,* Object oriented programming is more less tackling complexity by dividing the complexity and moving it to specific objects.
True,src/org/mockito/MockSettings.java,src/org/mockito/MockSettings.java,83,* Partial mock is a sign that the code is not well designed.
True,src/org/mockito/MockSettings.java,src/org/mockito/MockSettings.java,84,* It usually means that the complexity has been moved to a different method on the same object.
True,src/org/mockito/MockSettings.java,src/org/mockito/MockSettings.java,85,"* Partial mocks are useful when dealing with code you cannot change easily (3rd party interfaces, interim refactoring of legacy code etc.)"
True,src/org/mockito/MockSettings.java,src/org/mockito/MockSettings.java,86,* I wouldn't use them for new code.
True,src/org/mockito/MockSettings.java,src/org/mockito/MockSettings.java,87,* <p>
True,src/org/mockito/MockSettings.java,src/org/mockito/MockSettings.java,88,"* Enough warnings about partial mocks, see an example how spiedInstance() works:"
True,src/org/mockito/MockSettings.java,src/org/mockito/MockSettings.java,89,* <pre>
True,src/org/mockito/MockSettings.java,src/org/mockito/MockSettings.java,90,"*   Foo foo = mock(Foo.class, spiedInstance(fooInstance));"
True,src/org/mockito/MockSettings.java,src/org/mockito/MockSettings.java,92,*   //Below does exactly the same:
True,src/org/mockito/MockSettings.java,src/org/mockito/MockSettings.java,93,*   Foo foo = spy(fooInstance);
True,src/org/mockito/MockSettings.java,src/org/mockito/MockSettings.java,94,* </pre>
True,src/org/mockito/MockSettings.java,src/org/mockito/MockSettings.java,96,* @param instance to spy on
True,src/org/mockito/MockSettings.java,src/org/mockito/MockSettings.java,97,* @return settings instance so that you can fluently specify other settings
True,src/org/mockito/MockSettings.java,src/org/mockito/MockSettings.java,99,MockSettings spiedInstance(Object instance);
True,src/org/mockito/MockSettings.java,src/org/mockito/MockSettings.java,102,* Specifies default answers to interactions.
True,src/org/mockito/MockSettings.java,src/org/mockito/MockSettings.java,103,* It's quite advanced feature and typically you don't need it to write decent tests.
True,src/org/mockito/MockSettings.java,src/org/mockito/MockSettings.java,104,* However it can be helpful when working with legacy systems.
True,src/org/mockito/MockSettings.java,src/org/mockito/MockSettings.java,105,* <p>
True,src/org/mockito/MockSettings.java,src/org/mockito/MockSettings.java,106,* It is the default answer so it will be used <b>only when you don't</b> stub the method call.
True,src/org/mockito/MockSettings.java,src/org/mockito/MockSettings.java,108,* <pre>
True,src/org/mockito/MockSettings.java,src/org/mockito/MockSettings.java,109,"*   Foo mock = mock(Foo.class, withSettings().defaultAnswer(RETURNS_SMART_NULLS));"
True,src/org/mockito/MockSettings.java,src/org/mockito/MockSettings.java,110,"*   Foo mockTwo = mock(Foo.class, withSettings().defaultAnswer(new YourOwnAnswer()));"
True,src/org/mockito/MockSettings.java,src/org/mockito/MockSettings.java,112,*   //Below does exactly the same:
True,src/org/mockito/MockSettings.java,src/org/mockito/MockSettings.java,113,"*   Foo mockTwo = mock(Foo.class, new YourOwnAnswer());"
True,src/org/mockito/MockSettings.java,src/org/mockito/MockSettings.java,114,* </pre>
True,src/org/mockito/MockSettings.java,src/org/mockito/MockSettings.java,116,* @param defaultAnswer default answer to be used by mock when not stubbed
True,src/org/mockito/MockSettings.java,src/org/mockito/MockSettings.java,117,* @return settings instance so that you can fluently specify other settings
False,src/org/mockito/MockSettings.java,src/org/mockito/MockSettings.java,62,/it's ok to supress it because having raw Answer here it makes nicer for clients
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,461, Obviously those return values are used <b>only</b> when you don't stub the method call.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,460,* It is the default answer so it will be used <b>only when you don't</b> stub the method call.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,516, {@link Answer} cab be used to define the return values of unstubbed invocations.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,515,* {@link Answer} can be used to define the return values of unstubbed invocations.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,526, {@link Answer} cab be used to define the return values of unstubbed invocations.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,525,* {@link Answer} can be used to define the return values of unstubbed invocations.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,558, {@link Answer} cab be used to define the return values of unstubbed invocations.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,557,* {@link Answer} can be used to define the return values of unstubbed invocations.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,574, {@link Answer} cab be used to define the return values of unstubbed invocations.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,573,* {@link Answer} can be used to define the return values of unstubbed invocations.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,640, However it can be helpful for working with legacy systems.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,639,* However it can be helpful when working with legacy systems.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,664, However it can be helpful for working with legacy systems.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,663,* However it can be helpful when working with legacy systems.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,666, Obviously the answer is used only when you <b>don't</b> stub the method call.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,665,* It is the default answer so it will be used <b>only when you don't</b> stub the method call.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,676, @param defaultAnswer default return values for unstubbed methods
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,675,* @param defaultAnswer default answer for unstubbed methods
False,src/org/mockito/configuration/IMockitoConfiguration.java,src/org/mockito/configuration/IMockitoConfiguration.java,55, Allows configuring the default return values of unstubbed invocations
True,src/org/mockito/configuration/IMockitoConfiguration.java,src/org/mockito/configuration/IMockitoConfiguration.java,55,* Allows configuring the default answers of unstubbed invocations
True,src/org/mockito/internal/stubbing/answers/CallsRealMethods.java,src/org/mockito/internal/stubbing/answers/CallsRealMethods.java,11,* Optional Answer that adds partial mocking support
True,src/org/mockito/internal/stubbing/answers/CallsRealMethods.java,src/org/mockito/internal/stubbing/answers/CallsRealMethods.java,12,* <p>
True,src/org/mockito/internal/stubbing/answers/CallsRealMethods.java,src/org/mockito/internal/stubbing/answers/CallsRealMethods.java,13,* {@link Answer} can be used to define the return values of unstubbed invocations.
True,src/org/mockito/internal/stubbing/answers/CallsRealMethods.java,src/org/mockito/internal/stubbing/answers/CallsRealMethods.java,14,* <p>
True,src/org/mockito/internal/stubbing/answers/CallsRealMethods.java,src/org/mockito/internal/stubbing/answers/CallsRealMethods.java,15,* This implementation can be helpful when working with legacy code.
True,src/org/mockito/internal/stubbing/answers/CallsRealMethods.java,src/org/mockito/internal/stubbing/answers/CallsRealMethods.java,16,"* When this implementation is used, unstubbed methods will delegate to the real implementation."
True,src/org/mockito/internal/stubbing/answers/CallsRealMethods.java,src/org/mockito/internal/stubbing/answers/CallsRealMethods.java,17,* This is a way to create a partial mock object that calls real methods by default.
True,src/org/mockito/internal/stubbing/answers/CallsRealMethods.java,src/org/mockito/internal/stubbing/answers/CallsRealMethods.java,18,* <p>
