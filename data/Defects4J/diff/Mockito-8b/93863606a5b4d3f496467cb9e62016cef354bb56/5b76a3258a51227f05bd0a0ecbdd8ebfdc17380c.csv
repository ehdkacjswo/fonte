is_addition,old_file_path,new_file_path,line_num,content
False,src/org/mockito/InjectMocks.java,src/org/mockito/InjectMocks.java,20, Currently it only supports setter injection. If you prefer constructor injection - please contribute a patch.
True,src/org/mockito/InjectMocks.java,src/org/mockito/InjectMocks.java,20,* Currently it only supports field injection. If you prefer constructor injection - please contribute a patch.
True,src/org/mockito/InjectMocks.java,src/org/mockito/InjectMocks.java,21,* </p>
False,src/org/mockito/InjectMocks.java,src/org/mockito/InjectMocks.java,23, Mockito does not throw anything when injection fails - you will have to satisfy the dependencies manually.
True,src/org/mockito/InjectMocks.java,src/org/mockito/InjectMocks.java,25,* Mockito does not throw anything when injection fails - you will have to satisfy the dependencies manually.
True,src/org/mockito/InjectMocks.java,src/org/mockito/InjectMocks.java,26,* </p>
False,src/org/mockito/InjectMocks.java,src/org/mockito/InjectMocks.java,49, <b>The field annotated with &#064;InjectMocks must be initialized.</b>
True,src/org/mockito/InjectMocks.java,src/org/mockito/InjectMocks.java,53,* <b>The field annotated with &#064;InjectMocks can be initialized by Mockito if a zero argument constructor
True,src/org/mockito/InjectMocks.java,src/org/mockito/InjectMocks.java,54,"* can be found in the type (even private). <u>But Mockito cannot instantiate inner classes, local classes,"
True,src/org/mockito/InjectMocks.java,src/org/mockito/InjectMocks.java,55,* abstract classes and interfaces.</u></b>
True,src/org/mockito/InjectMocks.java,src/org/mockito/InjectMocks.java,57,* For example this class can be instantiated by Mockito :
True,src/org/mockito/InjectMocks.java,src/org/mockito/InjectMocks.java,58,* <pre>public class Bar {
True,src/org/mockito/InjectMocks.java,src/org/mockito/InjectMocks.java,59,*    private Bar() {}
True,src/org/mockito/InjectMocks.java,src/org/mockito/InjectMocks.java,60,*    public Bar(String publicConstructorWithOneArg) {}
True,src/org/mockito/InjectMocks.java,src/org/mockito/InjectMocks.java,61,* }</pre>
True,src/org/mockito/InjectMocks.java,src/org/mockito/InjectMocks.java,62,* </p>
True,src/org/mockito/InjectMocks.java,src/org/mockito/InjectMocks.java,64,* </p>
True,src/org/mockito/InjectMocks.java,src/org/mockito/InjectMocks.java,66,* <p>
True,src/org/mockito/InjectMocks.java,src/org/mockito/InjectMocks.java,67,* Note that &#064;InjectMocks is compatible with spies created using the &#64;Spy annotation.
True,src/org/mockito/InjectMocks.java,src/org/mockito/InjectMocks.java,68,* </p>
True,src/org/mockito/InjectMocks.java,src/org/mockito/InjectMocks.java,74,* <p>
True,src/org/mockito/InjectMocks.java,src/org/mockito/InjectMocks.java,78,* </p>
False,src/org/mockito/MockitoAnnotations.java,src/org/mockito/MockitoAnnotations.java,7,mport static java.lang.annotation.ElementType.*;
False,src/org/mockito/MockitoAnnotations.java,src/org/mockito/MockitoAnnotations.java,9,mport java.lang.annotation.Annotation;
False,src/org/mockito/MockitoAnnotations.java,src/org/mockito/MockitoAnnotations.java,10,mport java.lang.annotation.Retention;
False,src/org/mockito/MockitoAnnotations.java,src/org/mockito/MockitoAnnotations.java,11,mport java.lang.annotation.RetentionPolicy;
False,src/org/mockito/MockitoAnnotations.java,src/org/mockito/MockitoAnnotations.java,12,mport java.lang.annotation.Target;
False,src/org/mockito/MockitoAnnotations.java,src/org/mockito/MockitoAnnotations.java,13,mport java.lang.reflect.Field;
True,src/org/mockito/MockitoAnnotations.java,src/org/mockito/MockitoAnnotations.java,15,import java.lang.annotation.Annotation;
True,src/org/mockito/MockitoAnnotations.java,src/org/mockito/MockitoAnnotations.java,16,import java.lang.annotation.Retention;
True,src/org/mockito/MockitoAnnotations.java,src/org/mockito/MockitoAnnotations.java,17,import java.lang.annotation.RetentionPolicy;
True,src/org/mockito/MockitoAnnotations.java,src/org/mockito/MockitoAnnotations.java,18,import java.lang.annotation.Target;
True,src/org/mockito/MockitoAnnotations.java,src/org/mockito/MockitoAnnotations.java,19,import java.lang.reflect.Field;
True,src/org/mockito/MockitoAnnotations.java,src/org/mockito/MockitoAnnotations.java,21,import static java.lang.annotation.ElementType.FIELD;
False,src/org/mockito/Spy.java,src/org/mockito/Spy.java,17,    &#64;Spy Foo spyOnFoo = new Foo();
True,src/org/mockito/Spy.java,src/org/mockito/Spy.java,17,"*    &#64;Spy Foo spyOnFoo = new Foo(""argument"");"
True,src/org/mockito/Spy.java,src/org/mockito/Spy.java,18,*    &#64;Spy Bar spyOnBar;
False,src/org/mockito/Spy.java,src/org/mockito/Spy.java,29, Foo spyOnFoo = Mockito.spy(new Foo());
True,src/org/mockito/Spy.java,src/org/mockito/Spy.java,30,"* Foo spyOnFoo = Mockito.spy(new Foo(""argument""));"
True,src/org/mockito/Spy.java,src/org/mockito/Spy.java,31,* Bar spyOnFoo = Mockito.spy(new Bar());
True,src/org/mockito/Spy.java,src/org/mockito/Spy.java,34,* <b>The field annotated with &#064;Spy can be initialized by Mockito if a zero argument constructor
True,src/org/mockito/Spy.java,src/org/mockito/Spy.java,35,"* can be found in the type (even private). <u>But Mockito cannot instantiate inner classes, local classes,"
True,src/org/mockito/Spy.java,src/org/mockito/Spy.java,36,* abstract classes and interfaces.</u></b>
True,src/org/mockito/Spy.java,src/org/mockito/Spy.java,38,* For example this class can be instantiated by Mockito :
True,src/org/mockito/Spy.java,src/org/mockito/Spy.java,39,* <pre>public class Bar {
True,src/org/mockito/Spy.java,src/org/mockito/Spy.java,40,*    private Bar() {}
True,src/org/mockito/Spy.java,src/org/mockito/Spy.java,41,*    public Bar(String publicConstructorWithOneArg) {}
True,src/org/mockito/Spy.java,src/org/mockito/Spy.java,42,* }</pre>
True,src/org/mockito/Spy.java,src/org/mockito/Spy.java,43,* </p>
True,src/org/mockito/Spy.java,src/org/mockito/Spy.java,45,* <p>
True,src/org/mockito/Spy.java,src/org/mockito/Spy.java,50,* </p>
True,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,7,import org.mockito.exceptions.base.MockitoException;
True,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,8,import org.mockito.internal.util.MockUtil;
True,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,9,import org.mockito.internal.util.reflection.FieldInitializer;
True,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,10,import org.mockito.internal.util.reflection.FieldSetter;
False,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,13,mport org.mockito.exceptions.base.MockitoException;
False,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,14,mport org.mockito.internal.util.MockUtil;
False,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,15,mport org.mockito.internal.util.reflection.FieldSetter;
False,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,34,bject fieldInstance = null;
False,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,35,oolean wasAccessible = field.isAccessible();
False,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,36,ield.setAccessible(true);
False,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,37,ry {
False,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,38,ieldInstance = field.get(testClass);
False,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,39, catch (IllegalAccessException e) {
False,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,40,"hrow new MockitoException(""Problems injecting dependencies in "" + field.getName(), e);"
False,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,41, finally {
False,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,42,ield.setAccessible(wasAccessible);
True,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,35,"Object fieldInstance = new FieldInitializer(testClass, field).initialize();"
False,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,69,"rivate void inject(Field field, Object fieldInstance, Object matchingMock) {"
True,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,61,"private void inject(Field field, Object fieldInstance, Object matchingMock) {"
False,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,71,"ew FieldSetter(fieldInstance, field).set(matchingMock);"
True,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,63,"new FieldSetter(fieldInstance, field).set(matchingMock);"
True,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,7,import org.mockito.*;
True,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,8,import org.mockito.configuration.AnnotationEngine;
True,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,9,import org.mockito.exceptions.Reporter;
True,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,10,import org.mockito.exceptions.base.MockitoException;
False,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,12,mport org.mockito.Captor;
False,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,13,mport org.mockito.InjectMocks;
False,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,14,mport org.mockito.Mock;
False,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,15,mport org.mockito.MockitoAnnotations;
False,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,16,mport org.mockito.Spy;
False,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,17,mport org.mockito.configuration.AnnotationEngine;
False,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,18,mport org.mockito.exceptions.Reporter;
False,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,19,mport org.mockito.exceptions.base.MockitoException;
False,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,20,mport org.mockito.internal.util.reflection.FieldReader;
False,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,90,"f(new FieldReader(testClass, field).isNull()) {"
True,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,85,"/*if(new FieldReader(testClass, field).isNull()) {"
False,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,7,mport java.lang.annotation.Annotation;
False,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,8,mport java.lang.reflect.Field;
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,15,import org.mockito.internal.util.reflection.FieldInitializer;
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,17,import java.lang.annotation.Annotation;
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,18,import java.lang.reflect.Field;
False,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,37,bject instance = field.get(testClass);
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,38,"Object instance = new FieldInitializer(testClass, field).initialize();"
False,src/org/mockito/internal/util/reflection/AccessibilityChanger.java,src/org/mockito/internal/util/reflection/AccessibilityChanger.java,7,mport java.lang.reflect.Field;
True,src/org/mockito/internal/util/reflection/AccessibilityChanger.java,src/org/mockito/internal/util/reflection/AccessibilityChanger.java,7,import java.lang.reflect.AccessibleObject;
False,src/org/mockito/internal/util/reflection/AccessibilityChanger.java,src/org/mockito/internal/util/reflection/AccessibilityChanger.java,16,ublic void safelyDisableAccess(Field field) {
True,src/org/mockito/internal/util/reflection/AccessibilityChanger.java,src/org/mockito/internal/util/reflection/AccessibilityChanger.java,16,public void safelyDisableAccess(AccessibleObject accessibleObject) {
False,src/org/mockito/internal/util/reflection/AccessibilityChanger.java,src/org/mockito/internal/util/reflection/AccessibilityChanger.java,19,ield.setAccessible(wasAccessible);
True,src/org/mockito/internal/util/reflection/AccessibilityChanger.java,src/org/mockito/internal/util/reflection/AccessibilityChanger.java,19,accessibleObject.setAccessible(wasAccessible);
False,src/org/mockito/internal/util/reflection/AccessibilityChanger.java,src/org/mockito/internal/util/reflection/AccessibilityChanger.java,26, changes the field accessibility and returns true if accessibility was changed
True,src/org/mockito/internal/util/reflection/AccessibilityChanger.java,src/org/mockito/internal/util/reflection/AccessibilityChanger.java,26,* changes the accessibleObject accessibility and returns true if accessibility was changed
False,src/org/mockito/internal/util/reflection/AccessibilityChanger.java,src/org/mockito/internal/util/reflection/AccessibilityChanger.java,28,ublic void enableAccess(Field field) {
False,src/org/mockito/internal/util/reflection/AccessibilityChanger.java,src/org/mockito/internal/util/reflection/AccessibilityChanger.java,29,asAccessible = field.isAccessible();
False,src/org/mockito/internal/util/reflection/AccessibilityChanger.java,src/org/mockito/internal/util/reflection/AccessibilityChanger.java,30,ield.setAccessible(true);
True,src/org/mockito/internal/util/reflection/AccessibilityChanger.java,src/org/mockito/internal/util/reflection/AccessibilityChanger.java,28,public void enableAccess(AccessibleObject accessibleObject) {
True,src/org/mockito/internal/util/reflection/AccessibilityChanger.java,src/org/mockito/internal/util/reflection/AccessibilityChanger.java,29,wasAccessible = accessibleObject.isAccessible();
True,src/org/mockito/internal/util/reflection/AccessibilityChanger.java,src/org/mockito/internal/util/reflection/AccessibilityChanger.java,30,accessibleObject.setAccessible(true);
True,src/org/mockito/internal/util/reflection/FieldInitializer.java,src/org/mockito/internal/util/reflection/FieldInitializer.java,1,package org.mockito.internal.util.reflection;
True,src/org/mockito/internal/util/reflection/FieldInitializer.java,src/org/mockito/internal/util/reflection/FieldInitializer.java,3,import org.mockito.exceptions.base.MockitoException;
True,src/org/mockito/internal/util/reflection/FieldInitializer.java,src/org/mockito/internal/util/reflection/FieldInitializer.java,5,import java.lang.reflect.Constructor;
True,src/org/mockito/internal/util/reflection/FieldInitializer.java,src/org/mockito/internal/util/reflection/FieldInitializer.java,6,import java.lang.reflect.Field;
True,src/org/mockito/internal/util/reflection/FieldInitializer.java,src/org/mockito/internal/util/reflection/FieldInitializer.java,7,import java.lang.reflect.InvocationTargetException;
True,src/org/mockito/internal/util/reflection/FieldInitializer.java,src/org/mockito/internal/util/reflection/FieldInitializer.java,8,import java.lang.reflect.Modifier;
True,src/org/mockito/internal/util/reflection/FieldInitializer.java,src/org/mockito/internal/util/reflection/FieldInitializer.java,11,* Initialize a field with type instance if a default constructor can be found.
True,src/org/mockito/internal/util/reflection/FieldInitializer.java,src/org/mockito/internal/util/reflection/FieldInitializer.java,13,* <p>
True,src/org/mockito/internal/util/reflection/FieldInitializer.java,src/org/mockito/internal/util/reflection/FieldInitializer.java,14,* If the given field is already initialize
True,src/org/mockito/internal/util/reflection/FieldInitializer.java,src/org/mockito/internal/util/reflection/FieldInitializer.java,15,"* This initializer doesn't work with inner classes, local classes, interfaces or abstract types."
True,src/org/mockito/internal/util/reflection/FieldInitializer.java,src/org/mockito/internal/util/reflection/FieldInitializer.java,16,* </p>
True,src/org/mockito/internal/util/reflection/FieldInitializer.java,src/org/mockito/internal/util/reflection/FieldInitializer.java,19,public class FieldInitializer {
True,src/org/mockito/internal/util/reflection/FieldInitializer.java,src/org/mockito/internal/util/reflection/FieldInitializer.java,21,private Object testClass;
True,src/org/mockito/internal/util/reflection/FieldInitializer.java,src/org/mockito/internal/util/reflection/FieldInitializer.java,22,private Field field;
True,src/org/mockito/internal/util/reflection/FieldInitializer.java,src/org/mockito/internal/util/reflection/FieldInitializer.java,26,* Initialize the given field on the given instance.
True,src/org/mockito/internal/util/reflection/FieldInitializer.java,src/org/mockito/internal/util/reflection/FieldInitializer.java,28,* <p>
True,src/org/mockito/internal/util/reflection/FieldInitializer.java,src/org/mockito/internal/util/reflection/FieldInitializer.java,29,* This constructor fail fast if the field type cannot be handled.
True,src/org/mockito/internal/util/reflection/FieldInitializer.java,src/org/mockito/internal/util/reflection/FieldInitializer.java,30,* </p>
True,src/org/mockito/internal/util/reflection/FieldInitializer.java,src/org/mockito/internal/util/reflection/FieldInitializer.java,32,* @param testClass Instance of the test.
True,src/org/mockito/internal/util/reflection/FieldInitializer.java,src/org/mockito/internal/util/reflection/FieldInitializer.java,33,* @param field Field to be initialize.
True,src/org/mockito/internal/util/reflection/FieldInitializer.java,src/org/mockito/internal/util/reflection/FieldInitializer.java,35,"public FieldInitializer(Object testClass, Field field) {"
True,src/org/mockito/internal/util/reflection/FieldInitializer.java,src/org/mockito/internal/util/reflection/FieldInitializer.java,36,"if(new FieldReader(testClass, field).isNull()) {"
True,src/org/mockito/internal/util/reflection/FieldInitializer.java,src/org/mockito/internal/util/reflection/FieldInitializer.java,37,checkNotLocal(field);
True,src/org/mockito/internal/util/reflection/FieldInitializer.java,src/org/mockito/internal/util/reflection/FieldInitializer.java,38,checkNotInner(field);
True,src/org/mockito/internal/util/reflection/FieldInitializer.java,src/org/mockito/internal/util/reflection/FieldInitializer.java,39,checkNotInterface(field);
True,src/org/mockito/internal/util/reflection/FieldInitializer.java,src/org/mockito/internal/util/reflection/FieldInitializer.java,40,checkNotAbstract(field);
True,src/org/mockito/internal/util/reflection/FieldInitializer.java,src/org/mockito/internal/util/reflection/FieldInitializer.java,42,this.testClass = testClass;
True,src/org/mockito/internal/util/reflection/FieldInitializer.java,src/org/mockito/internal/util/reflection/FieldInitializer.java,43,this.field = field;
True,src/org/mockito/internal/util/reflection/FieldInitializer.java,src/org/mockito/internal/util/reflection/FieldInitializer.java,46,public Object initialize() {
True,src/org/mockito/internal/util/reflection/FieldInitializer.java,src/org/mockito/internal/util/reflection/FieldInitializer.java,47,final AccessibilityChanger changer = new AccessibilityChanger();
True,src/org/mockito/internal/util/reflection/FieldInitializer.java,src/org/mockito/internal/util/reflection/FieldInitializer.java,48,changer.enableAccess(field);
True,src/org/mockito/internal/util/reflection/FieldInitializer.java,src/org/mockito/internal/util/reflection/FieldInitializer.java,50,try {
True,src/org/mockito/internal/util/reflection/FieldInitializer.java,src/org/mockito/internal/util/reflection/FieldInitializer.java,51,"return acquireFieldInstance(testClass, field);"
True,src/org/mockito/internal/util/reflection/FieldInitializer.java,src/org/mockito/internal/util/reflection/FieldInitializer.java,52,} catch(IllegalAccessException e) {
True,src/org/mockito/internal/util/reflection/FieldInitializer.java,src/org/mockito/internal/util/reflection/FieldInitializer.java,53,"throw new MockitoException(""Problems injecting dependencies in "" + field.getName(), e);"
True,src/org/mockito/internal/util/reflection/FieldInitializer.java,src/org/mockito/internal/util/reflection/FieldInitializer.java,54,} finally {
True,src/org/mockito/internal/util/reflection/FieldInitializer.java,src/org/mockito/internal/util/reflection/FieldInitializer.java,55,changer.safelyDisableAccess(field);
True,src/org/mockito/internal/util/reflection/FieldInitializer.java,src/org/mockito/internal/util/reflection/FieldInitializer.java,59,"private void initializeField(Object testClass, Field field) {"
True,src/org/mockito/internal/util/reflection/FieldInitializer.java,src/org/mockito/internal/util/reflection/FieldInitializer.java,60,final AccessibilityChanger changer = new AccessibilityChanger();
True,src/org/mockito/internal/util/reflection/FieldInitializer.java,src/org/mockito/internal/util/reflection/FieldInitializer.java,61,Constructor<?> constructor = null;
True,src/org/mockito/internal/util/reflection/FieldInitializer.java,src/org/mockito/internal/util/reflection/FieldInitializer.java,62,try {
True,src/org/mockito/internal/util/reflection/FieldInitializer.java,src/org/mockito/internal/util/reflection/FieldInitializer.java,63,constructor = field.getType().getDeclaredConstructor();
True,src/org/mockito/internal/util/reflection/FieldInitializer.java,src/org/mockito/internal/util/reflection/FieldInitializer.java,64,changer.enableAccess(constructor);
True,src/org/mockito/internal/util/reflection/FieldInitializer.java,src/org/mockito/internal/util/reflection/FieldInitializer.java,66,final Object[] noArg = new Object[0];
True,src/org/mockito/internal/util/reflection/FieldInitializer.java,src/org/mockito/internal/util/reflection/FieldInitializer.java,67,Object newFieldInstance = constructor.newInstance(noArg);
True,src/org/mockito/internal/util/reflection/FieldInitializer.java,src/org/mockito/internal/util/reflection/FieldInitializer.java,68,"new FieldSetter(testClass, field).set(newFieldInstance);"
True,src/org/mockito/internal/util/reflection/FieldInitializer.java,src/org/mockito/internal/util/reflection/FieldInitializer.java,69,} catch (NoSuchMethodException e) {
True,src/org/mockito/internal/util/reflection/FieldInitializer.java,src/org/mockito/internal/util/reflection/FieldInitializer.java,70,"throw new MockitoException(""Cannot instantiate field \"""" + field.getName() + ""\"", the type "" + field.getType() + "" has no default constructor"", e);"
True,src/org/mockito/internal/util/reflection/FieldInitializer.java,src/org/mockito/internal/util/reflection/FieldInitializer.java,71,} catch (InvocationTargetException e) {
True,src/org/mockito/internal/util/reflection/FieldInitializer.java,src/org/mockito/internal/util/reflection/FieldInitializer.java,72,"throw new MockitoException(""Cannot instantiate field \"""" + field.getName() + ""\"", the default constructor of type "" + field.getType() + "" has raised an exception : "" + e.getTargetException().toString(), e);"
True,src/org/mockito/internal/util/reflection/FieldInitializer.java,src/org/mockito/internal/util/reflection/FieldInitializer.java,73,} catch (InstantiationException e) {
True,src/org/mockito/internal/util/reflection/FieldInitializer.java,src/org/mockito/internal/util/reflection/FieldInitializer.java,74,"throw new MockitoException(""Unexpected InstantiationException for field : \"""" + field.getName() + ""\"""", e);"
True,src/org/mockito/internal/util/reflection/FieldInitializer.java,src/org/mockito/internal/util/reflection/FieldInitializer.java,75,} catch (IllegalAccessException e) {
True,src/org/mockito/internal/util/reflection/FieldInitializer.java,src/org/mockito/internal/util/reflection/FieldInitializer.java,76,"throw new MockitoException(""Unexpected IllegalAccessException for field : \"""" + field.getName() + ""\"""", e);"
True,src/org/mockito/internal/util/reflection/FieldInitializer.java,src/org/mockito/internal/util/reflection/FieldInitializer.java,77,} finally {
True,src/org/mockito/internal/util/reflection/FieldInitializer.java,src/org/mockito/internal/util/reflection/FieldInitializer.java,78,if(constructor != null) {
True,src/org/mockito/internal/util/reflection/FieldInitializer.java,src/org/mockito/internal/util/reflection/FieldInitializer.java,79,changer.safelyDisableAccess(constructor);
True,src/org/mockito/internal/util/reflection/FieldInitializer.java,src/org/mockito/internal/util/reflection/FieldInitializer.java,84,private void checkNotLocal(Field field) {
True,src/org/mockito/internal/util/reflection/FieldInitializer.java,src/org/mockito/internal/util/reflection/FieldInitializer.java,85,if(field.getType().isLocalClass()) {
True,src/org/mockito/internal/util/reflection/FieldInitializer.java,src/org/mockito/internal/util/reflection/FieldInitializer.java,86,"throw new MockitoException(""Cannot instantiate field \"""" + field.getName() + ""\"", the type "" + field.getType() + "" is a local class"");"
True,src/org/mockito/internal/util/reflection/FieldInitializer.java,src/org/mockito/internal/util/reflection/FieldInitializer.java,90,private void checkNotInner(Field field) {
True,src/org/mockito/internal/util/reflection/FieldInitializer.java,src/org/mockito/internal/util/reflection/FieldInitializer.java,91,if(field.getType().isMemberClass() && !Modifier.isStatic(field.getType().getModifiers())) {
True,src/org/mockito/internal/util/reflection/FieldInitializer.java,src/org/mockito/internal/util/reflection/FieldInitializer.java,92,"throw new MockitoException(""Cannot instantiate field \"""" + field.getName() + ""\"", the type "" + field.getType() + "" is an inner class"");"
True,src/org/mockito/internal/util/reflection/FieldInitializer.java,src/org/mockito/internal/util/reflection/FieldInitializer.java,96,private void checkNotInterface(Field field) {
True,src/org/mockito/internal/util/reflection/FieldInitializer.java,src/org/mockito/internal/util/reflection/FieldInitializer.java,97,if(field.getType().isInterface()) {
True,src/org/mockito/internal/util/reflection/FieldInitializer.java,src/org/mockito/internal/util/reflection/FieldInitializer.java,98,"throw new MockitoException(""Cannot instantiate field \"""" + field.getName() + ""\"", the type "" + field.getType() + "" is an interface"");"
True,src/org/mockito/internal/util/reflection/FieldInitializer.java,src/org/mockito/internal/util/reflection/FieldInitializer.java,102,private void checkNotAbstract(Field field) {
True,src/org/mockito/internal/util/reflection/FieldInitializer.java,src/org/mockito/internal/util/reflection/FieldInitializer.java,103,if(Modifier.isAbstract(field.getType().getModifiers())) {
True,src/org/mockito/internal/util/reflection/FieldInitializer.java,src/org/mockito/internal/util/reflection/FieldInitializer.java,104,"throw new MockitoException(""Cannot instantiate field \"""" + field.getName() + ""\"", the type "" + field.getType() + "" is an inner class"");"
True,src/org/mockito/internal/util/reflection/FieldInitializer.java,src/org/mockito/internal/util/reflection/FieldInitializer.java,108,"private Object acquireFieldInstance(Object testClass, Field field) throws IllegalAccessException {"
True,src/org/mockito/internal/util/reflection/FieldInitializer.java,src/org/mockito/internal/util/reflection/FieldInitializer.java,109,Object fieldInstance = field.get(testClass);
True,src/org/mockito/internal/util/reflection/FieldInitializer.java,src/org/mockito/internal/util/reflection/FieldInitializer.java,110,if(fieldInstance != null) {
True,src/org/mockito/internal/util/reflection/FieldInitializer.java,src/org/mockito/internal/util/reflection/FieldInitializer.java,111,return fieldInstance;
True,src/org/mockito/internal/util/reflection/FieldInitializer.java,src/org/mockito/internal/util/reflection/FieldInitializer.java,114,"initializeField(testClass, field);"
True,src/org/mockito/internal/util/reflection/FieldInitializer.java,src/org/mockito/internal/util/reflection/FieldInitializer.java,115,return field.get(testClass);
True,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,1,package org.mockito.internal.util.reflection;
True,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,3,import org.junit.Test;
True,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,4,import org.mockito.InjectMocks;
True,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,5,import org.mockito.exceptions.base.MockitoException;
True,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,7,import java.lang.reflect.InvocationTargetException;
True,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,9,import static org.junit.Assert.*;
True,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,11,public class FieldInitializerTest {
True,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,13,private StaticClass alreadyInstantiated = new StaticClass();
True,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,14,private StaticClass noConstructor;
True,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,15,private StaticClassWithDefaultConstructor defaultConstructor;
True,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,16,private StaticClassWithPrivateDefaultConstructor privateDefaultConstructor;
True,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,17,private StaticClassWithoutDefaultConstructor noDefaultConstructor;
True,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,18,private StaticClassThrowingExceptionDefaultConstructor throwingExDefaultConstructor;
True,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,19,private AbstractStaticClass abstractType;
True,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,20,private Interface interfaceType;
True,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,21,private InnerClassType innerClassType;
True,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,22,private AbstractStaticClass instantiatedAbstractType = new ConcreteStaticClass();
True,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,23,private Interface instantiatedInterfaceType =  new ConcreteStaticClass();
True,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,24,private InnerClassType instantiatedInnerClassType = new InnerClassType();
True,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,26,@Test
True,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,27,public void shouldKeepSameInstanceIfFieldInitialized() throws Exception {
True,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,28,final StaticClass backupInstance = alreadyInstantiated;
True,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,29,"FieldInitializer fieldInitializer = new FieldInitializer(this, this.getClass().getDeclaredField(""alreadyInstantiated""));"
True,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,30,"assertSame(backupInstance, fieldInitializer.initialize());"
True,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,33,@Test
True,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,34,public void shouldInstantiateFieldWhenTypeHasNoConstructor() throws Exception {
True,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,35,"FieldInitializer fieldInitializer = new FieldInitializer(this, this.getClass().getDeclaredField(""noConstructor""));"
True,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,36,assertNotNull(fieldInitializer.initialize());
True,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,39,@Test
True,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,40,public void shouldInstantiateFieldWithDefaultConstructor() throws Exception {
True,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,41,"FieldInitializer fieldInitializer = new FieldInitializer(this, this.getClass().getDeclaredField(""defaultConstructor""));"
True,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,42,assertNotNull(fieldInitializer.initialize());
True,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,45,@Test
True,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,46,public void shouldInstantiateFieldWithPrivateDefaultConstructor() throws Exception {
True,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,47,"FieldInitializer fieldInitializer = new FieldInitializer(this, this.getClass().getDeclaredField(""privateDefaultConstructor""));"
True,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,48,assertNotNull(fieldInitializer.initialize());
True,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,51,@Test(expected = MockitoException.class)
True,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,52,public void shouldFailToInstantiateFieldIfNoDefaultConstructor() throws Exception {
True,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,53,"FieldInitializer fieldInitializer = new FieldInitializer(this, this.getClass().getDeclaredField(""noDefaultConstructor""));"
True,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,54,fieldInitializer.initialize();
True,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,57,@Test
True,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,58,public void shouldFailToInstantiateFieldIfDefaultConstructorThrowsException() throws Exception {
True,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,59,"FieldInitializer fieldInitializer = new FieldInitializer(this, this.getClass().getDeclaredField(""throwingExDefaultConstructor""));"
True,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,60,try {
True,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,61,fieldInitializer.initialize();
True,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,62,fail();
True,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,63,} catch (MockitoException e) {
True,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,64,InvocationTargetException ite = (InvocationTargetException) e.getCause();
True,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,65,assertTrue(ite.getTargetException() instanceof NullPointerException);
True,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,66,"assertEquals(""business logic failed"", ite.getTargetException().getMessage());"
True,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,70,@Test(expected = MockitoException.class)
True,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,71,public void shouldFailForAbstractField() throws Exception {
True,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,72,"new FieldInitializer(this, this.getClass().getDeclaredField(""abstractType""));"
True,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,75,public void shouldNotFailIfAbstractFieldIsInstantiated() throws Exception {
True,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,76,"new FieldInitializer(this, this.getClass().getDeclaredField(""instantiatedAbstractType""));"
True,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,79,@Test(expected = MockitoException.class)
True,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,80,public void shouldFailForInterfaceField() throws Exception {
True,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,81,"new FieldInitializer(this, this.getClass().getDeclaredField(""interfaceType""));"
True,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,84,public void shouldNotFailIfInterfaceFieldIsInstantiated() throws Exception {
True,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,85,"new FieldInitializer(this, this.getClass().getDeclaredField(""instantiatedInterfaceType""));"
True,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,88,@Test(expected = MockitoException.class)
True,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,89,public void shouldFailForLocalTypeField() throws Exception {
True,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,90,// when
True,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,91,class LocalType { };
True,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,93,class TheTestWithLocalType {
True,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,94,@InjectMocks LocalType field;
True,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,97,TheTestWithLocalType testWithLocalType = new TheTestWithLocalType();
True,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,99,// when
True,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,100,"new FieldInitializer(testWithLocalType, testWithLocalType.getClass().getDeclaredField(""field""));"
True,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,103,public void shouldNotFailIfLocalTypeFieldIsInstantiated() throws Exception {
True,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,104,// when
True,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,105,class LocalType { };
True,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,107,class TheTestWithLocalType {
True,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,108,@InjectMocks LocalType field = new LocalType();
True,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,111,TheTestWithLocalType testWithLocalType = new TheTestWithLocalType();
True,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,113,// when
True,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,114,"new FieldInitializer(testWithLocalType, testWithLocalType.getClass().getDeclaredField(""field""));"
True,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,117,@Test(expected = MockitoException.class)
True,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,118,public void shouldFailForInnerClassField() throws Exception {
True,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,119,"new FieldInitializer(this, this.getClass().getDeclaredField(""innerClassType""));"
True,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,122,public void shouldNotFailIfInnerClassFieldIsInstantiated() throws Exception {
True,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,123,"new FieldInitializer(this, this.getClass().getDeclaredField(""instantiatedInnerClassType""));"
True,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,126,static class StaticClass {
True,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,129,static class StaticClassWithDefaultConstructor {
True,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,130,StaticClassWithDefaultConstructor() { }
True,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,133,static class StaticClassWithPrivateDefaultConstructor {
True,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,134,private StaticClassWithPrivateDefaultConstructor() { }
True,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,137,static class StaticClassWithoutDefaultConstructor {
True,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,138,private StaticClassWithoutDefaultConstructor(String param) { }
True,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,141,static class StaticClassThrowingExceptionDefaultConstructor {
True,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,142,StaticClassThrowingExceptionDefaultConstructor() throws Exception {
True,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,143,"throw new NullPointerException(""business logic failed"");"
True,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,147,static abstract class AbstractStaticClass {
True,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,148,public AbstractStaticClass() {}
True,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,151,static interface Interface {
True,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,155,static class ConcreteStaticClass extends AbstractStaticClass implements Interface {
True,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,158,class InnerClassType {
True,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,test/org/mockito/internal/util/reflection/FieldInitializerTest.java,159,InnerClassType() { }
False,test/org/mockitousage/annotation/MockInjectionTest.java,test/org/mockitousage/annotation/MockInjectionTest.java,13,mport org.mockito.exceptions.base.MockitoException;
False,test/org/mockitousage/annotation/MockInjectionTest.java,test/org/mockitousage/annotation/MockInjectionTest.java,16,mport java.util.*;
True,test/org/mockitousage/annotation/MockInjectionTest.java,test/org/mockitousage/annotation/MockInjectionTest.java,15,import java.util.List;
True,test/org/mockitousage/annotation/MockInjectionTest.java,test/org/mockitousage/annotation/MockInjectionTest.java,16,import java.util.Map;
True,test/org/mockitousage/annotation/MockInjectionTest.java,test/org/mockitousage/annotation/MockInjectionTest.java,17,import java.util.Set;
True,test/org/mockitousage/annotation/MockInjectionTest.java,test/org/mockitousage/annotation/MockInjectionTest.java,18,import java.util.TreeSet;
False,test/org/mockitousage/annotation/MockInjectionTest.java,test/org/mockitousage/annotation/MockInjectionTest.java,26,Mock private Map map;
True,test/org/mockitousage/annotation/MockInjectionTest.java,test/org/mockitousage/annotation/MockInjectionTest.java,29,private BaseUnderTesting baseUnderTestingInstance = new BaseUnderTesting();
True,test/org/mockitousage/annotation/MockInjectionTest.java,test/org/mockitousage/annotation/MockInjectionTest.java,30,@InjectMocks private BaseUnderTesting initializedBase = baseUnderTestingInstance;
True,test/org/mockitousage/annotation/MockInjectionTest.java,test/org/mockitousage/annotation/MockInjectionTest.java,31,@InjectMocks private BaseUnderTesting notInitializedBase;
True,test/org/mockitousage/annotation/MockInjectionTest.java,test/org/mockitousage/annotation/MockInjectionTest.java,33,@Spy @InjectMocks private SuperUnderTesting initializedSpy = new SuperUnderTesting();
True,test/org/mockitousage/annotation/MockInjectionTest.java,test/org/mockitousage/annotation/MockInjectionTest.java,34,@Spy @InjectMocks private SuperUnderTesting notInitializedSpy;
True,test/org/mockitousage/annotation/MockInjectionTest.java,test/org/mockitousage/annotation/MockInjectionTest.java,36,@Mock private Map map;
True,test/org/mockitousage/annotation/MockInjectionTest.java,test/org/mockitousage/annotation/MockInjectionTest.java,48,@Test
True,test/org/mockitousage/annotation/MockInjectionTest.java,test/org/mockitousage/annotation/MockInjectionTest.java,49,public void shouldKeepSameInstanceIfFieldInitialized() {
True,test/org/mockitousage/annotation/MockInjectionTest.java,test/org/mockitousage/annotation/MockInjectionTest.java,50,"assertSame(baseUnderTestingInstance, initializedBase);"
True,test/org/mockitousage/annotation/MockInjectionTest.java,test/org/mockitousage/annotation/MockInjectionTest.java,53,@Test
True,test/org/mockitousage/annotation/MockInjectionTest.java,test/org/mockitousage/annotation/MockInjectionTest.java,54,public void shouldInitializeAnnotatedFieldIfNull() {
True,test/org/mockitousage/annotation/MockInjectionTest.java,test/org/mockitousage/annotation/MockInjectionTest.java,55,assertNotNull(notInitializedBase);
True,test/org/mockitousage/annotation/MockInjectionTest.java,test/org/mockitousage/annotation/MockInjectionTest.java,58,@Test
True,test/org/mockitousage/annotation/MockInjectionTest.java,test/org/mockitousage/annotation/MockInjectionTest.java,59,public void shouldIInjectMocksInSpy() {
True,test/org/mockitousage/annotation/MockInjectionTest.java,test/org/mockitousage/annotation/MockInjectionTest.java,60,assertNotNull(initializedSpy.getAList());
True,test/org/mockitousage/annotation/MockInjectionTest.java,test/org/mockitousage/annotation/MockInjectionTest.java,62,@Test
True,test/org/mockitousage/annotation/MockInjectionTest.java,test/org/mockitousage/annotation/MockInjectionTest.java,63,public void shouldInitializeSpyIfNullAndInjectMocks() {
True,test/org/mockitousage/annotation/MockInjectionTest.java,test/org/mockitousage/annotation/MockInjectionTest.java,64,assertNotNull(notInitializedSpy);
True,test/org/mockitousage/annotation/MockInjectionTest.java,test/org/mockitousage/annotation/MockInjectionTest.java,65,assertNotNull(notInitializedSpy.getAList());
False,test/org/mockitousage/annotation/MockInjectionTest.java,test/org/mockitousage/annotation/MockInjectionTest.java,70,Test(expected=MockitoException.class)
False,test/org/mockitousage/annotation/MockInjectionTest.java,test/org/mockitousage/annotation/MockInjectionTest.java,71,ublic void shouldProvideDecentExceptionWhenInjectMockInstanceIsNull() throws Exception {
False,test/org/mockitousage/annotation/MockInjectionTest.java,test/org/mockitousage/annotation/MockInjectionTest.java,72,ockitoAnnotations.initMocks(new Object() {
False,test/org/mockitousage/annotation/MockInjectionTest.java,test/org/mockitousage/annotation/MockInjectionTest.java,73,InjectMocks Object iAmNull = null;
True,test/org/mockitousage/annotation/MockInjectionTest.java,test/org/mockitousage/annotation/MockInjectionTest.java,100,@Test
True,test/org/mockitousage/annotation/MockInjectionTest.java,test/org/mockitousage/annotation/MockInjectionTest.java,101,public void shouldInstantiateInjectMockFieldIfPossible() throws Exception {
True,test/org/mockitousage/annotation/MockInjectionTest.java,test/org/mockitousage/annotation/MockInjectionTest.java,102,assertNotNull(notInitializedBase);
True,test/org/mockitousage/annotation/MockInjectionTest.java,test/org/mockitousage/annotation/MockInjectionTest.java,105,@Test
True,test/org/mockitousage/annotation/MockInjectionTest.java,test/org/mockitousage/annotation/MockInjectionTest.java,106,public void shouldKeepInstanceOnInjectMockFieldIfPresent() throws Exception {
True,test/org/mockitousage/annotation/MockInjectionTest.java,test/org/mockitousage/annotation/MockInjectionTest.java,107,"assertSame(baseUnderTestingInstance, initializedBase);"
False,test/org/mockitousage/annotation/MockInjectionTest.java,test/org/mockitousage/annotation/MockInjectionTest.java,77,lass SuperUnderTesting {
True,test/org/mockitousage/annotation/MockInjectionTest.java,test/org/mockitousage/annotation/MockInjectionTest.java,110,static class SuperUnderTesting {
False,test/org/mockitousage/annotation/MockInjectionTest.java,test/org/mockitousage/annotation/MockInjectionTest.java,86,lass BaseUnderTesting extends SuperUnderTesting {
True,test/org/mockitousage/annotation/MockInjectionTest.java,test/org/mockitousage/annotation/MockInjectionTest.java,119,static class BaseUnderTesting extends SuperUnderTesting {
False,test/org/mockitousage/annotation/MockInjectionTest.java,test/org/mockitousage/annotation/MockInjectionTest.java,94,lass OtherBaseUnderTesting extends SuperUnderTesting {
True,test/org/mockitousage/annotation/MockInjectionTest.java,test/org/mockitousage/annotation/MockInjectionTest.java,127,static class OtherBaseUnderTesting extends SuperUnderTesting {
False,test/org/mockitousage/annotation/MockInjectionTest.java,test/org/mockitousage/annotation/MockInjectionTest.java,102,lass SubUnderTesting extends BaseUnderTesting {
True,test/org/mockitousage/annotation/MockInjectionTest.java,test/org/mockitousage/annotation/MockInjectionTest.java,135,static class SubUnderTesting extends BaseUnderTesting {
False,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,7,mport static org.mockito.Mockito.*;
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,13,import java.util.AbstractList;
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,17,import static org.mockito.Mockito.doReturn;
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,22,@Spy
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,23,final List spiedList = new ArrayList();
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,25,@Spy
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,26,NestedClassWithNoArgConstructor staticTypeWithNoArgConstructor;
False,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,22,inal List spiedList = new ArrayList();
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,29,NestedClassWithoutDefinedConstructor staticTypeWithoutDefinedConstructor;
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,39,@Test
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,40,public void shouldInitSpyIfNestedStaticClass() throws Exception {
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,41,assertNotNull(staticTypeWithNoArgConstructor);
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,42,assertNotNull(staticTypeWithoutDefinedConstructor);
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,45,@Test(expected = MockitoException.class)
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,46,public void shouldFailIfTypeIsAnInterface() throws Exception {
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,47,class FailingSpy {
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,48,@Spy private List spyTypeIsInterface;
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,51,MockitoAnnotations.initMocks(new FailingSpy());
False,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,33,ublic void shouldFailIfFieldIsNotInitialized() throws Exception {
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,55,public void shouldFailIfTypeIsAbstract() throws Exception {
False,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,35,Spy private List mySpy;
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,57,@Spy private AbstractList spyTypeIsAbstract;
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,60,MockitoAnnotations.initMocks(new FailingSpy());
False,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,37,ublic List getMySpy() {
False,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,38,eturn mySpy;
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,63,@Test(expected = MockitoException.class)
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,64,public void shouldFailIfTypeIsInnerClass() throws Exception {
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,65,class FailingSpy {
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,66,@Spy private List spyTypeIsInner;
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,67,class TheInnerClass { }
False,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,50,Test(expected=MockitoException.class)
False,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,51,ublic void shouldProvideDecentExceptionWhenSpyInstanceIsNull() throws Exception {
False,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,52,ockitoAnnotations.initMocks(new Object() {
False,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,53,Spy String spy = null;
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,78,static class NestedClassWithoutDefinedConstructor { }
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,80,static class NestedClassWithNoArgConstructor {
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,81,NestedClassWithNoArgConstructor() { }
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,82,NestedClassWithNoArgConstructor(String _1arg) { }
