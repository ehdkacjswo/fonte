is_addition,old_file_path,new_file_path,line_num,content
False,buildSrc/src/main/groovy/org/mockito/release/comparison/BinaryComparator.java,buildSrc/src/main/groovy/org/mockito/release/comparison/BinaryComparator.java,31,"inal boolean equals = Arrays.equals(hash1, hash2);"
True,buildSrc/src/main/groovy/org/mockito/release/comparison/BinaryComparator.java,buildSrc/src/main/groovy/org/mockito/release/comparison/BinaryComparator.java,31,"final boolean equals = new ZipCompare().compareZips(file1.getAbsolutePath(), file2.getAbsolutePath());"
True,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,1,package org.mockito.release.comparison;
True,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,3,import java.io.IOException;
True,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,4,import java.io.InputStream;
True,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,5,import java.util.Enumeration;
True,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,6,import java.util.Iterator;
True,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,7,import java.util.LinkedHashSet;
True,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,8,import java.util.Set;
True,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,9,import java.util.zip.ZipEntry;
True,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,10,import java.util.zip.ZipFile;
True,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,12,class ZipCompare {
True,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,14,"boolean compareZips(String filePath1, String filePath2) {"
True,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,15,ZipFile file1;
True,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,16,try {
True,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,17,file1 = new ZipFile(filePath1);
True,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,18,} catch (IOException e) {
True,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,19,"System.out.println(""Could not open zip file "" + filePath1 + "": "" + e);"
True,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,20,return false;
True,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,23,ZipFile file2;
True,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,24,try {
True,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,25,file2 = new ZipFile(filePath2);
True,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,26,} catch (IOException e) {
True,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,27,"System.out.println(""Could not open zip file "" + filePath1 + "": "" + e);"
True,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,28,return false;
True,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,31,"System.out.println(""Comparing "" + filePath1 + "" with "" + filePath2 + "":"");"
True,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,33,Set set1 = new LinkedHashSet();
True,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,34,for (Enumeration e = file1.entries(); e.hasMoreElements(); )
True,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,35,set1.add(((ZipEntry) e.nextElement()).getName());
True,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,37,Set set2 = new LinkedHashSet();
True,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,38,for (Enumeration e = file2.entries(); e.hasMoreElements(); )
True,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,39,set2.add(((ZipEntry) e.nextElement()).getName());
True,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,41,int errcount = 0;
True,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,42,int filecount = 0;
True,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,43,for (Iterator i = set1.iterator(); i.hasNext(); ) {
True,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,44,String name = (String) i.next();
True,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,45,if (!set2.contains(name)) {
True,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,46,"System.out.println(name + "" not found in "" + filePath2);"
True,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,47,errcount += 1;
True,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,48,continue;
True,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,50,try {
True,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,51,set2.remove(name);
True,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,52,"if (!streamsEqual(file1.getInputStream(file1.getEntry(name)), file2.getInputStream(file2"
True,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,53,.getEntry(name)))) {
True,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,54,"System.out.println(name + "" does not match"");"
True,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,55,errcount += 1;
True,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,56,continue;
True,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,58,} catch (Exception e) {
True,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,59,"System.out.println(name + "": IO Error "" + e);"
True,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,60,e.printStackTrace();
True,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,61,errcount += 1;
True,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,62,continue;
True,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,64,filecount += 1;
True,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,66,for (Iterator i = set2.iterator(); i.hasNext(); ) {
True,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,67,String name = (String) i.next();
True,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,68,"System.out.println(name + "" not found in "" + filePath1);"
True,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,69,errcount += 1;
True,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,71,"System.out.println(filecount + "" entries matched"");"
True,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,72,if (errcount > 0) {
True,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,73,"System.out.println(errcount + "" entries did not match"");"
True,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,74,return false;
True,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,76,return true;
True,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,79,"static boolean streamsEqual(InputStream stream1, InputStream stream2) throws IOException {"
True,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,80,byte[] buf1 = new byte[4096];
True,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,81,byte[] buf2 = new byte[4096];
True,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,82,boolean done1 = false;
True,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,83,boolean done2 = false;
True,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,85,try {
True,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,86,while (!done1) {
True,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,87,int off1 = 0;
True,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,88,int off2 = 0;
True,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,90,while (off1 < buf1.length) {
True,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,91,"int count = stream1.read(buf1, off1, buf1.length - off1);"
True,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,92,if (count < 0) {
True,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,93,done1 = true;
True,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,94,break;
True,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,96,off1 += count;
True,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,98,while (off2 < buf2.length) {
True,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,99,"int count = stream2.read(buf2, off2, buf2.length - off2);"
True,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,100,if (count < 0) {
True,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,101,done2 = true;
True,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,102,break;
True,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,104,off2 += count;
True,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,106,if (off1 != off2 || done1 != done2)
True,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,107,return false;
True,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,108,for (int i = 0; i < off1; i++) {
True,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,109,if (buf1[i] != buf2[i])
True,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,110,return false;
True,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,113,return true;
True,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,114,} finally {
True,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,115,stream1.close();
True,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,buildSrc/src/main/groovy/org/mockito/release/comparison/ZipCompare.java,116,stream2.close();
