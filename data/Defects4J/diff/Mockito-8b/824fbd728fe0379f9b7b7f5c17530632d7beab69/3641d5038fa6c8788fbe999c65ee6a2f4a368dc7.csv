is_addition,old_file_path,new_file_path,line_num,content
True,src/org/mockito/Matchers.java,src/org/mockito/Matchers.java,18,import org.mockito.internal.matchers.apachecommons.ReflectionEquals;
True,src/org/mockito/Matchers.java,src/org/mockito/Matchers.java,322,* Object argument that is reflection-equal to the given value.
True,src/org/mockito/Matchers.java,src/org/mockito/Matchers.java,323,* <p>
True,src/org/mockito/Matchers.java,src/org/mockito/Matchers.java,324,* This matcher can be used when equals() is not implemented on compared objects.
True,src/org/mockito/Matchers.java,src/org/mockito/Matchers.java,325,* Matcher uses java reflection API to compare fields of wanted and actual object.
True,src/org/mockito/Matchers.java,src/org/mockito/Matchers.java,326,* <p>
True,src/org/mockito/Matchers.java,src/org/mockito/Matchers.java,327,"* Works similarly to EqualsBuilder.reflectionEquals(this, other) from apache commons library."
True,src/org/mockito/Matchers.java,src/org/mockito/Matchers.java,328,* <p>
True,src/org/mockito/Matchers.java,src/org/mockito/Matchers.java,329,* See examples in javadoc for {@link Matchers}
True,src/org/mockito/Matchers.java,src/org/mockito/Matchers.java,331,* @param value
True,src/org/mockito/Matchers.java,src/org/mockito/Matchers.java,332,*            the given value.
True,src/org/mockito/Matchers.java,src/org/mockito/Matchers.java,333,* @return <code>null</code>.
True,src/org/mockito/Matchers.java,src/org/mockito/Matchers.java,335,public static <T> T refEq(T value) {
True,src/org/mockito/Matchers.java,src/org/mockito/Matchers.java,336,return reportMatcher(new ReflectionEquals(value)).<T>returnNull();
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,2,* Copyright (c) 2007 Mockito contributors
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,3,* This program is made available under the terms of the MIT License.
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,6,"//Class comes from Apache Commons Lang, added some tiny changes"
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,9,* Licensed to the Apache Software Foundation (ASF) under one or more
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,10,* contributor license agreements.  See the NOTICE file distributed with
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,11,* this work for additional information regarding copyright ownership.
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,12,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,13,"* (the ""License""); you may not use this file except in compliance with"
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,14,* the License.  You may obtain a copy of the License at
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,16,*      http://www.apache.org/licenses/LICENSE-2.0
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,18,"* Unless required by applicable law or agreed to in writing, software"
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,19,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,20,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,21,* See the License for the specific language governing permissions and
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,22,* limitations under the License.
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,24,package org.mockito.internal.matchers.apachecommons;
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,26,import java.lang.reflect.AccessibleObject;
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,27,import java.lang.reflect.Field;
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,28,import java.lang.reflect.Modifier;
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,29,import java.util.Arrays;
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,30,import java.util.Collections;
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,31,import java.util.List;
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,34,* <p>Assists in implementing {@link Object#equals(Object)} methods.</p>
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,36,* <p> This class provides methods to build a good equals method for any
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,37,* class. It follows rules laid out in
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,38,"* <a href=""http://java.sun.com/docs/books/effective/index.html"">Effective Java</a>"
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,39,"* , by Joshua Bloch. In particular the rule for comparing <code>doubles</code>,"
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,40,"* <code>floats</code>, and arrays can be tricky. Also, making sure that"
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,41,* <code>equals()</code> and <code>hashCode()</code> are consistent can be
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,42,* difficult.</p>
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,44,"* <p>Two Objects that compare as equals must generate the same hash code,"
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,45,* but two Objects with the same hash code do not have to be equal.</p>
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,47,* <p>All relevant fields should be included in the calculation of equals.
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,48,"* Derived fields may be ignored. In particular, any field used in"
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,49,"* generating a hash code must be used in the equals method, and vice"
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,50,* versa.</p>
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,52,* <p>Typical use for the code is as follows:</p>
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,53,* <pre>
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,54,* public boolean equals(Object obj) {
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,55,*   if (obj == null) { return false; }
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,56,*   if (obj == this) { return true; }
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,57,*   if (obj.getClass() != getClass()) {
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,58,*     return false;
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,60,*   MyClass rhs = (MyClass) obj;
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,61,*   return new EqualsBuilder()
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,62,*                 .appendSuper(super.equals(obj))
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,63,"*                 .append(field1, rhs.field1)"
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,64,"*                 .append(field2, rhs.field2)"
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,65,"*                 .append(field3, rhs.field3)"
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,66,*                 .isEquals();
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,68,* </pre>
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,70,"* <p> Alternatively, there is a method that uses reflection to determine"
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,71,"* the fields to test. Because these fields are usually private, the method,"
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,72,"* <code>reflectionEquals</code>, uses <code>AccessibleObject.setAccessible</code> to"
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,73,* change the visibility of the fields. This will fail under a security
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,74,"* manager, unless the appropriate permissions are set up correctly. It is"
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,75,* also slower than testing explicitly.</p>
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,77,* <p> A typical invocation for this method would look like:</p>
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,78,* <pre>
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,79,* public boolean equals(Object obj) {
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,80,"*   return EqualsBuilder.reflectionEquals(this, obj);"
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,82,* </pre>
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,84,"* @author <a href=""mailto:steve.downey@netfolio.com"">Steve Downey</a>"
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,85,* @author Stephen Colebourne
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,86,* @author Gary Gregory
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,87,* @author Pete Gieser
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,88,* @author Arun Mammen Thomas
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,89,* @since 1.0
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,90,* @version $Id: EqualsBuilder.java 611543 2008-01-13 07:00:22Z bayard $
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,92,"@SuppressWarnings(""unchecked"")"
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,93,public class EqualsBuilder {
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,96,* If the fields tested are equals.
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,97,* The default value is <code>true</code>.
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,99,private boolean isEquals = true;
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,102,* <p>Constructor for EqualsBuilder.</p>
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,104,* <p>Starts off assuming that equals is <code>true</code>.</p>
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,105,* @see Object#equals(Object)
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,107,public EqualsBuilder() {
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,108,// do nothing for now.
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,114,* <p>This method uses reflection to determine if the two <code>Object</code>s
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,115,* are equal.</p>
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,117,* <p>It uses <code>AccessibleObject.setAccessible</code> to gain access to private
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,118,* fields. This means that it will throw a security exception if run under
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,119,"* a security manager, if the permissions are not set up correctly. It is also"
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,120,* not as efficient as testing explicitly.</p>
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,122,"* <p>Transient members will be not be tested, as they are likely derived"
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,123,"* fields, and not part of the value of the Object.</p>"
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,125,* <p>Static fields will not be tested. Superclass fields will be included.</p>
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,127,* @param lhs  <code>this</code> object
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,128,* @param rhs  the other object
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,129,* @return <code>true</code> if the two Objects have tested equals.
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,131,"public static boolean reflectionEquals(Object lhs, Object rhs) {"
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,132,"return reflectionEquals(lhs, rhs, false, null, null);"
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,136,* <p>This method uses reflection to determine if the two <code>Object</code>s
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,137,* are equal.</p>
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,139,* <p>It uses <code>AccessibleObject.setAccessible</code> to gain access to private
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,140,* fields. This means that it will throw a security exception if run under
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,141,"* a security manager, if the permissions are not set up correctly. It is also"
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,142,* not as efficient as testing explicitly.</p>
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,144,"* <p>Transient members will be not be tested, as they are likely derived"
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,145,"* fields, and not part of the value of the Object.</p>"
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,147,* <p>Static fields will not be tested. Superclass fields will be included.</p>
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,149,* @param lhs  <code>this</code> object
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,150,* @param rhs  the other object
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,151,* @param excludeFields  array of field names to exclude from testing
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,152,* @return <code>true</code> if the two Objects have tested equals.
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,154,"public static boolean reflectionEquals(Object lhs, Object rhs, String[] excludeFields) {"
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,155,"return reflectionEquals(lhs, rhs, false, null, excludeFields);"
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,159,* <p>This method uses reflection to determine if the two <code>Object</code>s
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,160,* are equal.</p>
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,162,* <p>It uses <code>AccessibleObject.setAccessible</code> to gain access to private
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,163,* fields. This means that it will throw a security exception if run under
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,164,"* a security manager, if the permissions are not set up correctly. It is also"
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,165,* not as efficient as testing explicitly.</p>
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,167,"* <p>If the TestTransients parameter is set to <code>true</code>, transient"
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,168,"* members will be tested, otherwise they are ignored, as they are likely"
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,169,"* derived fields, and not part of the value of the <code>Object</code>.</p>"
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,171,* <p>Static fields will not be tested. Superclass fields will be included.</p>
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,173,* @param lhs  <code>this</code> object
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,174,* @param rhs  the other object
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,175,* @param testTransients  whether to include transient fields
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,176,* @return <code>true</code> if the two Objects have tested equals.
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,178,"public static boolean reflectionEquals(Object lhs, Object rhs, boolean testTransients) {"
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,179,"return reflectionEquals(lhs, rhs, testTransients, null, null);"
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,183,* <p>This method uses reflection to determine if the two <code>Object</code>s
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,184,* are equal.</p>
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,186,* <p>It uses <code>AccessibleObject.setAccessible</code> to gain access to private
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,187,* fields. This means that it will throw a security exception if run under
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,188,"* a security manager, if the permissions are not set up correctly. It is also"
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,189,* not as efficient as testing explicitly.</p>
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,191,"* <p>If the testTransients parameter is set to <code>true</code>, transient"
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,192,"* members will be tested, otherwise they are ignored, as they are likely"
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,193,"* derived fields, and not part of the value of the <code>Object</code>.</p>"
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,195,* <p>Static fields will not be included. Superclass fields will be appended
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,196,* up to and including the specified superclass. A null superclass is treated
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,197,* as java.lang.Object.</p>
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,199,* @param lhs  <code>this</code> object
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,200,* @param rhs  the other object
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,201,* @param testTransients  whether to include transient fields
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,202,"* @param reflectUpToClass  the superclass to reflect up to (inclusive),"
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,203,*  may be <code>null</code>
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,204,* @return <code>true</code> if the two Objects have tested equals.
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,205,* @since 2.0
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,207,"public static boolean reflectionEquals(Object lhs, Object rhs, boolean testTransients, Class reflectUpToClass) {"
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,208,"return reflectionEquals(lhs, rhs, testTransients, reflectUpToClass, null);"
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,212,* <p>This method uses reflection to determine if the two <code>Object</code>s
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,213,* are equal.</p>
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,215,* <p>It uses <code>AccessibleObject.setAccessible</code> to gain access to private
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,216,* fields. This means that it will throw a security exception if run under
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,217,"* a security manager, if the permissions are not set up correctly. It is also"
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,218,* not as efficient as testing explicitly.</p>
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,220,"* <p>If the testTransients parameter is set to <code>true</code>, transient"
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,221,"* members will be tested, otherwise they are ignored, as they are likely"
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,222,"* derived fields, and not part of the value of the <code>Object</code>.</p>"
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,224,* <p>Static fields will not be included. Superclass fields will be appended
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,225,* up to and including the specified superclass. A null superclass is treated
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,226,* as java.lang.Object.</p>
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,228,* @param lhs  <code>this</code> object
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,229,* @param rhs  the other object
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,230,* @param testTransients  whether to include transient fields
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,231,"* @param reflectUpToClass  the superclass to reflect up to (inclusive),"
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,232,*  may be <code>null</code>
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,233,* @param excludeFields  array of field names to exclude from testing
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,234,* @return <code>true</code> if the two Objects have tested equals.
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,235,* @since 2.0
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,237,"public static boolean reflectionEquals(Object lhs, Object rhs, boolean testTransients, Class reflectUpToClass,"
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,238,String[] excludeFields) {
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,239,if (lhs == rhs) {
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,240,return true;
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,242,if (lhs == null || rhs == null) {
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,243,return false;
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,245,// Find the leaf class since there may be transients in the leaf
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,246,// class or in classes between the leaf and root.
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,247,"// If we are not testing transients or a subclass has no ivars,"
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,248,// then a subclass can test equals to a superclass.
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,249,Class lhsClass = lhs.getClass();
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,250,Class rhsClass = rhs.getClass();
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,251,Class testClass;
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,252,if (lhsClass.isInstance(rhs)) {
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,253,testClass = lhsClass;
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,254,if (!rhsClass.isInstance(lhs)) {
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,255,// rhsClass is a subclass of lhsClass
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,256,testClass = rhsClass;
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,258,} else if (rhsClass.isInstance(lhs)) {
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,259,testClass = rhsClass;
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,260,if (!lhsClass.isInstance(rhs)) {
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,261,// lhsClass is a subclass of rhsClass
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,262,testClass = lhsClass;
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,264,} else {
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,265,// The two classes are not related.
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,266,return false;
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,268,EqualsBuilder equalsBuilder = new EqualsBuilder();
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,269,try {
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,270,"reflectionAppend(lhs, rhs, testClass, equalsBuilder, testTransients, excludeFields);"
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,271,while (testClass.getSuperclass() != null && testClass != reflectUpToClass) {
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,272,testClass = testClass.getSuperclass();
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,273,"reflectionAppend(lhs, rhs, testClass, equalsBuilder, testTransients, excludeFields);"
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,275,} catch (IllegalArgumentException e) {
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,276,"// In this case, we tried to test a subclass vs. a superclass and"
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,277,// the subclass has ivars or the ivars are transient and
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,278,// we are testing transients.
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,279,"// If a subclass has ivars that we are trying to test them, we get an"
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,280,// exception and we know that the objects are not equal.
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,281,return false;
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,283,return equalsBuilder.isEquals();
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,287,* <p>Appends the fields and values defined by the given object of the
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,288,* given Class.</p>
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,290,* @param lhs  the left hand object
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,291,* @param rhs  the right hand object
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,292,* @param clazz  the class to append details of
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,293,* @param builder  the builder to append to
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,294,* @param useTransients  whether to test transient fields
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,295,* @param excludeFields  array of field names to exclude from testing
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,297,private static void reflectionAppend(
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,298,"Object lhs,"
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,299,"Object rhs,"
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,300,"Class clazz,"
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,301,"EqualsBuilder builder,"
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,302,"boolean useTransients,"
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,303,String[] excludeFields) {
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,304,Field[] fields = clazz.getDeclaredFields();
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,305,List excludedFieldList = excludeFields != null ? Arrays.asList(excludeFields) : Collections.EMPTY_LIST;
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,306,"AccessibleObject.setAccessible(fields, true);"
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,307,for (int i = 0; i < fields.length && builder.isEquals; i++) {
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,308,Field f = fields[i];
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,309,if (!excludedFieldList.contains(f.getName())
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,310,&& (f.getName().indexOf('$') == -1)
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,311,&& (useTransients || !Modifier.isTransient(f.getModifiers()))
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,312,&& (!Modifier.isStatic(f.getModifiers()))) {
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,313,try {
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,314,"builder.append(f.get(lhs), f.get(rhs));"
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,315,} catch (IllegalAccessException e) {
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,316,//this can't happen. Would get a Security exception instead
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,317,//throw a runtime exception in case the impossible happens.
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,318,"throw new InternalError(""Unexpected IllegalAccessException"");"
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,327,* <p>Adds the result of <code>super.equals()</code> to this builder.</p>
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,329,* @param superEquals  the result of calling <code>super.equals()</code>
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,330,* @return EqualsBuilder - used to chain calls.
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,331,* @since 2.0
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,333,public EqualsBuilder appendSuper(boolean superEquals) {
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,334,if (isEquals == false) {
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,335,return this;
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,337,isEquals = superEquals;
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,338,return this;
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,344,* <p>Test if two <code>Object</code>s are equal using their
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,345,* <code>equals</code> method.</p>
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,347,* @param lhs  the left hand object
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,348,* @param rhs  the right hand object
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,349,* @return EqualsBuilder - used to chain calls.
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,351,"public EqualsBuilder append(Object lhs, Object rhs) {"
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,352,if (isEquals == false) {
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,353,return this;
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,355,if (lhs == rhs) {
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,356,return this;
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,358,if (lhs == null || rhs == null) {
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,359,this.setEquals(false);
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,360,return this;
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,362,Class lhsClass = lhs.getClass();
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,363,if (!lhsClass.isArray()) {
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,364,if (lhs instanceof java.math.BigDecimal && rhs instanceof java.math.BigDecimal) {
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,365,isEquals = (((java.math.BigDecimal) lhs).compareTo((java.math.BigDecimal) rhs) == 0);
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,366,} else {
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,367,"// The simple case, not an array, just test the element"
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,368,isEquals = lhs.equals(rhs);
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,370,} else if (lhs.getClass() != rhs.getClass()) {
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,371,"// Here when we compare different dimensions, for example: a boolean[][] to a boolean[]"
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,372,this.setEquals(false);
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,374,"// 'Switch' on type of array, to dispatch to the correct handler"
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,375,// This handles multi dimensional arrays of the same depth
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,376,} else if (lhs instanceof long[]) {
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,377,"append((long[]) lhs, (long[]) rhs);"
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,378,} else if (lhs instanceof int[]) {
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,379,"append((int[]) lhs, (int[]) rhs);"
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,380,} else if (lhs instanceof short[]) {
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,381,"append((short[]) lhs, (short[]) rhs);"
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,382,} else if (lhs instanceof char[]) {
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,383,"append((char[]) lhs, (char[]) rhs);"
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,384,} else if (lhs instanceof byte[]) {
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,385,"append((byte[]) lhs, (byte[]) rhs);"
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,386,} else if (lhs instanceof double[]) {
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,387,"append((double[]) lhs, (double[]) rhs);"
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,388,} else if (lhs instanceof float[]) {
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,389,"append((float[]) lhs, (float[]) rhs);"
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,390,} else if (lhs instanceof boolean[]) {
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,391,"append((boolean[]) lhs, (boolean[]) rhs);"
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,392,} else {
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,393,// Not an array of primitives
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,394,"append((Object[]) lhs, (Object[]) rhs);"
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,396,return this;
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,400,* <p>
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,401,* Test if two <code>long</code> s are equal.
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,402,* </p>
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,404,* @param lhs
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,405,*                  the left hand <code>long</code>
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,406,* @param rhs
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,407,*                  the right hand <code>long</code>
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,408,* @return EqualsBuilder - used to chain calls.
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,410,"public EqualsBuilder append(long lhs, long rhs) {"
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,411,if (isEquals == false) {
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,412,return this;
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,414,isEquals = (lhs == rhs);
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,415,return this;
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,419,* <p>Test if two <code>int</code>s are equal.</p>
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,421,* @param lhs  the left hand <code>int</code>
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,422,* @param rhs  the right hand <code>int</code>
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,423,* @return EqualsBuilder - used to chain calls.
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,425,"public EqualsBuilder append(int lhs, int rhs) {"
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,426,if (isEquals == false) {
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,427,return this;
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,429,isEquals = (lhs == rhs);
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,430,return this;
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,434,* <p>Test if two <code>short</code>s are equal.</p>
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,436,* @param lhs  the left hand <code>short</code>
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,437,* @param rhs  the right hand <code>short</code>
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,438,* @return EqualsBuilder - used to chain calls.
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,440,"public EqualsBuilder append(short lhs, short rhs) {"
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,441,if (isEquals == false) {
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,442,return this;
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,444,isEquals = (lhs == rhs);
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,445,return this;
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,449,* <p>Test if two <code>char</code>s are equal.</p>
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,451,* @param lhs  the left hand <code>char</code>
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,452,* @param rhs  the right hand <code>char</code>
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,453,* @return EqualsBuilder - used to chain calls.
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,455,"public EqualsBuilder append(char lhs, char rhs) {"
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,456,if (isEquals == false) {
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,457,return this;
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,459,isEquals = (lhs == rhs);
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,460,return this;
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,464,* <p>Test if two <code>byte</code>s are equal.</p>
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,466,* @param lhs  the left hand <code>byte</code>
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,467,* @param rhs  the right hand <code>byte</code>
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,468,* @return EqualsBuilder - used to chain calls.
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,470,"public EqualsBuilder append(byte lhs, byte rhs) {"
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,471,if (isEquals == false) {
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,472,return this;
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,474,isEquals = (lhs == rhs);
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,475,return this;
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,479,* <p>Test if two <code>double</code>s are equal by testing that the
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,480,* pattern of bits returned by <code>doubleToLong</code> are equal.</p>
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,482,"* <p>This handles NaNs, Infinities, and <code>-0.0</code>.</p>"
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,484,* <p>It is compatible with the hash code generated by
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,485,* <code>HashCodeBuilder</code>.</p>
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,487,* @param lhs  the left hand <code>double</code>
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,488,* @param rhs  the right hand <code>double</code>
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,489,* @return EqualsBuilder - used to chain calls.
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,491,"public EqualsBuilder append(double lhs, double rhs) {"
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,492,if (isEquals == false) {
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,493,return this;
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,495,"return append(Double.doubleToLongBits(lhs), Double.doubleToLongBits(rhs));"
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,499,* <p>Test if two <code>float</code>s are equal byt testing that the
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,500,* pattern of bits returned by doubleToLong are equal.</p>
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,502,"* <p>This handles NaNs, Infinities, and <code>-0.0</code>.</p>"
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,504,* <p>It is compatible with the hash code generated by
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,505,* <code>HashCodeBuilder</code>.</p>
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,507,* @param lhs  the left hand <code>float</code>
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,508,* @param rhs  the right hand <code>float</code>
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,509,* @return EqualsBuilder - used to chain calls.
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,511,"public EqualsBuilder append(float lhs, float rhs) {"
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,512,if (isEquals == false) {
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,513,return this;
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,515,"return append(Float.floatToIntBits(lhs), Float.floatToIntBits(rhs));"
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,519,* <p>Test if two <code>booleans</code>s are equal.</p>
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,521,* @param lhs  the left hand <code>boolean</code>
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,522,* @param rhs  the right hand <code>boolean</code>
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,523,* @return EqualsBuilder - used to chain calls.
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,525,"public EqualsBuilder append(boolean lhs, boolean rhs) {"
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,526,if (isEquals == false) {
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,527,return this;
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,529,isEquals = (lhs == rhs);
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,530,return this;
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,534,* <p>Performs a deep comparison of two <code>Object</code> arrays.</p>
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,536,* <p>This also will be called for the top level of
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,537,"* multi-dimensional, ragged, and multi-typed arrays.</p>"
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,539,* @param lhs  the left hand <code>Object[]</code>
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,540,* @param rhs  the right hand <code>Object[]</code>
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,541,* @return EqualsBuilder - used to chain calls.
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,543,"public EqualsBuilder append(Object[] lhs, Object[] rhs) {"
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,544,if (isEquals == false) {
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,545,return this;
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,547,if (lhs == rhs) {
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,548,return this;
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,550,if (lhs == null || rhs == null) {
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,551,this.setEquals(false);
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,552,return this;
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,554,if (lhs.length != rhs.length) {
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,555,this.setEquals(false);
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,556,return this;
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,558,for (int i = 0; i < lhs.length && isEquals; ++i) {
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,559,"append(lhs[i], rhs[i]);"
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,561,return this;
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,565,* <p>Deep comparison of array of <code>long</code>. Length and all
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,566,* values are compared.</p>
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,568,"* <p>The method {@link #append(long, long)} is used.</p>"
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,570,* @param lhs  the left hand <code>long[]</code>
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,571,* @param rhs  the right hand <code>long[]</code>
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,572,* @return EqualsBuilder - used to chain calls.
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,574,"public EqualsBuilder append(long[] lhs, long[] rhs) {"
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,575,if (isEquals == false) {
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,576,return this;
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,578,if (lhs == rhs) {
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,579,return this;
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,581,if (lhs == null || rhs == null) {
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,582,this.setEquals(false);
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,583,return this;
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,585,if (lhs.length != rhs.length) {
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,586,this.setEquals(false);
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,587,return this;
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,589,for (int i = 0; i < lhs.length && isEquals; ++i) {
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,590,"append(lhs[i], rhs[i]);"
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,592,return this;
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,596,* <p>Deep comparison of array of <code>int</code>. Length and all
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,597,* values are compared.</p>
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,599,"* <p>The method {@link #append(int, int)} is used.</p>"
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,601,* @param lhs  the left hand <code>int[]</code>
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,602,* @param rhs  the right hand <code>int[]</code>
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,603,* @return EqualsBuilder - used to chain calls.
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,605,"public EqualsBuilder append(int[] lhs, int[] rhs) {"
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,606,if (isEquals == false) {
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,607,return this;
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,609,if (lhs == rhs) {
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,610,return this;
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,612,if (lhs == null || rhs == null) {
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,613,this.setEquals(false);
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,614,return this;
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,616,if (lhs.length != rhs.length) {
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,617,this.setEquals(false);
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,618,return this;
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,620,for (int i = 0; i < lhs.length && isEquals; ++i) {
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,621,"append(lhs[i], rhs[i]);"
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,623,return this;
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,627,* <p>Deep comparison of array of <code>short</code>. Length and all
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,628,* values are compared.</p>
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,630,"* <p>The method {@link #append(short, short)} is used.</p>"
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,632,* @param lhs  the left hand <code>short[]</code>
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,633,* @param rhs  the right hand <code>short[]</code>
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,634,* @return EqualsBuilder - used to chain calls.
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,636,"public EqualsBuilder append(short[] lhs, short[] rhs) {"
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,637,if (isEquals == false) {
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,638,return this;
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,640,if (lhs == rhs) {
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,641,return this;
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,643,if (lhs == null || rhs == null) {
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,644,this.setEquals(false);
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,645,return this;
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,647,if (lhs.length != rhs.length) {
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,648,this.setEquals(false);
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,649,return this;
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,651,for (int i = 0; i < lhs.length && isEquals; ++i) {
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,652,"append(lhs[i], rhs[i]);"
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,654,return this;
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,658,* <p>Deep comparison of array of <code>char</code>. Length and all
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,659,* values are compared.</p>
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,661,"* <p>The method {@link #append(char, char)} is used.</p>"
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,663,* @param lhs  the left hand <code>char[]</code>
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,664,* @param rhs  the right hand <code>char[]</code>
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,665,* @return EqualsBuilder - used to chain calls.
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,667,"public EqualsBuilder append(char[] lhs, char[] rhs) {"
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,668,if (isEquals == false) {
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,669,return this;
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,671,if (lhs == rhs) {
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,672,return this;
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,674,if (lhs == null || rhs == null) {
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,675,this.setEquals(false);
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,676,return this;
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,678,if (lhs.length != rhs.length) {
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,679,this.setEquals(false);
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,680,return this;
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,682,for (int i = 0; i < lhs.length && isEquals; ++i) {
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,683,"append(lhs[i], rhs[i]);"
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,685,return this;
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,689,* <p>Deep comparison of array of <code>byte</code>. Length and all
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,690,* values are compared.</p>
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,692,"* <p>The method {@link #append(byte, byte)} is used.</p>"
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,694,* @param lhs  the left hand <code>byte[]</code>
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,695,* @param rhs  the right hand <code>byte[]</code>
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,696,* @return EqualsBuilder - used to chain calls.
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,698,"public EqualsBuilder append(byte[] lhs, byte[] rhs) {"
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,699,if (isEquals == false) {
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,700,return this;
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,702,if (lhs == rhs) {
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,703,return this;
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,705,if (lhs == null || rhs == null) {
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,706,this.setEquals(false);
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,707,return this;
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,709,if (lhs.length != rhs.length) {
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,710,this.setEquals(false);
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,711,return this;
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,713,for (int i = 0; i < lhs.length && isEquals; ++i) {
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,714,"append(lhs[i], rhs[i]);"
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,716,return this;
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,720,* <p>Deep comparison of array of <code>double</code>. Length and all
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,721,* values are compared.</p>
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,723,"* <p>The method {@link #append(double, double)} is used.</p>"
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,725,* @param lhs  the left hand <code>double[]</code>
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,726,* @param rhs  the right hand <code>double[]</code>
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,727,* @return EqualsBuilder - used to chain calls.
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,729,"public EqualsBuilder append(double[] lhs, double[] rhs) {"
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,730,if (isEquals == false) {
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,731,return this;
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,733,if (lhs == rhs) {
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,734,return this;
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,736,if (lhs == null || rhs == null) {
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,737,this.setEquals(false);
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,738,return this;
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,740,if (lhs.length != rhs.length) {
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,741,this.setEquals(false);
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,742,return this;
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,744,for (int i = 0; i < lhs.length && isEquals; ++i) {
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,745,"append(lhs[i], rhs[i]);"
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,747,return this;
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,751,* <p>Deep comparison of array of <code>float</code>. Length and all
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,752,* values are compared.</p>
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,754,"* <p>The method {@link #append(float, float)} is used.</p>"
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,756,* @param lhs  the left hand <code>float[]</code>
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,757,* @param rhs  the right hand <code>float[]</code>
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,758,* @return EqualsBuilder - used to chain calls.
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,760,"public EqualsBuilder append(float[] lhs, float[] rhs) {"
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,761,if (isEquals == false) {
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,762,return this;
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,764,if (lhs == rhs) {
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,765,return this;
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,767,if (lhs == null || rhs == null) {
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,768,this.setEquals(false);
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,769,return this;
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,771,if (lhs.length != rhs.length) {
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,772,this.setEquals(false);
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,773,return this;
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,775,for (int i = 0; i < lhs.length && isEquals; ++i) {
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,776,"append(lhs[i], rhs[i]);"
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,778,return this;
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,782,* <p>Deep comparison of array of <code>boolean</code>. Length and all
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,783,* values are compared.</p>
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,785,"* <p>The method {@link #append(boolean, boolean)} is used.</p>"
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,787,* @param lhs  the left hand <code>boolean[]</code>
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,788,* @param rhs  the right hand <code>boolean[]</code>
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,789,* @return EqualsBuilder - used to chain calls.
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,791,"public EqualsBuilder append(boolean[] lhs, boolean[] rhs) {"
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,792,if (isEquals == false) {
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,793,return this;
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,795,if (lhs == rhs) {
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,796,return this;
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,798,if (lhs == null || rhs == null) {
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,799,this.setEquals(false);
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,800,return this;
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,802,if (lhs.length != rhs.length) {
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,803,this.setEquals(false);
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,804,return this;
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,806,for (int i = 0; i < lhs.length && isEquals; ++i) {
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,807,"append(lhs[i], rhs[i]);"
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,809,return this;
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,813,* <p>Returns <code>true</code> if the fields that have been checked
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,814,* are all equal.</p>
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,816,* @return boolean
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,818,public boolean isEquals() {
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,819,return this.isEquals;
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,823,* Sets the <code>isEquals</code> value.
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,825,* @param isEquals The value to set.
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,826,* @since 2.1
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,828,protected void setEquals(boolean isEquals) {
True,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java,829,this.isEquals = isEquals;
True,src/org/mockito/internal/matchers/apachecommons/ReflectionEquals.java,src/org/mockito/internal/matchers/apachecommons/ReflectionEquals.java,2,* Copyright (c) 2007 Mockito contributors
True,src/org/mockito/internal/matchers/apachecommons/ReflectionEquals.java,src/org/mockito/internal/matchers/apachecommons/ReflectionEquals.java,3,* This program is made available under the terms of the MIT License.
True,src/org/mockito/internal/matchers/apachecommons/ReflectionEquals.java,src/org/mockito/internal/matchers/apachecommons/ReflectionEquals.java,5,package org.mockito.internal.matchers.apachecommons;
True,src/org/mockito/internal/matchers/apachecommons/ReflectionEquals.java,src/org/mockito/internal/matchers/apachecommons/ReflectionEquals.java,7,import org.mockito.internal.matchers.ArgumentMatcher;
True,src/org/mockito/internal/matchers/apachecommons/ReflectionEquals.java,src/org/mockito/internal/matchers/apachecommons/ReflectionEquals.java,10,public class ReflectionEquals implements ArgumentMatcher<Object>{
True,src/org/mockito/internal/matchers/apachecommons/ReflectionEquals.java,src/org/mockito/internal/matchers/apachecommons/ReflectionEquals.java,11,private final Object wanted;
True,src/org/mockito/internal/matchers/apachecommons/ReflectionEquals.java,src/org/mockito/internal/matchers/apachecommons/ReflectionEquals.java,13,public ReflectionEquals(Object wanted) {
True,src/org/mockito/internal/matchers/apachecommons/ReflectionEquals.java,src/org/mockito/internal/matchers/apachecommons/ReflectionEquals.java,14,this.wanted = wanted;
True,src/org/mockito/internal/matchers/apachecommons/ReflectionEquals.java,src/org/mockito/internal/matchers/apachecommons/ReflectionEquals.java,17,public boolean matches(Object actual) {
True,src/org/mockito/internal/matchers/apachecommons/ReflectionEquals.java,src/org/mockito/internal/matchers/apachecommons/ReflectionEquals.java,18,"return EqualsBuilder.reflectionEquals(wanted, actual);"
True,src/org/mockito/internal/matchers/apachecommons/ReflectionEquals.java,src/org/mockito/internal/matchers/apachecommons/ReflectionEquals.java,21,public void appendTo(StringBuilder buffer) {
True,src/org/mockito/internal/matchers/apachecommons/ReflectionEquals.java,src/org/mockito/internal/matchers/apachecommons/ReflectionEquals.java,22,"buffer.append(""refEq("" + wanted + "")"");"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,2,* Copyright (c) 2007 Mockito contributors
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,3,* This program is made available under the terms of the MIT License.
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,6,"//Class comes from Apache Commons Lang, added some tiny changes"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,9,* Licensed to the Apache Software Foundation (ASF) under one or more
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,10,* contributor license agreements.  See the NOTICE file distributed with
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,11,* this work for additional information regarding copyright ownership.
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,12,"* The ASF licenses this file to You under the Apache License, Version 2.0"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,13,"* (the ""License""); you may not use this file except in compliance with"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,14,* the License.  You may obtain a copy of the License at
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,16,*      http://www.apache.org/licenses/LICENSE-2.0
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,18,"* Unless required by applicable law or agreed to in writing, software"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,19,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,20,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,21,* See the License for the specific language governing permissions and
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,22,* limitations under the License.
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,24,package org.mockito.internal.matchers.apachecommons;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,26,import static org.junit.Assert.*;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,28,import java.math.BigDecimal;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,29,import java.util.Arrays;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,31,import org.junit.Test;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,32,import org.mockito.RequiresValidState;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,35,"* @author <a href=""mailto:sdowney@panix.com"">Steve Downey</a>"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,36,"* @author <a href=""mailto:scolebourne@joda.org"">Stephen Colebourne</a>"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,37,"* @author <a href=""mailto:ggregory@seagullsw.com"">Gary Gregory</a>"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,38,* @author Maarten Coene
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,39,* @version $Id: EqualsBuilderTest.java 611543 2008-01-13 07:00:22Z bayard $
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,41,public class EqualsBuilderTest extends RequiresValidState {
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,43,@Test
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,44,public void testname() throws Exception {
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,48,static class TestObject {
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,49,private int a;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,50,public TestObject() {
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,52,public TestObject(int a) {
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,53,this.a = a;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,55,public boolean equals(Object o) {
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,56,if (o == null) { return false; }
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,57,if (o == this) { return true; }
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,58,if (o.getClass() != getClass()) {
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,59,return false;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,62,TestObject rhs = (TestObject) o;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,63,return (a == rhs.a);
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,65,public int hashCode() {
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,66,return super.hashCode();
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,69,public void setA(int a) {
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,70,this.a = a;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,73,public int getA() {
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,74,return a;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,78,static class TestSubObject extends TestObject {
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,79,private int b;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,80,public TestSubObject() {
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,81,super(0);
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,83,"public TestSubObject(int a, int b) {"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,84,super(a);
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,85,this.b = b;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,87,public boolean equals(Object o) {
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,88,if (o == null) { return false; }
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,89,if (o == this) { return true; }
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,90,if (o.getClass() != getClass()) {
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,91,return false;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,94,TestSubObject rhs = (TestSubObject) o;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,95,return super.equals(o) && (b == rhs.b);
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,97,public int hashCode() {
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,98,return 1;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,101,public void setB(int b) {
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,102,this.b = b;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,105,public int getB() {
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,106,return b;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,110,static class TestEmptySubObject extends TestObject {
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,111,public TestEmptySubObject(int a) {
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,112,super(a);
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,116,"@SuppressWarnings(""unused"")"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,117,static class TestTSubObject extends TestObject {
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,118,private transient int t;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,119,"public TestTSubObject(int a, int t) {"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,120,super(a);
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,121,this.t = t;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,125,"@SuppressWarnings(""unused"")"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,126,static class TestTTSubObject extends TestTSubObject {
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,127,private transient int tt;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,128,"public TestTTSubObject(int a, int t, int tt) {"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,129,"super(a, t);"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,130,this.tt = tt;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,134,"@SuppressWarnings(""unused"")"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,135,static class TestTTLeafObject extends TestTTSubObject {
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,136,private int leafValue;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,137,"public TestTTLeafObject(int a, int t, int tt, int leafValue) {"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,138,"super(a, t, tt);"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,139,this.leafValue = leafValue;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,143,static class TestTSubObject2 extends TestObject {
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,144,private transient int t;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,145,"public TestTSubObject2(int a, int t) {"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,146,super(a);
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,148,public int getT() {
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,149,return t;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,151,public void setT(int t) {
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,152,this.t = t;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,156,@Test public void testReflectionEquals() {
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,157,TestObject o1 = new TestObject(4);
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,158,TestObject o2 = new TestObject(5);
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,159,"assertTrue(EqualsBuilder.reflectionEquals(o1, o1));"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,160,"assertTrue(!EqualsBuilder.reflectionEquals(o1, o2));"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,161,o2.setA(4);
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,162,"assertTrue(EqualsBuilder.reflectionEquals(o1, o2));"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,164,"assertTrue(!EqualsBuilder.reflectionEquals(o1, this));"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,166,"assertTrue(!EqualsBuilder.reflectionEquals(o1, null));"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,167,"assertTrue(!EqualsBuilder.reflectionEquals(null, o2));"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,168,"assertTrue(EqualsBuilder.reflectionEquals((Object) null, (Object) null));"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,171,@Test public void testReflectionHierarchyEquals() {
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,172,testReflectionHierarchyEquals(false);
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,173,testReflectionHierarchyEquals(true);
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,174,// Transients
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,175,"assertTrue(EqualsBuilder.reflectionEquals(new TestTTLeafObject(1, 2, 3, 4), new TestTTLeafObject(1, 2, 3, 4), true));"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,176,"assertTrue(EqualsBuilder.reflectionEquals(new TestTTLeafObject(1, 2, 3, 4), new TestTTLeafObject(1, 2, 3, 4), false));"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,177,"assertTrue(!EqualsBuilder.reflectionEquals(new TestTTLeafObject(1, 0, 0, 4), new TestTTLeafObject(1, 2, 3, 4), true));"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,178,"assertTrue(!EqualsBuilder.reflectionEquals(new TestTTLeafObject(1, 2, 3, 4), new TestTTLeafObject(1, 2, 3, 0), true));"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,179,"assertTrue(!EqualsBuilder.reflectionEquals(new TestTTLeafObject(0, 2, 3, 4), new TestTTLeafObject(1, 2, 3, 4), true));"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,182,private void testReflectionHierarchyEquals(boolean testTransients) {
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,183,TestObject to1 = new TestObject(4);
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,184,TestObject to1Bis = new TestObject(4);
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,185,TestObject to1Ter = new TestObject(4);
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,186,TestObject to2 = new TestObject(5);
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,187,TestEmptySubObject teso = new TestEmptySubObject(4);
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,188,"TestTSubObject ttso = new TestTSubObject(4, 1);"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,189,"TestTTSubObject tttso = new TestTTSubObject(4, 1, 2);"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,190,"TestTTLeafObject ttlo = new TestTTLeafObject(4, 1, 2, 3);"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,191,"TestSubObject tso1 = new TestSubObject(1, 4);"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,192,"TestSubObject tso1bis = new TestSubObject(1, 4);"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,193,"TestSubObject tso1ter = new TestSubObject(1, 4);"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,194,"TestSubObject tso2 = new TestSubObject(2, 5);"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,196,"testReflectionEqualsEquivalenceRelationship(to1, to1Bis, to1Ter, to2, new TestObject(), testTransients);"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,197,"testReflectionEqualsEquivalenceRelationship(tso1, tso1bis, tso1ter, tso2, new TestSubObject(), testTransients);"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,199,// More sanity checks:
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,201,// same values
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,202,"assertTrue(EqualsBuilder.reflectionEquals(ttlo, ttlo, testTransients));"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,203,"assertTrue(EqualsBuilder.reflectionEquals(new TestSubObject(1, 10), new TestSubObject(1, 10), testTransients));"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,204,"// same super values, diff sub values"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,205,"assertTrue(!EqualsBuilder.reflectionEquals(new TestSubObject(1, 10), new TestSubObject(1, 11), testTransients));"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,206,"assertTrue(!EqualsBuilder.reflectionEquals(new TestSubObject(1, 11), new TestSubObject(1, 10), testTransients));"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,207,"// diff super values, same sub values"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,208,"assertTrue(!EqualsBuilder.reflectionEquals(new TestSubObject(0, 10), new TestSubObject(1, 10), testTransients));"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,209,"assertTrue(!EqualsBuilder.reflectionEquals(new TestSubObject(1, 10), new TestSubObject(0, 10), testTransients));"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,211,// mix super and sub types: equals
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,212,"assertTrue(EqualsBuilder.reflectionEquals(to1, teso, testTransients));"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,213,"assertTrue(EqualsBuilder.reflectionEquals(teso, to1, testTransients));"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,215,"assertTrue(EqualsBuilder.reflectionEquals(to1, ttso, false)); // Force testTransients = false for this assert"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,216,"assertTrue(EqualsBuilder.reflectionEquals(ttso, to1, false)); // Force testTransients = false for this assert"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,218,"assertTrue(EqualsBuilder.reflectionEquals(to1, tttso, false)); // Force testTransients = false for this assert"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,219,"assertTrue(EqualsBuilder.reflectionEquals(tttso, to1, false)); // Force testTransients = false for this assert"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,221,"assertTrue(EqualsBuilder.reflectionEquals(ttso, tttso, false)); // Force testTransients = false for this assert"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,222,"assertTrue(EqualsBuilder.reflectionEquals(tttso, ttso, false)); // Force testTransients = false for this assert"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,224,// mix super and sub types: NOT equals
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,225,"assertTrue(!EqualsBuilder.reflectionEquals(new TestObject(0), new TestEmptySubObject(1), testTransients));"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,226,"assertTrue(!EqualsBuilder.reflectionEquals(new TestEmptySubObject(1), new TestObject(0), testTransients));"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,228,"assertTrue(!EqualsBuilder.reflectionEquals(new TestObject(0), new TestTSubObject(1, 1), testTransients));"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,229,"assertTrue(!EqualsBuilder.reflectionEquals(new TestTSubObject(1, 1), new TestObject(0), testTransients));"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,231,"assertTrue(!EqualsBuilder.reflectionEquals(new TestObject(1), new TestSubObject(0, 10), testTransients));"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,232,"assertTrue(!EqualsBuilder.reflectionEquals(new TestSubObject(0, 10), new TestObject(1), testTransients));"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,234,"assertTrue(!EqualsBuilder.reflectionEquals(to1, ttlo));"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,235,"assertTrue(!EqualsBuilder.reflectionEquals(tso1, this));"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,239,"* Equivalence relationship tests inspired by ""Effective Java"":"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,240,* <ul>
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,241,* <li>reflection</li>
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,242,* <li>symmetry</li>
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,243,* <li>transitive</li>
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,244,* <li>consistency</li>
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,245,* <li>non-null reference</li>
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,246,* </ul>
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,247,* @param to a TestObject
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,248,"* @param toBis a TestObject, equal to to and toTer"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,249,"* @param toTer Left hand side, equal to to and toBis"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,250,* @param to2 a different TestObject
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,251,* @param oToChange a TestObject that will be changed
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,253,private void testReflectionEqualsEquivalenceRelationship(
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,254,"TestObject to,"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,255,"TestObject toBis,"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,256,"TestObject toTer,"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,257,"TestObject to2,"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,258,"TestObject oToChange,"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,259,boolean testTransients) {
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,261,// reflection test
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,262,"assertTrue(EqualsBuilder.reflectionEquals(to, to, testTransients));"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,263,"assertTrue(EqualsBuilder.reflectionEquals(to2, to2, testTransients));"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,265,// symmetry test
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,266,"assertTrue(EqualsBuilder.reflectionEquals(to, toBis, testTransients) && EqualsBuilder.reflectionEquals(toBis, to, testTransients));"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,268,// transitive test
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,269,assertTrue(
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,270,"EqualsBuilder.reflectionEquals(to, toBis, testTransients)"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,271,"&& EqualsBuilder.reflectionEquals(toBis, toTer, testTransients)"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,272,"&& EqualsBuilder.reflectionEquals(to, toTer, testTransients));"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,274,// consistency test
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,275,oToChange.setA(to.getA());
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,276,if (oToChange instanceof TestSubObject) {
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,277,((TestSubObject) oToChange).setB(((TestSubObject) to).getB());
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,279,"assertTrue(EqualsBuilder.reflectionEquals(oToChange, to, testTransients));"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,280,"assertTrue(EqualsBuilder.reflectionEquals(oToChange, to, testTransients));"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,281,oToChange.setA(to.getA() + 1);
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,282,if (oToChange instanceof TestSubObject) {
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,283,((TestSubObject) oToChange).setB(((TestSubObject) to).getB() + 1);
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,285,"assertTrue(!EqualsBuilder.reflectionEquals(oToChange, to, testTransients));"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,286,"assertTrue(!EqualsBuilder.reflectionEquals(oToChange, to, testTransients));"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,288,// non-null reference test
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,289,"assertTrue(!EqualsBuilder.reflectionEquals(to, null, testTransients));"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,290,"assertTrue(!EqualsBuilder.reflectionEquals(to2, null, testTransients));"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,291,"assertTrue(!EqualsBuilder.reflectionEquals(null, to, testTransients));"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,292,"assertTrue(!EqualsBuilder.reflectionEquals(null, to2, testTransients));"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,293,"assertTrue(EqualsBuilder.reflectionEquals((Object) null, (Object) null, testTransients));"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,296,@Test public void testSuper() {
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,297,TestObject o1 = new TestObject(4);
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,298,TestObject o2 = new TestObject(5);
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,299,"assertEquals(true, new EqualsBuilder().appendSuper(true).append(o1, o1).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,300,"assertEquals(false, new EqualsBuilder().appendSuper(false).append(o1, o1).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,301,"assertEquals(false, new EqualsBuilder().appendSuper(true).append(o1, o2).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,302,"assertEquals(false, new EqualsBuilder().appendSuper(false).append(o1, o2).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,305,@Test public void testObject() {
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,306,TestObject o1 = new TestObject(4);
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,307,TestObject o2 = new TestObject(5);
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,308,"assertTrue(new EqualsBuilder().append(o1, o1).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,309,"assertTrue(!new EqualsBuilder().append(o1, o2).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,310,o2.setA(4);
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,311,"assertTrue(new EqualsBuilder().append(o1, o2).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,313,"assertTrue(!new EqualsBuilder().append(o1, this).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,315,"assertTrue(!new EqualsBuilder().append(o1, null).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,316,"assertTrue(!new EqualsBuilder().append(null, o2).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,317,"assertTrue(new EqualsBuilder().append((Object) null, (Object) null).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,320,@Test public void testLong() {
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,321,long o1 = 1L;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,322,long o2 = 2L;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,323,"assertTrue(new EqualsBuilder().append(o1, o1).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,324,"assertTrue(!new EqualsBuilder().append(o1, o2).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,327,@Test public void testInt() {
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,328,int o1 = 1;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,329,int o2 = 2;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,330,"assertTrue(new EqualsBuilder().append(o1, o1).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,331,"assertTrue(!new EqualsBuilder().append(o1, o2).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,334,@Test public void testShort() {
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,335,short o1 = 1;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,336,short o2 = 2;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,337,"assertTrue(new EqualsBuilder().append(o1, o1).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,338,"assertTrue(!new EqualsBuilder().append(o1, o2).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,341,@Test public void testChar() {
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,342,char o1 = 1;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,343,char o2 = 2;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,344,"assertTrue(new EqualsBuilder().append(o1, o1).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,345,"assertTrue(!new EqualsBuilder().append(o1, o2).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,348,@Test public void testByte() {
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,349,byte o1 = 1;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,350,byte o2 = 2;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,351,"assertTrue(new EqualsBuilder().append(o1, o1).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,352,"assertTrue(!new EqualsBuilder().append(o1, o2).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,355,@Test public void testDouble() {
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,356,double o1 = 1;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,357,double o2 = 2;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,358,"assertTrue(new EqualsBuilder().append(o1, o1).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,359,"assertTrue(!new EqualsBuilder().append(o1, o2).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,360,"assertTrue(!new EqualsBuilder().append(o1, Double.NaN).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,361,"assertTrue(new EqualsBuilder().append(Double.NaN, Double.NaN).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,362,"assertTrue(new EqualsBuilder().append(Double.POSITIVE_INFINITY, Double.POSITIVE_INFINITY).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,365,@Test public void testFloat() {
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,366,float o1 = 1;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,367,float o2 = 2;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,368,"assertTrue(new EqualsBuilder().append(o1, o1).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,369,"assertTrue(!new EqualsBuilder().append(o1, o2).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,370,"assertTrue(!new EqualsBuilder().append(o1, Float.NaN).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,371,"assertTrue(new EqualsBuilder().append(Float.NaN, Float.NaN).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,372,"assertTrue(new EqualsBuilder().append(Float.POSITIVE_INFINITY, Float.POSITIVE_INFINITY).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,375,// https://issues.apache.org/jira/browse/LANG-393
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,376,@Test public void testBigDecimal() {
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,377,"BigDecimal o1 = new BigDecimal(""2.0"");"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,378,"BigDecimal o2 = new BigDecimal(""2.00"");"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,379,"assertTrue(new EqualsBuilder().append(o1, o1).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,380,"assertTrue(new EqualsBuilder().append(o1, o2).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,383,@Test public void testAccessors() {
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,384,EqualsBuilder equalsBuilder = new EqualsBuilder();
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,385,assertTrue(equalsBuilder.isEquals());
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,386,equalsBuilder.setEquals(true);
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,387,assertTrue(equalsBuilder.isEquals());
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,388,equalsBuilder.setEquals(false);
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,389,assertFalse(equalsBuilder.isEquals());
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,392,@Test public void testBoolean() {
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,393,boolean o1 = true;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,394,boolean o2 = false;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,395,"assertTrue(new EqualsBuilder().append(o1, o1).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,396,"assertTrue(!new EqualsBuilder().append(o1, o2).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,399,@Test public void testObjectArray() {
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,400,TestObject[] obj1 = new TestObject[3];
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,401,obj1[0] = new TestObject(4);
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,402,obj1[1] = new TestObject(5);
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,403,obj1[2] = null;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,404,TestObject[] obj2 = new TestObject[3];
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,405,obj2[0] = new TestObject(4);
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,406,obj2[1] = new TestObject(5);
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,407,obj2[2] = null;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,409,"assertTrue(new EqualsBuilder().append(obj1, obj1).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,410,"assertTrue(new EqualsBuilder().append(obj2, obj2).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,411,"assertTrue(new EqualsBuilder().append(obj1, obj2).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,412,obj1[1].setA(6);
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,413,"assertTrue(!new EqualsBuilder().append(obj1, obj2).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,414,obj1[1].setA(5);
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,415,"assertTrue(new EqualsBuilder().append(obj1, obj2).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,416,obj1[2] = obj1[1];
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,417,"assertTrue(!new EqualsBuilder().append(obj1, obj2).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,418,obj1[2] = null;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,419,"assertTrue(new EqualsBuilder().append(obj1, obj2).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,421,obj2 = null;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,422,"assertTrue(!new EqualsBuilder().append(obj1, obj2).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,423,obj1 = null;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,424,"assertTrue(new EqualsBuilder().append(obj1, obj2).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,427,@Test public void testLongArray() {
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,428,long[] obj1 = new long[2];
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,429,obj1[0] = 5L;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,430,obj1[1] = 6L;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,431,long[] obj2 = new long[2];
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,432,obj2[0] = 5L;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,433,obj2[1] = 6L;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,434,"assertTrue(new EqualsBuilder().append(obj1, obj1).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,435,"assertTrue(new EqualsBuilder().append(obj1, obj2).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,436,obj1[1] = 7;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,437,"assertTrue(!new EqualsBuilder().append(obj1, obj2).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,439,obj2 = null;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,440,"assertTrue(!new EqualsBuilder().append(obj1, obj2).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,441,obj1 = null;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,442,"assertTrue(new EqualsBuilder().append(obj1, obj2).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,445,@Test public void testIntArray() {
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,446,int[] obj1 = new int[2];
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,447,obj1[0] = 5;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,448,obj1[1] = 6;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,449,int[] obj2 = new int[2];
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,450,obj2[0] = 5;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,451,obj2[1] = 6;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,452,"assertTrue(new EqualsBuilder().append(obj1, obj1).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,453,"assertTrue(new EqualsBuilder().append(obj1, obj2).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,454,obj1[1] = 7;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,455,"assertTrue(!new EqualsBuilder().append(obj1, obj2).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,457,obj2 = null;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,458,"assertTrue(!new EqualsBuilder().append(obj1, obj2).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,459,obj1 = null;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,460,"assertTrue(new EqualsBuilder().append(obj1, obj2).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,463,@Test public void testShortArray() {
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,464,short[] obj1 = new short[2];
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,465,obj1[0] = 5;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,466,obj1[1] = 6;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,467,short[] obj2 = new short[2];
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,468,obj2[0] = 5;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,469,obj2[1] = 6;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,470,"assertTrue(new EqualsBuilder().append(obj1, obj1).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,471,"assertTrue(new EqualsBuilder().append(obj1, obj2).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,472,obj1[1] = 7;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,473,"assertTrue(!new EqualsBuilder().append(obj1, obj2).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,475,obj2 = null;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,476,"assertTrue(!new EqualsBuilder().append(obj1, obj2).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,477,obj1 = null;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,478,"assertTrue(new EqualsBuilder().append(obj1, obj2).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,481,@Test public void testCharArray() {
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,482,char[] obj1 = new char[2];
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,483,obj1[0] = 5;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,484,obj1[1] = 6;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,485,char[] obj2 = new char[2];
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,486,obj2[0] = 5;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,487,obj2[1] = 6;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,488,"assertTrue(new EqualsBuilder().append(obj1, obj1).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,489,"assertTrue(new EqualsBuilder().append(obj1, obj2).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,490,obj1[1] = 7;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,491,"assertTrue(!new EqualsBuilder().append(obj1, obj2).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,493,obj2 = null;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,494,"assertTrue(!new EqualsBuilder().append(obj1, obj2).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,495,obj1 = null;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,496,"assertTrue(new EqualsBuilder().append(obj1, obj2).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,499,@Test public void testByteArray() {
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,500,byte[] obj1 = new byte[2];
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,501,obj1[0] = 5;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,502,obj1[1] = 6;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,503,byte[] obj2 = new byte[2];
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,504,obj2[0] = 5;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,505,obj2[1] = 6;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,506,"assertTrue(new EqualsBuilder().append(obj1, obj1).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,507,"assertTrue(new EqualsBuilder().append(obj1, obj2).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,508,obj1[1] = 7;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,509,"assertTrue(!new EqualsBuilder().append(obj1, obj2).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,511,obj2 = null;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,512,"assertTrue(!new EqualsBuilder().append(obj1, obj2).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,513,obj1 = null;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,514,"assertTrue(new EqualsBuilder().append(obj1, obj2).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,517,@Test public void testDoubleArray() {
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,518,double[] obj1 = new double[2];
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,519,obj1[0] = 5;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,520,obj1[1] = 6;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,521,double[] obj2 = new double[2];
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,522,obj2[0] = 5;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,523,obj2[1] = 6;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,524,"assertTrue(new EqualsBuilder().append(obj1, obj1).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,525,"assertTrue(new EqualsBuilder().append(obj1, obj2).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,526,obj1[1] = 7;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,527,"assertTrue(!new EqualsBuilder().append(obj1, obj2).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,529,obj2 = null;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,530,"assertTrue(!new EqualsBuilder().append(obj1, obj2).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,531,obj1 = null;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,532,"assertTrue(new EqualsBuilder().append(obj1, obj2).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,535,@Test public void testFloatArray() {
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,536,float[] obj1 = new float[2];
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,537,obj1[0] = 5;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,538,obj1[1] = 6;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,539,float[] obj2 = new float[2];
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,540,obj2[0] = 5;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,541,obj2[1] = 6;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,542,"assertTrue(new EqualsBuilder().append(obj1, obj1).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,543,"assertTrue(new EqualsBuilder().append(obj1, obj2).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,544,obj1[1] = 7;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,545,"assertTrue(!new EqualsBuilder().append(obj1, obj2).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,547,obj2 = null;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,548,"assertTrue(!new EqualsBuilder().append(obj1, obj2).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,549,obj1 = null;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,550,"assertTrue(new EqualsBuilder().append(obj1, obj2).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,553,@Test public void testBooleanArray() {
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,554,boolean[] obj1 = new boolean[2];
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,555,obj1[0] = true;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,556,obj1[1] = false;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,557,boolean[] obj2 = new boolean[2];
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,558,obj2[0] = true;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,559,obj2[1] = false;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,560,"assertTrue(new EqualsBuilder().append(obj1, obj1).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,561,"assertTrue(new EqualsBuilder().append(obj1, obj2).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,562,obj1[1] = true;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,563,"assertTrue(!new EqualsBuilder().append(obj1, obj2).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,565,obj2 = null;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,566,"assertTrue(!new EqualsBuilder().append(obj1, obj2).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,567,obj1 = null;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,568,"assertTrue(new EqualsBuilder().append(obj1, obj2).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,571,@Test public void testMultiLongArray() {
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,572,long[][] array1 = new long[2][2];
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,573,long[][] array2 = new long[2][2];
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,574,for (int i = 0; i < array1.length; ++i) {
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,575,for (int j = 0; j < array1[0].length; j++) {
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,576,array1[i][j] = (i + 1) * (j + 1);
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,577,array2[i][j] = (i + 1) * (j + 1);
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,580,"assertTrue(new EqualsBuilder().append(array1, array1).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,581,"assertTrue(new EqualsBuilder().append(array1, array2).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,582,array1[1][1] = 0;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,583,"assertTrue(!new EqualsBuilder().append(array1, array2).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,586,@Test public void testMultiIntArray() {
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,587,int[][] array1 = new int[2][2];
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,588,int[][] array2 = new int[2][2];
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,589,for (int i = 0; i < array1.length; ++i) {
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,590,for (int j = 0; j < array1[0].length; j++) {
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,591,array1[i][j] = (i + 1) * (j + 1);
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,592,array2[i][j] = (i + 1) * (j + 1);
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,595,"assertTrue(new EqualsBuilder().append(array1, array1).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,596,"assertTrue(new EqualsBuilder().append(array1, array2).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,597,array1[1][1] = 0;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,598,"assertTrue(!new EqualsBuilder().append(array1, array2).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,601,@Test public void testMultiShortArray() {
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,602,short[][] array1 = new short[2][2];
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,603,short[][] array2 = new short[2][2];
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,604,for (short i = 0; i < array1.length; ++i) {
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,605,for (short j = 0; j < array1[0].length; j++) {
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,606,array1[i][j] = i;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,607,array2[i][j] = i;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,610,"assertTrue(new EqualsBuilder().append(array1, array1).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,611,"assertTrue(new EqualsBuilder().append(array1, array2).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,612,array1[1][1] = 0;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,613,"assertTrue(!new EqualsBuilder().append(array1, array2).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,616,@Test public void testMultiCharArray() {
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,617,char[][] array1 = new char[2][2];
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,618,char[][] array2 = new char[2][2];
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,619,for (char i = 0; i < array1.length; ++i) {
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,620,for (char j = 0; j < array1[0].length; j++) {
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,621,array1[i][j] = i;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,622,array2[i][j] = i;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,625,"assertTrue(new EqualsBuilder().append(array1, array1).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,626,"assertTrue(new EqualsBuilder().append(array1, array2).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,627,array1[1][1] = 0;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,628,"assertTrue(!new EqualsBuilder().append(array1, array2).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,631,@Test public void testMultiByteArray() {
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,632,byte[][] array1 = new byte[2][2];
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,633,byte[][] array2 = new byte[2][2];
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,634,for (byte i = 0; i < array1.length; ++i) {
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,635,for (byte j = 0; j < array1[0].length; j++) {
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,636,array1[i][j] = i;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,637,array2[i][j] = i;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,640,"assertTrue(new EqualsBuilder().append(array1, array1).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,641,"assertTrue(new EqualsBuilder().append(array1, array2).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,642,array1[1][1] = 0;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,643,"assertTrue(!new EqualsBuilder().append(array1, array2).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,645,@Test public void testMultiFloatArray() {
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,646,float[][] array1 = new float[2][2];
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,647,float[][] array2 = new float[2][2];
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,648,for (int i = 0; i < array1.length; ++i) {
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,649,for (int j = 0; j < array1[0].length; j++) {
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,650,array1[i][j] = (i + 1) * (j + 1);
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,651,array2[i][j] = (i + 1) * (j + 1);
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,654,"assertTrue(new EqualsBuilder().append(array1, array1).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,655,"assertTrue(new EqualsBuilder().append(array1, array2).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,656,array1[1][1] = 0;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,657,"assertTrue(!new EqualsBuilder().append(array1, array2).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,660,@Test public void testMultiDoubleArray() {
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,661,double[][] array1 = new double[2][2];
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,662,double[][] array2 = new double[2][2];
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,663,for (int i = 0; i < array1.length; ++i) {
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,664,for (int j = 0; j < array1[0].length; j++) {
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,665,array1[i][j] = (i + 1) * (j + 1);
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,666,array2[i][j] = (i + 1) * (j + 1);
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,669,"assertTrue(new EqualsBuilder().append(array1, array1).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,670,"assertTrue(new EqualsBuilder().append(array1, array2).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,671,array1[1][1] = 0;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,672,"assertTrue(!new EqualsBuilder().append(array1, array2).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,675,@Test public void testMultiBooleanArray() {
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,676,boolean[][] array1 = new boolean[2][2];
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,677,boolean[][] array2 = new boolean[2][2];
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,678,for (int i = 0; i < array1.length; ++i) {
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,679,for (int j = 0; j < array1[0].length; j++) {
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,680,array1[i][j] = (i == 1) || (j == 1);
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,681,array2[i][j] = (i == 1) || (j == 1);
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,684,"assertTrue(new EqualsBuilder().append(array1, array1).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,685,"assertTrue(new EqualsBuilder().append(array1, array2).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,686,array1[1][1] = false;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,687,"assertTrue(!new EqualsBuilder().append(array1, array2).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,689,// compare 1 dim to 2.
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,690,"boolean[] array3 = new boolean[]{true, true};"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,691,"assertFalse(new EqualsBuilder().append(array1, array3).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,692,"assertFalse(new EqualsBuilder().append(array3, array1).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,693,"assertFalse(new EqualsBuilder().append(array2, array3).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,694,"assertFalse(new EqualsBuilder().append(array3, array2).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,697,@Test public void testRaggedArray() {
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,698,long[][] array1 = new long[2][];
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,699,long[][] array2 = new long[2][];
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,700,for (int i = 0; i < array1.length; ++i) {
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,701,array1[i] = new long[2];
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,702,array2[i] = new long[2];
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,703,for (int j = 0; j < array1[i].length; ++j) {
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,704,array1[i][j] = (i + 1) * (j + 1);
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,705,array2[i][j] = (i + 1) * (j + 1);
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,708,"assertTrue(new EqualsBuilder().append(array1, array1).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,709,"assertTrue(new EqualsBuilder().append(array1, array2).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,710,array1[1][1] = 0;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,711,"assertTrue(!new EqualsBuilder().append(array1, array2).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,714,@Test public void testMixedArray() {
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,715,Object[] array1 = new Object[2];
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,716,Object[] array2 = new Object[2];
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,717,for (int i = 0; i < array1.length; ++i) {
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,718,array1[i] = new long[2];
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,719,array2[i] = new long[2];
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,720,for (int j = 0; j < 2; ++j) {
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,721,((long[]) array1[i])[j] = (i + 1) * (j + 1);
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,722,((long[]) array2[i])[j] = (i + 1) * (j + 1);
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,725,"assertTrue(new EqualsBuilder().append(array1, array1).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,726,"assertTrue(new EqualsBuilder().append(array1, array2).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,727,((long[]) array1[1])[1] = 0;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,728,"assertTrue(!new EqualsBuilder().append(array1, array2).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,731,@Test public void testObjectArrayHiddenByObject() {
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,732,TestObject[] array1 = new TestObject[2];
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,733,array1[0] = new TestObject(4);
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,734,array1[1] = new TestObject(5);
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,735,TestObject[] array2 = new TestObject[2];
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,736,array2[0] = new TestObject(4);
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,737,array2[1] = new TestObject(5);
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,738,Object obj1 = array1;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,739,Object obj2 = array2;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,740,"assertTrue(new EqualsBuilder().append(obj1, obj1).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,741,"assertTrue(new EqualsBuilder().append(obj1, array1).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,742,"assertTrue(new EqualsBuilder().append(obj1, obj2).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,743,"assertTrue(new EqualsBuilder().append(obj1, array2).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,744,array1[1].setA(6);
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,745,"assertTrue(!new EqualsBuilder().append(obj1, obj2).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,748,@Test public void testLongArrayHiddenByObject() {
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,749,long[] array1 = new long[2];
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,750,array1[0] = 5L;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,751,array1[1] = 6L;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,752,long[] array2 = new long[2];
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,753,array2[0] = 5L;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,754,array2[1] = 6L;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,755,Object obj1 = array1;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,756,Object obj2 = array2;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,757,"assertTrue(new EqualsBuilder().append(obj1, obj1).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,758,"assertTrue(new EqualsBuilder().append(obj1, array1).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,759,"assertTrue(new EqualsBuilder().append(obj1, obj2).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,760,"assertTrue(new EqualsBuilder().append(obj1, array2).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,761,array1[1] = 7;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,762,"assertTrue(!new EqualsBuilder().append(obj1, obj2).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,765,@Test public void testIntArrayHiddenByObject() {
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,766,int[] array1 = new int[2];
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,767,array1[0] = 5;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,768,array1[1] = 6;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,769,int[] array2 = new int[2];
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,770,array2[0] = 5;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,771,array2[1] = 6;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,772,Object obj1 = array1;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,773,Object obj2 = array2;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,774,"assertTrue(new EqualsBuilder().append(obj1, obj1).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,775,"assertTrue(new EqualsBuilder().append(obj1, array1).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,776,"assertTrue(new EqualsBuilder().append(obj1, obj2).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,777,"assertTrue(new EqualsBuilder().append(obj1, array2).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,778,array1[1] = 7;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,779,"assertTrue(!new EqualsBuilder().append(obj1, obj2).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,782,@Test public void testShortArrayHiddenByObject() {
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,783,short[] array1 = new short[2];
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,784,array1[0] = 5;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,785,array1[1] = 6;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,786,short[] array2 = new short[2];
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,787,array2[0] = 5;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,788,array2[1] = 6;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,789,Object obj1 = array1;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,790,Object obj2 = array2;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,791,"assertTrue(new EqualsBuilder().append(obj1, obj1).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,792,"assertTrue(new EqualsBuilder().append(obj1, array1).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,793,"assertTrue(new EqualsBuilder().append(obj1, obj2).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,794,"assertTrue(new EqualsBuilder().append(obj1, array2).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,795,array1[1] = 7;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,796,"assertTrue(!new EqualsBuilder().append(obj1, obj2).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,799,@Test public void testCharArrayHiddenByObject() {
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,800,char[] array1 = new char[2];
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,801,array1[0] = 5;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,802,array1[1] = 6;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,803,char[] array2 = new char[2];
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,804,array2[0] = 5;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,805,array2[1] = 6;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,806,Object obj1 = array1;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,807,Object obj2 = array2;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,808,"assertTrue(new EqualsBuilder().append(obj1, obj1).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,809,"assertTrue(new EqualsBuilder().append(obj1, array1).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,810,"assertTrue(new EqualsBuilder().append(obj1, obj2).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,811,"assertTrue(new EqualsBuilder().append(obj1, array2).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,812,array1[1] = 7;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,813,"assertTrue(!new EqualsBuilder().append(obj1, obj2).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,816,@Test public void testByteArrayHiddenByObject() {
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,817,byte[] array1 = new byte[2];
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,818,array1[0] = 5;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,819,array1[1] = 6;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,820,byte[] array2 = new byte[2];
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,821,array2[0] = 5;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,822,array2[1] = 6;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,823,Object obj1 = array1;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,824,Object obj2 = array2;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,825,"assertTrue(new EqualsBuilder().append(obj1, obj1).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,826,"assertTrue(new EqualsBuilder().append(obj1, array1).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,827,"assertTrue(new EqualsBuilder().append(obj1, obj2).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,828,"assertTrue(new EqualsBuilder().append(obj1, array2).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,829,array1[1] = 7;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,830,"assertTrue(!new EqualsBuilder().append(obj1, obj2).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,833,@Test public void testDoubleArrayHiddenByObject() {
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,834,double[] array1 = new double[2];
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,835,array1[0] = 5;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,836,array1[1] = 6;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,837,double[] array2 = new double[2];
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,838,array2[0] = 5;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,839,array2[1] = 6;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,840,Object obj1 = array1;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,841,Object obj2 = array2;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,842,"assertTrue(new EqualsBuilder().append(obj1, obj1).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,843,"assertTrue(new EqualsBuilder().append(obj1, array1).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,844,"assertTrue(new EqualsBuilder().append(obj1, obj2).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,845,"assertTrue(new EqualsBuilder().append(obj1, array2).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,846,array1[1] = 7;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,847,"assertTrue(!new EqualsBuilder().append(obj1, obj2).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,850,@Test public void testFloatArrayHiddenByObject() {
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,851,float[] array1 = new float[2];
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,852,array1[0] = 5;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,853,array1[1] = 6;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,854,float[] array2 = new float[2];
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,855,array2[0] = 5;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,856,array2[1] = 6;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,857,Object obj1 = array1;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,858,Object obj2 = array2;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,859,"assertTrue(new EqualsBuilder().append(obj1, obj1).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,860,"assertTrue(new EqualsBuilder().append(obj1, array1).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,861,"assertTrue(new EqualsBuilder().append(obj1, obj2).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,862,"assertTrue(new EqualsBuilder().append(obj1, array2).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,863,array1[1] = 7;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,864,"assertTrue(!new EqualsBuilder().append(obj1, obj2).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,867,@Test public void testBooleanArrayHiddenByObject() {
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,868,boolean[] array1 = new boolean[2];
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,869,array1[0] = true;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,870,array1[1] = false;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,871,boolean[] array2 = new boolean[2];
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,872,array2[0] = true;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,873,array2[1] = false;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,874,Object obj1 = array1;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,875,Object obj2 = array2;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,876,"assertTrue(new EqualsBuilder().append(obj1, obj1).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,877,"assertTrue(new EqualsBuilder().append(obj1, array1).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,878,"assertTrue(new EqualsBuilder().append(obj1, obj2).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,879,"assertTrue(new EqualsBuilder().append(obj1, array2).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,880,array1[1] = true;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,881,"assertTrue(!new EqualsBuilder().append(obj1, obj2).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,884,public static class TestACanEqualB {
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,885,private int a;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,887,public TestACanEqualB(int a) {
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,888,this.a = a;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,891,public boolean equals(Object o) {
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,892,if (o == this) {
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,893,return true;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,895,if (o instanceof TestACanEqualB) {
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,896,return this.a == ((TestACanEqualB) o).getA();
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,898,if (o instanceof TestBCanEqualA) {
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,899,return this.a == ((TestBCanEqualA) o).getB();
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,901,return false;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,903,public int hashCode() {
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,904,return 1;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,907,public int getA() {
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,908,return this.a;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,912,public static class TestBCanEqualA {
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,913,private int b;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,915,public TestBCanEqualA(int b) {
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,916,this.b = b;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,919,public boolean equals(Object o) {
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,920,if (o == this) {
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,921,return true;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,923,if (o instanceof TestACanEqualB) {
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,924,return this.b == ((TestACanEqualB) o).getA();
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,926,if (o instanceof TestBCanEqualA) {
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,927,return this.b == ((TestBCanEqualA) o).getB();
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,929,return false;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,931,public int hashCode() {
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,932,return 1;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,935,public int getB() {
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,936,return this.b;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,941,"* Tests two instances of classes that can be equal and that are not ""related"". The two classes are not subclasses"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,942,* of each other and do not share a parent aside from Object.
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,943,* See http://issues.apache.org/bugzilla/show_bug.cgi?id=33069
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,945,@Test public void testUnrelatedClasses() {
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,946,Object[] x = new Object[]{new TestACanEqualB(1)};
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,947,Object[] y = new Object[]{new TestBCanEqualA(1)};
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,949,// sanity checks:
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,950,"assertTrue(Arrays.equals(x, x));"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,951,"assertTrue(Arrays.equals(y, y));"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,952,"assertTrue(Arrays.equals(x, y));"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,953,"assertTrue(Arrays.equals(y, x));"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,954,// real tests:
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,955,assertTrue(x[0].equals(x[0]));
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,956,assertTrue(y[0].equals(y[0]));
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,957,assertTrue(x[0].equals(y[0]));
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,958,assertTrue(y[0].equals(x[0]));
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,959,"assertTrue(new EqualsBuilder().append(x, x).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,960,"assertTrue(new EqualsBuilder().append(y, y).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,961,"assertTrue(new EqualsBuilder().append(x, y).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,962,"assertTrue(new EqualsBuilder().append(y, x).isEquals());"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,966,* Test from http://issues.apache.org/bugzilla/show_bug.cgi?id=33067
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,968,@Test public void testNpeForNullElement() {
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,969,"Object[] x1 = new Object[] { new Integer(1), null, new Integer(3) };"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,970,"Object[] x2 = new Object[] { new Integer(1), new Integer(2), new Integer(3) };"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,972,// causes an NPE in 2.0 according to:
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,973,// http://issues.apache.org/bugzilla/show_bug.cgi?id=33067
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,974,"new EqualsBuilder().append(x1, x2);"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,977,@Test public void testReflectionEqualsExcludeFields() throws Exception {
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,978,"TestObjectWithMultipleFields x1 = new TestObjectWithMultipleFields(1, 2, 3);"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,979,"TestObjectWithMultipleFields x2 = new TestObjectWithMultipleFields(1, 3, 4);"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,981,// not equal when including all fields
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,982,"assertTrue(!EqualsBuilder.reflectionEquals(x1, x2));"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,984,"// doesn't barf on null, empty array, or non-existent field, but still tests as not equal"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,985,"assertTrue(!EqualsBuilder.reflectionEquals(x1, x2, (String[]) null));"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,986,"assertTrue(!EqualsBuilder.reflectionEquals(x1, x2, new String[] {}));"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,987,"assertTrue(!EqualsBuilder.reflectionEquals(x1, x2, new String[] {""xxx""}));"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,989,// not equal if only one of the differing fields excluded
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,990,"assertTrue(!EqualsBuilder.reflectionEquals(x1, x2, new String[] {""two""}));"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,991,"assertTrue(!EqualsBuilder.reflectionEquals(x1, x2, new String[] {""three""}));"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,993,// equal if both differing fields excluded
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,994,"assertTrue(EqualsBuilder.reflectionEquals(x1, x2, new String[] {""two"", ""three""}));"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,996,// still equal as long as both differing fields are among excluded
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,997,"assertTrue(EqualsBuilder.reflectionEquals(x1, x2, new String[] {""one"", ""two"", ""three""}));"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,998,"assertTrue(EqualsBuilder.reflectionEquals(x1, x2, new String[] {""one"", ""two"", ""three"", ""xxx""}));"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,1001,"@SuppressWarnings(""unused"")"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,1002,static class TestObjectWithMultipleFields {
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,1003,private TestObject one;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,1004,private TestObject two;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,1005,private TestObject three;
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,1007,"public TestObjectWithMultipleFields(int one, int two, int three) {"
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,1008,this.one = new TestObject(one);
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,1009,this.two = new TestObject(two);
True,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,test/org/mockito/internal/matchers/apachecommons/EqualsBuilderTest.java,1010,this.three = new TestObject(three);
True,test/org/mockitousage/ReflectionMatchersTest.java,test/org/mockitousage/ReflectionMatchersTest.java,2,* Copyright (c) 2007 Mockito contributors
True,test/org/mockitousage/ReflectionMatchersTest.java,test/org/mockitousage/ReflectionMatchersTest.java,3,* This program is made available under the terms of the MIT License.
True,test/org/mockitousage/ReflectionMatchersTest.java,test/org/mockitousage/ReflectionMatchersTest.java,5,package org.mockitousage;
True,test/org/mockitousage/ReflectionMatchersTest.java,test/org/mockitousage/ReflectionMatchersTest.java,7,import static org.mockito.Mockito.*;
True,test/org/mockitousage/ReflectionMatchersTest.java,test/org/mockitousage/ReflectionMatchersTest.java,9,import org.junit.Before;
True,test/org/mockitousage/ReflectionMatchersTest.java,test/org/mockitousage/ReflectionMatchersTest.java,10,import org.junit.Test;
True,test/org/mockitousage/ReflectionMatchersTest.java,test/org/mockitousage/ReflectionMatchersTest.java,11,import org.mockito.RequiresValidState;
True,test/org/mockitousage/ReflectionMatchersTest.java,test/org/mockitousage/ReflectionMatchersTest.java,12,import org.mockito.exceptions.verification.InvocationDiffersFromActual;
True,test/org/mockitousage/ReflectionMatchersTest.java,test/org/mockitousage/ReflectionMatchersTest.java,14,"@SuppressWarnings(""all"")"
True,test/org/mockitousage/ReflectionMatchersTest.java,test/org/mockitousage/ReflectionMatchersTest.java,15,public class ReflectionMatchersTest extends RequiresValidState {
True,test/org/mockitousage/ReflectionMatchersTest.java,test/org/mockitousage/ReflectionMatchersTest.java,17,class Parent {
True,test/org/mockitousage/ReflectionMatchersTest.java,test/org/mockitousage/ReflectionMatchersTest.java,18,private int parentField;
True,test/org/mockitousage/ReflectionMatchersTest.java,test/org/mockitousage/ReflectionMatchersTest.java,19,protected String protectedParentField;
True,test/org/mockitousage/ReflectionMatchersTest.java,test/org/mockitousage/ReflectionMatchersTest.java,20,"public Parent(int parentField, String protectedParentField) {"
True,test/org/mockitousage/ReflectionMatchersTest.java,test/org/mockitousage/ReflectionMatchersTest.java,21,this.parentField = parentField;
True,test/org/mockitousage/ReflectionMatchersTest.java,test/org/mockitousage/ReflectionMatchersTest.java,22,this.protectedParentField = protectedParentField;
True,test/org/mockitousage/ReflectionMatchersTest.java,test/org/mockitousage/ReflectionMatchersTest.java,26,class Child extends Parent {
True,test/org/mockitousage/ReflectionMatchersTest.java,test/org/mockitousage/ReflectionMatchersTest.java,27,private int childFieldOne;
True,test/org/mockitousage/ReflectionMatchersTest.java,test/org/mockitousage/ReflectionMatchersTest.java,28,private Object childFieldTwo;
True,test/org/mockitousage/ReflectionMatchersTest.java,test/org/mockitousage/ReflectionMatchersTest.java,29,"public Child(int parentField, String protectedParentField, int childFieldOne, Object childFieldTwo) {"
True,test/org/mockitousage/ReflectionMatchersTest.java,test/org/mockitousage/ReflectionMatchersTest.java,30,"super(parentField, protectedParentField);"
True,test/org/mockitousage/ReflectionMatchersTest.java,test/org/mockitousage/ReflectionMatchersTest.java,31,this.childFieldOne = childFieldOne;
True,test/org/mockitousage/ReflectionMatchersTest.java,test/org/mockitousage/ReflectionMatchersTest.java,32,this.childFieldTwo = childFieldTwo;
True,test/org/mockitousage/ReflectionMatchersTest.java,test/org/mockitousage/ReflectionMatchersTest.java,36,interface MockMe {
True,test/org/mockitousage/ReflectionMatchersTest.java,test/org/mockitousage/ReflectionMatchersTest.java,37,void run(Child child);
True,test/org/mockitousage/ReflectionMatchersTest.java,test/org/mockitousage/ReflectionMatchersTest.java,40,MockMe mock;
True,test/org/mockitousage/ReflectionMatchersTest.java,test/org/mockitousage/ReflectionMatchersTest.java,42,@Before
True,test/org/mockitousage/ReflectionMatchersTest.java,test/org/mockitousage/ReflectionMatchersTest.java,43,public void setup() {
True,test/org/mockitousage/ReflectionMatchersTest.java,test/org/mockitousage/ReflectionMatchersTest.java,44,mock = mock(MockMe.class);
True,test/org/mockitousage/ReflectionMatchersTest.java,test/org/mockitousage/ReflectionMatchersTest.java,46,"Child actual = new Child(1, ""foo"", 2, ""bar"");"
True,test/org/mockitousage/ReflectionMatchersTest.java,test/org/mockitousage/ReflectionMatchersTest.java,47,mock.run(actual);
True,test/org/mockitousage/ReflectionMatchersTest.java,test/org/mockitousage/ReflectionMatchersTest.java,50,@Test
True,test/org/mockitousage/ReflectionMatchersTest.java,test/org/mockitousage/ReflectionMatchersTest.java,51,public void shouldMatchWhenFieldValuesEqual() throws Exception {
True,test/org/mockitousage/ReflectionMatchersTest.java,test/org/mockitousage/ReflectionMatchersTest.java,52,"Child wanted = new Child(1, ""foo"", 2, ""bar"");"
True,test/org/mockitousage/ReflectionMatchersTest.java,test/org/mockitousage/ReflectionMatchersTest.java,53,verify(mock).run(refEq(wanted));
True,test/org/mockitousage/ReflectionMatchersTest.java,test/org/mockitousage/ReflectionMatchersTest.java,56,@Test(expected=InvocationDiffersFromActual.class)
True,test/org/mockitousage/ReflectionMatchersTest.java,test/org/mockitousage/ReflectionMatchersTest.java,57,public void shouldNotMatchWhenFieldValuesDiffer() throws Exception {
True,test/org/mockitousage/ReflectionMatchersTest.java,test/org/mockitousage/ReflectionMatchersTest.java,58,"Child wanted = new Child(1, ""foo"", 2, ""bar XXX"");"
True,test/org/mockitousage/ReflectionMatchersTest.java,test/org/mockitousage/ReflectionMatchersTest.java,59,verify(mock).run(refEq(wanted));
True,test/org/mockitousage/ReflectionMatchersTest.java,test/org/mockitousage/ReflectionMatchersTest.java,62,@Test(expected=InvocationDiffersFromActual.class)
True,test/org/mockitousage/ReflectionMatchersTest.java,test/org/mockitousage/ReflectionMatchersTest.java,63,public void shouldNotMatchAgain() throws Exception {
True,test/org/mockitousage/ReflectionMatchersTest.java,test/org/mockitousage/ReflectionMatchersTest.java,64,"Child wanted = new Child(1, ""foo"", 999, ""bar"");"
True,test/org/mockitousage/ReflectionMatchersTest.java,test/org/mockitousage/ReflectionMatchersTest.java,65,verify(mock).run(refEq(wanted));
True,test/org/mockitousage/ReflectionMatchersTest.java,test/org/mockitousage/ReflectionMatchersTest.java,68,@Test(expected=InvocationDiffersFromActual.class)
True,test/org/mockitousage/ReflectionMatchersTest.java,test/org/mockitousage/ReflectionMatchersTest.java,69,public void shouldNotMatchYetAgain() throws Exception {
True,test/org/mockitousage/ReflectionMatchersTest.java,test/org/mockitousage/ReflectionMatchersTest.java,70,"Child wanted = new Child(1, ""XXXXX"", 2, ""bar"");"
True,test/org/mockitousage/ReflectionMatchersTest.java,test/org/mockitousage/ReflectionMatchersTest.java,71,verify(mock).run(refEq(wanted));
True,test/org/mockitousage/ReflectionMatchersTest.java,test/org/mockitousage/ReflectionMatchersTest.java,74,@Test(expected=InvocationDiffersFromActual.class)
True,test/org/mockitousage/ReflectionMatchersTest.java,test/org/mockitousage/ReflectionMatchersTest.java,75,public void shouldNotMatch() throws Exception {
True,test/org/mockitousage/ReflectionMatchersTest.java,test/org/mockitousage/ReflectionMatchersTest.java,76,"Child wanted = new Child(234234, ""foo"", 2, ""bar"");"
True,test/org/mockitousage/ReflectionMatchersTest.java,test/org/mockitousage/ReflectionMatchersTest.java,77,verify(mock).run(refEq(wanted));
