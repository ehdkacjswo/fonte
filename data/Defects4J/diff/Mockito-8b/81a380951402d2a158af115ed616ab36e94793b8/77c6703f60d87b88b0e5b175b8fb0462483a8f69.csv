is_addition,old_file_path,new_file_path,line_num,content
False,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,33,"ublic void injectMocksOnFields(Set<Field> testClassFields, Set<Object> mocks, Object testClass) {"
True,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,33,"public void injectMocksOnFields(Set<Field> testClassFields, Set<Object> mocks, Object testClass) {"
True,src/org/mockito/internal/configuration/injection/FinalMockCandidateFilter.java,src/org/mockito/internal/configuration/injection/FinalMockCandidateFilter.java,4,import org.mockito.internal.util.reflection.BeanPropertySetter;
False,src/org/mockito/internal/configuration/injection/FinalMockCandidateFilter.java,src/org/mockito/internal/configuration/injection/FinalMockCandidateFilter.java,13, <li>an {@link Injecter} that do nothing if a candidate couldn't be found</li>
False,src/org/mockito/internal/configuration/injection/FinalMockCandidateFilter.java,src/org/mockito/internal/configuration/injection/FinalMockCandidateFilter.java,14, <li>an {@link Injecter} that do will inject the final candidate to the field</li>
True,src/org/mockito/internal/configuration/injection/FinalMockCandidateFilter.java,src/org/mockito/internal/configuration/injection/FinalMockCandidateFilter.java,14,* <li>an {@link OngoingInjecter} that do nothing if a candidate couldn't be found</li>
True,src/org/mockito/internal/configuration/injection/FinalMockCandidateFilter.java,src/org/mockito/internal/configuration/injection/FinalMockCandidateFilter.java,15,* <li>an {@link OngoingInjecter} that will try to inject the candidate trying first the property setter then if not possible try the field access</li>
False,src/org/mockito/internal/configuration/injection/FinalMockCandidateFilter.java,src/org/mockito/internal/configuration/injection/FinalMockCandidateFilter.java,18,"ublic Injecter filterCandidate(final Collection<Object> mocks, final Field field, final Object fieldInstance) {"
True,src/org/mockito/internal/configuration/injection/FinalMockCandidateFilter.java,src/org/mockito/internal/configuration/injection/FinalMockCandidateFilter.java,19,"public OngoingInjecter filterCandidate(final Collection<Object> mocks, final Field field, final Object fieldInstance) {"
False,src/org/mockito/internal/configuration/injection/FinalMockCandidateFilter.java,src/org/mockito/internal/configuration/injection/FinalMockCandidateFilter.java,22,eturn new Injecter() {
True,src/org/mockito/internal/configuration/injection/FinalMockCandidateFilter.java,src/org/mockito/internal/configuration/injection/FinalMockCandidateFilter.java,23,return new OngoingInjecter() {
False,src/org/mockito/internal/configuration/injection/FinalMockCandidateFilter.java,src/org/mockito/internal/configuration/injection/FinalMockCandidateFilter.java,25,"ew FieldSetter(fieldInstance, field).set(matchingMock);"
True,src/org/mockito/internal/configuration/injection/FinalMockCandidateFilter.java,src/org/mockito/internal/configuration/injection/FinalMockCandidateFilter.java,26,"if (!new BeanPropertySetter(fieldInstance, field).set(matchingMock)) {"
True,src/org/mockito/internal/configuration/injection/FinalMockCandidateFilter.java,src/org/mockito/internal/configuration/injection/FinalMockCandidateFilter.java,27,"new FieldSetter(fieldInstance, field).set(matchingMock);"
False,src/org/mockito/internal/configuration/injection/FinalMockCandidateFilter.java,src/org/mockito/internal/configuration/injection/FinalMockCandidateFilter.java,34,eturn new Injecter() {
True,src/org/mockito/internal/configuration/injection/FinalMockCandidateFilter.java,src/org/mockito/internal/configuration/injection/FinalMockCandidateFilter.java,37,return new OngoingInjecter() {
False,src/org/mockito/internal/configuration/injection/Injecter.java,src/org/mockito/internal/configuration/injection/Injecter.java,1,ackage org.mockito.internal.configuration.injection;
False,src/org/mockito/internal/configuration/injection/Injecter.java,src/org/mockito/internal/configuration/injection/Injecter.java,4, Created by IntelliJ IDEA.
False,src/org/mockito/internal/configuration/injection/Injecter.java,src/org/mockito/internal/configuration/injection/Injecter.java,5, User: brice
False,src/org/mockito/internal/configuration/injection/Injecter.java,src/org/mockito/internal/configuration/injection/Injecter.java,6, Date: 23 oct. 2010
False,src/org/mockito/internal/configuration/injection/Injecter.java,src/org/mockito/internal/configuration/injection/Injecter.java,7, Time: 18:01:48
False,src/org/mockito/internal/configuration/injection/Injecter.java,src/org/mockito/internal/configuration/injection/Injecter.java,8, To change this template use File | Settings | File Templates.
False,src/org/mockito/internal/configuration/injection/Injecter.java,src/org/mockito/internal/configuration/injection/Injecter.java,10,ublic interface Injecter {
False,src/org/mockito/internal/configuration/injection/Injecter.java,src/org/mockito/internal/configuration/injection/Injecter.java,12,oolean thenInject();
False,src/org/mockito/internal/configuration/injection/MockCandidateFilter.java,src/org/mockito/internal/configuration/injection/MockCandidateFilter.java,8,njecter filterCandidate(
True,src/org/mockito/internal/configuration/injection/MockCandidateFilter.java,src/org/mockito/internal/configuration/injection/MockCandidateFilter.java,8,OngoingInjecter filterCandidate(
False,src/org/mockito/internal/configuration/injection/NameBasedCandidateFilter.java,src/org/mockito/internal/configuration/injection/NameBasedCandidateFilter.java,18,"ublic Injecter filterCandidate(Collection<Object> mocks, Field field, Object fieldInstance) {"
True,src/org/mockito/internal/configuration/injection/NameBasedCandidateFilter.java,src/org/mockito/internal/configuration/injection/NameBasedCandidateFilter.java,18,"public OngoingInjecter filterCandidate(Collection<Object> mocks, Field field, Object fieldInstance) {"
True,src/org/mockito/internal/configuration/injection/OngoingInjecter.java,src/org/mockito/internal/configuration/injection/OngoingInjecter.java,1,package org.mockito.internal.configuration.injection;
True,src/org/mockito/internal/configuration/injection/OngoingInjecter.java,src/org/mockito/internal/configuration/injection/OngoingInjecter.java,4,* Allow the ongoing injection of a mock candidate.
True,src/org/mockito/internal/configuration/injection/OngoingInjecter.java,src/org/mockito/internal/configuration/injection/OngoingInjecter.java,6,public interface OngoingInjecter {
True,src/org/mockito/internal/configuration/injection/OngoingInjecter.java,src/org/mockito/internal/configuration/injection/OngoingInjecter.java,9,* Inject the mock.
True,src/org/mockito/internal/configuration/injection/OngoingInjecter.java,src/org/mockito/internal/configuration/injection/OngoingInjecter.java,11,* <p>
True,src/org/mockito/internal/configuration/injection/OngoingInjecter.java,src/org/mockito/internal/configuration/injection/OngoingInjecter.java,12,* Please check the actual implementation.
True,src/org/mockito/internal/configuration/injection/OngoingInjecter.java,src/org/mockito/internal/configuration/injection/OngoingInjecter.java,13,* </p>
True,src/org/mockito/internal/configuration/injection/OngoingInjecter.java,src/org/mockito/internal/configuration/injection/OngoingInjecter.java,15,"* @return <code>true</code> if injected, <code>false</code> otherwise."
True,src/org/mockito/internal/configuration/injection/OngoingInjecter.java,src/org/mockito/internal/configuration/injection/OngoingInjecter.java,17,boolean thenInject();
False,src/org/mockito/internal/configuration/injection/TypeBasedCandidateFilter.java,src/org/mockito/internal/configuration/injection/TypeBasedCandidateFilter.java,16,"ublic Injecter filterCandidate(Collection<Object> mocks, Field field, Object fieldInstance) {"
True,src/org/mockito/internal/configuration/injection/TypeBasedCandidateFilter.java,src/org/mockito/internal/configuration/injection/TypeBasedCandidateFilter.java,16,"public OngoingInjecter filterCandidate(Collection<Object> mocks, Field field, Object fieldInstance) {"
True,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,1,package org.mockito.internal.util.reflection;
True,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,3,import java.beans.BeanInfo;
True,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,4,import java.beans.IntrospectionException;
True,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,5,import java.beans.Introspector;
True,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,6,import java.beans.PropertyDescriptor;
True,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,7,import java.lang.reflect.Field;
True,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,8,import java.lang.reflect.InvocationTargetException;
True,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,9,import java.lang.reflect.Method;
True,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,12,* This utility class will call the setter of the property to inject a new value.
True,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,14,public class BeanPropertySetter {
True,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,16,private final Object target;
True,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,17,private boolean reportNoSetterFound;
True,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,18,private final Field field;
True,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,21,* New BeanPropertySetter
True,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,22,* @param target The target on which the setter must be invoked
True,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,23,* @param propertyField The field that should be accessed with the setter
True,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,24,* @param reportNoSetterFound Allow the set method to raise an Exception if the setter cannot be found
True,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,26,"public BeanPropertySetter(final Object target, final Field propertyField, boolean reportNoSetterFound) {"
True,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,27,this.field = propertyField;
True,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,28,this.target = target;
True,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,29,this.reportNoSetterFound = reportNoSetterFound;
True,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,33,* New BeanPropertySetter that don't report failure
True,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,34,* @param target The target on which the setter must be invoked
True,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,35,* @param propertyField The propertyField that must be accessed through a setter
True,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,37,"public BeanPropertySetter(final Object target, final Field propertyField) {"
True,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,38,"this(target, propertyField, false);"
True,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,42,* Set the value to the property represented by this {@link BeanPropertySetter}
True,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,43,* @param value the new value to pass to the property setter
True,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,44,"* @return <code>true</code> if the value has been injected, <code>false</code> otherwise"
True,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,45,"* @throws RuntimeException Can be thrown if the setter threw an exception, if the setter is not accessible"
True,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,46,"*          or, if <code>reportNoSetterFound</code> and setter could not be found."
True,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,48,public boolean set(final Object value) {
True,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,50,AccessibilityChanger changer = new AccessibilityChanger();
True,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,51,Method writeMethod = null;
True,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,52,try {
True,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,53,BeanInfo targetInfo = Introspector.getBeanInfo(target.getClass());
True,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,54,PropertyDescriptor[] propertyDescriptors = targetInfo.getPropertyDescriptors();
True,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,56,for (PropertyDescriptor propertyDescriptor : propertyDescriptors) {
True,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,57,if(propertyNameMatchFieldName(propertyDescriptor)
True,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,58,&& propertyTypeMatchFieldType(propertyDescriptor)) {
True,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,59,writeMethod = propertyDescriptor.getWriteMethod();
True,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,60,if(writeMethod != null) {
True,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,61,changer.enableAccess(writeMethod);
True,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,62,"writeMethod.invoke(target, value);"
True,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,63,return true;
True,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,67,} catch (InvocationTargetException e) {
True,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,68,"throw new RuntimeException(""Problems setting value:["" + value + ""] on object: ["" + target + ""] the setter of property ["" + field.getName() + ""] threw an exception"", e.getTargetException());"
True,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,69,} catch (IllegalAccessException e) {
True,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,70,"throw new RuntimeException(""Problems setting value:["" + value + ""] on object: ["" + target + ""] the setter of property ["" + field.getName() + ""] is not accessible"", e);"
True,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,71,} catch (IntrospectionException e) {
True,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,72,"throw new RuntimeException(""Problems setting value: ["" + value + ""] on object: ["" + target + ""] for property : ["" + field.getName() + ""], cannot introspect "" + target.getClass(), e);"
True,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,73,} finally {
True,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,74,if(writeMethod != null) {
True,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,75,changer.safelyDisableAccess(writeMethod);
True,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,79,reportNoSetterFound();
True,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,80,return false;
True,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,83,private void reportNoSetterFound() {
True,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,84,if(reportNoSetterFound) {
True,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,85,"throw new RuntimeException(""Problems setting value on object: ["" + target + ""] for property : ["" + field.getName() + ""], setter not found"");"
True,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,89,private boolean propertyTypeMatchFieldType(PropertyDescriptor pd) {
True,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,90,return field.getType().equals(pd.getPropertyType());
True,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,93,private boolean propertyNameMatchFieldName(PropertyDescriptor pd) {
True,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,src/org/mockito/internal/util/reflection/BeanPropertySetter.java,94,return field.getName().equals(pd.getName());
True,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,1,package org.mockito.internal.util.reflection;
True,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,3,import org.fest.assertions.Assertions;
True,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,4,import org.junit.Test;
True,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,6,import java.io.File;
True,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,7,import java.io.FileOutputStream;
True,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,8,import java.lang.reflect.Field;
True,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,10,import static org.junit.Assert.*;
True,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,13,public class BeanPropertySetterTest {
True,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,15,@Test
True,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,16,public void shouldUseTheSetterOnTheTargetWithTheFieldType() throws Exception {
True,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,17,SomeBean someBean = new SomeBean();
True,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,18,"Field theField = someBean.getClass().getDeclaredField(""theField"");"
True,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,20,"File valueToInject = new File(""path"");"
True,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,22,"boolean injected = new BeanPropertySetter(someBean, theField, true).set(valueToInject);"
True,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,24,assertTrue(injected);
True,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,25,assertTrue(someBean.setTheFieldWasUsed);
True,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,26,"assertSame(valueToInject, someBean.getTheField());"
True,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,29,@Test
True,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,30,public void shouldNotFailIfBeanHasOnlyASetter() throws Exception {
True,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,31,SomeBeanWithJustASetter someBean = new SomeBeanWithJustASetter();
True,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,32,"Field theField = someBean.getClass().getDeclaredField(""theField"");"
True,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,34,"File valueToInject = new File(""path"");"
True,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,36,"boolean injected = new BeanPropertySetter(someBean, theField, true).set(valueToInject);"
True,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,38,assertTrue(injected);
True,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,39,assertTrue(someBean.setTheFieldWasUsed);
True,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,42,@Test
True,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,43,public void shouldFailIfMatchingSetterCannotBeFoundAndIfReportFailureTrue() throws Exception {
True,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,44,SomeBeanWithNoSetterMatchingFieldType bean = new SomeBeanWithNoSetterMatchingFieldType();
True,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,45,"Field theField = bean.getClass().getDeclaredField(""theField"");"
True,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,47,"File valueToInject = new File(""path"");"
True,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,49,try {
True,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,50,"new BeanPropertySetter(bean, theField, true).set(valueToInject);"
True,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,51,fail();
True,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,52,} catch (Exception e) {
True,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,53,"Assertions.assertThat(e.getMessage()).contains(""setter not found"");"
True,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,57,@Test
True,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,58,public void shouldReturnFalseIfNoSetterFound() throws Exception {
True,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,59,SomeBeanWithJustAGetter bean = new SomeBeanWithJustAGetter();
True,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,60,"Field theField = bean.getClass().getDeclaredField(""theField"");"
True,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,62,"File valueToInject = new File(""path"");"
True,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,64,"boolean injected = new BeanPropertySetter(bean, theField).set(valueToInject);"
True,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,66,assertFalse(injected);
True,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,69,@Test
True,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,70,public void shouldReturnFalseIfNoSetterWasFoundAndIfReportFailureFalse() throws Exception {
True,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,71,SomeBeanWithNoSetterMatchingFieldType bean = new SomeBeanWithNoSetterMatchingFieldType();
True,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,72,"Field theField = bean.getClass().getDeclaredField(""theField"");"
True,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,74,"File valueToInject = new File(""path"");"
True,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,76,"boolean injected = new BeanPropertySetter(bean, theField, false).set(valueToInject);"
True,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,78,assertFalse(injected);
True,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,81,static class SomeBean {
True,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,82,private File theField;
True,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,83,boolean setTheFieldWasUsed;
True,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,85,public void setTheField(final File theField) {
True,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,86,setTheFieldWasUsed = true;
True,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,87,this.theField = theField;
True,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,90,public File getTheField() {
True,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,91,return theField;
True,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,95,static class SomeBeanWithJustASetter {
True,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,96,private File theField;
True,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,97,boolean setTheFieldWasUsed;
True,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,99,public void setTheField(final File theField) {
True,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,100,this.theField = theField;
True,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,101,setTheFieldWasUsed = true;
True,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,104,static class SomeBeanWithJustAGetter {
True,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,105,private File theField;
True,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,107,public File getTheField() {
True,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,108,return theField;
True,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,112,static class SomeBeanWithNoSetterMatchingFieldType {
True,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,113,private File theField;
True,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,114,boolean setTheFieldWasUsed;
True,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,116,public void setTheField(final FileOutputStream somethingElse) {
True,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,test/org/mockito/internal/util/reflection/BeanPropertySetterTest.java,117,setTheFieldWasUsed = true;
True,test/org/mockitousage/bugs/InjectMocksShouldTryPropertySettersFirstBeforeFieldAccessTest.java,test/org/mockitousage/bugs/InjectMocksShouldTryPropertySettersFirstBeforeFieldAccessTest.java,1,package org.mockitousage.bugs;
True,test/org/mockitousage/bugs/InjectMocksShouldTryPropertySettersFirstBeforeFieldAccessTest.java,test/org/mockitousage/bugs/InjectMocksShouldTryPropertySettersFirstBeforeFieldAccessTest.java,3,import org.junit.Test;
True,test/org/mockitousage/bugs/InjectMocksShouldTryPropertySettersFirstBeforeFieldAccessTest.java,test/org/mockitousage/bugs/InjectMocksShouldTryPropertySettersFirstBeforeFieldAccessTest.java,4,import org.junit.runner.RunWith;
True,test/org/mockitousage/bugs/InjectMocksShouldTryPropertySettersFirstBeforeFieldAccessTest.java,test/org/mockitousage/bugs/InjectMocksShouldTryPropertySettersFirstBeforeFieldAccessTest.java,5,import org.mockito.InjectMocks;
True,test/org/mockitousage/bugs/InjectMocksShouldTryPropertySettersFirstBeforeFieldAccessTest.java,test/org/mockitousage/bugs/InjectMocksShouldTryPropertySettersFirstBeforeFieldAccessTest.java,6,import org.mockito.Mock;
True,test/org/mockitousage/bugs/InjectMocksShouldTryPropertySettersFirstBeforeFieldAccessTest.java,test/org/mockitousage/bugs/InjectMocksShouldTryPropertySettersFirstBeforeFieldAccessTest.java,7,import org.mockito.runners.MockitoJUnitRunner;
True,test/org/mockitousage/bugs/InjectMocksShouldTryPropertySettersFirstBeforeFieldAccessTest.java,test/org/mockitousage/bugs/InjectMocksShouldTryPropertySettersFirstBeforeFieldAccessTest.java,9,import java.util.List;
True,test/org/mockitousage/bugs/InjectMocksShouldTryPropertySettersFirstBeforeFieldAccessTest.java,test/org/mockitousage/bugs/InjectMocksShouldTryPropertySettersFirstBeforeFieldAccessTest.java,11,import static org.junit.Assert.assertEquals;
True,test/org/mockitousage/bugs/InjectMocksShouldTryPropertySettersFirstBeforeFieldAccessTest.java,test/org/mockitousage/bugs/InjectMocksShouldTryPropertySettersFirstBeforeFieldAccessTest.java,12,import static org.junit.Assert.assertTrue;
True,test/org/mockitousage/bugs/InjectMocksShouldTryPropertySettersFirstBeforeFieldAccessTest.java,test/org/mockitousage/bugs/InjectMocksShouldTryPropertySettersFirstBeforeFieldAccessTest.java,15,* Issue 211 : @InjectMocks should carry out their work by the method (and not by field) if available
True,test/org/mockitousage/bugs/InjectMocksShouldTryPropertySettersFirstBeforeFieldAccessTest.java,test/org/mockitousage/bugs/InjectMocksShouldTryPropertySettersFirstBeforeFieldAccessTest.java,17,@RunWith(MockitoJUnitRunner.class)
True,test/org/mockitousage/bugs/InjectMocksShouldTryPropertySettersFirstBeforeFieldAccessTest.java,test/org/mockitousage/bugs/InjectMocksShouldTryPropertySettersFirstBeforeFieldAccessTest.java,18,public class InjectMocksShouldTryPropertySettersFirstBeforeFieldAccessTest {
True,test/org/mockitousage/bugs/InjectMocksShouldTryPropertySettersFirstBeforeFieldAccessTest.java,test/org/mockitousage/bugs/InjectMocksShouldTryPropertySettersFirstBeforeFieldAccessTest.java,19,@Mock List<?> fieldAccess;
True,test/org/mockitousage/bugs/InjectMocksShouldTryPropertySettersFirstBeforeFieldAccessTest.java,test/org/mockitousage/bugs/InjectMocksShouldTryPropertySettersFirstBeforeFieldAccessTest.java,20,@Mock List<?> propertySetterAccess;
True,test/org/mockitousage/bugs/InjectMocksShouldTryPropertySettersFirstBeforeFieldAccessTest.java,test/org/mockitousage/bugs/InjectMocksShouldTryPropertySettersFirstBeforeFieldAccessTest.java,21,@InjectMocks BeanAwaitingInjection awaitingInjection;
True,test/org/mockitousage/bugs/InjectMocksShouldTryPropertySettersFirstBeforeFieldAccessTest.java,test/org/mockitousage/bugs/InjectMocksShouldTryPropertySettersFirstBeforeFieldAccessTest.java,23,@Test
True,test/org/mockitousage/bugs/InjectMocksShouldTryPropertySettersFirstBeforeFieldAccessTest.java,test/org/mockitousage/bugs/InjectMocksShouldTryPropertySettersFirstBeforeFieldAccessTest.java,24,public void shouldInjectUsingPropertySetterIfAvailable() {
True,test/org/mockitousage/bugs/InjectMocksShouldTryPropertySettersFirstBeforeFieldAccessTest.java,test/org/mockitousage/bugs/InjectMocksShouldTryPropertySettersFirstBeforeFieldAccessTest.java,25,assertTrue(awaitingInjection.propertySetterUsed);
True,test/org/mockitousage/bugs/InjectMocksShouldTryPropertySettersFirstBeforeFieldAccessTest.java,test/org/mockitousage/bugs/InjectMocksShouldTryPropertySettersFirstBeforeFieldAccessTest.java,28,@Test
True,test/org/mockitousage/bugs/InjectMocksShouldTryPropertySettersFirstBeforeFieldAccessTest.java,test/org/mockitousage/bugs/InjectMocksShouldTryPropertySettersFirstBeforeFieldAccessTest.java,29,public void shouldInjectFieldIfNoSetter() {
True,test/org/mockitousage/bugs/InjectMocksShouldTryPropertySettersFirstBeforeFieldAccessTest.java,test/org/mockitousage/bugs/InjectMocksShouldTryPropertySettersFirstBeforeFieldAccessTest.java,30,"assertEquals(fieldAccess, awaitingInjection.fieldAccess);"
True,test/org/mockitousage/bugs/InjectMocksShouldTryPropertySettersFirstBeforeFieldAccessTest.java,test/org/mockitousage/bugs/InjectMocksShouldTryPropertySettersFirstBeforeFieldAccessTest.java,33,static class BeanAwaitingInjection {
True,test/org/mockitousage/bugs/InjectMocksShouldTryPropertySettersFirstBeforeFieldAccessTest.java,test/org/mockitousage/bugs/InjectMocksShouldTryPropertySettersFirstBeforeFieldAccessTest.java,34,List<?> fieldAccess;
True,test/org/mockitousage/bugs/InjectMocksShouldTryPropertySettersFirstBeforeFieldAccessTest.java,test/org/mockitousage/bugs/InjectMocksShouldTryPropertySettersFirstBeforeFieldAccessTest.java,35,List<?> propertySetterAccess;
True,test/org/mockitousage/bugs/InjectMocksShouldTryPropertySettersFirstBeforeFieldAccessTest.java,test/org/mockitousage/bugs/InjectMocksShouldTryPropertySettersFirstBeforeFieldAccessTest.java,36,boolean propertySetterUsed;
True,test/org/mockitousage/bugs/InjectMocksShouldTryPropertySettersFirstBeforeFieldAccessTest.java,test/org/mockitousage/bugs/InjectMocksShouldTryPropertySettersFirstBeforeFieldAccessTest.java,38,public void setPropertySetterAccess(List<?> propertySetterAccess) {
True,test/org/mockitousage/bugs/InjectMocksShouldTryPropertySettersFirstBeforeFieldAccessTest.java,test/org/mockitousage/bugs/InjectMocksShouldTryPropertySettersFirstBeforeFieldAccessTest.java,39,"// don't care if field is set, the setter can do whatever it want."
True,test/org/mockitousage/bugs/InjectMocksShouldTryPropertySettersFirstBeforeFieldAccessTest.java,test/org/mockitousage/bugs/InjectMocksShouldTryPropertySettersFirstBeforeFieldAccessTest.java,40,propertySetterUsed = true;
