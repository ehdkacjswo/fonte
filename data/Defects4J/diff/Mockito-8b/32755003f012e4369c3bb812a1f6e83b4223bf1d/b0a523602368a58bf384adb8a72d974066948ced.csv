is_addition,old_file_path,new_file_path,line_num,content
True,src/org/mockito/InjectMock.java,src/org/mockito/InjectMock.java,1,package org.mockito;
True,src/org/mockito/InjectMock.java,src/org/mockito/InjectMock.java,3,import java.lang.annotation.Documented;
True,src/org/mockito/InjectMock.java,src/org/mockito/InjectMock.java,4,import java.lang.annotation.Retention;
True,src/org/mockito/InjectMock.java,src/org/mockito/InjectMock.java,5,import java.lang.annotation.RetentionPolicy;
True,src/org/mockito/InjectMock.java,src/org/mockito/InjectMock.java,6,import java.lang.annotation.Target;
True,src/org/mockito/InjectMock.java,src/org/mockito/InjectMock.java,8,import static java.lang.annotation.ElementType.FIELD;
True,src/org/mockito/InjectMock.java,src/org/mockito/InjectMock.java,11,* <ul>
True,src/org/mockito/InjectMock.java,src/org/mockito/InjectMock.java,12,* <li>Allows shorthand mock and spy injection.</li>
True,src/org/mockito/InjectMock.java,src/org/mockito/InjectMock.java,13,* <li>Minimizes repetitive mock and spy injection.</li>
True,src/org/mockito/InjectMock.java,src/org/mockito/InjectMock.java,14,* <li>Makes the test class more readable.</li>
True,src/org/mockito/InjectMock.java,src/org/mockito/InjectMock.java,15,* </ul>
True,src/org/mockito/InjectMock.java,src/org/mockito/InjectMock.java,17,* <pre>
True,src/org/mockito/InjectMock.java,src/org/mockito/InjectMock.java,18,*   public class ArticleManagerTest extends SampleBaseTestCase {
True,src/org/mockito/InjectMock.java,src/org/mockito/InjectMock.java,20,*       &#064;Mock private ArticleCalculator calculator;
True,src/org/mockito/InjectMock.java,src/org/mockito/InjectMock.java,21,*       &#064;Mock private ArticleDatabase database;
True,src/org/mockito/InjectMock.java,src/org/mockito/InjectMock.java,22,*       &#064;Spy private UserProvider userProvider = new ConsumerUserProvider();
True,src/org/mockito/InjectMock.java,src/org/mockito/InjectMock.java,24,*       &#064;InjectMock private ArticleManager manager = new ArticleManager();
True,src/org/mockito/InjectMock.java,src/org/mockito/InjectMock.java,26,*       &#064;Test public void shouldDoSomething() {
True,src/org/mockito/InjectMock.java,src/org/mockito/InjectMock.java,27,*           manager.initiateArticle();
True,src/org/mockito/InjectMock.java,src/org/mockito/InjectMock.java,28,*           verify(database).addListener(any(ArticleListener.class));
True,src/org/mockito/InjectMock.java,src/org/mockito/InjectMock.java,32,*   public class SampleBaseTestCase {
True,src/org/mockito/InjectMock.java,src/org/mockito/InjectMock.java,34,*       &#064;Before public void initMocks() {
True,src/org/mockito/InjectMock.java,src/org/mockito/InjectMock.java,35,*           MockitoAnnotations.initMocks(this);
True,src/org/mockito/InjectMock.java,src/org/mockito/InjectMock.java,36,*           MockitoAnnotations.injectMocks(this);
True,src/org/mockito/InjectMock.java,src/org/mockito/InjectMock.java,39,* </pre>
True,src/org/mockito/InjectMock.java,src/org/mockito/InjectMock.java,41,* <b>The field annotated with &#064;InjectMock must be initialized.</b>
True,src/org/mockito/InjectMock.java,src/org/mockito/InjectMock.java,42,* Mocks and spies must also be initialized with <code>MockitoAnnotations.initMocks(this)</code>.
True,src/org/mockito/InjectMock.java,src/org/mockito/InjectMock.java,44,* <b><code>MockitoAnnotations.injectMocks(this)</code></b> method has to called to initialize annotated objects.
True,src/org/mockito/InjectMock.java,src/org/mockito/InjectMock.java,45,* <p>
True,src/org/mockito/InjectMock.java,src/org/mockito/InjectMock.java,46,"* In above example, <code>injectMocks()</code> is called in &#064;Before (JUnit4) method of test's base class."
True,src/org/mockito/InjectMock.java,src/org/mockito/InjectMock.java,47,* For JUnit3 <code>injectMocks()</code> can go to <code>setup()</code> method of a base class.
True,src/org/mockito/InjectMock.java,src/org/mockito/InjectMock.java,48,* You can also put injectMocks() in your JUnit runner (&#064;RunWith) or use built-in runners: {@link org.mockito.runners.MockitoJUnitRunner}
True,src/org/mockito/InjectMock.java,src/org/mockito/InjectMock.java,50,@Documented
True,src/org/mockito/InjectMock.java,src/org/mockito/InjectMock.java,51,@Target( { FIELD })
True,src/org/mockito/InjectMock.java,src/org/mockito/InjectMock.java,52,@Retention(RetentionPolicy.RUNTIME)
True,src/org/mockito/InjectMock.java,src/org/mockito/InjectMock.java,53,public @interface InjectMock {
True,src/org/mockito/InjectMock.java,src/org/mockito/InjectMock.java,54,//TODO should also inject spies
True,src/org/mockito/Mock.java,src/org/mockito/Mock.java,8,import static org.mockito.internal.stubbing.defaultanswers.Answers.*;
True,src/org/mockito/Mock.java,src/org/mockito/Mock.java,15,import org.mockito.internal.stubbing.defaultanswers.Answers;
False,src/org/mockito/Mock.java,src/org/mockito/Mock.java,18, <li>Allows shorthand mock creation.</li>
False,src/org/mockito/Mock.java,src/org/mockito/Mock.java,19, <li>Minimizes repetitive mock creation code.</li>
True,src/org/mockito/Mock.java,src/org/mockito/Mock.java,20,* <li>Allows shorthand mock creation.</li>
True,src/org/mockito/Mock.java,src/org/mockito/Mock.java,21,* <li>Minimizes repetitive mock creation code.</li>
False,src/org/mockito/Mock.java,src/org/mockito/Mock.java,25,   public class ArticleManagerTest extends SampleBaseTestCase {
True,src/org/mockito/Mock.java,src/org/mockito/Mock.java,27,*   public class ArticleManagerTest extends SampleBaseTestCase {
False,src/org/mockito/Mock.java,src/org/mockito/Mock.java,28,       &#064;Mock private ArticleDatabase database;
False,src/org/mockito/Mock.java,src/org/mockito/Mock.java,29,       &#064;Mock private UserProvider userProvider;
True,src/org/mockito/Mock.java,src/org/mockito/Mock.java,30,"*       &#064;Mock(name = ""dbMock"") private ArticleDatabase database;"
True,src/org/mockito/Mock.java,src/org/mockito/Mock.java,31,*       &#064;Mock(answer = RETURNS_MOCKS) private UserProvider userProvider;
False,src/org/mockito/Mock.java,src/org/mockito/Mock.java,48," In above example, <code>initMocks()</code> is called in &#064;Before (JUnit4) method of test's base class."
True,src/org/mockito/Mock.java,src/org/mockito/Mock.java,50,"* In above example, <code>initMocks()</code> is called in &#064;Before (JUnit4) method of test's base class."
False,src/org/mockito/Mock.java,src/org/mockito/Mock.java,55,ublic @interface Mock {}
True,src/org/mockito/Mock.java,src/org/mockito/Mock.java,57,public @interface Mock {
True,src/org/mockito/Mock.java,src/org/mockito/Mock.java,59,Answers answer() default RETURNS_DEFAULTS;
True,src/org/mockito/Mock.java,src/org/mockito/Mock.java,61,"String name() default """";"
True,src/org/mockito/Mock.java,src/org/mockito/Mock.java,63,Class<?>[] extraInterfaces() default {};
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,621,rivate static final MockitoCore MOCKITO_CORE = new MockitoCore();
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,621,static final MockitoCore MOCKITO_CORE = new MockitoCore();
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,632,ublic static final Answer<Object> RETURNS_DEFAULTS = new GloballyConfiguredAnswer();
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,632,public static final Answer<Object> RETURNS_DEFAULTS = Answers.RETURNS_DEFAULTS.get();
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,664,ublic static final Answer<Object> RETURNS_SMART_NULLS = new ReturnsSmartNulls();
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,664,public static final Answer<Object> RETURNS_SMART_NULLS = Answers.RETURNS_SMART_NULLS.get();
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,677,ublic static final Answer<Object> RETURNS_MOCKS = new ReturnsMocks();
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,677,public static final Answer<Object> RETURNS_MOCKS = Answers.RETURNS_MOCKS.get();
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,718,ublic static final Answer<Object> RETURNS_DEEP_STUBS = new ReturnsDeepStubs();
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,718,public static final Answer<Object> RETURNS_DEEP_STUBS = Answers.RETURNS_DEEP_STUBS.get();
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,752,ublic static final Answer<Object> CALLS_REAL_METHODS = new CallsRealMethods();
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,752,public static final Answer<Object> CALLS_REAL_METHODS = Answers.CALLS_REAL_METHODS.get();
True,src/org/mockito/MockitoAnnotations.java,src/org/mockito/MockitoAnnotations.java,16,import org.mockito.configuration.DefaultMockitoConfiguration;
True,src/org/mockito/MockitoAnnotations.java,src/org/mockito/MockitoAnnotations.java,17,import org.mockito.exceptions.Reporter;
False,src/org/mockito/MockitoAnnotations.java,src/org/mockito/MockitoAnnotations.java,73,ublic @interface Mock {}
True,src/org/mockito/MockitoAnnotations.java,src/org/mockito/MockitoAnnotations.java,75,public @interface Mock {}
False,src/org/mockito/MockitoAnnotations.java,src/org/mockito/MockitoAnnotations.java,92,"rivate static void scan(Object testClass, Class<?> clazz) {"
True,src/org/mockito/MockitoAnnotations.java,src/org/mockito/MockitoAnnotations.java,94,"static void scan(Object testClass, Class<?> clazz) {"
False,src/org/mockito/MockitoAnnotations.java,src/org/mockito/MockitoAnnotations.java,96,oolean alreadyAssigned = false;
False,src/org/mockito/MockitoAnnotations.java,src/org/mockito/MockitoAnnotations.java,97,or(Annotation annotation : field.getAnnotations()) {
False,src/org/mockito/MockitoAnnotations.java,src/org/mockito/MockitoAnnotations.java,98,"bject mock = annotationEngine.createMockFor(annotation, field);"
False,src/org/mockito/MockitoAnnotations.java,src/org/mockito/MockitoAnnotations.java,99,f (mock != null) {
False,src/org/mockito/MockitoAnnotations.java,src/org/mockito/MockitoAnnotations.java,100,"hrowIfAlreadyAssigned(field, alreadyAssigned);"
False,src/org/mockito/MockitoAnnotations.java,src/org/mockito/MockitoAnnotations.java,101,lreadyAssigned = true;
False,src/org/mockito/MockitoAnnotations.java,src/org/mockito/MockitoAnnotations.java,102,oolean wasAccessible = field.isAccessible();
False,src/org/mockito/MockitoAnnotations.java,src/org/mockito/MockitoAnnotations.java,103,ield.setAccessible(true);
False,src/org/mockito/MockitoAnnotations.java,src/org/mockito/MockitoAnnotations.java,104,ry {
False,src/org/mockito/MockitoAnnotations.java,src/org/mockito/MockitoAnnotations.java,105,"ield.set(testClass, mock);"
False,src/org/mockito/MockitoAnnotations.java,src/org/mockito/MockitoAnnotations.java,106, catch (IllegalAccessException e) {
False,src/org/mockito/MockitoAnnotations.java,src/org/mockito/MockitoAnnotations.java,107,"hrow new MockitoException(""Problems setting field "" + field.getName() + "" annotated with """
False,src/org/mockito/MockitoAnnotations.java,src/org/mockito/MockitoAnnotations.java,108," annotation, e);"
False,src/org/mockito/MockitoAnnotations.java,src/org/mockito/MockitoAnnotations.java,109, finally {
False,src/org/mockito/MockitoAnnotations.java,src/org/mockito/MockitoAnnotations.java,110,ield.setAccessible(wasAccessible);
True,src/org/mockito/MockitoAnnotations.java,src/org/mockito/MockitoAnnotations.java,98,if (annotationEngine.getClass() != new DefaultMockitoConfiguration().getAnnotationEngine().getClass()) {
True,src/org/mockito/MockitoAnnotations.java,src/org/mockito/MockitoAnnotations.java,99,//this means user has his own annotation engine and we have to respect that.
True,src/org/mockito/MockitoAnnotations.java,src/org/mockito/MockitoAnnotations.java,100,//we will do annotation processing the old way so that we are backwards compatible
True,src/org/mockito/MockitoAnnotations.java,src/org/mockito/MockitoAnnotations.java,101,"processAnnotationDeprecatedWay(annotationEngine, testClass, field);"
True,src/org/mockito/MockitoAnnotations.java,src/org/mockito/MockitoAnnotations.java,103,//act 'the new' way
True,src/org/mockito/MockitoAnnotations.java,src/org/mockito/MockitoAnnotations.java,104,"annotationEngine.process(clazz, testClass);"
True,src/org/mockito/MockitoAnnotations.java,src/org/mockito/MockitoAnnotations.java,108,"static void processAnnotationDeprecatedWay(AnnotationEngine annotationEngine, Object testClass, Field field) {"
True,src/org/mockito/MockitoAnnotations.java,src/org/mockito/MockitoAnnotations.java,109,boolean alreadyAssigned = false;
True,src/org/mockito/MockitoAnnotations.java,src/org/mockito/MockitoAnnotations.java,110,for(Annotation annotation : field.getAnnotations()) {
True,src/org/mockito/MockitoAnnotations.java,src/org/mockito/MockitoAnnotations.java,111,"Object mock = annotationEngine.createMockFor(annotation, field);"
True,src/org/mockito/MockitoAnnotations.java,src/org/mockito/MockitoAnnotations.java,112,if (mock != null) {
True,src/org/mockito/MockitoAnnotations.java,src/org/mockito/MockitoAnnotations.java,113,"throwIfAlreadyAssigned(field, alreadyAssigned);"
True,src/org/mockito/MockitoAnnotations.java,src/org/mockito/MockitoAnnotations.java,114,alreadyAssigned = true;
True,src/org/mockito/MockitoAnnotations.java,src/org/mockito/MockitoAnnotations.java,115,boolean wasAccessible = field.isAccessible();
True,src/org/mockito/MockitoAnnotations.java,src/org/mockito/MockitoAnnotations.java,116,field.setAccessible(true);
True,src/org/mockito/MockitoAnnotations.java,src/org/mockito/MockitoAnnotations.java,117,try {
True,src/org/mockito/MockitoAnnotations.java,src/org/mockito/MockitoAnnotations.java,118,"field.set(testClass, mock);"
True,src/org/mockito/MockitoAnnotations.java,src/org/mockito/MockitoAnnotations.java,119,} catch (IllegalAccessException e) {
True,src/org/mockito/MockitoAnnotations.java,src/org/mockito/MockitoAnnotations.java,120,"throw new MockitoException(""Problems setting field "" + field.getName() + "" annotated with """
True,src/org/mockito/MockitoAnnotations.java,src/org/mockito/MockitoAnnotations.java,121,"+ annotation, e);"
True,src/org/mockito/MockitoAnnotations.java,src/org/mockito/MockitoAnnotations.java,122,} finally {
True,src/org/mockito/MockitoAnnotations.java,src/org/mockito/MockitoAnnotations.java,123,field.setAccessible(wasAccessible);
False,src/org/mockito/MockitoAnnotations.java,src/org/mockito/MockitoAnnotations.java,117,"rivate static void throwIfAlreadyAssigned(Field field, boolean alreadyAssigned) {"
True,src/org/mockito/MockitoAnnotations.java,src/org/mockito/MockitoAnnotations.java,129,"static void throwIfAlreadyAssigned(Field field, boolean alreadyAssigned) {"
False,src/org/mockito/MockitoAnnotations.java,src/org/mockito/MockitoAnnotations.java,119,"hrow new MockitoException(""You cannot have more than one Mockito annotation on a field!\n"" +"
False,src/org/mockito/MockitoAnnotations.java,src/org/mockito/MockitoAnnotations.java,120,"The field '"" + field.getName() + ""' has multiple Mockito annotations.\n"" +"
False,src/org/mockito/MockitoAnnotations.java,src/org/mockito/MockitoAnnotations.java,121,"For info how to use annotations see examples in javadoc for MockitoAnnotations class."");"
True,src/org/mockito/MockitoAnnotations.java,src/org/mockito/MockitoAnnotations.java,131,new Reporter().moreThanOneAnnotationNotAllowed(field.getName());
True,src/org/mockito/configuration/AnnotationEngine.java,src/org/mockito/configuration/AnnotationEngine.java,20,* @Deprecated
True,src/org/mockito/configuration/AnnotationEngine.java,src/org/mockito/configuration/AnnotationEngine.java,21,* Please use AnnotationProcessor 'execute' method instead that is more robust
True,src/org/mockito/configuration/AnnotationEngine.java,src/org/mockito/configuration/AnnotationEngine.java,22,* <p>
True,src/org/mockito/configuration/AnnotationEngine.java,src/org/mockito/configuration/AnnotationEngine.java,30,@Deprecated
True,src/org/mockito/configuration/AnnotationEngine.java,src/org/mockito/configuration/AnnotationEngine.java,34,* Allows extending the interface to perform action on specific fields on the test class
True,src/org/mockito/configuration/AnnotationEngine.java,src/org/mockito/configuration/AnnotationEngine.java,35,* <p>
True,src/org/mockito/configuration/AnnotationEngine.java,src/org/mockito/configuration/AnnotationEngine.java,36,* See the implementation of this method to figure out what is it for
True,src/org/mockito/configuration/AnnotationEngine.java,src/org/mockito/configuration/AnnotationEngine.java,38,* @param context
True,src/org/mockito/configuration/AnnotationEngine.java,src/org/mockito/configuration/AnnotationEngine.java,39,* @param testClass
True,src/org/mockito/configuration/AnnotationEngine.java,src/org/mockito/configuration/AnnotationEngine.java,41,"void process(Class<?> context, Object testClass);"
False,src/org/mockito/configuration/DefaultMockitoConfiguration.java,src/org/mockito/configuration/DefaultMockitoConfiguration.java,8,mport org.mockito.internal.configuration.DefaultAnnotationEngine;
True,src/org/mockito/configuration/DefaultMockitoConfiguration.java,src/org/mockito/configuration/DefaultMockitoConfiguration.java,8,import org.mockito.internal.configuration.InjectingAnnotationEngine;
False,src/org/mockito/configuration/DefaultMockitoConfiguration.java,src/org/mockito/configuration/DefaultMockitoConfiguration.java,39,eturn new DefaultAnnotationEngine();
True,src/org/mockito/configuration/DefaultMockitoConfiguration.java,src/org/mockito/configuration/DefaultMockitoConfiguration.java,39,return new InjectingAnnotationEngine();
True,src/org/mockito/exceptions/Reporter.java,src/org/mockito/exceptions/Reporter.java,495,public void moreThanOneAnnotationNotAllowed(String fieldName) {
True,src/org/mockito/exceptions/Reporter.java,src/org/mockito/exceptions/Reporter.java,496,"throw new MockitoException(""You cannot have more than one Mockito annotation on a field!\n"" +"
True,src/org/mockito/exceptions/Reporter.java,src/org/mockito/exceptions/Reporter.java,497,"""The field '"" + fieldName + ""' has multiple Mockito annotations.\n"" +"
True,src/org/mockito/exceptions/Reporter.java,src/org/mockito/exceptions/Reporter.java,498,"""For info how to use annotations see examples in javadoc for MockitoAnnotations class."");"
True,src/org/mockito/exceptions/Reporter.java,src/org/mockito/exceptions/Reporter.java,501,"public void unsupportedCombinationOfAnnotations(String undesiredAnnotationOne, String undesiredAnnotationTwo) {"
True,src/org/mockito/exceptions/Reporter.java,src/org/mockito/exceptions/Reporter.java,502,"throw new MockitoException(""This combination of annotations is not permitted on a single field:\n"" +"
True,src/org/mockito/exceptions/Reporter.java,src/org/mockito/exceptions/Reporter.java,503,"""@"" + undesiredAnnotationOne + "" and @"" + undesiredAnnotationTwo);"
True,src/org/mockito/internal/MockHandlerInterface.java,src/org/mockito/internal/MockHandlerInterface.java,10,"@SuppressWarnings(""unchecked"")"
False,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,7,mport org.mockito.*;
True,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,7,import java.lang.annotation.Annotation;
True,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,8,import java.lang.reflect.Field;
True,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,10,import org.mockito.ArgumentCaptor;
True,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,11,import org.mockito.Captor;
True,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,12,import org.mockito.Mock;
True,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,13,import org.mockito.MockSettings;
True,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,14,import org.mockito.Mockito;
True,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,15,import org.mockito.MockitoAnnotations;
True,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,17,import org.mockito.exceptions.Reporter;
False,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,11,mport java.lang.annotation.Annotation;
False,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,12,mport java.lang.reflect.*;
False,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,27,f (annotation instanceof Mock || annotation instanceof org.mockito.MockitoAnnotations.Mock) {
False,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,28,"eturn Mockito.mock(field.getType(), field.getName());"
True,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,32,if (annotation instanceof Mock) {
True,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,33,"return processAnnotationOn((Mock) annotation, field);"
True,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,35,if (annotation instanceof MockitoAnnotations.Mock) {
True,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,36,"return processAnnotationOn((MockitoAnnotations.Mock) annotation, field);"
False,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,32,lass<?> type = field.getType();
False,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,33,f (!ArgumentCaptor.class.isAssignableFrom(type)) {
False,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,34,"hrow new MockitoException(""@Captor field must be of the type ArgumentCaptor.\n"" +"
False,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,35,"Field: '"" + field.getName() + ""' has wrong type\n"" +"
False,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,36,/TODO add javadocs
False,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,37,"For info how to use @Captor annotations see examples in javadoc for MockitoAnnotations class."");"
True,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,39,"return processAnnotationOn((Captor) annotation, field);"
False,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,40,eturn ArgumentCaptor.forClass(Object.class);
True,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,42,return null;
True,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,45,"private Object processAnnotationOn(Mock annotation, Field field) {"
True,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,46,MockSettings mockSettings = Mockito.withSettings();
True,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,47,if (annotation.extraInterfaces().length > 0) { // never null
True,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,48,mockSettings.extraInterfaces(annotation.extraInterfaces());
True,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,50,"if ("""".equals(annotation.name())) {"
True,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,51,mockSettings.name(field.getName());
True,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,52,} else {
True,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,53,mockSettings.name(annotation.name());
True,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,56,// see @Mock answer default value
True,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,57,mockSettings.defaultAnswer(annotation.answer().get());
True,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,58,"return Mockito.mock(field.getType(), mockSettings);"
True,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,61,"private Object processAnnotationOn(org.mockito.MockitoAnnotations.Mock annotation, Field field) {"
True,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,62,"return Mockito.mock(field.getType(), field.getName());"
False,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,43,f (annotation instanceof Spy) {
False,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,44,"hrow new IllegalArgumentException(""@Spy is not yet supported."");"
True,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,65,"private Object processAnnotationOn(Captor annotation, Field field) {"
True,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,66,Class<?> type = field.getType();
True,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,67,if (!ArgumentCaptor.class.isAssignableFrom(type)) {
True,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,68,"throw new MockitoException(""@Captor field must be of the type ArgumentCaptor.\n"" + ""Field: '"""
True,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,69,"+ field.getName() + ""' has wrong type\n"""
True,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,70,"+ ""For info how to use @Captor annotations see examples in javadoc for MockitoAnnotations class."");"
True,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,72,return ArgumentCaptor.forClass(Object.class); // Object.class due to
True,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,73,// erasure
False,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,47,eturn null;
True,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,76,@Override
True,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,77,"public void process(Class<?> clazz, Object testClass) {"
True,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,78,Field[] fields = clazz.getDeclaredFields();
True,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,79,for (Field field : fields) {
True,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,80,boolean alreadyAssigned = false;
True,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,81,for(Annotation annotation : field.getAnnotations()) {
True,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,82,"Object mock = createMockFor(annotation, field);"
True,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,83,if (mock != null) {
True,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,84,"throwIfAlreadyAssigned(field, alreadyAssigned);"
True,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,85,alreadyAssigned = true;
True,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,86,//TODO this is deprecated all over the place
True,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,87,boolean wasAccessible = field.isAccessible();
True,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,88,field.setAccessible(true);
True,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,89,try {
True,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,90,"field.set(testClass, mock);"
True,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,91,} catch (IllegalAccessException e) {
True,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,92,"throw new MockitoException(""Problems setting field "" + field.getName() + "" annotated with """
True,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,93,"+ annotation, e);"
True,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,94,} finally {
True,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,95,field.setAccessible(wasAccessible);
True,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,102,"void throwIfAlreadyAssigned(Field field, boolean alreadyAssigned) {"
True,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,103,if (alreadyAssigned) {
True,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,104,new Reporter().moreThanOneAnnotationNotAllowed(field.getName());
True,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,1,package org.mockito.internal.configuration;
True,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,3,import java.lang.reflect.Field;
True,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,4,import java.util.ArrayList;
True,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,5,import java.util.Collection;
True,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,6,import java.util.List;
True,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,7,import java.util.Set;
True,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,9,import org.mockito.exceptions.base.MockitoException;
True,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,10,import org.mockito.internal.util.MockUtil;
True,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,13,* Initializes mock/spies dependencies for fields annotated with &#064;InjectMock
True,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,14,* <p/>
True,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,15,* See {@link org.mockito.MockitoAnnotations}
True,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,17,public class DefaultInjectionEngine {
True,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,19,private final MockUtil mockUtil = new MockUtil();
True,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,21,// for each tested
True,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,22,// - for each field of tested
True,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,23,//   - find mock candidate by type
True,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,24,//   - if more than *one* find mock candidate on name
True,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,25,//   - if one mock candidate then set mock
True,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,26,"//   - else don't fail, user will then provide dependencies"
True,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,27,"public void injectMocksOnFields(Set<Field> testClassFields, Set<Object> mocks, Object testClass) {"
True,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,28,for (Field field : testClassFields) {
True,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,29,Object fieldInstance = null;
True,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,30,boolean wasAccessible = field.isAccessible();
True,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,31,field.setAccessible(true);
True,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,32,try {
True,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,33,fieldInstance = field.get(testClass);
True,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,34,} catch (IllegalAccessException e) {
True,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,35,"throw new MockitoException(""Problems injecting dependencies in "" + field.getName(), e);"
True,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,36,} finally {
True,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,37,field.setAccessible(wasAccessible);
True,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,40,// for each field in the class hierarchy
True,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,41,Class<?> fieldClass = fieldInstance.getClass();
True,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,42,while (fieldClass != Object.class) {
True,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,43,"injectMockCandidate(fieldClass, mocks, fieldInstance);"
True,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,44,fieldClass = fieldClass.getSuperclass();
True,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,49,"private void injectMockCandidate(Class<?> awaitingInjectionClazz, Set<Object> mocks, Object fieldInstance) {"
True,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,50,"// TODO refactor using a CoR, maybe configured with config."
True,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,51,for(Field field : awaitingInjectionClazz.getDeclaredFields()) {
True,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,52,"List<Object> mockCandidates = selectMockCondidatesOnType(mocks, field.getType());"
True,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,53,if(mockCandidates.size() > 1) {
True,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,54,"mockCandidates = selectMockCandidateOnName(mockCandidates, field.getName());"
True,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,56,if(mockCandidates.size() == 1) {
True,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,57,"inject(field, fieldInstance, mockCandidates.get(0));"
True,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,58,} else {
True,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,59,"// don't fail, the user need to provide other dependencies"
True,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,64,"private void inject(Field field, Object fieldInstance, Object matchingMock) {"
True,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,65,boolean wasAccessible = field.isAccessible();
True,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,66,field.setAccessible(true);
True,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,67,try {
True,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,68,"field.set(fieldInstance, matchingMock);"
True,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,69,} catch (IllegalAccessException e) {
True,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,70,"throw new MockitoException(""Problems injecting dependency in "" + field.getName(), e);"
True,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,71,} finally {
True,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,72,field.setAccessible(wasAccessible);
True,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,76,"private List<Object> selectMockCandidateOnName(Collection<Object> mocks, String fieldName) {"
True,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,77,List<Object> mockNameMatches = new ArrayList<Object>();
True,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,78,for (Object mock : mocks) {
True,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,79,if(fieldName.equals(mockUtil.getMockName(mock).toString())) {
True,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,80,mockNameMatches.add(mock);
True,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,83,return mockNameMatches;
True,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,86,"private List<Object> selectMockCondidatesOnType(Collection<Object> mocks, Class<?> fieldClass) {"
True,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,87,List<Object> mockTypeMatches = new ArrayList<Object>();
True,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,88,for (Object mock : mocks) {
True,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,89,if(fieldClass.isAssignableFrom(mock.getClass())) {
True,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,90,mockTypeMatches.add(mock);
True,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,93,return mockTypeMatches;
True,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,2,* Copyright (c) 2007 Mockito contributors
True,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,3,* This program is made available under the terms of the MIT License.
True,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,5,package org.mockito.internal.configuration;
True,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,7,import java.lang.annotation.Annotation;
True,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,8,import java.lang.reflect.Field;
True,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,9,import java.util.HashSet;
True,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,10,import java.util.Set;
True,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,12,import org.mockito.Captor;
True,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,13,import org.mockito.InjectMock;
True,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,14,import org.mockito.MockitoAnnotations;
True,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,15,import org.mockito.Spy;
True,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,16,import org.mockito.MockitoAnnotations.Mock;
True,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,17,import org.mockito.configuration.AnnotationEngine;
True,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,18,import org.mockito.exceptions.Reporter;
True,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,19,import org.mockito.exceptions.base.MockitoException;
True,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,22,* See {@link MockitoAnnotations}
True,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,24,"@SuppressWarnings({""deprecation"", ""unchecked""})"
True,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,25,public class InjectingAnnotationEngine implements AnnotationEngine {
True,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,27,AnnotationEngine delegate = new DefaultAnnotationEngine();
True,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,28,AnnotationEngine spyAnnotationEngine = new SpyAnnotationEngine();
True,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,30,/* (non-Javadoc)
True,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,31,"* @see org.mockito.AnnotationEngine#createMockFor(java.lang.annotation.Annotation, java.lang.reflect.Field)"
True,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,33,"public Object createMockFor(Annotation annotation, Field field) {"
True,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,34,"return delegate.createMockFor(annotation, field);"
True,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,37,@Override
True,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,38,"public void process(Class<?> context, Object testClass) {"
True,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,39,"//this will create @Mocks, @Captors, etc:"
True,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,40,"delegate.process(context, testClass);"
True,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,41,//this will create @Spies:
True,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,42,"spyAnnotationEngine.process(context, testClass);"
True,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,44,//this injects mocks
True,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,45,Field[] fields = context.getDeclaredFields();
True,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,46,for (Field field : fields) {
True,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,47,if (field.isAnnotationPresent(InjectMock.class)) {
True,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,48,"assertNoAnnotations(field, Mock.class, org.mockito.MockitoAnnotations.Mock.class, Captor.class);"
True,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,49,injectMocks(testClass);
True,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,54,"void assertNoAnnotations(Field field, Class ... annotations) {"
True,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,55,for (Class annotation : annotations) {
True,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,56,if (field.isAnnotationPresent(annotation)) {
True,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,57,"new Reporter().unsupportedCombinationOfAnnotations(annotation.getSimpleName(), InjectMock.class.getSimpleName());"
True,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,63,* Initializes mock/spies dependencies for objects annotated with
True,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,64,* &#064;InjectMock for given testClass.
True,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,65,* <p>
True,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,66,* See examples in javadoc for {@link MockitoAnnotations} class.
True,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,68,* @param testClass
True,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,69,"*            Test class, usually <code>this</code>"
True,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,71,public void injectMocks(Object testClass) {
True,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,72,Class<?> clazz = testClass.getClass();
True,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,73,Set<Field> mockDependents = new HashSet<Field>();
True,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,74,Set<Object> mocks = new HashSet<Object>();
True,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,76,while (clazz != Object.class) {
True,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,77,"mockDependents.addAll(scanForInjection(testClass, clazz));"
True,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,78,"mocks.addAll(scanMocks(testClass, clazz));"
True,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,79,clazz = clazz.getSuperclass();
True,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,82,"new DefaultInjectionEngine().injectMocksOnFields(mockDependents, mocks, testClass);"
True,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,85,"private static Set<Field> scanForInjection(Object testClass, Class<?> clazz) {"
True,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,86,Set<Field> testedFields = new HashSet<Field>();
True,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,87,Field[] fields = clazz.getDeclaredFields();
True,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,88,for (Field field : fields) {
True,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,89,if (null != field.getAnnotation(InjectMock.class)) {
True,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,90,InjectMock injectMockAnnotation = (InjectMock) field.getAnnotation(InjectMock.class);
True,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,91,testedFields.add(field);
True,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,95,return testedFields;
True,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,98,"private static Set<Object> scanMocks(Object testClass, Class<?> clazz) {"
True,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,99,Set<Object> mocks = new HashSet<Object>();
True,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,100,for (Field field : clazz.getDeclaredFields()) {
True,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,101,// mock or spies only
True,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,102,if (null != field.getAnnotation(Spy.class) || null != field.getAnnotation(org.mockito.Mock.class)
True,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,103,|| null != field.getAnnotation(Mock.class)) {
True,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,104,Object fieldInstance = null;
True,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,105,boolean wasAccessible = field.isAccessible();
True,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,106,field.setAccessible(true);
True,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,107,try {
True,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,108,fieldInstance = field.get(testClass);
True,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,109,} catch (IllegalAccessException e) {
True,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,110,"throw new MockitoException(""Problems injecting dependencies in "" + field.getName(), e);"
True,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,111,} finally {
True,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,112,field.setAccessible(wasAccessible);
True,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,114,if (fieldInstance != null) {
True,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,115,mocks.add(fieldInstance);
True,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,src/org/mockito/internal/configuration/InjectingAnnotationEngine.java,119,return mocks;
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,1,package org.mockito.internal.configuration;
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,3,import java.lang.annotation.Annotation;
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,4,import java.lang.reflect.Field;
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,6,import org.mockito.Captor;
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,7,import org.mockito.Mock;
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,8,import org.mockito.Mockito;
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,9,import org.mockito.Spy;
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,10,import org.mockito.configuration.AnnotationEngine;
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,11,import org.mockito.exceptions.Reporter;
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,12,import org.mockito.exceptions.base.MockitoException;
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,13,import org.mockito.internal.util.MockUtil;
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,15,"@SuppressWarnings({""deprecation"", ""unchecked""})"
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,16,public class SpyAnnotationEngine implements AnnotationEngine {
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,18,@Override
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,19,"public Object createMockFor(Annotation annotation, Field field) {"
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,20,return null;
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,23,@Override
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,24,"public void process(Class<?> context, Object testClass) {"
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,25,Field[] fields = context.getDeclaredFields();
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,26,for (Field field : fields) {
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,27,if (field.isAnnotationPresent(Spy.class)) {
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,28,"assertNoAnnotations(Spy.class, field, Mock.class, org.mockito.MockitoAnnotations.Mock.class, Captor.class);"
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,29,boolean wasAccessible = field.isAccessible();
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,30,field.setAccessible(true);
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,31,try {
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,32,Object instance = field.get(testClass);
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,33,if (instance == null) {
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,34,"throw new MockitoException(""Cannot create a @Spy for '"" + field.getName() + ""' field because the instance is missing\n"" +"
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,35,"""Example of correct usage of @Spy:\n"" +"
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,36,"""   @Spy List mock = new LinkedList();\n"" +"
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,37,"""   //also, don't forget about MockitoAnnotations.initMocks();"");"
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,40,if (new MockUtil().isMock(instance)) {
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,41,// instance has been spied earlier
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,42,Mockito.reset(instance);
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,43,} else {
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,44,"field.set(testClass, Mockito.spy(instance));"
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,46,} catch (IllegalAccessException e) {
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,47,"throw new MockitoException(""Problems initiating spied field "" + field.getName(), e);"
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,48,} finally {
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,49,field.setAccessible(wasAccessible);
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,55,//TODO duplicated elsewhere
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,56,"void assertNoAnnotations(Class annotation, Field field, Class ... undesiredAnnotations) {"
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,57,for (Class u : undesiredAnnotations) {
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,58,if (field.isAnnotationPresent(u)) {
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,59,"new Reporter().unsupportedCombinationOfAnnotations(annotation.getSimpleName(), annotation.getClass().getSimpleName());"
True,src/org/mockito/internal/stubbing/defaultanswers/Answers.java,src/org/mockito/internal/stubbing/defaultanswers/Answers.java,1,package org.mockito.internal.stubbing.defaultanswers;
True,src/org/mockito/internal/stubbing/defaultanswers/Answers.java,src/org/mockito/internal/stubbing/defaultanswers/Answers.java,3,import org.mockito.internal.stubbing.answers.CallsRealMethods;
True,src/org/mockito/internal/stubbing/defaultanswers/Answers.java,src/org/mockito/internal/stubbing/defaultanswers/Answers.java,4,import org.mockito.stubbing.Answer;
True,src/org/mockito/internal/stubbing/defaultanswers/Answers.java,src/org/mockito/internal/stubbing/defaultanswers/Answers.java,7,* Enumeration of pre-configured mock answers
True,src/org/mockito/internal/stubbing/defaultanswers/Answers.java,src/org/mockito/internal/stubbing/defaultanswers/Answers.java,9,//TODO should be AnswersEnum?
True,src/org/mockito/internal/stubbing/defaultanswers/Answers.java,src/org/mockito/internal/stubbing/defaultanswers/Answers.java,10,public enum Answers {
True,src/org/mockito/internal/stubbing/defaultanswers/Answers.java,src/org/mockito/internal/stubbing/defaultanswers/Answers.java,12,"RETURNS_DEFAULTS(new GloballyConfiguredAnswer()),"
True,src/org/mockito/internal/stubbing/defaultanswers/Answers.java,src/org/mockito/internal/stubbing/defaultanswers/Answers.java,13,"RETURNS_SMART_NULLS(new ReturnsSmartNulls()),"
True,src/org/mockito/internal/stubbing/defaultanswers/Answers.java,src/org/mockito/internal/stubbing/defaultanswers/Answers.java,14,"RETURNS_MOCKS(new ReturnsMocks()),"
True,src/org/mockito/internal/stubbing/defaultanswers/Answers.java,src/org/mockito/internal/stubbing/defaultanswers/Answers.java,15,"RETURNS_DEEP_STUBS(new ReturnsDeepStubs()),"
True,src/org/mockito/internal/stubbing/defaultanswers/Answers.java,src/org/mockito/internal/stubbing/defaultanswers/Answers.java,16,CALLS_REAL_METHODS(new CallsRealMethods())
True,src/org/mockito/internal/stubbing/defaultanswers/Answers.java,src/org/mockito/internal/stubbing/defaultanswers/Answers.java,19,private Answer<Object> implementation;
True,src/org/mockito/internal/stubbing/defaultanswers/Answers.java,src/org/mockito/internal/stubbing/defaultanswers/Answers.java,21,private Answers(Answer<Object> implementation) {
True,src/org/mockito/internal/stubbing/defaultanswers/Answers.java,src/org/mockito/internal/stubbing/defaultanswers/Answers.java,22,this.implementation = implementation;
True,src/org/mockito/internal/stubbing/defaultanswers/Answers.java,src/org/mockito/internal/stubbing/defaultanswers/Answers.java,25,public Answer<Object> get() {
True,src/org/mockito/internal/stubbing/defaultanswers/Answers.java,src/org/mockito/internal/stubbing/defaultanswers/Answers.java,26,return implementation;
False,src/org/mockito/internal/util/junit/JUnitFailureHacker.java,src/org/mockito/internal/util/junit/JUnitFailureHacker.java,25,eturn warnings == null || warnings.isEmpty();
True,src/org/mockito/internal/util/junit/JUnitFailureHacker.java,src/org/mockito/internal/util/junit/JUnitFailureHacker.java,25,"return warnings == null || """".equals(warnings); // isEmpty() is in JDK 6+"
False,test/org/mockito/configuration/MockitoConfiguration.java,test/org/mockito/configuration/MockitoConfiguration.java,11,mport org.mockito.internal.configuration.DefaultAnnotationEngine;
True,test/org/mockito/configuration/MockitoConfiguration.java,test/org/mockito/configuration/MockitoConfiguration.java,11,import org.mockito.internal.configuration.InjectingAnnotationEngine;
True,test/org/mockito/configuration/MockitoConfiguration.java,test/org/mockito/configuration/MockitoConfiguration.java,19,private AnnotationEngine overriddenEngine;
True,test/org/mockito/configuration/MockitoConfiguration.java,test/org/mockito/configuration/MockitoConfiguration.java,31,"//for testing purposes, allow to override the annotation engine"
True,test/org/mockito/configuration/MockitoConfiguration.java,test/org/mockito/configuration/MockitoConfiguration.java,32,public void overrideAnnotationEngine(AnnotationEngine engine) {
True,test/org/mockito/configuration/MockitoConfiguration.java,test/org/mockito/configuration/MockitoConfiguration.java,33,this.overriddenEngine = engine;
False,test/org/mockito/configuration/MockitoConfiguration.java,test/org/mockito/configuration/MockitoConfiguration.java,41,eturn new DefaultAnnotationEngine() {
True,test/org/mockito/configuration/MockitoConfiguration.java,test/org/mockito/configuration/MockitoConfiguration.java,47,if (this.overriddenEngine != null) {
True,test/org/mockito/configuration/MockitoConfiguration.java,test/org/mockito/configuration/MockitoConfiguration.java,48,return this.overriddenEngine;
True,test/org/mockito/configuration/MockitoConfiguration.java,test/org/mockito/configuration/MockitoConfiguration.java,50,return new InjectingAnnotationEngine() {
True,test/org/mockitousage/basicapi/AnnotationsTest.java,test/org/mockitousage/basicapi/AnnotationsTest.java,8,import static org.mockito.internal.stubbing.defaultanswers.Answers.RETURNS_MOCKS;
True,test/org/mockitousage/basicapi/AnnotationsTest.java,test/org/mockitousage/basicapi/AnnotationsTest.java,9,import static org.mockito.internal.stubbing.defaultanswers.Answers.RETURNS_DEFAULTS;
False,test/org/mockitousage/basicapi/AnnotationsTest.java,test/org/mockitousage/basicapi/AnnotationsTest.java,11,mport java.util.HashMap;
False,test/org/mockitousage/basicapi/AnnotationsTest.java,test/org/mockitousage/basicapi/AnnotationsTest.java,12,mport java.util.List;
False,test/org/mockitousage/basicapi/AnnotationsTest.java,test/org/mockitousage/basicapi/AnnotationsTest.java,13,mport java.util.Map;
False,test/org/mockitousage/basicapi/AnnotationsTest.java,test/org/mockitousage/basicapi/AnnotationsTest.java,14,mport java.util.Set;
True,test/org/mockitousage/basicapi/AnnotationsTest.java,test/org/mockitousage/basicapi/AnnotationsTest.java,13,import java.util.*;
False,test/org/mockitousage/basicapi/AnnotationsTest.java,test/org/mockitousage/basicapi/AnnotationsTest.java,18,mport org.mockito.Mock;
False,test/org/mockitousage/basicapi/AnnotationsTest.java,test/org/mockitousage/basicapi/AnnotationsTest.java,19,mport org.mockito.MockitoAnnotations;
True,test/org/mockitousage/basicapi/AnnotationsTest.java,test/org/mockitousage/basicapi/AnnotationsTest.java,17,import org.mockito.*;
True,test/org/mockitousage/basicapi/AnnotationsTest.java,test/org/mockitousage/basicapi/AnnotationsTest.java,19,import org.mockito.internal.stubbing.defaultanswers.Answers;
True,test/org/mockitousage/basicapi/AnnotationsTest.java,test/org/mockitousage/basicapi/AnnotationsTest.java,74,"@Mock(answer = RETURNS_MOCKS, name = ""i have a name"") IMethods namedAndReturningMocks;"
True,test/org/mockitousage/basicapi/AnnotationsTest.java,test/org/mockitousage/basicapi/AnnotationsTest.java,75,@Mock(answer = RETURNS_DEFAULTS) IMethods returningDefaults;
True,test/org/mockitousage/basicapi/AnnotationsTest.java,test/org/mockitousage/basicapi/AnnotationsTest.java,76,@Mock(extraInterfaces = {List.class}) IMethods hasExtraInterfaces;
True,test/org/mockitousage/basicapi/AnnotationsTest.java,test/org/mockitousage/basicapi/AnnotationsTest.java,77,@Mock() IMethods noExtraConfig;
True,test/org/mockitousage/basicapi/AnnotationsTest.java,test/org/mockitousage/basicapi/AnnotationsTest.java,79,@Test
True,test/org/mockitousage/basicapi/AnnotationsTest.java,test/org/mockitousage/basicapi/AnnotationsTest.java,80,public void shouldInitMocksWithGivenSettings() throws Exception {
True,test/org/mockitousage/basicapi/AnnotationsTest.java,test/org/mockitousage/basicapi/AnnotationsTest.java,81,"assertEquals(""i have a name"", namedAndReturningMocks.toString());"
True,test/org/mockitousage/basicapi/AnnotationsTest.java,test/org/mockitousage/basicapi/AnnotationsTest.java,82,assertNotNull(namedAndReturningMocks.iMethodsReturningMethod());
True,test/org/mockitousage/basicapi/AnnotationsTest.java,test/org/mockitousage/basicapi/AnnotationsTest.java,84,"assertEquals(""returningDefaults"", returningDefaults.toString());"
True,test/org/mockitousage/basicapi/AnnotationsTest.java,test/org/mockitousage/basicapi/AnnotationsTest.java,85,"assertEquals(0, returningDefaults.intReturningMethod());"
True,test/org/mockitousage/basicapi/AnnotationsTest.java,test/org/mockitousage/basicapi/AnnotationsTest.java,87,assertTrue(hasExtraInterfaces instanceof List);
True,test/org/mockitousage/basicapi/AnnotationsTest.java,test/org/mockitousage/basicapi/AnnotationsTest.java,89,"assertEquals(0, noExtraConfig.intReturningMethod());"
True,test/org/mockitousage/basicapi/DeprecatedAnnotationEngineApiTest.java,test/org/mockitousage/basicapi/DeprecatedAnnotationEngineApiTest.java,2,* Copyright (c) 2007 Mockito contributors
True,test/org/mockitousage/basicapi/DeprecatedAnnotationEngineApiTest.java,test/org/mockitousage/basicapi/DeprecatedAnnotationEngineApiTest.java,3,* This program is made available under the terms of the MIT License.
True,test/org/mockitousage/basicapi/DeprecatedAnnotationEngineApiTest.java,test/org/mockitousage/basicapi/DeprecatedAnnotationEngineApiTest.java,5,package org.mockitousage.basicapi;
True,test/org/mockitousage/basicapi/DeprecatedAnnotationEngineApiTest.java,test/org/mockitousage/basicapi/DeprecatedAnnotationEngineApiTest.java,7,import org.junit.After;
True,test/org/mockitousage/basicapi/DeprecatedAnnotationEngineApiTest.java,test/org/mockitousage/basicapi/DeprecatedAnnotationEngineApiTest.java,8,import org.junit.Test;
True,test/org/mockitousage/basicapi/DeprecatedAnnotationEngineApiTest.java,test/org/mockitousage/basicapi/DeprecatedAnnotationEngineApiTest.java,9,import org.mockito.InjectMock;
True,test/org/mockitousage/basicapi/DeprecatedAnnotationEngineApiTest.java,test/org/mockitousage/basicapi/DeprecatedAnnotationEngineApiTest.java,10,import org.mockito.Mock;
True,test/org/mockitousage/basicapi/DeprecatedAnnotationEngineApiTest.java,test/org/mockitousage/basicapi/DeprecatedAnnotationEngineApiTest.java,11,import org.mockito.MockitoAnnotations;
True,test/org/mockitousage/basicapi/DeprecatedAnnotationEngineApiTest.java,test/org/mockitousage/basicapi/DeprecatedAnnotationEngineApiTest.java,12,import org.mockito.configuration.AnnotationEngine;
True,test/org/mockitousage/basicapi/DeprecatedAnnotationEngineApiTest.java,test/org/mockitousage/basicapi/DeprecatedAnnotationEngineApiTest.java,13,import org.mockito.configuration.DefaultMockitoConfiguration;
True,test/org/mockitousage/basicapi/DeprecatedAnnotationEngineApiTest.java,test/org/mockitousage/basicapi/DeprecatedAnnotationEngineApiTest.java,14,import org.mockito.internal.configuration.ConfigurationAccess;
True,test/org/mockitousage/basicapi/DeprecatedAnnotationEngineApiTest.java,test/org/mockitousage/basicapi/DeprecatedAnnotationEngineApiTest.java,15,import org.mockito.internal.configuration.DefaultAnnotationEngine;
True,test/org/mockitousage/basicapi/DeprecatedAnnotationEngineApiTest.java,test/org/mockitousage/basicapi/DeprecatedAnnotationEngineApiTest.java,16,import org.mockitoutil.TestBase;
True,test/org/mockitousage/basicapi/DeprecatedAnnotationEngineApiTest.java,test/org/mockitousage/basicapi/DeprecatedAnnotationEngineApiTest.java,18,public class DeprecatedAnnotationEngineApiTest extends TestBase {
True,test/org/mockitousage/basicapi/DeprecatedAnnotationEngineApiTest.java,test/org/mockitousage/basicapi/DeprecatedAnnotationEngineApiTest.java,20,@After
True,test/org/mockitousage/basicapi/DeprecatedAnnotationEngineApiTest.java,test/org/mockitousage/basicapi/DeprecatedAnnotationEngineApiTest.java,21,public void goBackToDefaultConfiguration() {
True,test/org/mockitousage/basicapi/DeprecatedAnnotationEngineApiTest.java,test/org/mockitousage/basicapi/DeprecatedAnnotationEngineApiTest.java,22,ConfigurationAccess.getConfig().overrideAnnotationEngine(null);
True,test/org/mockitousage/basicapi/DeprecatedAnnotationEngineApiTest.java,test/org/mockitousage/basicapi/DeprecatedAnnotationEngineApiTest.java,25,class SimpleTest {
True,test/org/mockitousage/basicapi/DeprecatedAnnotationEngineApiTest.java,test/org/mockitousage/basicapi/DeprecatedAnnotationEngineApiTest.java,26,@InjectMock Tested tested = new Tested();
True,test/org/mockitousage/basicapi/DeprecatedAnnotationEngineApiTest.java,test/org/mockitousage/basicapi/DeprecatedAnnotationEngineApiTest.java,27,@Mock Dependency mock;
True,test/org/mockitousage/basicapi/DeprecatedAnnotationEngineApiTest.java,test/org/mockitousage/basicapi/DeprecatedAnnotationEngineApiTest.java,30,class Tested {
True,test/org/mockitousage/basicapi/DeprecatedAnnotationEngineApiTest.java,test/org/mockitousage/basicapi/DeprecatedAnnotationEngineApiTest.java,31,Dependency dependency;
True,test/org/mockitousage/basicapi/DeprecatedAnnotationEngineApiTest.java,test/org/mockitousage/basicapi/DeprecatedAnnotationEngineApiTest.java,32,public void setDependency(Dependency dependency) {
True,test/org/mockitousage/basicapi/DeprecatedAnnotationEngineApiTest.java,test/org/mockitousage/basicapi/DeprecatedAnnotationEngineApiTest.java,33,this.dependency = dependency;
True,test/org/mockitousage/basicapi/DeprecatedAnnotationEngineApiTest.java,test/org/mockitousage/basicapi/DeprecatedAnnotationEngineApiTest.java,37,class Dependency {}
True,test/org/mockitousage/basicapi/DeprecatedAnnotationEngineApiTest.java,test/org/mockitousage/basicapi/DeprecatedAnnotationEngineApiTest.java,39,@Test
True,test/org/mockitousage/basicapi/DeprecatedAnnotationEngineApiTest.java,test/org/mockitousage/basicapi/DeprecatedAnnotationEngineApiTest.java,40,public void shouldInjectMocksIfThereIsNoUserDefinedEngine() throws Exception {
True,test/org/mockitousage/basicapi/DeprecatedAnnotationEngineApiTest.java,test/org/mockitousage/basicapi/DeprecatedAnnotationEngineApiTest.java,41,//given
True,test/org/mockitousage/basicapi/DeprecatedAnnotationEngineApiTest.java,test/org/mockitousage/basicapi/DeprecatedAnnotationEngineApiTest.java,42,AnnotationEngine defaultEngine = new DefaultMockitoConfiguration().getAnnotationEngine();
True,test/org/mockitousage/basicapi/DeprecatedAnnotationEngineApiTest.java,test/org/mockitousage/basicapi/DeprecatedAnnotationEngineApiTest.java,43,ConfigurationAccess.getConfig().overrideAnnotationEngine(defaultEngine);
True,test/org/mockitousage/basicapi/DeprecatedAnnotationEngineApiTest.java,test/org/mockitousage/basicapi/DeprecatedAnnotationEngineApiTest.java,44,SimpleTest test = new SimpleTest();
True,test/org/mockitousage/basicapi/DeprecatedAnnotationEngineApiTest.java,test/org/mockitousage/basicapi/DeprecatedAnnotationEngineApiTest.java,46,//when
True,test/org/mockitousage/basicapi/DeprecatedAnnotationEngineApiTest.java,test/org/mockitousage/basicapi/DeprecatedAnnotationEngineApiTest.java,47,MockitoAnnotations.initMocks(test);
True,test/org/mockitousage/basicapi/DeprecatedAnnotationEngineApiTest.java,test/org/mockitousage/basicapi/DeprecatedAnnotationEngineApiTest.java,49,//then
True,test/org/mockitousage/basicapi/DeprecatedAnnotationEngineApiTest.java,test/org/mockitousage/basicapi/DeprecatedAnnotationEngineApiTest.java,50,assertNotNull(test.mock);
True,test/org/mockitousage/basicapi/DeprecatedAnnotationEngineApiTest.java,test/org/mockitousage/basicapi/DeprecatedAnnotationEngineApiTest.java,51,assertNotNull(test.tested.dependency);
True,test/org/mockitousage/basicapi/DeprecatedAnnotationEngineApiTest.java,test/org/mockitousage/basicapi/DeprecatedAnnotationEngineApiTest.java,52,"assertSame(test.mock, test.tested.dependency);"
True,test/org/mockitousage/basicapi/DeprecatedAnnotationEngineApiTest.java,test/org/mockitousage/basicapi/DeprecatedAnnotationEngineApiTest.java,55,@Test
True,test/org/mockitousage/basicapi/DeprecatedAnnotationEngineApiTest.java,test/org/mockitousage/basicapi/DeprecatedAnnotationEngineApiTest.java,56,public void shouldRespectUsersEngine() throws Exception {
True,test/org/mockitousage/basicapi/DeprecatedAnnotationEngineApiTest.java,test/org/mockitousage/basicapi/DeprecatedAnnotationEngineApiTest.java,57,//given
True,test/org/mockitousage/basicapi/DeprecatedAnnotationEngineApiTest.java,test/org/mockitousage/basicapi/DeprecatedAnnotationEngineApiTest.java,58,AnnotationEngine customizedEngine = new DefaultAnnotationEngine() { /**/ };
True,test/org/mockitousage/basicapi/DeprecatedAnnotationEngineApiTest.java,test/org/mockitousage/basicapi/DeprecatedAnnotationEngineApiTest.java,59,ConfigurationAccess.getConfig().overrideAnnotationEngine(customizedEngine);
True,test/org/mockitousage/basicapi/DeprecatedAnnotationEngineApiTest.java,test/org/mockitousage/basicapi/DeprecatedAnnotationEngineApiTest.java,60,SimpleTest test = new SimpleTest();
True,test/org/mockitousage/basicapi/DeprecatedAnnotationEngineApiTest.java,test/org/mockitousage/basicapi/DeprecatedAnnotationEngineApiTest.java,62,//when
True,test/org/mockitousage/basicapi/DeprecatedAnnotationEngineApiTest.java,test/org/mockitousage/basicapi/DeprecatedAnnotationEngineApiTest.java,63,MockitoAnnotations.initMocks(test);
True,test/org/mockitousage/basicapi/DeprecatedAnnotationEngineApiTest.java,test/org/mockitousage/basicapi/DeprecatedAnnotationEngineApiTest.java,65,//then
True,test/org/mockitousage/basicapi/DeprecatedAnnotationEngineApiTest.java,test/org/mockitousage/basicapi/DeprecatedAnnotationEngineApiTest.java,66,assertNotNull(test.mock);
True,test/org/mockitousage/basicapi/DeprecatedAnnotationEngineApiTest.java,test/org/mockitousage/basicapi/DeprecatedAnnotationEngineApiTest.java,67,assertNull(test.tested.dependency);
True,test/org/mockitousage/basicapi/MockInjectionTest.java,test/org/mockitousage/basicapi/MockInjectionTest.java,1,package org.mockitousage.basicapi;
True,test/org/mockitousage/basicapi/MockInjectionTest.java,test/org/mockitousage/basicapi/MockInjectionTest.java,3,import org.junit.Before;
True,test/org/mockitousage/basicapi/MockInjectionTest.java,test/org/mockitousage/basicapi/MockInjectionTest.java,4,import org.junit.Test;
True,test/org/mockitousage/basicapi/MockInjectionTest.java,test/org/mockitousage/basicapi/MockInjectionTest.java,5,import org.mockito.InjectMock;
True,test/org/mockitousage/basicapi/MockInjectionTest.java,test/org/mockitousage/basicapi/MockInjectionTest.java,6,import org.mockito.Mock;
True,test/org/mockitousage/basicapi/MockInjectionTest.java,test/org/mockitousage/basicapi/MockInjectionTest.java,7,import org.mockito.MockitoAnnotations;
True,test/org/mockitousage/basicapi/MockInjectionTest.java,test/org/mockitousage/basicapi/MockInjectionTest.java,8,import org.mockito.Spy;
True,test/org/mockitousage/basicapi/MockInjectionTest.java,test/org/mockitousage/basicapi/MockInjectionTest.java,9,import org.mockitoutil.TestBase;
True,test/org/mockitousage/basicapi/MockInjectionTest.java,test/org/mockitousage/basicapi/MockInjectionTest.java,11,import java.util.*;
True,test/org/mockitousage/basicapi/MockInjectionTest.java,test/org/mockitousage/basicapi/MockInjectionTest.java,13,public class MockInjectionTest extends TestBase {
True,test/org/mockitousage/basicapi/MockInjectionTest.java,test/org/mockitousage/basicapi/MockInjectionTest.java,15,private SuperUnderTest superUnderTestWithoutInjection = new SuperUnderTest();
True,test/org/mockitousage/basicapi/MockInjectionTest.java,test/org/mockitousage/basicapi/MockInjectionTest.java,16,@InjectMock private SuperUnderTest superUnderTest = new SuperUnderTest();
True,test/org/mockitousage/basicapi/MockInjectionTest.java,test/org/mockitousage/basicapi/MockInjectionTest.java,17,@InjectMock private BaseUnderTest baseUnderTest = new BaseUnderTest();
True,test/org/mockitousage/basicapi/MockInjectionTest.java,test/org/mockitousage/basicapi/MockInjectionTest.java,18,@InjectMock private SubUnderTest subUnderTest = new SubUnderTest();
True,test/org/mockitousage/basicapi/MockInjectionTest.java,test/org/mockitousage/basicapi/MockInjectionTest.java,19,@InjectMock private OtherBaseUnderTest otherBaseUnderTest = new OtherBaseUnderTest();
True,test/org/mockitousage/basicapi/MockInjectionTest.java,test/org/mockitousage/basicapi/MockInjectionTest.java,20,@Mock private Map map;
True,test/org/mockitousage/basicapi/MockInjectionTest.java,test/org/mockitousage/basicapi/MockInjectionTest.java,21,@Mock private List list;
True,test/org/mockitousage/basicapi/MockInjectionTest.java,test/org/mockitousage/basicapi/MockInjectionTest.java,22,@Mock private Set set;
True,test/org/mockitousage/basicapi/MockInjectionTest.java,test/org/mockitousage/basicapi/MockInjectionTest.java,23,@Mock private Set histogram1;
True,test/org/mockitousage/basicapi/MockInjectionTest.java,test/org/mockitousage/basicapi/MockInjectionTest.java,24,@Mock private Set histogram2;
True,test/org/mockitousage/basicapi/MockInjectionTest.java,test/org/mockitousage/basicapi/MockInjectionTest.java,25,@Spy private TreeSet searchTree = new TreeSet();
True,test/org/mockitousage/basicapi/MockInjectionTest.java,test/org/mockitousage/basicapi/MockInjectionTest.java,27,@Before
True,test/org/mockitousage/basicapi/MockInjectionTest.java,test/org/mockitousage/basicapi/MockInjectionTest.java,28,public void init() {
True,test/org/mockitousage/basicapi/MockInjectionTest.java,test/org/mockitousage/basicapi/MockInjectionTest.java,29,"// initMocks called in TestBase Before method, so instances ar not the same"
True,test/org/mockitousage/basicapi/MockInjectionTest.java,test/org/mockitousage/basicapi/MockInjectionTest.java,30,MockitoAnnotations.initMocks(this);
True,test/org/mockitousage/basicapi/MockInjectionTest.java,test/org/mockitousage/basicapi/MockInjectionTest.java,33,@Test
True,test/org/mockitousage/basicapi/MockInjectionTest.java,test/org/mockitousage/basicapi/MockInjectionTest.java,34,public void shouldInjectMocksIfAnnotated() {
True,test/org/mockitousage/basicapi/MockInjectionTest.java,test/org/mockitousage/basicapi/MockInjectionTest.java,35,MockitoAnnotations.initMocks(this);
True,test/org/mockitousage/basicapi/MockInjectionTest.java,test/org/mockitousage/basicapi/MockInjectionTest.java,36,"assertSame(list, superUnderTest.getAList());"
True,test/org/mockitousage/basicapi/MockInjectionTest.java,test/org/mockitousage/basicapi/MockInjectionTest.java,39,@Test
True,test/org/mockitousage/basicapi/MockInjectionTest.java,test/org/mockitousage/basicapi/MockInjectionTest.java,40,public void shouldNotInjectIfNotAnnotated() {
True,test/org/mockitousage/basicapi/MockInjectionTest.java,test/org/mockitousage/basicapi/MockInjectionTest.java,41,MockitoAnnotations.initMocks(this);
True,test/org/mockitousage/basicapi/MockInjectionTest.java,test/org/mockitousage/basicapi/MockInjectionTest.java,42,assertNull(superUnderTestWithoutInjection.getAList());
True,test/org/mockitousage/basicapi/MockInjectionTest.java,test/org/mockitousage/basicapi/MockInjectionTest.java,45,@Test
True,test/org/mockitousage/basicapi/MockInjectionTest.java,test/org/mockitousage/basicapi/MockInjectionTest.java,46,public void shouldInjectMocksForClassHierarchyIfAnnotated() {
True,test/org/mockitousage/basicapi/MockInjectionTest.java,test/org/mockitousage/basicapi/MockInjectionTest.java,47,MockitoAnnotations.initMocks(this);
True,test/org/mockitousage/basicapi/MockInjectionTest.java,test/org/mockitousage/basicapi/MockInjectionTest.java,48,"assertSame(list, baseUnderTest.getAList());"
True,test/org/mockitousage/basicapi/MockInjectionTest.java,test/org/mockitousage/basicapi/MockInjectionTest.java,49,"assertSame(map, baseUnderTest.getAMap());"
True,test/org/mockitousage/basicapi/MockInjectionTest.java,test/org/mockitousage/basicapi/MockInjectionTest.java,52,@Test
True,test/org/mockitousage/basicapi/MockInjectionTest.java,test/org/mockitousage/basicapi/MockInjectionTest.java,53,public void shouldInjectMocksByName() {
True,test/org/mockitousage/basicapi/MockInjectionTest.java,test/org/mockitousage/basicapi/MockInjectionTest.java,54,MockitoAnnotations.initMocks(this);
True,test/org/mockitousage/basicapi/MockInjectionTest.java,test/org/mockitousage/basicapi/MockInjectionTest.java,55,"assertSame(histogram1, subUnderTest.getHistogram1());"
True,test/org/mockitousage/basicapi/MockInjectionTest.java,test/org/mockitousage/basicapi/MockInjectionTest.java,56,"assertSame(histogram2, subUnderTest.getHistogram2());"
True,test/org/mockitousage/basicapi/MockInjectionTest.java,test/org/mockitousage/basicapi/MockInjectionTest.java,59,@Test
True,test/org/mockitousage/basicapi/MockInjectionTest.java,test/org/mockitousage/basicapi/MockInjectionTest.java,60,public void shouldInjectSpies() {
True,test/org/mockitousage/basicapi/MockInjectionTest.java,test/org/mockitousage/basicapi/MockInjectionTest.java,61,MockitoAnnotations.initMocks(this);
True,test/org/mockitousage/basicapi/MockInjectionTest.java,test/org/mockitousage/basicapi/MockInjectionTest.java,62,"assertSame(searchTree, otherBaseUnderTest.getSearchTree());"
True,test/org/mockitousage/basicapi/MockInjectionTest.java,test/org/mockitousage/basicapi/MockInjectionTest.java,65,class SuperUnderTest {
True,test/org/mockitousage/basicapi/MockInjectionTest.java,test/org/mockitousage/basicapi/MockInjectionTest.java,67,private List aList;
True,test/org/mockitousage/basicapi/MockInjectionTest.java,test/org/mockitousage/basicapi/MockInjectionTest.java,69,public List getAList() {
True,test/org/mockitousage/basicapi/MockInjectionTest.java,test/org/mockitousage/basicapi/MockInjectionTest.java,70,return aList;
True,test/org/mockitousage/basicapi/MockInjectionTest.java,test/org/mockitousage/basicapi/MockInjectionTest.java,74,class BaseUnderTest extends SuperUnderTest {
True,test/org/mockitousage/basicapi/MockInjectionTest.java,test/org/mockitousage/basicapi/MockInjectionTest.java,75,private Map aMap;
True,test/org/mockitousage/basicapi/MockInjectionTest.java,test/org/mockitousage/basicapi/MockInjectionTest.java,77,public Map getAMap() {
True,test/org/mockitousage/basicapi/MockInjectionTest.java,test/org/mockitousage/basicapi/MockInjectionTest.java,78,return aMap;
True,test/org/mockitousage/basicapi/MockInjectionTest.java,test/org/mockitousage/basicapi/MockInjectionTest.java,82,class OtherBaseUnderTest extends SuperUnderTest {
True,test/org/mockitousage/basicapi/MockInjectionTest.java,test/org/mockitousage/basicapi/MockInjectionTest.java,83,private TreeSet searchTree;
True,test/org/mockitousage/basicapi/MockInjectionTest.java,test/org/mockitousage/basicapi/MockInjectionTest.java,85,public TreeSet getSearchTree() {
True,test/org/mockitousage/basicapi/MockInjectionTest.java,test/org/mockitousage/basicapi/MockInjectionTest.java,86,return searchTree;
True,test/org/mockitousage/basicapi/MockInjectionTest.java,test/org/mockitousage/basicapi/MockInjectionTest.java,90,class SubUnderTest extends BaseUnderTest {
True,test/org/mockitousage/basicapi/MockInjectionTest.java,test/org/mockitousage/basicapi/MockInjectionTest.java,91,private Set histogram1;
True,test/org/mockitousage/basicapi/MockInjectionTest.java,test/org/mockitousage/basicapi/MockInjectionTest.java,92,private Set histogram2;
True,test/org/mockitousage/basicapi/MockInjectionTest.java,test/org/mockitousage/basicapi/MockInjectionTest.java,94,public Set getHistogram1() {
True,test/org/mockitousage/basicapi/MockInjectionTest.java,test/org/mockitousage/basicapi/MockInjectionTest.java,95,return histogram1;
True,test/org/mockitousage/basicapi/MockInjectionTest.java,test/org/mockitousage/basicapi/MockInjectionTest.java,98,public Set getHistogram2() {
True,test/org/mockitousage/basicapi/MockInjectionTest.java,test/org/mockitousage/basicapi/MockInjectionTest.java,99,return histogram2;
True,test/org/mockitousage/basicapi/SpyAnnotationTest.java,test/org/mockitousage/basicapi/SpyAnnotationTest.java,1,package org.mockitousage.basicapi;
True,test/org/mockitousage/basicapi/SpyAnnotationTest.java,test/org/mockitousage/basicapi/SpyAnnotationTest.java,3,import static org.mockito.Mockito.*;
True,test/org/mockitousage/basicapi/SpyAnnotationTest.java,test/org/mockitousage/basicapi/SpyAnnotationTest.java,5,import org.junit.Test;
True,test/org/mockitousage/basicapi/SpyAnnotationTest.java,test/org/mockitousage/basicapi/SpyAnnotationTest.java,6,import org.mockito.MockitoAnnotations;
True,test/org/mockitousage/basicapi/SpyAnnotationTest.java,test/org/mockitousage/basicapi/SpyAnnotationTest.java,7,import org.mockito.Spy;
True,test/org/mockitousage/basicapi/SpyAnnotationTest.java,test/org/mockitousage/basicapi/SpyAnnotationTest.java,8,import org.mockito.exceptions.base.MockitoException;
True,test/org/mockitousage/basicapi/SpyAnnotationTest.java,test/org/mockitousage/basicapi/SpyAnnotationTest.java,9,import org.mockitoutil.TestBase;
True,test/org/mockitousage/basicapi/SpyAnnotationTest.java,test/org/mockitousage/basicapi/SpyAnnotationTest.java,11,import java.util.ArrayList;
True,test/org/mockitousage/basicapi/SpyAnnotationTest.java,test/org/mockitousage/basicapi/SpyAnnotationTest.java,12,import java.util.List;
True,test/org/mockitousage/basicapi/SpyAnnotationTest.java,test/org/mockitousage/basicapi/SpyAnnotationTest.java,14,public class SpyAnnotationTest extends TestBase {
True,test/org/mockitousage/basicapi/SpyAnnotationTest.java,test/org/mockitousage/basicapi/SpyAnnotationTest.java,15,//TODO check if works when base class has initMocks()
True,test/org/mockitousage/basicapi/SpyAnnotationTest.java,test/org/mockitousage/basicapi/SpyAnnotationTest.java,16,@Spy
True,test/org/mockitousage/basicapi/SpyAnnotationTest.java,test/org/mockitousage/basicapi/SpyAnnotationTest.java,17,final List spiedList = new ArrayList();
True,test/org/mockitousage/basicapi/SpyAnnotationTest.java,test/org/mockitousage/basicapi/SpyAnnotationTest.java,19,@Test
True,test/org/mockitousage/basicapi/SpyAnnotationTest.java,test/org/mockitousage/basicapi/SpyAnnotationTest.java,20,public void shouldInitSpies() throws Exception {
True,test/org/mockitousage/basicapi/SpyAnnotationTest.java,test/org/mockitousage/basicapi/SpyAnnotationTest.java,21,"doReturn(""foo"").when(spiedList).get(10);"
True,test/org/mockitousage/basicapi/SpyAnnotationTest.java,test/org/mockitousage/basicapi/SpyAnnotationTest.java,23,"assertEquals(""foo"", spiedList.get(10));"
True,test/org/mockitousage/basicapi/SpyAnnotationTest.java,test/org/mockitousage/basicapi/SpyAnnotationTest.java,24,assertTrue(spiedList.isEmpty());
True,test/org/mockitousage/basicapi/SpyAnnotationTest.java,test/org/mockitousage/basicapi/SpyAnnotationTest.java,27,@Test(expected = MockitoException.class)
True,test/org/mockitousage/basicapi/SpyAnnotationTest.java,test/org/mockitousage/basicapi/SpyAnnotationTest.java,28,public void shouldFailIfFieldIsNotInitialized() throws Exception {
True,test/org/mockitousage/basicapi/SpyAnnotationTest.java,test/org/mockitousage/basicapi/SpyAnnotationTest.java,29,class FailingSpy {
True,test/org/mockitousage/basicapi/SpyAnnotationTest.java,test/org/mockitousage/basicapi/SpyAnnotationTest.java,30,@Spy private List mySpy;
True,test/org/mockitousage/basicapi/SpyAnnotationTest.java,test/org/mockitousage/basicapi/SpyAnnotationTest.java,32,public List getMySpy() {
True,test/org/mockitousage/basicapi/SpyAnnotationTest.java,test/org/mockitousage/basicapi/SpyAnnotationTest.java,33,return mySpy;
True,test/org/mockitousage/basicapi/SpyAnnotationTest.java,test/org/mockitousage/basicapi/SpyAnnotationTest.java,37,MockitoAnnotations.initMocks(new FailingSpy());
True,test/org/mockitousage/basicapi/SpyAnnotationTest.java,test/org/mockitousage/basicapi/SpyAnnotationTest.java,40,@Test(expected = IndexOutOfBoundsException.class)
True,test/org/mockitousage/basicapi/SpyAnnotationTest.java,test/org/mockitousage/basicapi/SpyAnnotationTest.java,41,public void shouldResetSpies() throws Exception {
True,test/org/mockitousage/basicapi/SpyAnnotationTest.java,test/org/mockitousage/basicapi/SpyAnnotationTest.java,42,spiedList.get(10); // see shouldInitSpy
True,test/org/mockitousage/basicapi/SpyAnnotationTest.java,test/org/mockitousage/basicapi/SpyAnnotationTest.java,45,"//TODO unsupported combinations of annotations (spy - captor, spy - mock)"
True,test/org/mockitousage/basicapi/SpyAnnotationTest.java,test/org/mockitousage/basicapi/SpyAnnotationTest.java,46,//TODO unsupported combinations of annotations (captor - mock)
True,test/org/mockitousage/junitrunner/JUnit44RunnerTest.java,test/org/mockitousage/junitrunner/JUnit44RunnerTest.java,7,import static org.junit.Assert.assertSame;
True,test/org/mockitousage/junitrunner/JUnit44RunnerTest.java,test/org/mockitousage/junitrunner/JUnit44RunnerTest.java,8,import static org.junit.Assert.assertEquals;
True,test/org/mockitousage/junitrunner/JUnit44RunnerTest.java,test/org/mockitousage/junitrunner/JUnit44RunnerTest.java,18,import org.mockito.InjectMock;
False,test/org/mockitousage/junitrunner/JUnit44RunnerTest.java,test/org/mockitousage/junitrunner/JUnit44RunnerTest.java,22,ublic class JUnit44RunnerTest extends TestBase {
True,test/org/mockitousage/junitrunner/JUnit44RunnerTest.java,test/org/mockitousage/junitrunner/JUnit44RunnerTest.java,25,public class JUnit44RunnerTest {
True,test/org/mockitousage/junitrunner/JUnit44RunnerTest.java,test/org/mockitousage/junitrunner/JUnit44RunnerTest.java,27,@InjectMock
True,test/org/mockitousage/junitrunner/JUnit44RunnerTest.java,test/org/mockitousage/junitrunner/JUnit44RunnerTest.java,28,private ListDependent listDependent = new ListDependent();
True,test/org/mockitousage/junitrunner/JUnit44RunnerTest.java,test/org/mockitousage/junitrunner/JUnit44RunnerTest.java,38,@Test
True,test/org/mockitousage/junitrunner/JUnit44RunnerTest.java,test/org/mockitousage/junitrunner/JUnit44RunnerTest.java,39,public void shouldInjectMocksUsingRunner() {
True,test/org/mockitousage/junitrunner/JUnit44RunnerTest.java,test/org/mockitousage/junitrunner/JUnit44RunnerTest.java,40,"assertSame(list, listDependent.getList());"
True,test/org/mockitousage/junitrunner/JUnit44RunnerTest.java,test/org/mockitousage/junitrunner/JUnit44RunnerTest.java,52,class ListDependent {
True,test/org/mockitousage/junitrunner/JUnit44RunnerTest.java,test/org/mockitousage/junitrunner/JUnit44RunnerTest.java,53,private List list;
True,test/org/mockitousage/junitrunner/JUnit44RunnerTest.java,test/org/mockitousage/junitrunner/JUnit44RunnerTest.java,55,public List getList() {
True,test/org/mockitousage/junitrunner/JUnit44RunnerTest.java,test/org/mockitousage/junitrunner/JUnit44RunnerTest.java,56,return list;
False,test/org/mockitousage/junitrunner/JUnit45RunnerTest.java,test/org/mockitousage/junitrunner/JUnit45RunnerTest.java,7,mport static org.mockito.Mockito.verify;
False,test/org/mockitousage/junitrunner/JUnit45RunnerTest.java,test/org/mockitousage/junitrunner/JUnit45RunnerTest.java,8,mport static org.mockitousage.junitrunner.Filters.methodNameContains;
True,test/org/mockitousage/junitrunner/JUnit45RunnerTest.java,test/org/mockitousage/junitrunner/JUnit45RunnerTest.java,7,import static org.junit.Assert.*;
True,test/org/mockitousage/junitrunner/JUnit45RunnerTest.java,test/org/mockitousage/junitrunner/JUnit45RunnerTest.java,8,import static org.mockito.Mockito.*;
True,test/org/mockitousage/junitrunner/JUnit45RunnerTest.java,test/org/mockitousage/junitrunner/JUnit45RunnerTest.java,9,import static org.mockitousage.junitrunner.Filters.*;
True,test/org/mockitousage/junitrunner/JUnit45RunnerTest.java,test/org/mockitousage/junitrunner/JUnit45RunnerTest.java,15,import org.mockito.InjectMock;
False,test/org/mockitousage/junitrunner/JUnit45RunnerTest.java,test/org/mockitousage/junitrunner/JUnit45RunnerTest.java,16,mport org.mockitoutil.TestBase;
False,test/org/mockitousage/junitrunner/JUnit45RunnerTest.java,test/org/mockitousage/junitrunner/JUnit45RunnerTest.java,20,ublic class JUnit45RunnerTest extends TestBase {
True,test/org/mockitousage/junitrunner/JUnit45RunnerTest.java,test/org/mockitousage/junitrunner/JUnit45RunnerTest.java,21,public class JUnit45RunnerTest {
True,test/org/mockitousage/junitrunner/JUnit45RunnerTest.java,test/org/mockitousage/junitrunner/JUnit45RunnerTest.java,23,@InjectMock private ListDependent listDependent = new ListDependent();
True,test/org/mockitousage/junitrunner/JUnit45RunnerTest.java,test/org/mockitousage/junitrunner/JUnit45RunnerTest.java,32,@Test
True,test/org/mockitousage/junitrunner/JUnit45RunnerTest.java,test/org/mockitousage/junitrunner/JUnit45RunnerTest.java,33,public void shouldInjectMocksUsingRunner() {
True,test/org/mockitousage/junitrunner/JUnit45RunnerTest.java,test/org/mockitousage/junitrunner/JUnit45RunnerTest.java,34,assertNotNull(list);
True,test/org/mockitousage/junitrunner/JUnit45RunnerTest.java,test/org/mockitousage/junitrunner/JUnit45RunnerTest.java,35,"assertSame(list, listDependent.getList());"
True,test/org/mockitousage/junitrunner/JUnit45RunnerTest.java,test/org/mockitousage/junitrunner/JUnit45RunnerTest.java,47,class ListDependent {
True,test/org/mockitousage/junitrunner/JUnit45RunnerTest.java,test/org/mockitousage/junitrunner/JUnit45RunnerTest.java,48,private List list;
True,test/org/mockitousage/junitrunner/JUnit45RunnerTest.java,test/org/mockitousage/junitrunner/JUnit45RunnerTest.java,50,public List getList() {
True,test/org/mockitousage/junitrunner/JUnit45RunnerTest.java,test/org/mockitousage/junitrunner/JUnit45RunnerTest.java,51,return list;
