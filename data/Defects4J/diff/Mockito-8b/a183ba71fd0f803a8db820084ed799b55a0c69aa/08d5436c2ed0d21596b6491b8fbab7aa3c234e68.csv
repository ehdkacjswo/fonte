is_addition,old_file_path,new_file_path,line_num,content
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,2, Copyright (c) 2007 Mockito contributors
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,3, This program is made available under the terms of the MIT License.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,2,* Copyright (c) 2007 Mockito contributors
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,3,* This program is made available under the terms of the MIT License.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,829,* </p>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,830, <strong>Verification API does not support 'chaining'</strong> so deep stub doesn't change how you do verification.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,836,* </p>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,838,* <p>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,839,* Good quote I've seen one day on the web: <strong>every time a mock returns a mock a fairy dies</strong>.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,840,* </p>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,842,* <p>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,843,* Please note that this answer will return existing mocks that matches the stub. This
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,844,* behavior is ok with deep stubs and allows verification to work on the last mock of the chain.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,845,* <pre>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,846,"*   when(mock.getBar(anyString()).getThingy().getName()).thenReturn(""deep"");"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,848,"*   mock.getBar(""candy bar"").getThingy().getName();"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,850,"*   assertSame(mock.getBar(anyString()).getThingy().getName(), mock.getBar(anyString()).getThingy().getName());"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,851,"*   verify(mock.getBar(""candy bar"").getThingy()).getName();"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,852,*   verify(mock.getBar(anyString()).getThingy()).getName();
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,853,* </pre>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,854,* </p>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,837, Good quote I've seen one day on the web: <strong>every time a mock returns a mock a fairy dies</strong>.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,857,* Verification only works with the last mock in the chain. You can use verification modes.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,858,* <pre>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,859,"*   when(person.getAddress(anyString()).getStreet().getName()).thenReturn(""deep"");"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,860,"*   when(person.getAddress(anyString()).getStreet(Locale.ITALIAN).getName()).thenReturn(""deep"");"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,861,"*   when(person.getAddress(anyString()).getStreet(Locale.CHINESE).getName()).thenReturn(""deep"");"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,863,"*   person.getAddress(""the docks"").getStreet().getName();"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,864,"*   person.getAddress(""the docks"").getStreet().getLongName();"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,865,"*   person.getAddress(""the docks"").getStreet(Locale.ITALIAN).getName();"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,866,"*   person.getAddress(""the docks"").getStreet(Locale.CHINESE).getName();"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,868,*   // note that we are actually referring to the very last mock in the stubbing chain.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,869,*   InOrder inOrder = inOrder(
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,870,"*       person.getAddress(""the docks"").getStreet(),"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,871,"*       person.getAddress(""the docks"").getStreet(Locale.CHINESE),"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,872,"*       person.getAddress(""the docks"").getStreet(Locale.ITALIAN)"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,874,"*   inOrder.verify(person.getAddress(""the docks"").getStreet(), times(1)).getName();"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,875,"*   inOrder.verify(person.getAddress(""the docks"").getStreet()).getLongName();"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,876,"*   inOrder.verify(person.getAddress(""the docks"").getStreet(Locale.ITALIAN), atLeast(1)).getName();"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,877,"*   inOrder.verify(person.getAddress(""the docks"").getStreet(Locale.CHINESE)).getName();"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,878,* </pre>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,879,* </p>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,894,* </p>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,853, (for example: is a primitive or a final class). This is because of java type system.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,898,* (for example: is a primitive or a final class). This is because of java type system.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,899,* </p>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1239,* @return OngoingStubbing object used to stub fluently.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1240,*         <strong>Do not</strong> create a reference to this returned object.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1279, @param <T>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1327,* @param <T> The Type of the mocks
False,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,2, Copyright (c) 2007 Mockito contributors
False,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,3, This program is made available under the terms of the MIT License.
True,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,2,* Copyright (c) 2007 Mockito contributors
True,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,3,* This program is made available under the terms of the MIT License.
False,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,7,mport java.io.Serializable;
True,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,16,import java.io.Serializable;
True,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,19,* Returning deep stub implementation.
True,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,21,* Will return previously created mock if the invocation matches.
True,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,23,* @see Mockito#RETURNS_DEEP_STUBS
True,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,24,* @see org.mockito.Answers#RETURNS_DEEP_STUBS
False,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,26,f (!new MockCreationValidator().isTypeMockable(clz))
True,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,35,if (!new MockCreationValidator().isTypeMockable(clz)) {
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,2, Copyright (c) 2007 Mockito contributors
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,3, This program is made available under the terms of the MIT License.
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,2,* Copyright (c) 2007 Mockito contributors
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,3,* This program is made available under the terms of the MIT License.
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,7,mport static org.mockito.BDDMockito.given;
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,8,mport static org.mockito.Matchers.anyInt;
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,9,mport static org.mockito.Matchers.anyString;
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,10,mport static org.mockito.Matchers.eq;
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,11,mport static org.mockito.Mockito.*;
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,7,import org.fest.assertions.Assertions;
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,8,import org.junit.Test;
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,9,import org.mockito.InOrder;
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,10,import org.mockito.exceptions.verification.TooManyActualInvocations;
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,11,import org.mockitoutil.TestBase;
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,13,import javax.net.SocketFactory;
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,18,mport javax.net.SocketFactory;
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,20,mport org.junit.Test;
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,21,mport org.mockitoutil.TestBase;
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,19,import static org.mockito.BDDMockito.given;
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,20,import static org.mockito.Matchers.anyInt;
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,21,import static org.mockito.Matchers.anyString;
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,22,import static org.mockito.Matchers.eq;
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,23,import static org.mockito.Mockito.*;
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,63,public String getLongName() {
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,64,return name;
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,62,tatic final class FinalClass {};
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,68,static final class FinalClass {}
False,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,218,ublic void shouldVerificationWorkWithArgumentMatchersInNestedCalls() throws Exception {
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,224,public void verification_work_with_argument_Matchers_in_nested_calls() throws Exception {
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,235,@Test
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,236,public void deep_stub_return_same_mock_instance_if_invocation_matchers_matches() throws Exception {
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,237,"when(person.getAddress(anyString()).getStreet().getName()).thenReturn(""deep"");"
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,239,"person.getAddress(""the docks"").getStreet().getName();"
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,241,"assertSame(person.getAddress(""the docks"").getStreet(), person.getAddress(anyString()).getStreet());"
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,242,"assertSame(person.getAddress(anyString()).getStreet(), person.getAddress(anyString()).getStreet());"
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,243,"assertSame(person.getAddress(""the docks"").getStreet(), person.getAddress(""the docks"").getStreet());"
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,244,"assertSame(person.getAddress(anyString()).getStreet(), person.getAddress(""the docks"").getStreet());"
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,245,"assertSame(person.getAddress(""111 Mock Lane"").getStreet(), person.getAddress(""the docks"").getStreet());"
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,248,@Test
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,249,public void times_never_atLeast_atMost_verificationModes_should_work() throws Exception {
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,250,"when(person.getAddress(anyString()).getStreet().getName()).thenReturn(""deep"");"
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,252,"person.getAddress(""the docks"").getStreet().getName();"
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,253,"person.getAddress(""the docks"").getStreet().getName();"
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,254,"person.getAddress(""the docks"").getStreet().getName();"
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,255,"person.getAddress(""the docks"").getStreet(Locale.ITALIAN).getName();"
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,257,"verify(person.getAddress(""the docks"").getStreet(), times(3)).getName();"
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,258,"verify(person.getAddress(""the docks"").getStreet(Locale.CHINESE), never()).getName();"
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,259,"verify(person.getAddress(""the docks"").getStreet(Locale.ITALIAN), atMost(1)).getName();"
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,263,@Test
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,264,public void inOrder_only_work_on_the_very_last_mock_but_it_works() throws Exception {
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,265,"when(person.getAddress(anyString()).getStreet().getName()).thenReturn(""deep"");"
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,266,"when(person.getAddress(anyString()).getStreet(Locale.ITALIAN).getName()).thenReturn(""deep"");"
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,267,"when(person.getAddress(anyString()).getStreet(Locale.CHINESE).getName()).thenReturn(""deep"");"
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,269,"person.getAddress(""the docks"").getStreet().getName();"
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,270,"person.getAddress(""the docks"").getStreet().getLongName();"
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,271,"person.getAddress(""the docks"").getStreet(Locale.ITALIAN).getName();"
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,272,"person.getAddress(""the docks"").getStreet(Locale.CHINESE).getName();"
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,274,InOrder inOrder = inOrder(
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,275,"person.getAddress(""the docks"").getStreet(),"
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,276,"person.getAddress(""the docks"").getStreet(Locale.CHINESE),"
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,277,"person.getAddress(""the docks"").getStreet(Locale.ITALIAN)"
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,279,"inOrder.verify(person.getAddress(""the docks"").getStreet(), times(1)).getName();"
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,280,"inOrder.verify(person.getAddress(""the docks"").getStreet()).getLongName();"
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,281,"inOrder.verify(person.getAddress(""the docks"").getStreet(Locale.ITALIAN), atLeast(1)).getName();"
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,282,"inOrder.verify(person.getAddress(""the docks"").getStreet(Locale.CHINESE)).getName();"
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,285,@Test
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,286,public void verificationMode_only_work_on_the_last_returned_mock() throws Exception {
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,287,// 1st invocation on Address mock (stubbing)
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,288,"when(person.getAddress(""the docks"").getStreet().getName()).thenReturn(""deep"");"
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,290,// 2nd invocation on Address mock (real)
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,291,"person.getAddress(""the docks"").getStreet().getName();"
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,292,// 3rd invocation on Address mock (verification)
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,293,// (Address mock is not in verification mode)
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,294,"verify(person.getAddress(""the docks"").getStreet()).getName();"
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,296,try {
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,297,"verify(person.getAddress(""the docks""), times(1)).getStreet();"
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,298,fail();
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,299,} catch (TooManyActualInvocations e) {
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,300,Assertions.assertThat(e.getMessage())
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,301,".contains(""Wanted 1 time"")"
True,test/org/mockitousage/stubbing/DeepStubbingTest.java,test/org/mockitousage/stubbing/DeepStubbingTest.java,302,".contains(""But was 3 times"");"
