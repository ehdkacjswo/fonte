is_addition,old_file_path,new_file_path,line_num,content
True,test/org/mockito/internal/configuration/plugins/PluginFinderTest.java,test/org/mockito/internal/configuration/plugins/PluginFinderTest.java,15,import static org.mockito.Matchers.anyString;
True,test/org/mockito/internal/configuration/plugins/PluginFinderTest.java,test/org/mockito/internal/configuration/plugins/PluginFinderTest.java,16,import static org.mockito.Mockito.when;
True,test/org/mockito/internal/configuration/plugins/PluginFinderTest.java,test/org/mockito/internal/configuration/plugins/PluginFinderTest.java,40,"when(switcher.isEnabled(""foo.Foo"")).thenReturn(true);"
False,test/org/mockito/internal/configuration/plugins/PluginFinderTest.java,test/org/mockito/internal/configuration/plugins/PluginFinderTest.java,46,Test public void multiple_implementations() {
False,test/org/mockito/internal/configuration/plugins/PluginFinderTest.java,test/org/mockito/internal/configuration/plugins/PluginFinderTest.java,47,ail();
True,test/org/mockito/internal/configuration/plugins/PluginFinderTest.java,test/org/mockito/internal/configuration/plugins/PluginFinderTest.java,49,@Test public void single_implementation_disabled() throws Exception {
True,test/org/mockito/internal/configuration/plugins/PluginFinderTest.java,test/org/mockito/internal/configuration/plugins/PluginFinderTest.java,50,File f = tmp.newFile();
True,test/org/mockito/internal/configuration/plugins/PluginFinderTest.java,test/org/mockito/internal/configuration/plugins/PluginFinderTest.java,51,"when(switcher.isEnabled(""foo.Foo"")).thenReturn(false);"
True,test/org/mockito/internal/configuration/plugins/PluginFinderTest.java,test/org/mockito/internal/configuration/plugins/PluginFinderTest.java,53,//when
True,test/org/mockito/internal/configuration/plugins/PluginFinderTest.java,test/org/mockito/internal/configuration/plugins/PluginFinderTest.java,54,"IOUtil.writeText(""  foo.Foo  "", f);"
True,test/org/mockito/internal/configuration/plugins/PluginFinderTest.java,test/org/mockito/internal/configuration/plugins/PluginFinderTest.java,56,//then
True,test/org/mockito/internal/configuration/plugins/PluginFinderTest.java,test/org/mockito/internal/configuration/plugins/PluginFinderTest.java,57,"assertEquals(null, finder.findPluginClass((Iterable) asList(f.toURI().toURL())));"
False,test/org/mockito/internal/configuration/plugins/PluginFinderTest.java,test/org/mockito/internal/configuration/plugins/PluginFinderTest.java,50,Test public void multiple_empty_implementations() {
False,test/org/mockito/internal/configuration/plugins/PluginFinderTest.java,test/org/mockito/internal/configuration/plugins/PluginFinderTest.java,51,ail();
True,test/org/mockito/internal/configuration/plugins/PluginFinderTest.java,test/org/mockito/internal/configuration/plugins/PluginFinderTest.java,60,@Test public void multiple_implementations_only_one_enabled() throws Exception {
True,test/org/mockito/internal/configuration/plugins/PluginFinderTest.java,test/org/mockito/internal/configuration/plugins/PluginFinderTest.java,61,File f1 = tmp.newFile(); File f2 = tmp.newFile();
True,test/org/mockito/internal/configuration/plugins/PluginFinderTest.java,test/org/mockito/internal/configuration/plugins/PluginFinderTest.java,63,"when(switcher.isEnabled(""Bar"")).thenReturn(true);"
True,test/org/mockito/internal/configuration/plugins/PluginFinderTest.java,test/org/mockito/internal/configuration/plugins/PluginFinderTest.java,65,//when
True,test/org/mockito/internal/configuration/plugins/PluginFinderTest.java,test/org/mockito/internal/configuration/plugins/PluginFinderTest.java,66,"IOUtil.writeText(""Foo"", f1); IOUtil.writeText(""Bar"", f2);"
True,test/org/mockito/internal/configuration/plugins/PluginFinderTest.java,test/org/mockito/internal/configuration/plugins/PluginFinderTest.java,68,//then
True,test/org/mockito/internal/configuration/plugins/PluginFinderTest.java,test/org/mockito/internal/configuration/plugins/PluginFinderTest.java,69,"assertEquals(""Bar"", finder.findPluginClass((Iterable) asList(f1.toURI().toURL(), f2.toURI().toURL())));"
False,test/org/mockito/internal/configuration/plugins/PluginFinderTest.java,test/org/mockito/internal/configuration/plugins/PluginFinderTest.java,54,Test public void single_usable_impl() {
False,test/org/mockito/internal/configuration/plugins/PluginFinderTest.java,test/org/mockito/internal/configuration/plugins/PluginFinderTest.java,55,ail();
True,test/org/mockito/internal/configuration/plugins/PluginFinderTest.java,test/org/mockito/internal/configuration/plugins/PluginFinderTest.java,72,@Test public void multiple_implementations_only_one_useful() throws Exception {
True,test/org/mockito/internal/configuration/plugins/PluginFinderTest.java,test/org/mockito/internal/configuration/plugins/PluginFinderTest.java,73,File f1 = tmp.newFile(); File f2 = tmp.newFile();
True,test/org/mockito/internal/configuration/plugins/PluginFinderTest.java,test/org/mockito/internal/configuration/plugins/PluginFinderTest.java,75,when(switcher.isEnabled(anyString())).thenReturn(true);
True,test/org/mockito/internal/configuration/plugins/PluginFinderTest.java,test/org/mockito/internal/configuration/plugins/PluginFinderTest.java,77,//when
True,test/org/mockito/internal/configuration/plugins/PluginFinderTest.java,test/org/mockito/internal/configuration/plugins/PluginFinderTest.java,78,"IOUtil.writeText(""   "", f1); IOUtil.writeText(""X"", f2);"
True,test/org/mockito/internal/configuration/plugins/PluginFinderTest.java,test/org/mockito/internal/configuration/plugins/PluginFinderTest.java,80,//then
True,test/org/mockito/internal/configuration/plugins/PluginFinderTest.java,test/org/mockito/internal/configuration/plugins/PluginFinderTest.java,81,"assertEquals(""X"", finder.findPluginClass((Iterable) asList(f1.toURI().toURL(), f2.toURI().toURL())));"
True,test/org/mockito/internal/configuration/plugins/PluginFinderTest.java,test/org/mockito/internal/configuration/plugins/PluginFinderTest.java,84,@Test public void multiple_empty_implementations() throws Exception {
True,test/org/mockito/internal/configuration/plugins/PluginFinderTest.java,test/org/mockito/internal/configuration/plugins/PluginFinderTest.java,85,File f1 = tmp.newFile(); File f2 = tmp.newFile();
True,test/org/mockito/internal/configuration/plugins/PluginFinderTest.java,test/org/mockito/internal/configuration/plugins/PluginFinderTest.java,87,when(switcher.isEnabled(anyString())).thenReturn(true);
True,test/org/mockito/internal/configuration/plugins/PluginFinderTest.java,test/org/mockito/internal/configuration/plugins/PluginFinderTest.java,89,//when
True,test/org/mockito/internal/configuration/plugins/PluginFinderTest.java,test/org/mockito/internal/configuration/plugins/PluginFinderTest.java,90,"IOUtil.writeText(""   "", f1); IOUtil.writeText(""\n"", f2);"
True,test/org/mockito/internal/configuration/plugins/PluginFinderTest.java,test/org/mockito/internal/configuration/plugins/PluginFinderTest.java,92,//then
True,test/org/mockito/internal/configuration/plugins/PluginFinderTest.java,test/org/mockito/internal/configuration/plugins/PluginFinderTest.java,93,"assertEquals(null, finder.findPluginClass((Iterable) asList(f1.toURI().toURL(), f2.toURI().toURL())));"
False,test/org/mockito/internal/configuration/plugins/PluginFinderTest.java,test/org/mockito/internal/configuration/plugins/PluginFinderTest.java,58,Test public void problems_loading_impl() {
False,test/org/mockito/internal/configuration/plugins/PluginFinderTest.java,test/org/mockito/internal/configuration/plugins/PluginFinderTest.java,59,ail();
True,test/org/mockito/internal/configuration/plugins/PluginFinderTest.java,test/org/mockito/internal/configuration/plugins/PluginFinderTest.java,96,@Test public void problems_loading_impl() throws Exception {
True,test/org/mockito/internal/configuration/plugins/PluginFinderTest.java,test/org/mockito/internal/configuration/plugins/PluginFinderTest.java,97,"when(switcher.isEnabled(anyString())).thenThrow(new RuntimeException(""Boo!""));"
True,test/org/mockito/internal/configuration/plugins/PluginFinderTest.java,test/org/mockito/internal/configuration/plugins/PluginFinderTest.java,99,try {
True,test/org/mockito/internal/configuration/plugins/PluginFinderTest.java,test/org/mockito/internal/configuration/plugins/PluginFinderTest.java,100,//when
True,test/org/mockito/internal/configuration/plugins/PluginFinderTest.java,test/org/mockito/internal/configuration/plugins/PluginFinderTest.java,101,"finder.findPluginClass((Iterable) asList(new File(""xxx"").toURI().toURL()));"
True,test/org/mockito/internal/configuration/plugins/PluginFinderTest.java,test/org/mockito/internal/configuration/plugins/PluginFinderTest.java,102,//then
True,test/org/mockito/internal/configuration/plugins/PluginFinderTest.java,test/org/mockito/internal/configuration/plugins/PluginFinderTest.java,103,fail();
True,test/org/mockito/internal/configuration/plugins/PluginFinderTest.java,test/org/mockito/internal/configuration/plugins/PluginFinderTest.java,104,} catch(Exception e) {
True,test/org/mockito/internal/configuration/plugins/PluginFinderTest.java,test/org/mockito/internal/configuration/plugins/PluginFinderTest.java,105,"assertContains(""xxx"", e.getMessage());"
True,test/org/mockito/internal/configuration/plugins/PluginFinderTest.java,test/org/mockito/internal/configuration/plugins/PluginFinderTest.java,106,"e.getCause().getMessage().equals(""Boo!"");"
