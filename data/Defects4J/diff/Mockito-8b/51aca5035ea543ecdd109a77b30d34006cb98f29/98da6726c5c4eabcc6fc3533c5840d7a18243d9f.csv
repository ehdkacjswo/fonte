is_addition,old_file_path,new_file_path,line_num,content
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,2, Copyright (c) 2007 Mockito contributors
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,3, This program is made available under the terms of the MIT License.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,5,ackage org.mockito;
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,7,mport java.util.Arrays;
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,9,mport org.mockito.exceptions.Reporter;
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,10,mport org.mockito.exceptions.misusing.NotAMockException;
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,11,mport org.mockito.internal.MockHandler;
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,12,mport org.mockito.internal.progress.DeprecatedOngoingStubbing;
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,13,mport org.mockito.internal.progress.MockingProgress;
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,14,mport org.mockito.internal.progress.NewOngoingStubbing;
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,15,mport org.mockito.internal.progress.OngoingStubbing;
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,16,mport org.mockito.internal.progress.ThreadSafeMockingProgress;
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,17,mport org.mockito.internal.returnvalues.EmptyReturnValues;
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,18,mport org.mockito.internal.returnvalues.GloballyConfiguredReturnValues;
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,19,mport org.mockito.internal.returnvalues.MoreEmptyReturnValues;
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,20,mport org.mockito.internal.returnvalues.SmartNullReturnValues;
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,21,mport org.mockito.internal.stubbing.DoesNothing;
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,22,mport org.mockito.internal.stubbing.Returns;
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,23,mport org.mockito.internal.stubbing.Stubber;
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,24,mport org.mockito.internal.stubbing.StubberImpl;
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,25,mport org.mockito.internal.stubbing.ThrowsException;
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,26,mport org.mockito.internal.stubbing.VoidMethodStubbable;
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,27,mport org.mockito.internal.util.MockUtil;
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,28,mport org.mockito.internal.verification.VerificationModeFactory;
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,29,mport org.mockito.internal.verification.api.VerificationMode;
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,30,mport org.mockito.runners.MockitoJUnit44Runner;
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,31,mport org.mockito.runners.MockitoJUnitRunner;
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,32,mport org.mockito.stubbing.Answer;
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,35," Enables mocks creation, verification and stubbing."
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,37, <h1>Contents</h1>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,39, <b>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,40,      1. Let's verify some behaviour! <br/>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,41,      2. How about some stubbing? <br/>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,42,      3. Argument matchers <br/>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,43,      4. Verifying exact number of invocations / at least once / never <br/>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,44,      5. Stubbing void methods with exceptions <br/>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,45,      6. Verification in order <br/>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,46,      7. Making sure interaction(s) never happened on mock <br/>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,47,      8. Finding redundant invocations <br/>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,48,      9. Shorthand for mocks creation - &#064;Mock annotation <br/>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,49,      10. Stubbing consecutive calls (iterator-style stubbing) <br/>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,50,      11. Stubbing with callbacks <br/>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,51,      12. doThrow()|doAnswer()|doNothing()|doReturn() family of methods mostly for stubbing voids <br/>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,52,      13. Spying on real objects <br/>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,53,      14. (**New**) Changing default return values of unstubbed invocations <br/>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,54, </b>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,56, <p>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,57," Following examples mock a List, because everyone knows its interface (methods"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,58," like add(), get(), clear() will be used). <br>"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,59, You probably wouldn't mock List class 'in real'.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,61, <h3>1. Let's verify some behaviour!</h3>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,63, <pre>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,64, //Let's import Mockito statically so that the code looks clearer
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,65, import static org.mockito.Mockito.*;
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,67, //mock creation
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,68, List mockedList = mock(List.class);
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,70, //using mock object
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,71," mockedList.add(""one"");"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,72, mockedList.clear();
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,74, //verification
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,75," verify(mockedList).add(""one"");"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,76, verify(mockedList).clear();
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,77, </pre>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,79, <p>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,80," Once created, mock will remember all interactions. Then you can selectively"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,81, verify whatever interaction you are interested in.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,83, <h3>2. How about some stubbing?</h3>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,85, <pre>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,86," //You can mock concrete classes, not only interfaces"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,87, LinkedList mockedList = mock(LinkedList.class);
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,89, //stubbing
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,90," when(mockedList.get(0)).thenReturn(""first"");"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,91, when(mockedList.get(1)).thenThrow(new RuntimeException());
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,93," //following prints ""first"""
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,94, System.out.println(mockedList.get(0));
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,96, //following throws runtime exception
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,97, System.out.println(mockedList.get(1));
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,99," //following prints ""null"" because get(999) was not stubbed"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,100, System.out.println(mockedList.get(999));
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,102," //Although it is possible to verify a stubbed invocation, usually <b>it's just redundant</b>"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,103, //If your code cares what get(0) returns then something else breaks (often before even verify() gets executed).
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,104," //If your code doesn't care what get(0) returns then it should not be stubbed. Not convinced? See <a href=""http://monkeyisland.pl/2008/04/26/asking-and-telling"">here</a>."
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,105, verify(mockedList).get(0);
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,106, </pre>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,108, <ul>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,109," <li> By default, for all methods that return value, mock returns null, an"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,110," empty collection or appropriate primitive/primitive wrapper value (e.g: 0,"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,111," false, ... for int/Integer, boolean/Boolean, ...). </li>"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,113, <li> Stubbing can be overridden: for example common stubbing can go to
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,114, fixture setup but the test methods can override it. </li>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,116," <li> Once stubbed, the method will always return stubbed value regardless"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,117, of how many times it is called. </li>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,119, <li> Last stubbing is more important - when you stubbed the same method with
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,120, the same arguments many times. </li>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,122, </ul>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,124, <h3>3. Argument matchers</h3>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,126, <pre>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,127, //stubbing using built-in anyInt() argument matcher
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,128," when(mockedList.get(anyInt())).thenReturn(""element"");"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,130, //stubbing using hamcrest (let's say isValid() returns your own hamcrest matcher):
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,131," when(mockedList.contains(argThat(isValid()))).thenReturn(""element"");"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,133," //following prints ""element"""
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,134, System.out.println(mockedList.get(999));
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,136, //<b>you can also verify using an argument matcher</b>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,137, verify(mockedList).get(anyInt());
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,138, </pre>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,140, <p>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,141, Argument matchers allow flexible verification or stubbing.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,142, {@link Matchers Click here to see} more built-in matchers
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,143, and examples of <b>custom argument matchers / hamcrest matchers</b>.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,144, <p>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,145, <b>Warning:</b>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,146, <p>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,147," If you are using argument matchers, <b>all arguments</b> have to be provided"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,148, by matchers.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,149, <p>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,150, E.g: (example shows verification but the same applies to stubbing):
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,152, <pre>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,153,"   verify(mock).someMethod(anyInt(), anyString(), <b>eq(""third argument"")</b>);"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,154,   //above is correct - eq() is also an argument matcher
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,156,"   verify(mock).someMethod(anyInt(), anyString(), <b>""third argument""</b>);"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,157,   //above is incorrect - exception will be thrown because third argument is given without an argument matcher.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,158, </pre>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,160, <h3>4. Verifying exact number of invocations / at least x / never</h3>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,162, <pre>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,163, //using mock
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,164," mockedList.add(""once"");"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,166," mockedList.add(""twice"");"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,167," mockedList.add(""twice"");"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,169," mockedList.add(""three times"");"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,170," mockedList.add(""three times"");"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,171," mockedList.add(""three times"");"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,173, //following two verifications work exactly the same - times(1) is used by default
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,174," verify(mockedList).add(""once"");"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,175," verify(mockedList, times(1)).add(""once"");"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,177, //exact number of invocations verification
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,178," verify(mockedList, times(2)).add(""twice"");"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,179," verify(mockedList, times(3)).add(""three times"");"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,181, //verification using never(). never() is an alias to times(0)
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,182," verify(mockedList, never()).add(""never happened"");"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,184, //verification using atLeast()/atMost()
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,185," verify(mockedList, atLeastOnce()).add(""three times"");"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,186," verify(mockedList, atLeast(2)).add(""five times"");"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,187," verify(mockedList, atMost(5)).add(""three times"");"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,189, </pre>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,191, <p>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,192, <b>times(1) is the default.</b> Therefore using times(1) explicitly can be
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,193, omitted.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,195, <h3>5. Stubbing void methods with exceptions</h3>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,197, <pre>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,198,   doThrow(new RuntimeException()).when(mockedList).clear();
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,200,   //following throws RuntimeException:
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,201,   mockedList.clear();
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,202, </pre>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,204, Read more about doThrow|doAnswer family of methods in paragraph 12.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,205, <p>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,206," Initially, {@link Mockito#stubVoid(Object)} was used for stubbing voids."
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,207, Currently stubVoid() is deprecated in favor of {@link Mockito#doThrow(Throwable)}.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,208, This is because of improved readability and consistency with the family of {@link Mockito#doAnswer(Answer)} methods.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,210, <h3>6. Verification in order</h3>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,212, <pre>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,213, List firstMock = mock(List.class);
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,214, List secondMock = mock(List.class);
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,216, //using mocks
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,217," firstMock.add(""was called first"");"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,218," secondMock.add(""was called second"");"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,220, //create inOrder object passing any mocks that need to be verified in order
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,221," InOrder inOrder = inOrder(firstMock, secondMock);"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,223, //following will make sure that firstMock was called before secondMock
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,224," inOrder.verify(firstMock).add(""was called first"");"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,225," inOrder.verify(secondMock).add(""was called second"");"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,226, </pre>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,228, Verification in order is flexible - <b>you don't have to verify all
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,229, interactions</b> one-by-one but only those that you are interested in
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,230, testing in order.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,231, <p>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,232," Also, you can create InOrder object passing only mocks that are relevant for"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,233, in-order verification.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,235, <h3>7. Making sure interaction(s) never happened on mock</h3>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,237, <pre>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,238, //using mocks - only mockOne is interacted
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,239," mockOne.add(""one"");"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,241, //ordinary verification
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,242," verify(mockOne).add(""one"");"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,244, //verify that method was never called on a mock
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,245," verify(mockOne, never()).add(""two"");"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,247, //verify that other mocks were not interacted
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,248," verifyZeroInteractions(mockTwo, mockThree);"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,250, </pre>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,252, <h3>8. Finding redundant invocations</h3>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,254, <pre>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,255, //using mocks
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,256," mockedList.add(""one"");"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,257," mockedList.add(""two"");"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,259," verify(mockedList).add(""one"");"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,261, //following verification will fail
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,262, verifyNoMoreInteractions(mockedList);
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,263, </pre>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,265, A word of <b>warning</b>:
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,266," Some users who did a lot of classic, expect-run-verify mocking tend to use verifyNoMoreInteractions() very often, even in every test method."
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,267, verifyNoMoreInteractions() is not recommended to use in every test method.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,268, verifyNoMoreInteractions() is a handy assertion from the interaction testing toolkit. Use it only when it's relevant.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,269," Abusing it leads to overspecified, less maintainable tests. You can find further reading"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,270," <a href=""http://monkeyisland.pl/2008/07/12/should-i-worry-about-the-unexpected/"">here</a>."
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,272, <p>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,273, See also {@link Mockito#never()} - it is more explicit and
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,274, communicates the intent well.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,275, <p>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,277, <h3>9. Shorthand for mocks creation - &#064;Mock annotation</h3>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,279, <ul>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,280, <li>Minimizes repetitive mock creation code.</li>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,281, <li>Makes the test class more readable.</li>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,282, <li>Makes the verification error easier to read because the <b>field name</b>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,283, is used to identify the mock.</li>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,284, </ul>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,286, <pre>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,287,   public class ArticleManagerTest {
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,289,       &#064;Mock private ArticleCalculator calculator;
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,290,       &#064;Mock private ArticleDatabase database;
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,291,       &#064;Mock private UserProvider userProvider;
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,293,       private ArticleManager manager;
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,294, </pre>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,296, <b>Important!</b> This needs to be somewhere in the base class or a test
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,297, runner:
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,299, <pre>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,300, MockitoAnnotations.initMocks(testClass);
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,301, </pre>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,303," You can use built-in runners {@link MockitoJUnitRunner}, {@link MockitoJUnit44Runner}."
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,304, <p>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,305, Read more here: {@link MockitoAnnotations}
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,307, <h3> 10. Stubbing consecutive calls (iterator-style stubbing)</h3>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,309, Sometimes we need to stub with different return value/exception for the same
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,310, method call. Typical use case could be mocking iterators.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,311, Original version of Mockito did not have this feature to promote simple mocking.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,312," For example, instead of iterators one could use {@link Iterable} or simply"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,313, collections. Those offer natural ways of stubbing (e.g. using real
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,314," collections). In rare scenarios stubbing consecutive calls could be useful,"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,315, though:
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,316, <p>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,318, <pre>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,319," when(mock.someMethod(""some arg""))"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,320,   .thenThrow(new RuntimeException())
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,321,"   .thenReturn(""foo"");"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,323, //First call: throws runtime exception:
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,324," mock.someMethod(""some arg"");"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,326," //Second call: prints ""foo"""
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,327," System.out.println(mock.someMethod(""some arg""));"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,329," //Any consecutive call: prints ""foo"" as well (last stubbing wins)."
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,330," System.out.println(mock.someMethod(""some arg""));"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,331, </pre>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,333," Alternative, shorter version of consecutive stubbing:"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,335, <pre>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,336," when(mock.someMethod(""some arg""))"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,337,"   .thenReturn(""one"", ""two"", ""three"");"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,338, </pre>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,340, <h3> 11. Stubbing with callbacks</h3>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,342, Allows stubbing with generic {@link Answer} interface.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,343,  <p>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,344, Yet another controversial feature which was not included in Mockito
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,345, originally. We recommend using simple stubbing with toReturn() or
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,346, toThrow() only. Those two should be <b>just enough</b> to test/test-drive
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,347, any clean & simple code.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,349, <pre>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,350, when(mock.someMethod(anyString())).thenAnswer(new Answer() {
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,351,     Object answer(InvocationOnMock invocation) {
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,352,         Object[] args = invocation.getArguments();
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,353,         Object mock = invocation.getMock();
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,354,"         return ""called with arguments: "" + args;"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,358," //Following prints ""called with arguments: foo"""
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,359," System.out.println(mock.someMethod(""foo""));"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,360, </pre>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,362, <h3> 12. doThrow()|doAnswer()|doNothing()|doReturn() family of methods for stubbing voids (mostly)</h3>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,364, Stubbing voids requires different approach from {@link Mockito#when(Object)} because the compiler does not like void methods inside brackets...
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,365, <p>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,366, {@link Mockito#doThrow(Throwable)} replaces the {@link Mockito#stubVoid(Object)} method for stubbing voids.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,367, The main reason is improved readability and consistency with the family of doAnswer() methods.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,368, <p>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,369, Use doThrow() when you want to stub a void method with an exception:
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,370, <pre>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,371,   doThrow(new RuntimeException()).when(mockedList).clear();
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,373,   //following throws RuntimeException:
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,374,   mockedList.clear();
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,375, </pre>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,377, Read more about other methods:
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,378, <p>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,379, {@link Mockito#doThrow(Throwable)}
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,380, <p>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,381, {@link Mockito#doAnswer(Answer)}
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,382, <p>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,383, {@link Mockito#doNothing()}
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,384, <p>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,385, {@link Mockito#doReturn(Object)}
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,387, <h3> 13. Spying on real objects</h3>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,389, You can create spies of real objects. When you use the spy then the <b>real</b> methods are called (unless a method was stubbed).
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,390, <p>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,391," Real spies should be used <b>carefully and occasionally</b>, for example when dealing with legacy code."
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,392, <p>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,393," Spying on real objects is often associated with ""partial mocking"" concept."
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,394," However, Mockito spies are not partial mocks. Mockito spy is meant to help testing other classes - not the spy itself."
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,395, Therefore spy will not help if you intend to verify if method calls other method on the same object.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,396, In this case I suggest being OO/SRPy (for example you might extract new class/interface...)
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,398, <pre>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,399,   List list = new LinkedList();
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,400,   List spy = spy(list);
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,402,"   //optionally, you can stub out some methods:"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,403,   when(spy.size()).thenReturn(100);
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,405,   //using the spy calls <b>real</b> methods
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,406,"   spy.add(""one"");"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,407,"   spy.add(""two"");"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,409,"   //prints ""one"" - the first element of a list"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,410,   System.out.println(spy.get(0));
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,412,   //size() method was stubbed - 100 is printed
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,413,   System.out.println(spy.size());
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,415,"   //optionally, you can verify"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,416,"   verify(spy).add(""one"");"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,417,"   verify(spy).add(""two"");"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,418, </pre>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,420, <h4>Important gotcha on spying real objects!</h4>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,422, 1. Sometimes it's impossible to use {@link Mockito#when(Object)} for stubbing spies. Example:
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,424, <pre>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,425,   List list = new LinkedList();
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,426,   List spy = spy(list);
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,428,   //Impossible: real method is called so spy.get(0) throws IndexOutOfBoundsException (the list is yet empty)
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,429,"   when(spy.get(0)).thenReturn(""foo"");"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,431,   //You have to use doReturn() for stubbing
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,432,"   doReturn(""foo"").when(spy).get(0);"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,433, </pre>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,435, 2. Watch out for final methods.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,436, Mockito doesn't mock final methods so the bottom line is: when you spy on real objects + you try to stub a final method = trouble.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,437, What will happen is the real method will be called *on mock* but *not on the real instance* you passed to the spy() method.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,438, Typically you may get a NullPointerException because mock instances don't have fields initiated.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,440, <h3>14. (**New**) Changing default return values of unstubbed invocations</h3>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,442, You can create a mock with specified strategy of for its return values.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,443, It's quite advanced feature and typically you don't need it to write decent tests.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,444," However, it can be helpful for working with legacy systems."
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,445, <p>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,446, Obviously those return values are used only when you don't stub the method call.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,448, <pre>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,449,"   Foo mock = mock(Foo.class, Mockito.RETURNS_SMART_NULLS);"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,450,"   Foo mockTwo = mock(Foo.class, new YourOwnReturnValues());"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,451, </pre>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,453, <p>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,454, Read more about this interesting implementation of <i>ReturnValues</i>: {@link Mockito#RETURNS_SMART_NULLS}
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,457,"SuppressWarnings(""unchecked"")"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,458,ublic class Mockito extends Matchers {
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,461, Default ReturnValues used by the framework.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,462, <p>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,463, {@link ReturnValues} defines the return values of unstubbed invocations.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,464, <p>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,465, This implementation first tries the global configuration.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,466," If there is no global configuration then it uses {@link EmptyReturnValues} (returns zeros, empty collections, nulls, etc.)"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,468,ublic static final ReturnValues RETURNS_DEFAULTS = new GloballyConfiguredReturnValues();
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,471," Optional ReturnValues to be used with {@link Mockito#mock(Class, ReturnValues)}"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,472, <p>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,473, {@link ReturnValues} defines the return values of unstubbed invocations.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,474, <p>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,475, This implementation can be helpful when working with legacy code.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,476, Unstubbed methods often return null. If your code uses the object returned by an unstubbed call you get a NullPointerException.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,477, This implementation of ReturnValues makes unstubbed methods <b>return SmartNull instead of null</b>.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,478, SmartNull gives nicer exception message than NPE because it points out the line where unstubbed method was called. You just click on the stack trace.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,479, <p>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,480, SmartNullReturnValues first tries to return ordinary return values (see {@link MoreEmptyReturnValues})
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,481, then it tries to return SmartNull. If the return type is final then plain null is returned.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,482, <p>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,483, SmartNullReturnValues will be probably the default return values strategy in Mockito 2.0
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,484, <p>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,485, Example:
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,486, <pre>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,487,"   Foo mock = (Foo.class, RETURNS_SMART_NULLS);"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,489,   //calling unstubbed method here:
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,490,   Stuff stuff = mock.getStuff();
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,492,   //using object returned by unstubbed call:
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,493,   stuff.doSomething();
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,495,   //Above doesn't yield NullPointerException this time!
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,496,"   //Instead, SmartNullPointerException is thrown."
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,497,   //Exception's cause links to unstubbed <i>mock.getStuff()</i> - just click on the stack trace.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,498, </pre>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,500,ublic static final ReturnValues RETURNS_SMART_NULLS = new SmartNullReturnValues();
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,502,tatic final MockingProgress MOCKING_PROGRESS = new ThreadSafeMockingProgress();
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,503,rivate static final Reporter REPORTER = new Reporter();
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,506, Creates mock object of given class or interface.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,507, <p>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,508, See examples in javadoc for {@link Mockito} class
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,510, @param classToMock class or interface to mock
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,511, @return mock object
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,513,ublic static <T> T mock(Class<T> classToMock) {
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,514,"eturn mock(classToMock, null, null, RETURNS_DEFAULTS);"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,518, Creates mock with a name. Naming mocks can be helpful for debugging.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,519, <p>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,520, Beware that naming mocks is not a solution for complex code which uses too many mocks or collaborators.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,521, <b>If you have too many mocks then refactor the code</b> so that it's easy to test/debug without necessity of naming mocks.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,522, <p>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,523, <b>If you use &#064;Mock annotation then you've got naming mocks for free!</b> &#064;Mock uses field name as mock name. {@link Mock Read more.}
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,524, <p>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,526, See examples in javadoc for {@link Mockito} class
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,528, @param classToMock class or interface to mock
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,529, @return mock object
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,531,"ublic static <T> T mock(Class<T> classToMock, String name) {"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,532,"eturn mock(classToMock, name, null, RETURNS_DEFAULTS);"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,536, Creates mock with a specified strategy for its return values.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,537, It's quite advanced feature and typically you don't need it to write decent tests.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,538, However it can be helpful for working with legacy systems.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,539, <p>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,540, Obviously return values are used only when you don't stub the method call.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,542, <pre>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,543,"   Foo mock = mock(Foo.class, Mockito.RETURNS_SMART_NULLS);"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,544,"   Foo mockTwo = mock(Foo.class, new YourOwnReturnValues());"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,545, </pre>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,547, <p>See examples in javadoc for {@link Mockito} class</p>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,549, @param classToMock class or interface to mock
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,550, @param returnValues default return values for unstubbed methods
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,552, @return mock object
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,554,"ublic static <T> T mock(Class<T> classToMock, ReturnValues returnValues) {"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,555,"eturn mock(classToMock, null, (T) null, returnValues);"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,558,"rivate static <T> T mock(Class<T> classToMock, String name, T optionalInstance, ReturnValues returnValues) {"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,559,OCKING_PROGRESS.validateState();
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,560,OCKING_PROGRESS.resetOngoingStubbing();
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,561,"eturn MockUtil.createMock(classToMock, MOCKING_PROGRESS, name, optionalInstance, returnValues);"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,565, Creates a spy of the real object. The spy calls <b>real</b> methods unless they are stubbed.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,566, <p>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,567," Real spies should be used <b>carefully and occasionally</b>, for example when dealing with legacy code."
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,568, <p>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,569," Spying on real objects is often associated with ""partial mocking"" concept."
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,570," However, Mockito spies are not partial mocks. Mockito spy is meant to help testing other classes - not the spy itself."
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,571, Therefore spy will not help if you intend to verify if method calls other method on the same object.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,572, In this case I suggest being OO/SRPy (for example you might extract new class/interface...)
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,573, <p>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,574, Example:
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,576, <pre>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,577,   List list = new LinkedList();
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,578,   List spy = spy(list);
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,580,"   //optionally, you can stub out some methods:"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,581,   when(spy.size()).thenReturn(100);
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,583,   //using the spy calls <b>real</b> methods
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,584,"   spy.add(""one"");"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,585,"   spy.add(""two"");"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,587,"   //prints ""one"" - the first element of a list"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,588,   System.out.println(spy.get(0));
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,590,   //size() method was stubbed - 100 is printed
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,591,   System.out.println(spy.size());
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,593,"   //optionally, you can verify"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,594,"   verify(spy).add(""one"");"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,595,"   verify(spy).add(""two"");"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,596, </pre>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,598, <h4>Important gotcha on spying real objects!</h4>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,600, 1. Sometimes it's impossible to use {@link Mockito#when(Object)} for stubbing spies. Example:
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,602, <pre>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,603,   List list = new LinkedList();
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,604,   List spy = spy(list);
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,606,   //Impossible: real method is called so spy.get(0) throws IndexOutOfBoundsException (the list is yet empty)
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,607,"   when(spy.get(0)).thenReturn(""foo"");"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,609,   //You have to use doReturn() for stubbing
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,610,"   doReturn(""foo"").when(spy).get(0);"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,611, </pre>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,613, 2. Watch out for final methods.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,614, Mockito doesn't mock final methods so the bottom line is: when you spy on real objects + you try to stub a final method = trouble.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,615, What will happen is the real method will be called *on mock* but *not on the real instance* you passed to the spy() method.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,616, Typically you may get a NullPointerException because mock instances don't have fields initiated.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,618, <p>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,619, See examples in javadoc for {@link Mockito} class
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,621, @param object
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,622,            to spy on
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,623, @return a spy of the real object
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,625,ublic static <T> T spy(T object) {
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,626,"eturn mock((Class<T>) object.getClass(), null, object, RETURNS_DEFAULTS);"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,630, <pre>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,631,   //Instead of:
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,632,   stub(mock.count()).toReturn(10);
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,634,   //Please do:
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,635,   when(mock.count()).thenReturn(10);
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,636, </pre>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,638, Many users found stub() confusing therefore stub() has been deprecated in favor of {@link Mockito#when(Object)}
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,639, <p>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,640, How to fix deprecation warnings? Typically it's just few minutes of search & replace job:
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,641, <pre>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,642,   Mockito.stub;  <i>replace with:</i>  Mockito.when;
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,643,   stub(          <i>replace with:</i>  when(
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,644,   .toReturn(     <i>replace with:</i>  .thenReturn(
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,645,   .toThrow(      <i>replace with:</i>  .thenThrow(
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,646,   .toAnswer(     <i>replace with:</i>  .thenAnswer(
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,647, </pre>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,648, If you're an existing user then sorry for making your code littered with deprecation warnings.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,649, This change was required to make Mockito better.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,651, @param methodCall
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,652,            method call
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,653, @return DeprecatedOngoingStubbing object to set stubbed value/exception
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,655,"SuppressWarnings(""unchecked"")"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,656,Deprecated
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,657,ublic static <T> DeprecatedOngoingStubbing<T> stub(T methodCall) {
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,658,OCKING_PROGRESS.stubbingStarted();
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,659,eturn (DeprecatedOngoingStubbing) stub();
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,663, Enables stubbing methods. Use it when you want the mock to return particular value when particular method is called.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,664, <p>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,665," Simply put: ""<b>When</b> the x method is called <b>then</b> return y""."
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,666, <p>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,667, <b>when() is a successor of deprecated {@link Mockito#stub(Object)}</b>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,668, <p>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,669, Examples:
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,671, <pre>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,672, <b>when</b>(mock.someMethod()).<b>thenReturn</b>(10);
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,674," //you can use flexible argument matchers, e.g:"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,675, when(mock.someMethod(<b>anyString()</b>)).thenReturn(10);
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,677, //setting exception to be thrown:
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,678," when(mock.someMethod(""some arg"")).thenThrow(new RuntimeException());"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,680, //you can set different behavior for consecutive method calls.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,681," //Last stubbing (e.g: thenReturn(""foo"")) determines the behavior of further consecutive calls."
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,682," when(mock.someMethod(""some arg""))"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,683,  .thenThrow(new RuntimeException())
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,684,"  .thenReturn(""foo"");"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,686," //Alternative, shorter version for consecutive stubbing:"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,687," when(mock.someMethod(""some arg""))"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,688,"  .thenReturn(""one"", ""two"");"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,689, //is the same as:
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,690," when(mock.someMethod(""some arg""))"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,691,"  .thenReturn(""one"")"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,692,"  .thenReturn(""two"");"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,694, //shorter version for consecutive method calls throwing exceptions:
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,695," when(mock.someMethod(""some arg""))"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,696,"  .thenThrow(new RuntimeException(), new NullPointerException();"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,698, </pre>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,700, For stubbing void methods with throwables see: {@link Mockito#doThrow(Throwable)}
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,701, <p>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,702, Stubbing can be overridden: for example common stubbing can go to fixture
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,703, setup but the test methods can override it.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,704, <p>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,705," Once stubbed, the method will always return stubbed value regardless"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,706, of how many times it is called.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,707, <p>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,708, Last stubbing is more important - when you stubbed the same method with
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,709, the same arguments many times.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,710, <p>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,711," Although it is possible to verify a stubbed invocation, usually <b>it's just redundant</b>."
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,712, Let's say you've stubbed foo.bar().
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,713, If your code cares what foo.bar() returns then something else breaks(often before even verify() gets executed).
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,714, If your code doesn't care what get(0) returns then it should not be stubbed.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,715," Not convinced? See <a href=""http://monkeyisland.pl/2008/04/26/asking-and-telling"">here</a>."
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,717, <p>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,718, See examples in javadoc for {@link Mockito} class
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,719, @param methodCall method to be stubbed
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,721,ublic static <T> NewOngoingStubbing<T> when(T methodCall) {
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,722,OCKING_PROGRESS.stubbingStarted();
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,723,eturn (NewOngoingStubbing) stub();
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,726,rivate static OngoingStubbing stub() {
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,727,ngoingStubbing stubbing = MOCKING_PROGRESS.pullOngoingStubbing();
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,728,f (stubbing == null) {
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,729,OCKING_PROGRESS.reset();
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,730,EPORTER.missingMethodInvocation();
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,732,eturn stubbing;
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,736, Verifies certain behavior <b>happened once</b>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,737, <p>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,738," Alias to <code>verify(mock, times(1))</code> E.g:"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,739, <pre>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,740,"   verify(mock).someMethod(""some arg"");"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,741, </pre>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,742, Above is equivalent to:
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,743, <pre>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,744,"   verify(mock, times(1)).someMethod(""some arg"");"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,745, </pre>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,747, <p>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,748," Although it is possible to verify a stubbed invocation, usually <b>it's just redundant</b>."
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,749, Let's say you've stubbed foo.bar().
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,750, If your code cares what foo.bar() returns then something else breaks(often before even verify() gets executed).
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,751, If your code doesn't care what get(0) returns then it should not be stubbed.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,752," Not convinced? See <a href=""http://monkeyisland.pl/2008/04/26/asking-and-telling"">here</a>."
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,754, <p>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,755, See examples in javadoc for {@link Mockito} class
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,757, @param mock to be verified
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,758, @return mock object itself
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,760,ublic static <T> T verify(T mock) {
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,761,"eturn verify(mock, times(1));"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,765, Verifies certain behavior happened at least once / exact number of times / never. E.g:
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,766, <pre>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,767,"   verify(mock, times(5)).someMethod(""was called five times"");"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,769,"   verify(mock, atLeast(2)).someMethod(""was called at least two times"");"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,771,"   //you can use flexible argument matchers, e.g:"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,772,"   verify(mock, atLeastOnce()).someMethod(<b>anyString()</b>);"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,773, </pre>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,775, <b>times(1) is the default</b> and can be omitted
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,776, <p>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,777, See examples in javadoc for {@link Mockito} class
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,779, @param mock to be verified
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,780," @param mode times(x), atLeastOnce() or never()"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,782, @return mock object itself
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,784,"ublic static <T> T verify(T mock, VerificationMode mode) {"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,785,f (mock == null) {
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,786,EPORTER.nullPassedToVerify();
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,787, else if (!MockUtil.isMock(mock)) {
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,788,EPORTER.notAMockPassedToVerify();
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,790,OCKING_PROGRESS.verificationStarted(mode);
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,791,eturn mock;
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,795, Checks if any of given mocks has any unverified interaction.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,796, <p>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,797, You can use this method after you verified your mocks - to make sure that nothing
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,798, else was invoked on your mocks.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,799, <p>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,800, See also {@link Mockito#never()} - it is more explicit and communicates the intent well.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,801, <p>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,802, Stubbed invocations (if called) are also treated as interactions.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,803, <p>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,804, A word of <b>warning</b>:
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,805," Some users who did a lot of classic, expect-run-verify mocking tend to use verifyNoMoreInteractions() very often, even in every test method."
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,806, verifyNoMoreInteractions() is not recommended to use in every test method.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,807, verifyNoMoreInteractions() is a handy assertion from the interaction testing toolkit. Use it only when it's relevant.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,808," Abusing it leads to overspecified, less maintainable tests. You can find further reading"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,809," <a href=""http://monkeyisland.pl/2008/07/12/should-i-worry-about-the-unexpected/"">here</a>."
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,810, <p>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,811," This method will also detect unverified invocations that occurred before the test method,"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,812," for example: in setUp(), &#064;Before method or in constructor."
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,813, Consider writing nice code that makes interactions only in test methods.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,815, <p>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,816, Example:
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,818, <pre>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,819, //interactions
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,820, mock.doSomething();
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,821, mock.doSomethingUnexpected();
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,823, //verification
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,824, verify(mock).doSomething();
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,826, //following will fail because 'doSomethingUnexpected()' is unexpected
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,827, verifyNoMoreInteractions(mock);
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,829, </pre>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,831, See examples in javadoc for {@link Mockito} class
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,833, @param mocks to be verified
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,835,ublic static void verifyNoMoreInteractions(Object... mocks) {
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,836,ssertMocksNotEmpty(mocks);
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,837,OCKING_PROGRESS.validateState();
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,838,or (Object mock : mocks) {
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,839,ry {
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,840,f (mock == null) {
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,841,EPORTER.nullPassedToVerifyNoMoreInteractions();
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,843,ockUtil.getMockHandler(mock).verifyNoMoreInteractions();
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,844, catch (NotAMockException e) {
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,845,EPORTER.notAMockPassedToVerifyNoMoreInteractions();
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,851, Verifies that no interactions happened on given mocks.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,852, <pre>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,853,"   verifyZeroInteractions(mockOne, mockTwo);"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,854, </pre>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,855, This method will also detect invocations
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,856," that occurred before the test method, for example: in setUp(), &#064;Before method or in constructor."
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,857, Consider writing nice code that makes interactions only in test methods.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,858, <p>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,859, See examples in javadoc for {@link Mockito} class
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,861, @param mocks to be verified
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,863,ublic static void verifyZeroInteractions(Object... mocks) {
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,864,erifyNoMoreInteractions(mocks);
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,867,rivate static void assertMocksNotEmpty(Object[] mocks) {
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,868,f (mocks == null || mocks.length == 0) {
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,869,EPORTER.mocksHaveToBePassedToVerifyNoMoreInteractions();
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,874, <pre>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,875,   //Instead of:
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,876,   stubVoid(mock).toThrow(e).on().someVoidMethod();
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,878,   //Please do:
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,879,   doThrow(e).when(mock).someVoidMethod();
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,880, </pre>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,882, doThrow() replaces stubVoid() because of improved readability and consistency with the family of doAnswer() methods.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,883, <p>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,884," Originally, stubVoid() was used for stubbing void methods with exceptions. E.g:"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,886, <pre>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,887, stubVoid(mock).toThrow(new RuntimeException()).on().someMethod();
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,889, //you can stub with different behavior for consecutive calls.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,890, //Last stubbing (e.g. toReturn()) determines the behavior for further consecutive calls.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,891, stubVoid(mock)
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,892,   .toThrow(new RuntimeException())
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,893,   .toReturn()
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,894,   .on().someMethod();
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,895, </pre>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,897, See examples in javadoc for {@link Mockito} class
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,899, @deprecated Use {@link Mockito#doThrow(Throwable)} method for stubbing voids
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,901, @param mock
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,902,            to stub
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,903, @return stubbable object that allows stubbing with throwable
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,905,ublic static <T> VoidMethodStubbable<T> stubVoid(T mock) {
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,906,ockHandler<T> handler = MockUtil.getMockHandler(mock);
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,907,OCKING_PROGRESS.stubbingStarted();
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,908,eturn handler.voidMethodStubbable(mock);
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,912, Use doThrow() when you want to stub the void method with an exception.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,913, <p>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,914, Stubbing voids requires different approach from {@link Mockito#when(Object)} because the compiler does not like void methods inside brackets...
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,915, <p>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,916, Example:
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,918, <pre>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,919,   doThrow(new RuntimeException()).when(mock).someVoidMethod();
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,920, </pre>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,922, @param toBeThrown to be thrown when the stubbed method is called
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,923, @return stubber - to select a method for stubbing
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,925,ublic static Stubber doThrow(Throwable toBeThrown) {
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,926,eturn doAnswer(new ThrowsException(toBeThrown));
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,930, Use doAnswer() when you want to stub a void method with generic {@link Answer}.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,931, <p>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,932, Stubbing voids requires different approach from {@link Mockito#when(Object)} because the compiler does not like void methods inside brackets...
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,933, <p>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,934, Example:
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,936, <pre>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,937,  doAnswer(new Answer() {
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,938,      public Object answer(InvocationOnMock invocation) {
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,939,          Object[] args = invocation.getArguments();
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,940,          Mock mock = invocation.getMock();
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,941,          return null;
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,943,  .when(mock).someMethod();
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,944, </pre>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,946, @param answer to answer when the stubbed method is called
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,947, @return stubber - to select a method for stubbing
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,949,ublic static Stubber doAnswer(Answer answer) {
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,950,OCKING_PROGRESS.stubbingStarted();
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,951,OCKING_PROGRESS.resetOngoingStubbing();
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,952,eturn new StubberImpl().doAnswer(answer);
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,956, Use doNothing() for setting void methods to do nothing. <b>Beware that void methods on mocks do nothing by default!</b>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,957," However, there are rare situations when doNothing() comes handy:"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,958, <p>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,959, 1. Stubbing consecutive calls on a void method:
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,960, <pre>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,961,   doNothing().
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,962,   doThrow(new RuntimeException())
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,963,   .when(mock).someVoidMethod();
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,965,   //does nothing the first time:
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,966,   mock.someVoidMethod();
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,968,   //throws RuntimeException the next time:
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,969,   mock.someVoidMethod();
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,970, </pre>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,972, 2. When you spy real objects and you want the void method to do nothing:
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,973, <pre>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,974,   List list = new LinkedList();
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,975,   List spy = spy(list);
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,977,   //let's make clear() do nothing
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,978,   doNothing().when(spy).clear();
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,980,"   spy.add(""one"");"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,982,"   //clear() does nothing, so the list still contains ""one"""
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,983,   spy.clear();
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,984, </pre>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,986, @return stubber - to select a method for stubbing
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,988,ublic static Stubber doNothing() {
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,989,eturn doAnswer(new DoesNothing());
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,993, Use doReturn() in those rare occasions when you cannot use {@link Mockito#when(Object)}.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,994, <p>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,995, <b>Beware that {@link Mockito#when(Object)} is always recommended for stubbing because it is argument type-safe
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,996, and more readable</b> (especially when stubbing consecutive calls).
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,997, <p>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,998, Here are those rare occasions when doReturn() comes handy:
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,999, <p>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1001, 1. When spying real objects and calling real methods on a spy brings side effects
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1003, <pre>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1004,   List list = new LinkedList();
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1005,   List spy = spy(list);
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1007,   //Impossible: real method is called so spy.get(0) throws IndexOutOfBoundsException (the list is yet empty)
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1008,"   when(spy.get(0)).thenReturn(""foo"");"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1010,   //You have to use doReturn() for stubbing:
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1011,"   doReturn(""foo"").when(spy).get(0);"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1012, </pre>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1014, 2. Overriding a previous exception-stubbing:
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1016, <pre>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1017,   when(mock.foo()).thenThrow(new RuntimeException());
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1019,   //Impossible: the exception-stubbed foo() method is called so RuntimeException is thrown.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1020,"   when(mock.foo()).thenReturn(""bar"");"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1022,   //You have to use doReturn() for stubbing:
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1023,"   doReturn(""bar"").when(mock).foo();"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1024, </pre>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1026," Above scenarios shows a tradeoff of Mockito's ellegant syntax. Note that the scenarios are very rare, though."
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1027, Spying should be sporadic and overriding exception-stubbing is very rare.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1029, @param toBeReturned to be returned when the stubbed method is called
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1030, @return stubber - to select a method for stubbing
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1032,ublic static Stubber doReturn(Object toBeReturned) {
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1033,eturn doAnswer(new Returns(toBeReturned));
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1037, Creates InOrder object that allows verifying mocks in order.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1039, <pre>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1040,"   InOrder inOrder = inOrder(firstMock, secondMock);"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1042,"   inOrder.verify(firstMock).add(""was called first"");"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1043,"   inOrder.verify(secondMock).add(""was called second"");"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1044, </pre>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1046, Verification in order is flexible - <b>you don't have to verify all interactions</b> one-by-one
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1047, but only those that you are interested in testing in order.
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1048, <p>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1049," Also, you can create InOrder object passing only mocks that are relevant for in-order verification."
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1051, See examples in javadoc for {@link Mockito} class
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1053, @param mocks to be verified in order
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1055, @return InOrder object to be used to verify in order
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1057,ublic static InOrder inOrder(Object... mocks) {
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1058,f (mocks == null || mocks.length == 0) {
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1059,EPORTER.mocksHaveToBePassedWhenCreatingInOrder();
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1061,or (Object mock : mocks) {
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1062,f (mock == null) {
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1063,EPORTER.nullPassedWhenCreatingInOrder();
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1064, else if (!MockUtil.isMock(mock)) {
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1065,EPORTER.notAMockPassedWhenCreatingInOrder();
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1068,nOrder inOrder = new InOrderImpl(Arrays.asList(mocks));
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1069,eturn inOrder;
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1073, Allows verifying exact number of invocations. E.g:
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1074, <pre>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1075,"   verify(mock, times(2)).someMethod(""some arg"");"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1076, </pre>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1078, See examples in javadoc for {@link Mockito} class
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1080, @param wantedNumberOfInvocations wanted number of invocations
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1082, @return verification mode
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1084,ublic static VerificationMode times(int wantedNumberOfInvocations) {
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1085,eturn VerificationModeFactory.times(wantedNumberOfInvocations);
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1089," Alias to times(0), see {@link Mockito#times(int)}"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1090, <p>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1091, Verifies that interaction did not happen. E.g:
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1092, <pre>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1093,"   verify(mock, never()).someMethod();"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1094, </pre>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1096, <p>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1097, See examples in javadoc for {@link Mockito} class
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1099, @return verification mode
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1101,ublic static VerificationMode never() {
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1102,eturn times(0);
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1106, Allows at-least-once verification. E.g:
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1107, <pre>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1108,"   verify(mock, atLeastOnce()).someMethod(""some arg"");"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1109, </pre>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1110, Alias to atLeast(1)
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1112, See examples in javadoc for {@link Mockito} class
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1114, @return verification mode
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1116,ublic static VerificationMode atLeastOnce() {
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1117,eturn VerificationModeFactory.atLeastOnce();
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1121, Allows at-least-x verification. E.g:
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1122, <pre>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1123,"   verify(mock, atLeast(3)).someMethod(""some arg"");"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1124, </pre>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1126, See examples in javadoc for {@link Mockito} class
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1128, @param minNumberOfInvocations minimum number of invocations
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1130, @return verification mode
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1132,ublic static VerificationMode atLeast(int minNumberOfInvocations) {
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1133,eturn VerificationModeFactory.atLeast(minNumberOfInvocations);
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1137, Allows at-most-x verification. E.g:
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1138, <pre>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1139,"   verify(mock, atMost(3)).someMethod(""some arg"");"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1140, </pre>
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1142, See examples in javadoc for {@link Mockito} class
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1144, @param maxNumberOfInvocations max number of invocations
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1146, @return verification mode
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1148,ublic static VerificationMode atMost(int maxNumberOfInvocations) {
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1149,eturn VerificationModeFactory.atMost(maxNumberOfInvocations);
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,2,* Copyright (c) 2007 Mockito contributors
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,3,* This program is made available under the terms of the MIT License.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,5,package org.mockito;
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,7,import java.util.Arrays;
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,9,import org.mockito.exceptions.Reporter;
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,10,import org.mockito.exceptions.misusing.NotAMockException;
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,11,import org.mockito.internal.MockHandler;
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,12,import org.mockito.internal.progress.DeprecatedOngoingStubbing;
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,13,import org.mockito.internal.progress.MockingProgress;
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,14,import org.mockito.internal.progress.NewOngoingStubbing;
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,15,import org.mockito.internal.progress.OngoingStubbing;
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,16,import org.mockito.internal.progress.ThreadSafeMockingProgress;
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,17,import org.mockito.internal.returnvalues.EmptyReturnValues;
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,18,import org.mockito.internal.returnvalues.GloballyConfiguredReturnValues;
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,19,import org.mockito.internal.returnvalues.MoreEmptyReturnValues;
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,20,import org.mockito.internal.returnvalues.SmartNullReturnValues;
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,21,import org.mockito.internal.stubbing.DoesNothing;
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,22,import org.mockito.internal.stubbing.Returns;
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,23,import org.mockito.internal.stubbing.Stubber;
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,24,import org.mockito.internal.stubbing.StubberImpl;
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,25,import org.mockito.internal.stubbing.ThrowsException;
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,26,import org.mockito.internal.stubbing.VoidMethodStubbable;
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,27,import org.mockito.internal.util.MockUtil;
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,28,import org.mockito.internal.verification.VerificationModeFactory;
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,29,import org.mockito.internal.verification.api.VerificationMode;
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,30,import org.mockito.runners.MockitoJUnit44Runner;
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,31,import org.mockito.runners.MockitoJUnitRunner;
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,32,import org.mockito.stubbing.Answer;
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,35,"* Enables mocks creation, verification and stubbing."
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,37,* <h1>Contents</h1>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,39,* <b>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,40,*      1. Let's verify some behaviour! <br/>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,41,*      2. How about some stubbing? <br/>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,42,*      3. Argument matchers <br/>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,43,*      4. Verifying exact number of invocations / at least once / never <br/>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,44,*      5. Stubbing void methods with exceptions <br/>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,45,*      6. Verification in order <br/>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,46,*      7. Making sure interaction(s) never happened on mock <br/>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,47,*      8. Finding redundant invocations <br/>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,48,*      9. Shorthand for mocks creation - &#064;Mock annotation <br/>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,49,*      10. Stubbing consecutive calls (iterator-style stubbing) <br/>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,50,*      11. Stubbing with callbacks <br/>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,51,*      12. doThrow()|doAnswer()|doNothing()|doReturn() family of methods mostly for stubbing voids <br/>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,52,*      13. Spying on real objects <br/>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,53,*      14. (**New**) Changing default return values of unstubbed invocations <br/>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,54,* </b>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,56,* <p>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,57,"* Following examples mock a List, because everyone knows its interface (methods"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,58,"* like add(), get(), clear() will be used). <br>"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,59,* You probably wouldn't mock List class 'in real'.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,61,* <h3>1. Let's verify some behaviour!</h3>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,63,* <pre>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,64,* //Let's import Mockito statically so that the code looks clearer
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,65,* import static org.mockito.Mockito.*;
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,67,* //mock creation
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,68,* List mockedList = mock(List.class);
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,70,* //using mock object
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,71,"* mockedList.add(""one"");"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,72,* mockedList.clear();
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,74,* //verification
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,75,"* verify(mockedList).add(""one"");"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,76,* verify(mockedList).clear();
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,77,* </pre>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,79,* <p>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,80,"* Once created, mock will remember all interactions. Then you can selectively"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,81,* verify whatever interaction you are interested in.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,83,* <h3>2. How about some stubbing?</h3>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,85,* <pre>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,86,"* //You can mock concrete classes, not only interfaces"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,87,* LinkedList mockedList = mock(LinkedList.class);
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,89,* //stubbing
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,90,"* when(mockedList.get(0)).thenReturn(""first"");"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,91,* when(mockedList.get(1)).thenThrow(new RuntimeException());
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,93,"* //following prints ""first"""
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,94,* System.out.println(mockedList.get(0));
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,96,* //following throws runtime exception
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,97,* System.out.println(mockedList.get(1));
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,99,"* //following prints ""null"" because get(999) was not stubbed"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,100,* System.out.println(mockedList.get(999));
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,102,"* //Although it is possible to verify a stubbed invocation, usually <b>it's just redundant</b>"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,103,* //If your code cares what get(0) returns then something else breaks (often before even verify() gets executed).
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,104,"* //If your code doesn't care what get(0) returns then it should not be stubbed. Not convinced? See <a href=""http://monkeyisland.pl/2008/04/26/asking-and-telling"">here</a>."
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,105,* verify(mockedList).get(0);
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,106,* </pre>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,108,* <ul>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,109,"* <li> By default, for all methods that return value, mock returns null, an"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,110,"* empty collection or appropriate primitive/primitive wrapper value (e.g: 0,"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,111,"* false, ... for int/Integer, boolean/Boolean, ...). </li>"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,113,* <li> Stubbing can be overridden: for example common stubbing can go to
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,114,* fixture setup but the test methods can override it. </li>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,116,"* <li> Once stubbed, the method will always return stubbed value regardless"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,117,* of how many times it is called. </li>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,119,* <li> Last stubbing is more important - when you stubbed the same method with
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,120,* the same arguments many times. </li>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,122,* </ul>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,124,* <h3>3. Argument matchers</h3>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,126,* <pre>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,127,* //stubbing using built-in anyInt() argument matcher
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,128,"* when(mockedList.get(anyInt())).thenReturn(""element"");"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,130,* //stubbing using hamcrest (let's say isValid() returns your own hamcrest matcher):
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,131,"* when(mockedList.contains(argThat(isValid()))).thenReturn(""element"");"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,133,"* //following prints ""element"""
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,134,* System.out.println(mockedList.get(999));
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,136,* //<b>you can also verify using an argument matcher</b>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,137,* verify(mockedList).get(anyInt());
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,138,* </pre>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,140,* <p>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,141,* Argument matchers allow flexible verification or stubbing.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,142,* {@link Matchers Click here to see} more built-in matchers
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,143,* and examples of <b>custom argument matchers / hamcrest matchers</b>.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,144,* <p>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,145,* <b>Warning:</b>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,146,* <p>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,147,"* If you are using argument matchers, <b>all arguments</b> have to be provided"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,148,* by matchers.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,149,* <p>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,150,* E.g: (example shows verification but the same applies to stubbing):
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,152,* <pre>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,153,"*   verify(mock).someMethod(anyInt(), anyString(), <b>eq(""third argument"")</b>);"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,154,*   //above is correct - eq() is also an argument matcher
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,156,"*   verify(mock).someMethod(anyInt(), anyString(), <b>""third argument""</b>);"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,157,*   //above is incorrect - exception will be thrown because third argument is given without an argument matcher.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,158,* </pre>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,160,* <h3>4. Verifying exact number of invocations / at least x / never</h3>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,162,* <pre>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,163,* //using mock
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,164,"* mockedList.add(""once"");"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,166,"* mockedList.add(""twice"");"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,167,"* mockedList.add(""twice"");"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,169,"* mockedList.add(""three times"");"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,170,"* mockedList.add(""three times"");"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,171,"* mockedList.add(""three times"");"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,173,* //following two verifications work exactly the same - times(1) is used by default
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,174,"* verify(mockedList).add(""once"");"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,175,"* verify(mockedList, times(1)).add(""once"");"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,177,* //exact number of invocations verification
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,178,"* verify(mockedList, times(2)).add(""twice"");"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,179,"* verify(mockedList, times(3)).add(""three times"");"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,181,* //verification using never(). never() is an alias to times(0)
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,182,"* verify(mockedList, never()).add(""never happened"");"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,184,* //verification using atLeast()/atMost()
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,185,"* verify(mockedList, atLeastOnce()).add(""three times"");"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,186,"* verify(mockedList, atLeast(2)).add(""five times"");"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,187,"* verify(mockedList, atMost(5)).add(""three times"");"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,189,* </pre>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,191,* <p>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,192,* <b>times(1) is the default.</b> Therefore using times(1) explicitly can be
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,193,* omitted.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,195,* <h3>5. Stubbing void methods with exceptions</h3>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,197,* <pre>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,198,*   doThrow(new RuntimeException()).when(mockedList).clear();
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,200,*   //following throws RuntimeException:
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,201,*   mockedList.clear();
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,202,* </pre>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,204,* Read more about doThrow|doAnswer family of methods in paragraph 12.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,205,* <p>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,206,"* Initially, {@link Mockito#stubVoid(Object)} was used for stubbing voids."
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,207,* Currently stubVoid() is deprecated in favor of {@link Mockito#doThrow(Throwable)}.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,208,* This is because of improved readability and consistency with the family of {@link Mockito#doAnswer(Answer)} methods.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,210,* <h3>6. Verification in order</h3>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,212,* <pre>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,213,* List firstMock = mock(List.class);
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,214,* List secondMock = mock(List.class);
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,216,* //using mocks
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,217,"* firstMock.add(""was called first"");"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,218,"* secondMock.add(""was called second"");"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,220,* //create inOrder object passing any mocks that need to be verified in order
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,221,"* InOrder inOrder = inOrder(firstMock, secondMock);"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,223,* //following will make sure that firstMock was called before secondMock
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,224,"* inOrder.verify(firstMock).add(""was called first"");"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,225,"* inOrder.verify(secondMock).add(""was called second"");"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,226,* </pre>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,228,* Verification in order is flexible - <b>you don't have to verify all
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,229,* interactions</b> one-by-one but only those that you are interested in
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,230,* testing in order.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,231,* <p>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,232,"* Also, you can create InOrder object passing only mocks that are relevant for"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,233,* in-order verification.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,235,* <h3>7. Making sure interaction(s) never happened on mock</h3>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,237,* <pre>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,238,* //using mocks - only mockOne is interacted
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,239,"* mockOne.add(""one"");"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,241,* //ordinary verification
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,242,"* verify(mockOne).add(""one"");"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,244,* //verify that method was never called on a mock
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,245,"* verify(mockOne, never()).add(""two"");"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,247,* //verify that other mocks were not interacted
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,248,"* verifyZeroInteractions(mockTwo, mockThree);"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,250,* </pre>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,252,* <h3>8. Finding redundant invocations</h3>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,254,* <pre>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,255,* //using mocks
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,256,"* mockedList.add(""one"");"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,257,"* mockedList.add(""two"");"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,259,"* verify(mockedList).add(""one"");"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,261,* //following verification will fail
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,262,* verifyNoMoreInteractions(mockedList);
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,263,* </pre>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,265,* A word of <b>warning</b>:
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,266,"* Some users who did a lot of classic, expect-run-verify mocking tend to use verifyNoMoreInteractions() very often, even in every test method."
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,267,* verifyNoMoreInteractions() is not recommended to use in every test method.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,268,* verifyNoMoreInteractions() is a handy assertion from the interaction testing toolkit. Use it only when it's relevant.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,269,"* Abusing it leads to overspecified, less maintainable tests. You can find further reading"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,270,"* <a href=""http://monkeyisland.pl/2008/07/12/should-i-worry-about-the-unexpected/"">here</a>."
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,272,* <p>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,273,* See also {@link Mockito#never()} - it is more explicit and
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,274,* communicates the intent well.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,275,* <p>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,277,* <h3>9. Shorthand for mocks creation - &#064;Mock annotation</h3>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,279,* <ul>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,280,* <li>Minimizes repetitive mock creation code.</li>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,281,* <li>Makes the test class more readable.</li>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,282,* <li>Makes the verification error easier to read because the <b>field name</b>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,283,* is used to identify the mock.</li>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,284,* </ul>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,286,* <pre>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,287,*   public class ArticleManagerTest {
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,289,*       &#064;Mock private ArticleCalculator calculator;
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,290,*       &#064;Mock private ArticleDatabase database;
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,291,*       &#064;Mock private UserProvider userProvider;
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,293,*       private ArticleManager manager;
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,294,* </pre>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,296,* <b>Important!</b> This needs to be somewhere in the base class or a test
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,297,* runner:
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,299,* <pre>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,300,* MockitoAnnotations.initMocks(testClass);
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,301,* </pre>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,303,"* You can use built-in runners {@link MockitoJUnitRunner}, {@link MockitoJUnit44Runner}."
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,304,* <p>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,305,* Read more here: {@link MockitoAnnotations}
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,307,* <h3> 10. Stubbing consecutive calls (iterator-style stubbing)</h3>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,309,* Sometimes we need to stub with different return value/exception for the same
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,310,* method call. Typical use case could be mocking iterators.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,311,* Original version of Mockito did not have this feature to promote simple mocking.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,312,"* For example, instead of iterators one could use {@link Iterable} or simply"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,313,* collections. Those offer natural ways of stubbing (e.g. using real
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,314,"* collections). In rare scenarios stubbing consecutive calls could be useful,"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,315,* though:
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,316,* <p>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,318,* <pre>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,319,"* when(mock.someMethod(""some arg""))"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,320,*   .thenThrow(new RuntimeException())
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,321,"*   .thenReturn(""foo"");"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,323,* //First call: throws runtime exception:
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,324,"* mock.someMethod(""some arg"");"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,326,"* //Second call: prints ""foo"""
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,327,"* System.out.println(mock.someMethod(""some arg""));"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,329,"* //Any consecutive call: prints ""foo"" as well (last stubbing wins)."
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,330,"* System.out.println(mock.someMethod(""some arg""));"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,331,* </pre>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,333,"* Alternative, shorter version of consecutive stubbing:"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,335,* <pre>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,336,"* when(mock.someMethod(""some arg""))"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,337,"*   .thenReturn(""one"", ""two"", ""three"");"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,338,* </pre>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,340,* <h3> 11. Stubbing with callbacks</h3>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,342,* Allows stubbing with generic {@link Answer} interface.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,343,*  <p>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,344,* Yet another controversial feature which was not included in Mockito
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,345,* originally. We recommend using simple stubbing with toReturn() or
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,346,* toThrow() only. Those two should be <b>just enough</b> to test/test-drive
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,347,* any clean & simple code.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,349,* <pre>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,350,* when(mock.someMethod(anyString())).thenAnswer(new Answer() {
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,351,*     Object answer(InvocationOnMock invocation) {
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,352,*         Object[] args = invocation.getArguments();
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,353,*         Object mock = invocation.getMock();
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,354,"*         return ""called with arguments: "" + args;"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,358,"* //Following prints ""called with arguments: foo"""
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,359,"* System.out.println(mock.someMethod(""foo""));"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,360,* </pre>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,362,* <h3> 12. doThrow()|doAnswer()|doNothing()|doReturn() family of methods for stubbing voids (mostly)</h3>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,364,* Stubbing voids requires different approach from {@link Mockito#when(Object)} because the compiler does not like void methods inside brackets...
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,365,* <p>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,366,* {@link Mockito#doThrow(Throwable)} replaces the {@link Mockito#stubVoid(Object)} method for stubbing voids.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,367,* The main reason is improved readability and consistency with the family of doAnswer() methods.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,368,* <p>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,369,* Use doThrow() when you want to stub a void method with an exception:
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,370,* <pre>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,371,*   doThrow(new RuntimeException()).when(mockedList).clear();
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,373,*   //following throws RuntimeException:
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,374,*   mockedList.clear();
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,375,* </pre>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,377,* Read more about other methods:
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,378,* <p>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,379,* {@link Mockito#doThrow(Throwable)}
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,380,* <p>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,381,* {@link Mockito#doAnswer(Answer)}
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,382,* <p>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,383,* {@link Mockito#doNothing()}
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,384,* <p>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,385,* {@link Mockito#doReturn(Object)}
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,387,* <h3> 13. Spying on real objects</h3>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,389,* You can create spies of real objects. When you use the spy then the <b>real</b> methods are called (unless a method was stubbed).
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,390,* <p>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,391,"* Real spies should be used <b>carefully and occasionally</b>, for example when dealing with legacy code."
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,392,* <p>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,393,"* Spying on real objects is often associated with ""partial mocking"" concept."
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,394,"* However, Mockito spies are not partial mocks. Mockito spy is meant to help testing other classes - not the spy itself."
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,395,* Therefore spy will not help if you intend to verify if method calls other method on the same object.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,396,* In this case I suggest being OO/SRPy (for example you might extract new class/interface...)
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,398,* <pre>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,399,*   List list = new LinkedList();
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,400,*   List spy = spy(list);
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,402,"*   //optionally, you can stub out some methods:"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,403,*   when(spy.size()).thenReturn(100);
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,405,*   //using the spy calls <b>real</b> methods
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,406,"*   spy.add(""one"");"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,407,"*   spy.add(""two"");"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,409,"*   //prints ""one"" - the first element of a list"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,410,*   System.out.println(spy.get(0));
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,412,*   //size() method was stubbed - 100 is printed
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,413,*   System.out.println(spy.size());
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,415,"*   //optionally, you can verify"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,416,"*   verify(spy).add(""one"");"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,417,"*   verify(spy).add(""two"");"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,418,* </pre>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,420,* <h4>Important gotcha on spying real objects!</h4>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,422,* 1. Sometimes it's impossible to use {@link Mockito#when(Object)} for stubbing spies. Example:
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,424,* <pre>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,425,*   List list = new LinkedList();
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,426,*   List spy = spy(list);
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,428,*   //Impossible: real method is called so spy.get(0) throws IndexOutOfBoundsException (the list is yet empty)
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,429,"*   when(spy.get(0)).thenReturn(""foo"");"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,431,*   //You have to use doReturn() for stubbing
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,432,"*   doReturn(""foo"").when(spy).get(0);"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,433,* </pre>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,435,* 2. Watch out for final methods.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,436,* Mockito doesn't mock final methods so the bottom line is: when you spy on real objects + you try to stub a final method = trouble.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,437,* What will happen is the real method will be called *on mock* but *not on the real instance* you passed to the spy() method.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,438,* Typically you may get a NullPointerException because mock instances don't have fields initiated.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,440,* <h3>14. (**New**) Changing default return values of unstubbed invocations</h3>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,442,* You can create a mock with specified strategy of for its return values.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,443,* It's quite advanced feature and typically you don't need it to write decent tests.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,444,"* However, it can be helpful for working with legacy systems."
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,445,* <p>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,446,* Obviously those return values are used only when you don't stub the method call.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,448,* <pre>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,449,"*   Foo mock = mock(Foo.class, Mockito.RETURNS_SMART_NULLS);"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,450,"*   Foo mockTwo = mock(Foo.class, new YourOwnReturnValues());"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,451,* </pre>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,453,* <p>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,454,* Read more about this interesting implementation of <i>ReturnValues</i>: {@link Mockito#RETURNS_SMART_NULLS}
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,457,"@SuppressWarnings(""unchecked"")"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,458,public class Mockito extends Matchers {
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,461,* Default ReturnValues used by the framework.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,462,* <p>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,463,* {@link ReturnValues} defines the return values of unstubbed invocations.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,464,* <p>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,465,* This implementation first tries the global configuration.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,466,"* If there is no global configuration then it uses {@link EmptyReturnValues} (returns zeros, empty collections, nulls, etc.)"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,468,public static final ReturnValues RETURNS_DEFAULTS = new GloballyConfiguredReturnValues();
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,471,"* Optional ReturnValues to be used with {@link Mockito#mock(Class, ReturnValues)}"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,472,* <p>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,473,* {@link ReturnValues} defines the return values of unstubbed invocations.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,474,* <p>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,475,* This implementation can be helpful when working with legacy code.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,476,* Unstubbed methods often return null. If your code uses the object returned by an unstubbed call you get a NullPointerException.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,477,* This implementation of ReturnValues makes unstubbed methods <b>return SmartNull instead of null</b>.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,478,* SmartNull gives nicer exception message than NPE because it points out the line where unstubbed method was called. You just click on the stack trace.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,479,* <p>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,480,* SmartNullReturnValues first tries to return ordinary return values (see {@link MoreEmptyReturnValues})
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,481,* then it tries to return SmartNull. If the return type is final then plain null is returned.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,482,* <p>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,483,* SmartNullReturnValues will be probably the default return values strategy in Mockito 2.0
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,484,* <p>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,485,* Example:
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,486,* <pre>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,487,"*   Foo mock = (Foo.class, RETURNS_SMART_NULLS);"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,489,*   //calling unstubbed method here:
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,490,*   Stuff stuff = mock.getStuff();
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,492,*   //using object returned by unstubbed call:
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,493,*   stuff.doSomething();
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,495,*   //Above doesn't yield NullPointerException this time!
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,496,"*   //Instead, SmartNullPointerException is thrown."
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,497,*   //Exception's cause links to unstubbed <i>mock.getStuff()</i> - just click on the stack trace.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,498,* </pre>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,500,public static final ReturnValues RETURNS_SMART_NULLS = new SmartNullReturnValues();
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,502,static final MockingProgress MOCKING_PROGRESS = new ThreadSafeMockingProgress();
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,503,private static final Reporter REPORTER = new Reporter();
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,506,* Creates mock object of given class or interface.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,507,* <p>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,508,* See examples in javadoc for {@link Mockito} class
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,510,* @param classToMock class or interface to mock
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,511,* @return mock object
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,513,public static <T> T mock(Class<T> classToMock) {
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,514,"return mock(classToMock, null, null, RETURNS_DEFAULTS);"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,518,* Creates mock with a name. Naming mocks can be helpful for debugging.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,519,* <p>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,520,* Beware that naming mocks is not a solution for complex code which uses too many mocks or collaborators.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,521,* <b>If you have too many mocks then refactor the code</b> so that it's easy to test/debug without necessity of naming mocks.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,522,* <p>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,523,* <b>If you use &#064;Mock annotation then you've got naming mocks for free!</b> &#064;Mock uses field name as mock name. {@link Mock Read more.}
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,524,* <p>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,526,* See examples in javadoc for {@link Mockito} class
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,528,* @param classToMock class or interface to mock
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,529,* @return mock object
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,531,"public static <T> T mock(Class<T> classToMock, String name) {"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,532,"return mock(classToMock, name, null, RETURNS_DEFAULTS);"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,536,* Creates mock with a specified strategy for its return values.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,537,* It's quite advanced feature and typically you don't need it to write decent tests.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,538,* However it can be helpful for working with legacy systems.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,539,* <p>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,540,* Obviously return values are used only when you don't stub the method call.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,542,* <pre>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,543,"*   Foo mock = mock(Foo.class, Mockito.RETURNS_SMART_NULLS);"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,544,"*   Foo mockTwo = mock(Foo.class, new YourOwnReturnValues());"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,545,* </pre>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,547,* <p>See examples in javadoc for {@link Mockito} class</p>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,549,* @param classToMock class or interface to mock
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,550,* @param returnValues default return values for unstubbed methods
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,552,* @return mock object
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,554,"public static <T> T mock(Class<T> classToMock, ReturnValues returnValues) {"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,555,"return mock(classToMock, null, (T) null, returnValues);"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,558,"private static <T> T mock(Class<T> classToMock, String name, T optionalInstance, ReturnValues returnValues) {"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,559,MOCKING_PROGRESS.validateState();
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,560,MOCKING_PROGRESS.resetOngoingStubbing();
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,561,"return MockUtil.createMock(classToMock, MOCKING_PROGRESS, name, optionalInstance, returnValues);"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,565,* Creates a spy of the real object. The spy calls <b>real</b> methods unless they are stubbed.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,566,* <p>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,567,"* Real spies should be used <b>carefully and occasionally</b>, for example when dealing with legacy code."
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,568,* <p>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,569,"* Spying on real objects is often associated with ""partial mocking"" concept."
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,570,"* However, Mockito spies are not partial mocks. Mockito spy is meant to help testing other classes - not the spy itself."
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,571,* Therefore spy will not help if you intend to verify if method calls other method on the same object.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,572,* In this case I suggest being OO/SRPy (for example you might extract new class/interface...)
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,573,* <p>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,574,* Example:
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,576,* <pre>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,577,*   List list = new LinkedList();
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,578,*   List spy = spy(list);
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,580,"*   //optionally, you can stub out some methods:"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,581,*   when(spy.size()).thenReturn(100);
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,583,*   //using the spy calls <b>real</b> methods
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,584,"*   spy.add(""one"");"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,585,"*   spy.add(""two"");"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,587,"*   //prints ""one"" - the first element of a list"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,588,*   System.out.println(spy.get(0));
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,590,*   //size() method was stubbed - 100 is printed
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,591,*   System.out.println(spy.size());
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,593,"*   //optionally, you can verify"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,594,"*   verify(spy).add(""one"");"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,595,"*   verify(spy).add(""two"");"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,596,* </pre>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,598,* <h4>Important gotcha on spying real objects!</h4>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,600,* 1. Sometimes it's impossible to use {@link Mockito#when(Object)} for stubbing spies. Example:
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,602,* <pre>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,603,*   List list = new LinkedList();
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,604,*   List spy = spy(list);
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,606,*   //Impossible: real method is called so spy.get(0) throws IndexOutOfBoundsException (the list is yet empty)
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,607,"*   when(spy.get(0)).thenReturn(""foo"");"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,609,*   //You have to use doReturn() for stubbing
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,610,"*   doReturn(""foo"").when(spy).get(0);"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,611,* </pre>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,613,* 2. Watch out for final methods.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,614,* Mockito doesn't mock final methods so the bottom line is: when you spy on real objects + you try to stub a final method = trouble.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,615,* What will happen is the real method will be called *on mock* but *not on the real instance* you passed to the spy() method.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,616,* Typically you may get a NullPointerException because mock instances don't have fields initiated.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,618,* <p>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,619,* See examples in javadoc for {@link Mockito} class
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,621,* @param object
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,622,*            to spy on
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,623,* @return a spy of the real object
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,625,public static <T> T spy(T object) {
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,626,"return mock((Class<T>) object.getClass(), null, object, RETURNS_DEFAULTS);"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,630,* <pre>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,631,*   //Instead of:
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,632,*   stub(mock.count()).toReturn(10);
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,634,*   //Please do:
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,635,*   when(mock.count()).thenReturn(10);
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,636,* </pre>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,638,* Many users found stub() confusing therefore stub() has been deprecated in favor of {@link Mockito#when(Object)}
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,639,* <p>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,640,* How to fix deprecation warnings? Typically it's just few minutes of search & replace job:
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,641,* <pre>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,642,*   Mockito.stub;  <i>replace with:</i>  Mockito.when;
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,643,*   stub(          <i>replace with:</i>  when(
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,644,*   .toReturn(     <i>replace with:</i>  .thenReturn(
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,645,*   .toThrow(      <i>replace with:</i>  .thenThrow(
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,646,*   .toAnswer(     <i>replace with:</i>  .thenAnswer(
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,647,* </pre>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,648,* If you're an existing user then sorry for making your code littered with deprecation warnings.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,649,* This change was required to make Mockito better.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,651,* @param methodCall
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,652,*            method call
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,653,* @return DeprecatedOngoingStubbing object to set stubbed value/exception
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,655,"@SuppressWarnings(""unchecked"")"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,656,@Deprecated
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,657,public static <T> DeprecatedOngoingStubbing<T> stub(T methodCall) {
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,658,MOCKING_PROGRESS.stubbingStarted();
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,659,return (DeprecatedOngoingStubbing) stub();
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,663,* Enables stubbing methods. Use it when you want the mock to return particular value when particular method is called.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,664,* <p>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,665,"* Simply put: ""<b>When</b> the x method is called <b>then</b> return y""."
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,666,* <p>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,667,* <b>when() is a successor of deprecated {@link Mockito#stub(Object)}</b>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,668,* <p>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,669,* Examples:
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,671,* <pre>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,672,* <b>when</b>(mock.someMethod()).<b>thenReturn</b>(10);
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,674,"* //you can use flexible argument matchers, e.g:"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,675,* when(mock.someMethod(<b>anyString()</b>)).thenReturn(10);
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,677,* //setting exception to be thrown:
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,678,"* when(mock.someMethod(""some arg"")).thenThrow(new RuntimeException());"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,680,* //you can set different behavior for consecutive method calls.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,681,"* //Last stubbing (e.g: thenReturn(""foo"")) determines the behavior of further consecutive calls."
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,682,"* when(mock.someMethod(""some arg""))"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,683,*  .thenThrow(new RuntimeException())
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,684,"*  .thenReturn(""foo"");"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,686,"* //Alternative, shorter version for consecutive stubbing:"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,687,"* when(mock.someMethod(""some arg""))"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,688,"*  .thenReturn(""one"", ""two"");"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,689,* //is the same as:
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,690,"* when(mock.someMethod(""some arg""))"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,691,"*  .thenReturn(""one"")"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,692,"*  .thenReturn(""two"");"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,694,* //shorter version for consecutive method calls throwing exceptions:
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,695,"* when(mock.someMethod(""some arg""))"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,696,"*  .thenThrow(new RuntimeException(), new NullPointerException();"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,698,* </pre>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,700,* For stubbing void methods with throwables see: {@link Mockito#doThrow(Throwable)}
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,701,* <p>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,702,* Stubbing can be overridden: for example common stubbing can go to fixture
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,703,* setup but the test methods can override it.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,704,* <p>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,705,"* Once stubbed, the method will always return stubbed value regardless"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,706,* of how many times it is called.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,707,* <p>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,708,* Last stubbing is more important - when you stubbed the same method with
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,709,* the same arguments many times.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,710,* <p>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,711,"* Although it is possible to verify a stubbed invocation, usually <b>it's just redundant</b>."
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,712,* Let's say you've stubbed foo.bar().
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,713,* If your code cares what foo.bar() returns then something else breaks(often before even verify() gets executed).
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,714,* If your code doesn't care what get(0) returns then it should not be stubbed.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,715,"* Not convinced? See <a href=""http://monkeyisland.pl/2008/04/26/asking-and-telling"">here</a>."
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,717,* <p>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,718,* See examples in javadoc for {@link Mockito} class
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,719,* @param methodCall method to be stubbed
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,721,public static <T> NewOngoingStubbing<T> when(T methodCall) {
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,722,MOCKING_PROGRESS.stubbingStarted();
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,723,return (NewOngoingStubbing) stub();
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,726,private static OngoingStubbing stub() {
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,727,OngoingStubbing stubbing = MOCKING_PROGRESS.pullOngoingStubbing();
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,728,if (stubbing == null) {
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,729,MOCKING_PROGRESS.reset();
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,730,REPORTER.missingMethodInvocation();
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,732,return stubbing;
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,736,* Verifies certain behavior <b>happened once</b>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,737,* <p>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,738,"* Alias to <code>verify(mock, times(1))</code> E.g:"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,739,* <pre>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,740,"*   verify(mock).someMethod(""some arg"");"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,741,* </pre>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,742,* Above is equivalent to:
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,743,* <pre>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,744,"*   verify(mock, times(1)).someMethod(""some arg"");"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,745,* </pre>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,747,* <p>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,748,"* Although it is possible to verify a stubbed invocation, usually <b>it's just redundant</b>."
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,749,* Let's say you've stubbed foo.bar().
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,750,* If your code cares what foo.bar() returns then something else breaks(often before even verify() gets executed).
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,751,* If your code doesn't care what get(0) returns then it should not be stubbed.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,752,"* Not convinced? See <a href=""http://monkeyisland.pl/2008/04/26/asking-and-telling"">here</a>."
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,754,* <p>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,755,* See examples in javadoc for {@link Mockito} class
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,757,* @param mock to be verified
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,758,* @return mock object itself
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,760,public static <T> T verify(T mock) {
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,761,"return verify(mock, times(1));"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,765,* TODO javadoc
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,767,* @param <T>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,768,* @param mock
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,770,public static <T> void reset(T mock) {
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,771,//TODO Perhaps we should validate the state instead of resetting?
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,772,MOCKING_PROGRESS.reset();
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,773,MOCKING_PROGRESS.resetOngoingStubbing();
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,774,//TODO Perhaps we should maintain previous ReturnValues?
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,775,"MockUtil.resetMock(mock, MOCKING_PROGRESS, RETURNS_DEFAULTS);"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,780,* Verifies certain behavior happened at least once / exact number of times / never. E.g:
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,781,* <pre>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,782,"*   verify(mock, times(5)).someMethod(""was called five times"");"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,784,"*   verify(mock, atLeast(2)).someMethod(""was called at least two times"");"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,786,"*   //you can use flexible argument matchers, e.g:"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,787,"*   verify(mock, atLeastOnce()).someMethod(<b>anyString()</b>);"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,788,* </pre>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,790,* <b>times(1) is the default</b> and can be omitted
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,791,* <p>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,792,* See examples in javadoc for {@link Mockito} class
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,794,* @param mock to be verified
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,795,"* @param mode times(x), atLeastOnce() or never()"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,797,* @return mock object itself
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,799,"public static <T> T verify(T mock, VerificationMode mode) {"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,800,if (mock == null) {
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,801,REPORTER.nullPassedToVerify();
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,802,} else if (!MockUtil.isMock(mock)) {
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,803,REPORTER.notAMockPassedToVerify();
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,805,MOCKING_PROGRESS.verificationStarted(mode);
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,806,return mock;
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,810,* Checks if any of given mocks has any unverified interaction.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,811,* <p>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,812,* You can use this method after you verified your mocks - to make sure that nothing
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,813,* else was invoked on your mocks.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,814,* <p>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,815,* See also {@link Mockito#never()} - it is more explicit and communicates the intent well.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,816,* <p>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,817,* Stubbed invocations (if called) are also treated as interactions.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,818,* <p>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,819,* A word of <b>warning</b>:
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,820,"* Some users who did a lot of classic, expect-run-verify mocking tend to use verifyNoMoreInteractions() very often, even in every test method."
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,821,* verifyNoMoreInteractions() is not recommended to use in every test method.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,822,* verifyNoMoreInteractions() is a handy assertion from the interaction testing toolkit. Use it only when it's relevant.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,823,"* Abusing it leads to overspecified, less maintainable tests. You can find further reading"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,824,"* <a href=""http://monkeyisland.pl/2008/07/12/should-i-worry-about-the-unexpected/"">here</a>."
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,825,* <p>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,826,"* This method will also detect unverified invocations that occurred before the test method,"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,827,"* for example: in setUp(), &#064;Before method or in constructor."
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,828,* Consider writing nice code that makes interactions only in test methods.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,830,* <p>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,831,* Example:
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,833,* <pre>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,834,* //interactions
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,835,* mock.doSomething();
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,836,* mock.doSomethingUnexpected();
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,838,* //verification
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,839,* verify(mock).doSomething();
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,841,* //following will fail because 'doSomethingUnexpected()' is unexpected
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,842,* verifyNoMoreInteractions(mock);
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,844,* </pre>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,846,* See examples in javadoc for {@link Mockito} class
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,848,* @param mocks to be verified
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,850,public static void verifyNoMoreInteractions(Object... mocks) {
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,851,assertMocksNotEmpty(mocks);
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,852,MOCKING_PROGRESS.validateState();
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,853,for (Object mock : mocks) {
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,854,try {
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,855,if (mock == null) {
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,856,REPORTER.nullPassedToVerifyNoMoreInteractions();
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,858,MockUtil.getMockHandler(mock).verifyNoMoreInteractions();
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,859,} catch (NotAMockException e) {
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,860,REPORTER.notAMockPassedToVerifyNoMoreInteractions();
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,866,* Verifies that no interactions happened on given mocks.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,867,* <pre>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,868,"*   verifyZeroInteractions(mockOne, mockTwo);"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,869,* </pre>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,870,* This method will also detect invocations
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,871,"* that occurred before the test method, for example: in setUp(), &#064;Before method or in constructor."
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,872,* Consider writing nice code that makes interactions only in test methods.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,873,* <p>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,874,* See examples in javadoc for {@link Mockito} class
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,876,* @param mocks to be verified
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,878,public static void verifyZeroInteractions(Object... mocks) {
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,879,verifyNoMoreInteractions(mocks);
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,882,private static void assertMocksNotEmpty(Object[] mocks) {
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,883,if (mocks == null || mocks.length == 0) {
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,884,REPORTER.mocksHaveToBePassedToVerifyNoMoreInteractions();
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,889,* <pre>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,890,*   //Instead of:
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,891,*   stubVoid(mock).toThrow(e).on().someVoidMethod();
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,893,*   //Please do:
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,894,*   doThrow(e).when(mock).someVoidMethod();
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,895,* </pre>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,897,* doThrow() replaces stubVoid() because of improved readability and consistency with the family of doAnswer() methods.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,898,* <p>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,899,"* Originally, stubVoid() was used for stubbing void methods with exceptions. E.g:"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,901,* <pre>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,902,* stubVoid(mock).toThrow(new RuntimeException()).on().someMethod();
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,904,* //you can stub with different behavior for consecutive calls.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,905,* //Last stubbing (e.g. toReturn()) determines the behavior for further consecutive calls.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,906,* stubVoid(mock)
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,907,*   .toThrow(new RuntimeException())
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,908,*   .toReturn()
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,909,*   .on().someMethod();
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,910,* </pre>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,912,* See examples in javadoc for {@link Mockito} class
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,914,* @deprecated Use {@link Mockito#doThrow(Throwable)} method for stubbing voids
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,916,* @param mock
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,917,*            to stub
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,918,* @return stubbable object that allows stubbing with throwable
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,920,public static <T> VoidMethodStubbable<T> stubVoid(T mock) {
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,921,MockHandler<T> handler = MockUtil.getMockHandler(mock);
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,922,MOCKING_PROGRESS.stubbingStarted();
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,923,return handler.voidMethodStubbable(mock);
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,927,* Use doThrow() when you want to stub the void method with an exception.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,928,* <p>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,929,* Stubbing voids requires different approach from {@link Mockito#when(Object)} because the compiler does not like void methods inside brackets...
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,930,* <p>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,931,* Example:
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,933,* <pre>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,934,*   doThrow(new RuntimeException()).when(mock).someVoidMethod();
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,935,* </pre>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,937,* @param toBeThrown to be thrown when the stubbed method is called
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,938,* @return stubber - to select a method for stubbing
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,940,public static Stubber doThrow(Throwable toBeThrown) {
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,941,return doAnswer(new ThrowsException(toBeThrown));
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,945,* Use doAnswer() when you want to stub a void method with generic {@link Answer}.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,946,* <p>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,947,* Stubbing voids requires different approach from {@link Mockito#when(Object)} because the compiler does not like void methods inside brackets...
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,948,* <p>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,949,* Example:
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,951,* <pre>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,952,*  doAnswer(new Answer() {
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,953,*      public Object answer(InvocationOnMock invocation) {
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,954,*          Object[] args = invocation.getArguments();
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,955,*          Mock mock = invocation.getMock();
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,956,*          return null;
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,958,*  .when(mock).someMethod();
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,959,* </pre>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,961,* @param answer to answer when the stubbed method is called
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,962,* @return stubber - to select a method for stubbing
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,964,public static Stubber doAnswer(Answer answer) {
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,965,MOCKING_PROGRESS.stubbingStarted();
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,966,MOCKING_PROGRESS.resetOngoingStubbing();
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,967,return new StubberImpl().doAnswer(answer);
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,971,* Use doNothing() for setting void methods to do nothing. <b>Beware that void methods on mocks do nothing by default!</b>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,972,"* However, there are rare situations when doNothing() comes handy:"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,973,* <p>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,974,* 1. Stubbing consecutive calls on a void method:
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,975,* <pre>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,976,*   doNothing().
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,977,*   doThrow(new RuntimeException())
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,978,*   .when(mock).someVoidMethod();
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,980,*   //does nothing the first time:
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,981,*   mock.someVoidMethod();
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,983,*   //throws RuntimeException the next time:
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,984,*   mock.someVoidMethod();
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,985,* </pre>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,987,* 2. When you spy real objects and you want the void method to do nothing:
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,988,* <pre>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,989,*   List list = new LinkedList();
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,990,*   List spy = spy(list);
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,992,*   //let's make clear() do nothing
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,993,*   doNothing().when(spy).clear();
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,995,"*   spy.add(""one"");"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,997,"*   //clear() does nothing, so the list still contains ""one"""
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,998,*   spy.clear();
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,999,* </pre>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1001,* @return stubber - to select a method for stubbing
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1003,public static Stubber doNothing() {
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1004,return doAnswer(new DoesNothing());
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1008,* Use doReturn() in those rare occasions when you cannot use {@link Mockito#when(Object)}.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1009,* <p>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1010,* <b>Beware that {@link Mockito#when(Object)} is always recommended for stubbing because it is argument type-safe
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1011,* and more readable</b> (especially when stubbing consecutive calls).
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1012,* <p>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1013,* Here are those rare occasions when doReturn() comes handy:
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1014,* <p>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1016,* 1. When spying real objects and calling real methods on a spy brings side effects
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1018,* <pre>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1019,*   List list = new LinkedList();
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1020,*   List spy = spy(list);
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1022,*   //Impossible: real method is called so spy.get(0) throws IndexOutOfBoundsException (the list is yet empty)
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1023,"*   when(spy.get(0)).thenReturn(""foo"");"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1025,*   //You have to use doReturn() for stubbing:
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1026,"*   doReturn(""foo"").when(spy).get(0);"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1027,* </pre>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1029,* 2. Overriding a previous exception-stubbing:
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1031,* <pre>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1032,*   when(mock.foo()).thenThrow(new RuntimeException());
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1034,*   //Impossible: the exception-stubbed foo() method is called so RuntimeException is thrown.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1035,"*   when(mock.foo()).thenReturn(""bar"");"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1037,*   //You have to use doReturn() for stubbing:
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1038,"*   doReturn(""bar"").when(mock).foo();"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1039,* </pre>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1041,"* Above scenarios shows a tradeoff of Mockito's ellegant syntax. Note that the scenarios are very rare, though."
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1042,* Spying should be sporadic and overriding exception-stubbing is very rare.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1044,* @param toBeReturned to be returned when the stubbed method is called
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1045,* @return stubber - to select a method for stubbing
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1047,public static Stubber doReturn(Object toBeReturned) {
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1048,return doAnswer(new Returns(toBeReturned));
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1052,* Creates InOrder object that allows verifying mocks in order.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1054,* <pre>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1055,"*   InOrder inOrder = inOrder(firstMock, secondMock);"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1057,"*   inOrder.verify(firstMock).add(""was called first"");"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1058,"*   inOrder.verify(secondMock).add(""was called second"");"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1059,* </pre>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1061,* Verification in order is flexible - <b>you don't have to verify all interactions</b> one-by-one
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1062,* but only those that you are interested in testing in order.
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1063,* <p>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1064,"* Also, you can create InOrder object passing only mocks that are relevant for in-order verification."
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1066,* See examples in javadoc for {@link Mockito} class
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1068,* @param mocks to be verified in order
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1070,* @return InOrder object to be used to verify in order
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1072,public static InOrder inOrder(Object... mocks) {
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1073,if (mocks == null || mocks.length == 0) {
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1074,REPORTER.mocksHaveToBePassedWhenCreatingInOrder();
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1076,for (Object mock : mocks) {
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1077,if (mock == null) {
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1078,REPORTER.nullPassedWhenCreatingInOrder();
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1079,} else if (!MockUtil.isMock(mock)) {
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1080,REPORTER.notAMockPassedWhenCreatingInOrder();
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1083,InOrder inOrder = new InOrderImpl(Arrays.asList(mocks));
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1084,return inOrder;
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1088,* Allows verifying exact number of invocations. E.g:
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1089,* <pre>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1090,"*   verify(mock, times(2)).someMethod(""some arg"");"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1091,* </pre>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1093,* See examples in javadoc for {@link Mockito} class
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1095,* @param wantedNumberOfInvocations wanted number of invocations
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1097,* @return verification mode
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1099,public static VerificationMode times(int wantedNumberOfInvocations) {
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1100,return VerificationModeFactory.times(wantedNumberOfInvocations);
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1104,"* Alias to times(0), see {@link Mockito#times(int)}"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1105,* <p>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1106,* Verifies that interaction did not happen. E.g:
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1107,* <pre>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1108,"*   verify(mock, never()).someMethod();"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1109,* </pre>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1111,* <p>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1112,* See examples in javadoc for {@link Mockito} class
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1114,* @return verification mode
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1116,public static VerificationMode never() {
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1117,return times(0);
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1121,* Allows at-least-once verification. E.g:
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1122,* <pre>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1123,"*   verify(mock, atLeastOnce()).someMethod(""some arg"");"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1124,* </pre>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1125,* Alias to atLeast(1)
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1127,* See examples in javadoc for {@link Mockito} class
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1129,* @return verification mode
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1131,public static VerificationMode atLeastOnce() {
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1132,return VerificationModeFactory.atLeastOnce();
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1136,* Allows at-least-x verification. E.g:
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1137,* <pre>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1138,"*   verify(mock, atLeast(3)).someMethod(""some arg"");"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1139,* </pre>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1141,* See examples in javadoc for {@link Mockito} class
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1143,* @param minNumberOfInvocations minimum number of invocations
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1145,* @return verification mode
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1147,public static VerificationMode atLeast(int minNumberOfInvocations) {
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1148,return VerificationModeFactory.atLeast(minNumberOfInvocations);
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1152,* Allows at-most-x verification. E.g:
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1153,* <pre>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1154,"*   verify(mock, atMost(3)).someMethod(""some arg"");"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1155,* </pre>
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1157,* See examples in javadoc for {@link Mockito} class
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1159,* @param maxNumberOfInvocations max number of invocations
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1161,* @return verification mode
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1163,public static VerificationMode atMost(int maxNumberOfInvocations) {
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,1164,return VerificationModeFactory.atMost(maxNumberOfInvocations);
False,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,2, Copyright (c) 2007 Mockito contributors
False,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,3, This program is made available under the terms of the MIT License.
False,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,5,ackage org.mockito.internal.util;
False,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,7,mport net.sf.cglib.proxy.Callback;
False,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,8,mport net.sf.cglib.proxy.Enhancer;
False,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,9,mport net.sf.cglib.proxy.Factory;
False,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,11,mport org.mockito.ReturnValues;
False,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,12,mport org.mockito.exceptions.Reporter;
False,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,13,mport org.mockito.exceptions.misusing.NotAMockException;
False,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,14,mport org.mockito.internal.MockHandler;
False,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,15,mport org.mockito.internal.creation.MethodInterceptorFilter;
False,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,16,mport org.mockito.internal.creation.jmock.ClassImposterizer;
False,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,17,mport org.mockito.internal.invocation.MatchersBinder;
False,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,18,mport org.mockito.internal.progress.MockingProgress;
False,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,20,ublic class MockUtil {
False,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,22,"ublic static <T> T createMock(Class<T> classToMock, MockingProgress progress, String mockName, T optionalInstance, ReturnValues returnValues) {"
False,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,23,alidateType(classToMock);
False,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,24,"ockHandler<T> mockHandler = new MockHandler<T>(new MockName(mockName, classToMock), progress, new MatchersBinder(), returnValues);"
False,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,25,"ethodInterceptorFilter<MockHandler<T>> filter = new MethodInterceptorFilter<MockHandler<T>>(classToMock, mockHandler);"
False,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,27," mock = (T) ClassImposterizer.INSTANCE.imposterise(filter, classToMock);"
False,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,28,ilter.setInstance(optionalInstance != null ? optionalInstance : mock);
False,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,29,eturn mock;
False,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,32,rivate static <T> void validateType(Class<T> classToMock) {
False,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,33,f (!ClassImposterizer.INSTANCE.canImposterise(classToMock)) {
False,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,34,ew Reporter().cannotMockFinalClass(classToMock);
False,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,38,ublic static <T> MockHandler<T> getMockHandler(T mock) {
False,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,39,f (mock == null) {
False,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,40,"hrow new NotAMockException(""Argument should be a mock, but is null!"");"
False,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,43,f (isMockitoMock(mock)) {
False,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,44,eturn getInterceptor(mock).getDelegate();
False,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,45, else {
False,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,46,"hrow new NotAMockException(""Argument should be a mock, but is: "" + mock.getClass());"
False,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,50,rivate static <T> boolean isMockitoMock(T mock) {
False,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,51,eturn Enhancer.isEnhanced(mock.getClass()) && getInterceptor(mock) != null;
False,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,54,ublic static boolean isMock(Object mock) {
False,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,55,eturn mock != null && isMockitoMock(mock);
False,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,58,"SuppressWarnings(""unchecked"")"
False,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,59,rivate static <T> MethodInterceptorFilter<MockHandler<T>> getInterceptor(T mock) {
False,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,60,actory factory = (Factory) mock;
False,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,61,allback callback = factory.getCallback(0);
False,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,62,f(callback instanceof MethodInterceptorFilter) {
False,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,63,eturn (MethodInterceptorFilter) callback;
False,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,65,eturn null;
False,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,68,ublic static MockName getMockName(Object mock) {
False,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,69,eturn getMockHandler(mock).getMockName();
True,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,2,* Copyright (c) 2007 Mockito contributors
True,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,3,* This program is made available under the terms of the MIT License.
True,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,5,package org.mockito.internal.util;
True,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,7,import net.sf.cglib.proxy.Callback;
True,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,8,import net.sf.cglib.proxy.Enhancer;
True,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,9,import net.sf.cglib.proxy.Factory;
True,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,11,import org.mockito.ReturnValues;
True,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,12,import org.mockito.exceptions.Reporter;
True,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,13,import org.mockito.exceptions.misusing.NotAMockException;
True,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,14,import org.mockito.internal.MockHandler;
True,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,15,import org.mockito.internal.creation.MethodInterceptorFilter;
True,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,16,import org.mockito.internal.creation.jmock.ClassImposterizer;
True,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,17,import org.mockito.internal.invocation.MatchersBinder;
True,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,18,import org.mockito.internal.progress.MockingProgress;
True,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,20,public class MockUtil {
True,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,22,"public static <T> T createMock(Class<T> classToMock, MockingProgress progress, String mockName, T optionalInstance,"
True,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,23,ReturnValues returnValues) {
True,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,24,validateType(classToMock);
True,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,25,"MockHandler<T> mockHandler = new MockHandler<T>(new MockName(mockName, classToMock), progress, new MatchersBinder(), returnValues);"
True,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,26,"MethodInterceptorFilter<MockHandler<T>> filter = new MethodInterceptorFilter<MockHandler<T>>(classToMock, mockHandler);"
True,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,28,"T mock = ClassImposterizer.INSTANCE.imposterise(filter, classToMock);"
True,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,29,filter.setInstance(optionalInstance != null ? optionalInstance : mock);
True,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,30,return mock;
True,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,33,"public static <T> void resetMock(T mock, MockingProgress progress, ReturnValues returnValues) {"
True,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,34,MockHandler<T> oldMockHandler = (MockHandler<T>) getMockHandler(mock);
True,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,35,"MockHandler<T> newMockHandler = new MockHandler<T>(oldMockHandler.getMockName(), progress, new MatchersBinder(), returnValues);"
True,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,36,"MethodInterceptorFilter<MockHandler<T>> newFilter = new MethodInterceptorFilter<MockHandler<T>>(Object.class, newMockHandler);"
True,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,37,newFilter.setInstance(mock);
True,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,38,"((Factory) mock).setCallback(0, newFilter);"
True,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,41,private static <T> void validateType(Class<T> classToMock) {
True,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,42,if (!ClassImposterizer.INSTANCE.canImposterise(classToMock)) {
True,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,43,new Reporter().cannotMockFinalClass(classToMock);
True,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,47,public static <T> MockHandler<T> getMockHandler(T mock) {
True,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,48,if (mock == null) {
True,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,49,"throw new NotAMockException(""Argument should be a mock, but is null!"");"
True,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,52,if (isMockitoMock(mock)) {
True,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,53,return getInterceptor(mock).getDelegate();
True,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,54,} else {
True,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,55,"throw new NotAMockException(""Argument should be a mock, but is: "" + mock.getClass());"
True,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,59,private static <T> boolean isMockitoMock(T mock) {
True,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,60,return Enhancer.isEnhanced(mock.getClass()) && getInterceptor(mock) != null;
True,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,63,public static boolean isMock(Object mock) {
True,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,64,return mock != null && isMockitoMock(mock);
True,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,67,"@SuppressWarnings(""unchecked"")"
True,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,68,private static <T> MethodInterceptorFilter<MockHandler<T>> getInterceptor(T mock) {
True,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,69,Factory factory = (Factory) mock;
True,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,70,Callback callback = factory.getCallback(0);
True,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,71,if (callback instanceof MethodInterceptorFilter) {
True,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,72,return (MethodInterceptorFilter<MockHandler<T>>) callback;
True,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,74,return null;
True,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,77,public static MockName getMockName(Object mock) {
True,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,78,return getMockHandler(mock).getMockName();
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,2, Copyright (c) 2007 Mockito contributors
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,3, This program is made available under the terms of the MIT License.
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,5,ackage org.concurrentmockito;
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,6,mport java.util.LinkedList;
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,7,mport java.util.List;
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,9,mport org.junit.Test;
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,10,mport org.junit.runner.JUnitCore;
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,11,mport org.junit.runner.Result;
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,12,mport org.junit.runner.notification.Failure;
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,13,mport org.mockito.MockitoTest;
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,14,mport org.mockito.exceptions.ReporterTest;
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,15,mport org.mockito.exceptions.base.MockitoAssertionErrorTest;
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,16,mport org.mockito.exceptions.base.MockitoExceptionTest;
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,17,mport org.mockito.exceptions.base.StackTraceRemoverTest;
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,18,mport org.mockito.internal.AllInvocationsFinderTest;
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,19,mport org.mockito.internal.MockHandlerTest;
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,20,mport org.mockito.internal.creation.jmock.ClassImposterizerTest;
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,21,mport org.mockito.internal.invocation.InvocationMatcherTest;
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,22,mport org.mockito.internal.invocation.InvocationTest;
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,23,mport org.mockito.internal.invocation.InvocationsFinderTest;
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,24,mport org.mockito.internal.matchers.EqualsTest;
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,25,mport org.mockito.internal.progress.MockingProgressImplTest;
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,26,mport org.mockito.internal.progress.TimesTest;
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,27,mport org.mockito.internal.returnvalues.EmptyReturnValuesTest;
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,28,mport org.mockito.internal.util.ListUtilTest;
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,29,mport org.mockito.internal.util.MockUtilTest;
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,30,mport org.mockito.internal.verification.RegisteredInvocationsTest;
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,31,mport org.mockito.internal.verification.checkers.MissingInvocationCheckerTest;
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,32,mport org.mockito.internal.verification.checkers.MissingInvocationInOrderCheckerTest;
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,33,mport org.mockito.internal.verification.checkers.NumberOfInvocationsCheckerTest;
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,34,mport org.mockito.internal.verification.checkers.NumberOfInvocationsInOrderCheckerTest;
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,35,mport org.mockitousage.ReplacingObjectMethodsTest;
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,36,mport org.mockitousage.UsingVarargsTest;
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,37,mport org.mockitousage.examples.configure.withbaseclass.ConfiguringDefaultReturnValuesUsingBaseClassTest;
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,38,mport org.mockitousage.examples.configure.withrunner.ConfiguringDefaultReturnValuesUsingRunnerTest;
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,39,mport org.mockitousage.examples.configure.withstaticutility.ConfiguringSelectedMocksToReturnFakesTest;
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,40,mport org.mockitousage.examples.use.ExampleTest;
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,41,mport org.mockitousage.matchers.ComparableMatchersTest;
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,42,mport org.mockitousage.matchers.CustomMatchersTest;
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,43,mport org.mockitousage.matchers.InvalidUseOfMatchersTest;
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,44,mport org.mockitousage.matchers.MatchersTest;
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,45,mport org.mockitousage.matchers.MatchersToStringTest;
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,46,mport org.mockitousage.matchers.VerificationAndStubbingUsingMatchersTest;
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,47,mport org.mockitousage.misuse.InvalidStateDetectionTest;
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,48,mport org.mockitousage.misuse.InvalidUsageTest;
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,49,mport org.mockitousage.puzzlers.BridgeMethodPuzzleTest;
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,50,mport org.mockitousage.puzzlers.OverloadingPuzzleTest;
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,51,mport org.mockitousage.stacktrace.PointingStackTraceToActualInvocationChunkTest;
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,52,mport org.mockitousage.stacktrace.PointingStackTraceToActualInvocationTest;
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,53,mport org.mockitousage.stacktrace.StackTraceFilteringTest;
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,54,mport org.mockitousage.stacktrace.StackTrackeChangingTest;
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,55,mport org.mockitousage.stubbing.BasicStubbingTest;
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,56,mport org.mockitousage.stubbing.ReturningDefaultValuesTest;
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,57,mport org.mockitousage.stubbing.StubbingWithThrowablesTest;
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,58,mport org.mockitousage.verification.AtMostXVerificationTest;
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,59,mport org.mockitousage.verification.BasicVerificationInOrderTest;
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,60,mport org.mockitousage.verification.BasicVerificationTest;
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,61,mport org.mockitousage.verification.DescriptiveMessagesOnVerificationInOrderErrorsTest;
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,62,mport org.mockitousage.verification.DescriptiveMessagesWhenTimesXVerificationFailsTest;
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,63,mport org.mockitousage.verification.DescriptiveMessagesWhenVerificationFailsTest;
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,64,mport org.mockitousage.verification.ExactNumberOfTimesVerificationTest;
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,65,mport org.mockitousage.verification.NoMoreInteractionsVerificationTest;
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,66,mport org.mockitousage.verification.RelaxedVerificationInOrderTest;
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,67,mport org.mockitousage.verification.SelectedMocksInOrderVerificationTest;
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,68,mport org.mockitousage.verification.VerificationInOrderMixedWithOrdiraryVerificationTest;
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,69,mport org.mockitousage.verification.VerificationInOrderTest;
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,70,mport org.mockitousage.verification.VerificationOnMultipleMocksUsingMatchersTest;
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,71,mport org.mockitousage.verification.VerificationUsingMatchersTest;
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,72,mport org.mockitoutil.TestBase;
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,74,ublic class ThreadsRunAllTestsHalfManualTest extends TestBase {
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,76,rivate static class AllTestsRunner extends Thread {
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,78,rivate boolean failed;
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,80,ublic void run() {
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,81,esult result = JUnitCore.runClasses(
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,82,"onfiguringDefaultReturnValuesUsingBaseClassTest.class,"
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,83,"onfiguringDefaultReturnValuesUsingRunnerTest.class,"
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,84,"onfiguringSelectedMocksToReturnFakesTest.class,"
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,85,"qualsTest.class,"
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,86,"istUtilTest.class,"
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,87,"ockingProgressImplTest.class,"
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,88,"imesTest.class,"
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,89,"ockHandlerTest.class,"
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,90,"llInvocationsFinderTest.class,"
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,91,"mptyReturnValuesTest.class,"
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,92,"umberOfInvocationsCheckerTest.class,"
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,93,"egisteredInvocationsTest.class,"
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,94,"issingInvocationCheckerTest.class,"
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,95,"umberOfInvocationsInOrderCheckerTest.class,"
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,96,"issingInvocationInOrderCheckerTest.class,"
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,97,"lassImposterizerTest.class,"
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,98,"nvocationMatcherTest.class,"
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,99,"nvocationsFinderTest.class,"
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,100,"nvocationTest.class,"
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,101,"ockitoTest.class,"
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,102,"ockUtilTest.class,"
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,103,"eporterTest.class,"
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,104,"ockitoAssertionErrorTest.class,"
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,105,"tackTraceRemoverTest.class,"
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,106,"ockitoExceptionTest.class,"
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,107,"tackTraceFilteringTest.class,"
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,108,"ridgeMethodPuzzleTest.class,"
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,109,"verloadingPuzzleTest.class,"
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,110,"nvalidUsageTest.class,"
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,111,"singVarargsTest.class,"
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,112,"ustomMatchersTest.class,"
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,113,"omparableMatchersTest.class,"
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,114,"nvalidUseOfMatchersTest.class,"
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,115,"atchersTest.class,"
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,116,"atchersToStringTest.class,"
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,117,"erificationAndStubbingUsingMatchersTest.class,"
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,118,"asicStubbingTest.class,"
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,119,"eturningDefaultValuesTest.class,"
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,120,"tubbingWithThrowablesTest.class,"
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,121,"tMostXVerificationTest.class,"
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,122,"asicVerificationTest.class,"
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,123,"xactNumberOfTimesVerificationTest.class,"
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,124,"erificationInOrderTest.class,"
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,125,"oMoreInteractionsVerificationTest.class,"
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,126,"electedMocksInOrderVerificationTest.class,"
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,127,"erificationOnMultipleMocksUsingMatchersTest.class,"
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,128,"erificationUsingMatchersTest.class,"
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,129,"elaxedVerificationInOrderTest.class,"
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,130,"escriptiveMessagesWhenVerificationFailsTest.class,"
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,131,"escriptiveMessagesWhenTimesXVerificationFailsTest.class,"
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,132,"asicVerificationInOrderTest.class,"
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,133,"erificationInOrderMixedWithOrdiraryVerificationTest.class,"
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,134,"escriptiveMessagesOnVerificationInOrderErrorsTest.class,"
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,135,"nvalidStateDetectionTest.class,"
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,136,"eplacingObjectMethodsTest.class,"
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,137,"tackTrackeChangingTest.class,"
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,138,"xampleTest.class,"
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,139,"ointingStackTraceToActualInvocationTest.class,"
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,140,"ointingStackTraceToActualInvocationChunkTest.class,"
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,141,erificationInOrderFromMultipleThreadsTest.class
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,144,f (!result.wasSuccessful()) {
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,145,"ystem.err.println(""Thread["" + Thread.currentThread().getId() + ""]: error!"");"
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,146,ist<Failure> failures = result.getFailures();
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,147,ystem.err.println(failures.size());
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,148,or (Failure failure : failures) {
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,149,ystem.err.println(failure.getTrace());
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,150,ailed = true;
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,155,ublic boolean isFailed() {
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,156,eturn failed;
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,160,Test
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,161,ublic void shouldRunInMultipleThreads() throws Exception {
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,162,/this test ALWAYS fails if there is a single failing unit
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,163,"ssertFalse(""Run in multiple thread failed"", runInMultipleThreads(3));"
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,166,ublic static boolean runInMultipleThreads(int numberOfThreads) throws Exception {
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,167,ist<AllTestsRunner> threads = new LinkedList<AllTestsRunner>();
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,168,or (int i = 1; i <= numberOfThreads; i++) {
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,169,hreads.add(new AllTestsRunner());
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,172,or (Thread t : threads) {
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,173,.start();
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,176,oolean failed = false;
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,177,or (AllTestsRunner t : threads) {
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,178,.join();
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,179,ailed = failed ? true : t.isFailed();
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,182,eturn failed;
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,185,ublic static void main(String[] args) throws Exception {
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,186,nt numberOfThreads = 20;
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,187,ong before = System.currentTimeMillis();
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,188,unInMultipleThreads(numberOfThreads);
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,189,ong after = System.currentTimeMillis();
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,190,ong executionTime = (after-before)/1000;
False,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,191,"ystem.out.println(""Finished tests in "" + numberOfThreads + "" threads in "" + executionTime + "" seconds."");"
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,2,* Copyright (c) 2007 Mockito contributors
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,3,* This program is made available under the terms of the MIT License.
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,5,package org.concurrentmockito;
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,6,import java.util.LinkedList;
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,7,import java.util.List;
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,9,import org.junit.Test;
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,10,import org.junit.runner.JUnitCore;
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,11,import org.junit.runner.Result;
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,12,import org.junit.runner.notification.Failure;
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,13,import org.mockito.MockitoTest;
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,14,import org.mockito.exceptions.ReporterTest;
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,15,import org.mockito.exceptions.base.MockitoAssertionErrorTest;
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,16,import org.mockito.exceptions.base.MockitoExceptionTest;
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,17,import org.mockito.exceptions.base.StackTraceRemoverTest;
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,18,import org.mockito.internal.AllInvocationsFinderTest;
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,19,import org.mockito.internal.MockHandlerTest;
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,20,import org.mockito.internal.creation.jmock.ClassImposterizerTest;
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,21,import org.mockito.internal.invocation.InvocationMatcherTest;
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,22,import org.mockito.internal.invocation.InvocationTest;
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,23,import org.mockito.internal.invocation.InvocationsFinderTest;
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,24,import org.mockito.internal.matchers.EqualsTest;
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,25,import org.mockito.internal.progress.MockingProgressImplTest;
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,26,import org.mockito.internal.progress.TimesTest;
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,27,import org.mockito.internal.returnvalues.EmptyReturnValuesTest;
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,28,import org.mockito.internal.util.ListUtilTest;
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,29,import org.mockito.internal.util.MockUtilTest;
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,30,import org.mockito.internal.verification.RegisteredInvocationsTest;
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,31,import org.mockito.internal.verification.checkers.MissingInvocationCheckerTest;
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,32,import org.mockito.internal.verification.checkers.MissingInvocationInOrderCheckerTest;
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,33,import org.mockito.internal.verification.checkers.NumberOfInvocationsCheckerTest;
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,34,import org.mockito.internal.verification.checkers.NumberOfInvocationsInOrderCheckerTest;
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,35,import org.mockitousage.ReplacingObjectMethodsTest;
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,36,import org.mockitousage.UsingVarargsTest;
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,37,import org.mockitousage.examples.configure.withbaseclass.ConfiguringDefaultReturnValuesUsingBaseClassTest;
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,38,import org.mockitousage.examples.configure.withrunner.ConfiguringDefaultReturnValuesUsingRunnerTest;
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,39,import org.mockitousage.examples.configure.withstaticutility.ConfiguringSelectedMocksToReturnFakesTest;
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,40,import org.mockitousage.examples.use.ExampleTest;
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,41,import org.mockitousage.matchers.ComparableMatchersTest;
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,42,import org.mockitousage.matchers.CustomMatchersTest;
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,43,import org.mockitousage.matchers.InvalidUseOfMatchersTest;
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,44,import org.mockitousage.matchers.MatchersTest;
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,45,import org.mockitousage.matchers.MatchersToStringTest;
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,46,import org.mockitousage.matchers.VerificationAndStubbingUsingMatchersTest;
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,47,import org.mockitousage.misuse.InvalidStateDetectionTest;
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,48,import org.mockitousage.misuse.InvalidUsageTest;
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,49,import org.mockitousage.puzzlers.BridgeMethodPuzzleTest;
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,50,import org.mockitousage.puzzlers.OverloadingPuzzleTest;
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,51,import org.mockitousage.reset.ResetTest;
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,52,import org.mockitousage.stacktrace.PointingStackTraceToActualInvocationChunkTest;
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,53,import org.mockitousage.stacktrace.PointingStackTraceToActualInvocationTest;
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,54,import org.mockitousage.stacktrace.StackTraceFilteringTest;
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,55,import org.mockitousage.stacktrace.StackTrackeChangingTest;
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,56,import org.mockitousage.stubbing.BasicStubbingTest;
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,57,import org.mockitousage.stubbing.ReturningDefaultValuesTest;
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,58,import org.mockitousage.stubbing.StubbingWithThrowablesTest;
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,59,import org.mockitousage.verification.AtMostXVerificationTest;
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,60,import org.mockitousage.verification.BasicVerificationInOrderTest;
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,61,import org.mockitousage.verification.BasicVerificationTest;
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,62,import org.mockitousage.verification.DescriptiveMessagesOnVerificationInOrderErrorsTest;
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,63,import org.mockitousage.verification.DescriptiveMessagesWhenTimesXVerificationFailsTest;
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,64,import org.mockitousage.verification.DescriptiveMessagesWhenVerificationFailsTest;
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,65,import org.mockitousage.verification.ExactNumberOfTimesVerificationTest;
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,66,import org.mockitousage.verification.NoMoreInteractionsVerificationTest;
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,67,import org.mockitousage.verification.RelaxedVerificationInOrderTest;
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,68,import org.mockitousage.verification.SelectedMocksInOrderVerificationTest;
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,69,import org.mockitousage.verification.VerificationInOrderMixedWithOrdiraryVerificationTest;
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,70,import org.mockitousage.verification.VerificationInOrderTest;
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,71,import org.mockitousage.verification.VerificationOnMultipleMocksUsingMatchersTest;
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,72,import org.mockitousage.verification.VerificationUsingMatchersTest;
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,73,import org.mockitoutil.TestBase;
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,75,public class ThreadsRunAllTestsHalfManualTest extends TestBase {
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,77,private static class AllTestsRunner extends Thread {
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,79,private boolean failed;
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,81,public void run() {
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,82,Result result = JUnitCore.runClasses(
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,83,"ConfiguringDefaultReturnValuesUsingBaseClassTest.class,"
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,84,"ConfiguringDefaultReturnValuesUsingRunnerTest.class,"
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,85,"ConfiguringSelectedMocksToReturnFakesTest.class,"
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,86,"EqualsTest.class,"
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,87,"ListUtilTest.class,"
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,88,"MockingProgressImplTest.class,"
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,89,"TimesTest.class,"
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,90,"MockHandlerTest.class,"
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,91,"AllInvocationsFinderTest.class,"
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,92,"EmptyReturnValuesTest.class,"
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,93,"NumberOfInvocationsCheckerTest.class,"
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,94,"RegisteredInvocationsTest.class,"
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,95,"MissingInvocationCheckerTest.class,"
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,96,"NumberOfInvocationsInOrderCheckerTest.class,"
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,97,"MissingInvocationInOrderCheckerTest.class,"
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,98,"ClassImposterizerTest.class,"
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,99,"InvocationMatcherTest.class,"
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,100,"InvocationsFinderTest.class,"
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,101,"InvocationTest.class,"
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,102,"MockitoTest.class,"
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,103,"MockUtilTest.class,"
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,104,"ReporterTest.class,"
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,105,"MockitoAssertionErrorTest.class,"
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,106,"StackTraceRemoverTest.class,"
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,107,"MockitoExceptionTest.class,"
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,108,"StackTraceFilteringTest.class,"
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,109,"BridgeMethodPuzzleTest.class,"
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,110,"OverloadingPuzzleTest.class,"
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,111,"InvalidUsageTest.class,"
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,112,"UsingVarargsTest.class,"
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,113,"CustomMatchersTest.class,"
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,114,"ComparableMatchersTest.class,"
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,115,"InvalidUseOfMatchersTest.class,"
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,116,"MatchersTest.class,"
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,117,"MatchersToStringTest.class,"
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,118,"VerificationAndStubbingUsingMatchersTest.class,"
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,119,"BasicStubbingTest.class,"
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,120,"ReturningDefaultValuesTest.class,"
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,121,"StubbingWithThrowablesTest.class,"
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,122,"AtMostXVerificationTest.class,"
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,123,"BasicVerificationTest.class,"
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,124,"ExactNumberOfTimesVerificationTest.class,"
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,125,"VerificationInOrderTest.class,"
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,126,"NoMoreInteractionsVerificationTest.class,"
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,127,"SelectedMocksInOrderVerificationTest.class,"
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,128,"VerificationOnMultipleMocksUsingMatchersTest.class,"
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,129,"VerificationUsingMatchersTest.class,"
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,130,"RelaxedVerificationInOrderTest.class,"
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,131,"DescriptiveMessagesWhenVerificationFailsTest.class,"
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,132,"DescriptiveMessagesWhenTimesXVerificationFailsTest.class,"
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,133,"BasicVerificationInOrderTest.class,"
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,134,"VerificationInOrderMixedWithOrdiraryVerificationTest.class,"
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,135,"DescriptiveMessagesOnVerificationInOrderErrorsTest.class,"
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,136,"InvalidStateDetectionTest.class,"
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,137,"ReplacingObjectMethodsTest.class,"
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,138,"StackTrackeChangingTest.class,"
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,139,"ExampleTest.class,"
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,140,"PointingStackTraceToActualInvocationTest.class,"
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,141,"PointingStackTraceToActualInvocationChunkTest.class,"
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,142,"VerificationInOrderFromMultipleThreadsTest.class,"
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,143,ResetTest.class
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,146,if (!result.wasSuccessful()) {
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,147,"System.err.println(""Thread["" + Thread.currentThread().getId() + ""]: error!"");"
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,148,List<Failure> failures = result.getFailures();
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,149,System.err.println(failures.size());
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,150,for (Failure failure : failures) {
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,151,System.err.println(failure.getTrace());
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,152,failed = true;
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,157,public boolean isFailed() {
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,158,return failed;
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,162,@Test
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,163,public void shouldRunInMultipleThreads() throws Exception {
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,164,//this test ALWAYS fails if there is a single failing unit
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,165,"assertFalse(""Run in multiple thread failed"", runInMultipleThreads(3));"
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,168,public static boolean runInMultipleThreads(int numberOfThreads) throws Exception {
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,169,List<AllTestsRunner> threads = new LinkedList<AllTestsRunner>();
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,170,for (int i = 1; i <= numberOfThreads; i++) {
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,171,threads.add(new AllTestsRunner());
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,174,for (Thread t : threads) {
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,175,t.start();
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,178,boolean failed = false;
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,179,for (AllTestsRunner t : threads) {
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,180,t.join();
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,181,failed = failed ? true : t.isFailed();
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,184,return failed;
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,187,public static void main(String[] args) throws Exception {
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,188,int numberOfThreads = 20;
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,189,long before = System.currentTimeMillis();
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,190,runInMultipleThreads(numberOfThreads);
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,191,long after = System.currentTimeMillis();
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,192,long executionTime = (after-before)/1000;
True,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,test/org/concurrentmockito/ThreadsRunAllTestsHalfManualTest.java,193,"System.out.println(""Finished tests in "" + numberOfThreads + "" threads in "" + executionTime + "" seconds."");"
True,test/org/mockitousage/reset/ResetTest.java,test/org/mockitousage/reset/ResetTest.java,2,* Copyright (c) 2007 Mockito contributors
True,test/org/mockitousage/reset/ResetTest.java,test/org/mockitousage/reset/ResetTest.java,3,* This program is made available under the terms of the MIT License.
True,test/org/mockitousage/reset/ResetTest.java,test/org/mockitousage/reset/ResetTest.java,5,package org.mockitousage.reset;
True,test/org/mockitousage/reset/ResetTest.java,test/org/mockitousage/reset/ResetTest.java,7,import static org.mockito.Matchers.*;
True,test/org/mockitousage/reset/ResetTest.java,test/org/mockitousage/reset/ResetTest.java,8,import static org.mockito.Mockito.*;
True,test/org/mockitousage/reset/ResetTest.java,test/org/mockitousage/reset/ResetTest.java,10,import org.junit.Before;
True,test/org/mockitousage/reset/ResetTest.java,test/org/mockitousage/reset/ResetTest.java,11,import org.junit.Test;
True,test/org/mockitousage/reset/ResetTest.java,test/org/mockitousage/reset/ResetTest.java,12,import org.mockito.exceptions.misusing.MissingMethodInvocationException;
True,test/org/mockitousage/reset/ResetTest.java,test/org/mockitousage/reset/ResetTest.java,13,import org.mockitousage.IMethods;
True,test/org/mockitousage/reset/ResetTest.java,test/org/mockitousage/reset/ResetTest.java,14,import org.mockitoutil.TestBase;
True,test/org/mockitousage/reset/ResetTest.java,test/org/mockitousage/reset/ResetTest.java,16,"@SuppressWarnings(""unchecked"")"
True,test/org/mockitousage/reset/ResetTest.java,test/org/mockitousage/reset/ResetTest.java,17,public class ResetTest extends TestBase {
True,test/org/mockitousage/reset/ResetTest.java,test/org/mockitousage/reset/ResetTest.java,19,private IMethods mock;
True,test/org/mockitousage/reset/ResetTest.java,test/org/mockitousage/reset/ResetTest.java,21,@Before
True,test/org/mockitousage/reset/ResetTest.java,test/org/mockitousage/reset/ResetTest.java,22,public void setup() {
True,test/org/mockitousage/reset/ResetTest.java,test/org/mockitousage/reset/ResetTest.java,23,mock = mock(IMethods.class);
True,test/org/mockitousage/reset/ResetTest.java,test/org/mockitousage/reset/ResetTest.java,26,@Test
True,test/org/mockitousage/reset/ResetTest.java,test/org/mockitousage/reset/ResetTest.java,27,public void shouldClearArgumentMatcherStackSoAbuseOfArgumentMatchersIsNotDetectedAfterReset() {
True,test/org/mockitousage/reset/ResetTest.java,test/org/mockitousage/reset/ResetTest.java,28,anyInt(); // abuse of matcher
True,test/org/mockitousage/reset/ResetTest.java,test/org/mockitousage/reset/ResetTest.java,29,reset(mock);
True,test/org/mockitousage/reset/ResetTest.java,test/org/mockitousage/reset/ResetTest.java,30,mock(IMethods.class);
True,test/org/mockitousage/reset/ResetTest.java,test/org/mockitousage/reset/ResetTest.java,33,@Test
True,test/org/mockitousage/reset/ResetTest.java,test/org/mockitousage/reset/ResetTest.java,34,public void shouldNotThrowUnfinishedVerificationAfterReset() throws Exception {
True,test/org/mockitousage/reset/ResetTest.java,test/org/mockitousage/reset/ResetTest.java,35,verify(mock); // unfinished verification
True,test/org/mockitousage/reset/ResetTest.java,test/org/mockitousage/reset/ResetTest.java,36,reset(mock);
True,test/org/mockitousage/reset/ResetTest.java,test/org/mockitousage/reset/ResetTest.java,37,mock(IMethods.class);
True,test/org/mockitousage/reset/ResetTest.java,test/org/mockitousage/reset/ResetTest.java,40,@Test
True,test/org/mockitousage/reset/ResetTest.java,test/org/mockitousage/reset/ResetTest.java,41,public void shouldResetOngoingStubbingSoThatMoreMeaningfulExceptionsAreRaised() {
True,test/org/mockitousage/reset/ResetTest.java,test/org/mockitousage/reset/ResetTest.java,42,mock(IMethods.class);
True,test/org/mockitousage/reset/ResetTest.java,test/org/mockitousage/reset/ResetTest.java,43,mock.booleanReturningMethod();
True,test/org/mockitousage/reset/ResetTest.java,test/org/mockitousage/reset/ResetTest.java,44,reset(mock);
True,test/org/mockitousage/reset/ResetTest.java,test/org/mockitousage/reset/ResetTest.java,45,try {
True,test/org/mockitousage/reset/ResetTest.java,test/org/mockitousage/reset/ResetTest.java,46,"when(null).thenReturn(""anything"");"
True,test/org/mockitousage/reset/ResetTest.java,test/org/mockitousage/reset/ResetTest.java,47,fail();
True,test/org/mockitousage/reset/ResetTest.java,test/org/mockitousage/reset/ResetTest.java,48,} catch (MissingMethodInvocationException e) {
True,test/org/mockitousage/reset/ResetTest.java,test/org/mockitousage/reset/ResetTest.java,52,@Test
True,test/org/mockitousage/reset/ResetTest.java,test/org/mockitousage/reset/ResetTest.java,53,public void shouldRemoveAllStubbing() throws Exception {
True,test/org/mockitousage/reset/ResetTest.java,test/org/mockitousage/reset/ResetTest.java,54,when(mock.objectReturningMethod(isA(Integer.class))).thenReturn(100);
True,test/org/mockitousage/reset/ResetTest.java,test/org/mockitousage/reset/ResetTest.java,55,when(mock.objectReturningMethod(200)).thenReturn(200);
True,test/org/mockitousage/reset/ResetTest.java,test/org/mockitousage/reset/ResetTest.java,56,reset(mock);
True,test/org/mockitousage/reset/ResetTest.java,test/org/mockitousage/reset/ResetTest.java,57,assertNull(mock.objectReturningMethod(200));
True,test/org/mockitousage/reset/ResetTest.java,test/org/mockitousage/reset/ResetTest.java,58,"assertEquals(""default behavior should return null"", null, mock.objectReturningMethod(""blah""));"
True,test/org/mockitousage/reset/ResetTest.java,test/org/mockitousage/reset/ResetTest.java,61,@Test
True,test/org/mockitousage/reset/ResetTest.java,test/org/mockitousage/reset/ResetTest.java,62,public void shouldRemoveAllInteractions() throws Exception {
True,test/org/mockitousage/reset/ResetTest.java,test/org/mockitousage/reset/ResetTest.java,63,mock.simpleMethod(1);
True,test/org/mockitousage/reset/ResetTest.java,test/org/mockitousage/reset/ResetTest.java,64,reset(mock);
True,test/org/mockitousage/reset/ResetTest.java,test/org/mockitousage/reset/ResetTest.java,65,verifyZeroInteractions(mock);
True,test/org/mockitousage/reset/ResetTest.java,test/org/mockitousage/reset/ResetTest.java,68,@Test
True,test/org/mockitousage/reset/ResetTest.java,test/org/mockitousage/reset/ResetTest.java,69,public void shouldRemoveStubbingToString() throws Exception {
True,test/org/mockitousage/reset/ResetTest.java,test/org/mockitousage/reset/ResetTest.java,70,IMethods mockTwo = mock(IMethods.class);
True,test/org/mockitousage/reset/ResetTest.java,test/org/mockitousage/reset/ResetTest.java,71,"when(mockTwo.toString()).thenReturn(""test"");"
True,test/org/mockitousage/reset/ResetTest.java,test/org/mockitousage/reset/ResetTest.java,72,reset(mockTwo);
True,test/org/mockitousage/reset/ResetTest.java,test/org/mockitousage/reset/ResetTest.java,73,"assertThat(mockTwo.toString(), contains(""Mock for IMethods""));"
True,test/org/mockitousage/reset/ResetTest.java,test/org/mockitousage/reset/ResetTest.java,76,@Test
True,test/org/mockitousage/reset/ResetTest.java,test/org/mockitousage/reset/ResetTest.java,77,public void shouldStubbingNotBeTreatedAsInteraction() {
True,test/org/mockitousage/reset/ResetTest.java,test/org/mockitousage/reset/ResetTest.java,78,"when(mock.simpleMethod(""one"")).thenThrow(new RuntimeException());"
True,test/org/mockitousage/reset/ResetTest.java,test/org/mockitousage/reset/ResetTest.java,79,"doThrow(new RuntimeException()).when(mock).simpleMethod(""two"");"
True,test/org/mockitousage/reset/ResetTest.java,test/org/mockitousage/reset/ResetTest.java,80,reset(mock);
True,test/org/mockitousage/reset/ResetTest.java,test/org/mockitousage/reset/ResetTest.java,81,verifyZeroInteractions(mock);
True,test/org/mockitousage/reset/ResetTest.java,test/org/mockitousage/reset/ResetTest.java,84,@Test
True,test/org/mockitousage/reset/ResetTest.java,test/org/mockitousage/reset/ResetTest.java,85,public void shouldNotAffectMockName() {
True,test/org/mockitousage/reset/ResetTest.java,test/org/mockitousage/reset/ResetTest.java,86,"IMethods mock = mock(IMethods.class, ""mockie"");"
True,test/org/mockitousage/reset/ResetTest.java,test/org/mockitousage/reset/ResetTest.java,87,IMethods mockTwo = mock(IMethods.class);
True,test/org/mockitousage/reset/ResetTest.java,test/org/mockitousage/reset/ResetTest.java,88,reset(mock);
True,test/org/mockitousage/reset/ResetTest.java,test/org/mockitousage/reset/ResetTest.java,89,"assertContains(""Mock for IMethods"", """" + mockTwo);"
True,test/org/mockitousage/reset/ResetTest.java,test/org/mockitousage/reset/ResetTest.java,90,"assertEquals(""mockie"", """" + mock);"
