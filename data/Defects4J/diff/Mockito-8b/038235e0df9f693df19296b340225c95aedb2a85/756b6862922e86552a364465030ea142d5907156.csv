is_addition,old_file_path,new_file_path,line_num,content
True,src/org/mockito/MockitoAnnotations.java,src/org/mockito/MockitoAnnotations.java,20,import org.mockito.internal.util.reflection.FieldSetter;
True,src/org/mockito/MockitoAnnotations.java,src/org/mockito/MockitoAnnotations.java,109,"@SuppressWarnings(""deprecation"")"
False,src/org/mockito/MockitoAnnotations.java,src/org/mockito/MockitoAnnotations.java,114,lreadyAssigned = true;
False,src/org/mockito/MockitoAnnotations.java,src/org/mockito/MockitoAnnotations.java,115,oolean wasAccessible = field.isAccessible();
False,src/org/mockito/MockitoAnnotations.java,src/org/mockito/MockitoAnnotations.java,116,ield.setAccessible(true);
True,src/org/mockito/MockitoAnnotations.java,src/org/mockito/MockitoAnnotations.java,116,alreadyAssigned = true;
False,src/org/mockito/MockitoAnnotations.java,src/org/mockito/MockitoAnnotations.java,118,"ield.set(testClass, mock);"
False,src/org/mockito/MockitoAnnotations.java,src/org/mockito/MockitoAnnotations.java,119, catch (IllegalAccessException e) {
True,src/org/mockito/MockitoAnnotations.java,src/org/mockito/MockitoAnnotations.java,118,"new FieldSetter(testClass, field).set(mock);"
True,src/org/mockito/MockitoAnnotations.java,src/org/mockito/MockitoAnnotations.java,119,} catch (Exception e) {
False,src/org/mockito/MockitoAnnotations.java,src/org/mockito/MockitoAnnotations.java,122, finally {
False,src/org/mockito/MockitoAnnotations.java,src/org/mockito/MockitoAnnotations.java,123,ield.setAccessible(wasAccessible);
True,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,19,import org.mockito.internal.util.reflection.FieldSetter;
False,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,84,"hrowIfAlreadyAssigned(field, alreadyAssigned);"
False,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,85,lreadyAssigned = true;
False,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,86,/TODO this is deprecated all over the place
False,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,87,oolean wasAccessible = field.isAccessible();
False,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,88,ield.setAccessible(true);
True,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,85,"throwIfAlreadyAssigned(field, alreadyAssigned);"
True,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,86,alreadyAssigned = true;
False,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,90,"ield.set(testClass, mock);"
False,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,91, catch (IllegalAccessException e) {
True,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,88,"new FieldSetter(testClass, field).set(mock);"
True,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,89,} catch (Exception e) {
False,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,94, finally {
False,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,95,ield.setAccessible(wasAccessible);
True,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,11,import org.mockito.internal.util.reflection.FieldSetter;
False,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,64,"rivate void inject(Field field, Object fieldInstance, Object matchingMock) {"
False,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,65,oolean wasAccessible = field.isAccessible();
False,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,66,ield.setAccessible(true);
True,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,65,"private void inject(Field field, Object fieldInstance, Object matchingMock) {"
False,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,68,"ield.set(fieldInstance, matchingMock);"
False,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,69, catch (IllegalAccessException e) {
True,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,67,"new FieldSetter(fieldInstance, field).set(matchingMock);"
True,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,68,} catch (Exception e) {
False,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,71, finally {
False,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,src/org/mockito/internal/configuration/DefaultInjectionEngine.java,72,ield.setAccessible(wasAccessible);
True,src/org/mockito/internal/util/reflection/FieldSetter.java,src/org/mockito/internal/util/reflection/FieldSetter.java,1,package org.mockito.internal.util.reflection;
True,src/org/mockito/internal/util/reflection/FieldSetter.java,src/org/mockito/internal/util/reflection/FieldSetter.java,3,import java.lang.reflect.Field;
True,src/org/mockito/internal/util/reflection/FieldSetter.java,src/org/mockito/internal/util/reflection/FieldSetter.java,5,public class FieldSetter {
True,src/org/mockito/internal/util/reflection/FieldSetter.java,src/org/mockito/internal/util/reflection/FieldSetter.java,7,private final Object target;
True,src/org/mockito/internal/util/reflection/FieldSetter.java,src/org/mockito/internal/util/reflection/FieldSetter.java,8,private final Field field;
True,src/org/mockito/internal/util/reflection/FieldSetter.java,src/org/mockito/internal/util/reflection/FieldSetter.java,10,"public FieldSetter(Object target, Field field) {"
True,src/org/mockito/internal/util/reflection/FieldSetter.java,src/org/mockito/internal/util/reflection/FieldSetter.java,11,this.target = target;
True,src/org/mockito/internal/util/reflection/FieldSetter.java,src/org/mockito/internal/util/reflection/FieldSetter.java,12,this.field = field;
True,src/org/mockito/internal/util/reflection/FieldSetter.java,src/org/mockito/internal/util/reflection/FieldSetter.java,15,public void set(Object value) {
True,src/org/mockito/internal/util/reflection/FieldSetter.java,src/org/mockito/internal/util/reflection/FieldSetter.java,16,AccessibilityChanger changer = new AccessibilityChanger();
True,src/org/mockito/internal/util/reflection/FieldSetter.java,src/org/mockito/internal/util/reflection/FieldSetter.java,17,changer.enableAccess(field);
True,src/org/mockito/internal/util/reflection/FieldSetter.java,src/org/mockito/internal/util/reflection/FieldSetter.java,18,try {
True,src/org/mockito/internal/util/reflection/FieldSetter.java,src/org/mockito/internal/util/reflection/FieldSetter.java,19,"field.set(target, value);"
True,src/org/mockito/internal/util/reflection/FieldSetter.java,src/org/mockito/internal/util/reflection/FieldSetter.java,20,} catch (Exception e) {
True,src/org/mockito/internal/util/reflection/FieldSetter.java,src/org/mockito/internal/util/reflection/FieldSetter.java,21,"throw new RuntimeException(""Problems setting value: ["" + value + ""] on object: ["" + target + ""] at field: ["" + field + ""]"");"
True,src/org/mockito/internal/util/reflection/FieldSetter.java,src/org/mockito/internal/util/reflection/FieldSetter.java,23,changer.safelyDisableAccess(field);
