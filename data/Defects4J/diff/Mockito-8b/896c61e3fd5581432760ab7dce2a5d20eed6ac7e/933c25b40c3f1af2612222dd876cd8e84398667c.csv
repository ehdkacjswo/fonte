is_addition,old_file_path,new_file_path,line_num,content
True,src/org/mockito/Captor.java,src/org/mockito/Captor.java,2,* Copyright (c) 2010 Mockito contributors
True,src/org/mockito/Captor.java,src/org/mockito/Captor.java,3,* This program is made available under the terms of the MIT License.
True,src/org/mockito/Captor.java,src/org/mockito/Captor.java,5,package org.mockito;
True,src/org/mockito/Captor.java,src/org/mockito/Captor.java,7,import java.lang.annotation.*;
True,src/org/mockito/Captor.java,src/org/mockito/Captor.java,10,* Allows shorthand {@link org.mockito.ArgumentCaptor} creation on fields.
True,src/org/mockito/Captor.java,src/org/mockito/Captor.java,11,* <p>Example:
True,src/org/mockito/Captor.java,src/org/mockito/Captor.java,12,* <pre>
True,src/org/mockito/Captor.java,src/org/mockito/Captor.java,13,* public class Test{
True,src/org/mockito/Captor.java,src/org/mockito/Captor.java,15,*    &#64;Captor ArgumentCaptor&lt;AsyncCallback&lt;Foo&gt;&gt; captor;
True,src/org/mockito/Captor.java,src/org/mockito/Captor.java,17,*    &#64;Before
True,src/org/mockito/Captor.java,src/org/mockito/Captor.java,18,*    public void init(){
True,src/org/mockito/Captor.java,src/org/mockito/Captor.java,19,*       MockitoAnnotations.init(this);
True,src/org/mockito/Captor.java,src/org/mockito/Captor.java,24,* </pre>
True,src/org/mockito/Captor.java,src/org/mockito/Captor.java,26,@Retention(RetentionPolicy.RUNTIME)
True,src/org/mockito/Captor.java,src/org/mockito/Captor.java,27,@Target(ElementType.FIELD)
True,src/org/mockito/Captor.java,src/org/mockito/Captor.java,28,@Documented
True,src/org/mockito/Captor.java,src/org/mockito/Captor.java,29,public @interface Captor {}
True,src/org/mockito/Mock.java,src/org/mockito/Mock.java,9,import java.lang.annotation.Documented;
True,src/org/mockito/Mock.java,src/org/mockito/Mock.java,54,@Documented
True,src/org/mockito/MockitoAnnotations.java,src/org/mockito/MockitoAnnotations.java,96,boolean alreadyAssigned = false;
True,src/org/mockito/MockitoAnnotations.java,src/org/mockito/MockitoAnnotations.java,100,"throwIfAlreadyAssigned(field, alreadyAssigned);"
True,src/org/mockito/MockitoAnnotations.java,src/org/mockito/MockitoAnnotations.java,101,alreadyAssigned = true;
False,src/org/mockito/MockitoAnnotations.java,src/org/mockito/MockitoAnnotations.java,104,"hrow new MockitoException(""Problems initiating mocks annotated with "" + annotation, e);"
True,src/org/mockito/MockitoAnnotations.java,src/org/mockito/MockitoAnnotations.java,107,"throw new MockitoException(""Problems setting field "" + field.getName() + "" annotated with """
True,src/org/mockito/MockitoAnnotations.java,src/org/mockito/MockitoAnnotations.java,108,"+ annotation, e);"
True,src/org/mockito/MockitoAnnotations.java,src/org/mockito/MockitoAnnotations.java,117,"private static void throwIfAlreadyAssigned(Field field, boolean alreadyAssigned) {"
True,src/org/mockito/MockitoAnnotations.java,src/org/mockito/MockitoAnnotations.java,118,if (alreadyAssigned) {
True,src/org/mockito/MockitoAnnotations.java,src/org/mockito/MockitoAnnotations.java,119,"throw new MockitoException(""You cannot have more than one Mockito annotation on a field!\n"" +"
True,src/org/mockito/MockitoAnnotations.java,src/org/mockito/MockitoAnnotations.java,120,"""The field '"" + field.getName() + ""' has multiple Mockito annotations.\n"" +"
True,src/org/mockito/MockitoAnnotations.java,src/org/mockito/MockitoAnnotations.java,121,"""For info how to use annotations see examples in javadoc for MockitoAnnotations class."");"
True,src/org/mockito/Spy.java,src/org/mockito/Spy.java,1,package org.mockito;
True,src/org/mockito/Spy.java,src/org/mockito/Spy.java,3,import java.lang.annotation.*;
True,src/org/mockito/Spy.java,src/org/mockito/Spy.java,6,* Allows shorthand wrapping of field instances in an spy object. <b>Warning</b> if you call
True,src/org/mockito/Spy.java,src/org/mockito/Spy.java,7,* <code>MockitoAnnotations.init(this)</code> in a super class this will not work. Since
True,src/org/mockito/Spy.java,src/org/mockito/Spy.java,8,*  fields in subclass are only instantiated after super class constructor has returned.
True,src/org/mockito/Spy.java,src/org/mockito/Spy.java,10,* <p>Example:
True,src/org/mockito/Spy.java,src/org/mockito/Spy.java,11,* <pre>
True,src/org/mockito/Spy.java,src/org/mockito/Spy.java,12,* public class Test{
True,src/org/mockito/Spy.java,src/org/mockito/Spy.java,14,*    &#64;Spy Foo spyOnFoo = new Foo();
True,src/org/mockito/Spy.java,src/org/mockito/Spy.java,16,*    &#64;Before
True,src/org/mockito/Spy.java,src/org/mockito/Spy.java,17,*    public void init(){
True,src/org/mockito/Spy.java,src/org/mockito/Spy.java,18,*       MockitoAnnotations.init(this);
True,src/org/mockito/Spy.java,src/org/mockito/Spy.java,22,* </pre>
True,src/org/mockito/Spy.java,src/org/mockito/Spy.java,23,* <p>Same as doing:
True,src/org/mockito/Spy.java,src/org/mockito/Spy.java,24,* <pre>
True,src/org/mockito/Spy.java,src/org/mockito/Spy.java,25,*    Foo spyOnFoo = Mockito.spy(new Foo());
True,src/org/mockito/Spy.java,src/org/mockito/Spy.java,26,* </pre>
True,src/org/mockito/Spy.java,src/org/mockito/Spy.java,28,@Retention(RetentionPolicy.RUNTIME)
True,src/org/mockito/Spy.java,src/org/mockito/Spy.java,29,@Target(ElementType.FIELD)
True,src/org/mockito/Spy.java,src/org/mockito/Spy.java,30,@Documented
True,src/org/mockito/Spy.java,src/org/mockito/Spy.java,31,public @interface Spy {
False,src/org/mockito/configuration/AnnotationEngine.java,src/org/mockito/configuration/AnnotationEngine.java,13, Configures mock creation logic behind &#064;Mock annotations
True,src/org/mockito/configuration/AnnotationEngine.java,src/org/mockito/configuration/AnnotationEngine.java,13,"* Configures mock creation logic behind &#064;Mock, &#064;Captor and &#064;Spy annotations"
False,src/org/mockito/configuration/AnnotationEngine.java,src/org/mockito/configuration/AnnotationEngine.java,20, Usually the implementation checks the annotation
False,src/org/mockito/configuration/AnnotationEngine.java,src/org/mockito/configuration/AnnotationEngine.java,21, and then creates a mock object for specified field.
False,src/org/mockito/configuration/AnnotationEngine.java,src/org/mockito/configuration/AnnotationEngine.java,22, <p>
False,src/org/mockito/configuration/AnnotationEngine.java,src/org/mockito/configuration/AnnotationEngine.java,23, You don't need to set the mock on the field. Mockito does it for you.
False,src/org/mockito/configuration/AnnotationEngine.java,src/org/mockito/configuration/AnnotationEngine.java,24, If in doubts look for implementations of this interface.
False,src/org/mockito/configuration/AnnotationEngine.java,src/org/mockito/configuration/AnnotationEngine.java,25, <p>
False,src/org/mockito/configuration/AnnotationEngine.java,src/org/mockito/configuration/AnnotationEngine.java,26, For annotations that you don't care about just return null - then Mockito will not initialize this field
False,src/org/mockito/configuration/AnnotationEngine.java,src/org/mockito/configuration/AnnotationEngine.java,28," @param annotation annotation on the field, for example &#064;Mock"
False,src/org/mockito/configuration/AnnotationEngine.java,src/org/mockito/configuration/AnnotationEngine.java,29, @param field field to create mock object for
False,src/org/mockito/configuration/AnnotationEngine.java,src/org/mockito/configuration/AnnotationEngine.java,30, @return mock created for specified field. Can be null - then Mockito will not initialize the field
True,src/org/mockito/configuration/AnnotationEngine.java,src/org/mockito/configuration/AnnotationEngine.java,20,"* Creates mock, ArgumentCaptor or wraps field instance in spy object."
True,src/org/mockito/configuration/AnnotationEngine.java,src/org/mockito/configuration/AnnotationEngine.java,21,* Only if of correct annotation type.
True,src/org/mockito/configuration/AnnotationEngine.java,src/org/mockito/configuration/AnnotationEngine.java,23,* @param annotation
True,src/org/mockito/configuration/AnnotationEngine.java,src/org/mockito/configuration/AnnotationEngine.java,24,* @param field
True,src/org/mockito/configuration/AnnotationEngine.java,src/org/mockito/configuration/AnnotationEngine.java,25,* @return
False,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,7,mport java.lang.annotation.Annotation;
False,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,8,mport java.lang.reflect.Field;
False,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,10,mport org.mockito.Mock;
False,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,11,mport org.mockito.Mockito;
False,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,12,mport org.mockito.MockitoAnnotations;
True,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,7,import org.mockito.*;
True,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,9,import org.mockito.exceptions.base.MockitoException;
True,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,11,import java.lang.annotation.Annotation;
True,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,12,import java.lang.reflect.*;
False,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,16, Initializes fields annotated with &#064;Mock
False,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,17, <p>
True,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,15,* Initializes fields annotated with &#64;{@link org.mockito.Mock} or &#64;{@link org.mockito.Captor}.
True,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,16,* <p/>
False,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,23," @see org.mockito.AnnotationEngine#createMockFor(java.lang.annotation.Annotation, java.lang.reflect.Field)"
True,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,22,"* @see org.mockito.AnnotationEngine#createMockFor(java.lang.annotation.Annotation, java.lang.reflect.Field)"
False,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,29, else {
False,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,30,eturn null;
True,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,31,if (annotation instanceof Captor) {
True,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,32,Class<?> type = field.getType();
True,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,33,if (!ArgumentCaptor.class.isAssignableFrom(type)) {
True,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,34,"throw new MockitoException(""@Captor field must be of the type ArgumentCaptor.\n"" +"
True,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,35,"""Field: '"" + field.getName() + ""' has wrong type\n"" +"
True,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,36,//TODO add javadocs
True,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,37,"""For info how to use @Captor annotations see examples in javadoc for MockitoAnnotations class."");"
True,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,40,return ArgumentCaptor.forClass(Object.class);
True,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,43,if (annotation instanceof Spy) {
True,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,44,"throw new IllegalArgumentException(""@Spy is not yet supported."");"
True,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,src/org/mockito/internal/configuration/DefaultAnnotationEngine.java,47,return null;
True,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,2,* Copyright (c) 2007 Mockito contributors
True,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,3,* This program is made available under the terms of the MIT License.
True,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,5,package org.mockitousage.basicapi;
True,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,7,import static org.mockito.Mockito.*;
True,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,9,import java.util.LinkedList;
True,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,10,import java.util.List;
True,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,12,import org.junit.Test;
True,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,13,import org.mockito.ArgumentCaptor;
True,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,14,import org.mockito.Captor;
True,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,15,import org.mockito.Mock;
True,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,16,import org.mockitousage.IMethods;
True,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,17,import org.mockitoutil.TestBase;
True,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,19,"@SuppressWarnings(""unchecked"")"
True,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,20,public class CaptorAnnotationBasicTest extends TestBase {
True,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,22,public class Person {
True,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,23,private final String name;
True,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,24,private final String surname;
True,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,26,"public Person(String name, String surname) {"
True,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,27,this.name = name;
True,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,28,this.surname = surname;
True,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,31,public String getName() {
True,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,32,return name;
True,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,35,public String getSurname() {
True,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,36,return surname;
True,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,40,public interface PeopleRepository {
True,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,41,public void save(Person capture);
True,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,44,@Mock PeopleRepository peopleRepository;
True,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,46,"private void createPerson(String name, String surname) {"
True,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,47,"peopleRepository.save(new Person(name, surname));"
True,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,50,@Test
True,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,51,public void shouldUseCaptorInOrdinaryWay() {
True,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,52,//when
True,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,53,"createPerson(""Wes"", ""Williams"");"
True,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,55,//then
True,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,56,ArgumentCaptor<Person> captor = ArgumentCaptor.forClass(Person.class);
True,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,57,verify(peopleRepository).save(captor.capture());
True,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,58,"assertEquals(""Wes"", captor.getValue().getName());"
True,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,59,"assertEquals(""Williams"", captor.getValue().getSurname());"
True,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,62,@Captor ArgumentCaptor<Person> captor;
True,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,64,@Test
True,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,65,public void shouldUseAnnotatedCaptor() {
True,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,66,//when
True,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,67,"createPerson(""Wes"", ""Williams"");"
True,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,69,//then
True,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,70,verify(peopleRepository).save(captor.capture());
True,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,71,"assertEquals(""Wes"", captor.getValue().getName());"
True,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,72,"assertEquals(""Williams"", captor.getValue().getSurname());"
True,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,75,@Captor ArgumentCaptor genericLessCaptor;
True,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,77,@Test
True,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,78,public void shouldUseGenericlessAnnotatedCaptor() {
True,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,79,//when
True,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,80,"createPerson(""Wes"", ""Williams"");"
True,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,82,//then
True,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,83,verify(peopleRepository).save((Person) genericLessCaptor.capture());
True,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,84,"assertEquals(""Wes"", ((Person) genericLessCaptor.getValue()).getName());"
True,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,85,"assertEquals(""Williams"", ((Person) genericLessCaptor.getValue()).getSurname());"
True,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,88,@Captor ArgumentCaptor<List<String>> genericListCaptor;
True,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,89,@Mock IMethods mock;
True,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,91,@Test
True,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,92,public void shouldCaptureGenericList() {
True,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,93,//given
True,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,94,List<String> list = new LinkedList<String>();
True,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,95,mock.listArgMethod(list);
True,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,97,//when
True,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,98,verify(mock).listArgMethod(genericListCaptor.capture());
True,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,100,//then
True,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,test/org/mockitousage/basicapi/CaptorAnnotationBasicTest.java,101,"assertSame(list, genericListCaptor.getValue());"
True,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,2,* Copyright (c) 2007 Mockito contributors
True,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,3,* This program is made available under the terms of the MIT License.
True,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,5,package org.mockitousage.basicapi;
True,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,7,import java.lang.annotation.Retention;
True,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,8,import java.lang.annotation.RetentionPolicy;
True,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,9,import java.util.ArrayList;
True,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,10,import java.util.List;
True,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,11,import java.util.Set;
True,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,13,import org.junit.Test;
True,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,14,import org.mockito.ArgumentCaptor;
True,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,15,import org.mockito.Captor;
True,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,16,import org.mockito.Mock;
True,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,17,import org.mockito.Mockito;
True,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,18,import org.mockito.MockitoAnnotations;
True,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,19,import org.mockito.exceptions.base.MockitoException;
True,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,20,import org.mockitousage.IMethods;
True,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,21,import org.mockitoutil.TestBase;
True,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,23,"@SuppressWarnings(""unchecked"")"
True,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,24,public class CaptorAnnotationTest extends TestBase {
True,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,26,@Retention(RetentionPolicy.RUNTIME)
True,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,27,public @interface NotAMock {
True,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,30,@Captor
True,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,31,final ArgumentCaptor<String> finalCaptor = ArgumentCaptor.forClass(String.class);
True,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,33,@Captor
True,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,34,ArgumentCaptor<List<List<String>>> genericsCaptor;
True,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,36,@Captor
True,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,37,ArgumentCaptor nonGenericCaptorIsAllowed;
True,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,39,@Mock
True,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,40,MockInterface mockInterface;
True,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,42,@NotAMock
True,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,43,Set notAMock;
True,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,45,public interface MockInterface {
True,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,46,"void testMe(String simple, List<List<String>> genericList);"
True,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,49,@Test
True,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,50,public void testNormalUsage() {
True,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,52,MockitoAnnotations.initMocks(this);
True,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,54,// check if assigned correctly
True,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,55,assertNotNull(finalCaptor);
True,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,56,assertNotNull(genericsCaptor);
True,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,57,assertNotNull(nonGenericCaptorIsAllowed);
True,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,58,assertNull(notAMock);
True,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,60,// use captors in the field to be sure they are cool
True,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,61,"String argForFinalCaptor = ""Hello"";"
True,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,62,ArrayList<List<String>> argForGenericsCaptor = new ArrayList<List<String>>();
True,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,64,"mockInterface.testMe(argForFinalCaptor, argForGenericsCaptor);"
True,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,66,"Mockito.verify(mockInterface).testMe(finalCaptor.capture(), genericsCaptor.capture());"
True,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,68,"assertEquals(argForFinalCaptor, finalCaptor.getValue());"
True,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,69,"assertEquals(argForGenericsCaptor, genericsCaptor.getValue());"
True,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,73,public static class WrongType {
True,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,74,@Captor
True,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,75,List wrongType;
True,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,78,@Test
True,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,79,public void shouldScreamWhenWrongTypeForCaptor() {
True,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,80,try {
True,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,81,MockitoAnnotations.initMocks(new WrongType());
True,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,82,fail();
True,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,83,} catch (MockitoException e) {}
True,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,86,//TODO: do we need this? Asked the author of the patch if he doesn't come back we will delete it (17-02-2010)
True,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,87,//    public static class WrongWildcardGenerics {
True,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,88,//        @Captor
True,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,89,//        ArgumentCaptor<? extends List> wrongType;
True,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,92,//    @Test
True,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,93,//    public void shouldScreamWhenWildCardGenericsAreUsedWrong() {
True,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,94,//        MockitoAnnotations.initMocks(new WrongWildcardGenerics());
True,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,97,public static class ToManyAnnotations {
True,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,98,@Captor
True,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,99,@Mock
True,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,100,ArgumentCaptor<List> missingGenerics;
True,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,103,@Test
True,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,104,public void shouldScreamWhenMoreThanOneMockitoAnnotaton() {
True,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,105,try {
True,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,106,MockitoAnnotations.initMocks(new ToManyAnnotations());
True,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,107,fail();
True,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,108,} catch (MockitoException e) {
True,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,109,assertEquals(
True,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,110,"""Cannot have more than one Mockito annotation on field. For info how to use annotations see examples in javadoc for MockitoAnnotations class."","
True,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,111,e.getMessage());
True,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,116,@Test
True,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,117,public void shouldScreamWhenInitializingCaptorsForNullClass() throws Exception {
True,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,118,try {
True,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,119,MockitoAnnotations.initMocks(null);
True,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,120,fail();
True,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,121,} catch (MockitoException e) {
True,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,125,@Test
True,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,126,public void shouldLookForAnnotatedCaptorsInSuperClasses() throws Exception {
True,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,127,Sub sub = new Sub();
True,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,128,MockitoAnnotations.initMocks(sub);
True,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,130,assertNotNull(sub.getCaptor());
True,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,131,assertNotNull(sub.getBaseCaptor());
True,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,132,assertNotNull(sub.getSuperBaseCaptor());
True,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,135,class SuperBase {
True,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,136,@Captor
True,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,137,private ArgumentCaptor<IMethods> mock;
True,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,139,public ArgumentCaptor<IMethods> getSuperBaseCaptor() {
True,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,140,return mock;
True,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,144,class Base extends SuperBase {
True,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,145,@Captor
True,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,146,private ArgumentCaptor<IMethods> mock;
True,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,148,public ArgumentCaptor<IMethods> getBaseCaptor() {
True,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,149,return mock;
True,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,153,class Sub extends Base {
True,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,154,@Captor
True,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,155,private ArgumentCaptor<IMethods> mock;
True,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,157,public ArgumentCaptor<IMethods> getCaptor() {
True,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,test/org/mockitousage/basicapi/CaptorAnnotationTest.java,158,return mock;
True,test/org/mockitousage/basicapi/CaptorAnnotationUnhappyPathTest.java,test/org/mockitousage/basicapi/CaptorAnnotationUnhappyPathTest.java,2,* Copyright (c) 2007 Mockito contributors
True,test/org/mockitousage/basicapi/CaptorAnnotationUnhappyPathTest.java,test/org/mockitousage/basicapi/CaptorAnnotationUnhappyPathTest.java,3,* This program is made available under the terms of the MIT License.
True,test/org/mockitousage/basicapi/CaptorAnnotationUnhappyPathTest.java,test/org/mockitousage/basicapi/CaptorAnnotationUnhappyPathTest.java,5,package org.mockitousage.basicapi;
True,test/org/mockitousage/basicapi/CaptorAnnotationUnhappyPathTest.java,test/org/mockitousage/basicapi/CaptorAnnotationUnhappyPathTest.java,7,import java.util.List;
True,test/org/mockitousage/basicapi/CaptorAnnotationUnhappyPathTest.java,test/org/mockitousage/basicapi/CaptorAnnotationUnhappyPathTest.java,9,import org.junit.Before;
True,test/org/mockitousage/basicapi/CaptorAnnotationUnhappyPathTest.java,test/org/mockitousage/basicapi/CaptorAnnotationUnhappyPathTest.java,10,import org.junit.Test;
True,test/org/mockitousage/basicapi/CaptorAnnotationUnhappyPathTest.java,test/org/mockitousage/basicapi/CaptorAnnotationUnhappyPathTest.java,11,import org.mockito.Captor;
True,test/org/mockitousage/basicapi/CaptorAnnotationUnhappyPathTest.java,test/org/mockitousage/basicapi/CaptorAnnotationUnhappyPathTest.java,12,import org.mockito.MockitoAnnotations;
True,test/org/mockitousage/basicapi/CaptorAnnotationUnhappyPathTest.java,test/org/mockitousage/basicapi/CaptorAnnotationUnhappyPathTest.java,13,import org.mockito.exceptions.base.MockitoException;
True,test/org/mockitousage/basicapi/CaptorAnnotationUnhappyPathTest.java,test/org/mockitousage/basicapi/CaptorAnnotationUnhappyPathTest.java,14,import org.mockitoutil.TestBase;
True,test/org/mockitousage/basicapi/CaptorAnnotationUnhappyPathTest.java,test/org/mockitousage/basicapi/CaptorAnnotationUnhappyPathTest.java,16,"@SuppressWarnings(""unchecked"")"
True,test/org/mockitousage/basicapi/CaptorAnnotationUnhappyPathTest.java,test/org/mockitousage/basicapi/CaptorAnnotationUnhappyPathTest.java,17,public class CaptorAnnotationUnhappyPathTest extends TestBase {
True,test/org/mockitousage/basicapi/CaptorAnnotationUnhappyPathTest.java,test/org/mockitousage/basicapi/CaptorAnnotationUnhappyPathTest.java,19,@Captor List notACaptorField;
True,test/org/mockitousage/basicapi/CaptorAnnotationUnhappyPathTest.java,test/org/mockitousage/basicapi/CaptorAnnotationUnhappyPathTest.java,21,@Before
True,test/org/mockitousage/basicapi/CaptorAnnotationUnhappyPathTest.java,test/org/mockitousage/basicapi/CaptorAnnotationUnhappyPathTest.java,22,@Override
True,test/org/mockitousage/basicapi/CaptorAnnotationUnhappyPathTest.java,test/org/mockitousage/basicapi/CaptorAnnotationUnhappyPathTest.java,23,public void init() {
True,test/org/mockitousage/basicapi/CaptorAnnotationUnhappyPathTest.java,test/org/mockitousage/basicapi/CaptorAnnotationUnhappyPathTest.java,24,//we need to get rid of parent implementation this time
True,test/org/mockitousage/basicapi/CaptorAnnotationUnhappyPathTest.java,test/org/mockitousage/basicapi/CaptorAnnotationUnhappyPathTest.java,27,@Test
True,test/org/mockitousage/basicapi/CaptorAnnotationUnhappyPathTest.java,test/org/mockitousage/basicapi/CaptorAnnotationUnhappyPathTest.java,28,public void shouldFailIfCaptorHasWrongType() throws Exception {
True,test/org/mockitousage/basicapi/CaptorAnnotationUnhappyPathTest.java,test/org/mockitousage/basicapi/CaptorAnnotationUnhappyPathTest.java,29,try {
True,test/org/mockitousage/basicapi/CaptorAnnotationUnhappyPathTest.java,test/org/mockitousage/basicapi/CaptorAnnotationUnhappyPathTest.java,30,//when
True,test/org/mockitousage/basicapi/CaptorAnnotationUnhappyPathTest.java,test/org/mockitousage/basicapi/CaptorAnnotationUnhappyPathTest.java,31,MockitoAnnotations.initMocks(this);
True,test/org/mockitousage/basicapi/CaptorAnnotationUnhappyPathTest.java,test/org/mockitousage/basicapi/CaptorAnnotationUnhappyPathTest.java,32,fail();
True,test/org/mockitousage/basicapi/CaptorAnnotationUnhappyPathTest.java,test/org/mockitousage/basicapi/CaptorAnnotationUnhappyPathTest.java,33,} catch (MockitoException e) {
True,test/org/mockitousage/basicapi/CaptorAnnotationUnhappyPathTest.java,test/org/mockitousage/basicapi/CaptorAnnotationUnhappyPathTest.java,34,//then
True,test/org/mockitousage/basicapi/CaptorAnnotationUnhappyPathTest.java,test/org/mockitousage/basicapi/CaptorAnnotationUnhappyPathTest.java,35,"assertContains(""notACaptorField"", e.getMessage());"
True,test/org/mockitousage/basicapi/CaptorAnnotationUnhappyPathTest.java,test/org/mockitousage/basicapi/CaptorAnnotationUnhappyPathTest.java,36,"assertContains(""wrong type"", e.getMessage());"
