is_addition,old_file_path,new_file_path,line_num,content
False,src/org/mockito/internal/util/reflection/AccessibilityChanger.java,src/org/mockito/internal/util/reflection/AccessibilityChanger.java,17,ssert wasAccessible != null;
True,src/org/mockito/internal/util/reflection/AccessibilityChanger.java,src/org/mockito/internal/util/reflection/AccessibilityChanger.java,17,"assert wasAccessible != null : ""accessibility info shall not be null"";"
False,src/org/mockito/internal/util/reflection/FieldInitializer.java,src/org/mockito/internal/util/reflection/FieldInitializer.java,232,"heckParameterized(constructor, field);"
False,src/org/mockito/internal/util/reflection/FieldInitializer.java,src/org/mockito/internal/util/reflection/FieldInitializer.java,264,eturn constructors.get(0);
True,src/org/mockito/internal/util/reflection/FieldInitializer.java,src/org/mockito/internal/util/reflection/FieldInitializer.java,264,Constructor<?> constructor = constructors.get(0);
True,src/org/mockito/internal/util/reflection/FieldInitializer.java,src/org/mockito/internal/util/reflection/FieldInitializer.java,265,"checkParameterized(constructor, field);"
True,src/org/mockito/internal/util/reflection/FieldInitializer.java,src/org/mockito/internal/util/reflection/FieldInitializer.java,266,return constructor;
True,test/org/mockito/internal/util/reflection/AccessibilityChangerTest.java,test/org/mockito/internal/util/reflection/AccessibilityChangerTest.java,1,package org.mockito.internal.util.reflection;
True,test/org/mockito/internal/util/reflection/AccessibilityChangerTest.java,test/org/mockito/internal/util/reflection/AccessibilityChangerTest.java,3,import org.junit.Ignore;
True,test/org/mockito/internal/util/reflection/AccessibilityChangerTest.java,test/org/mockito/internal/util/reflection/AccessibilityChangerTest.java,4,import org.junit.Test;
True,test/org/mockito/internal/util/reflection/AccessibilityChangerTest.java,test/org/mockito/internal/util/reflection/AccessibilityChangerTest.java,6,import java.lang.reflect.Field;
True,test/org/mockito/internal/util/reflection/AccessibilityChangerTest.java,test/org/mockito/internal/util/reflection/AccessibilityChangerTest.java,7,import java.util.Observable;
True,test/org/mockito/internal/util/reflection/AccessibilityChangerTest.java,test/org/mockito/internal/util/reflection/AccessibilityChangerTest.java,9,public class AccessibilityChangerTest {
True,test/org/mockito/internal/util/reflection/AccessibilityChangerTest.java,test/org/mockito/internal/util/reflection/AccessibilityChangerTest.java,11,private Observable whatever;
True,test/org/mockito/internal/util/reflection/AccessibilityChangerTest.java,test/org/mockito/internal/util/reflection/AccessibilityChangerTest.java,13,@Test
True,test/org/mockito/internal/util/reflection/AccessibilityChangerTest.java,test/org/mockito/internal/util/reflection/AccessibilityChangerTest.java,14,public void should_enable_and_safely_disable() throws Exception {
True,test/org/mockito/internal/util/reflection/AccessibilityChangerTest.java,test/org/mockito/internal/util/reflection/AccessibilityChangerTest.java,15,AccessibilityChanger changer = new AccessibilityChanger();
True,test/org/mockito/internal/util/reflection/AccessibilityChangerTest.java,test/org/mockito/internal/util/reflection/AccessibilityChangerTest.java,16,"changer.enableAccess(field(""whatever""));"
True,test/org/mockito/internal/util/reflection/AccessibilityChangerTest.java,test/org/mockito/internal/util/reflection/AccessibilityChangerTest.java,17,"changer.safelyDisableAccess(field(""whatever""));"
True,test/org/mockito/internal/util/reflection/AccessibilityChangerTest.java,test/org/mockito/internal/util/reflection/AccessibilityChangerTest.java,20,@Test(expected = java.lang.AssertionError.class)
True,test/org/mockito/internal/util/reflection/AccessibilityChangerTest.java,test/org/mockito/internal/util/reflection/AccessibilityChangerTest.java,21,"@Ignore(""should be run only when -ea is passed to the VM"")"
True,test/org/mockito/internal/util/reflection/AccessibilityChangerTest.java,test/org/mockito/internal/util/reflection/AccessibilityChangerTest.java,22,public void safelyDisableAccess_should_fail_when_enableAccess_not_called() throws Exception {
True,test/org/mockito/internal/util/reflection/AccessibilityChangerTest.java,test/org/mockito/internal/util/reflection/AccessibilityChangerTest.java,23,"new AccessibilityChanger().safelyDisableAccess(field(""whatever""));"
True,test/org/mockito/internal/util/reflection/AccessibilityChangerTest.java,test/org/mockito/internal/util/reflection/AccessibilityChangerTest.java,26,private Field field(String fieldName) throws NoSuchFieldException {
True,test/org/mockito/internal/util/reflection/AccessibilityChangerTest.java,test/org/mockito/internal/util/reflection/AccessibilityChangerTest.java,27,return this.getClass().getDeclaredField(fieldName);
