is_addition,old_file_path,new_file_path,line_num,content
False,src/org/mockito/internal/creation/MockSettingsImpl.java,src/org/mockito/internal/creation/MockSettingsImpl.java,159,ublic MockSettings withParameterizedInfo(MockitoGenericMetadata mockitoGenericMetadata) {
True,src/org/mockito/internal/creation/MockSettingsImpl.java,src/org/mockito/internal/creation/MockSettingsImpl.java,159,public MockSettings parameterizedInfo(MockitoGenericMetadata mockitoGenericMetadata) {
True,src/org/mockito/internal/creation/settings/CreationSettings.java,src/org/mockito/internal/creation/settings/CreationSettings.java,7,import org.mockito.internal.util.reflection.MockitoGenericMetadata;
True,src/org/mockito/internal/creation/settings/CreationSettings.java,src/org/mockito/internal/creation/settings/CreationSettings.java,32,protected MockitoGenericMetadata mockitoGenericMetadata;
True,src/org/mockito/internal/creation/settings/CreationSettings.java,src/org/mockito/internal/creation/settings/CreationSettings.java,45,this.mockitoGenericMetadata = copy.mockitoGenericMetadata;
True,src/org/mockito/internal/creation/settings/CreationSettings.java,src/org/mockito/internal/creation/settings/CreationSettings.java,95,public MockitoGenericMetadata getMockitoGenericMetadata() {
True,src/org/mockito/internal/creation/settings/CreationSettings.java,src/org/mockito/internal/creation/settings/CreationSettings.java,96,if (mockitoGenericMetadata == null) {
True,src/org/mockito/internal/creation/settings/CreationSettings.java,src/org/mockito/internal/creation/settings/CreationSettings.java,97,this.mockitoGenericMetadata = MockitoGenericMetadata.from(typeToMock);
True,src/org/mockito/internal/creation/settings/CreationSettings.java,src/org/mockito/internal/creation/settings/CreationSettings.java,99,return mockitoGenericMetadata;
True,src/org/mockito/internal/creation/settings/CreationSettings.java,src/org/mockito/internal/creation/settings/CreationSettings.java,102,public void setMockitoGenericMetadata(MockitoGenericMetadata mockitoGenericMetadata) {
True,src/org/mockito/internal/creation/settings/CreationSettings.java,src/org/mockito/internal/creation/settings/CreationSettings.java,103,this.mockitoGenericMetadata = mockitoGenericMetadata;
False,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,9,mport org.mockito.internal.creation.MockSettingsImpl;
False,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,25,mport static org.mockito.Mockito.withSettings;
False,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,88,ctualParameterizedType(invocation.getMock()).resolveParameterizedType(genericReturnType);
True,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,86,actualParameterizedType(invocation.getMock()).resolveGenericReturnType(invocation.getMethod());
True,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,88,return mockitoGenericMetadata.toMock(this);
False,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,90,eturn mock(
False,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,91,"ockitoGenericMetadata.rawType(),"
False,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,92,(MockSettingsImpl) withSettings().defaultAnswer(this))
False,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java,93,withParameterizedInfo(mockitoGenericMetadata)
False,src/org/mockito/internal/util/reflection/BoundedType.java,src/org/mockito/internal/util/reflection/BoundedType.java,1,ackage org.mockito.internal.util.reflection;
False,src/org/mockito/internal/util/reflection/BoundedType.java,src/org/mockito/internal/util/reflection/BoundedType.java,3,mport java.lang.reflect.Type;
False,src/org/mockito/internal/util/reflection/BoundedType.java,src/org/mockito/internal/util/reflection/BoundedType.java,4,mport java.lang.reflect.TypeVariable;
False,src/org/mockito/internal/util/reflection/BoundedType.java,src/org/mockito/internal/util/reflection/BoundedType.java,5,mport java.util.Arrays;
False,src/org/mockito/internal/util/reflection/BoundedType.java,src/org/mockito/internal/util/reflection/BoundedType.java,8," Type representing bounds of a type variable, allows to keep all bounds information."
False,src/org/mockito/internal/util/reflection/BoundedType.java,src/org/mockito/internal/util/reflection/BoundedType.java,10," <p>It uses the first bound in the array, as this array is never null and always contains at least"
False,src/org/mockito/internal/util/reflection/BoundedType.java,src/org/mockito/internal/util/reflection/BoundedType.java,11, one element (Object is always here if no bounds are declared).</p>
False,src/org/mockito/internal/util/reflection/BoundedType.java,src/org/mockito/internal/util/reflection/BoundedType.java,13," <p>If upper bounds are declared with SomeClass and additional interfaces, then firstBound will be SomeClass and"
False,src/org/mockito/internal/util/reflection/BoundedType.java,src/org/mockito/internal/util/reflection/BoundedType.java,14, interfacesBound will be an array of the additional interfaces.
False,src/org/mockito/internal/util/reflection/BoundedType.java,src/org/mockito/internal/util/reflection/BoundedType.java,16, i.e. <code>SomeClass</code>.
False,src/org/mockito/internal/util/reflection/BoundedType.java,src/org/mockito/internal/util/reflection/BoundedType.java,17," <pre class=""code""><code class=""java"">"
False,src/org/mockito/internal/util/reflection/BoundedType.java,src/org/mockito/internal/util/reflection/BoundedType.java,18,     interface UpperBoundedTypeWithClass<E extends Comparable<E> & Cloneable> {
False,src/org/mockito/internal/util/reflection/BoundedType.java,src/org/mockito/internal/util/reflection/BoundedType.java,19,         E get();
False,src/org/mockito/internal/util/reflection/BoundedType.java,src/org/mockito/internal/util/reflection/BoundedType.java,21,     // will return Comparable type
False,src/org/mockito/internal/util/reflection/BoundedType.java,src/org/mockito/internal/util/reflection/BoundedType.java,22, </code></pre>
False,src/org/mockito/internal/util/reflection/BoundedType.java,src/org/mockito/internal/util/reflection/BoundedType.java,23, </p>
False,src/org/mockito/internal/util/reflection/BoundedType.java,src/org/mockito/internal/util/reflection/BoundedType.java,25,ublic class BoundedType implements Type {
False,src/org/mockito/internal/util/reflection/BoundedType.java,src/org/mockito/internal/util/reflection/BoundedType.java,26,rivate TypeVariable typeVariable;
False,src/org/mockito/internal/util/reflection/BoundedType.java,src/org/mockito/internal/util/reflection/BoundedType.java,29,ublic BoundedType(TypeVariable typeVariable) {
False,src/org/mockito/internal/util/reflection/BoundedType.java,src/org/mockito/internal/util/reflection/BoundedType.java,30,his.typeVariable = typeVariable;
False,src/org/mockito/internal/util/reflection/BoundedType.java,src/org/mockito/internal/util/reflection/BoundedType.java,34," @return either a class or an interface (parameterized or not), if no bounds declared Object is returned."
False,src/org/mockito/internal/util/reflection/BoundedType.java,src/org/mockito/internal/util/reflection/BoundedType.java,36,ublic Type firstBound() {
False,src/org/mockito/internal/util/reflection/BoundedType.java,src/org/mockito/internal/util/reflection/BoundedType.java,37,eturn typeVariable.getBounds()[0]; //
False,src/org/mockito/internal/util/reflection/BoundedType.java,src/org/mockito/internal/util/reflection/BoundedType.java,41," On a Type Variable (typeVar extends AClass_0 & I_1 & I_2 & etc), will return an array"
False,src/org/mockito/internal/util/reflection/BoundedType.java,src/org/mockito/internal/util/reflection/BoundedType.java,42, containing I_1 and I_2.
False,src/org/mockito/internal/util/reflection/BoundedType.java,src/org/mockito/internal/util/reflection/BoundedType.java,44," @return other bounds for this type, these bounds can only be only interfaces as the JLS says,"
False,src/org/mockito/internal/util/reflection/BoundedType.java,src/org/mockito/internal/util/reflection/BoundedType.java,45, empty array if no other bound declared.
False,src/org/mockito/internal/util/reflection/BoundedType.java,src/org/mockito/internal/util/reflection/BoundedType.java,47,ublic Type[] interfaceBounds() {
False,src/org/mockito/internal/util/reflection/BoundedType.java,src/org/mockito/internal/util/reflection/BoundedType.java,48,ype[] interfaceBounds = new Type[typeVariable.getBounds().length - 1];
False,src/org/mockito/internal/util/reflection/BoundedType.java,src/org/mockito/internal/util/reflection/BoundedType.java,49,"ystem.arraycopy(typeVariable.getBounds(), 1, interfaceBounds, 0, typeVariable.getBounds().length - 1);"
False,src/org/mockito/internal/util/reflection/BoundedType.java,src/org/mockito/internal/util/reflection/BoundedType.java,50,eturn interfaceBounds;
False,src/org/mockito/internal/util/reflection/BoundedType.java,src/org/mockito/internal/util/reflection/BoundedType.java,53,Override
False,src/org/mockito/internal/util/reflection/BoundedType.java,src/org/mockito/internal/util/reflection/BoundedType.java,54,ublic boolean equals(Object o) {
False,src/org/mockito/internal/util/reflection/BoundedType.java,src/org/mockito/internal/util/reflection/BoundedType.java,55,f (this == o) return true;
False,src/org/mockito/internal/util/reflection/BoundedType.java,src/org/mockito/internal/util/reflection/BoundedType.java,56,f (o == null || getClass() != o.getClass()) return false;
False,src/org/mockito/internal/util/reflection/BoundedType.java,src/org/mockito/internal/util/reflection/BoundedType.java,58,eturn typeVariable.equals(((BoundedType) o).typeVariable);
False,src/org/mockito/internal/util/reflection/BoundedType.java,src/org/mockito/internal/util/reflection/BoundedType.java,62,Override
False,src/org/mockito/internal/util/reflection/BoundedType.java,src/org/mockito/internal/util/reflection/BoundedType.java,63,ublic int hashCode() {
False,src/org/mockito/internal/util/reflection/BoundedType.java,src/org/mockito/internal/util/reflection/BoundedType.java,64,eturn typeVariable.hashCode();
False,src/org/mockito/internal/util/reflection/BoundedType.java,src/org/mockito/internal/util/reflection/BoundedType.java,67,Override
False,src/org/mockito/internal/util/reflection/BoundedType.java,src/org/mockito/internal/util/reflection/BoundedType.java,68,ublic String toString() {
False,src/org/mockito/internal/util/reflection/BoundedType.java,src/org/mockito/internal/util/reflection/BoundedType.java,69,inal StringBuilder sb = new StringBuilder();
False,src/org/mockito/internal/util/reflection/BoundedType.java,src/org/mockito/internal/util/reflection/BoundedType.java,70,"b.append(""{firstBound="").append(firstBound());"
False,src/org/mockito/internal/util/reflection/BoundedType.java,src/org/mockito/internal/util/reflection/BoundedType.java,71,"b.append("", interfaceBounds="").append(Arrays.deepToString(interfaceBounds()));"
False,src/org/mockito/internal/util/reflection/BoundedType.java,src/org/mockito/internal/util/reflection/BoundedType.java,72,b.append('}');
False,src/org/mockito/internal/util/reflection/BoundedType.java,src/org/mockito/internal/util/reflection/BoundedType.java,73,eturn sb.toString();
False,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,1,ackage org.mockito.internal.util.reflection;
False,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,3,mport java.lang.reflect.ParameterizedType;
False,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,4,mport java.lang.reflect.Type;
False,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,5,mport java.lang.reflect.TypeVariable;
False,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,6,mport java.util.HashMap;
False,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,7,mport java.util.Map;
False,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,10, Represents a class augmented to a Parameterized Type
False,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,12,lass ClassEnhancedToParameterizedType implements ParameterizedType {
False,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,13,rivate Class<?> clazz;
False,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,16, Represents actual type variables resolved for current class.
False,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,18,"rivate Map<TypeVariable, Type> allActualTypeParameters = new HashMap<TypeVariable, Type>();"
False,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,20,lassEnhancedToParameterizedType(Class<?> clazz) {
False,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,21,his.clazz = clazz;
False,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,22,eadActualTypeParametersOnDeclaringClass();
False,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,25,rivate void readActualTypeParametersOnDeclaringClass() {
False,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,26,egisterTypeVariablesOn(clazz);
False,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,27,egisterTypeVariablesOn(clazz.getGenericSuperclass());
False,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,28,or (Type genericInterface : clazz.getGenericInterfaces()) {
False,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,29,egisterTypeVariablesOn(genericInterface);
False,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,33,rivate void registerTypeVariablesOn(Type classType) {
False,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,34,f (!(classType instanceof ParameterizedType)) {
False,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,35,eturn;
False,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,37,arameterizedType parameterizedType = (ParameterizedType) classType;
False,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,38,ypeVariable[] typeParameters = ((Class<?>) parameterizedType.getRawType()).getTypeParameters();
False,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,39,ype[] actualTypeArguments = parameterizedType.getActualTypeArguments();
False,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,40,or (int i = 0; i < actualTypeArguments.length; i++) {
False,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,41,ype actualTypeArgument = actualTypeArguments[i];
False,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,42,ypeVariable typeParameter = typeParameters[i];
False,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,44,"llActualTypeParameters.put(typeParameter, actualTypeArgument);"
False,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,45,"enericTypeInfo.logger.log(""For '"" + parameterizedType + ""' found type variable : { '"" + typeParameter + ""(in '"" + typeParameter.getGenericDeclaration() + ""')"" + ""' : '"" + actualTypeArgument + ""' }"");"
False,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,49,rivate void registerTypeVariablesOn(Class<?> clazz) {
False,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,50,ypeVariable[] typeParameters = clazz.getTypeParameters();
False,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,51,or (TypeVariable typeParameter : typeParameters) {
False,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,52,"llActualTypeParameters.put(typeParameter, boundsOf(typeParameter));"
False,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,53,"enericTypeInfo.logger.log(""For '"" + clazz.getCanonicalName() + ""' found type variable : { '"" + typeParameter + ""(in '"" + typeParameter.getGenericDeclaration() + ""')"" + ""' : '"" + boundsOf(typeParameter) + ""' }"");"
False,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,57,rivate Type boundsOf(TypeVariable typeParameter) {
False,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,58,eturn new GenericTypeInfo.TypeVariableUpperBounds(typeParameter);
False,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,63,ublic Type[] getActualTypeArguments() {
False,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,66,eturn new Type[0];  //To change body of implemented methods use File | Settings | File Templates.
False,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,69,ublic Type getRawType() {
False,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,70,eturn clazz;
False,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,73,ublic Type getOwnerType() {
False,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,74,/ TODO
False,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,src/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedType.java,75,eturn null;
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,1,ackage org.mockito.internal.util.reflection;
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,3,mport org.mockito.Incubating;
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,4,mport org.mockito.exceptions.base.MockitoException;
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,5,mport org.mockito.internal.util.Checks;
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,6,mport org.mockito.internal.util.ConsoleMockitoLogger;
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,7,mport org.mockito.internal.util.MockitoLogger;
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,9,mport java.lang.reflect.Method;
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,10,mport java.lang.reflect.ParameterizedType;
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,11,mport java.lang.reflect.Type;
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,12,mport java.lang.reflect.TypeVariable;
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,13,mport java.util.Arrays;
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,14,mport java.util.HashMap;
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,15,mport java.util.Map;
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,18, Allow easy access to generic type information
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,20, TODO refactor with polymorphism in mind?
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,22,Incubating
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,23,ublic class GenericTypeInfo {
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,25,ublic static MockitoLogger logger = new ConsoleMockitoLogger();
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,28, This is the type that we wish to get more generic information.
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,30,rivate final Type typeToSolve;
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,33, The source class from which the generic info information should be retrieved.
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,35,rivate final Type clazz;
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,38, Represents resolved type variables on class.
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,40,"rivate Map<TypeVariable, Type> typeVariables = new HashMap<TypeVariable, Type>();"
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,43,"rivate GenericTypeInfo(Type typeToSolve, Class<?> sourceType, Map<TypeVariable, Type> typeVariables) {"
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,44,his.typeToSolve = typeToSolve;
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,45,his.clazz = sourceType;
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,46,his.typeVariables = typeVariables;
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,47,"hrow new UnsupportedOperationException(""code under (re)factoring"");"
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,51, Returns actual type as a raw type.
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,52, @return Raw type
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,54,ublic Class<?> asRawType() {
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,55,eturn extractRawTypeOf(typeToSolve);
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,58,rivate Class<?> extractRawTypeOf(Type type) {
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,59,f (type instanceof Class) {
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,60,eturn (Class<?>) type;
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,62,f (type instanceof ParameterizedType) {
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,63,eturn (Class<?>) ((ParameterizedType) type).getRawType();
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,65,f (type instanceof TypeVariableUpperBounds) {
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,66,eturn extractRawTypeOf(((TypeVariableUpperBounds) type).firstBound());
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,68,f (type instanceof TypeVariable) {
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,70,"f type is a TypeVariable, then it is needed to gather data elsewhere. Usually TypeVariables are declared"
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,71,"n the class definition, such as such as List<E>."
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,73,eturn extractRawTypeOf(typeVariables.get(type));
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,75,"hrow new MockitoException(""Raw extraction not managed for : '"" + type + ""'"");"
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,79, Return the type of the type to solve.
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,81, <p>Different than raw type extraction as it can extract actual type instead of TypeVariable</p>.
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,83," TODO Eventually create our own ParameterizedType, with resolved TypeVariables"
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,85, @return The actual type
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,87,rivate Type actualType() {
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,88,eturn extractActualTypeOf(typeToSolve);
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,91,rivate Type extractActualTypeOf(Type type) {
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,92,f (type instanceof TypeVariableUpperBounds) {
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,93,eturn extractActualTypeOf(((TypeVariableUpperBounds) type).firstBound());
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,95,f (type instanceof TypeVariable) {
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,97,"f type is a TypeVariable, then it is needed to gather data elsewhere. Usually TypeVariables are declared"
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,98,"n the class definition, such as such as List<E>."
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,100,eturn extractActualTypeOf(typeVariables.get(type));
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,102,"eturn type; // irrelevant, we don't manage other types."
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,106,Override
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,107,ublic String toString() {
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,108,inal StringBuilder sb = new StringBuilder();
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,109,b.append(actualType());
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,110,b.append(' ').append(typeVariables);
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,111,eturn sb.toString();
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,114,Override
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,115,ublic boolean equals(Object o) {
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,116,f (this == o) return true;
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,117,f (o == null || getClass() != o.getClass()) return false;
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,119,enericTypeInfo that = (GenericTypeInfo) o;
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,121,eturn !(clazz != null ? !clazz.equals(that.clazz) : that.clazz != null) && typeToSolve.equals(that.typeToSolve);
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,124,Override
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,125,ublic int hashCode() {
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,126,nt result = typeToSolve.hashCode();
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,127,esult = 31 * result + (clazz != null ? clazz.hashCode() : 0);
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,128,eturn result;
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,133," Type representing bounds of a type variable, allows to keep all bounds information."
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,135," <p>It uses the first bound in the array, as this array is never null and always contains at least"
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,136, one element (Object is always here if no bounds are declared).</p>
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,138," <p>If upper bounds are declared with SomeClass and additional interfaces, then firstBound will be SomeClass and"
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,139, interfacesBound will be an array of the additional interfaces.
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,141, i.e. <code>SomeClass</code>.
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,142," <pre class=""code""><code class=""java"">"
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,143,     interface UpperBoundedTypeWithClass<E extends Comparable<E> & Cloneable> {
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,144,         E get();
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,146,     // will return Comparable type
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,147, </code></pre>
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,148, </p>
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,150,ublic static class TypeVariableUpperBounds implements Type {
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,151,rivate TypeVariable typeVariable;
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,154,ublic TypeVariableUpperBounds(TypeVariable typeVariable) {
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,155,his.typeVariable = typeVariable;
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,158,ublic Type firstBound() {
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,159,"eturn typeVariable.getBounds()[0]; // either a class or an interface, always present"
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,162,ublic Type[] interfaceBounds() {
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,163,/ JLS says only interfaces from here (typeVar extends AClass_0 & I_1 & I_2 & etc)
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,164,ype[] interfaceBounds = new Type[typeVariable.getBounds().length - 1];
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,165,"ystem.arraycopy(typeVariable.getBounds(), 1, interfaceBounds, 0, typeVariable.getBounds().length - 1);"
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,166,eturn interfaceBounds;
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,169,Override
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,170,ublic String toString() {
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,171,inal StringBuilder sb = new StringBuilder();
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,172,"b.append(""{firstBound="").append(firstBound());"
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,173,"b.append("", interfaceBounds="").append(Arrays.deepToString(interfaceBounds()));"
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,174,b.append('}');
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,175,eturn sb.toString();
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,180,ublic static ParameterizedType asParameterizedType(Class<?> clazz) {
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,181,eturn new ClassEnhancedToParameterizedType(clazz);
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,184,Incubating
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,185,ublic static Builder on(Class<?> clazz) {
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,186,"hecks.checkNotNull(clazz, ""clazz"");"
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,187,eturn new Builder().onClass(clazz);
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,190,Incubating
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,191,ublic static Builder on(GenericTypeInfo genericTypeInfo) {
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,192,"hecks.checkNotNull(genericTypeInfo, ""genericTypeInfo"");"
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,193,eturn new Builder().onClass(genericTypeInfo.asRawType())
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,194,withTypeVariables(genericTypeInfo.typeVariables);
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,200,Incubating
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,201,ublic static class Builder {
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,203,rivate Class<?> clazz;
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,204,rivate Method method;
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,205,"rivate Map<TypeVariable, Type> typeVariables = new HashMap<TypeVariable, Type>();"
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,208,ublic Builder onClass(Class<?> clazz) {
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,209,his.clazz = clazz;
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,210,eturn this;
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,213,ublic Builder method(Method method) {
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,214,"hecks.checkNotNull(method, ""method"");"
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,215,his.method = method;
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,216,eturn this;
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,219,ublic Builder methodName(String methodName) {
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,220,"hecks.checkNotNull(methodName, ""methodName"");"
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,221,"his.method = pickFirstMatchingMethod(methodName, clazz);"
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,222,eturn this;
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,225,"rivate Method pickFirstMatchingMethod(String methodName, Class<?> clazz) {"
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,226,or (Method method : clazz.getMethods()) {
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,227,f (method.getName().contains(methodName)) {
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,228,eturn method;
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,231,"hrow new IllegalStateException(""The method : '"" + methodName + ""' do not exist in '"" + clazz.getSimpleName() + ""'"");"
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,234,"rivate Builder withTypeVariables(Map<TypeVariable, Type> typeVariables) {"
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,235,his.typeVariables = typeVariables;
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,236,eturn this;
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,239,ublic GenericTypeInfo genericReturnTypeInfo() {
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,240,ype genericReturnType = method.getGenericReturnType();
False,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,src/org/mockito/internal/util/reflection/GenericTypeInfo.java,241,"eturn new GenericTypeInfo(genericReturnType, clazz, typeVariables);"
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,5,import org.mockito.Mockito;
False,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,7,mport java.lang.reflect.*;
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,7,import org.mockito.internal.creation.MockSettingsImpl;
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,8,import org.mockito.internal.util.Checks;
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,9,import org.mockito.internal.util.ConsoleMockitoLogger;
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,10,import org.mockito.internal.util.MockitoLogger;
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,11,import org.mockito.stubbing.Answer;
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,13,import java.lang.reflect.Method;
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,14,import java.lang.reflect.ParameterizedType;
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,15,import java.lang.reflect.Type;
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,16,import java.lang.reflect.TypeVariable;
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,19,import static org.mockito.Mockito.withSettings;
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,24,public static MockitoLogger logger = new ConsoleMockitoLogger();
False,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,18,rivate MockitoGenericMetadata() {
False,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,34,"enericTypeInfo.logger.log(""For '"" + parameterizedType + ""' found type variable : { '"" + typeParameter + ""("" + System.identityHashCode(typeParameter) + "")"" + ""' : '"" + actualTypeArgument + ""("" + System.identityHashCode(typeParameter) + "")"" + ""' }"");"
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,44,"logger.log(""For '"" + parameterizedType + ""' found type variable : { '"" + typeParameter + ""("" + System.identityHashCode(typeParameter) + "")"" + ""' : '"" + actualTypeArgument + ""("" + System.identityHashCode(typeParameter) + "")"" + ""' }"");"
False,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,41,"enericTypeInfo.logger.log(""For '"" + typeParameter.getGenericDeclaration() + ""' found type variable : { '"" + typeParameter + ""("" + System.identityHashCode(typeParameter) + "")"" + ""' : '"" + boundsOf(typeParameter) + ""' }"");"
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,51,"logger.log(""For '"" + typeParameter.getGenericDeclaration() + ""' found type variable : { '"" + typeParameter + ""("" + System.identityHashCode(typeParameter) + "")"" + ""' : '"" + boundsOf(typeParameter) + ""' }"");"
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,56,if (typeParameter.getBounds()[0] instanceof TypeVariable) {
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,57,return boundsOf((TypeVariable) typeParameter.getBounds()[0]);
False,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,76,"enericTypeInfo.logger.log(""For '"" + rawType().getCanonicalName() + ""' returning explicit TypeVariable : { '"" + typeParameter + ""("" + System.identityHashCode(typeParameter) + "")"" + ""' : '"" + actualType +""' }"");"
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,92,"logger.log(""For '"" + rawType().getCanonicalName() + ""' returning explicit TypeVariable : { '"" + typeParameter + ""("" + System.identityHashCode(typeParameter) + "")"" + ""' : '"" + actualType +""' }"");"
False,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,92,ublic MockitoGenericMetadata resolveParameterizedType(Type genericReturnType) {
False,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,93,"hrow new UnsupportedOperationException(""not implemented yet"");"
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,111,* Creates a mock using the Generics Metadata represented by this instance.
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,113,* @param answer The answer to use in mock settings.
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,114,* @return The mock.
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,116,public Object toMock(Answer answer) {
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,117,return Mockito.mock(
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,118,"rawType(),"
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,119,((MockSettingsImpl) withSettings().defaultAnswer(answer)).parameterizedInfo(this)
False,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,104,"ystem.out.println(""Method '"" + method.toGenericString() + ""' has return type : "" + genericReturnType.getClass().getInterfaces()[0].getSimpleName() + "" : "" + genericReturnType);"
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,133,"logger.log(""Method '"" + method.toGenericString() + ""' has return type : "" + genericReturnType.getClass().getInterfaces()[0].getSimpleName() + "" : "" + genericReturnType);"
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,144,if (genericReturnType instanceof BoundedType) {
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,145,"return new TypeVariableReturnType(this, method.getTypeParameters(), ((BoundedType) genericReturnType).typeVariable());"
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,154,* <p>
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,155,"*     Supports only {@link Class} and {@link ParameterizedType}, otherwise throw a {@link MockitoException}."
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,156,* </p>
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,160,* @throws MockitoException Raised if type is not a {@link Class} or a {@link ParameterizedType}.
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,163,"Checks.checkNotNull(type, ""type"");"
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,176,* Metadata for source {@link Class}
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,202,* Metadata for source {@link ParameterizedType}.
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,203,* Don't work with ParameterizedType returned in {@link Method#getGenericReturnType()}.
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,227,* Metadata specific to {@link ParameterizedType} generic return types.
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,238,readTypeParameters();
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,242,private void readTypeParameters() {
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,243,registerTypeParametersOn(typeParameters);
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,259,* Metadata specific to {@link TypeVariable} generic return type.
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,264,private Class<?> rawType;
False,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,233,eturn extractRawTypeOf(typeVariable);
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,290,if (rawType == null) {
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,291,rawType = extractRawTypeOf(typeVariable);
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,293,return rawType;
False,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,253,"hrow new MockitoException(""Raw extraction not managed for : '"" + type + ""'"");"
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,313,"throw new MockitoException(""Raw extraction not supported for : '"" + type + ""'"");"
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,322,if (type instanceof ParameterizedType) {
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,323,return Collections.singletonList(type);
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,325,if (type instanceof Class) {
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,326,return Collections.emptyList();
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,331,private Class<?>[] rawExtraInterfaces() {
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,332,List<Type> extraInterfaces = extraInterfaces();
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,333,List<Class<?>> rawExtraInterfaces = new ArrayList<Class<?>>();
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,334,for (Type extraInterface : extraInterfaces) {
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,335,Class<?> rawInterface = extractRawTypeOf(extraInterface);
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,336,"// avoid interface collision with actual raw type (with typevariables, resolution ca be quite aggressive)"
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,337,if(!rawType().equals(rawInterface)) {
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,338,rawExtraInterfaces.add(rawInterface);
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,341,return rawExtraInterfaces.toArray(new Class[rawExtraInterfaces.size()]);
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,362,public Object toMock(Answer answer) {
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,363,Class<?>[] rawExtraInterfaces = rawExtraInterfaces();
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,364,if (rawExtraInterfaces.length <= 0) {
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,365,return super.toMock(answer);
False,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,286,rivate static class MethodGenericReturnTypeMockitoGenericMetadata extends MockitoGenericMetadata {
False,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,288,rivate final TypeVariable<Method>[] typeParameters;
False,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,290,rivate final Type genericReturnType;
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,368,return Mockito.mock(
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,369,"rawType(),"
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,370,((MockSettingsImpl) withSettings()
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,371,.defaultAnswer(answer)
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,372,.extraInterfaces(rawExtraInterfaces))
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,373,.parameterizedInfo(this)
False,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,292,"ublic MethodGenericReturnTypeMockitoGenericMetadata(MockitoGenericMetadata source, Method method) {"
False,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,293,enericReturnType = method.getGenericReturnType();
False,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,294,ypeParameters = method.getTypeParameters();
False,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,295,his.contextualActualTypeParameters = source.contextualActualTypeParameters;
False,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,297,esolveActualMethodTypeParameter();
False,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,300,rivate void resolveActualMethodTypeParameter() {
False,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,301,f (genericReturnType instanceof TypeVariable) {
False,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,302,ypeVariable typeVariable = (TypeVariable) genericReturnType;
False,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,303,or (Type type : typeVariable.getBounds()) {
False,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,304,egisterTypeVariablesOn(type);
False,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,306,egisterTypeVariablesOn(getActualTypeArgumentFor(typeVariable));
False,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,308,f (genericReturnType instanceof ParameterizedType) {
False,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,309,egisterTypeVariablesOn(genericReturnType);
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,381,* Metadata specific to {@link Class} return type.
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,383,private static class NotGenericReturnType extends MockitoGenericMetadata {
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,384,private final Class<?> returnType;
False,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,312,"/ throw new MockitoException(""genericReturnType is a '"" + genericReturnType.getClass() + ""' : "" + genericReturnType);"
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,386,public NotGenericReturnType(Type genericReturnType) {
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,387,returnType = (Class<?>) genericReturnType;
False,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,317,f (genericReturnType instanceof TypeVariable) {
False,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,318,ype actualTypeArgument = getActualTypeArgumentFor((TypeVariable) genericReturnType);
False,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,319,eturn extractRawTypeOf(actualTypeArgument);
False,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,321,eturn extractRawTypeOf(genericReturnType);
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,392,return returnType;
False,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,324,rivate Class<?> extractRawTypeOf(Type type) {
False,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,325,f (type instanceof Class) {
False,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,326,eturn (Class<?>) type;
False,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,328,f (type instanceof ParameterizedType) {
False,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,329,eturn (Class<?>) ((ParameterizedType) type).getRawType();
False,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,331,f (type instanceof BoundedType) {
False,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,332,eturn extractRawTypeOf(((BoundedType) type).firstBound());
False,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,334,"hrow new MockitoException(""Raw extraction not managed for : '"" + type + ""'"");"
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,397,"* Type representing bounds of a type variable, allows to keep all bounds information."
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,399,"* <p>It uses the first bound in the array, as this array is never null and always contains at least"
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,400,* one element (Object is always here if no bounds are declared).</p>
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,402,"* <p>If upper bounds are declared with SomeClass and additional interfaces, then firstBound will be SomeClass and"
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,403,* interfacesBound will be an array of the additional interfaces.
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,405,* i.e. <code>SomeClass</code>.
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,406,"* <pre class=""code""><code class=""java"">"
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,407,*     interface UpperBoundedTypeWithClass<E extends Comparable<E> & Cloneable> {
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,408,*         E get();
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,410,*     // will return Comparable type
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,411,* </code></pre>
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,412,* </p>
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,414,public static class BoundedType implements Type {
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,415,private TypeVariable typeVariable;
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,418,public BoundedType(TypeVariable typeVariable) {
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,419,this.typeVariable = typeVariable;
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,423,"* @return either a class or an interface (parameterized or not), if no bounds declared Object is returned."
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,425,public Type firstBound() {
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,426,return typeVariable.getBounds()[0]; //
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,430,"* On a Type Variable (typeVar extends AClass_0 & I_1 & I_2 & etc), will return an array"
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,431,* containing I_1 and I_2.
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,433,"* @return other bounds for this type, these bounds can only be only interfaces as the JLS says,"
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,434,* empty array if no other bound declared.
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,436,public Type[] interfaceBounds() {
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,437,Type[] interfaceBounds = new Type[typeVariable.getBounds().length - 1];
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,438,"System.arraycopy(typeVariable.getBounds(), 1, interfaceBounds, 0, typeVariable.getBounds().length - 1);"
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,439,return interfaceBounds;
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,442,@Override
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,443,public boolean equals(Object o) {
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,444,if (this == o) return true;
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,445,if (o == null || getClass() != o.getClass()) return false;
False,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,343,rivate static class NotGenericReturnType extends MockitoGenericMetadata {
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,447,return typeVariable.equals(((BoundedType) o).typeVariable);
False,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,345,rivate final Class<?> returnType;
False,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,347,ublic NotGenericReturnType(Type genericReturnType) {
False,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,348,eturnType = (Class<?>) genericReturnType;
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,451,@Override
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,452,public int hashCode() {
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,453,return typeVariable.hashCode();
False,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,351,ublic Class<?> rawType() {
False,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,352,eturn returnType;
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,457,public String toString() {
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,458,final StringBuilder sb = new StringBuilder();
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,459,"sb.append(""{firstBound="").append(firstBound());"
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,460,"sb.append("", interfaceBounds="").append(Arrays.deepToString(interfaceBounds()));"
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,461,sb.append('}');
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,462,return sb.toString();
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,465,public TypeVariable typeVariable() {
True,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,src/org/mockito/internal/util/reflection/MockitoGenericMetadata.java,466,return typeVariable;
True,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,3,import org.junit.Ignore;
True,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,7,import java.util.List;
True,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,14,"@SuppressWarnings(""unused"")"
True,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,16,interface UpperBoundedTypeWithClass<E extends Number & Comparable<E>> {
True,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,17,E get();
True,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,19,interface UpperBoundedTypeWithInterfaces<E extends Comparable<E> & Cloneable> {
True,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,20,E get();
True,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,22,interface ListOfNumbers extends List<Number> {}
True,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,23,interface ListOfAnyNumbers<N extends Number & Cloneable> extends List<N> {}
False,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,14,"nterface MapWithNestedGenerics<K extends Comparable<K> & Cloneable> extends Map<K, Set<Number>> {}"
True,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,25,"interface GenericsNest<K extends Comparable<K> & Cloneable> extends Map<K, Set<Number>> {"
True,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,26,Set<Number> remove(Object key); // override with fixed ParameterizedType
True,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,27,List<? super Number> returningWildcard();
True,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,28,K returningK();
True,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,29,<O extends K> List<O> paramTypeWithTypeParams();
True,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,30,"<S extends Appendable, T extends S> T twoTypeParams(S s);"
True,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,31,<O extends K> O typeVarWithTypeParams();
False,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,18,ublic void testName() throws Exception {
False,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,19,"apWithNestedGenerics<?> mock = mock(MapWithNestedGenerics.class, RETURNS_DEEP_STUBS);"
True,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,35,public void returning_deep_stubs_1() throws Exception {
True,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,36,"GenericsNest<?> mock = mock(GenericsNest.class, RETURNS_DEEP_STUBS);"
True,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,50,@Test
True,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,51,public void returning_deep_stubs_2() throws Exception {
True,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,52,"GenericsNest<?> mock = mock(GenericsNest.class, RETURNS_DEEP_STUBS);"
True,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,54,Cloneable cloneable1 = mock.paramTypeWithTypeParams().get(0);
True,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,55,Comparable<?> comparable1 = mock.paramTypeWithTypeParams().get(0);
True,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,56,Cloneable cloneable2 = mock.returningK();
True,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,57,Comparable<?> comparable2 = mock.returningK();
True,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,58,Cloneable cloneable3 = (Cloneable) mock.typeVarWithTypeParams();
True,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,61,@Test
True,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,62,"@Ignore(""TODO WildCard"")"
True,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,63,public void returning_deep_stubs_3() throws Exception {
True,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,64,"GenericsNest<?> mock = mock(GenericsNest.class, RETURNS_DEEP_STUBS);"
True,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,66,List<? super Integer> objects = mock.returningWildcard();
True,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,67,Number n = (Number) mock.returningWildcard().get(45);
True,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,70,@Test(expected = ClassCastException.class)
True,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,71,public void returning_deep_stub_dont_work_because_StringBuilder_is_subject_to_erasure() throws Exception {
True,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,72,"GenericsNest<?> mock = mock(GenericsNest.class, RETURNS_DEEP_STUBS);"
True,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,test/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsTest.java,74,StringBuilder stringBuilder = mock.twoTypeParams(new StringBuilder()).append(2).append(3); // ClassCastException
False,test/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedTypeTest.java,test/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedTypeTest.java,1,ackage org.mockito.internal.util.reflection;
False,test/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedTypeTest.java,test/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedTypeTest.java,3,mport org.junit.Test;
False,test/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedTypeTest.java,test/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedTypeTest.java,5,mport java.util.List;
False,test/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedTypeTest.java,test/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedTypeTest.java,6,mport java.util.Map;
False,test/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedTypeTest.java,test/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedTypeTest.java,7,mport java.util.Set;
False,test/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedTypeTest.java,test/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedTypeTest.java,9,mport static org.fest.assertions.Assertions.assertThat;
False,test/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedTypeTest.java,test/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedTypeTest.java,11,ublic class ClassEnhancedToParameterizedTypeTest {
False,test/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedTypeTest.java,test/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedTypeTest.java,13,nterface UpperBoundedTypeWithClass<E extends Number & Comparable<E>> {
False,test/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedTypeTest.java,test/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedTypeTest.java,14, get();
False,test/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedTypeTest.java,test/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedTypeTest.java,16,nterface UpperBoundedTypeWithInterfaces<E extends Comparable<E> & Cloneable> {
False,test/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedTypeTest.java,test/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedTypeTest.java,17, get();
False,test/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedTypeTest.java,test/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedTypeTest.java,19,nterface ListOfNumbers extends List<Number> {}
False,test/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedTypeTest.java,test/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedTypeTest.java,20,nterface ListOfAnyNumbers<N extends Number & Cloneable> extends List<N> {}
False,test/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedTypeTest.java,test/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedTypeTest.java,22,"nterface MapWithNestedGenerics<K extends Comparable<K> & Cloneable> extends Map<K, Set<Number>> {}"
False,test/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedTypeTest.java,test/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedTypeTest.java,24,Test
False,test/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedTypeTest.java,test/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedTypeTest.java,25,ublic void can_get_raw_type() throws Exception {
False,test/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedTypeTest.java,test/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedTypeTest.java,26,ssertThat(new ClassEnhancedToParameterizedType(ListOfAnyNumbers.class).getRawType()).isEqualTo(ListOfAnyNumbers.class);
False,test/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedTypeTest.java,test/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedTypeTest.java,27,ssertThat(new ClassEnhancedToParameterizedType(ListOfNumbers.class).getRawType()).isEqualTo(ListOfNumbers.class);
False,test/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedTypeTest.java,test/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedTypeTest.java,28,ssertThat(new ClassEnhancedToParameterizedType(MapWithNestedGenerics.class).getRawType()).isEqualTo(MapWithNestedGenerics.class);
False,test/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedTypeTest.java,test/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedTypeTest.java,31,Test
False,test/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedTypeTest.java,test/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedTypeTest.java,32,ublic void can_read_actual_type_parameters() throws Exception {
False,test/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedTypeTest.java,test/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedTypeTest.java,33,"/ interface MapWithNestedGenerics<K extends Comparable<K> & Cloneable> extends Map<K, Set<Number>> {}"
False,test/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedTypeTest.java,test/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedTypeTest.java,34,/ => [0] K = Comparable<K> & Cloneable
False,test/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedTypeTest.java,test/org/mockito/internal/util/reflection/ClassEnhancedToParameterizedTypeTest.java,35,/ => [1] V = Set<Number>
False,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,1,ackage org.mockito.internal.util.reflection;
False,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,3,mport org.junit.Test;
False,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,5,mport java.util.Iterator;
False,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,6,mport java.util.List;
False,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,7,mport java.util.Map;
False,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,8,mport java.util.Set;
False,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,10,mport static org.fest.assertions.Assertions.assertThat;
False,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,11,mport static org.mockito.internal.util.reflection.GenericTypeInfo.on;
False,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,13,ublic class GenericTypeInfoTest {
False,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,15,nterface UpperBoundedTypeWithClass<E extends Number & Comparable<E>> {
False,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,16, get();
False,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,18,nterface UpperBoundedTypeWithInterfaces<E extends Comparable<E> & Cloneable> {
False,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,19, get();
False,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,21,nterface ListOfNumbers extends List<Number> {}
False,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,22,nterface ListOfAnyNumbers<N extends Number & Cloneable> extends List<N> {}
False,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,24,Test
False,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,25,ublic void can_get_raw_type_on_simple_return_type() throws Exception {
False,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,26,"ssertThat(on(List.class).methodName(""iterator"").genericReturnTypeInfo().asRawType()).isEqualTo(Iterator.class);"
False,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,27,"ssertThat(on(List.class).methodName(""size"").genericReturnTypeInfo().asRawType()).isEqualTo(int.class);"
False,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,28,"ssertThat(on(Number.class).methodName(""toString"").genericReturnTypeInfo().asRawType()).isEqualTo(String.class);"
False,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,31,Test
False,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,32,ublic void can_get_raw_type_of_parameterized_return_type() throws Exception {
False,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,33,"ssertThat(on(List.class).methodName(""get"").genericReturnTypeInfo().asRawType()).isEqualTo(Object.class);"
False,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,36,Test
False,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,37,ublic void can_get_raw_type_of_parameterized_return_type_with_upper_bounded_type_variable() throws Exception {
False,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,38,"ssertThat(on(UpperBoundedTypeWithInterfaces.class).methodName(""get"").genericReturnTypeInfo().asRawType()).isEqualTo(Comparable.class);"
False,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,39,"ssertThat(on(UpperBoundedTypeWithClass.class).methodName(""get"").genericReturnTypeInfo().asRawType()).isEqualTo(Number.class);"
False,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,42,Test
False,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,43,ublic void can_get_raw_type_of_parameterized_return_type_with_fixed_type_argument() throws Exception {
False,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,44,"ssertThat(on(ListOfNumbers.class).methodName(""get"").genericReturnTypeInfo().asRawType()).isEqualTo(Number.class);"
False,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,47,Test
False,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,48,ublic void can_get_raw_type_of_parameterized_return_type_with_bounded_type_parameter() throws Exception {
False,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,49,"ssertThat(on(ListOfAnyNumbers.class).methodName(""get"").genericReturnTypeInfo().asRawType()).isEqualTo(Number.class);"
False,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,52,"nterface MapWithNestedGenerics<K extends Comparable<K> & Cloneable & Set<Number>> extends Map<K, Set<Number>> {}"
False,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,55,Test
False,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,56,ublic void test() throws Exception {
False,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,57,"enericTypeInfo entrySetGenericTypeInfo = on(MapWithNestedGenerics.class).methodName(""entrySet"").genericReturnTypeInfo();"
False,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,58,"ystem.out.println(entrySetGenericTypeInfo); // Set<Entry<K extends Comparable<K>, Set<Number>>"
False,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,59,/        entrySetGenericTypeInfo.asRawType(); // Set
False,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,60,"/        entrySetGenericTypeInfo.getTypeVariables(); // { 'K' : 'K extends Comparable<K>' , 'V' : 'Set<Number' }"
False,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,61,"ystem.out.println(""======================================================"");"
False,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,63,"enericTypeInfo iteratorGenericTypeInfo = on(entrySetGenericTypeInfo).methodName(""iterator"").genericReturnTypeInfo();"
False,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,test/org/mockito/internal/util/reflection/GenericTypeInfoTest.java,64,ystem.out.println(iteratorGenericTypeInfo);
False,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,10,mport java.util.*;
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,10,import java.util.Collection;
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,11,import java.util.List;
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,12,import java.util.Map;
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,13,import java.util.Set;
False,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,14,mport static org.mockito.Mockito.RETURNS_DEEP_STUBS;
False,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,15,mport static org.mockito.Mockito.mock;
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,19,"@SuppressWarnings(""unused"")"
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,36,"<S, T extends S> T twoTypeParams();"
False,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,52,Test
False,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,53,"Ignore(""not the right unit test"")"
False,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,54,ublic void returning_deep_stubs() throws Exception {
False,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,55,"enericsNest<?> mock = mock(GenericsNest.class, RETURNS_DEEP_STUBS);"
False,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,57,"et<? extends Map.Entry<? extends Cloneable, Set<Number>>> entries = mock.entrySet();"
False,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,58,"terator<? extends Map.Entry<? extends Cloneable,Set<Number>>> entriesIterator = mock.entrySet().iterator();"
False,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,59,"ap.Entry<? extends Cloneable, Set<Number>> nextEntry = mock.entrySet().iterator().next();"
False,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,61,loneable cloneableKey = mock.entrySet().iterator().next().getKey();
False,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,62,omparable<?> comparableKey = mock.entrySet().iterator().next().getKey();
False,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,64,et<Number> value = mock.entrySet().iterator().next().getValue();
False,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,65,terator<Number> numbersIterator = mock.entrySet().iterator().next().getValue().iterator();
False,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,66,umber number = mock.entrySet().iterator().next().getValue().iterator().next();
False,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,99,ockitoGenericMetadata extraInterface1 = from(genericMetadata.extraInterfaces().get(0));
False,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,100,ssertThat(extraInterface1.rawType()).isEqualTo(Cloneable.class);
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,85,MockitoGenericMetadata extraInterface_0 = from(genericMetadata.extraInterfaces().get(0));
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,86,assertThat(extraInterface_0.rawType()).isEqualTo(Cloneable.class);
False,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,121,Test
False,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,122,ublic void paramType_with_wildcard_return_type_of___returningWildcard___resolved_to_List_and_type_argument_to_Integer() throws Exception {
False,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,123,"ockitoGenericMetadata genericMetadata = from(GenericsNest.class).resolveGenericReturnType(firstNamedMethod(""returningWildcard"", GenericsNest.class));"
False,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,125,"ail(""TODO"");"
False,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,132,"ail(""TODO"");"
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,111,assertThat(genericMetadata.rawType()).isEqualTo(List.class);
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,112,"Type firstBoundOfE = ((MockitoGenericMetadata.BoundedType) typeVariableValue(genericMetadata.actualTypeArguments(), ""E"")).firstBound();"
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,113,assertThat(from(firstBoundOfE).rawType()).isEqualTo(Comparable.class);
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,133,@Test
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,134,"@Ignore(""TODO WildCard"")"
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,135,public void paramType_with_wildcard_return_type_of___returningWildcard___resolved_to_List_and_type_argument_to_Integer() throws Exception {
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,136,"MockitoGenericMetadata genericMetadata = from(GenericsNest.class).resolveGenericReturnType(firstNamedMethod(""returningWildcard"", GenericsNest.class));"
True,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,test/org/mockito/internal/util/reflection/MockitoGenericMetadataTest.java,138,"fail(""TODO"");"
