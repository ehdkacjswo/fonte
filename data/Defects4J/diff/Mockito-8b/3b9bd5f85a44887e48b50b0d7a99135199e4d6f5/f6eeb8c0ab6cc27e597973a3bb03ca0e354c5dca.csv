is_addition,old_file_path,new_file_path,line_num,content
True,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,19,import org.mockito.internal.util.copy.LenientCopyTool;
False,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,31,ry {
False,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,32,"ew ShallowCopyTool().copyToMock(optionalInstance, mock);"
False,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,33, catch (UnableToCopyFieldValue e) {
False,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,34,/Ignore - spying should be used only occasionally and if some field cannot be copied then let's be it
True,src/org/mockito/internal/util/MockUtil.java,src/org/mockito/internal/util/MockUtil.java,32,"new LenientCopyTool().copyToMock(optionalInstance, mock);"
False,src/org/mockito/internal/util/ShallowCopyTool.java,src/org/mockito/internal/util/ShallowCopyTool.java,1,ackage org.mockito.internal.util;
False,src/org/mockito/internal/util/ShallowCopyTool.java,src/org/mockito/internal/util/ShallowCopyTool.java,3,mport java.lang.reflect.Field;
False,src/org/mockito/internal/util/ShallowCopyTool.java,src/org/mockito/internal/util/ShallowCopyTool.java,4,mport java.lang.reflect.Modifier;
False,src/org/mockito/internal/util/ShallowCopyTool.java,src/org/mockito/internal/util/ShallowCopyTool.java,6,"SuppressWarnings(""unchecked"")"
False,src/org/mockito/internal/util/ShallowCopyTool.java,src/org/mockito/internal/util/ShallowCopyTool.java,7,ublic class ShallowCopyTool {
False,src/org/mockito/internal/util/ShallowCopyTool.java,src/org/mockito/internal/util/ShallowCopyTool.java,9,"ublic <T> void copyToMock(T from, T mock) throws UnableToCopyFieldValue {"
False,src/org/mockito/internal/util/ShallowCopyTool.java,src/org/mockito/internal/util/ShallowCopyTool.java,10,lass clazz = from.getClass();
False,src/org/mockito/internal/util/ShallowCopyTool.java,src/org/mockito/internal/util/ShallowCopyTool.java,11,lass mockSuperClass = mock.getClass().getSuperclass();
False,src/org/mockito/internal/util/ShallowCopyTool.java,src/org/mockito/internal/util/ShallowCopyTool.java,12,"ssert mockSuperClass == clazz : ""Classes must have the same type: class of the object from: "" + clazz + "", mock super class: "" + mockSuperClass;"
False,src/org/mockito/internal/util/ShallowCopyTool.java,src/org/mockito/internal/util/ShallowCopyTool.java,14,hile (clazz != Object.class) {
False,src/org/mockito/internal/util/ShallowCopyTool.java,src/org/mockito/internal/util/ShallowCopyTool.java,15,"opyValues(from, mock, clazz);"
False,src/org/mockito/internal/util/ShallowCopyTool.java,src/org/mockito/internal/util/ShallowCopyTool.java,16,lazz = clazz.getSuperclass();
False,src/org/mockito/internal/util/ShallowCopyTool.java,src/org/mockito/internal/util/ShallowCopyTool.java,20,"rivate <T> void copyValues(T from, T mock, Class classFrom)"
False,src/org/mockito/internal/util/ShallowCopyTool.java,src/org/mockito/internal/util/ShallowCopyTool.java,21,hrows UnableToCopyFieldValue {
False,src/org/mockito/internal/util/ShallowCopyTool.java,src/org/mockito/internal/util/ShallowCopyTool.java,22,ield[] fields = classFrom.getDeclaredFields();
False,src/org/mockito/internal/util/ShallowCopyTool.java,src/org/mockito/internal/util/ShallowCopyTool.java,24,or (int i = 0; i < fields.length; i++) {
False,src/org/mockito/internal/util/ShallowCopyTool.java,src/org/mockito/internal/util/ShallowCopyTool.java,25,f (Modifier.isStatic(fields[i].getModifiers())) {
False,src/org/mockito/internal/util/ShallowCopyTool.java,src/org/mockito/internal/util/ShallowCopyTool.java,26,ontinue;
False,src/org/mockito/internal/util/ShallowCopyTool.java,src/org/mockito/internal/util/ShallowCopyTool.java,28,ry {
False,src/org/mockito/internal/util/ShallowCopyTool.java,src/org/mockito/internal/util/ShallowCopyTool.java,29,/TODO: undo
False,src/org/mockito/internal/util/ShallowCopyTool.java,src/org/mockito/internal/util/ShallowCopyTool.java,30,ields[i].setAccessible(true);
False,src/org/mockito/internal/util/ShallowCopyTool.java,src/org/mockito/internal/util/ShallowCopyTool.java,31,bject value = fields[i].get(from);
False,src/org/mockito/internal/util/ShallowCopyTool.java,src/org/mockito/internal/util/ShallowCopyTool.java,32,"ields[i].set(mock, value);"
False,src/org/mockito/internal/util/ShallowCopyTool.java,src/org/mockito/internal/util/ShallowCopyTool.java,33, catch (Throwable t) {
False,src/org/mockito/internal/util/ShallowCopyTool.java,src/org/mockito/internal/util/ShallowCopyTool.java,34,/TODO: add missing unit test
False,src/org/mockito/internal/util/ShallowCopyTool.java,src/org/mockito/internal/util/ShallowCopyTool.java,35,"hrow new UnableToCopyFieldValue(""Unable to copy value to field: "" + fields[i], t);"
False,src/org/mockito/internal/util/UnableToCopyFieldValue.java,src/org/mockito/internal/util/UnableToCopyFieldValue.java,1,ackage org.mockito.internal.util;
False,src/org/mockito/internal/util/UnableToCopyFieldValue.java,src/org/mockito/internal/util/UnableToCopyFieldValue.java,3,lass UnableToCopyFieldValue extends Exception {
False,src/org/mockito/internal/util/UnableToCopyFieldValue.java,src/org/mockito/internal/util/UnableToCopyFieldValue.java,5,rivate static final long serialVersionUID = 1L;
False,src/org/mockito/internal/util/UnableToCopyFieldValue.java,src/org/mockito/internal/util/UnableToCopyFieldValue.java,7,"ublic UnableToCopyFieldValue(String message, Throwable t) {"
False,src/org/mockito/internal/util/UnableToCopyFieldValue.java,src/org/mockito/internal/util/UnableToCopyFieldValue.java,8,"uper(message, t);"
True,src/org/mockito/internal/util/copy/AccessibilityChanger.java,src/org/mockito/internal/util/copy/AccessibilityChanger.java,1,package org.mockito.internal.util.copy;
True,src/org/mockito/internal/util/copy/AccessibilityChanger.java,src/org/mockito/internal/util/copy/AccessibilityChanger.java,3,import java.lang.reflect.Field;
True,src/org/mockito/internal/util/copy/AccessibilityChanger.java,src/org/mockito/internal/util/copy/AccessibilityChanger.java,5,public class AccessibilityChanger {
True,src/org/mockito/internal/util/copy/AccessibilityChanger.java,src/org/mockito/internal/util/copy/AccessibilityChanger.java,7,private Boolean wasAccessible = null;
True,src/org/mockito/internal/util/copy/AccessibilityChanger.java,src/org/mockito/internal/util/copy/AccessibilityChanger.java,10,* safely disables access
True,src/org/mockito/internal/util/copy/AccessibilityChanger.java,src/org/mockito/internal/util/copy/AccessibilityChanger.java,12,public void safelyDisableAccess(Field field) {
True,src/org/mockito/internal/util/copy/AccessibilityChanger.java,src/org/mockito/internal/util/copy/AccessibilityChanger.java,13,assert wasAccessible != null;
True,src/org/mockito/internal/util/copy/AccessibilityChanger.java,src/org/mockito/internal/util/copy/AccessibilityChanger.java,14,try {
True,src/org/mockito/internal/util/copy/AccessibilityChanger.java,src/org/mockito/internal/util/copy/AccessibilityChanger.java,15,field.setAccessible(wasAccessible);
True,src/org/mockito/internal/util/copy/AccessibilityChanger.java,src/org/mockito/internal/util/copy/AccessibilityChanger.java,16,} catch (Throwable t) {
True,src/org/mockito/internal/util/copy/AccessibilityChanger.java,src/org/mockito/internal/util/copy/AccessibilityChanger.java,17,//ignore
True,src/org/mockito/internal/util/copy/AccessibilityChanger.java,src/org/mockito/internal/util/copy/AccessibilityChanger.java,22,* changes the field accessibility and returns true if accessibility was changed
True,src/org/mockito/internal/util/copy/AccessibilityChanger.java,src/org/mockito/internal/util/copy/AccessibilityChanger.java,24,public void enableAccess(Field field) {
True,src/org/mockito/internal/util/copy/AccessibilityChanger.java,src/org/mockito/internal/util/copy/AccessibilityChanger.java,25,wasAccessible = field.isAccessible();
True,src/org/mockito/internal/util/copy/AccessibilityChanger.java,src/org/mockito/internal/util/copy/AccessibilityChanger.java,26,field.setAccessible(true);
True,src/org/mockito/internal/util/copy/FieldCopier.java,src/org/mockito/internal/util/copy/FieldCopier.java,1,package org.mockito.internal.util.copy;
True,src/org/mockito/internal/util/copy/FieldCopier.java,src/org/mockito/internal/util/copy/FieldCopier.java,3,import java.lang.reflect.Field;
True,src/org/mockito/internal/util/copy/FieldCopier.java,src/org/mockito/internal/util/copy/FieldCopier.java,5,public class FieldCopier {
True,src/org/mockito/internal/util/copy/FieldCopier.java,src/org/mockito/internal/util/copy/FieldCopier.java,7,"public <T> void copyValue(T from, T to, Field field) throws IllegalAccessException {"
True,src/org/mockito/internal/util/copy/FieldCopier.java,src/org/mockito/internal/util/copy/FieldCopier.java,8,Object value = field.get(from);
True,src/org/mockito/internal/util/copy/FieldCopier.java,src/org/mockito/internal/util/copy/FieldCopier.java,9,"field.set(to, value);"
True,src/org/mockito/internal/util/copy/LenientCopyTool.java,src/org/mockito/internal/util/copy/LenientCopyTool.java,1,package org.mockito.internal.util.copy;
True,src/org/mockito/internal/util/copy/LenientCopyTool.java,src/org/mockito/internal/util/copy/LenientCopyTool.java,3,import java.lang.reflect.Field;
True,src/org/mockito/internal/util/copy/LenientCopyTool.java,src/org/mockito/internal/util/copy/LenientCopyTool.java,4,import java.lang.reflect.Modifier;
True,src/org/mockito/internal/util/copy/LenientCopyTool.java,src/org/mockito/internal/util/copy/LenientCopyTool.java,6,"@SuppressWarnings(""unchecked"")"
True,src/org/mockito/internal/util/copy/LenientCopyTool.java,src/org/mockito/internal/util/copy/LenientCopyTool.java,7,public class LenientCopyTool {
True,src/org/mockito/internal/util/copy/LenientCopyTool.java,src/org/mockito/internal/util/copy/LenientCopyTool.java,9,FieldCopier fieldCopier = new FieldCopier();
True,src/org/mockito/internal/util/copy/LenientCopyTool.java,src/org/mockito/internal/util/copy/LenientCopyTool.java,11,"public <T> void copyToMock(T from, T mock) {"
True,src/org/mockito/internal/util/copy/LenientCopyTool.java,src/org/mockito/internal/util/copy/LenientCopyTool.java,12,Class clazz = from.getClass();
True,src/org/mockito/internal/util/copy/LenientCopyTool.java,src/org/mockito/internal/util/copy/LenientCopyTool.java,13,Class mockSuperClass = mock.getClass().getSuperclass();
True,src/org/mockito/internal/util/copy/LenientCopyTool.java,src/org/mockito/internal/util/copy/LenientCopyTool.java,14,assert mockSuperClass == clazz
True,src/org/mockito/internal/util/copy/LenientCopyTool.java,src/org/mockito/internal/util/copy/LenientCopyTool.java,15,": ""Classes must have the same type: class of the object from: "" + clazz + "", mock super class: "" + mockSuperClass;"
True,src/org/mockito/internal/util/copy/LenientCopyTool.java,src/org/mockito/internal/util/copy/LenientCopyTool.java,17,while (clazz != Object.class) {
True,src/org/mockito/internal/util/copy/LenientCopyTool.java,src/org/mockito/internal/util/copy/LenientCopyTool.java,18,"copyValues(from, mock, clazz);"
True,src/org/mockito/internal/util/copy/LenientCopyTool.java,src/org/mockito/internal/util/copy/LenientCopyTool.java,19,clazz = clazz.getSuperclass();
True,src/org/mockito/internal/util/copy/LenientCopyTool.java,src/org/mockito/internal/util/copy/LenientCopyTool.java,23,"private <T> void copyValues(T from, T mock, Class classFrom) {"
True,src/org/mockito/internal/util/copy/LenientCopyTool.java,src/org/mockito/internal/util/copy/LenientCopyTool.java,24,Field[] fields = classFrom.getDeclaredFields();
True,src/org/mockito/internal/util/copy/LenientCopyTool.java,src/org/mockito/internal/util/copy/LenientCopyTool.java,26,for (int i = 0; i < fields.length; i++) {
True,src/org/mockito/internal/util/copy/LenientCopyTool.java,src/org/mockito/internal/util/copy/LenientCopyTool.java,27,// ignore static fields
True,src/org/mockito/internal/util/copy/LenientCopyTool.java,src/org/mockito/internal/util/copy/LenientCopyTool.java,28,Field field = fields[i];
True,src/org/mockito/internal/util/copy/LenientCopyTool.java,src/org/mockito/internal/util/copy/LenientCopyTool.java,29,if (Modifier.isStatic(field.getModifiers())) {
True,src/org/mockito/internal/util/copy/LenientCopyTool.java,src/org/mockito/internal/util/copy/LenientCopyTool.java,30,continue;
True,src/org/mockito/internal/util/copy/LenientCopyTool.java,src/org/mockito/internal/util/copy/LenientCopyTool.java,32,AccessibilityChanger accessibilityChanger = new AccessibilityChanger();
True,src/org/mockito/internal/util/copy/LenientCopyTool.java,src/org/mockito/internal/util/copy/LenientCopyTool.java,33,try {
True,src/org/mockito/internal/util/copy/LenientCopyTool.java,src/org/mockito/internal/util/copy/LenientCopyTool.java,34,accessibilityChanger.enableAccess(field);
True,src/org/mockito/internal/util/copy/LenientCopyTool.java,src/org/mockito/internal/util/copy/LenientCopyTool.java,35,"fieldCopier.copyValue(from, mock, field);"
True,src/org/mockito/internal/util/copy/LenientCopyTool.java,src/org/mockito/internal/util/copy/LenientCopyTool.java,36,} catch (Throwable t) {
True,src/org/mockito/internal/util/copy/LenientCopyTool.java,src/org/mockito/internal/util/copy/LenientCopyTool.java,37,//Ignore - be lenient - if some field cannot be copied then let's be it
True,src/org/mockito/internal/util/copy/LenientCopyTool.java,src/org/mockito/internal/util/copy/LenientCopyTool.java,38,} finally {
True,src/org/mockito/internal/util/copy/LenientCopyTool.java,src/org/mockito/internal/util/copy/LenientCopyTool.java,39,accessibilityChanger.safelyDisableAccess(field);
False,test/org/mockito/internal/util/ShallowCopyToolTest.java,test/org/mockito/internal/util/copy/LenientCopyToolTest.java,1,ackage org.mockito.internal.util;
True,test/org/mockito/internal/util/ShallowCopyToolTest.java,test/org/mockito/internal/util/copy/LenientCopyToolTest.java,1,package org.mockito.internal.util.copy;
True,test/org/mockito/internal/util/ShallowCopyToolTest.java,test/org/mockito/internal/util/copy/LenientCopyToolTest.java,5,import java.lang.reflect.Field;
True,test/org/mockito/internal/util/ShallowCopyToolTest.java,test/org/mockito/internal/util/copy/LenientCopyToolTest.java,6,import java.util.Arrays;
True,test/org/mockito/internal/util/ShallowCopyToolTest.java,test/org/mockito/internal/util/copy/LenientCopyToolTest.java,8,import java.util.Queue;
False,test/org/mockito/internal/util/ShallowCopyToolTest.java,test/org/mockito/internal/util/copy/LenientCopyToolTest.java,11,ublic class ShallowCopyToolTest extends TestBase {
True,test/org/mockito/internal/util/ShallowCopyToolTest.java,test/org/mockito/internal/util/copy/LenientCopyToolTest.java,14,public class LenientCopyToolTest extends TestBase {
False,test/org/mockito/internal/util/ShallowCopyToolTest.java,test/org/mockito/internal/util/copy/LenientCopyToolTest.java,13,rivate ShallowCopyTool tool = new ShallowCopyTool();
True,test/org/mockito/internal/util/ShallowCopyToolTest.java,test/org/mockito/internal/util/copy/LenientCopyToolTest.java,16,private LenientCopyTool tool = new LenientCopyTool();
False,test/org/mockito/internal/util/ShallowCopyToolTest.java,test/org/mockito/internal/util/copy/LenientCopyToolTest.java,20,/ TODO: if one field fails - should carry on
True,test/org/mockito/internal/util/ShallowCopyToolTest.java,test/org/mockito/internal/util/copy/LenientCopyToolTest.java,126,@Test
True,test/org/mockito/internal/util/ShallowCopyToolTest.java,test/org/mockito/internal/util/copy/LenientCopyToolTest.java,127,public void shouldEnableAndThenDisableAccessibility() throws Exception {
True,test/org/mockito/internal/util/ShallowCopyToolTest.java,test/org/mockito/internal/util/copy/LenientCopyToolTest.java,128,//given
True,test/org/mockito/internal/util/ShallowCopyToolTest.java,test/org/mockito/internal/util/copy/LenientCopyToolTest.java,129,"Field privateField = SomeObject.class.getDeclaredField(""privateField"");"
True,test/org/mockito/internal/util/ShallowCopyToolTest.java,test/org/mockito/internal/util/copy/LenientCopyToolTest.java,130,assertFalse(privateField.isAccessible());
True,test/org/mockito/internal/util/ShallowCopyToolTest.java,test/org/mockito/internal/util/copy/LenientCopyToolTest.java,132,//when
True,test/org/mockito/internal/util/ShallowCopyToolTest.java,test/org/mockito/internal/util/copy/LenientCopyToolTest.java,133,"tool.copyToMock(from, to);"
True,test/org/mockito/internal/util/ShallowCopyToolTest.java,test/org/mockito/internal/util/copy/LenientCopyToolTest.java,135,//then
True,test/org/mockito/internal/util/ShallowCopyToolTest.java,test/org/mockito/internal/util/copy/LenientCopyToolTest.java,136,"privateField = SomeObject.class.getDeclaredField(""privateField"");"
True,test/org/mockito/internal/util/ShallowCopyToolTest.java,test/org/mockito/internal/util/copy/LenientCopyToolTest.java,137,assertFalse(privateField.isAccessible());
True,test/org/mockito/internal/util/ShallowCopyToolTest.java,test/org/mockito/internal/util/copy/LenientCopyToolTest.java,140,@Test
True,test/org/mockito/internal/util/ShallowCopyToolTest.java,test/org/mockito/internal/util/copy/LenientCopyToolTest.java,141,public void shouldContinueEvenIfThereAreProblemsCopyingSingleFieldValue() throws Exception {
True,test/org/mockito/internal/util/ShallowCopyToolTest.java,test/org/mockito/internal/util/copy/LenientCopyToolTest.java,142,//given
True,test/org/mockito/internal/util/ShallowCopyToolTest.java,test/org/mockito/internal/util/copy/LenientCopyToolTest.java,143,"final Queue<Boolean> sequence = new LinkedList<Boolean>(Arrays.asList(true, true, false, true));"
True,test/org/mockito/internal/util/ShallowCopyToolTest.java,test/org/mockito/internal/util/copy/LenientCopyToolTest.java,144,tool.fieldCopier = new FieldCopier() {
True,test/org/mockito/internal/util/ShallowCopyToolTest.java,test/org/mockito/internal/util/copy/LenientCopyToolTest.java,145,"public <T> void copyValue(T from, T to, Field field) throws IllegalAccessException {"
True,test/org/mockito/internal/util/ShallowCopyToolTest.java,test/org/mockito/internal/util/copy/LenientCopyToolTest.java,146,if(!sequence.isEmpty() && !sequence.poll()) {
True,test/org/mockito/internal/util/ShallowCopyToolTest.java,test/org/mockito/internal/util/copy/LenientCopyToolTest.java,147,throw new IllegalAccessException();
True,test/org/mockito/internal/util/ShallowCopyToolTest.java,test/org/mockito/internal/util/copy/LenientCopyToolTest.java,152,//when
True,test/org/mockito/internal/util/ShallowCopyToolTest.java,test/org/mockito/internal/util/copy/LenientCopyToolTest.java,153,"tool.copyToMock(from, to);"
True,test/org/mockito/internal/util/ShallowCopyToolTest.java,test/org/mockito/internal/util/copy/LenientCopyToolTest.java,155,//then
True,test/org/mockito/internal/util/ShallowCopyToolTest.java,test/org/mockito/internal/util/copy/LenientCopyToolTest.java,156,assertTrue(sequence.isEmpty());
