is_addition,old_file_path,new_file_path,line_num,content
False,src/org/mockito/exceptions/Reporter.java,src/org/mockito/exceptions/Reporter.java,531,ublic void injectMockAnnotationFieldIsNull(String field) {
False,src/org/mockito/exceptions/Reporter.java,src/org/mockito/exceptions/Reporter.java,532,"hrow new MockitoException(""Field '"" + field + ""' annotated with @InjectMocks is null.\n"" +"
False,src/org/mockito/exceptions/Reporter.java,src/org/mockito/exceptions/Reporter.java,533,"Please make sure the instance is created *before* MockitoAnnotations.initMocks();\n"" +"
False,src/org/mockito/exceptions/Reporter.java,src/org/mockito/exceptions/Reporter.java,534,"Example of correct usage:\n"" +"
False,src/org/mockito/exceptions/Reporter.java,src/org/mockito/exceptions/Reporter.java,535,"   class SomeTest {\n"" +"
False,src/org/mockito/exceptions/Reporter.java,src/org/mockito/exceptions/Reporter.java,536,"      @InjectMocks private Foo foo = new Foo();\n"" +"
False,src/org/mockito/exceptions/Reporter.java,src/org/mockito/exceptions/Reporter.java,537,"      \n"" +"
False,src/org/mockito/exceptions/Reporter.java,src/org/mockito/exceptions/Reporter.java,538,"      @Before public void setUp() {\n"" +"
False,src/org/mockito/exceptions/Reporter.java,src/org/mockito/exceptions/Reporter.java,539,"         MockitoAnnotations.initMock(this);\n"""
True,src/org/mockito/exceptions/Reporter.java,src/org/mockito/exceptions/Reporter.java,531,"public void cannotInitializeForSpyAnnotation(String fieldName, String details) {"
True,src/org/mockito/exceptions/Reporter.java,src/org/mockito/exceptions/Reporter.java,532,"throw new MockitoException(join(""Cannot instianate a @Spy for '"" + fieldName + ""' field."","
True,src/org/mockito/exceptions/Reporter.java,src/org/mockito/exceptions/Reporter.java,533,"""You haven't provided the instance for spying at field declaration so I tried to construct the instance."","
True,src/org/mockito/exceptions/Reporter.java,src/org/mockito/exceptions/Reporter.java,534,"""However, I failed because: "" + details,"
True,src/org/mockito/exceptions/Reporter.java,src/org/mockito/exceptions/Reporter.java,535,"""Examples of correct usage of @Spy:"","
True,src/org/mockito/exceptions/Reporter.java,src/org/mockito/exceptions/Reporter.java,536,"""   @Spy List mock = new LinkedList();"","
True,src/org/mockito/exceptions/Reporter.java,src/org/mockito/exceptions/Reporter.java,537,"""   @Spy Foo foo; //only if Foo has parameterless constructor"","
True,src/org/mockito/exceptions/Reporter.java,src/org/mockito/exceptions/Reporter.java,538,"""   //also, don't forget about MockitoAnnotations.initMocks();"","
False,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,7,mport org.mockito.Captor;
False,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,8,mport org.mockito.Mock;
False,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,9,mport org.mockito.Mockito;
False,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,10,mport org.mockito.Spy;
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,7,import org.mockito.*;
False,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,35,oolean wasAccessible = field.isAccessible();
False,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,36,ield.setAccessible(true);
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,32,Object instance = null;
False,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,38,"bject instance = new FieldInitializer(testClass, field).initialize();"
False,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,39,/TODO: delete below:
False,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,40,f (instance == null) {
False,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,41,"hrow new MockitoException(""Cannot create a @Spy for '"" + field.getName() + ""' field because the *instance* is missing\n"" +"
False,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,42,"The instance must be created *before* initMocks();\n"" +"
False,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,43,"Example of correct usage of @Spy:\n"" +"
False,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,44,"   @Spy List mock = new LinkedList();\n"" +"
False,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,45,"   //also, don't forget about MockitoAnnotations.initMocks();"");"
False,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,48,f (new MockUtil().isMock(instance)) {
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,34,"instance = new FieldInitializer(testClass, field).initialize();"
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,35,} catch (MockitoException e) {
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,36,"new Reporter().cannotInitializeForSpyAnnotation(field.getName(), e.getMessage());"
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,38,try {
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,39,if (new MockUtil().isMock(instance)) {
True,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,43,field.setAccessible(true);
False,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,59, finally {
False,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,src/org/mockito/internal/configuration/SpyAnnotationEngine.java,60,ield.setAccessible(wasAccessible);
False,src/org/mockito/internal/util/reflection/FieldInitializer.java,src/org/mockito/internal/util/reflection/FieldInitializer.java,86,"hrow new MockitoException(""Cannot instantiate field \"""" + field.getName() + ""\"", the type "" + field.getType() + "" is a local class"");"
True,src/org/mockito/internal/util/reflection/FieldInitializer.java,src/org/mockito/internal/util/reflection/FieldInitializer.java,86,"throw new MockitoException(""the type '"" + field.getType().getSimpleName() + ""' is a local class."");"
False,src/org/mockito/internal/util/reflection/FieldInitializer.java,src/org/mockito/internal/util/reflection/FieldInitializer.java,92,"hrow new MockitoException(""Cannot instantiate field \"""" + field.getName() + ""\"", the type "" + field.getType() + "" is an inner class"");"
True,src/org/mockito/internal/util/reflection/FieldInitializer.java,src/org/mockito/internal/util/reflection/FieldInitializer.java,92,"throw new MockitoException(""the type '"" + field.getType().getSimpleName() + ""' is an inner class."");"
False,src/org/mockito/internal/util/reflection/FieldInitializer.java,src/org/mockito/internal/util/reflection/FieldInitializer.java,98,"hrow new MockitoException(""Cannot instantiate field \"""" + field.getName() + ""\"", the type "" + field.getType() + "" is an interface"");"
True,src/org/mockito/internal/util/reflection/FieldInitializer.java,src/org/mockito/internal/util/reflection/FieldInitializer.java,98,"throw new MockitoException(""the type '"" + field.getType().getSimpleName() + ""' is an interface."");"
False,src/org/mockito/internal/util/reflection/FieldInitializer.java,src/org/mockito/internal/util/reflection/FieldInitializer.java,104,"hrow new MockitoException(""Cannot instantiate field \"""" + field.getName() + ""\"", the type "" + field.getType() + "" is an inner class"");"
True,src/org/mockito/internal/util/reflection/FieldInitializer.java,src/org/mockito/internal/util/reflection/FieldInitializer.java,104,"throw new MockitoException(""the type '"" + field.getType().getSimpleName() + "" is an abstract class."");"
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,7,import org.fest.assertions.Assertions;
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,16,import java.util.LinkedList;
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,19,import static org.fest.assertions.Assertions.assertThat;
False,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,45,Test(expected = MockitoException.class)
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,48,@Test
False,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,51,ockitoAnnotations.initMocks(new FailingSpy());
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,54,try {
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,55,MockitoAnnotations.initMocks(new FailingSpy());
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,56,fail();
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,57,} catch (Exception e) {
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,58,"Assertions.assertThat(e.getMessage()).contains(""an interface"");"
False,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,54,Test(expected = MockitoException.class)
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,62,@Test
False,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,60,ockitoAnnotations.initMocks(new FailingSpy());
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,68,try {
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,69,MockitoAnnotations.initMocks(new FailingSpy());
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,70,fail();
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,71,} catch (Exception e) {
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,72,"Assertions.assertThat(e.getMessage()).contains(""abstract class"");"
False,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,63,Test(expected = MockitoException.class)
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,76,@Test
False,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,66,Spy private List spyTypeIsInner;
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,79,@Spy private TheInnerClass spyTypeIsInner;
False,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,70,ockitoAnnotations.initMocks(new FailingSpy());
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,83,try {
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,84,MockitoAnnotations.initMocks(new FailingSpy());
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,85,fail();
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,86,} catch (MockitoException e) {
True,test/org/mockitousage/annotation/SpyAnnotationTest.java,test/org/mockitousage/annotation/SpyAnnotationTest.java,87,"Assertions.assertThat(e.getMessage()).contains(""inner class"");"
