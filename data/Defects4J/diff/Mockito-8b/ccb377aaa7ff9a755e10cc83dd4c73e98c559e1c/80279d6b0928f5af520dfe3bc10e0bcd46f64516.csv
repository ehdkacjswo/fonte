is_addition,old_file_path,new_file_path,line_num,content
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,28,ockUtil.validateMock(mock);
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,29,ockitoState.instance().verifyingStarted(VerifyingMode.anyTimes());
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,30,eturn mock;
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,28,"return verify(mock, VerifyingMode.anyTimes());"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,32,"return verify(mock, VerifyingMode.times(exactNumberOfInvocations));"
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,35,//TODO should not be public
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,36,"public static <T> T verify(T mock, VerifyingMode mode) {"
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,35,ockitoState.instance().verifyingStarted(VerifyingMode.times(exactNumberOfInvocations));
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,38,MockitoState.instance().verifyingStarted(mode);
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,62,StrictOrderVerifier strictOrderVerifier = new StrictOrderVerifier();
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,65,strictOrderVerifier.addMock(mock);
False,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,62,eturn new StrictOrderVerifier();
True,src/org/mockito/Mockito.java,src/org/mockito/Mockito.java,67,return strictOrderVerifier;
False,src/org/mockito/exceptions/MockitoStackTraceFilter.java,src/org/mockito/exceptions/MockitoStackTraceFilter.java,24,reak;
True,src/org/mockito/internal/InvocationWithMatchers.java,src/org/mockito/internal/InvocationWithMatchers.java,16,private int sequenceNumber;
True,src/org/mockito/internal/InvocationWithMatchers.java,src/org/mockito/internal/InvocationWithMatchers.java,89,public Integer getSequenceNumber() {
True,src/org/mockito/internal/InvocationWithMatchers.java,src/org/mockito/internal/InvocationWithMatchers.java,90,return sequenceNumber;
True,src/org/mockito/internal/InvocationWithMatchers.java,src/org/mockito/internal/InvocationWithMatchers.java,93,public void setSequenceNumber(int sequenceNumber) {
True,src/org/mockito/internal/InvocationWithMatchers.java,src/org/mockito/internal/InvocationWithMatchers.java,94,this.sequenceNumber = sequenceNumber;
True,src/org/mockito/internal/MockControl.java,src/org/mockito/internal/MockControl.java,60,//TODO shouldn't verify take only invocationWithMatchers.getInvocation(); ?
True,src/org/mockito/internal/MockControl.java,src/org/mockito/internal/MockControl.java,71,invocationWithMatchers.setSequenceNumber(mockitoState.nextSequenceNumber());
True,src/org/mockito/internal/MockControl.java,src/org/mockito/internal/MockControl.java,144,public List<InvocationWithMatchers> getRegisteredInvocations() {
True,src/org/mockito/internal/MockControl.java,src/org/mockito/internal/MockControl.java,145,return behavior.getRegisteredInvocations();
True,src/org/mockito/internal/MockitoBehavior.java,src/org/mockito/internal/MockitoBehavior.java,64,if (verifyingMode.orderOfInvocationsMatters()) {
True,src/org/mockito/internal/MockitoBehavior.java,src/org/mockito/internal/MockitoBehavior.java,65,"checkOrderOfInvocations(invocation, verifyingMode);"
True,src/org/mockito/internal/MockitoBehavior.java,src/org/mockito/internal/MockitoBehavior.java,69,"private void checkOrderOfInvocations(InvocationWithMatchers actualInvocation, VerifyingMode verifyingMode) {"
True,src/org/mockito/internal/MockitoBehavior.java,src/org/mockito/internal/MockitoBehavior.java,70,Set<InvocationWithMatchers> allInvocationsInOrder = new TreeSet<InvocationWithMatchers>(
True,src/org/mockito/internal/MockitoBehavior.java,src/org/mockito/internal/MockitoBehavior.java,71,new Comparator<InvocationWithMatchers>(){
True,src/org/mockito/internal/MockitoBehavior.java,src/org/mockito/internal/MockitoBehavior.java,72,"public int compare(InvocationWithMatchers o1, InvocationWithMatchers o2) {"
True,src/org/mockito/internal/MockitoBehavior.java,src/org/mockito/internal/MockitoBehavior.java,73,int comparison = o1.getSequenceNumber().compareTo(o2.getSequenceNumber());
True,src/org/mockito/internal/MockitoBehavior.java,src/org/mockito/internal/MockitoBehavior.java,74,assert comparison != 0;
True,src/org/mockito/internal/MockitoBehavior.java,src/org/mockito/internal/MockitoBehavior.java,75,return comparison;
True,src/org/mockito/internal/MockitoBehavior.java,src/org/mockito/internal/MockitoBehavior.java,78,List<Object> allMocksToBeVerifiedInOrder = verifyingMode.getAllMocksToBeVerifiedInSequence();
True,src/org/mockito/internal/MockitoBehavior.java,src/org/mockito/internal/MockitoBehavior.java,79,for (Object mock : allMocksToBeVerifiedInOrder) {
True,src/org/mockito/internal/MockitoBehavior.java,src/org/mockito/internal/MockitoBehavior.java,80,List<InvocationWithMatchers> invocations = MockUtil.getControl(mock).getRegisteredInvocations();
True,src/org/mockito/internal/MockitoBehavior.java,src/org/mockito/internal/MockitoBehavior.java,81,allInvocationsInOrder.addAll(invocations);
True,src/org/mockito/internal/MockitoBehavior.java,src/org/mockito/internal/MockitoBehavior.java,84,InvocationWithMatchers lastVerifiedInvocation = null;
True,src/org/mockito/internal/MockitoBehavior.java,src/org/mockito/internal/MockitoBehavior.java,85,for (InvocationWithMatchers registeredInvocation : allInvocationsInOrder) {
True,src/org/mockito/internal/MockitoBehavior.java,src/org/mockito/internal/MockitoBehavior.java,86,if (registeredInvocation.getInvocation().isVerified()) {
True,src/org/mockito/internal/MockitoBehavior.java,src/org/mockito/internal/MockitoBehavior.java,87,lastVerifiedInvocation = registeredInvocation;
True,src/org/mockito/internal/MockitoBehavior.java,src/org/mockito/internal/MockitoBehavior.java,88,} else {
True,src/org/mockito/internal/MockitoBehavior.java,src/org/mockito/internal/MockitoBehavior.java,89,break;
True,src/org/mockito/internal/MockitoBehavior.java,src/org/mockito/internal/MockitoBehavior.java,92,assert lastVerifiedInvocation != null;
True,src/org/mockito/internal/MockitoBehavior.java,src/org/mockito/internal/MockitoBehavior.java,94,if (!lastVerifiedInvocation.matches(actualInvocation.getInvocation())) {
True,src/org/mockito/internal/MockitoBehavior.java,src/org/mockito/internal/MockitoBehavior.java,95,throw new StrictVerificationError();
True,src/org/mockito/internal/MockitoBehavior.java,src/org/mockito/internal/MockitoBehavior.java,173,public List<InvocationWithMatchers> getRegisteredInvocations() {
True,src/org/mockito/internal/MockitoBehavior.java,src/org/mockito/internal/MockitoBehavior.java,174,return registeredInvocations;
True,src/org/mockito/internal/MockitoState.java,src/org/mockito/internal/MockitoState.java,8,//TODO this has to be threaddy singleton
False,src/org/mockito/internal/MockitoState.java,src/org/mockito/internal/MockitoState.java,12,/    private final ThreadLocal<Object> stubbingModeLocal = new ThreadLocal<Object>();
True,src/org/mockito/internal/MockitoState.java,src/org/mockito/internal/MockitoState.java,13,private final ThreadLocal<Integer> invocationSequenceNumber = new ThreadLocal<Integer>();
True,src/org/mockito/internal/MockitoState.java,src/org/mockito/internal/MockitoState.java,14,//    private final ThreadLocal<Object> stubbingModeLocal = new ThreadLoca<Object>();
False,src/org/mockito/internal/MockitoState.java,src/org/mockito/internal/MockitoState.java,35,ublic void checkForUnfinishedVerification() {
True,src/org/mockito/internal/MockitoState.java,src/org/mockito/internal/MockitoState.java,37,public synchronized void checkForUnfinishedVerification() {
True,src/org/mockito/internal/MockitoState.java,src/org/mockito/internal/MockitoState.java,49,public synchronized int nextSequenceNumber() {
True,src/org/mockito/internal/MockitoState.java,src/org/mockito/internal/MockitoState.java,50,if (invocationSequenceNumber.get() == null) {
True,src/org/mockito/internal/MockitoState.java,src/org/mockito/internal/MockitoState.java,51,invocationSequenceNumber.set(1);
True,src/org/mockito/internal/MockitoState.java,src/org/mockito/internal/MockitoState.java,52,return 1;
True,src/org/mockito/internal/MockitoState.java,src/org/mockito/internal/MockitoState.java,53,} else {
True,src/org/mockito/internal/MockitoState.java,src/org/mockito/internal/MockitoState.java,54,int next = invocationSequenceNumber.get() + 1;
True,src/org/mockito/internal/MockitoState.java,src/org/mockito/internal/MockitoState.java,55,invocationSequenceNumber.set(next);
True,src/org/mockito/internal/MockitoState.java,src/org/mockito/internal/MockitoState.java,56,return next;
True,src/org/mockito/internal/SequenceNumberProvider.java,src/org/mockito/internal/SequenceNumberProvider.java,1,package org.mockito.internal;
True,src/org/mockito/internal/SequenceNumberProvider.java,src/org/mockito/internal/SequenceNumberProvider.java,3,public class SequenceNumberProvider {
True,src/org/mockito/internal/SequenceNumberProvider.java,src/org/mockito/internal/SequenceNumberProvider.java,5,private int sequence = 1;
True,src/org/mockito/internal/SequenceNumberProvider.java,src/org/mockito/internal/SequenceNumberProvider.java,7,public Integer sequenceNumber() {
True,src/org/mockito/internal/SequenceNumberProvider.java,src/org/mockito/internal/SequenceNumberProvider.java,8,return sequence++;
True,src/org/mockito/internal/StrictOrderVerifier.java,src/org/mockito/internal/StrictOrderVerifier.java,3,import java.util.*;
True,src/org/mockito/internal/StrictOrderVerifier.java,src/org/mockito/internal/StrictOrderVerifier.java,9,List<Object> mocks = new LinkedList<Object>();
False,src/org/mockito/internal/StrictOrderVerifier.java,src/org/mockito/internal/StrictOrderVerifier.java,12,"eturn Mockito.verify(mock, exactNumberOfInvocations);"
True,src/org/mockito/internal/StrictOrderVerifier.java,src/org/mockito/internal/StrictOrderVerifier.java,16,"return Mockito.verify(mock, VerifyingMode.inSequence(exactNumberOfInvocations, mocks));"
True,src/org/mockito/internal/StrictOrderVerifier.java,src/org/mockito/internal/StrictOrderVerifier.java,23,public void addMock(Object mock) {
True,src/org/mockito/internal/StrictOrderVerifier.java,src/org/mockito/internal/StrictOrderVerifier.java,24,mocks.add(mock);
True,src/org/mockito/internal/VerifyingMode.java,src/org/mockito/internal/VerifyingMode.java,3,import java.util.*;
False,src/org/mockito/internal/VerifyingMode.java,src/org/mockito/internal/VerifyingMode.java,7,rivate static final int ANY_NUMBER_OF_TIMES = -1;
False,src/org/mockito/internal/VerifyingMode.java,src/org/mockito/internal/VerifyingMode.java,8,rivate final int exactNumberOfInvocations;
True,src/org/mockito/internal/VerifyingMode.java,src/org/mockito/internal/VerifyingMode.java,9,private final Integer exactNumberOfInvocations;
True,src/org/mockito/internal/VerifyingMode.java,src/org/mockito/internal/VerifyingMode.java,10,private final List<Object> mocksToBeVerifiedInSequence;
False,src/org/mockito/internal/VerifyingMode.java,src/org/mockito/internal/VerifyingMode.java,10,ublic VerifyingMode(int exactNumberOfTimes) {
False,src/org/mockito/internal/VerifyingMode.java,src/org/mockito/internal/VerifyingMode.java,11,his.exactNumberOfInvocations = exactNumberOfTimes;
True,src/org/mockito/internal/VerifyingMode.java,src/org/mockito/internal/VerifyingMode.java,12,"private VerifyingMode(Integer exactNumberOfInvocations, List<Object> mocksToBeVerifiedInSequence) {"
True,src/org/mockito/internal/VerifyingMode.java,src/org/mockito/internal/VerifyingMode.java,13,if (exactNumberOfInvocations != null && exactNumberOfInvocations.intValue() < 0) {
True,src/org/mockito/internal/VerifyingMode.java,src/org/mockito/internal/VerifyingMode.java,14,"throw new MockitoException(""Negative value is not allowed here"");"
True,src/org/mockito/internal/VerifyingMode.java,src/org/mockito/internal/VerifyingMode.java,16,this.exactNumberOfInvocations = exactNumberOfInvocations;
True,src/org/mockito/internal/VerifyingMode.java,src/org/mockito/internal/VerifyingMode.java,17,this.mocksToBeVerifiedInSequence = mocksToBeVerifiedInSequence;
False,src/org/mockito/internal/VerifyingMode.java,src/org/mockito/internal/VerifyingMode.java,15,eturn new VerifyingMode(ANY_NUMBER_OF_TIMES);
True,src/org/mockito/internal/VerifyingMode.java,src/org/mockito/internal/VerifyingMode.java,21,"return new VerifyingMode(null, Collections.emptyList());"
False,src/org/mockito/internal/VerifyingMode.java,src/org/mockito/internal/VerifyingMode.java,19,f (exactNumberOfInvocations < 0) {
False,src/org/mockito/internal/VerifyingMode.java,src/org/mockito/internal/VerifyingMode.java,20,"hrow new MockitoException(""Negative value is not allowed here"");"
False,src/org/mockito/internal/VerifyingMode.java,src/org/mockito/internal/VerifyingMode.java,22,eturn new VerifyingMode(exactNumberOfInvocations);
True,src/org/mockito/internal/VerifyingMode.java,src/org/mockito/internal/VerifyingMode.java,25,"return new VerifyingMode(exactNumberOfInvocations, Collections.emptyList());"
False,src/org/mockito/internal/VerifyingMode.java,src/org/mockito/internal/VerifyingMode.java,26,eturn exactNumberOfInvocations != ANY_NUMBER_OF_TIMES;
True,src/org/mockito/internal/VerifyingMode.java,src/org/mockito/internal/VerifyingMode.java,29,return exactNumberOfInvocations != null;
True,src/org/mockito/internal/VerifyingMode.java,src/org/mockito/internal/VerifyingMode.java,36,public List<Object> getAllMocksToBeVerifiedInSequence() {
True,src/org/mockito/internal/VerifyingMode.java,src/org/mockito/internal/VerifyingMode.java,37,return mocksToBeVerifiedInSequence;
True,src/org/mockito/internal/VerifyingMode.java,src/org/mockito/internal/VerifyingMode.java,40,"public static VerifyingMode inSequence(int exactNumberOfInvocations, List<Object> mocks) {"
True,src/org/mockito/internal/VerifyingMode.java,src/org/mockito/internal/VerifyingMode.java,41,"return new VerifyingMode(exactNumberOfInvocations, mocks);"
True,src/org/mockito/internal/VerifyingMode.java,src/org/mockito/internal/VerifyingMode.java,44,public boolean orderOfInvocationsMatters() {
True,src/org/mockito/internal/VerifyingMode.java,src/org/mockito/internal/VerifyingMode.java,45,return !mocksToBeVerifiedInSequence.isEmpty();
False,test/org/mockito/MockitoTest.java,test/org/mockito/MockitoTest.java,64,ublic void shouldValidateMockWhenEnablingStrictChecking() {
True,test/org/mockito/MockitoTest.java,test/org/mockito/MockitoTest.java,64,public void shouldValidateMockWhenGettingStrictVerifier() {
False,test/org/mockito/usage/verification/VerificationInOrderTest.java,test/org/mockito/usage/verification/VerificationInOrderTest.java,70,Ignore
