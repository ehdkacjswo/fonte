is_addition,old_file_path,new_file_path,line_num,content
True,src/org/mockito/internal/util/junit/JUnitFailureHacker.java,src/org/mockito/internal/util/junit/JUnitFailureHacker.java,1,package org.mockito.internal.util.junit;
True,src/org/mockito/internal/util/junit/JUnitFailureHacker.java,src/org/mockito/internal/util/junit/JUnitFailureHacker.java,3,import org.junit.runner.notification.Failure;
True,src/org/mockito/internal/util/junit/JUnitFailureHacker.java,src/org/mockito/internal/util/junit/JUnitFailureHacker.java,4,import org.mockito.internal.exceptions.ExceptionIncludingMockitoWarnings;
True,src/org/mockito/internal/util/junit/JUnitFailureHacker.java,src/org/mockito/internal/util/junit/JUnitFailureHacker.java,5,import org.mockito.internal.util.reflection.Whitebox;
True,src/org/mockito/internal/util/junit/JUnitFailureHacker.java,src/org/mockito/internal/util/junit/JUnitFailureHacker.java,7,public class JUnitFailureHacker {
True,src/org/mockito/internal/util/junit/JUnitFailureHacker.java,src/org/mockito/internal/util/junit/JUnitFailureHacker.java,9,"public void appendWarnings(Failure failure, String warnings) {"
True,src/org/mockito/internal/util/junit/JUnitFailureHacker.java,src/org/mockito/internal/util/junit/JUnitFailureHacker.java,10,//TODO: this has to protect the use in case jUnit changes and this internal state logic fails
True,src/org/mockito/internal/util/junit/JUnitFailureHacker.java,src/org/mockito/internal/util/junit/JUnitFailureHacker.java,11,"Throwable throwable = (Throwable) Whitebox.getInternalState(failure, ""fThrownException"");"
True,src/org/mockito/internal/util/junit/JUnitFailureHacker.java,src/org/mockito/internal/util/junit/JUnitFailureHacker.java,13,"String newMessage = ""contains both: actual test failure *and* Mockito warnings.\n"" +"
True,src/org/mockito/internal/util/junit/JUnitFailureHacker.java,src/org/mockito/internal/util/junit/JUnitFailureHacker.java,14,"warnings + ""\n *** The actual failure is because of: ***\n"";"
True,src/org/mockito/internal/util/junit/JUnitFailureHacker.java,src/org/mockito/internal/util/junit/JUnitFailureHacker.java,16,"ExceptionIncludingMockitoWarnings e = new ExceptionIncludingMockitoWarnings(newMessage, throwable);"
True,src/org/mockito/internal/util/junit/JUnitFailureHacker.java,src/org/mockito/internal/util/junit/JUnitFailureHacker.java,17,e.setStackTrace(throwable.getStackTrace());
True,src/org/mockito/internal/util/junit/JUnitFailureHacker.java,src/org/mockito/internal/util/junit/JUnitFailureHacker.java,18,"Whitebox.setInternalState(failure, ""fThrownException"", e);"
True,src/org/mockito/runners/ConsoleSpammingMockitoJUnitRunner.java,src/org/mockito/runners/ConsoleSpammingMockitoJUnitRunner.java,7,import java.lang.reflect.InvocationTargetException;
True,src/org/mockito/runners/ConsoleSpammingMockitoJUnitRunner.java,src/org/mockito/runners/ConsoleSpammingMockitoJUnitRunner.java,11,import org.junit.runner.manipulation.Filter;
True,src/org/mockito/runners/ConsoleSpammingMockitoJUnitRunner.java,src/org/mockito/runners/ConsoleSpammingMockitoJUnitRunner.java,12,import org.junit.runner.manipulation.Filterable;
True,src/org/mockito/runners/ConsoleSpammingMockitoJUnitRunner.java,src/org/mockito/runners/ConsoleSpammingMockitoJUnitRunner.java,13,import org.junit.runner.manipulation.NoTestsRemainException;
False,src/org/mockito/runners/ConsoleSpammingMockitoJUnitRunner.java,src/org/mockito/runners/ConsoleSpammingMockitoJUnitRunner.java,14,mport org.mockito.internal.debugging.WarningsPrinterImpl;
False,src/org/mockito/runners/ConsoleSpammingMockitoJUnitRunner.java,src/org/mockito/runners/ConsoleSpammingMockitoJUnitRunner.java,15,mport org.mockito.internal.invocation.AllInvocationsFinder;
False,src/org/mockito/runners/ConsoleSpammingMockitoJUnitRunner.java,src/org/mockito/runners/ConsoleSpammingMockitoJUnitRunner.java,16,mport org.mockito.internal.invocation.Invocation;
False,src/org/mockito/runners/ConsoleSpammingMockitoJUnitRunner.java,src/org/mockito/runners/ConsoleSpammingMockitoJUnitRunner.java,17,mport org.mockito.internal.invocation.InvocationMatcher;
False,src/org/mockito/runners/ConsoleSpammingMockitoJUnitRunner.java,src/org/mockito/runners/ConsoleSpammingMockitoJUnitRunner.java,18,mport org.mockito.internal.invocation.UnusedStubsFinder;
False,src/org/mockito/runners/ConsoleSpammingMockitoJUnitRunner.java,src/org/mockito/runners/ConsoleSpammingMockitoJUnitRunner.java,19,mport org.mockito.internal.listeners.CollectCreatedMocks;
False,src/org/mockito/runners/ConsoleSpammingMockitoJUnitRunner.java,src/org/mockito/runners/ConsoleSpammingMockitoJUnitRunner.java,20,mport org.mockito.internal.progress.MockingProgress;
False,src/org/mockito/runners/ConsoleSpammingMockitoJUnitRunner.java,src/org/mockito/runners/ConsoleSpammingMockitoJUnitRunner.java,21,mport org.mockito.internal.progress.ThreadSafeMockingProgress;
False,src/org/mockito/runners/ConsoleSpammingMockitoJUnitRunner.java,src/org/mockito/runners/ConsoleSpammingMockitoJUnitRunner.java,24,mport org.mockito.internal.util.MockitoLogger;
False,src/org/mockito/runners/ConsoleSpammingMockitoJUnitRunner.java,src/org/mockito/runners/ConsoleSpammingMockitoJUnitRunner.java,27,mport java.lang.reflect.InvocationTargetException;
False,src/org/mockito/runners/ConsoleSpammingMockitoJUnitRunner.java,src/org/mockito/runners/ConsoleSpammingMockitoJUnitRunner.java,28,mport java.util.LinkedList;
False,src/org/mockito/runners/ConsoleSpammingMockitoJUnitRunner.java,src/org/mockito/runners/ConsoleSpammingMockitoJUnitRunner.java,29,mport java.util.List;
True,src/org/mockito/runners/ConsoleSpammingMockitoJUnitRunner.java,src/org/mockito/runners/ConsoleSpammingMockitoJUnitRunner.java,22,import org.mockito.internal.util.MockitoLogger;
False,src/org/mockito/runners/ConsoleSpammingMockitoJUnitRunner.java,src/org/mockito/runners/ConsoleSpammingMockitoJUnitRunner.java,88, So far I identified 3 cases when warnings are printed:
False,src/org/mockito/runners/ConsoleSpammingMockitoJUnitRunner.java,src/org/mockito/runners/ConsoleSpammingMockitoJUnitRunner.java,89, <li>unstubbed method</li>
True,src/org/mockito/runners/ConsoleSpammingMockitoJUnitRunner.java,src/org/mockito/runners/ConsoleSpammingMockitoJUnitRunner.java,81,* So far I identified 2 cases when warnings are printed:
False,src/org/mockito/runners/ConsoleSpammingMockitoJUnitRunner.java,src/org/mockito/runners/ConsoleSpammingMockitoJUnitRunner.java,97,ublic class ConsoleSpammingMockitoJUnitRunner extends Runner {
True,src/org/mockito/runners/ConsoleSpammingMockitoJUnitRunner.java,src/org/mockito/runners/ConsoleSpammingMockitoJUnitRunner.java,89,public class ConsoleSpammingMockitoJUnitRunner extends Runner implements Filterable {
True,src/org/mockito/runners/ConsoleSpammingMockitoJUnitRunner.java,src/org/mockito/runners/ConsoleSpammingMockitoJUnitRunner.java,128,public void filter(Filter filter) throws NoTestsRemainException {
True,src/org/mockito/runners/ConsoleSpammingMockitoJUnitRunner.java,src/org/mockito/runners/ConsoleSpammingMockitoJUnitRunner.java,129,//filter is required because without it UnrootedTests show up in Eclipse
True,src/org/mockito/runners/ConsoleSpammingMockitoJUnitRunner.java,src/org/mockito/runners/ConsoleSpammingMockitoJUnitRunner.java,130,runner.filter(filter);
True,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,7,import java.lang.reflect.InvocationTargetException;
True,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,11,import org.junit.runner.manipulation.Filter;
True,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,12,import org.junit.runner.manipulation.Filterable;
True,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,13,import org.junit.runner.manipulation.NoTestsRemainException;
False,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,12,mport org.mockito.MockSettings;
False,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,13,mport org.mockito.Mockito;
False,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,14,mport org.mockito.internal.exceptions.ExceptionIncludingMockitoWarnings;
False,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,16,mport org.mockito.internal.debugging.WarningsPrinterImpl;
False,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,17,mport org.mockito.internal.invocation.AllInvocationsFinder;
False,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,18,mport org.mockito.internal.invocation.Invocation;
False,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,19,mport org.mockito.internal.invocation.InvocationMatcher;
False,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,20,mport org.mockito.internal.invocation.UnusedStubsFinder;
False,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,21,mport org.mockito.internal.listeners.CollectCreatedMocks;
False,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,22,mport org.mockito.internal.listeners.MockingStartedListener;
False,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,23,mport org.mockito.internal.progress.MockingProgress;
False,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,24,mport org.mockito.internal.progress.ThreadSafeMockingProgress;
True,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,18,import org.mockito.internal.exceptions.ExceptionIncludingMockitoWarnings;
True,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,21,import org.mockito.internal.util.junit.JUnitFailureHacker;
False,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,29,mport java.lang.reflect.InvocationTargetException;
False,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,30,mport java.util.LinkedList;
False,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,31,mport java.util.List;
False,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,49,ublic class VerboseMockitoJUnitRunner extends Runner {
True,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,40,public class VerboseMockitoJUnitRunner extends Runner implements Filterable {
False,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,78,/TODO: this has to protect the use in case jUnit changes and this internal state logic fails
False,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,79,"hrowable throwable = (Throwable) Whitebox.getInternalState(failure, ""fThrownException"");"
False,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,81,"tring newMessage = ""contains both: actual test failure *and* Mockito warnings.\n"" +"
False,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,82,"arnings + ""\n *** The actual failure is because of: ***\n"";"
False,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,84,"xceptionIncludingMockitoWarnings e = new ExceptionIncludingMockitoWarnings(newMessage, throwable);"
False,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,85,.setStackTrace(throwable.getStackTrace());
False,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,86,"hitebox.setInternalState(failure, ""fThrownException"", e);"
True,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,68,"new JUnitFailureHacker().appendWarnings(failure, warnings);"
True,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,82,public void filter(Filter filter) throws NoTestsRemainException {
True,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,83,//filter is required because without it UnrootedTests show up in Eclipse
True,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,src/org/mockito/runners/VerboseMockitoJUnitRunner.java,84,runner.filter(filter);
True,test/org/mockito/internal/util/junit/JUnitFailureHackerTest.java,test/org/mockito/internal/util/junit/JUnitFailureHackerTest.java,1,package org.mockito.internal.util.junit;
True,test/org/mockito/internal/util/junit/JUnitFailureHackerTest.java,test/org/mockito/internal/util/junit/JUnitFailureHackerTest.java,3,import org.fest.assertions.Assertions;
True,test/org/mockito/internal/util/junit/JUnitFailureHackerTest.java,test/org/mockito/internal/util/junit/JUnitFailureHackerTest.java,4,import org.junit.Test;
True,test/org/mockito/internal/util/junit/JUnitFailureHackerTest.java,test/org/mockito/internal/util/junit/JUnitFailureHackerTest.java,5,import org.junit.runner.Description;
True,test/org/mockito/internal/util/junit/JUnitFailureHackerTest.java,test/org/mockito/internal/util/junit/JUnitFailureHackerTest.java,6,import org.junit.runner.notification.Failure;
True,test/org/mockito/internal/util/junit/JUnitFailureHackerTest.java,test/org/mockito/internal/util/junit/JUnitFailureHackerTest.java,7,import org.mockito.internal.exceptions.ExceptionIncludingMockitoWarnings;
True,test/org/mockito/internal/util/junit/JUnitFailureHackerTest.java,test/org/mockito/internal/util/junit/JUnitFailureHackerTest.java,8,import org.mockitoutil.TestBase;
True,test/org/mockito/internal/util/junit/JUnitFailureHackerTest.java,test/org/mockito/internal/util/junit/JUnitFailureHackerTest.java,10,public class JUnitFailureHackerTest extends TestBase {
True,test/org/mockito/internal/util/junit/JUnitFailureHackerTest.java,test/org/mockito/internal/util/junit/JUnitFailureHackerTest.java,12,JUnitFailureHacker hacker = new JUnitFailureHacker();
True,test/org/mockito/internal/util/junit/JUnitFailureHackerTest.java,test/org/mockito/internal/util/junit/JUnitFailureHackerTest.java,14,@Test
True,test/org/mockito/internal/util/junit/JUnitFailureHackerTest.java,test/org/mockito/internal/util/junit/JUnitFailureHackerTest.java,15,public void shouldReplaceException() throws Exception {
True,test/org/mockito/internal/util/junit/JUnitFailureHackerTest.java,test/org/mockito/internal/util/junit/JUnitFailureHackerTest.java,16,//given
True,test/org/mockito/internal/util/junit/JUnitFailureHackerTest.java,test/org/mockito/internal/util/junit/JUnitFailureHackerTest.java,17,"RuntimeException actualExc = new RuntimeException(""foo"");"
True,test/org/mockito/internal/util/junit/JUnitFailureHackerTest.java,test/org/mockito/internal/util/junit/JUnitFailureHackerTest.java,18,"Failure failure = new Failure(Description.EMPTY, actualExc);"
True,test/org/mockito/internal/util/junit/JUnitFailureHackerTest.java,test/org/mockito/internal/util/junit/JUnitFailureHackerTest.java,20,//when
True,test/org/mockito/internal/util/junit/JUnitFailureHackerTest.java,test/org/mockito/internal/util/junit/JUnitFailureHackerTest.java,21,"hacker.appendWarnings(failure, ""unused stubbing"");"
True,test/org/mockito/internal/util/junit/JUnitFailureHackerTest.java,test/org/mockito/internal/util/junit/JUnitFailureHackerTest.java,23,//then
True,test/org/mockito/internal/util/junit/JUnitFailureHackerTest.java,test/org/mockito/internal/util/junit/JUnitFailureHackerTest.java,24,"assertEquals(ExceptionIncludingMockitoWarnings.class, failure.getException().getClass());"
True,test/org/mockito/internal/util/junit/JUnitFailureHackerTest.java,test/org/mockito/internal/util/junit/JUnitFailureHackerTest.java,25,"assertEquals(actualExc, failure.getException().getCause());"
True,test/org/mockito/internal/util/junit/JUnitFailureHackerTest.java,test/org/mockito/internal/util/junit/JUnitFailureHackerTest.java,26,Assertions.assertThat(actualExc.getStackTrace()).isEqualTo(failure.getException().getStackTrace());
True,test/org/mockito/internal/util/junit/JUnitFailureHackerTest.java,test/org/mockito/internal/util/junit/JUnitFailureHackerTest.java,29,@Test
True,test/org/mockito/internal/util/junit/JUnitFailureHackerTest.java,test/org/mockito/internal/util/junit/JUnitFailureHackerTest.java,30,public void shouldAppendWarning() throws Exception {
True,test/org/mockito/internal/util/junit/JUnitFailureHackerTest.java,test/org/mockito/internal/util/junit/JUnitFailureHackerTest.java,31,"Failure failure = new Failure(Description.EMPTY, new RuntimeException(""foo""));"
True,test/org/mockito/internal/util/junit/JUnitFailureHackerTest.java,test/org/mockito/internal/util/junit/JUnitFailureHackerTest.java,33,//when
True,test/org/mockito/internal/util/junit/JUnitFailureHackerTest.java,test/org/mockito/internal/util/junit/JUnitFailureHackerTest.java,34,"hacker.appendWarnings(failure, ""unused stubbing blah"");"
True,test/org/mockito/internal/util/junit/JUnitFailureHackerTest.java,test/org/mockito/internal/util/junit/JUnitFailureHackerTest.java,36,//then
True,test/org/mockito/internal/util/junit/JUnitFailureHackerTest.java,test/org/mockito/internal/util/junit/JUnitFailureHackerTest.java,37,"assertContains(""unused stubbing blah"", failure.getException().getMessage());"
