is_addition,old_file_path,new_file_path,line_num,content
False,src/org/easymock/internal/ToTypeMappings.java,src/org/easymock/internal/ToTypeMappings.java,20,"SuppressWarnings(""unchecked"")"
False,src/org/easymock/internal/ToTypeMappings.java,src/org/easymock/internal/ToTypeMappings.java,21,"rotected static Map<Class, Object> emptyReturnValueToPrimitiveType = new HashMap<Class, Object>();"
False,src/org/easymock/internal/ToTypeMappings.java,src/org/easymock/internal/ToTypeMappings.java,23,tatic {
False,src/org/easymock/internal/ToTypeMappings.java,src/org/easymock/internal/ToTypeMappings.java,24,"mptyReturnValueToPrimitiveType.put(Void.TYPE, null);"
False,src/org/easymock/internal/ToTypeMappings.java,src/org/easymock/internal/ToTypeMappings.java,25,"mptyReturnValueToPrimitiveType.put(Boolean.TYPE, Boolean.FALSE);"
False,src/org/easymock/internal/ToTypeMappings.java,src/org/easymock/internal/ToTypeMappings.java,26,"mptyReturnValueToPrimitiveType.put(Byte.TYPE, new Byte((byte) 0));"
False,src/org/easymock/internal/ToTypeMappings.java,src/org/easymock/internal/ToTypeMappings.java,27,"mptyReturnValueToPrimitiveType.put(Short.TYPE, new Short((short) 0));"
False,src/org/easymock/internal/ToTypeMappings.java,src/org/easymock/internal/ToTypeMappings.java,28,"mptyReturnValueToPrimitiveType.put(Character.TYPE, new Character((char) 0));"
False,src/org/easymock/internal/ToTypeMappings.java,src/org/easymock/internal/ToTypeMappings.java,29,"mptyReturnValueToPrimitiveType.put(Integer.TYPE, new Integer(0));"
False,src/org/easymock/internal/ToTypeMappings.java,src/org/easymock/internal/ToTypeMappings.java,30,"mptyReturnValueToPrimitiveType.put(Long.TYPE, new Long(0));"
False,src/org/easymock/internal/ToTypeMappings.java,src/org/easymock/internal/ToTypeMappings.java,31,"mptyReturnValueToPrimitiveType.put(Float.TYPE, new Float(0));"
False,src/org/easymock/internal/ToTypeMappings.java,src/org/easymock/internal/ToTypeMappings.java,32,"mptyReturnValueToPrimitiveType.put(Double.TYPE, new Double(0));"
False,src/org/easymock/internal/ToTypeMappings.java,src/org/easymock/internal/ToTypeMappings.java,50,f (type.isPrimitive()) {
False,src/org/easymock/internal/ToTypeMappings.java,src/org/easymock/internal/ToTypeMappings.java,51,eturn emptyReturnValueToPrimitiveType.get(type);
False,test/org/easymock/tests/InvocationTest.java,test/org/easymock/tests/InvocationTest.java,11,mport org.easymock.internal.EqualsMatcher;
False,test/org/easymock/tests/InvocationTest.java,test/org/easymock/tests/InvocationTest.java,12,mport org.easymock.internal.Invocation;
True,test/org/easymock/tests/InvocationTest.java,test/org/easymock/tests/InvocationTest.java,11,import org.easymock.internal.*;
True,test/org/easymock/tests/InvocationTest.java,test/org/easymock/tests/InvocationTest.java,23,private Method dummyMethod;
False,test/org/easymock/tests/InvocationTest.java,test/org/easymock/tests/InvocationTest.java,29,"ethod m = Object.class.getMethod(""equals"","
True,test/org/easymock/tests/InvocationTest.java,test/org/easymock/tests/InvocationTest.java,30,"dummyMethod = Object.class.getMethod(""equals"","
False,test/org/easymock/tests/InvocationTest.java,test/org/easymock/tests/InvocationTest.java,32,"all = new Invocation(mock, m, arguments1);"
False,test/org/easymock/tests/InvocationTest.java,test/org/easymock/tests/InvocationTest.java,33,"qualCall = new Invocation(mock, m, arguments2);"
False,test/org/easymock/tests/InvocationTest.java,test/org/easymock/tests/InvocationTest.java,34,"onEqualCall = new Invocation(mock, m, arguments3);"
True,test/org/easymock/tests/InvocationTest.java,test/org/easymock/tests/InvocationTest.java,33,"call = new Invocation(mock, dummyMethod, arguments1);"
True,test/org/easymock/tests/InvocationTest.java,test/org/easymock/tests/InvocationTest.java,34,"equalCall = new Invocation(mock, dummyMethod, arguments2);"
True,test/org/easymock/tests/InvocationTest.java,test/org/easymock/tests/InvocationTest.java,35,"nonEqualCall = new Invocation(mock, dummyMethod, arguments3);"
False,test/org/easymock/tests/InvocationTest.java,test/org/easymock/tests/InvocationTest.java,38,ublic void testEquals() {
True,test/org/easymock/tests/InvocationTest.java,test/org/easymock/tests/InvocationTest.java,39,public void shouldKnowIfIsEqualTo() {
True,test/org/easymock/tests/InvocationTest.java,test/org/easymock/tests/InvocationTest.java,46,@Test
True,test/org/easymock/tests/InvocationTest.java,test/org/easymock/tests/InvocationTest.java,47,"public void shouldNotEqualIfNumberOfArgsDiffer() throws SecurityException, NoSuchMethodException {"
True,test/org/easymock/tests/InvocationTest.java,test/org/easymock/tests/InvocationTest.java,48,Object mock = new Object();
True,test/org/easymock/tests/InvocationTest.java,test/org/easymock/tests/InvocationTest.java,50,ExpectedInvocation invocationWithOneArg = new ExpectedInvocation(
True,test/org/easymock/tests/InvocationTest.java,test/org/easymock/tests/InvocationTest.java,51,"new Invocation(mock, dummyMethod, new Object[] { """" }),"
True,test/org/easymock/tests/InvocationTest.java,test/org/easymock/tests/InvocationTest.java,52,null);
True,test/org/easymock/tests/InvocationTest.java,test/org/easymock/tests/InvocationTest.java,53,ExpectedInvocation invocationWithTwoArgs = new ExpectedInvocation(
True,test/org/easymock/tests/InvocationTest.java,test/org/easymock/tests/InvocationTest.java,54,"new Invocation(mock, dummyMethod, new Object[] { """", """" }),"
True,test/org/easymock/tests/InvocationTest.java,test/org/easymock/tests/InvocationTest.java,55,null);
True,test/org/easymock/tests/InvocationTest.java,test/org/easymock/tests/InvocationTest.java,57,assertFalse(invocationWithOneArg.equals(null));
True,test/org/easymock/tests/InvocationTest.java,test/org/easymock/tests/InvocationTest.java,58,assertFalse(invocationWithOneArg.equals(invocationWithTwoArgs));
False,test/org/easymock/tests/InvocationTest.java,test/org/easymock/tests/InvocationTest.java,46,ublic void testHashCode() {
True,test/org/easymock/tests/InvocationTest.java,test/org/easymock/tests/InvocationTest.java,62,public void shouldNotImplementHashCodeBecauseItsNotUsedWithMaps() {
False,test/org/easymock/tests/InvocationTest.java,test/org/easymock/tests/InvocationTest.java,56,ublic void testShouldDisplayMocksToStringIfValidJavaIdentifier()
True,test/org/easymock/tests/InvocationTest.java,test/org/easymock/tests/InvocationTest.java,72,public void shouldDisplayMocksToStringIfValidJavaIdentifier()
False,test/org/easymock/tests/InvocationTest.java,test/org/easymock/tests/InvocationTest.java,58,lass ToString {
False,test/org/easymock/tests/InvocationTest.java,test/org/easymock/tests/InvocationTest.java,59,rivate final String name;
False,test/org/easymock/tests/InvocationTest.java,test/org/easymock/tests/InvocationTest.java,61,ublic ToString(String name) {
False,test/org/easymock/tests/InvocationTest.java,test/org/easymock/tests/InvocationTest.java,62,his.name = name;
False,test/org/easymock/tests/InvocationTest.java,test/org/easymock/tests/InvocationTest.java,65,Override
False,test/org/easymock/tests/InvocationTest.java,test/org/easymock/tests/InvocationTest.java,66,ublic String toString() {
False,test/org/easymock/tests/InvocationTest.java,test/org/easymock/tests/InvocationTest.java,67,eturn name;
False,test/org/easymock/tests/InvocationTest.java,test/org/easymock/tests/InvocationTest.java,70,ublic void aMethod() {
True,test/org/easymock/tests/InvocationTest.java,test/org/easymock/tests/InvocationTest.java,88,class ToString {
True,test/org/easymock/tests/InvocationTest.java,test/org/easymock/tests/InvocationTest.java,89,private final String name;
True,test/org/easymock/tests/InvocationTest.java,test/org/easymock/tests/InvocationTest.java,91,public ToString(String name) {
True,test/org/easymock/tests/InvocationTest.java,test/org/easymock/tests/InvocationTest.java,92,this.name = name;
True,test/org/easymock/tests/InvocationTest.java,test/org/easymock/tests/InvocationTest.java,95,@Override
True,test/org/easymock/tests/InvocationTest.java,test/org/easymock/tests/InvocationTest.java,96,public String toString() {
True,test/org/easymock/tests/InvocationTest.java,test/org/easymock/tests/InvocationTest.java,97,return name;
True,test/org/easymock/tests/InvocationTest.java,test/org/easymock/tests/InvocationTest.java,100,public void aMethod() {
False,test/org/easymock/tests/LegacyBehaviorTests.java,test/org/easymock/tests/LegacyBehaviorTests.java,2," Copyright (c) 2001-2007 OFFIS, Tammo Freese."
False,test/org/easymock/tests/LegacyBehaviorTests.java,test/org/easymock/tests/LegacyBehaviorTests.java,3, This program is made available under the terms of the MIT License.
False,test/org/easymock/tests/LegacyBehaviorTests.java,test/org/easymock/tests/LegacyBehaviorTests.java,5,ackage org.easymock.tests;
False,test/org/easymock/tests/LegacyBehaviorTests.java,test/org/easymock/tests/LegacyBehaviorTests.java,7,mport static org.junit.Assert.*;
False,test/org/easymock/tests/LegacyBehaviorTests.java,test/org/easymock/tests/LegacyBehaviorTests.java,9,mport java.io.IOException;
False,test/org/easymock/tests/LegacyBehaviorTests.java,test/org/easymock/tests/LegacyBehaviorTests.java,11,mport org.easymock.MockControl;
False,test/org/easymock/tests/LegacyBehaviorTests.java,test/org/easymock/tests/LegacyBehaviorTests.java,12,mport org.junit.Test;
False,test/org/easymock/tests/LegacyBehaviorTests.java,test/org/easymock/tests/LegacyBehaviorTests.java,14,ublic class LegacyBehaviorTests {
False,test/org/easymock/tests/LegacyBehaviorTests.java,test/org/easymock/tests/LegacyBehaviorTests.java,16,Test
False,test/org/easymock/tests/LegacyBehaviorTests.java,test/org/easymock/tests/LegacyBehaviorTests.java,17,ublic void throwAfterThrowable() throws IOException {
False,test/org/easymock/tests/LegacyBehaviorTests.java,test/org/easymock/tests/LegacyBehaviorTests.java,19,ockControl<IMethods> control = MockControl
False,test/org/easymock/tests/LegacyBehaviorTests.java,test/org/easymock/tests/LegacyBehaviorTests.java,20,createControl(IMethods.class);
False,test/org/easymock/tests/LegacyBehaviorTests.java,test/org/easymock/tests/LegacyBehaviorTests.java,21,Methods mock = control.getMock();
False,test/org/easymock/tests/LegacyBehaviorTests.java,test/org/easymock/tests/LegacyBehaviorTests.java,23,ock.throwsIOException(0);
False,test/org/easymock/tests/LegacyBehaviorTests.java,test/org/easymock/tests/LegacyBehaviorTests.java,24,ontrol.setThrowable(new IOException());
False,test/org/easymock/tests/LegacyBehaviorTests.java,test/org/easymock/tests/LegacyBehaviorTests.java,25,"ontrol.setThrowable(new IOException(), MockControl.ONE_OR_MORE);"
False,test/org/easymock/tests/LegacyBehaviorTests.java,test/org/easymock/tests/LegacyBehaviorTests.java,27,ontrol.replay();
False,test/org/easymock/tests/LegacyBehaviorTests.java,test/org/easymock/tests/LegacyBehaviorTests.java,29,ry {
False,test/org/easymock/tests/LegacyBehaviorTests.java,test/org/easymock/tests/LegacyBehaviorTests.java,30,ock.throwsIOException(0);
False,test/org/easymock/tests/LegacyBehaviorTests.java,test/org/easymock/tests/LegacyBehaviorTests.java,31,"ail(""IOException expected"");"
False,test/org/easymock/tests/LegacyBehaviorTests.java,test/org/easymock/tests/LegacyBehaviorTests.java,32, catch (IOException expected) {
False,test/org/easymock/tests/LegacyBehaviorTests.java,test/org/easymock/tests/LegacyBehaviorTests.java,35,oolean exceptionOccured = true;
False,test/org/easymock/tests/LegacyBehaviorTests.java,test/org/easymock/tests/LegacyBehaviorTests.java,36,ry {
False,test/org/easymock/tests/LegacyBehaviorTests.java,test/org/easymock/tests/LegacyBehaviorTests.java,37,ontrol.verify();
False,test/org/easymock/tests/LegacyBehaviorTests.java,test/org/easymock/tests/LegacyBehaviorTests.java,38,xceptionOccured = false;
False,test/org/easymock/tests/LegacyBehaviorTests.java,test/org/easymock/tests/LegacyBehaviorTests.java,39, catch (AssertionError expected) {
False,test/org/easymock/tests/LegacyBehaviorTests.java,test/org/easymock/tests/LegacyBehaviorTests.java,40,ssertEquals(
False,test/org/easymock/tests/LegacyBehaviorTests.java,test/org/easymock/tests/LegacyBehaviorTests.java,41,"\n  Expectation failure on verify:"""
False,test/org/easymock/tests/LegacyBehaviorTests.java,test/org/easymock/tests/LegacyBehaviorTests.java,42," ""\n    throwsIOException(0): expected: at least 2, actual: 1"","
False,test/org/easymock/tests/LegacyBehaviorTests.java,test/org/easymock/tests/LegacyBehaviorTests.java,43,xpected.getMessage());
False,test/org/easymock/tests/LegacyBehaviorTests.java,test/org/easymock/tests/LegacyBehaviorTests.java,46,f (!exceptionOccured)
False,test/org/easymock/tests/LegacyBehaviorTests.java,test/org/easymock/tests/LegacyBehaviorTests.java,47,"ail(""exception expected"");"
False,test/org/easymock/tests/LegacyBehaviorTests.java,test/org/easymock/tests/LegacyBehaviorTests.java,49,ry {
False,test/org/easymock/tests/LegacyBehaviorTests.java,test/org/easymock/tests/LegacyBehaviorTests.java,50,ock.throwsIOException(0);
False,test/org/easymock/tests/LegacyBehaviorTests.java,test/org/easymock/tests/LegacyBehaviorTests.java,51,"ail(""IOException expected"");"
False,test/org/easymock/tests/LegacyBehaviorTests.java,test/org/easymock/tests/LegacyBehaviorTests.java,52, catch (IOException expected) {
False,test/org/easymock/tests/LegacyBehaviorTests.java,test/org/easymock/tests/LegacyBehaviorTests.java,55,ontrol.verify();
False,test/org/easymock/tests/LegacyBehaviorTests.java,test/org/easymock/tests/LegacyBehaviorTests.java,57,ry {
False,test/org/easymock/tests/LegacyBehaviorTests.java,test/org/easymock/tests/LegacyBehaviorTests.java,58,ock.throwsIOException(0);
False,test/org/easymock/tests/LegacyBehaviorTests.java,test/org/easymock/tests/LegacyBehaviorTests.java,59,"ail(""IOException expected"");"
False,test/org/easymock/tests/LegacyBehaviorTests.java,test/org/easymock/tests/LegacyBehaviorTests.java,60, catch (IOException expected) {
False,test/org/easymock/tests/LegacyBehaviorTests.java,test/org/easymock/tests/LegacyBehaviorTests.java,63,ontrol.verify();
False,test/org/easymock/tests/MatchableArgumentsTest.java,test/org/easymock/tests/MatchableArgumentsTest.java,2," Copyright (c) 2001-2007 OFFIS, Tammo Freese."
False,test/org/easymock/tests/MatchableArgumentsTest.java,test/org/easymock/tests/MatchableArgumentsTest.java,3, This program is made available under the terms of the MIT License.
False,test/org/easymock/tests/MatchableArgumentsTest.java,test/org/easymock/tests/MatchableArgumentsTest.java,5,ackage org.easymock.tests;
False,test/org/easymock/tests/MatchableArgumentsTest.java,test/org/easymock/tests/MatchableArgumentsTest.java,7,mport static org.junit.Assert.*;
False,test/org/easymock/tests/MatchableArgumentsTest.java,test/org/easymock/tests/MatchableArgumentsTest.java,9,mport java.lang.reflect.Method;
False,test/org/easymock/tests/MatchableArgumentsTest.java,test/org/easymock/tests/MatchableArgumentsTest.java,11,mport org.easymock.internal.ExpectedInvocation;
False,test/org/easymock/tests/MatchableArgumentsTest.java,test/org/easymock/tests/MatchableArgumentsTest.java,12,mport org.easymock.internal.Invocation;
False,test/org/easymock/tests/MatchableArgumentsTest.java,test/org/easymock/tests/MatchableArgumentsTest.java,13,mport org.junit.Before;
False,test/org/easymock/tests/MatchableArgumentsTest.java,test/org/easymock/tests/MatchableArgumentsTest.java,14,mport org.junit.Test;
False,test/org/easymock/tests/MatchableArgumentsTest.java,test/org/easymock/tests/MatchableArgumentsTest.java,16,ublic class MatchableArgumentsTest {
False,test/org/easymock/tests/MatchableArgumentsTest.java,test/org/easymock/tests/MatchableArgumentsTest.java,18,rivate Object[] arguments;
False,test/org/easymock/tests/MatchableArgumentsTest.java,test/org/easymock/tests/MatchableArgumentsTest.java,20,rivate Object[] arguments2;
False,test/org/easymock/tests/MatchableArgumentsTest.java,test/org/easymock/tests/MatchableArgumentsTest.java,22,Before
False,test/org/easymock/tests/MatchableArgumentsTest.java,test/org/easymock/tests/MatchableArgumentsTest.java,23,ublic void setup() {
False,test/org/easymock/tests/MatchableArgumentsTest.java,test/org/easymock/tests/MatchableArgumentsTest.java,24,"rguments = new Object[] { """" };"
False,test/org/easymock/tests/MatchableArgumentsTest.java,test/org/easymock/tests/MatchableArgumentsTest.java,25,"rguments2 = new Object[] { """", """" };"
False,test/org/easymock/tests/MatchableArgumentsTest.java,test/org/easymock/tests/MatchableArgumentsTest.java,28,Test
False,test/org/easymock/tests/MatchableArgumentsTest.java,test/org/easymock/tests/MatchableArgumentsTest.java,29,"ublic void testEquals() throws SecurityException, NoSuchMethodException {"
False,test/org/easymock/tests/MatchableArgumentsTest.java,test/org/easymock/tests/MatchableArgumentsTest.java,30,ethod toPreventNullPointerExceptionm = Object.class.getMethod(
False,test/org/easymock/tests/MatchableArgumentsTest.java,test/org/easymock/tests/MatchableArgumentsTest.java,31,"toString"", new Class[] {});"
False,test/org/easymock/tests/MatchableArgumentsTest.java,test/org/easymock/tests/MatchableArgumentsTest.java,33,bject mock = new Object();
False,test/org/easymock/tests/MatchableArgumentsTest.java,test/org/easymock/tests/MatchableArgumentsTest.java,35,xpectedInvocation matchableArguments = new ExpectedInvocation(
False,test/org/easymock/tests/MatchableArgumentsTest.java,test/org/easymock/tests/MatchableArgumentsTest.java,36,"ew Invocation(mock, toPreventNullPointerExceptionm, arguments),"
False,test/org/easymock/tests/MatchableArgumentsTest.java,test/org/easymock/tests/MatchableArgumentsTest.java,37,ull);
False,test/org/easymock/tests/MatchableArgumentsTest.java,test/org/easymock/tests/MatchableArgumentsTest.java,38,xpectedInvocation nonEqualMatchableArguments = new ExpectedInvocation(
False,test/org/easymock/tests/MatchableArgumentsTest.java,test/org/easymock/tests/MatchableArgumentsTest.java,39,"ew Invocation(mock, toPreventNullPointerExceptionm, arguments2),"
False,test/org/easymock/tests/MatchableArgumentsTest.java,test/org/easymock/tests/MatchableArgumentsTest.java,40,ull);
False,test/org/easymock/tests/MatchableArgumentsTest.java,test/org/easymock/tests/MatchableArgumentsTest.java,42,ssertFalse(matchableArguments.equals(null));
False,test/org/easymock/tests/MatchableArgumentsTest.java,test/org/easymock/tests/MatchableArgumentsTest.java,43,ssertFalse(matchableArguments.equals(nonEqualMatchableArguments));
False,test/org/easymock/tests/MockNameTest.java,test/org/easymock/tests/MockNameTest.java,2," Copyright (c) 2001-2007 OFFIS, Tammo Freese."
False,test/org/easymock/tests/MockNameTest.java,test/org/easymock/tests/MockNameTest.java,3, This program is made available under the terms of the MIT License.
False,test/org/easymock/tests/MockNameTest.java,test/org/easymock/tests/MockNameTest.java,5,ackage org.easymock.tests;
False,test/org/easymock/tests/MockNameTest.java,test/org/easymock/tests/MockNameTest.java,7,mport static org.junit.Assert.*;
False,test/org/easymock/tests/MockNameTest.java,test/org/easymock/tests/MockNameTest.java,9,mport org.easymock.*;
False,test/org/easymock/tests/MockNameTest.java,test/org/easymock/tests/MockNameTest.java,10,mport org.junit.*;
False,test/org/easymock/tests/MockNameTest.java,test/org/easymock/tests/MockNameTest.java,12,ublic class MockNameTest {
False,test/org/easymock/tests/MockNameTest.java,test/org/easymock/tests/MockNameTest.java,14,rivate MockControl<IMethods> control;
False,test/org/easymock/tests/MockNameTest.java,test/org/easymock/tests/MockNameTest.java,16,Test
False,test/org/easymock/tests/MockNameTest.java,test/org/easymock/tests/MockNameTest.java,17,ublic void defaultName() {
False,test/org/easymock/tests/MockNameTest.java,test/org/easymock/tests/MockNameTest.java,18,ontrol = MockControl.createControl(IMethods.class);
False,test/org/easymock/tests/MockNameTest.java,test/org/easymock/tests/MockNameTest.java,19,"tring expected = ""EasyMock for "" + IMethods.class.toString();"
False,test/org/easymock/tests/MockNameTest.java,test/org/easymock/tests/MockNameTest.java,20,tring actual = control.getMock().toString();
False,test/org/easymock/tests/MockNameTest.java,test/org/easymock/tests/MockNameTest.java,21,"ssertEquals(expected, actual);"
False,test/org/easymock/tests/NiceMockControlLongCompatibleReturnValueTest.java,test/org/easymock/tests/NiceMockControlLongCompatibleReturnValueTest.java,2," Copyright (c) 2001-2007 OFFIS, Tammo Freese."
False,test/org/easymock/tests/NiceMockControlLongCompatibleReturnValueTest.java,test/org/easymock/tests/NiceMockControlLongCompatibleReturnValueTest.java,3, This program is made available under the terms of the MIT License.
False,test/org/easymock/tests/NiceMockControlLongCompatibleReturnValueTest.java,test/org/easymock/tests/NiceMockControlLongCompatibleReturnValueTest.java,5,ackage org.easymock.tests;
False,test/org/easymock/tests/NiceMockControlLongCompatibleReturnValueTest.java,test/org/easymock/tests/NiceMockControlLongCompatibleReturnValueTest.java,7,mport static org.junit.Assert.*;
False,test/org/easymock/tests/NiceMockControlLongCompatibleReturnValueTest.java,test/org/easymock/tests/NiceMockControlLongCompatibleReturnValueTest.java,9,mport org.easymock.MockControl;
False,test/org/easymock/tests/NiceMockControlLongCompatibleReturnValueTest.java,test/org/easymock/tests/NiceMockControlLongCompatibleReturnValueTest.java,10,mport org.junit.Before;
False,test/org/easymock/tests/NiceMockControlLongCompatibleReturnValueTest.java,test/org/easymock/tests/NiceMockControlLongCompatibleReturnValueTest.java,11,mport org.junit.Test;
False,test/org/easymock/tests/NiceMockControlLongCompatibleReturnValueTest.java,test/org/easymock/tests/NiceMockControlLongCompatibleReturnValueTest.java,13,ublic class NiceMockControlLongCompatibleReturnValueTest {
False,test/org/easymock/tests/NiceMockControlLongCompatibleReturnValueTest.java,test/org/easymock/tests/NiceMockControlLongCompatibleReturnValueTest.java,15,ockControl<IMethods> control;
False,test/org/easymock/tests/NiceMockControlLongCompatibleReturnValueTest.java,test/org/easymock/tests/NiceMockControlLongCompatibleReturnValueTest.java,17,Methods mock;
False,test/org/easymock/tests/NiceMockControlLongCompatibleReturnValueTest.java,test/org/easymock/tests/NiceMockControlLongCompatibleReturnValueTest.java,19,Before
False,test/org/easymock/tests/NiceMockControlLongCompatibleReturnValueTest.java,test/org/easymock/tests/NiceMockControlLongCompatibleReturnValueTest.java,20,ublic void setup() {
False,test/org/easymock/tests/NiceMockControlLongCompatibleReturnValueTest.java,test/org/easymock/tests/NiceMockControlLongCompatibleReturnValueTest.java,21,ontrol = MockControl.createNiceControl(IMethods.class);
False,test/org/easymock/tests/NiceMockControlLongCompatibleReturnValueTest.java,test/org/easymock/tests/NiceMockControlLongCompatibleReturnValueTest.java,22,ock = control.getMock();
False,test/org/easymock/tests/NiceMockControlLongCompatibleReturnValueTest.java,test/org/easymock/tests/NiceMockControlLongCompatibleReturnValueTest.java,23,ontrol.replay();
False,test/org/easymock/tests/NiceMockControlLongCompatibleReturnValueTest.java,test/org/easymock/tests/NiceMockControlLongCompatibleReturnValueTest.java,26,Test
False,test/org/easymock/tests/NiceMockControlLongCompatibleReturnValueTest.java,test/org/easymock/tests/NiceMockControlLongCompatibleReturnValueTest.java,27,ublic void byteReturningValue() {
False,test/org/easymock/tests/NiceMockControlLongCompatibleReturnValueTest.java,test/org/easymock/tests/NiceMockControlLongCompatibleReturnValueTest.java,28,"ssertEquals((byte) 0, mock.byteReturningMethod(12));"
False,test/org/easymock/tests/NiceMockControlLongCompatibleReturnValueTest.java,test/org/easymock/tests/NiceMockControlLongCompatibleReturnValueTest.java,29,ontrol.verify();
False,test/org/easymock/tests/NiceMockControlLongCompatibleReturnValueTest.java,test/org/easymock/tests/NiceMockControlLongCompatibleReturnValueTest.java,32,Test
False,test/org/easymock/tests/NiceMockControlLongCompatibleReturnValueTest.java,test/org/easymock/tests/NiceMockControlLongCompatibleReturnValueTest.java,33,ublic void shortReturningValue() {
False,test/org/easymock/tests/NiceMockControlLongCompatibleReturnValueTest.java,test/org/easymock/tests/NiceMockControlLongCompatibleReturnValueTest.java,34,"ssertEquals((short) 0, mock.shortReturningMethod(12));"
False,test/org/easymock/tests/NiceMockControlLongCompatibleReturnValueTest.java,test/org/easymock/tests/NiceMockControlLongCompatibleReturnValueTest.java,35,ontrol.verify();
False,test/org/easymock/tests/NiceMockControlLongCompatibleReturnValueTest.java,test/org/easymock/tests/NiceMockControlLongCompatibleReturnValueTest.java,38,Test
False,test/org/easymock/tests/NiceMockControlLongCompatibleReturnValueTest.java,test/org/easymock/tests/NiceMockControlLongCompatibleReturnValueTest.java,39,ublic void charReturningValue() {
False,test/org/easymock/tests/NiceMockControlLongCompatibleReturnValueTest.java,test/org/easymock/tests/NiceMockControlLongCompatibleReturnValueTest.java,40,"ssertEquals((char) 0, mock.charReturningMethod(12));"
False,test/org/easymock/tests/NiceMockControlLongCompatibleReturnValueTest.java,test/org/easymock/tests/NiceMockControlLongCompatibleReturnValueTest.java,41,ontrol.verify();
False,test/org/easymock/tests/NiceMockControlLongCompatibleReturnValueTest.java,test/org/easymock/tests/NiceMockControlLongCompatibleReturnValueTest.java,44,Test
False,test/org/easymock/tests/NiceMockControlLongCompatibleReturnValueTest.java,test/org/easymock/tests/NiceMockControlLongCompatibleReturnValueTest.java,45,ublic void intReturningValue() {
False,test/org/easymock/tests/NiceMockControlLongCompatibleReturnValueTest.java,test/org/easymock/tests/NiceMockControlLongCompatibleReturnValueTest.java,46,"ssertEquals(0, mock.intReturningMethod(12));"
False,test/org/easymock/tests/NiceMockControlLongCompatibleReturnValueTest.java,test/org/easymock/tests/NiceMockControlLongCompatibleReturnValueTest.java,47,ontrol.verify();
False,test/org/easymock/tests/NiceMockControlLongCompatibleReturnValueTest.java,test/org/easymock/tests/NiceMockControlLongCompatibleReturnValueTest.java,50,Test
False,test/org/easymock/tests/NiceMockControlLongCompatibleReturnValueTest.java,test/org/easymock/tests/NiceMockControlLongCompatibleReturnValueTest.java,51,ublic void longReturningValue() {
False,test/org/easymock/tests/NiceMockControlLongCompatibleReturnValueTest.java,test/org/easymock/tests/NiceMockControlLongCompatibleReturnValueTest.java,52,"ssertEquals((long) 0, mock.longReturningMethod(12));"
False,test/org/easymock/tests/NiceMockControlLongCompatibleReturnValueTest.java,test/org/easymock/tests/NiceMockControlLongCompatibleReturnValueTest.java,53,ontrol.verify();
False,test/org/easymock/tests/ObjectMethodsTest.java,test/org/easymock/tests/ObjectMethodsTest.java,14,mport org.junit.Before;
False,test/org/easymock/tests/ObjectMethodsTest.java,test/org/easymock/tests/ObjectMethodsTest.java,15,mport org.junit.Test;
True,test/org/easymock/tests/ObjectMethodsTest.java,test/org/easymock/tests/ObjectMethodsTest.java,14,import org.junit.*;
True,test/org/easymock/tests/ObjectMethodsTest.java,test/org/easymock/tests/ObjectMethodsTest.java,80,@Ignore
True,test/org/easymock/tests/ObjectMethodsTest.java,test/org/easymock/tests/ObjectMethodsTest.java,81,@Test
True,test/org/easymock/tests/ObjectMethodsTest.java,test/org/easymock/tests/ObjectMethodsTest.java,82,public void whatHappensWhenClassToMockIsAnonymous() throws Exception {
True,test/org/easymock/tests/ObjectMethodsTest.java,test/org/easymock/tests/ObjectMethodsTest.java,83,fail();
