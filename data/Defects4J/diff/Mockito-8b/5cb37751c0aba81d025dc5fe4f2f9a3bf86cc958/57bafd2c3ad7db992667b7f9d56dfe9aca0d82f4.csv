is_addition,old_file_path,new_file_path,line_num,content
False,src/org/mockito/internal/invocation/InvocationMatcher.java,src/org/mockito/internal/invocation/InvocationMatcher.java,92,ublic boolean hasSameMethod(Invocation candidate) {
False,src/org/mockito/internal/invocation/InvocationMatcher.java,src/org/mockito/internal/invocation/InvocationMatcher.java,93,eturn invocation.getMethod().equals(candidate.getMethod());
True,src/org/mockito/internal/invocation/InvocationMatcher.java,src/org/mockito/internal/invocation/InvocationMatcher.java,92,public boolean hasSameMethod(Invocation candidate) {
True,src/org/mockito/internal/invocation/InvocationMatcher.java,src/org/mockito/internal/invocation/InvocationMatcher.java,93,//not using method.equals() for 1 good reason:
True,src/org/mockito/internal/invocation/InvocationMatcher.java,src/org/mockito/internal/invocation/InvocationMatcher.java,94,//sometimes java generates forwarding methods when generics are in play see JavaGenericsForwardingMethodsTest
True,src/org/mockito/internal/invocation/InvocationMatcher.java,src/org/mockito/internal/invocation/InvocationMatcher.java,95,Method m1 = invocation.getMethod();
True,src/org/mockito/internal/invocation/InvocationMatcher.java,src/org/mockito/internal/invocation/InvocationMatcher.java,96,Method m2 = candidate.getMethod();
True,src/org/mockito/internal/invocation/InvocationMatcher.java,src/org/mockito/internal/invocation/InvocationMatcher.java,98,if (m1.getName() != null && m1.getName().equals(m2.getName())) {
True,src/org/mockito/internal/invocation/InvocationMatcher.java,src/org/mockito/internal/invocation/InvocationMatcher.java,99,/* Avoid unnecessary cloning */
True,src/org/mockito/internal/invocation/InvocationMatcher.java,src/org/mockito/internal/invocation/InvocationMatcher.java,100,Class[] params1 = m1.getParameterTypes();
True,src/org/mockito/internal/invocation/InvocationMatcher.java,src/org/mockito/internal/invocation/InvocationMatcher.java,101,Class[] params2 = m2.getParameterTypes();
True,src/org/mockito/internal/invocation/InvocationMatcher.java,src/org/mockito/internal/invocation/InvocationMatcher.java,102,if (params1.length == params2.length) {
True,src/org/mockito/internal/invocation/InvocationMatcher.java,src/org/mockito/internal/invocation/InvocationMatcher.java,103,for (int i = 0; i < params1.length; i++) {
True,src/org/mockito/internal/invocation/InvocationMatcher.java,src/org/mockito/internal/invocation/InvocationMatcher.java,104,if (params1[i] != params2[i])
True,src/org/mockito/internal/invocation/InvocationMatcher.java,src/org/mockito/internal/invocation/InvocationMatcher.java,105,return false;
True,src/org/mockito/internal/invocation/InvocationMatcher.java,src/org/mockito/internal/invocation/InvocationMatcher.java,107,return true;
True,src/org/mockito/internal/invocation/InvocationMatcher.java,src/org/mockito/internal/invocation/InvocationMatcher.java,110,return false;
True,test/org/mockitousage/bugs/InheritedGenericsPolimorphicCallTest.java,test/org/mockitousage/bugs/InheritedGenericsPolimorphicCallTest.java,2,* Copyright (c) 2007 Mockito contributors
True,test/org/mockitousage/bugs/InheritedGenericsPolimorphicCallTest.java,test/org/mockitousage/bugs/InheritedGenericsPolimorphicCallTest.java,3,* This program is made available under the terms of the MIT License.
True,test/org/mockitousage/bugs/InheritedGenericsPolimorphicCallTest.java,test/org/mockitousage/bugs/InheritedGenericsPolimorphicCallTest.java,5,package org.mockitousage.bugs;
True,test/org/mockitousage/bugs/InheritedGenericsPolimorphicCallTest.java,test/org/mockitousage/bugs/InheritedGenericsPolimorphicCallTest.java,7,import static org.mockito.Mockito.*;
True,test/org/mockitousage/bugs/InheritedGenericsPolimorphicCallTest.java,test/org/mockitousage/bugs/InheritedGenericsPolimorphicCallTest.java,9,import java.lang.reflect.InvocationHandler;
True,test/org/mockitousage/bugs/InheritedGenericsPolimorphicCallTest.java,test/org/mockitousage/bugs/InheritedGenericsPolimorphicCallTest.java,10,import java.lang.reflect.Method;
True,test/org/mockitousage/bugs/InheritedGenericsPolimorphicCallTest.java,test/org/mockitousage/bugs/InheritedGenericsPolimorphicCallTest.java,11,import java.lang.reflect.Proxy;
True,test/org/mockitousage/bugs/InheritedGenericsPolimorphicCallTest.java,test/org/mockitousage/bugs/InheritedGenericsPolimorphicCallTest.java,12,import java.util.Iterator;
True,test/org/mockitousage/bugs/InheritedGenericsPolimorphicCallTest.java,test/org/mockitousage/bugs/InheritedGenericsPolimorphicCallTest.java,13,import java.util.LinkedList;
True,test/org/mockitousage/bugs/InheritedGenericsPolimorphicCallTest.java,test/org/mockitousage/bugs/InheritedGenericsPolimorphicCallTest.java,14,import java.util.List;
True,test/org/mockitousage/bugs/InheritedGenericsPolimorphicCallTest.java,test/org/mockitousage/bugs/InheritedGenericsPolimorphicCallTest.java,16,import org.junit.Assert;
True,test/org/mockitousage/bugs/InheritedGenericsPolimorphicCallTest.java,test/org/mockitousage/bugs/InheritedGenericsPolimorphicCallTest.java,17,import org.junit.Test;
True,test/org/mockitousage/bugs/InheritedGenericsPolimorphicCallTest.java,test/org/mockitousage/bugs/InheritedGenericsPolimorphicCallTest.java,18,import org.mockito.Mockito;
True,test/org/mockitousage/bugs/InheritedGenericsPolimorphicCallTest.java,test/org/mockitousage/bugs/InheritedGenericsPolimorphicCallTest.java,19,import org.mockitoutil.TestBase;
True,test/org/mockitousage/bugs/InheritedGenericsPolimorphicCallTest.java,test/org/mockitousage/bugs/InheritedGenericsPolimorphicCallTest.java,21,"@SuppressWarnings(""unchecked"")"
True,test/org/mockitousage/bugs/InheritedGenericsPolimorphicCallTest.java,test/org/mockitousage/bugs/InheritedGenericsPolimorphicCallTest.java,22,//see issue 200
True,test/org/mockitousage/bugs/InheritedGenericsPolimorphicCallTest.java,test/org/mockitousage/bugs/InheritedGenericsPolimorphicCallTest.java,23,public class InheritedGenericsPolimorphicCallTest extends TestBase {
True,test/org/mockitousage/bugs/InheritedGenericsPolimorphicCallTest.java,test/org/mockitousage/bugs/InheritedGenericsPolimorphicCallTest.java,25,protected interface MyIterable<T> extends Iterable<T> {
True,test/org/mockitousage/bugs/InheritedGenericsPolimorphicCallTest.java,test/org/mockitousage/bugs/InheritedGenericsPolimorphicCallTest.java,26,public MyIterator<T> iterator();
True,test/org/mockitousage/bugs/InheritedGenericsPolimorphicCallTest.java,test/org/mockitousage/bugs/InheritedGenericsPolimorphicCallTest.java,29,protected interface MyIterator<T> extends Iterator<T> {
True,test/org/mockitousage/bugs/InheritedGenericsPolimorphicCallTest.java,test/org/mockitousage/bugs/InheritedGenericsPolimorphicCallTest.java,30,// adds nothing here
True,test/org/mockitousage/bugs/InheritedGenericsPolimorphicCallTest.java,test/org/mockitousage/bugs/InheritedGenericsPolimorphicCallTest.java,33,MyIterator<String> myIterator = Mockito.mock(MyIterator.class);
True,test/org/mockitousage/bugs/InheritedGenericsPolimorphicCallTest.java,test/org/mockitousage/bugs/InheritedGenericsPolimorphicCallTest.java,34,MyIterable<String> iterable = Mockito.mock(MyIterable.class);
True,test/org/mockitousage/bugs/InheritedGenericsPolimorphicCallTest.java,test/org/mockitousage/bugs/InheritedGenericsPolimorphicCallTest.java,36,@Test
True,test/org/mockitousage/bugs/InheritedGenericsPolimorphicCallTest.java,test/org/mockitousage/bugs/InheritedGenericsPolimorphicCallTest.java,37,public void shouldStubbingWork() {
True,test/org/mockitousage/bugs/InheritedGenericsPolimorphicCallTest.java,test/org/mockitousage/bugs/InheritedGenericsPolimorphicCallTest.java,38,Mockito.when(iterable.iterator()).thenReturn(myIterator);
True,test/org/mockitousage/bugs/InheritedGenericsPolimorphicCallTest.java,test/org/mockitousage/bugs/InheritedGenericsPolimorphicCallTest.java,39,Assert.assertNotNull(((Iterable) iterable).iterator());
True,test/org/mockitousage/bugs/InheritedGenericsPolimorphicCallTest.java,test/org/mockitousage/bugs/InheritedGenericsPolimorphicCallTest.java,40,Assert.assertNotNull(iterable.iterator());
True,test/org/mockitousage/bugs/InheritedGenericsPolimorphicCallTest.java,test/org/mockitousage/bugs/InheritedGenericsPolimorphicCallTest.java,43,@Test
True,test/org/mockitousage/bugs/InheritedGenericsPolimorphicCallTest.java,test/org/mockitousage/bugs/InheritedGenericsPolimorphicCallTest.java,44,public void shouldVerificationWorks() {
True,test/org/mockitousage/bugs/InheritedGenericsPolimorphicCallTest.java,test/org/mockitousage/bugs/InheritedGenericsPolimorphicCallTest.java,45,iterable.iterator();
True,test/org/mockitousage/bugs/InheritedGenericsPolimorphicCallTest.java,test/org/mockitousage/bugs/InheritedGenericsPolimorphicCallTest.java,47,verify(iterable).iterator();
True,test/org/mockitousage/bugs/InheritedGenericsPolimorphicCallTest.java,test/org/mockitousage/bugs/InheritedGenericsPolimorphicCallTest.java,48,verify((Iterable) iterable).iterator();
True,test/org/mockitousage/bugs/InheritedGenericsPolimorphicCallTest.java,test/org/mockitousage/bugs/InheritedGenericsPolimorphicCallTest.java,51,@Test
True,test/org/mockitousage/bugs/InheritedGenericsPolimorphicCallTest.java,test/org/mockitousage/bugs/InheritedGenericsPolimorphicCallTest.java,52,public void shouldWorkExactlyAsJavaProxyWould() {
True,test/org/mockitousage/bugs/InheritedGenericsPolimorphicCallTest.java,test/org/mockitousage/bugs/InheritedGenericsPolimorphicCallTest.java,53,//given
True,test/org/mockitousage/bugs/InheritedGenericsPolimorphicCallTest.java,test/org/mockitousage/bugs/InheritedGenericsPolimorphicCallTest.java,54,final List<Method> methods = new LinkedList<Method>();
True,test/org/mockitousage/bugs/InheritedGenericsPolimorphicCallTest.java,test/org/mockitousage/bugs/InheritedGenericsPolimorphicCallTest.java,55,InvocationHandler handler = new InvocationHandler() {
True,test/org/mockitousage/bugs/InheritedGenericsPolimorphicCallTest.java,test/org/mockitousage/bugs/InheritedGenericsPolimorphicCallTest.java,56,"public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {"
True,test/org/mockitousage/bugs/InheritedGenericsPolimorphicCallTest.java,test/org/mockitousage/bugs/InheritedGenericsPolimorphicCallTest.java,57,methods.add(method);
True,test/org/mockitousage/bugs/InheritedGenericsPolimorphicCallTest.java,test/org/mockitousage/bugs/InheritedGenericsPolimorphicCallTest.java,58,return null;
True,test/org/mockitousage/bugs/InheritedGenericsPolimorphicCallTest.java,test/org/mockitousage/bugs/InheritedGenericsPolimorphicCallTest.java,61,iterable = (MyIterable) Proxy.newProxyInstance(
True,test/org/mockitousage/bugs/InheritedGenericsPolimorphicCallTest.java,test/org/mockitousage/bugs/InheritedGenericsPolimorphicCallTest.java,62,"this.getClass().getClassLoader(),"
True,test/org/mockitousage/bugs/InheritedGenericsPolimorphicCallTest.java,test/org/mockitousage/bugs/InheritedGenericsPolimorphicCallTest.java,63,"new Class[] { MyIterable.class },"
True,test/org/mockitousage/bugs/InheritedGenericsPolimorphicCallTest.java,test/org/mockitousage/bugs/InheritedGenericsPolimorphicCallTest.java,64,handler);
True,test/org/mockitousage/bugs/InheritedGenericsPolimorphicCallTest.java,test/org/mockitousage/bugs/InheritedGenericsPolimorphicCallTest.java,66,//when
True,test/org/mockitousage/bugs/InheritedGenericsPolimorphicCallTest.java,test/org/mockitousage/bugs/InheritedGenericsPolimorphicCallTest.java,67,iterable.iterator();
True,test/org/mockitousage/bugs/InheritedGenericsPolimorphicCallTest.java,test/org/mockitousage/bugs/InheritedGenericsPolimorphicCallTest.java,68,((Iterable) iterable).iterator();
True,test/org/mockitousage/bugs/InheritedGenericsPolimorphicCallTest.java,test/org/mockitousage/bugs/InheritedGenericsPolimorphicCallTest.java,70,//then
True,test/org/mockitousage/bugs/InheritedGenericsPolimorphicCallTest.java,test/org/mockitousage/bugs/InheritedGenericsPolimorphicCallTest.java,71,"assertEquals(2, methods.size());"
True,test/org/mockitousage/bugs/InheritedGenericsPolimorphicCallTest.java,test/org/mockitousage/bugs/InheritedGenericsPolimorphicCallTest.java,72,"assertEquals(methods.get(0), methods.get(1));"
