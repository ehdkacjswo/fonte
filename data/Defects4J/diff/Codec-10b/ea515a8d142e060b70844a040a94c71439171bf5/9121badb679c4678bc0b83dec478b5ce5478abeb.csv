is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,4," The Apache Software License, Version 1.1"
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,6, Copyright (c) 2003 The Apache Software Foundation.  All rights
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,7, reserved.
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,9," Redistribution and use in source and binary forms, with or without"
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,10," modification, are permitted provided that the following conditions"
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,11, are met:
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,13, 1. Redistributions of source code must retain the above copyright
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,14,"    notice, this list of conditions and the following disclaimer."
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,16, 2. Redistributions in binary form must reproduce the above copyright
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,17,"    notice, this list of conditions and the following disclaimer in"
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,18,    the documentation and/or other materials provided with the
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,19,    distribution.
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,21," 3. The end-user documentation included with the redistribution, if"
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,22,"    any, must include the following acknowlegement:"
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,23,"       ""This product includes software developed by the"
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,24,"        Apache Software Foundation (http://www.apache.org/)."""
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,25,"    Alternately, this acknowlegement may appear in the software itself,"
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,26,    if and wherever such third-party acknowlegements normally appear.
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,28," 4. The names ""The Jakarta Project"", ""HttpClient"", and ""Apache Software"
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,29,"    Foundation"" must not be used to endorse or promote products derived"
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,30,    from this software without prior written permission. For written
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,31,"    permission, please contact apache@apache.org."
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,33," 5. Products derived from this software may not be called ""Apache"""
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,34,"    nor may ""Apache"" appear in their names without prior written"
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,35,    permission of the Apache Group.
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,37, THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,38," WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,39, OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,40, DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,41," ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,42," SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,43," LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,44," USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,45," ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,46, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,47," OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,48, SUCH DAMAGE.
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,51, This software consists of voluntary contributions made by many
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,52, individuals on behalf of the Apache Software Foundation.  For more
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,53," information on the Apache Software Foundation, please see"
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,54, <http://www.apache.org/>.
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,58,ackage org.apache.commons.codec.base64;
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,60,mport java.io.ByteArrayOutputStream;
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,61,mport java.io.IOException;
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,62,mport java.io.OutputStreamWriter;
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,63,mport java.io.UnsupportedEncodingException;
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,66, <p>Base64 encoder and decoder.</p>
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,67, <p>
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,68, This class provides encoding/decoding methods for
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,69," the Base64 encoding as defined by RFC 2045,"
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,70, N. Freed and N. Borenstein.
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,71, * RFC 2045: Multipurpose Internet Mail Extensions (MIME)
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,72, Part One: Format of Internet Message Bodies. Reference
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,73, 1996. Available at: http://www.ietf.org/rfc/rfc2045.txt
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,74, </p>
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,75, @author Jeffrey Rodriguez
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,76, @version $Revision: 1.3 $ $Date: 2003/06/18 18:43:56 $
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,78, @deprecated This class has been replaced by
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,79,             {@link org.apache.commons.codec.binary.Base64}
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,81,ublic final class Base64 {
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,84, The default character encoding
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,86,"rotected static final String DEFAULT_CHAR_ENCODING = ""ISO-8859-1"";"
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,89, The bsae length
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,91,tatic final int BASELENGTH = 255;
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,94, Lookup length
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,96,tatic final int LOOKUPLENGTH = 64;
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,99, Used to calculate the number of bits in a byte.
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,101,tatic final int EIGHTBIT = 8;
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,104, Used when encoding something which has fewer than 24 bits
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,106,tatic final int SIXTEENBIT = 16;
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,109, Constant used to determine how many bits data contains
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,111,tatic final int TWENTYFOURBITGROUP = 24;
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,114, Used to get the number of Quadruples
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,116,tatic final int FOURBYTE = 4;
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,119, Used to test the sign of a byte
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,121,tatic final int SIGN = -128;
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,124, Byte used to pad output
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,126,tatic final byte PAD = (byte) '=';
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,129, Create arrays to hold the base64 characters and a
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,130, lookup for base64 chars
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,132,rivate static byte[] base64Alphabet = new byte[BASELENGTH];
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,135, An empty array of type byte
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,137,rivate static final byte[] EMPTY_BYTE_ARRAY = new byte[0];
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,140, Lookup table
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,142,rivate static byte[] lookUpBase64Alphabet = new byte[LOOKUPLENGTH];
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,144,tatic {
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,146,or (int i = 0; i < BASELENGTH; i++) {
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,147,ase64Alphabet[i] = -1;
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,149,or (int i = 'Z'; i >= 'A'; i--) {
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,150,ase64Alphabet[i] = (byte) (i - 'A');
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,152,or (int i = 'z'; i >= 'a'; i--) {
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,153,ase64Alphabet[i] = (byte) (i - 'a' + 26);
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,156,or (int i = '9'; i >= '0'; i--) {
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,157,ase64Alphabet[i] = (byte) (i - '0' + 52);
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,160,ase64Alphabet['+'] = 62;
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,161,ase64Alphabet['/'] = 63;
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,163,or (int i = 0; i <= 25; i++) {
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,164,ookUpBase64Alphabet[i] = (byte) ('A' + i);
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,167,"or (int i = 26,  j = 0; i <= 51; i++, j++) {"
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,168,ookUpBase64Alphabet[i] = (byte) ('a' + j);
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,171,"or (int i = 52,  j = 0; i <= 61; i++, j++) {"
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,172,ookUpBase64Alphabet[i] = (byte) ('0' + j);
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,175,ookUpBase64Alphabet[62] = (byte) '+';
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,176,ookUpBase64Alphabet[63] = (byte) '/';
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,181, Tests to see whether the bytes of this string are
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,182, Base64
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,184, @param isValidString String to test
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,185, @return trus if String is base64
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,187,ublic static boolean isBase64(String isValidString) {
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,188,eturn (isBase64(isValidString.getBytes()));
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,192, Tests a byte to see whether it falls within the Base64
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,193, alphabet (or if it is a padding character).
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,195, @param octect byte to test
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,196, @return true if byte is in alphabet or padding
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,198,ublic static boolean isBase64(byte octect) {
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,199,/ Should we ignore white space?
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,200,eturn (octect == PAD || base64Alphabet[octect] != -1);
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,204, Tests byte array to see if all characters are within the
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,205, Base64 alphabet
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,207, @param arrayOctect A byte[] to test
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,208, @return true if all data falls within the Base64 alphabet OR if the
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,209,         array is empty.
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,211,ublic static boolean isBase64(byte[] arrayOctect) {
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,212,nt length = arrayOctect.length;
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,213,f (length == 0) {
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,214,eturn true;
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,216,or (int i = 0; i < length; i++) {
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,217,f (!Base64.isBase64(arrayOctect[i])) {
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,218,eturn false;
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,221,eturn true;
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,225, Encodes hex octects into Base64
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,227, @param binaryData Array containing binaryData
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,228, @return Base64-encoded array
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,230,ublic static byte[] encode(byte[] binaryData) {
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,231,f (binaryData == null) {
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,232,inaryData = EMPTY_BYTE_ARRAY;
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,235,nt lengthDataBits = binaryData.length * EIGHTBIT;
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,236,nt fewerThan24bits = lengthDataBits % TWENTYFOURBITGROUP;
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,237,nt numberTriplets = lengthDataBits / TWENTYFOURBITGROUP;
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,238,yte encodedData[] = null;
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,241,f (fewerThan24bits != 0) {
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,242,/data not divisible by 24 bit
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,243,ncodedData = new byte[(numberTriplets + 1) * 4];
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,244, else {
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,245,/ 16 or 8 bit
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,246,ncodedData = new byte[numberTriplets * 4];
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,249,"yte k = 0, l = 0, b1 = 0, b2 = 0, b3 = 0;"
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,251,nt encodedIndex = 0;
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,252,nt dataIndex = 0;
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,253,nt i = 0;
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,254,or (i = 0; i < numberTriplets; i++) {
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,256,ataIndex = i * 3;
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,257,1 = binaryData[dataIndex];
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,258,2 = binaryData[dataIndex + 1];
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,259,3 = binaryData[dataIndex + 2];
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,261, = (byte) (b2 & 0x0f);
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,262, = (byte) (b1 & 0x03);
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,264,ncodedIndex = i * 4;
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,265,yte val1 = ((b1 & SIGN) == 0)
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,266, (byte) (b1 >> 2)
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,267, (byte) ((b1) >> 2 ^ 0xc0);
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,269,yte val2 = ((b2 & SIGN) == 0)
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,270, (byte) (b2 >> 4)
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,271, (byte) ((b2) >> 4 ^ 0xf0);
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,273,yte val3 = ((b3 & SIGN) == 0)
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,274, (byte) (b3 >> 6)
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,275, (byte) ((b3) >> 6 ^ 0xfc);
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,277,ncodedData[encodedIndex] = lookUpBase64Alphabet[val1];
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,278,ncodedData[encodedIndex + 1] = lookUpBase64Alphabet[val2
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,279, (k << 4)];
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,280,ncodedData[encodedIndex + 2] = lookUpBase64Alphabet[(l << 2)
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,281, val3];
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,282,ncodedData[encodedIndex + 3] = lookUpBase64Alphabet[b3 & 0x3f];
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,285,/ form integral number of 6-bit groups
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,286,ataIndex = i * 3;
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,287,ncodedIndex = i * 4;
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,288,f (fewerThan24bits == EIGHTBIT) {
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,289,1 = binaryData[dataIndex];
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,290, = (byte) (b1 & 0x03);
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,291,yte val1 = ((b1 & SIGN) == 0)
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,292, (byte) (b1 >> 2)
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,293, (byte) ((b1) >> 2 ^ 0xc0);
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,295,ncodedData[encodedIndex] = lookUpBase64Alphabet[val1];
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,296,ncodedData[encodedIndex + 1] = lookUpBase64Alphabet[k << 4];
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,297,ncodedData[encodedIndex + 2] = PAD;
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,298,ncodedData[encodedIndex + 3] = PAD;
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,299, else if (fewerThan24bits == SIXTEENBIT) {
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,300,1 = binaryData[dataIndex];
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,301,2 = binaryData[dataIndex + 1];
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,302, = (byte) (b2 & 0x0f);
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,303, = (byte) (b1 & 0x03);
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,305,yte val1 = ((b1 & SIGN) == 0)
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,306, (byte) (b1 >> 2)
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,307, (byte) ((b1) >> 2 ^ 0xc0);
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,309,yte val2 = ((b2 & SIGN) == 0)
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,310, (byte) (b2 >> 4)
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,311, (byte) ((b2) >> 4 ^ 0xf0);
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,313,ncodedData[encodedIndex] = lookUpBase64Alphabet[val1];
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,314,ncodedData[encodedIndex + 1] = lookUpBase64Alphabet[val2
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,315, (k << 4)];
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,316,ncodedData[encodedIndex + 2] = lookUpBase64Alphabet[l << 2];
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,317,ncodedData[encodedIndex + 3] = PAD;
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,319,eturn encodedData;
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,324, Returns the base64 encoding of String.  First the String is
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,325," converted to byte[], using the character encoding of"
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,326, <code>ISO-8859-1</code>.
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,328, @param data String of data to convert
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,329, @return Base64-encoded String
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,331,ublic static String encode(String data) {
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,332,ry {
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,333,"eturn encode(data, DEFAULT_CHAR_ENCODING);"
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,334, catch (UnsupportedEncodingException uee) {
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,335,hrow new IllegalStateException(uee.toString());
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,341, Returns the base64 encoding of String (by first converting to
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,342," byte[], using the specified <code>charEncoding</code>).  The"
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,343, return value is also a String.  The Default
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,344, <code>codeEncoding</chode> is <code>ISO-8859-1</code>.
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,346, @param data String of data to convert
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,347, @param charEncoding the character encoding to use when converting
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,348,                     a String to a byte[]
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,349, @return Base64-encoded String
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,350, @throws UnsupportedEncodingException
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,352,"ublic static String encode(String data, String charEncoding)"
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,353,hrows UnsupportedEncodingException {
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,355,/ Check arguments
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,356,f (data == null) {
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,357,"ata = """";"
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,359,f (charEncoding == null) {
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,360,harEncoding = DEFAULT_CHAR_ENCODING;
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,363,/ Convert to byte[]
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,364,yteArrayOutputStream bos = new ByteArrayOutputStream();
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,365,"utputStreamWriter osw = new OutputStreamWriter(bos, charEncoding);"
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,366,ry {
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,367,sw.write(data);
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,368, catch (IOException ioe) {
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,369,hrow new RuntimeException(ioe.toString());
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,372,/ Encode
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,373,yte[] encodedData = encode(bos.toByteArray());
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,375,/ Convert to String
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,376,f (encodedData == null) {
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,377,"eturn """";"
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,379,os = new ByteArrayOutputStream(encodedData.length);
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,380,ry {
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,381,os.write(encodedData);
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,382, catch (IOException ioe) {
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,383,hrow new RuntimeException(ioe.toString());
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,386,eturn bos.toString(charEncoding);
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,390, Decodes Base64 data into octects
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,392, @param base64Data Byte array containing Base64 data
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,393, @return Array containing decoded data.
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,395,ublic static byte[] decode(byte[] base64Data) {
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,396,/ Should we throw away anything not in base64Data ?
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,398,"/ handle the edge case, so we don't have to worry about it later"
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,399,f (base64Data.length == 0) {
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,400,eturn EMPTY_BYTE_ARRAY;
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,403,nt numberQuadruple = base64Data.length / FOURBYTE;
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,404,yte decodedData[] = null;
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,405,"yte b1 = 0, b2 = 0, b3 = 0, b4 = 0, marker0 = 0, marker1 = 0;"
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,407,nt encodedIndex = 0;
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,408,nt dataIndex = 0;
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,410,/ this block sizes the output array properly - rlw
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,411,nt lastData = base64Data.length;
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,412,/ ignore the '=' padding
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,413,hile (base64Data[lastData - 1] == PAD) {
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,414,f (--lastData == 0) {
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,415,eturn EMPTY_BYTE_ARRAY;
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,418,ecodedData = new byte[lastData - numberQuadruple];
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,421,or (int i = 0; i < numberQuadruple; i++) {
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,422,ataIndex = i * 4;
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,423,arker0 = base64Data[dataIndex + 2];
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,424,arker1 = base64Data[dataIndex + 3];
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,426,1 = base64Alphabet[base64Data[dataIndex]];
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,427,2 = base64Alphabet[base64Data[dataIndex + 1]];
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,429,f (marker0 != PAD && marker1 != PAD) {
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,430,/No PAD e.g 3cQl
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,431,3 = base64Alphabet[marker0];
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,432,4 = base64Alphabet[marker1];
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,434,ecodedData[encodedIndex] = (byte) (b1 << 2 | b2 >> 4);
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,435,ecodedData[encodedIndex + 1] = (byte) (((b2 & 0xf) << 4)
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,436, ((b3 >> 2) & 0xf));
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,437,ecodedData[encodedIndex + 2] = (byte) (b3 << 6 | b4);
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,438, else if (marker0 == PAD) {
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,439,/Two PAD e.g. 3c[Pad][Pad]
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,440,ecodedData[encodedIndex] = (byte) (b1 << 2 | b2 >> 4);
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,441, else if (marker1 == PAD) {
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,442,/One PAD e.g. 3cQ[Pad]
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,443,3 = base64Alphabet[marker0];
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,445,ecodedData[encodedIndex] = (byte) (b1 << 2 | b2 >> 4);
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,446,ecodedData[encodedIndex + 1] = (byte) (((b2 & 0xf) << 4)
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,447, ((b3 >> 2) & 0xf));
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,449,ncodedIndex += 3;
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,451,eturn decodedData;
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,4,"* The Apache Software License, Version 1.1"
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,6,* Copyright (c) 2003 The Apache Software Foundation.  All rights
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,7,* reserved.
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,9,"* Redistribution and use in source and binary forms, with or without"
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,10,"* modification, are permitted provided that the following conditions"
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,11,* are met:
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,13,* 1. Redistributions of source code must retain the above copyright
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,14,"*    notice, this list of conditions and the following disclaimer."
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,16,* 2. Redistributions in binary form must reproduce the above copyright
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,17,"*    notice, this list of conditions and the following disclaimer in"
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,18,*    the documentation and/or other materials provided with the
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,19,*    distribution.
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,21,"* 3. The end-user documentation included with the redistribution, if"
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,22,"*    any, must include the following acknowlegement:"
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,23,"*       ""This product includes software developed by the"
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,24,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,25,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,26,*    if and wherever such third-party acknowlegements normally appear.
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,28,"* 4. The names ""The Jakarta Project"", ""HttpClient"", and ""Apache Software"
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,29,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,30,*    from this software without prior written permission. For written
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,31,"*    permission, please contact apache@apache.org."
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,33,"* 5. Products derived from this software may not be called ""Apache"""
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,34,"*    nor may ""Apache"" appear in their names without prior written"
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,35,*    permission of the Apache Group.
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,37,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,38,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,39,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,40,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,41,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,42,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,43,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,44,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,45,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,46,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,47,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,48,* SUCH DAMAGE.
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,51,* This software consists of voluntary contributions made by many
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,52,* individuals on behalf of the Apache Software Foundation.  For more
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,53,"* information on the Apache Software Foundation, please see"
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,54,* <http://www.apache.org/>.
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,58,package org.apache.commons.codec.base64;
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,60,import java.io.ByteArrayOutputStream;
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,61,import java.io.IOException;
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,62,import java.io.OutputStreamWriter;
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,63,import java.io.UnsupportedEncodingException;
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,66,* <p>Base64 encoder and decoder.</p>
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,67,* <p>
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,68,* This class provides encoding/decoding methods for
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,69,"* the Base64 encoding as defined by RFC 2045,"
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,70,* N. Freed and N. Borenstein.
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,71,* RFC 2045: Multipurpose Internet Mail Extensions (MIME)
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,72,* Part One: Format of Internet Message Bodies. Reference
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,73,* 1996. Available at: http://www.ietf.org/rfc/rfc2045.txt
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,74,* </p>
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,75,* @author Jeffrey Rodriguez
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,76,* @version $Revision: 1.4 $ $Date: 2003/07/20 19:09:02 $
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,78,* @deprecated This class has been replaced by
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,79,*             {@link org.apache.commons.codec.binary.Base64}
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,81,public final class Base64 {
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,84,* The default character encoding
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,86,"protected static final String DEFAULT_CHAR_ENCODING = ""ISO-8859-1"";"
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,89,* The bsae length
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,91,static final int BASELENGTH = 255;
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,94,* Lookup length
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,96,static final int LOOKUPLENGTH = 64;
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,99,* Used to calculate the number of bits in a byte.
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,101,static final int EIGHTBIT = 8;
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,104,* Used when encoding something which has fewer than 24 bits
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,106,static final int SIXTEENBIT = 16;
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,109,* Constant used to determine how many bits data contains
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,111,static final int TWENTYFOURBITGROUP = 24;
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,114,* Used to get the number of Quadruples
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,116,static final int FOURBYTE = 4;
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,119,* Used to test the sign of a byte
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,121,static final int SIGN = -128;
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,124,* Byte used to pad output
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,126,static final byte PAD = (byte) '=';
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,129,* Create arrays to hold the base64 characters and a
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,130,* lookup for base64 chars
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,132,private static byte[] base64Alphabet = new byte[BASELENGTH];
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,135,* An empty array of type byte
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,137,private static final byte[] EMPTY_BYTE_ARRAY = new byte[0];
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,140,* Lookup table
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,142,private static byte[] lookUpBase64Alphabet = new byte[LOOKUPLENGTH];
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,144,static {
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,146,for (int i = 0; i < BASELENGTH; i++) {
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,147,base64Alphabet[i] = -1;
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,149,for (int i = 'Z'; i >= 'A'; i--) {
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,150,base64Alphabet[i] = (byte) (i - 'A');
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,152,for (int i = 'z'; i >= 'a'; i--) {
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,153,base64Alphabet[i] = (byte) (i - 'a' + 26);
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,156,for (int i = '9'; i >= '0'; i--) {
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,157,base64Alphabet[i] = (byte) (i - '0' + 52);
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,160,base64Alphabet['+'] = 62;
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,161,base64Alphabet['/'] = 63;
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,163,for (int i = 0; i <= 25; i++) {
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,164,lookUpBase64Alphabet[i] = (byte) ('A' + i);
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,167,"for (int i = 26,  j = 0; i <= 51; i++, j++) {"
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,168,lookUpBase64Alphabet[i] = (byte) ('a' + j);
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,171,"for (int i = 52,  j = 0; i <= 61; i++, j++) {"
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,172,lookUpBase64Alphabet[i] = (byte) ('0' + j);
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,175,lookUpBase64Alphabet[62] = (byte) '+';
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,176,lookUpBase64Alphabet[63] = (byte) '/';
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,181,* Tests to see whether the bytes of this string are
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,182,* Base64
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,184,* @param isValidString String to test
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,185,* @return trus if String is base64
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,187,public static boolean isBase64(String isValidString) {
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,188,return (isBase64(isValidString.getBytes()));
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,192,* Tests a byte to see whether it falls within the Base64
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,193,* alphabet (or if it is a padding character).
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,195,* @param octect byte to test
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,196,* @return true if byte is in alphabet or padding
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,198,public static boolean isBase64(byte octect) {
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,199,// Should we ignore white space?
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,200,return (octect == PAD || base64Alphabet[octect] != -1);
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,204,* Tests byte array to see if all characters are within the
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,205,* Base64 alphabet
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,207,* @param arrayOctect A byte[] to test
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,208,* @return true if all data falls within the Base64 alphabet OR if the
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,209,*         array is empty.
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,211,public static boolean isBase64(byte[] arrayOctect) {
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,212,int length = arrayOctect.length;
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,213,if (length == 0) {
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,214,return true;
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,216,for (int i = 0; i < length; i++) {
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,217,if (!Base64.isBase64(arrayOctect[i])) {
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,218,return false;
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,221,return true;
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,225,* Encodes hex octects into Base64
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,227,* @param binaryData Array containing binaryData
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,228,* @return Base64-encoded array
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,230,public static byte[] encode(byte[] binaryData) {
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,231,if (binaryData == null) {
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,232,binaryData = EMPTY_BYTE_ARRAY;
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,235,int lengthDataBits = binaryData.length * EIGHTBIT;
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,236,int fewerThan24bits = lengthDataBits % TWENTYFOURBITGROUP;
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,237,int numberTriplets = lengthDataBits / TWENTYFOURBITGROUP;
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,238,byte encodedData[] = null;
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,241,if (fewerThan24bits != 0) {
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,242,//data not divisible by 24 bit
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,243,encodedData = new byte[(numberTriplets + 1) * 4];
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,244,} else {
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,245,// 16 or 8 bit
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,246,encodedData = new byte[numberTriplets * 4];
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,249,"byte k = 0, l = 0, b1 = 0, b2 = 0, b3 = 0;"
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,251,int encodedIndex = 0;
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,252,int dataIndex = 0;
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,253,int i = 0;
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,254,for (i = 0; i < numberTriplets; i++) {
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,256,dataIndex = i * 3;
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,257,b1 = binaryData[dataIndex];
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,258,b2 = binaryData[dataIndex + 1];
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,259,b3 = binaryData[dataIndex + 2];
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,261,l = (byte) (b2 & 0x0f);
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,262,k = (byte) (b1 & 0x03);
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,264,encodedIndex = i * 4;
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,265,byte val1 = ((b1 & SIGN) == 0)
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,266,? (byte) (b1 >> 2)
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,267,: (byte) ((b1) >> 2 ^ 0xc0);
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,269,byte val2 = ((b2 & SIGN) == 0)
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,270,? (byte) (b2 >> 4)
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,271,: (byte) ((b2) >> 4 ^ 0xf0);
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,273,byte val3 = ((b3 & SIGN) == 0)
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,274,? (byte) (b3 >> 6)
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,275,: (byte) ((b3) >> 6 ^ 0xfc);
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,277,encodedData[encodedIndex] = lookUpBase64Alphabet[val1];
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,278,encodedData[encodedIndex + 1] = lookUpBase64Alphabet[val2
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,279,| (k << 4)];
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,280,encodedData[encodedIndex + 2] = lookUpBase64Alphabet[(l << 2)
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,281,| val3];
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,282,encodedData[encodedIndex + 3] = lookUpBase64Alphabet[b3 & 0x3f];
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,285,// form integral number of 6-bit groups
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,286,dataIndex = i * 3;
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,287,encodedIndex = i * 4;
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,288,if (fewerThan24bits == EIGHTBIT) {
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,289,b1 = binaryData[dataIndex];
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,290,k = (byte) (b1 & 0x03);
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,291,byte val1 = ((b1 & SIGN) == 0)
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,292,? (byte) (b1 >> 2)
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,293,: (byte) ((b1) >> 2 ^ 0xc0);
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,295,encodedData[encodedIndex] = lookUpBase64Alphabet[val1];
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,296,encodedData[encodedIndex + 1] = lookUpBase64Alphabet[k << 4];
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,297,encodedData[encodedIndex + 2] = PAD;
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,298,encodedData[encodedIndex + 3] = PAD;
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,299,} else if (fewerThan24bits == SIXTEENBIT) {
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,300,b1 = binaryData[dataIndex];
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,301,b2 = binaryData[dataIndex + 1];
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,302,l = (byte) (b2 & 0x0f);
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,303,k = (byte) (b1 & 0x03);
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,305,byte val1 = ((b1 & SIGN) == 0)
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,306,? (byte) (b1 >> 2)
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,307,: (byte) ((b1) >> 2 ^ 0xc0);
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,309,byte val2 = ((b2 & SIGN) == 0)
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,310,? (byte) (b2 >> 4)
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,311,: (byte) ((b2) >> 4 ^ 0xf0);
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,313,encodedData[encodedIndex] = lookUpBase64Alphabet[val1];
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,314,encodedData[encodedIndex + 1] = lookUpBase64Alphabet[val2
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,315,| (k << 4)];
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,316,encodedData[encodedIndex + 2] = lookUpBase64Alphabet[l << 2];
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,317,encodedData[encodedIndex + 3] = PAD;
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,319,return encodedData;
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,324,* Returns the base64 encoding of String.  First the String is
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,325,"* converted to byte[], using the character encoding of"
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,326,* <code>ISO-8859-1</code>.
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,328,* @param data String of data to convert
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,329,* @return Base64-encoded String
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,331,public static String encode(String data) {
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,332,try {
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,333,"return encode(data, DEFAULT_CHAR_ENCODING);"
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,334,} catch (UnsupportedEncodingException uee) {
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,335,throw new IllegalStateException(uee.toString());
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,341,* Returns the base64 encoding of String (by first converting to
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,342,"* byte[], using the specified <code>charEncoding</code>).  The"
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,343,* return value is also a String.  The Default
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,344,* <code>codeEncoding</chode> is <code>ISO-8859-1</code>.
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,346,* @param data String of data to convert
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,347,* @param charEncoding the character encoding to use when converting
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,348,*                     a String to a byte[]
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,349,* @return Base64-encoded String
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,350,* @throws UnsupportedEncodingException
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,352,"public static String encode(String data, String charEncoding)"
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,353,throws UnsupportedEncodingException {
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,355,// Check arguments
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,356,if (data == null) {
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,357,"data = """";"
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,359,if (charEncoding == null) {
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,360,charEncoding = DEFAULT_CHAR_ENCODING;
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,363,// Convert to byte[]
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,364,ByteArrayOutputStream bos = new ByteArrayOutputStream();
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,365,"OutputStreamWriter osw = new OutputStreamWriter(bos, charEncoding);"
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,366,try {
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,367,osw.write(data);
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,368,} catch (IOException ioe) {
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,369,throw new RuntimeException(ioe.toString());
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,372,// Encode
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,373,byte[] encodedData = encode(bos.toByteArray());
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,375,// Convert to String
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,376,if (encodedData == null) {
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,377,"return """";"
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,379,bos = new ByteArrayOutputStream(encodedData.length);
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,380,try {
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,381,bos.write(encodedData);
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,382,} catch (IOException ioe) {
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,383,throw new RuntimeException(ioe.toString());
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,386,return bos.toString(charEncoding);
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,390,* Decodes Base64 data into octects
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,392,* @param base64Data Byte array containing Base64 data
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,393,* @return Array containing decoded data.
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,395,public static byte[] decode(byte[] base64Data) {
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,396,// Should we throw away anything not in base64Data ?
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,398,"// handle the edge case, so we don't have to worry about it later"
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,399,if (base64Data.length == 0) {
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,400,return EMPTY_BYTE_ARRAY;
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,403,int numberQuadruple = base64Data.length / FOURBYTE;
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,404,byte decodedData[] = null;
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,405,"byte b1 = 0, b2 = 0, b3 = 0, b4 = 0, marker0 = 0, marker1 = 0;"
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,407,int encodedIndex = 0;
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,408,int dataIndex = 0;
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,410,// this block sizes the output array properly - rlw
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,411,int lastData = base64Data.length;
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,412,// ignore the '=' padding
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,413,while (base64Data[lastData - 1] == PAD) {
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,414,if (--lastData == 0) {
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,415,return EMPTY_BYTE_ARRAY;
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,418,decodedData = new byte[lastData - numberQuadruple];
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,421,for (int i = 0; i < numberQuadruple; i++) {
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,422,dataIndex = i * 4;
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,423,marker0 = base64Data[dataIndex + 2];
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,424,marker1 = base64Data[dataIndex + 3];
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,426,b1 = base64Alphabet[base64Data[dataIndex]];
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,427,b2 = base64Alphabet[base64Data[dataIndex + 1]];
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,429,if (marker0 != PAD && marker1 != PAD) {
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,430,//No PAD e.g 3cQl
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,431,b3 = base64Alphabet[marker0];
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,432,b4 = base64Alphabet[marker1];
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,434,decodedData[encodedIndex] = (byte) (b1 << 2 | b2 >> 4);
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,435,decodedData[encodedIndex + 1] = (byte) (((b2 & 0xf) << 4)
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,436,| ((b3 >> 2) & 0xf));
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,437,decodedData[encodedIndex + 2] = (byte) (b3 << 6 | b4);
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,438,} else if (marker0 == PAD) {
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,439,//Two PAD e.g. 3c[Pad][Pad]
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,440,decodedData[encodedIndex] = (byte) (b1 << 2 | b2 >> 4);
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,441,} else if (marker1 == PAD) {
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,442,//One PAD e.g. 3cQ[Pad]
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,443,b3 = base64Alphabet[marker0];
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,445,decodedData[encodedIndex] = (byte) (b1 << 2 | b2 >> 4);
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,446,decodedData[encodedIndex + 1] = (byte) (((b2 & 0xf) << 4)
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,447,| ((b3 >> 2) & 0xf));
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,449,encodedIndex += 3;
True,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,451,return decodedData;
