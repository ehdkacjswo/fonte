is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,78," @version $Id: Base64.java,v 1.10 2003/10/05 21:45:49 tobrien Exp $"
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,78,"* @version $Id: Base64.java,v 1.11 2003/10/12 19:48:15 tobrien Exp $"
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,248,hrow new DecoderException(
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,249,"Parameter supplied to """
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,250," ""Base64 """
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,251," ""decode is not a byte[]"");"
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,248,"throw new DecoderException(""Parameter supplied to Base64 decode is not a byte[]"");"
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,305,CHUNK_SEPARATOR.length == 0
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,306, 0
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,307, (int) Math.ceil((float) encodedDataLength / CHUNK_SIZE));
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,302,(CHUNK_SEPARATOR.length == 0 ? 0 : (int) Math.ceil((float) encodedDataLength / CHUNK_SIZE));
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,334,(b1 & SIGN) == 0)
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,335, (byte) (b1 >> 2)
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,336, (byte) ((b1) >> 2 ^ 0xc0);
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,329,((b1 & SIGN) == 0) ? (byte) (b1 >> 2) : (byte) ((b1) >> 2 ^ 0xc0);
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,338,(b2 & SIGN) == 0)
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,339, (byte) (b2 >> 4)
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,340, (byte) ((b2) >> 4 ^ 0xf0);
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,331,((b2 & SIGN) == 0) ? (byte) (b2 >> 4) : (byte) ((b2) >> 4 ^ 0xf0);
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,342,(b3 & SIGN) == 0)
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,343, (byte) (b3 >> 6)
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,344, (byte) ((b3) >> 6 ^ 0xfc);
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,333,((b3 & SIGN) == 0) ? (byte) (b3 >> 6) : (byte) ((b3) >> 6 ^ 0xfc);
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,370,CHUNK_SIZE * (chunksSoFar + 1))
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,371, (chunksSoFar * CHUNK_SEPARATOR.length);
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,359,(CHUNK_SIZE * (chunksSoFar + 1)) +
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,360,(chunksSoFar * CHUNK_SEPARATOR.length);
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,386,(b1 & SIGN) == 0)
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,387, (byte) (b1 >> 2)
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,388, (byte) ((b1) >> 2 ^ 0xc0);
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,375,((b1 & SIGN) == 0) ? (byte) (b1 >> 2) : (byte) ((b1) >> 2 ^ 0xc0);
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,401,(b1 & SIGN) == 0)
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,402, (byte) (b1 >> 2)
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,403, (byte) ((b1) >> 2 ^ 0xc0);
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,388,((b1 & SIGN) == 0) ? (byte) (b1 >> 2) : (byte) ((b1) >> 2 ^ 0xc0);
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,405,(b2 & SIGN) == 0)
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,406, (byte) (b2 >> 4)
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,407, (byte) ((b2) >> 4 ^ 0xf0);
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,390,((b2 & SIGN) == 0) ? (byte) (b2 >> 4) : (byte) ((b2) >> 4 ^ 0xf0);
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,576,"Parameter supplied to """
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,577," ""Base64 """
False,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,578," ""encode is not a byte[]"");"
True,src/java/org/apache/commons/codec/binary/Base64.java,src/java/org/apache/commons/codec/binary/Base64.java,559,"""Parameter supplied to Base64 encode is not a byte[]"");"
False,src/java/org/apache/commons/codec/language/Metaphone.java,src/java/org/apache/commons/codec/language/Metaphone.java,74," @version $Id: Metaphone.java,v 1.7 2003/10/05 21:45:48 tobrien Exp $"
True,src/java/org/apache/commons/codec/language/Metaphone.java,src/java/org/apache/commons/codec/language/Metaphone.java,74,"* @version $Id: Metaphone.java,v 1.8 2003/10/12 19:48:14 tobrien Exp $"
False,src/java/org/apache/commons/codec/language/Metaphone.java,src/java/org/apache/commons/codec/language/Metaphone.java,118,f ((txt == null)
False,src/java/org/apache/commons/codec/language/Metaphone.java,src/java/org/apache/commons/codec/language/Metaphone.java,119,| (txt.length() == 0)) {
True,src/java/org/apache/commons/codec/language/Metaphone.java,src/java/org/apache/commons/codec/language/Metaphone.java,118,if ((txt == null) || (txt.length() == 0)) {
False,src/java/org/apache/commons/codec/language/Metaphone.java,src/java/org/apache/commons/codec/language/Metaphone.java,173,hile ((mtsz < maxCodeLen) // max code size of 4 works well
False,src/java/org/apache/commons/codec/language/Metaphone.java,src/java/org/apache/commons/codec/language/Metaphone.java,174,& (n < wdsz)) {
True,src/java/org/apache/commons/codec/language/Metaphone.java,src/java/org/apache/commons/codec/language/Metaphone.java,172,while ((mtsz < maxCodeLen) && (n < wdsz)) { // max code size of 4 works well
False,src/java/org/apache/commons/codec/language/Metaphone.java,src/java/org/apache/commons/codec/language/Metaphone.java,177,f ((symb != 'C')
False,src/java/org/apache/commons/codec/language/Metaphone.java,src/java/org/apache/commons/codec/language/Metaphone.java,178,& (n > 0) && (local.charAt(n - 1) == symb)) {
True,src/java/org/apache/commons/codec/language/Metaphone.java,src/java/org/apache/commons/codec/language/Metaphone.java,175,if ((symb != 'C') && (n > 0) && (local.charAt(n - 1) == symb)) {
False,src/java/org/apache/commons/codec/language/Metaphone.java,src/java/org/apache/commons/codec/language/Metaphone.java,189,f ((n > 0)
False,src/java/org/apache/commons/codec/language/Metaphone.java,src/java/org/apache/commons/codec/language/Metaphone.java,190,& !(n + 1 == wdsz) // not MB at end of word
False,src/java/org/apache/commons/codec/language/Metaphone.java,src/java/org/apache/commons/codec/language/Metaphone.java,191,& (local.charAt(n - 1) == 'M')) {
True,src/java/org/apache/commons/codec/language/Metaphone.java,src/java/org/apache/commons/codec/language/Metaphone.java,186,if ((n > 0) && !(n + 1 == wdsz) && (local.charAt(n - 1) == 'M')) { // not MB at end of word
False,src/java/org/apache/commons/codec/language/Metaphone.java,src/java/org/apache/commons/codec/language/Metaphone.java,200,f ((n > 0)
False,src/java/org/apache/commons/codec/language/Metaphone.java,src/java/org/apache/commons/codec/language/Metaphone.java,201,& (local.charAt(n - 1) == 'S')
False,src/java/org/apache/commons/codec/language/Metaphone.java,src/java/org/apache/commons/codec/language/Metaphone.java,202,& (n + 1 < wdsz)
False,src/java/org/apache/commons/codec/language/Metaphone.java,src/java/org/apache/commons/codec/language/Metaphone.java,203,& (frontv.indexOf(local.charAt(n + 1)) >= 0)) {
True,src/java/org/apache/commons/codec/language/Metaphone.java,src/java/org/apache/commons/codec/language/Metaphone.java,195,if ((n > 0) && (local.charAt(n - 1) == 'S') && (n + 1 < wdsz) && (frontv.indexOf(local.charAt(n + 1)) >= 0)) {
False,src/java/org/apache/commons/codec/language/Metaphone.java,src/java/org/apache/commons/codec/language/Metaphone.java,210,f ((n + 1 < wdsz)
False,src/java/org/apache/commons/codec/language/Metaphone.java,src/java/org/apache/commons/codec/language/Metaphone.java,211,& (frontv.indexOf(local.charAt(n + 1)) >= 0)) {
True,src/java/org/apache/commons/codec/language/Metaphone.java,src/java/org/apache/commons/codec/language/Metaphone.java,202,if ((n + 1 < wdsz) && (frontv.indexOf(local.charAt(n + 1)) >= 0)) {
False,src/java/org/apache/commons/codec/language/Metaphone.java,src/java/org/apache/commons/codec/language/Metaphone.java,216,f ((n > 0)
False,src/java/org/apache/commons/codec/language/Metaphone.java,src/java/org/apache/commons/codec/language/Metaphone.java,217,"& (tmpS.indexOf(""SCH"", n - 1) == n - 1)) { // SCH->sk"
True,src/java/org/apache/commons/codec/language/Metaphone.java,src/java/org/apache/commons/codec/language/Metaphone.java,207,"if ((n > 0) && (tmpS.indexOf(""SCH"", n - 1) == n - 1)) { // SCH->sk"
False,src/java/org/apache/commons/codec/language/Metaphone.java,src/java/org/apache/commons/codec/language/Metaphone.java,223,f ((n == 0)
False,src/java/org/apache/commons/codec/language/Metaphone.java,src/java/org/apache/commons/codec/language/Metaphone.java,224,& (wdsz >= 3)     // CH consonant -> K consonant
False,src/java/org/apache/commons/codec/language/Metaphone.java,src/java/org/apache/commons/codec/language/Metaphone.java,225,& (vowels.indexOf(local.charAt(2)) < 0)) {
True,src/java/org/apache/commons/codec/language/Metaphone.java,src/java/org/apache/commons/codec/language/Metaphone.java,213,if ((n == 0) && (wdsz >= 3) && (vowels.indexOf(local.charAt(2)) < 0)) { // CH consonant -> K consonant
False,src/java/org/apache/commons/codec/language/Metaphone.java,src/java/org/apache/commons/codec/language/Metaphone.java,237,f ((n + 2 < wdsz)   // DGE DGI DGY -> J
False,src/java/org/apache/commons/codec/language/Metaphone.java,src/java/org/apache/commons/codec/language/Metaphone.java,238,& (local.charAt(n + 1) == 'G')
False,src/java/org/apache/commons/codec/language/Metaphone.java,src/java/org/apache/commons/codec/language/Metaphone.java,239,& (frontv.indexOf(local.charAt(n + 2)) >= 0)) {
True,src/java/org/apache/commons/codec/language/Metaphone.java,src/java/org/apache/commons/codec/language/Metaphone.java,225,if ((n + 2 < wdsz)   && (local.charAt(n + 1) == 'G') && (frontv.indexOf(local.charAt(n + 2)) >= 0)) { // DGE DGI DGY -> J
False,src/java/org/apache/commons/codec/language/Metaphone.java,src/java/org/apache/commons/codec/language/Metaphone.java,247,f ((n + 2 == wdsz)
False,src/java/org/apache/commons/codec/language/Metaphone.java,src/java/org/apache/commons/codec/language/Metaphone.java,248,& (local.charAt(n + 1) == 'H')) {
True,src/java/org/apache/commons/codec/language/Metaphone.java,src/java/org/apache/commons/codec/language/Metaphone.java,233,if ((n + 2 == wdsz) && (local.charAt(n + 1) == 'H')) {
False,src/java/org/apache/commons/codec/language/Metaphone.java,src/java/org/apache/commons/codec/language/Metaphone.java,251,f ((n + 2 < wdsz)
False,src/java/org/apache/commons/codec/language/Metaphone.java,src/java/org/apache/commons/codec/language/Metaphone.java,252,& (local.charAt(n + 1) == 'H')
False,src/java/org/apache/commons/codec/language/Metaphone.java,src/java/org/apache/commons/codec/language/Metaphone.java,253,& (vowels.indexOf(local.charAt(n + 2)) < 0)) {
True,src/java/org/apache/commons/codec/language/Metaphone.java,src/java/org/apache/commons/codec/language/Metaphone.java,236,if ((n + 2 < wdsz) && (local.charAt(n + 1) == 'H') && (vowels.indexOf(local.charAt(n + 2)) < 0)) {
False,src/java/org/apache/commons/codec/language/Metaphone.java,src/java/org/apache/commons/codec/language/Metaphone.java,257,f ((n > 0)
False,src/java/org/apache/commons/codec/language/Metaphone.java,src/java/org/apache/commons/codec/language/Metaphone.java,258,"& (tmpS.indexOf(""GN"", n) == n)"
False,src/java/org/apache/commons/codec/language/Metaphone.java,src/java/org/apache/commons/codec/language/Metaphone.java,259,"| (tmpS.indexOf(""GNED"", n) == n)) {"
True,src/java/org/apache/commons/codec/language/Metaphone.java,src/java/org/apache/commons/codec/language/Metaphone.java,240,"if ((n > 0) && (tmpS.indexOf(""GN"", n) == n) || (tmpS.indexOf(""GNED"", n) == n)) {"
False,src/java/org/apache/commons/codec/language/Metaphone.java,src/java/org/apache/commons/codec/language/Metaphone.java,262,f ((n > 0)
False,src/java/org/apache/commons/codec/language/Metaphone.java,src/java/org/apache/commons/codec/language/Metaphone.java,263,& (local.charAt(n - 1) == 'G')) {
True,src/java/org/apache/commons/codec/language/Metaphone.java,src/java/org/apache/commons/codec/language/Metaphone.java,243,if ((n > 0) && (local.charAt(n - 1) == 'G')) {
False,src/java/org/apache/commons/codec/language/Metaphone.java,src/java/org/apache/commons/codec/language/Metaphone.java,268,f ((n + 1 < wdsz)
False,src/java/org/apache/commons/codec/language/Metaphone.java,src/java/org/apache/commons/codec/language/Metaphone.java,269,& (frontv.indexOf(local.charAt(n + 1)) >= 0)
False,src/java/org/apache/commons/codec/language/Metaphone.java,src/java/org/apache/commons/codec/language/Metaphone.java,270,& (!hard)) {
True,src/java/org/apache/commons/codec/language/Metaphone.java,src/java/org/apache/commons/codec/language/Metaphone.java,248,if ((n + 1 < wdsz) && (frontv.indexOf(local.charAt(n + 1)) >= 0) && (!hard)) {
False,src/java/org/apache/commons/codec/language/Metaphone.java,src/java/org/apache/commons/codec/language/Metaphone.java,281,f ((n > 0)
False,src/java/org/apache/commons/codec/language/Metaphone.java,src/java/org/apache/commons/codec/language/Metaphone.java,282,& (varson.indexOf(local.charAt(n - 1)) >= 0)) {
True,src/java/org/apache/commons/codec/language/Metaphone.java,src/java/org/apache/commons/codec/language/Metaphone.java,259,if ((n > 0) && (varson.indexOf(local.charAt(n - 1)) >= 0)) {
False,src/java/org/apache/commons/codec/language/Metaphone.java,src/java/org/apache/commons/codec/language/Metaphone.java,310,f ((n + 1 < wdsz)
False,src/java/org/apache/commons/codec/language/Metaphone.java,src/java/org/apache/commons/codec/language/Metaphone.java,311,& (local.charAt(n + 1) == 'H')) {
True,src/java/org/apache/commons/codec/language/Metaphone.java,src/java/org/apache/commons/codec/language/Metaphone.java,287,if ((n + 1 < wdsz) && (local.charAt(n + 1) == 'H')) {
False,src/java/org/apache/commons/codec/language/Metaphone.java,src/java/org/apache/commons/codec/language/Metaphone.java,325,"f ((tmpS.indexOf(""SH"", n) == n)"
False,src/java/org/apache/commons/codec/language/Metaphone.java,src/java/org/apache/commons/codec/language/Metaphone.java,326,"| (tmpS.indexOf(""SIO"", n) == n)"
False,src/java/org/apache/commons/codec/language/Metaphone.java,src/java/org/apache/commons/codec/language/Metaphone.java,327,"| (tmpS.indexOf(""SIA"", n) == n)) {"
True,src/java/org/apache/commons/codec/language/Metaphone.java,src/java/org/apache/commons/codec/language/Metaphone.java,301,"if ((tmpS.indexOf(""SH"", n) == n) || (tmpS.indexOf(""SIO"", n) == n) || (tmpS.indexOf(""SIA"", n) == n)) {"
False,src/java/org/apache/commons/codec/language/Metaphone.java,src/java/org/apache/commons/codec/language/Metaphone.java,336,"f ((tmpS.indexOf(""TIA"", n) == n)"
False,src/java/org/apache/commons/codec/language/Metaphone.java,src/java/org/apache/commons/codec/language/Metaphone.java,337,"| (tmpS.indexOf(""TIO"", n) == n)) {"
True,src/java/org/apache/commons/codec/language/Metaphone.java,src/java/org/apache/commons/codec/language/Metaphone.java,310,"if ((tmpS.indexOf(""TIA"", n) == n) || (tmpS.indexOf(""TIO"", n) == n)) {"
False,src/java/org/apache/commons/codec/language/Metaphone.java,src/java/org/apache/commons/codec/language/Metaphone.java,356,f ((n + 1 < wdsz)
False,src/java/org/apache/commons/codec/language/Metaphone.java,src/java/org/apache/commons/codec/language/Metaphone.java,357,& (vowels.indexOf(local.charAt(n + 1)) >= 0)) {
True,src/java/org/apache/commons/codec/language/Metaphone.java,src/java/org/apache/commons/codec/language/Metaphone.java,329,if ((n + 1 < wdsz) && (vowels.indexOf(local.charAt(n + 1)) >= 0)) {
False,src/java/org/apache/commons/codec/language/Metaphone.java,src/java/org/apache/commons/codec/language/Metaphone.java,391,"hrow new EncoderException(""Parameter supplied to Metaphone """
False,src/java/org/apache/commons/codec/language/Metaphone.java,src/java/org/apache/commons/codec/language/Metaphone.java,392," ""encode is not of type """
False,src/java/org/apache/commons/codec/language/Metaphone.java,src/java/org/apache/commons/codec/language/Metaphone.java,393," ""java.lang.String"");"
True,src/java/org/apache/commons/codec/language/Metaphone.java,src/java/org/apache/commons/codec/language/Metaphone.java,363,"throw new EncoderException(""Parameter supplied to Metaphone encode is not of type java.lang.String"");"
False,src/java/org/apache/commons/codec/language/RefinedSoundex.java,src/java/org/apache/commons/codec/language/RefinedSoundex.java,71," @version $Id: RefinedSoundex.java,v 1.9 2003/10/05 21:45:48 tobrien Exp $"
True,src/java/org/apache/commons/codec/language/RefinedSoundex.java,src/java/org/apache/commons/codec/language/RefinedSoundex.java,71,"* @version $Id: RefinedSoundex.java,v 1.10 2003/10/12 19:48:14 tobrien Exp $"
False,src/java/org/apache/commons/codec/language/RefinedSoundex.java,src/java/org/apache/commons/codec/language/RefinedSoundex.java,179,"hrow new EncoderException(""Parameter supplied to """
False,src/java/org/apache/commons/codec/language/RefinedSoundex.java,src/java/org/apache/commons/codec/language/RefinedSoundex.java,180," ""RefinedSoundex """
False,src/java/org/apache/commons/codec/language/RefinedSoundex.java,src/java/org/apache/commons/codec/language/RefinedSoundex.java,181," ""encode is not of type """
False,src/java/org/apache/commons/codec/language/RefinedSoundex.java,src/java/org/apache/commons/codec/language/RefinedSoundex.java,182," ""java.lang.String"");"
True,src/java/org/apache/commons/codec/language/RefinedSoundex.java,src/java/org/apache/commons/codec/language/RefinedSoundex.java,179,"throw new EncoderException(""Parameter supplied to RefinedSoundex encode is not of type java.lang.String"");"
False,src/java/org/apache/commons/codec/language/Soundex.java,src/java/org/apache/commons/codec/language/Soundex.java,71," @version $Id: Soundex.java,v 1.8 2003/10/05 21:45:48 tobrien Exp $"
True,src/java/org/apache/commons/codec/language/Soundex.java,src/java/org/apache/commons/codec/language/Soundex.java,71,"* @version $Id: Soundex.java,v 1.9 2003/10/12 19:48:15 tobrien Exp $"
False,src/java/org/apache/commons/codec/language/Soundex.java,src/java/org/apache/commons/codec/language/Soundex.java,137,hile ((incount < str.length())
False,src/java/org/apache/commons/codec/language/Soundex.java,src/java/org/apache/commons/codec/language/Soundex.java,138,& (mapped = getMappingCode(str.charAt(incount++))) != 0
False,src/java/org/apache/commons/codec/language/Soundex.java,src/java/org/apache/commons/codec/language/Soundex.java,139,& (count < maxLength)) {
True,src/java/org/apache/commons/codec/language/Soundex.java,src/java/org/apache/commons/codec/language/Soundex.java,137,while ((incount < str.length()) && (mapped = getMappingCode(str.charAt(incount++))) != 0 && (count < maxLength)) {
False,src/java/org/apache/commons/codec/language/Soundex.java,src/java/org/apache/commons/codec/language/Soundex.java,165,"hrow new EncoderException(""Parameter supplied to """
False,src/java/org/apache/commons/codec/language/Soundex.java,src/java/org/apache/commons/codec/language/Soundex.java,166," ""Soundex """
False,src/java/org/apache/commons/codec/language/Soundex.java,src/java/org/apache/commons/codec/language/Soundex.java,167," ""encode is not of type """
False,src/java/org/apache/commons/codec/language/Soundex.java,src/java/org/apache/commons/codec/language/Soundex.java,168," ""java.lang.String"");"
True,src/java/org/apache/commons/codec/language/Soundex.java,src/java/org/apache/commons/codec/language/Soundex.java,163,"throw new EncoderException(""Parameter supplied to Soundex encode is not of type java.lang.String"");"
