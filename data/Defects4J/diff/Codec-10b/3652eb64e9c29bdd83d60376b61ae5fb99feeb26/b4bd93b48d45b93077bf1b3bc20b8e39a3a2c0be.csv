is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,4," The Apache Software License, Version 1.1"
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,6, Copyright (c) 2001-2003 The Apache Software Foundation.  All rights
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,7, reserved.
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,9," Redistribution and use in source and binary forms, with or without"
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,10," modification, are permitted provided that the following conditions"
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,11, are met:
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,13, 1. Redistributions of source code must retain the above copyright
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,14,"    notice, this list of conditions and the following disclaimer."
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,16, 2. Redistributions in binary form must reproduce the above copyright
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,17,"    notice, this list of conditions and the following disclaimer in"
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,18,    the documentation and/or other materials provided with the
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,19,    distribution.
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,21," 3. The end-user documentation included with the redistribution,"
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,22,"    if any, must include the following acknowledgement:"
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,23,"       ""This product includes software developed by the"
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,24,"        Apache Software Foundation (http://www.apache.org/)."""
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,25,"    Alternately, this acknowledgement may appear in the software itself,"
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,26,    if and wherever such third-party acknowledgements normally appear.
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,28," 4. The names ""Apache"", ""The Jakarta Project"", ""Commons"", and ""Apache Software"
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,29,"    Foundation"" must not be used to endorse or promote products derived"
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,30,    from this software without prior written permission. For written
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,31,"    permission, please contact apache@apache.org."
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,33," 5. Products derived from this software may not be called ""Apache"","
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,34,"    ""Apache"" nor may ""Apache"" appear in their name without prior"
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,35,    written permission of the Apache Software Foundation.
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,37, THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,38," WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,39, OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,40, DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,41," ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,42," SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,43," LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,44," USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,45," ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,46, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,47," OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,48, SUCH DAMAGE.
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,51, This software consists of voluntary contributions made by many
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,52, individuals on behalf of the Apache Software Foundation.  For more
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,53," information on the Apache Software Foundation, please see"
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,54, <http://www.apache.org/>.
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,58,ackage org.apache.commons.codec.base64;
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,60,mport java.io.ByteArrayOutputStream;
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,61,mport java.io.IOException;
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,62,mport java.io.OutputStreamWriter;
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,63,mport java.io.UnsupportedEncodingException;
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,66, <p>Base64 encoder and decoder.</p>
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,67, <p>
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,68, This class provides encoding/decoding methods for
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,69," the Base64 encoding as defined by RFC 2045,"
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,70, N. Freed and N. Borenstein.
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,71, RFC 2045: Multipurpose Internet Mail Extensions (MIME)
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,72, Part One: Format of Internet Message Bodies. Reference
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,73, 1996. Available at: http://www.ietf.org/rfc/rfc2045.txt
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,74, </p>
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,75, @author Jeffrey Rodriguez
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,77, @deprecated This class has been replaced by
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,78,             {@link org.apache.commons.codec.binary.Base64}
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,80," @version $Id: Base64.java,v 1.8 2003/10/05 21:45:49 tobrien Exp $"
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,82,ublic final class Base64 {
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,85, The default character encoding
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,87,"rotected static final String DEFAULT_CHAR_ENCODING = ""ISO-8859-1"";"
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,90, The bsae length
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,92,tatic final int BASELENGTH = 255;
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,95, Lookup length
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,97,tatic final int LOOKUPLENGTH = 64;
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,100, Used to calculate the number of bits in a byte.
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,102,tatic final int EIGHTBIT = 8;
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,105, Used when encoding something which has fewer than 24 bits
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,107,tatic final int SIXTEENBIT = 16;
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,110, Constant used to determine how many bits data contains
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,112,tatic final int TWENTYFOURBITGROUP = 24;
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,115, Used to get the number of Quadruples
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,117,tatic final int FOURBYTE = 4;
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,120, Used to test the sign of a byte
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,122,tatic final int SIGN = -128;
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,125, Byte used to pad output
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,127,tatic final byte PAD = (byte) '=';
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,130, Create arrays to hold the base64 characters and a
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,131, lookup for base64 chars
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,133,rivate static byte[] base64Alphabet = new byte[BASELENGTH];
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,136, An empty array of type byte
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,138,rivate static final byte[] EMPTY_BYTE_ARRAY = new byte[0];
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,141, Lookup table
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,143,rivate static byte[] lookUpBase64Alphabet = new byte[LOOKUPLENGTH];
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,145,tatic {
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,147,or (int i = 0; i < BASELENGTH; i++) {
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,148,ase64Alphabet[i] = -1;
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,150,or (int i = 'Z'; i >= 'A'; i--) {
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,151,ase64Alphabet[i] = (byte) (i - 'A');
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,153,or (int i = 'z'; i >= 'a'; i--) {
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,154,ase64Alphabet[i] = (byte) (i - 'a' + 26);
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,157,or (int i = '9'; i >= '0'; i--) {
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,158,ase64Alphabet[i] = (byte) (i - '0' + 52);
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,161,ase64Alphabet['+'] = 62;
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,162,ase64Alphabet['/'] = 63;
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,164,or (int i = 0; i <= 25; i++) {
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,165,ookUpBase64Alphabet[i] = (byte) ('A' + i);
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,168,"or (int i = 26,  j = 0; i <= 51; i++, j++) {"
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,169,ookUpBase64Alphabet[i] = (byte) ('a' + j);
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,172,"or (int i = 52,  j = 0; i <= 61; i++, j++) {"
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,173,ookUpBase64Alphabet[i] = (byte) ('0' + j);
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,176,ookUpBase64Alphabet[62] = (byte) '+';
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,177,ookUpBase64Alphabet[63] = (byte) '/';
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,182, Tests to see whether the bytes of this string are
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,183, Base64
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,185, @param isValidString String to test
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,186, @return trus if String is base64
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,188,ublic static boolean isBase64(String isValidString) {
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,189,eturn (isBase64(isValidString.getBytes()));
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,193, Tests a byte to see whether it falls within the Base64
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,194, alphabet (or if it is a padding character).
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,196, @param octect byte to test
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,197, @return true if byte is in alphabet or padding
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,199,ublic static boolean isBase64(byte octect) {
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,200,/ Should we ignore white space?
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,201,eturn (octect == PAD || base64Alphabet[octect] != -1);
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,205, Tests byte array to see if all characters are within the
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,206, Base64 alphabet
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,208, @param arrayOctect A byte[] to test
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,209, @return true if all data falls within the Base64 alphabet OR if the
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,210,         array is empty.
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,212,ublic static boolean isBase64(byte[] arrayOctect) {
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,213,nt length = arrayOctect.length;
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,214,f (length == 0) {
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,215,eturn true;
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,217,or (int i = 0; i < length; i++) {
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,218,f (!Base64.isBase64(arrayOctect[i])) {
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,219,eturn false;
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,222,eturn true;
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,226, Encodes hex octects into Base64
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,228, @param binaryData Array containing binaryData
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,229, @return Base64-encoded array
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,231,ublic static byte[] encode(byte[] binaryData) {
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,232,f (binaryData == null) {
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,233,inaryData = EMPTY_BYTE_ARRAY;
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,236,nt lengthDataBits = binaryData.length * EIGHTBIT;
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,237,nt fewerThan24bits = lengthDataBits % TWENTYFOURBITGROUP;
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,238,nt numberTriplets = lengthDataBits / TWENTYFOURBITGROUP;
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,239,yte encodedData[] = null;
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,242,f (fewerThan24bits != 0) {
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,243,/data not divisible by 24 bit
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,244,ncodedData = new byte[(numberTriplets + 1) * 4];
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,245, else {
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,246,/ 16 or 8 bit
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,247,ncodedData = new byte[numberTriplets * 4];
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,250,"yte k = 0, l = 0, b1 = 0, b2 = 0, b3 = 0;"
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,252,nt encodedIndex = 0;
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,253,nt dataIndex = 0;
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,254,nt i = 0;
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,255,or (i = 0; i < numberTriplets; i++) {
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,257,ataIndex = i * 3;
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,258,1 = binaryData[dataIndex];
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,259,2 = binaryData[dataIndex + 1];
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,260,3 = binaryData[dataIndex + 2];
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,262, = (byte) (b2 & 0x0f);
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,263, = (byte) (b1 & 0x03);
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,265,ncodedIndex = i * 4;
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,266,yte val1 = ((b1 & SIGN) == 0)
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,267, (byte) (b1 >> 2)
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,268, (byte) ((b1) >> 2 ^ 0xc0);
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,270,yte val2 = ((b2 & SIGN) == 0)
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,271, (byte) (b2 >> 4)
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,272, (byte) ((b2) >> 4 ^ 0xf0);
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,274,yte val3 = ((b3 & SIGN) == 0)
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,275, (byte) (b3 >> 6)
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,276, (byte) ((b3) >> 6 ^ 0xfc);
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,278,ncodedData[encodedIndex] = lookUpBase64Alphabet[val1];
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,279,ncodedData[encodedIndex + 1] = lookUpBase64Alphabet[val2
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,280, (k << 4)];
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,281,ncodedData[encodedIndex + 2] = lookUpBase64Alphabet[(l << 2)
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,282, val3];
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,283,ncodedData[encodedIndex + 3] = lookUpBase64Alphabet[b3 & 0x3f];
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,286,/ form integral number of 6-bit groups
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,287,ataIndex = i * 3;
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,288,ncodedIndex = i * 4;
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,289,f (fewerThan24bits == EIGHTBIT) {
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,290,1 = binaryData[dataIndex];
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,291, = (byte) (b1 & 0x03);
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,292,yte val1 = ((b1 & SIGN) == 0)
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,293, (byte) (b1 >> 2)
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,294, (byte) ((b1) >> 2 ^ 0xc0);
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,296,ncodedData[encodedIndex] = lookUpBase64Alphabet[val1];
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,297,ncodedData[encodedIndex + 1] = lookUpBase64Alphabet[k << 4];
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,298,ncodedData[encodedIndex + 2] = PAD;
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,299,ncodedData[encodedIndex + 3] = PAD;
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,300, else if (fewerThan24bits == SIXTEENBIT) {
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,301,1 = binaryData[dataIndex];
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,302,2 = binaryData[dataIndex + 1];
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,303, = (byte) (b2 & 0x0f);
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,304, = (byte) (b1 & 0x03);
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,306,yte val1 = ((b1 & SIGN) == 0)
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,307, (byte) (b1 >> 2)
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,308, (byte) ((b1) >> 2 ^ 0xc0);
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,310,yte val2 = ((b2 & SIGN) == 0)
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,311, (byte) (b2 >> 4)
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,312, (byte) ((b2) >> 4 ^ 0xf0);
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,314,ncodedData[encodedIndex] = lookUpBase64Alphabet[val1];
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,315,ncodedData[encodedIndex + 1] = lookUpBase64Alphabet[val2
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,316, (k << 4)];
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,317,ncodedData[encodedIndex + 2] = lookUpBase64Alphabet[l << 2];
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,318,ncodedData[encodedIndex + 3] = PAD;
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,320,eturn encodedData;
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,325, Returns the base64 encoding of String.  First the String is
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,326," converted to byte[], using the character encoding of"
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,327, <code>ISO-8859-1</code>.
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,329, @param data String of data to convert
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,330, @return Base64-encoded String
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,332,ublic static String encode(String data) {
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,333,ry {
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,334,"eturn encode(data, DEFAULT_CHAR_ENCODING);"
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,335, catch (UnsupportedEncodingException uee) {
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,336,hrow new IllegalStateException(uee.toString());
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,342, Returns the base64 encoding of String (by first converting to
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,343," byte[], using the specified <code>charEncoding</code>).  The"
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,344, return value is also a String.  The Default
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,345, <code>codeEncoding</chode> is <code>ISO-8859-1</code>.
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,347, @param data String of data to convert
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,348, @param charEncoding the character encoding to use when converting
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,349,                     a String to a byte[]
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,350, @return Base64-encoded String
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,351, @throws UnsupportedEncodingException
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,353,"ublic static String encode(String data, String charEncoding)"
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,354,hrows UnsupportedEncodingException {
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,356,/ Check arguments
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,357,f (data == null) {
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,358,"ata = """";"
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,360,f (charEncoding == null) {
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,361,harEncoding = DEFAULT_CHAR_ENCODING;
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,364,/ Convert to byte[]
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,365,yteArrayOutputStream bos = new ByteArrayOutputStream();
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,366,"utputStreamWriter osw = new OutputStreamWriter(bos, charEncoding);"
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,367,ry {
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,368,sw.write(data);
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,369, catch (IOException ioe) {
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,370,hrow new RuntimeException(ioe.toString());
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,373,/ Encode
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,374,yte[] encodedData = encode(bos.toByteArray());
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,376,/ Convert to String
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,377,f (encodedData == null) {
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,378,"eturn """";"
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,380,os = new ByteArrayOutputStream(encodedData.length);
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,381,ry {
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,382,os.write(encodedData);
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,383, catch (IOException ioe) {
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,384,hrow new RuntimeException(ioe.toString());
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,387,eturn bos.toString(charEncoding);
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,391, Decodes Base64 data into octects
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,393, @param base64Data Byte array containing Base64 data
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,394, @return Array containing decoded data.
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,396,ublic static byte[] decode(byte[] base64Data) {
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,397,/ Should we throw away anything not in base64Data ?
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,399,"/ handle the edge case, so we don't have to worry about it later"
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,400,f (base64Data.length == 0) {
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,401,eturn EMPTY_BYTE_ARRAY;
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,404,nt numberQuadruple = base64Data.length / FOURBYTE;
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,405,yte decodedData[] = null;
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,406,"yte b1 = 0, b2 = 0, b3 = 0, b4 = 0, marker0 = 0, marker1 = 0;"
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,408,nt encodedIndex = 0;
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,409,nt dataIndex = 0;
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,411,/ this block sizes the output array properly - rlw
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,412,nt lastData = base64Data.length;
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,413,/ ignore the '=' padding
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,414,hile (base64Data[lastData - 1] == PAD) {
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,415,f (--lastData == 0) {
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,416,eturn EMPTY_BYTE_ARRAY;
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,419,ecodedData = new byte[lastData - numberQuadruple];
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,422,or (int i = 0; i < numberQuadruple; i++) {
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,423,ataIndex = i * 4;
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,424,arker0 = base64Data[dataIndex + 2];
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,425,arker1 = base64Data[dataIndex + 3];
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,427,1 = base64Alphabet[base64Data[dataIndex]];
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,428,2 = base64Alphabet[base64Data[dataIndex + 1]];
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,430,f (marker0 != PAD && marker1 != PAD) {
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,431,/No PAD e.g 3cQl
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,432,3 = base64Alphabet[marker0];
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,433,4 = base64Alphabet[marker1];
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,435,ecodedData[encodedIndex] = (byte) (b1 << 2 | b2 >> 4);
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,436,ecodedData[encodedIndex + 1] = (byte) (((b2 & 0xf) << 4)
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,437, ((b3 >> 2) & 0xf));
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,438,ecodedData[encodedIndex + 2] = (byte) (b3 << 6 | b4);
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,439, else if (marker0 == PAD) {
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,440,/Two PAD e.g. 3c[Pad][Pad]
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,441,ecodedData[encodedIndex] = (byte) (b1 << 2 | b2 >> 4);
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,442, else if (marker1 == PAD) {
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,443,/One PAD e.g. 3cQ[Pad]
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,444,3 = base64Alphabet[marker0];
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,446,ecodedData[encodedIndex] = (byte) (b1 << 2 | b2 >> 4);
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,447,ecodedData[encodedIndex + 1] = (byte) (((b2 & 0xf) << 4)
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,448, ((b3 >> 2) & 0xf));
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,450,ncodedIndex += 3;
False,src/java/org/apache/commons/codec/base64/Base64.java,src/java/org/apache/commons/codec/base64/Base64.java,452,eturn decodedData;
