is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/codec/language/ColognePhonetic.java,src/java/org/apache/commons/codec/language/ColognePhonetic.java,183,rivate class CologneLeftBuffer implements CharSequence {
True,src/java/org/apache/commons/codec/language/ColognePhonetic.java,src/java/org/apache/commons/codec/language/ColognePhonetic.java,183,private abstract class CologneBuffer implements CharSequence {
False,src/java/org/apache/commons/codec/language/ColognePhonetic.java,src/java/org/apache/commons/codec/language/ColognePhonetic.java,185,rivate final char[] data;
False,src/java/org/apache/commons/codec/language/ColognePhonetic.java,src/java/org/apache/commons/codec/language/ColognePhonetic.java,186,rivate int length = 0;
True,src/java/org/apache/commons/codec/language/ColognePhonetic.java,src/java/org/apache/commons/codec/language/ColognePhonetic.java,185,protected final char[] data;
True,src/java/org/apache/commons/codec/language/ColognePhonetic.java,src/java/org/apache/commons/codec/language/ColognePhonetic.java,186,protected int length = 0;
False,src/java/org/apache/commons/codec/language/ColognePhonetic.java,src/java/org/apache/commons/codec/language/ColognePhonetic.java,188,ublic CologneLeftBuffer(int buffSize) {
False,src/java/org/apache/commons/codec/language/ColognePhonetic.java,src/java/org/apache/commons/codec/language/ColognePhonetic.java,189,ata = new char[buffSize];
False,src/java/org/apache/commons/codec/language/ColognePhonetic.java,src/java/org/apache/commons/codec/language/ColognePhonetic.java,192,ublic CologneLeftBuffer(char[] data) {
True,src/java/org/apache/commons/codec/language/ColognePhonetic.java,src/java/org/apache/commons/codec/language/ColognePhonetic.java,188,public CologneBuffer(char[] data) {
False,src/java/org/apache/commons/codec/language/ColognePhonetic.java,src/java/org/apache/commons/codec/language/ColognePhonetic.java,197,ublic int length() {
False,src/java/org/apache/commons/codec/language/ColognePhonetic.java,src/java/org/apache/commons/codec/language/ColognePhonetic.java,198,eturn length;
True,src/java/org/apache/commons/codec/language/ColognePhonetic.java,src/java/org/apache/commons/codec/language/ColognePhonetic.java,193,public CologneBuffer(int buffSize) {
True,src/java/org/apache/commons/codec/language/ColognePhonetic.java,src/java/org/apache/commons/codec/language/ColognePhonetic.java,194,data = new char[buffSize];
False,src/java/org/apache/commons/codec/language/ColognePhonetic.java,src/java/org/apache/commons/codec/language/ColognePhonetic.java,209,"ublic CharSequence subSequence(int start, int end) {"
False,src/java/org/apache/commons/codec/language/ColognePhonetic.java,src/java/org/apache/commons/codec/language/ColognePhonetic.java,210,inal int length = end - start;
False,src/java/org/apache/commons/codec/language/ColognePhonetic.java,src/java/org/apache/commons/codec/language/ColognePhonetic.java,212,"har[] retData = copyData(start, length);"
False,src/java/org/apache/commons/codec/language/ColognePhonetic.java,src/java/org/apache/commons/codec/language/ColognePhonetic.java,214,eturn new CologneLeftBuffer(retData);
False,src/java/org/apache/commons/codec/language/ColognePhonetic.java,src/java/org/apache/commons/codec/language/ColognePhonetic.java,217,"rivate char[] copyData(int start, final int length) {"
False,src/java/org/apache/commons/codec/language/ColognePhonetic.java,src/java/org/apache/commons/codec/language/ColognePhonetic.java,218,har[] retData = new char[length];
False,src/java/org/apache/commons/codec/language/ColognePhonetic.java,src/java/org/apache/commons/codec/language/ColognePhonetic.java,220,"ystem.arraycopy(data, start, retData, 0, length);"
False,src/java/org/apache/commons/codec/language/ColognePhonetic.java,src/java/org/apache/commons/codec/language/ColognePhonetic.java,221,eturn retData;
True,src/java/org/apache/commons/codec/language/ColognePhonetic.java,src/java/org/apache/commons/codec/language/ColognePhonetic.java,205,"protected abstract char[] copyData(int start, final int length);"
False,src/java/org/apache/commons/codec/language/ColognePhonetic.java,src/java/org/apache/commons/codec/language/ColognePhonetic.java,224,ublic char getLast() {
False,src/java/org/apache/commons/codec/language/ColognePhonetic.java,src/java/org/apache/commons/codec/language/ColognePhonetic.java,225,eturn data[length - 1];
True,src/java/org/apache/commons/codec/language/ColognePhonetic.java,src/java/org/apache/commons/codec/language/ColognePhonetic.java,207,protected abstract CologneBuffer createCologneBuffer(char[] data);
False,src/java/org/apache/commons/codec/language/ColognePhonetic.java,src/java/org/apache/commons/codec/language/ColognePhonetic.java,228,ublic void putRight(char chr) {
False,src/java/org/apache/commons/codec/language/ColognePhonetic.java,src/java/org/apache/commons/codec/language/ColognePhonetic.java,229,ata[length] = chr;
False,src/java/org/apache/commons/codec/language/ColognePhonetic.java,src/java/org/apache/commons/codec/language/ColognePhonetic.java,230,ength++;
True,src/java/org/apache/commons/codec/language/ColognePhonetic.java,src/java/org/apache/commons/codec/language/ColognePhonetic.java,209,public int length() {
True,src/java/org/apache/commons/codec/language/ColognePhonetic.java,src/java/org/apache/commons/codec/language/ColognePhonetic.java,210,return length;
False,src/java/org/apache/commons/codec/language/ColognePhonetic.java,src/java/org/apache/commons/codec/language/ColognePhonetic.java,233,ublic char dropLast() {
False,src/java/org/apache/commons/codec/language/ColognePhonetic.java,src/java/org/apache/commons/codec/language/ColognePhonetic.java,234,ength--;
False,src/java/org/apache/commons/codec/language/ColognePhonetic.java,src/java/org/apache/commons/codec/language/ColognePhonetic.java,235,eturn data[length];
True,src/java/org/apache/commons/codec/language/ColognePhonetic.java,src/java/org/apache/commons/codec/language/ColognePhonetic.java,213,"public CharSequence subSequence(int start, int end) {"
True,src/java/org/apache/commons/codec/language/ColognePhonetic.java,src/java/org/apache/commons/codec/language/ColognePhonetic.java,214,final int length = end - start;
True,src/java/org/apache/commons/codec/language/ColognePhonetic.java,src/java/org/apache/commons/codec/language/ColognePhonetic.java,215,"char[] newData = copyData(start, length);"
True,src/java/org/apache/commons/codec/language/ColognePhonetic.java,src/java/org/apache/commons/codec/language/ColognePhonetic.java,216,return createCologneBuffer(newData);
False,src/java/org/apache/commons/codec/language/ColognePhonetic.java,src/java/org/apache/commons/codec/language/ColognePhonetic.java,243,rivate class CologneRightBuffer implements CharSequence {
True,src/java/org/apache/commons/codec/language/ColognePhonetic.java,src/java/org/apache/commons/codec/language/ColognePhonetic.java,224,private class CologneLeftBuffer extends CologneBuffer {
False,src/java/org/apache/commons/codec/language/ColognePhonetic.java,src/java/org/apache/commons/codec/language/ColognePhonetic.java,245,rivate int length = 0;
False,src/java/org/apache/commons/codec/language/ColognePhonetic.java,src/java/org/apache/commons/codec/language/ColognePhonetic.java,246,rivate final char[] data;
True,src/java/org/apache/commons/codec/language/ColognePhonetic.java,src/java/org/apache/commons/codec/language/ColognePhonetic.java,226,public CologneLeftBuffer(char[] data) {
True,src/java/org/apache/commons/codec/language/ColognePhonetic.java,src/java/org/apache/commons/codec/language/ColognePhonetic.java,227,super(data);
False,src/java/org/apache/commons/codec/language/ColognePhonetic.java,src/java/org/apache/commons/codec/language/ColognePhonetic.java,248,ublic CologneRightBuffer(int buffSize) {
False,src/java/org/apache/commons/codec/language/ColognePhonetic.java,src/java/org/apache/commons/codec/language/ColognePhonetic.java,249,ata = new char[buffSize];
True,src/java/org/apache/commons/codec/language/ColognePhonetic.java,src/java/org/apache/commons/codec/language/ColognePhonetic.java,230,public CologneLeftBuffer(int buffSize) {
True,src/java/org/apache/commons/codec/language/ColognePhonetic.java,src/java/org/apache/commons/codec/language/ColognePhonetic.java,231,super(buffSize);
False,src/java/org/apache/commons/codec/language/ColognePhonetic.java,src/java/org/apache/commons/codec/language/ColognePhonetic.java,252,ublic CologneRightBuffer(char[] data) {
False,src/java/org/apache/commons/codec/language/ColognePhonetic.java,src/java/org/apache/commons/codec/language/ColognePhonetic.java,253,his.data = data;
False,src/java/org/apache/commons/codec/language/ColognePhonetic.java,src/java/org/apache/commons/codec/language/ColognePhonetic.java,254,his.length = data.length;
True,src/java/org/apache/commons/codec/language/ColognePhonetic.java,src/java/org/apache/commons/codec/language/ColognePhonetic.java,234,"protected char[] copyData(int start, final int length) {"
True,src/java/org/apache/commons/codec/language/ColognePhonetic.java,src/java/org/apache/commons/codec/language/ColognePhonetic.java,235,char[] retData = new char[length];
True,src/java/org/apache/commons/codec/language/ColognePhonetic.java,src/java/org/apache/commons/codec/language/ColognePhonetic.java,236,"System.arraycopy(data, start, retData, 0, length);"
True,src/java/org/apache/commons/codec/language/ColognePhonetic.java,src/java/org/apache/commons/codec/language/ColognePhonetic.java,237,return retData;
False,src/java/org/apache/commons/codec/language/ColognePhonetic.java,src/java/org/apache/commons/codec/language/ColognePhonetic.java,257,ublic int length() {
False,src/java/org/apache/commons/codec/language/ColognePhonetic.java,src/java/org/apache/commons/codec/language/ColognePhonetic.java,258,eturn length;
True,src/java/org/apache/commons/codec/language/ColognePhonetic.java,src/java/org/apache/commons/codec/language/ColognePhonetic.java,240,protected CologneBuffer createCologneBuffer(char[] data) {
True,src/java/org/apache/commons/codec/language/ColognePhonetic.java,src/java/org/apache/commons/codec/language/ColognePhonetic.java,241,return new CologneLeftBuffer(data);
False,src/java/org/apache/commons/codec/language/ColognePhonetic.java,src/java/org/apache/commons/codec/language/ColognePhonetic.java,261,ublic char charAt(int index) {
False,src/java/org/apache/commons/codec/language/ColognePhonetic.java,src/java/org/apache/commons/codec/language/ColognePhonetic.java,262,f (index < length) {
False,src/java/org/apache/commons/codec/language/ColognePhonetic.java,src/java/org/apache/commons/codec/language/ColognePhonetic.java,263,eturn data[data.length - length + index];
False,src/java/org/apache/commons/codec/language/ColognePhonetic.java,src/java/org/apache/commons/codec/language/ColognePhonetic.java,264, else {
False,src/java/org/apache/commons/codec/language/ColognePhonetic.java,src/java/org/apache/commons/codec/language/ColognePhonetic.java,265,hrow new IndexOutOfBoundsException();
True,src/java/org/apache/commons/codec/language/ColognePhonetic.java,src/java/org/apache/commons/codec/language/ColognePhonetic.java,244,public void putRight(char chr) {
True,src/java/org/apache/commons/codec/language/ColognePhonetic.java,src/java/org/apache/commons/codec/language/ColognePhonetic.java,245,data[length] = chr;
True,src/java/org/apache/commons/codec/language/ColognePhonetic.java,src/java/org/apache/commons/codec/language/ColognePhonetic.java,246,length++;
False,src/java/org/apache/commons/codec/language/ColognePhonetic.java,src/java/org/apache/commons/codec/language/ColognePhonetic.java,269,"ublic CharSequence subSequence(int start, int end) {"
False,src/java/org/apache/commons/codec/language/ColognePhonetic.java,src/java/org/apache/commons/codec/language/ColognePhonetic.java,270,inal int length = end - start;
False,src/java/org/apache/commons/codec/language/ColognePhonetic.java,src/java/org/apache/commons/codec/language/ColognePhonetic.java,271,"har[] newData = copyData(start, length);"
True,src/java/org/apache/commons/codec/language/ColognePhonetic.java,src/java/org/apache/commons/codec/language/ColognePhonetic.java,250,private class CologneRightBuffer extends CologneBuffer {
False,src/java/org/apache/commons/codec/language/ColognePhonetic.java,src/java/org/apache/commons/codec/language/ColognePhonetic.java,273,eturn new CologneRightBuffer(newData);
True,src/java/org/apache/commons/codec/language/ColognePhonetic.java,src/java/org/apache/commons/codec/language/ColognePhonetic.java,252,public CologneRightBuffer(char[] data) {
True,src/java/org/apache/commons/codec/language/ColognePhonetic.java,src/java/org/apache/commons/codec/language/ColognePhonetic.java,253,super(data);
False,src/java/org/apache/commons/codec/language/ColognePhonetic.java,src/java/org/apache/commons/codec/language/ColognePhonetic.java,276,"rivate char[] copyData(int start, final int length) {"
True,src/java/org/apache/commons/codec/language/ColognePhonetic.java,src/java/org/apache/commons/codec/language/ColognePhonetic.java,256,"protected char[] copyData(int start, final int length) {"
False,src/java/org/apache/commons/codec/language/ColognePhonetic.java,src/java/org/apache/commons/codec/language/ColognePhonetic.java,279,"ystem.arraycopy(data, data.length - this.length + start, newData,"
False,src/java/org/apache/commons/codec/language/ColognePhonetic.java,src/java/org/apache/commons/codec/language/ColognePhonetic.java,280,", length);"
True,src/java/org/apache/commons/codec/language/ColognePhonetic.java,src/java/org/apache/commons/codec/language/ColognePhonetic.java,258,"System.arraycopy(data, data.length - this.length + start, newData, 0, length);"
False,src/java/org/apache/commons/codec/language/ColognePhonetic.java,src/java/org/apache/commons/codec/language/ColognePhonetic.java,284,ublic void putLeft(char chr) {
False,src/java/org/apache/commons/codec/language/ColognePhonetic.java,src/java/org/apache/commons/codec/language/ColognePhonetic.java,285,ength++;
False,src/java/org/apache/commons/codec/language/ColognePhonetic.java,src/java/org/apache/commons/codec/language/ColognePhonetic.java,286,ata[data.length - length] = chr;
False,src/java/org/apache/commons/codec/language/ColognePhonetic.java,src/java/org/apache/commons/codec/language/ColognePhonetic.java,289,ublic char getNext() {
False,src/java/org/apache/commons/codec/language/ColognePhonetic.java,src/java/org/apache/commons/codec/language/ColognePhonetic.java,290,eturn data[data.length - length];
True,src/java/org/apache/commons/codec/language/ColognePhonetic.java,src/java/org/apache/commons/codec/language/ColognePhonetic.java,262,protected CologneBuffer createCologneBuffer(char[] data) {
True,src/java/org/apache/commons/codec/language/ColognePhonetic.java,src/java/org/apache/commons/codec/language/ColognePhonetic.java,263,return new CologneRightBuffer(data);
False,src/java/org/apache/commons/codec/language/ColognePhonetic.java,src/java/org/apache/commons/codec/language/ColognePhonetic.java,294,har ret = data[data.length - length];
True,src/java/org/apache/commons/codec/language/ColognePhonetic.java,src/java/org/apache/commons/codec/language/ColognePhonetic.java,267,char ch = data[data.length - length];
False,src/java/org/apache/commons/codec/language/ColognePhonetic.java,src/java/org/apache/commons/codec/language/ColognePhonetic.java,297,eturn ret;
True,src/java/org/apache/commons/codec/language/ColognePhonetic.java,src/java/org/apache/commons/codec/language/ColognePhonetic.java,269,return ch;
False,src/java/org/apache/commons/codec/language/ColognePhonetic.java,src/java/org/apache/commons/codec/language/ColognePhonetic.java,300,ublic String toString() {
False,src/java/org/apache/commons/codec/language/ColognePhonetic.java,src/java/org/apache/commons/codec/language/ColognePhonetic.java,301,"eturn new String(copyData(0, length));"
True,src/java/org/apache/commons/codec/language/ColognePhonetic.java,src/java/org/apache/commons/codec/language/ColognePhonetic.java,272,public char getNext() {
True,src/java/org/apache/commons/codec/language/ColognePhonetic.java,src/java/org/apache/commons/codec/language/ColognePhonetic.java,273,return data[data.length - length];
True,src/java/org/apache/commons/codec/language/ColognePhonetic.java,src/java/org/apache/commons/codec/language/ColognePhonetic.java,276,public void putLeft(char ch) {
True,src/java/org/apache/commons/codec/language/ColognePhonetic.java,src/java/org/apache/commons/codec/language/ColognePhonetic.java,277,length++;
True,src/java/org/apache/commons/codec/language/ColognePhonetic.java,src/java/org/apache/commons/codec/language/ColognePhonetic.java,278,data[data.length - length] = ch;
