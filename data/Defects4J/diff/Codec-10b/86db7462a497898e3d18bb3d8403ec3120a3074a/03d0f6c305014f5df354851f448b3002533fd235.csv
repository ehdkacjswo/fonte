is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,104,rivate static final byte[] STANDARD_ENCODE_TABLE = {
True,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,104,private static final byte[] BASE32_ENCODE_TABLE = {
True,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,111,"* This array is a lookup table that translates 5-bit positive integer index values into their ""Base32 Hex Alphabet"""
True,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,112,* equivalents as specified in Table 3 of RFC 2045.
True,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,114,private static final byte[] BASE32HEX_ENCODE_TABLE = {
True,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,115,"'0', '1', '2', '3', '4', '5', '6', '7', '8', '9',"
True,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,116,"'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M',"
True,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,117,"'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V',"
False,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,121,rivate static final byte[] DECODE_TABLE = {
True,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,131,private static final byte[] BASE32_DECODE_TABLE = {
True,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,142,"* This array is a lookup table that translates Unicode characters drawn from the ""Base32 |Hex Alphabet"" (as specified in"
True,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,143,* Table 3 of RFC 2045) into their 5-bit positive integer equivalents. Characters that are not in the Base32 Hex
True,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,144,* alphabet but fall within the bounds of the array are translated to -1.
True,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,147,private static final byte[] BASE32HEX_DECODE_TABLE = {
True,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,148,//  0   1   2   3   4   5   6   7   8   9   A   B   C   D   E   F
True,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,149,"-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, // 00-0f"
True,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,150,"-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, // 10-1f"
True,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,151,"-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, // 20-2f"
True,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,152,"0,  1,  2,  3,  4,  5,  6,  7,  8,  9, -1, -1, -1, -1, -1, -1, // 30-3f 2-7"
True,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,153,"-1, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, // 40-4f A-N"
True,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,154,"25, 26, 27, 28, 29, 30, 31, 32,                                 // 50-57 O-V"
True,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,172,private final byte[] decodeTable; // need different decode table to support Hex version
False,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,218,his(0);
True,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,246,this(false);
True,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,250,* Creates a Base32 codec used for decoding and encoding.
True,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,251,* <p>
True,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,252,* When encoding the line length is 0 (no chunking).
True,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,253,* </p>
True,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,254,* @param useHex if <code>true</code> then use Base32 Hex alphabet
True,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,256,public Base32(boolean useHex) {
True,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,257,"this(0, null, useHex);"
True,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,292,"this(lineLength, lineSeparator, false);"
True,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,296,* Creates a Base32 / Base32 Hex codec used for decoding and encoding.
True,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,297,* <p>
True,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,298,* When encoding the line length and line separator are given in the constructor.
True,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,299,* </p>
True,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,300,* <p>
True,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,301,* Line lengths that aren't multiples of 8 will still essentially end up being multiples of 8 in the encoded data.
True,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,302,* </p>
True,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,304,* @param lineLength
True,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,305,*            Each line of encoded data will be at most of the given length (rounded down to nearest multiple of 8).
True,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,306,"*            If lineLength <= 0, then the output will not be divided into lines (chunks). Ignored when decoding."
True,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,307,* @param lineSeparator
True,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,308,*            Each line of encoded data will end with this sequence of bytes.
True,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,309,"* @param useHex if <code>true</code>, then use Base32 Hex alphabet, otherwise use Base32 alphabet"
True,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,310,* @throws IllegalArgumentException
True,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,311,*             The provided lineSeparator included some Base32 characters. That's not going to work!
True,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,313,"public Base32(int lineLength, byte[] lineSeparator, boolean useHex) {"
False,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,270,"his.encodeTable = STANDARD_ENCODE_TABLE; // TODO - encodeTable could perhaps be removed, but might be useful if merging with Base64"
True,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,331,if (useHex){
True,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,332,this.encodeTable = BASE32HEX_ENCODE_TABLE;
True,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,333,this.decodeTable = BASE32HEX_DECODE_TABLE;
True,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,334,} else {
True,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,335,this.encodeTable = BASE32_ENCODE_TABLE;
True,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,336,this.decodeTable = BASE32_DECODE_TABLE;
False,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,473,f (b >= 0 && b < DECODE_TABLE.length) {
False,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,474,nt result = DECODE_TABLE[b];
True,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,540,if (b >= 0 && b < this.decodeTable.length) {
True,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,541,int result = this.decodeTable[b];
False,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,542,eturn octet == PAD || (octet >= 0 && octet < DECODE_TABLE.length && DECODE_TABLE[octet] != -1);
True,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,609,return octet == PAD || (octet >= 0 && octet < BASE32_DECODE_TABLE.length && BASE32_DECODE_TABLE[octet] != -1);
True,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,613,* Returns whether or not the <code>octet</code> is in the Base32 Hex alphabet.
True,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,615,* @param octet
True,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,616,*            The value to test
True,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,617,"* @return <code>true</code> if the value is defined in the the Base32 Hex alphabet (or pad), <code>false</code> otherwise."
True,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,619,public static boolean isBase32Hex(byte octet) {
True,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,620,return octet == PAD || (octet >= 0 && octet < BASE32HEX_DECODE_TABLE.length && BASE32HEX_DECODE_TABLE[octet] != -1);
True,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,694,* Encodes binary data using the Base32 algorithm but does not chunk the output.
True,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,696,* @param binaryData
True,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,697,*            binary data to encode
True,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,698,* @return String containing Base32Hex characters.
True,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,700,public static String encodeBase32HexString(byte[] binaryData) {
True,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,701,"return StringUtils.newStringUtf8(encodeBase32Hex(binaryData, false));"
False,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,652, @since 1.4
True,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,781,"* Encodes binary data using the Base32 Hex algorithm, optionally chunking the output into 76 character blocks."
True,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,783,* @param binaryData
True,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,784,*            Array containing binary data to encode.
True,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,785,* @param isChunked
True,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,786,*            if <code>true</code> this encoder will chunk the Base32 output into 76 character blocks
True,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,787,* @return Base32Hex-encoded data.
True,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,788,* @throws IllegalArgumentException
True,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,789,*             Thrown when the input array needs an output array bigger than {@link Integer#MAX_VALUE}
True,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,791,"public static byte[] encodeBase32Hex(byte[] binaryData, boolean isChunked) {"
True,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,792,"return encodeBase32Hex(binaryData, isChunked, Integer.MAX_VALUE);"
False,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,704, @since 1.4
False,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,719,"ase32 b64 = isChunked ? new Base32(MIME_CHUNK_SIZE, CHUNK_SEPARATOR) : new Base32(0, CHUNK_SEPARATOR);"
True,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,821,"Base32 b64 = isChunked ? new Base32(MIME_CHUNK_SIZE, CHUNK_SEPARATOR) : new Base32();"
True,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,822,return b64.encode(binaryData);
True,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,826,"* Encodes binary data using the Base32Hex algorithm, optionally chunking the output into 76 character blocks."
True,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,828,* @param binaryData
True,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,829,*            Array containing binary data to encode.
True,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,830,* @param isChunked
True,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,831,*            if <code>true</code> this encoder will chunk the Base32 output into 76 character blocks
True,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,832,* @param maxResultSize
True,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,833,*            The maximum result size to accept.
True,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,834,* @return Base32Hex-encoded data.
True,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,835,* @throws IllegalArgumentException
True,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,836,*             Thrown when the input array needs an output array bigger than maxResultSize
True,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,838,"public static byte[] encodeBase32Hex(byte[] binaryData, boolean isChunked, int maxResultSize) {"
True,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,839,if (binaryData == null || binaryData.length == 0) {
True,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,840,return binaryData;
True,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,843,"long len = getEncodeLength(binaryData, MIME_CHUNK_SIZE, CHUNK_SEPARATOR);"
True,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,844,if (len > maxResultSize) {
True,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,845,"throw new IllegalArgumentException(""Input array too big, the output array would be bigger ("" +"
True,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,846,len +
True,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,847,""") than the specified maxium size of "" +"
True,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,848,maxResultSize);
True,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,851,"Base32 b64 = isChunked ? new Base32(MIME_CHUNK_SIZE, CHUNK_SEPARATOR, true) : new Base32(true);"
True,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,878,* Decodes a Base32 Hex String into octets
True,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,880,* @param base32HexString
True,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,881,*            String containing Base32Hex data
True,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,882,* @return Array containing decoded data.
True,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,884,public static byte[] decodeBase32Hex(String base32HexString) {
True,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,885,return new Base32(true).decode(base32HexString);
True,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,889,* Decodes Base32 Hex data into octets
True,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,891,* @param base32HexData
True,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,892,*            Byte array containing Base32Hex data
True,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,893,* @return Array containing decoded data.
True,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,895,public static byte[] decodeBase32Hex(byte[] base32HexData) {
True,src/java/org/apache/commons/codec/binary/Base32.java,src/java/org/apache/commons/codec/binary/Base32.java,896,return new Base32(true).decode(base32HexData);
False,src/test/org/apache/commons/codec/binary/Base32Test.java,src/test/org/apache/commons/codec/binary/Base32Test.java,54,"/                assertEquals(BASE32HEX_TEST_CASES[i][1], Base32.encodeBase32HexString(BASE32HEX_TEST_CASES[i][0].getBytes(""UTF-8"")));"
True,src/test/org/apache/commons/codec/binary/Base32Test.java,src/test/org/apache/commons/codec/binary/Base32Test.java,54,"assertEquals(BASE32HEX_TEST_CASES[i][1], Base32.encodeBase32HexString(BASE32HEX_TEST_CASES[i][0].getBytes(""UTF-8"")));"
