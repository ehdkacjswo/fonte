is_addition,old_file_path,new_file_path,line_num,content
False,src/test/org/apache/commons/math/distribution/ChiSquareDistributionTest.java,src/test/org/apache/commons/math/distribution/ChiSquareDistributionTest.java,19,mport org.apache.commons.math.MathException;
False,src/test/org/apache/commons/math/distribution/ChiSquareDistributionTest.java,src/test/org/apache/commons/math/distribution/ChiSquareDistributionTest.java,24, @version $Revision: 1.13 $ $Date: 2004/02/21 21:35:17 $
True,src/test/org/apache/commons/math/distribution/ChiSquareDistributionTest.java,src/test/org/apache/commons/math/distribution/ChiSquareDistributionTest.java,22,* @version $Revision: 1.14 $ $Date: 2004/05/23 21:34:19 $
False,src/test/org/apache/commons/math/distribution/ChiSquareDistributionTest.java,src/test/org/apache/commons/math/distribution/ChiSquareDistributionTest.java,53,ublic void testLowerTailProbability(){
True,src/test/org/apache/commons/math/distribution/ChiSquareDistributionTest.java,src/test/org/apache/commons/math/distribution/ChiSquareDistributionTest.java,51,public void testLowerTailProbability() throws Exception {
False,src/test/org/apache/commons/math/distribution/ChiSquareDistributionTest.java,src/test/org/apache/commons/math/distribution/ChiSquareDistributionTest.java,61,ublic void testUpperTailProbability(){
True,src/test/org/apache/commons/math/distribution/ChiSquareDistributionTest.java,src/test/org/apache/commons/math/distribution/ChiSquareDistributionTest.java,59,public void testUpperTailProbability() throws Exception {
False,src/test/org/apache/commons/math/distribution/ChiSquareDistributionTest.java,src/test/org/apache/commons/math/distribution/ChiSquareDistributionTest.java,69,ublic void testLowerTailValues(){
True,src/test/org/apache/commons/math/distribution/ChiSquareDistributionTest.java,src/test/org/apache/commons/math/distribution/ChiSquareDistributionTest.java,67,public void testLowerTailValues() throws Exception {
False,src/test/org/apache/commons/math/distribution/ChiSquareDistributionTest.java,src/test/org/apache/commons/math/distribution/ChiSquareDistributionTest.java,77,ublic void testUpperTailValues(){
True,src/test/org/apache/commons/math/distribution/ChiSquareDistributionTest.java,src/test/org/apache/commons/math/distribution/ChiSquareDistributionTest.java,75,public void testUpperTailValues() throws Exception {
False,src/test/org/apache/commons/math/distribution/ChiSquareDistributionTest.java,src/test/org/apache/commons/math/distribution/ChiSquareDistributionTest.java,85,"rivate void testProbability(double x, double expected){"
False,src/test/org/apache/commons/math/distribution/ChiSquareDistributionTest.java,src/test/org/apache/commons/math/distribution/ChiSquareDistributionTest.java,86,ry {
False,src/test/org/apache/commons/math/distribution/ChiSquareDistributionTest.java,src/test/org/apache/commons/math/distribution/ChiSquareDistributionTest.java,87,ouble actual = chiSquare.cumulativeProbability(x);
False,src/test/org/apache/commons/math/distribution/ChiSquareDistributionTest.java,src/test/org/apache/commons/math/distribution/ChiSquareDistributionTest.java,88,"ssertEquals(""probability for "" + x, expected, actual, 10e-4);"
False,src/test/org/apache/commons/math/distribution/ChiSquareDistributionTest.java,src/test/org/apache/commons/math/distribution/ChiSquareDistributionTest.java,89, catch (MathException e) {
False,src/test/org/apache/commons/math/distribution/ChiSquareDistributionTest.java,src/test/org/apache/commons/math/distribution/ChiSquareDistributionTest.java,90,.printStackTrace();
True,src/test/org/apache/commons/math/distribution/ChiSquareDistributionTest.java,src/test/org/apache/commons/math/distribution/ChiSquareDistributionTest.java,83,"private void testProbability(double x, double expected) throws Exception {"
True,src/test/org/apache/commons/math/distribution/ChiSquareDistributionTest.java,src/test/org/apache/commons/math/distribution/ChiSquareDistributionTest.java,84,double actual = chiSquare.cumulativeProbability(x);
True,src/test/org/apache/commons/math/distribution/ChiSquareDistributionTest.java,src/test/org/apache/commons/math/distribution/ChiSquareDistributionTest.java,85,"assertEquals(""probability for "" + x, expected, actual, 10e-4);"
False,src/test/org/apache/commons/math/distribution/ChiSquareDistributionTest.java,src/test/org/apache/commons/math/distribution/ChiSquareDistributionTest.java,95,"rivate void testValue(double p, double expected){"
False,src/test/org/apache/commons/math/distribution/ChiSquareDistributionTest.java,src/test/org/apache/commons/math/distribution/ChiSquareDistributionTest.java,96,ry {
False,src/test/org/apache/commons/math/distribution/ChiSquareDistributionTest.java,src/test/org/apache/commons/math/distribution/ChiSquareDistributionTest.java,97,ouble actual = chiSquare.inverseCumulativeProbability(p);
False,src/test/org/apache/commons/math/distribution/ChiSquareDistributionTest.java,src/test/org/apache/commons/math/distribution/ChiSquareDistributionTest.java,98,"ssertEquals(""value for "" + p, expected, actual, 10e-4);"
False,src/test/org/apache/commons/math/distribution/ChiSquareDistributionTest.java,src/test/org/apache/commons/math/distribution/ChiSquareDistributionTest.java,99, catch (MathException e) {
False,src/test/org/apache/commons/math/distribution/ChiSquareDistributionTest.java,src/test/org/apache/commons/math/distribution/ChiSquareDistributionTest.java,100,.printStackTrace();
True,src/test/org/apache/commons/math/distribution/ChiSquareDistributionTest.java,src/test/org/apache/commons/math/distribution/ChiSquareDistributionTest.java,88,"private void testValue(double p, double expected) throws Exception {"
True,src/test/org/apache/commons/math/distribution/ChiSquareDistributionTest.java,src/test/org/apache/commons/math/distribution/ChiSquareDistributionTest.java,89,double actual = chiSquare.inverseCumulativeProbability(p);
True,src/test/org/apache/commons/math/distribution/ChiSquareDistributionTest.java,src/test/org/apache/commons/math/distribution/ChiSquareDistributionTest.java,90,"assertEquals(""value for "" + p, expected, actual, 10e-4);"
False,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,18,mport org.apache.commons.math.MathException;
False,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,24, @version $Revision: 1.13 $ $Date: 2004/05/23 00:33:40 $
True,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,23,* @version $Revision: 1.14 $ $Date: 2004/05/23 21:34:19 $
False,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,55,ublic void testInverseCumulativeProbability001() {
True,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,54,public void testInverseCumulativeProbability001() throws Exception {
False,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,59,ublic void testInverseCumulativeProbability010() {
True,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,58,public void testInverseCumulativeProbability010() throws Exception {
False,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,63,ublic void testInverseCumulativeProbability025() {
True,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,62,public void testInverseCumulativeProbability025() throws Exception {
False,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,67,ublic void testInverseCumulativeProbability050() {
True,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,66,public void testInverseCumulativeProbability050() throws Exception {
False,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,71,ublic void testInverseCumulativeProbability100() {
True,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,70,public void testInverseCumulativeProbability100() throws Exception {
False,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,75,ublic void testInverseCumulativeProbability999() {
True,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,74,public void testInverseCumulativeProbability999() throws Exception {
False,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,79,ublic void testInverseCumulativeProbability990() {
True,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,78,public void testInverseCumulativeProbability990() throws Exception {
False,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,83,ublic void testInverseCumulativeProbability975() {
True,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,82,public void testInverseCumulativeProbability975() throws Exception {
False,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,87,ublic void testInverseCumulativeProbability950() {
True,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,86,public void testInverseCumulativeProbability950() throws Exception {
False,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,91,ublic void testInverseCumulativeProbability900() {
True,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,90,public void testInverseCumulativeProbability900() throws Exception {
False,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,95,ublic void testCumulativeProbability001() {
True,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,94,public void testCumulativeProbability001() throws Exception {
False,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,99,ublic void testCumulativeProbability010() {
True,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,98,public void testCumulativeProbability010() throws Exception {
False,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,103,ublic void testCumulativeProbability025() {
True,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,102,public void testCumulativeProbability025() throws Exception {
False,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,107,ublic void testCumulativeProbability050() {
True,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,106,public void testCumulativeProbability050() throws Exception {
False,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,111,ublic void testCumulativeProbability100() {
True,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,110,public void testCumulativeProbability100() throws Exception {
False,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,115,ublic void testCumulativeProbability999() {
True,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,114,public void testCumulativeProbability999() throws Exception {
False,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,119,ublic void testCumulativeProbability990() {
True,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,118,public void testCumulativeProbability990() throws Exception {
False,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,123,ublic void testCumulativeProbability975() {
True,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,122,public void testCumulativeProbability975() throws Exception {
False,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,127,ublic void testCumulativeProbability950() {
True,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,126,public void testCumulativeProbability950() throws Exception {
False,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,131,ublic void testCumulativeProbability900() {
True,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,130,public void testCumulativeProbability900() throws Exception {
False,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,135,ublic void testCumulativeProbabilityNegative() {
True,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,134,public void testCumulativeProbabilityNegative() throws Exception {
False,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,139,ublic void testCumulativeProbabilityZero() {
True,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,138,public void testCumulativeProbabilityZero() throws Exception {
False,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,143,ublic void testInverseCumulativeProbabilityNegative() {
True,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,142,public void testInverseCumulativeProbabilityNegative() throws Exception {
False,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,147,ublic void testInverseCumulativeProbabilityZero() {
True,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,146,public void testInverseCumulativeProbabilityZero() throws Exception {
False,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,151,ublic void testInverseCumulativeProbabilityOne() {
True,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,150,public void testInverseCumulativeProbabilityOne() throws Exception {
False,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,155,ublic void testInverseCumulativeProbabilityPositive() {
True,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,154,public void testInverseCumulativeProbabilityPositive() throws Exception {
False,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,159,ublic void testCumulativeProbability2() {
False,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,160,ry {
False,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,161,"ouble actual = exp.cumulativeProbability(0.25, 0.75);"
False,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,162,"ssertEquals(0.0905214, actual, 10e-4);"
False,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,163, catch (MathException e) {
False,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,164,.printStackTrace();
True,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,158,public void testCumulativeProbability2() throws Exception {
True,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,159,"double actual = exp.cumulativeProbability(0.25, 0.75);"
True,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,160,"assertEquals(0.0905214, actual, 10e-4);"
False,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,169,"rivate void testProbability(double x, double expected) {"
False,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,170,ry {
False,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,171,ouble actual = exp.cumulativeProbability(x);
False,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,172,"estUtils.assertEquals(expected, actual, 10e-4);"
False,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,173, catch (MathException e) {
False,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,174,.printStackTrace();
True,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,163,"private void testProbability(double x, double expected) throws Exception {"
True,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,164,double actual = exp.cumulativeProbability(x);
True,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,165,"TestUtils.assertEquals(expected, actual, 10e-4);"
False,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,178,"rivate void testValue(double expected, double p) {"
False,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,179,ry {
False,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,180,ouble actual = exp.inverseCumulativeProbability(p);
False,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,181,"estUtils.assertEquals(expected, actual, 10e-4);"
False,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,182, catch (MathException e) {
False,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,183,.printStackTrace();
True,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,168,"private void testValue(double expected, double p) throws Exception {"
True,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,169,double actual = exp.inverseCumulativeProbability(p);
True,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java,170,"TestUtils.assertEquals(expected, actual, 10e-4);"
False,src/test/org/apache/commons/math/distribution/FDistributionTest.java,src/test/org/apache/commons/math/distribution/FDistributionTest.java,18,mport org.apache.commons.math.MathException;
False,src/test/org/apache/commons/math/distribution/FDistributionTest.java,src/test/org/apache/commons/math/distribution/FDistributionTest.java,23, @version $Revision: 1.12 $ $Date: 2004/05/23 00:33:40 $
True,src/test/org/apache/commons/math/distribution/FDistributionTest.java,src/test/org/apache/commons/math/distribution/FDistributionTest.java,21,* @version $Revision: 1.13 $ $Date: 2004/05/23 21:34:19 $
False,src/test/org/apache/commons/math/distribution/FDistributionTest.java,src/test/org/apache/commons/math/distribution/FDistributionTest.java,52,ublic void testLowerTailProbability() {
True,src/test/org/apache/commons/math/distribution/FDistributionTest.java,src/test/org/apache/commons/math/distribution/FDistributionTest.java,50,public void testLowerTailProbability() throws Exception {
False,src/test/org/apache/commons/math/distribution/FDistributionTest.java,src/test/org/apache/commons/math/distribution/FDistributionTest.java,59,ublic void testUpperTailProbability() {
True,src/test/org/apache/commons/math/distribution/FDistributionTest.java,src/test/org/apache/commons/math/distribution/FDistributionTest.java,57,public void testUpperTailProbability() throws Exception {
False,src/test/org/apache/commons/math/distribution/FDistributionTest.java,src/test/org/apache/commons/math/distribution/FDistributionTest.java,66,ublic void testLowerTailValues() {
True,src/test/org/apache/commons/math/distribution/FDistributionTest.java,src/test/org/apache/commons/math/distribution/FDistributionTest.java,64,public void testLowerTailValues() throws Exception {
False,src/test/org/apache/commons/math/distribution/FDistributionTest.java,src/test/org/apache/commons/math/distribution/FDistributionTest.java,73,ublic void testUpperTailValues() {
True,src/test/org/apache/commons/math/distribution/FDistributionTest.java,src/test/org/apache/commons/math/distribution/FDistributionTest.java,71,public void testUpperTailValues() throws Exception {
False,src/test/org/apache/commons/math/distribution/FDistributionTest.java,src/test/org/apache/commons/math/distribution/FDistributionTest.java,80,"rivate void testProbability(double x, double expected) {"
False,src/test/org/apache/commons/math/distribution/FDistributionTest.java,src/test/org/apache/commons/math/distribution/FDistributionTest.java,81,ry {
False,src/test/org/apache/commons/math/distribution/FDistributionTest.java,src/test/org/apache/commons/math/distribution/FDistributionTest.java,82,ouble actual = f.cumulativeProbability(x);
False,src/test/org/apache/commons/math/distribution/FDistributionTest.java,src/test/org/apache/commons/math/distribution/FDistributionTest.java,83,"ssertEquals(""probability for "" + x, expected, actual, 1e-3);"
False,src/test/org/apache/commons/math/distribution/FDistributionTest.java,src/test/org/apache/commons/math/distribution/FDistributionTest.java,84, catch (MathException e) {
False,src/test/org/apache/commons/math/distribution/FDistributionTest.java,src/test/org/apache/commons/math/distribution/FDistributionTest.java,85,.printStackTrace();
True,src/test/org/apache/commons/math/distribution/FDistributionTest.java,src/test/org/apache/commons/math/distribution/FDistributionTest.java,78,"private void testProbability(double x, double expected) throws Exception {"
True,src/test/org/apache/commons/math/distribution/FDistributionTest.java,src/test/org/apache/commons/math/distribution/FDistributionTest.java,79,double actual = f.cumulativeProbability(x);
True,src/test/org/apache/commons/math/distribution/FDistributionTest.java,src/test/org/apache/commons/math/distribution/FDistributionTest.java,80,"assertEquals(""probability for "" + x, expected, actual, 1e-3);"
False,src/test/org/apache/commons/math/distribution/FDistributionTest.java,src/test/org/apache/commons/math/distribution/FDistributionTest.java,89,"rivate void testValue(double expected, double p) {"
False,src/test/org/apache/commons/math/distribution/FDistributionTest.java,src/test/org/apache/commons/math/distribution/FDistributionTest.java,90,ry {
False,src/test/org/apache/commons/math/distribution/FDistributionTest.java,src/test/org/apache/commons/math/distribution/FDistributionTest.java,91,ouble actual = f.inverseCumulativeProbability(p);
False,src/test/org/apache/commons/math/distribution/FDistributionTest.java,src/test/org/apache/commons/math/distribution/FDistributionTest.java,92,"ssertEquals(""value for "" + p, expected, actual, 1e-2);"
False,src/test/org/apache/commons/math/distribution/FDistributionTest.java,src/test/org/apache/commons/math/distribution/FDistributionTest.java,93, catch (MathException e) {
False,src/test/org/apache/commons/math/distribution/FDistributionTest.java,src/test/org/apache/commons/math/distribution/FDistributionTest.java,94,.printStackTrace();
True,src/test/org/apache/commons/math/distribution/FDistributionTest.java,src/test/org/apache/commons/math/distribution/FDistributionTest.java,83,"private void testValue(double expected, double p) throws Exception {"
True,src/test/org/apache/commons/math/distribution/FDistributionTest.java,src/test/org/apache/commons/math/distribution/FDistributionTest.java,84,double actual = f.inverseCumulativeProbability(p);
True,src/test/org/apache/commons/math/distribution/FDistributionTest.java,src/test/org/apache/commons/math/distribution/FDistributionTest.java,85,"assertEquals(""value for "" + p, expected, actual, 1e-2);"
False,src/test/org/apache/commons/math/distribution/GammaDistributionTest.java,src/test/org/apache/commons/math/distribution/GammaDistributionTest.java,19,mport org.apache.commons.math.MathException;
False,src/test/org/apache/commons/math/distribution/GammaDistributionTest.java,src/test/org/apache/commons/math/distribution/GammaDistributionTest.java,24, @version $Revision: 1.15 $ $Date: 2004/05/23 00:33:40 $
True,src/test/org/apache/commons/math/distribution/GammaDistributionTest.java,src/test/org/apache/commons/math/distribution/GammaDistributionTest.java,22,* @version $Revision: 1.16 $ $Date: 2004/05/23 21:34:19 $
False,src/test/org/apache/commons/math/distribution/GammaDistributionTest.java,src/test/org/apache/commons/math/distribution/GammaDistributionTest.java,27,ublic void testProbabilities() {
True,src/test/org/apache/commons/math/distribution/GammaDistributionTest.java,src/test/org/apache/commons/math/distribution/GammaDistributionTest.java,25,public void testProbabilities() throws Exception {
False,src/test/org/apache/commons/math/distribution/GammaDistributionTest.java,src/test/org/apache/commons/math/distribution/GammaDistributionTest.java,35,ublic void testValues() {
True,src/test/org/apache/commons/math/distribution/GammaDistributionTest.java,src/test/org/apache/commons/math/distribution/GammaDistributionTest.java,33,public void testValues() throws Exception {
False,src/test/org/apache/commons/math/distribution/GammaDistributionTest.java,src/test/org/apache/commons/math/distribution/GammaDistributionTest.java,42,rivate void testProbability(
False,src/test/org/apache/commons/math/distribution/GammaDistributionTest.java,src/test/org/apache/commons/math/distribution/GammaDistributionTest.java,43,"ouble x,"
False,src/test/org/apache/commons/math/distribution/GammaDistributionTest.java,src/test/org/apache/commons/math/distribution/GammaDistributionTest.java,44,"ouble a,"
False,src/test/org/apache/commons/math/distribution/GammaDistributionTest.java,src/test/org/apache/commons/math/distribution/GammaDistributionTest.java,45,"ouble b,"
False,src/test/org/apache/commons/math/distribution/GammaDistributionTest.java,src/test/org/apache/commons/math/distribution/GammaDistributionTest.java,46,ouble expected) {
False,src/test/org/apache/commons/math/distribution/GammaDistributionTest.java,src/test/org/apache/commons/math/distribution/GammaDistributionTest.java,47,ry {
False,src/test/org/apache/commons/math/distribution/GammaDistributionTest.java,src/test/org/apache/commons/math/distribution/GammaDistributionTest.java,48,ouble actual =
False,src/test/org/apache/commons/math/distribution/GammaDistributionTest.java,src/test/org/apache/commons/math/distribution/GammaDistributionTest.java,49,istributionFactory
False,src/test/org/apache/commons/math/distribution/GammaDistributionTest.java,src/test/org/apache/commons/math/distribution/GammaDistributionTest.java,50,newInstance()
False,src/test/org/apache/commons/math/distribution/GammaDistributionTest.java,src/test/org/apache/commons/math/distribution/GammaDistributionTest.java,51,"createGammaDistribution(a, b)"
False,src/test/org/apache/commons/math/distribution/GammaDistributionTest.java,src/test/org/apache/commons/math/distribution/GammaDistributionTest.java,52,cumulativeProbability(x);
False,src/test/org/apache/commons/math/distribution/GammaDistributionTest.java,src/test/org/apache/commons/math/distribution/GammaDistributionTest.java,53,"ssertEquals(""probability for "" + x, expected, actual, 10e-4);"
False,src/test/org/apache/commons/math/distribution/GammaDistributionTest.java,src/test/org/apache/commons/math/distribution/GammaDistributionTest.java,54, catch (MathException e) {
False,src/test/org/apache/commons/math/distribution/GammaDistributionTest.java,src/test/org/apache/commons/math/distribution/GammaDistributionTest.java,55,.printStackTrace();
True,src/test/org/apache/commons/math/distribution/GammaDistributionTest.java,src/test/org/apache/commons/math/distribution/GammaDistributionTest.java,40,"private void testProbability(double x, double a, double b, double expected) throws Exception {"
True,src/test/org/apache/commons/math/distribution/GammaDistributionTest.java,src/test/org/apache/commons/math/distribution/GammaDistributionTest.java,41,DistributionFactory factory = DistributionFactory.newInstance();
True,src/test/org/apache/commons/math/distribution/GammaDistributionTest.java,src/test/org/apache/commons/math/distribution/GammaDistributionTest.java,42,"GammaDistribution distribution = factory.createGammaDistribution( a, b );"
True,src/test/org/apache/commons/math/distribution/GammaDistributionTest.java,src/test/org/apache/commons/math/distribution/GammaDistributionTest.java,43,double actual = distribution.cumulativeProbability(x);
True,src/test/org/apache/commons/math/distribution/GammaDistributionTest.java,src/test/org/apache/commons/math/distribution/GammaDistributionTest.java,44,"assertEquals(""probability for "" + x, expected, actual, 10e-4);"
False,src/test/org/apache/commons/math/distribution/GammaDistributionTest.java,src/test/org/apache/commons/math/distribution/GammaDistributionTest.java,59,"rivate void testValue(double expected, double a, double b, double p) {"
False,src/test/org/apache/commons/math/distribution/GammaDistributionTest.java,src/test/org/apache/commons/math/distribution/GammaDistributionTest.java,60,ry {
False,src/test/org/apache/commons/math/distribution/GammaDistributionTest.java,src/test/org/apache/commons/math/distribution/GammaDistributionTest.java,61,ouble actual =
False,src/test/org/apache/commons/math/distribution/GammaDistributionTest.java,src/test/org/apache/commons/math/distribution/GammaDistributionTest.java,62,istributionFactory
False,src/test/org/apache/commons/math/distribution/GammaDistributionTest.java,src/test/org/apache/commons/math/distribution/GammaDistributionTest.java,63,newInstance()
False,src/test/org/apache/commons/math/distribution/GammaDistributionTest.java,src/test/org/apache/commons/math/distribution/GammaDistributionTest.java,64,"createGammaDistribution(a, b)"
False,src/test/org/apache/commons/math/distribution/GammaDistributionTest.java,src/test/org/apache/commons/math/distribution/GammaDistributionTest.java,65,inverseCumulativeProbability(p);
False,src/test/org/apache/commons/math/distribution/GammaDistributionTest.java,src/test/org/apache/commons/math/distribution/GammaDistributionTest.java,66,"ssertEquals(""critical value for "" + p, expected, actual, 10e-4);"
False,src/test/org/apache/commons/math/distribution/GammaDistributionTest.java,src/test/org/apache/commons/math/distribution/GammaDistributionTest.java,67, catch (MathException e) {
False,src/test/org/apache/commons/math/distribution/GammaDistributionTest.java,src/test/org/apache/commons/math/distribution/GammaDistributionTest.java,68,.printStackTrace();
True,src/test/org/apache/commons/math/distribution/GammaDistributionTest.java,src/test/org/apache/commons/math/distribution/GammaDistributionTest.java,47,"private void testValue(double expected, double a, double b, double p) throws Exception {"
True,src/test/org/apache/commons/math/distribution/GammaDistributionTest.java,src/test/org/apache/commons/math/distribution/GammaDistributionTest.java,48,DistributionFactory factory = DistributionFactory.newInstance();
True,src/test/org/apache/commons/math/distribution/GammaDistributionTest.java,src/test/org/apache/commons/math/distribution/GammaDistributionTest.java,49,"GammaDistribution distribution = factory.createGammaDistribution( a, b );"
True,src/test/org/apache/commons/math/distribution/GammaDistributionTest.java,src/test/org/apache/commons/math/distribution/GammaDistributionTest.java,50,double actual = distribution.inverseCumulativeProbability(p);
True,src/test/org/apache/commons/math/distribution/GammaDistributionTest.java,src/test/org/apache/commons/math/distribution/GammaDistributionTest.java,51,"assertEquals(""critical value for "" + p, expected, actual, 10e-4);"
False,src/test/org/apache/commons/math/util/BeanTransformerTest.java,src/test/org/apache/commons/math/util/BeanTransformerTest.java,25, @version $Revision: 1.10 $ $Date: 2004/05/23 00:33:41 $
True,src/test/org/apache/commons/math/util/BeanTransformerTest.java,src/test/org/apache/commons/math/util/BeanTransformerTest.java,25,* @version $Revision: 1.11 $ $Date: 2004/05/23 21:34:19 $
False,src/test/org/apache/commons/math/util/BeanTransformerTest.java,src/test/org/apache/commons/math/util/BeanTransformerTest.java,73,ublic void testTransform() {
True,src/test/org/apache/commons/math/util/BeanTransformerTest.java,src/test/org/apache/commons/math/util/BeanTransformerTest.java,73,public void testTransform() throws Exception {
False,src/test/org/apache/commons/math/util/BeanTransformerTest.java,src/test/org/apache/commons/math/util/BeanTransformerTest.java,77,ry {
False,src/test/org/apache/commons/math/util/BeanTransformerTest.java,src/test/org/apache/commons/math/util/BeanTransformerTest.java,78,alue = b.transform(target);
False,src/test/org/apache/commons/math/util/BeanTransformerTest.java,src/test/org/apache/commons/math/util/BeanTransformerTest.java,79, catch (MathException e) {
False,src/test/org/apache/commons/math/util/BeanTransformerTest.java,src/test/org/apache/commons/math/util/BeanTransformerTest.java,80,.printStackTrace();
True,src/test/org/apache/commons/math/util/BeanTransformerTest.java,src/test/org/apache/commons/math/util/BeanTransformerTest.java,77,value = b.transform(target);
False,src/test/org/apache/commons/math/util/BeanTransformerTest.java,src/test/org/apache/commons/math/util/BeanTransformerTest.java,88,ublic void testTransformInvalidType(){
True,src/test/org/apache/commons/math/util/BeanTransformerTest.java,src/test/org/apache/commons/math/util/BeanTransformerTest.java,84,public void testTransformInvalidType() throws Exception {
False,src/test/org/apache/commons/math/util/BeanTransformerTest.java,src/test/org/apache/commons/math/util/BeanTransformerTest.java,92,ry {
False,src/test/org/apache/commons/math/util/BeanTransformerTest.java,src/test/org/apache/commons/math/util/BeanTransformerTest.java,93,.transform(target);
False,src/test/org/apache/commons/math/util/BeanTransformerTest.java,src/test/org/apache/commons/math/util/BeanTransformerTest.java,94, catch (MathException e) {
False,src/test/org/apache/commons/math/util/BeanTransformerTest.java,src/test/org/apache/commons/math/util/BeanTransformerTest.java,95,.printStackTrace();
True,src/test/org/apache/commons/math/util/BeanTransformerTest.java,src/test/org/apache/commons/math/util/BeanTransformerTest.java,88,b.transform(target);
False,src/test/org/apache/commons/math/util/DefaultTransformerTest.java,src/test/org/apache/commons/math/util/DefaultTransformerTest.java,25, @version $Revision: 1.11 $ $Date: 2004/05/23 00:33:41 $
True,src/test/org/apache/commons/math/util/DefaultTransformerTest.java,src/test/org/apache/commons/math/util/DefaultTransformerTest.java,25,* @version $Revision: 1.12 $ $Date: 2004/05/23 21:34:19 $
False,src/test/org/apache/commons/math/util/DefaultTransformerTest.java,src/test/org/apache/commons/math/util/DefaultTransformerTest.java,31,ublic void testTransformDouble(){
True,src/test/org/apache/commons/math/util/DefaultTransformerTest.java,src/test/org/apache/commons/math/util/DefaultTransformerTest.java,31,public void testTransformDouble() throws Exception {
False,src/test/org/apache/commons/math/util/DefaultTransformerTest.java,src/test/org/apache/commons/math/util/DefaultTransformerTest.java,35,ry {
False,src/test/org/apache/commons/math/util/DefaultTransformerTest.java,src/test/org/apache/commons/math/util/DefaultTransformerTest.java,36,"ssertEquals(expected, t.transform(input), 1.0e-4);"
False,src/test/org/apache/commons/math/util/DefaultTransformerTest.java,src/test/org/apache/commons/math/util/DefaultTransformerTest.java,37, catch (MathException e) {
False,src/test/org/apache/commons/math/util/DefaultTransformerTest.java,src/test/org/apache/commons/math/util/DefaultTransformerTest.java,38,.printStackTrace();
True,src/test/org/apache/commons/math/util/DefaultTransformerTest.java,src/test/org/apache/commons/math/util/DefaultTransformerTest.java,35,"assertEquals(expected, t.transform(input), 1.0e-4);"
False,src/test/org/apache/commons/math/util/DefaultTransformerTest.java,src/test/org/apache/commons/math/util/DefaultTransformerTest.java,58,ublic void testTransformInteger(){
True,src/test/org/apache/commons/math/util/DefaultTransformerTest.java,src/test/org/apache/commons/math/util/DefaultTransformerTest.java,54,public void testTransformInteger() throws Exception {
False,src/test/org/apache/commons/math/util/DefaultTransformerTest.java,src/test/org/apache/commons/math/util/DefaultTransformerTest.java,62,ry {
False,src/test/org/apache/commons/math/util/DefaultTransformerTest.java,src/test/org/apache/commons/math/util/DefaultTransformerTest.java,63,"ssertEquals(expected, t.transform(input), 1.0e-4);"
False,src/test/org/apache/commons/math/util/DefaultTransformerTest.java,src/test/org/apache/commons/math/util/DefaultTransformerTest.java,64, catch (MathException e) {
False,src/test/org/apache/commons/math/util/DefaultTransformerTest.java,src/test/org/apache/commons/math/util/DefaultTransformerTest.java,65,.printStackTrace();
True,src/test/org/apache/commons/math/util/DefaultTransformerTest.java,src/test/org/apache/commons/math/util/DefaultTransformerTest.java,58,"assertEquals(expected, t.transform(input), 1.0e-4);"
False,src/test/org/apache/commons/math/util/DefaultTransformerTest.java,src/test/org/apache/commons/math/util/DefaultTransformerTest.java,72,ublic void testTransformBigDecimal(){
True,src/test/org/apache/commons/math/util/DefaultTransformerTest.java,src/test/org/apache/commons/math/util/DefaultTransformerTest.java,64,public void testTransformBigDecimal() throws Exception {
False,src/test/org/apache/commons/math/util/DefaultTransformerTest.java,src/test/org/apache/commons/math/util/DefaultTransformerTest.java,76,ry {
False,src/test/org/apache/commons/math/util/DefaultTransformerTest.java,src/test/org/apache/commons/math/util/DefaultTransformerTest.java,77,"ssertEquals(expected, t.transform(input), 1.0e-4);"
False,src/test/org/apache/commons/math/util/DefaultTransformerTest.java,src/test/org/apache/commons/math/util/DefaultTransformerTest.java,78, catch (MathException e) {
False,src/test/org/apache/commons/math/util/DefaultTransformerTest.java,src/test/org/apache/commons/math/util/DefaultTransformerTest.java,79,.printStackTrace();
True,src/test/org/apache/commons/math/util/DefaultTransformerTest.java,src/test/org/apache/commons/math/util/DefaultTransformerTest.java,68,"assertEquals(expected, t.transform(input), 1.0e-4);"
False,src/test/org/apache/commons/math/util/DefaultTransformerTest.java,src/test/org/apache/commons/math/util/DefaultTransformerTest.java,86,ublic void testTransformString(){
True,src/test/org/apache/commons/math/util/DefaultTransformerTest.java,src/test/org/apache/commons/math/util/DefaultTransformerTest.java,74,public void testTransformString() throws Exception {
False,src/test/org/apache/commons/math/util/DefaultTransformerTest.java,src/test/org/apache/commons/math/util/DefaultTransformerTest.java,90,ry {
False,src/test/org/apache/commons/math/util/DefaultTransformerTest.java,src/test/org/apache/commons/math/util/DefaultTransformerTest.java,91,"ssertEquals(expected, t.transform(input), 1.0e-4);"
False,src/test/org/apache/commons/math/util/DefaultTransformerTest.java,src/test/org/apache/commons/math/util/DefaultTransformerTest.java,92, catch (MathException e) {
False,src/test/org/apache/commons/math/util/DefaultTransformerTest.java,src/test/org/apache/commons/math/util/DefaultTransformerTest.java,93,.printStackTrace();
True,src/test/org/apache/commons/math/util/DefaultTransformerTest.java,src/test/org/apache/commons/math/util/DefaultTransformerTest.java,78,"assertEquals(expected, t.transform(input), 1.0e-4);"
