is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,174,ublic Collection<SwitchState> getSwitchingFunctions() {
True,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java,174,public Collection<SwitchingFunction> getSwitchingFunctions() {
False,src/java/org/apache/commons/math/ode/FirstOrderIntegrator.java,src/java/org/apache/commons/math/ode/FirstOrderIntegrator.java,78,ublic Collection<SwitchState> getSwitchingFunctions();
True,src/java/org/apache/commons/math/ode/FirstOrderIntegrator.java,src/java/org/apache/commons/math/ode/FirstOrderIntegrator.java,78,public Collection<SwitchingFunction> getSwitchingFunctions();
False,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,116,ublic Collection<SwitchState> getSwitchingFunctions() {
True,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java,116,public Collection<SwitchingFunction> getSwitchingFunctions() {
True,src/java/org/apache/commons/math/ode/SwitchState.java,src/java/org/apache/commons/math/ode/SwitchState.java,113,/** Get the underlying switching function.
True,src/java/org/apache/commons/math/ode/SwitchState.java,src/java/org/apache/commons/math/ode/SwitchState.java,114,* @return underlying switching function
True,src/java/org/apache/commons/math/ode/SwitchState.java,src/java/org/apache/commons/math/ode/SwitchState.java,116,public SwitchingFunction getSwitchingFunction() {
True,src/java/org/apache/commons/math/ode/SwitchState.java,src/java/org/apache/commons/math/ode/SwitchState.java,117,return function;
False,src/java/org/apache/commons/math/ode/SwitchingFunctionsHandler.java,src/java/org/apache/commons/math/ode/SwitchingFunctionsHandler.java,68,ublic Collection<SwitchState> getSwitchingFunctions() {
False,src/java/org/apache/commons/math/ode/SwitchingFunctionsHandler.java,src/java/org/apache/commons/math/ode/SwitchingFunctionsHandler.java,69,eturn Collections.unmodifiableCollection(functions);
True,src/java/org/apache/commons/math/ode/SwitchingFunctionsHandler.java,src/java/org/apache/commons/math/ode/SwitchingFunctionsHandler.java,68,public Collection<SwitchingFunction> getSwitchingFunctions() {
True,src/java/org/apache/commons/math/ode/SwitchingFunctionsHandler.java,src/java/org/apache/commons/math/ode/SwitchingFunctionsHandler.java,69,List<SwitchingFunction> list = new ArrayList<SwitchingFunction>();
True,src/java/org/apache/commons/math/ode/SwitchingFunctionsHandler.java,src/java/org/apache/commons/math/ode/SwitchingFunctionsHandler.java,70,for (SwitchState state : functions) {
True,src/java/org/apache/commons/math/ode/SwitchingFunctionsHandler.java,src/java/org/apache/commons/math/ode/SwitchingFunctionsHandler.java,71,list.add(state.getSwitchingFunction());
True,src/java/org/apache/commons/math/ode/SwitchingFunctionsHandler.java,src/java/org/apache/commons/math/ode/SwitchingFunctionsHandler.java,73,return Collections.unmodifiableCollection(list);
