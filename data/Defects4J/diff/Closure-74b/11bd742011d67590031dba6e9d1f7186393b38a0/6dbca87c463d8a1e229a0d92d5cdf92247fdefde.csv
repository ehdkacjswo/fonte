is_addition,old_file_path,new_file_path,line_num,content
False,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,142, else if (
False,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,143,bjectType.isEmptyType() ||
False,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,144,objectType.isUnknownType() &&
False,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,145,"/ If this has a supertype that hasn't been resolved yet,"
False,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,146,/ then we can assume this type will be ok once the super
False,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,147,/ type resolves.
False,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,148,objectType.getImplicitPrototype() == null ||
False,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,149,bjectType.getImplicitPrototype().isResolved()))) {
True,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,142,} else if (objectType.isUnknownType() &&
True,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,143,"// If this has a supertype that hasn't been resolved yet,"
True,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,144,// then we can assume this type will be ok once the super
True,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,145,// type resolves.
True,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,146,(objectType.getImplicitPrototype() == null ||
True,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,147,objectType.getImplicitPrototype().isResolved())) {
False,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,164, else if (
False,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,165,bjectType.isEmptyType() ||
False,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,166,objectType.isUnknownType() &&
False,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,167,"/ If this has a supertype that hasn't been resolved yet,"
False,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,168,/ then we can assume this type will be ok once the super
False,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,169,/ type resolves.
False,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,170,objectType.getImplicitPrototype() == null ||
False,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,171,bjectType.getImplicitPrototype().isResolved()))) {
True,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,162,} else if (objectType.isUnknownType() &&
True,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,163,"// If this has a supertype that hasn't been resolved yet,"
True,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,164,// then we can assume this type will be ok once the super
True,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,165,// type resolves.
True,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,166,(objectType.getImplicitPrototype() == null ||
True,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,src/com/google/javascript/jscomp/FunctionTypeBuilder.java,167,objectType.getImplicitPrototype().isResolved())) {
False,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,952,"/ If the supertype doesn't resolve correctly, we've warned about this"
False,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,953,/ already.
False,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,954,f (hasUnknownOrEmptySupertype(ctorType)) {
True,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,952,"// TODO(user): We're not 100% confident that type-checking works,"
True,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,953,// so we return quietly if the unknown type is a superclass of this type.
True,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,954,// Remove this check as we become more confident. We should flag a warning
True,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,955,"// when the unknown type is on the inheritance chain, as it is likely"
True,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,956,// because of a programmer error.
True,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,957,if (ctorType.hasUnknownSupertype()) {
False,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,966,f (implementedInterface.isUnknownType() ||
False,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,967,mplementedInterface.isEmptyType()) {
True,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,969,if (implementedInterface.isUnknownType()) {
False,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,972,reconditions.checkNotNull(interfaceType);
False,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,1037," Given a constructor or an interface type, find out whether the unknown"
False,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,1038, type is a supertype of the current type.
False,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,1040,rivate static boolean hasUnknownOrEmptySupertype(FunctionType ctor) {
False,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,1041,reconditions.checkArgument(ctor.isConstructor() || ctor.isInterface());
False,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,1042,reconditions.checkArgument(!ctor.isUnknownType());
False,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,1044,/ The type system should notice inheritance cycles on its own
False,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,1045,/ and break the cycle.
False,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,1046,hile (true) {
False,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,1047,bjectType maybeSuperInstanceType =
False,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,1048,tor.getPrototype().getImplicitPrototype();
False,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,1049,f (maybeSuperInstanceType == null) {
False,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,1050,eturn false;
False,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,1052,f (maybeSuperInstanceType.isUnknownType() ||
False,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,1053,aybeSuperInstanceType.isEmptyType()) {
False,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,1054,eturn true;
False,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,1056,tor = maybeSuperInstanceType.getConstructor();
False,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,1057,f (ctor == null) {
False,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,1058,eturn false;
False,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,1060,reconditions.checkState(ctor.isConstructor() || ctor.isInterface());
False,src/com/google/javascript/jscomp/TypeValidator.java,src/com/google/javascript/jscomp/TypeValidator.java,42,mport com.google.javascript.rhino.jstype.UnionType;
False,src/com/google/javascript/jscomp/TypeValidator.java,src/com/google/javascript/jscomp/TypeValidator.java,176,f (!anyObjectType.isSubtype(type) && !type.isEmptyType()) {
True,src/com/google/javascript/jscomp/TypeValidator.java,src/com/google/javascript/jscomp/TypeValidator.java,175,if (!anyObjectType.isSubtype(type)) {
False,src/com/google/javascript/jscomp/TypeValidator.java,src/com/google/javascript/jscomp/TypeValidator.java,236,ype.isSubtype(nullOrUndefined) &&
False,src/com/google/javascript/jscomp/TypeValidator.java,src/com/google/javascript/jscomp/TypeValidator.java,237,containsForwardDeclaredUnresolvedName(type)) {
True,src/com/google/javascript/jscomp/TypeValidator.java,src/com/google/javascript/jscomp/TypeValidator.java,235,type.isSubtype(nullOrUndefined)) {
False,src/com/google/javascript/jscomp/TypeValidator.java,src/com/google/javascript/jscomp/TypeValidator.java,261,rivate boolean containsForwardDeclaredUnresolvedName(JSType type) {
False,src/com/google/javascript/jscomp/TypeValidator.java,src/com/google/javascript/jscomp/TypeValidator.java,262,f (type instanceof UnionType) {
False,src/com/google/javascript/jscomp/TypeValidator.java,src/com/google/javascript/jscomp/TypeValidator.java,263,or (JSType alt : ((UnionType) type).getAlternates()) {
False,src/com/google/javascript/jscomp/TypeValidator.java,src/com/google/javascript/jscomp/TypeValidator.java,264,f (containsForwardDeclaredUnresolvedName(alt)) {
False,src/com/google/javascript/jscomp/TypeValidator.java,src/com/google/javascript/jscomp/TypeValidator.java,265,eturn true;
False,src/com/google/javascript/jscomp/TypeValidator.java,src/com/google/javascript/jscomp/TypeValidator.java,269,eturn type.isNoResolvedType();
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,612,"* Given a constructor or an interface type, find out whether the unknown"
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,613,* type is a supertype of the current type.
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,615,public boolean hasUnknownSupertype() {
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,616,Preconditions.checkArgument(isConstructor() || isInterface());
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,617,Preconditions.checkArgument(!this.isUnknownType());
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,618,// Potential infinite loop if our type system messes up or someone defines
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,619,// a bad type. Otherwise the loop should always end.
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,620,FunctionType ctor = this;
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,621,while (true) {
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,622,ObjectType maybeSuperInstanceType =
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,623,ctor.getPrototype().getImplicitPrototype();
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,624,if (maybeSuperInstanceType == null) {
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,625,return false;
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,627,if (maybeSuperInstanceType.isUnknownType()) {
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,628,return true;
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,630,ctor = maybeSuperInstanceType.getConstructor();
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,631,if (ctor == null) {
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,632,return false;
True,src/com/google/javascript/rhino/jstype/FunctionType.java,src/com/google/javascript/rhino/jstype/FunctionType.java,634,Preconditions.checkState(ctor.isConstructor() || ctor.isInterface());
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,154,ublic boolean isNoResolvedType() {
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,155,eturn false;
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,163,eturn isNoType() || isNoObjectType() || isNoResolvedType();
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,159,return isNoType() || isNoObjectType();
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,517,f (bType.isAllType() || bType.isUnknownType() ||
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,518,Type.isNoResolvedType() ||
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,519,Type.isAllType() || aType.isUnknownType() ||
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,520,Type.isNoResolvedType()) {
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,513,if (bType.isAllType() || bType.isEmptyType() || bType.isUnknownType() ||
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,514,aType.isAllType() || aType.isEmptyType() || aType.isUnknownType()) {
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,524,oolean aIsEmpty = aType.isEmptyType();
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,525,oolean bIsEmpty = bType.isEmptyType();
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,526,f (aIsEmpty || bIsEmpty) {
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,527,f (aIsEmpty && bIsEmpty) {
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,528,eturn TernaryValue.TRUE;
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,529, else {
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,530,eturn UNKNOWN;
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,598,f (thatType.isAllType() ||
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,599,thatType.isEmptyType() && !thatType.isNamedType())) {
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,581,if (thatType.isEmptyType() || thatType.isAllType()) {
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,582,// Defer to the implementations of the end lattice elements when
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,583,// possible.
False,src/com/google/javascript/rhino/jstype/JSTypeNative.java,src/com/google/javascript/rhino/jstype/JSTypeNative.java,138,"O_RESOLVED_TYPE,"
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,303,oObjectType NO_RESOLVED_TYPE = new NoResolvedType(this);
False,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,src/com/google/javascript/rhino/jstype/JSTypeRegistry.java,304,"egisterNativeType(JSTypeNative.NO_RESOLVED_TYPE, NO_RESOLVED_TYPE);"
False,src/com/google/javascript/rhino/jstype/NamedType.java,src/com/google/javascript/rhino/jstype/NamedType.java,334,f (isForwardDeclared) {
False,src/com/google/javascript/rhino/jstype/NamedType.java,src/com/google/javascript/rhino/jstype/NamedType.java,335,etReferencedType(
False,src/com/google/javascript/rhino/jstype/NamedType.java,src/com/google/javascript/rhino/jstype/NamedType.java,336,egistry.getNativeObjectType(
False,src/com/google/javascript/rhino/jstype/NamedType.java,src/com/google/javascript/rhino/jstype/NamedType.java,337,STypeNative.NO_RESOLVED_TYPE));
False,src/com/google/javascript/rhino/jstype/NamedType.java,src/com/google/javascript/rhino/jstype/NamedType.java,338, else {
False,src/com/google/javascript/rhino/jstype/NamedType.java,src/com/google/javascript/rhino/jstype/NamedType.java,339,etReferencedType(
False,src/com/google/javascript/rhino/jstype/NamedType.java,src/com/google/javascript/rhino/jstype/NamedType.java,340,egistry.getNativeObjectType(
False,src/com/google/javascript/rhino/jstype/NamedType.java,src/com/google/javascript/rhino/jstype/NamedType.java,341,STypeNative.CHECKED_UNKNOWN_TYPE));
True,src/com/google/javascript/rhino/jstype/NamedType.java,src/com/google/javascript/rhino/jstype/NamedType.java,334,setReferencedType(
True,src/com/google/javascript/rhino/jstype/NamedType.java,src/com/google/javascript/rhino/jstype/NamedType.java,335,registry.getNativeObjectType(
True,src/com/google/javascript/rhino/jstype/NamedType.java,src/com/google/javascript/rhino/jstype/NamedType.java,336,JSTypeNative.CHECKED_UNKNOWN_TYPE));
True,src/com/google/javascript/rhino/jstype/NoObjectType.java,src/com/google/javascript/rhino/jstype/NoObjectType.java,217,@Override
True,src/com/google/javascript/rhino/jstype/NoObjectType.java,src/com/google/javascript/rhino/jstype/NoObjectType.java,218,public TernaryValue testForEquality(JSType that) {
True,src/com/google/javascript/rhino/jstype/NoObjectType.java,src/com/google/javascript/rhino/jstype/NoObjectType.java,219,return that.isEmptyType() ? TernaryValue.TRUE : TernaryValue.UNKNOWN;
False,src/com/google/javascript/rhino/jstype/NoResolvedType.java,src/com/google/javascript/rhino/jstype/NoResolvedType.java,3, ***** BEGIN LICENSE BLOCK *****
False,src/com/google/javascript/rhino/jstype/NoResolvedType.java,src/com/google/javascript/rhino/jstype/NoResolvedType.java,4, Version: MPL 1.1/GPL 2.0
False,src/com/google/javascript/rhino/jstype/NoResolvedType.java,src/com/google/javascript/rhino/jstype/NoResolvedType.java,6, The contents of this file are subject to the Mozilla Public License Version
False,src/com/google/javascript/rhino/jstype/NoResolvedType.java,src/com/google/javascript/rhino/jstype/NoResolvedType.java,7," 1.1 (the ""License""); you may not use this file except in compliance with"
False,src/com/google/javascript/rhino/jstype/NoResolvedType.java,src/com/google/javascript/rhino/jstype/NoResolvedType.java,8, the License. You may obtain a copy of the License at
False,src/com/google/javascript/rhino/jstype/NoResolvedType.java,src/com/google/javascript/rhino/jstype/NoResolvedType.java,9, http://www.mozilla.org/MPL/
False,src/com/google/javascript/rhino/jstype/NoResolvedType.java,src/com/google/javascript/rhino/jstype/NoResolvedType.java,11," Software distributed under the License is distributed on an ""AS IS"" basis,"
False,src/com/google/javascript/rhino/jstype/NoResolvedType.java,src/com/google/javascript/rhino/jstype/NoResolvedType.java,12," WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License"
False,src/com/google/javascript/rhino/jstype/NoResolvedType.java,src/com/google/javascript/rhino/jstype/NoResolvedType.java,13, for the specific language governing rights and limitations under the
False,src/com/google/javascript/rhino/jstype/NoResolvedType.java,src/com/google/javascript/rhino/jstype/NoResolvedType.java,14, License.
False,src/com/google/javascript/rhino/jstype/NoResolvedType.java,src/com/google/javascript/rhino/jstype/NoResolvedType.java,16," The Original Code is Rhino code, released"
False,src/com/google/javascript/rhino/jstype/NoResolvedType.java,src/com/google/javascript/rhino/jstype/NoResolvedType.java,17," May 6, 1999."
False,src/com/google/javascript/rhino/jstype/NoResolvedType.java,src/com/google/javascript/rhino/jstype/NoResolvedType.java,19, The Initial Developer of the Original Code is
False,src/com/google/javascript/rhino/jstype/NoResolvedType.java,src/com/google/javascript/rhino/jstype/NoResolvedType.java,20, Netscape Communications Corporation.
False,src/com/google/javascript/rhino/jstype/NoResolvedType.java,src/com/google/javascript/rhino/jstype/NoResolvedType.java,21, Portions created by the Initial Developer are Copyright (C) 1997-1999
False,src/com/google/javascript/rhino/jstype/NoResolvedType.java,src/com/google/javascript/rhino/jstype/NoResolvedType.java,22, the Initial Developer. All Rights Reserved.
False,src/com/google/javascript/rhino/jstype/NoResolvedType.java,src/com/google/javascript/rhino/jstype/NoResolvedType.java,24, Contributor(s):
False,src/com/google/javascript/rhino/jstype/NoResolvedType.java,src/com/google/javascript/rhino/jstype/NoResolvedType.java,25,   Bob Jervis
False,src/com/google/javascript/rhino/jstype/NoResolvedType.java,src/com/google/javascript/rhino/jstype/NoResolvedType.java,26,   Google Inc.
False,src/com/google/javascript/rhino/jstype/NoResolvedType.java,src/com/google/javascript/rhino/jstype/NoResolvedType.java,28," Alternatively, the contents of this file may be used under the terms of"
False,src/com/google/javascript/rhino/jstype/NoResolvedType.java,src/com/google/javascript/rhino/jstype/NoResolvedType.java,29," the GNU General Public License Version 2 or later (the ""GPL""), in which"
False,src/com/google/javascript/rhino/jstype/NoResolvedType.java,src/com/google/javascript/rhino/jstype/NoResolvedType.java,30, case the provisions of the GPL are applicable instead of those above. If
False,src/com/google/javascript/rhino/jstype/NoResolvedType.java,src/com/google/javascript/rhino/jstype/NoResolvedType.java,31, you wish to allow use of your version of this file only under the terms of
False,src/com/google/javascript/rhino/jstype/NoResolvedType.java,src/com/google/javascript/rhino/jstype/NoResolvedType.java,32, the GPL and not to allow others to use your version of this file under the
False,src/com/google/javascript/rhino/jstype/NoResolvedType.java,src/com/google/javascript/rhino/jstype/NoResolvedType.java,33," MPL, indicate your decision by deleting the provisions above and replacing"
False,src/com/google/javascript/rhino/jstype/NoResolvedType.java,src/com/google/javascript/rhino/jstype/NoResolvedType.java,34, them with the notice and other provisions required by the GPL. If you do
False,src/com/google/javascript/rhino/jstype/NoResolvedType.java,src/com/google/javascript/rhino/jstype/NoResolvedType.java,35," not delete the provisions above, a recipient may use your version of this"
False,src/com/google/javascript/rhino/jstype/NoResolvedType.java,src/com/google/javascript/rhino/jstype/NoResolvedType.java,36, file under either the MPL or the GPL.
False,src/com/google/javascript/rhino/jstype/NoResolvedType.java,src/com/google/javascript/rhino/jstype/NoResolvedType.java,38, ***** END LICENSE BLOCK ***** */
False,src/com/google/javascript/rhino/jstype/NoResolvedType.java,src/com/google/javascript/rhino/jstype/NoResolvedType.java,40,ackage com.google.javascript.rhino.jstype;
False,src/com/google/javascript/rhino/jstype/NoResolvedType.java,src/com/google/javascript/rhino/jstype/NoResolvedType.java,44," An unresolved type that was forward declared. So we know it exists,"
False,src/com/google/javascript/rhino/jstype/NoResolvedType.java,src/com/google/javascript/rhino/jstype/NoResolvedType.java,45, but that it wasn't pulled into this binary.
False,src/com/google/javascript/rhino/jstype/NoResolvedType.java,src/com/google/javascript/rhino/jstype/NoResolvedType.java,47," In most cases, it behaves like a bottom type in the type lattice:"
False,src/com/google/javascript/rhino/jstype/NoResolvedType.java,src/com/google/javascript/rhino/jstype/NoResolvedType.java,48," no real type should be assigned to a NoResolvedType, but the"
False,src/com/google/javascript/rhino/jstype/NoResolvedType.java,src/com/google/javascript/rhino/jstype/NoResolvedType.java,49," NoResolvedType is a subtype of everything. In a few cases, it behaves"
False,src/com/google/javascript/rhino/jstype/NoResolvedType.java,src/com/google/javascript/rhino/jstype/NoResolvedType.java,50," like the unknown type: properties of this type are also NoResolved types,"
False,src/com/google/javascript/rhino/jstype/NoResolvedType.java,src/com/google/javascript/rhino/jstype/NoResolvedType.java,51, and comparisons to other types always have an unknown result.
False,src/com/google/javascript/rhino/jstype/NoResolvedType.java,src/com/google/javascript/rhino/jstype/NoResolvedType.java,53, @author nicksantos@google.com (Nick Santos)
False,src/com/google/javascript/rhino/jstype/NoResolvedType.java,src/com/google/javascript/rhino/jstype/NoResolvedType.java,55,lass NoResolvedType extends NoType {
False,src/com/google/javascript/rhino/jstype/NoResolvedType.java,src/com/google/javascript/rhino/jstype/NoResolvedType.java,56,rivate static final long serialVersionUID = 1L;
False,src/com/google/javascript/rhino/jstype/NoResolvedType.java,src/com/google/javascript/rhino/jstype/NoResolvedType.java,58,oResolvedType(JSTypeRegistry registry) {
False,src/com/google/javascript/rhino/jstype/NoResolvedType.java,src/com/google/javascript/rhino/jstype/NoResolvedType.java,59,uper(registry);
False,src/com/google/javascript/rhino/jstype/NoResolvedType.java,src/com/google/javascript/rhino/jstype/NoResolvedType.java,62,Override
False,src/com/google/javascript/rhino/jstype/NoResolvedType.java,src/com/google/javascript/rhino/jstype/NoResolvedType.java,63,ublic boolean isNoResolvedType() {
False,src/com/google/javascript/rhino/jstype/NoResolvedType.java,src/com/google/javascript/rhino/jstype/NoResolvedType.java,64,eturn true;
False,src/com/google/javascript/rhino/jstype/NoResolvedType.java,src/com/google/javascript/rhino/jstype/NoResolvedType.java,67,Override
False,src/com/google/javascript/rhino/jstype/NoResolvedType.java,src/com/google/javascript/rhino/jstype/NoResolvedType.java,68,ublic boolean isNoType() {
False,src/com/google/javascript/rhino/jstype/NoResolvedType.java,src/com/google/javascript/rhino/jstype/NoResolvedType.java,69,eturn false;
False,src/com/google/javascript/rhino/jstype/NoResolvedType.java,src/com/google/javascript/rhino/jstype/NoResolvedType.java,72,Override
False,src/com/google/javascript/rhino/jstype/NoResolvedType.java,src/com/google/javascript/rhino/jstype/NoResolvedType.java,73,ublic JSType getLeastSupertype(JSType that) {
False,src/com/google/javascript/rhino/jstype/NoResolvedType.java,src/com/google/javascript/rhino/jstype/NoResolvedType.java,74,eturn that.isNoType() ? this : super.getLeastSupertype(that);
False,src/com/google/javascript/rhino/jstype/NoResolvedType.java,src/com/google/javascript/rhino/jstype/NoResolvedType.java,77,Override
False,src/com/google/javascript/rhino/jstype/NoResolvedType.java,src/com/google/javascript/rhino/jstype/NoResolvedType.java,78,ublic JSType getGreatestSubtype(JSType that) {
False,src/com/google/javascript/rhino/jstype/NoResolvedType.java,src/com/google/javascript/rhino/jstype/NoResolvedType.java,79,eturn that.isNoType() ? that :
False,src/com/google/javascript/rhino/jstype/NoResolvedType.java,src/com/google/javascript/rhino/jstype/NoResolvedType.java,80,hat.isNoObjectType() ? getNativeType(JSTypeNative.NO_TYPE) :
False,src/com/google/javascript/rhino/jstype/NoResolvedType.java,src/com/google/javascript/rhino/jstype/NoResolvedType.java,81,uper.getGreatestSubtype(that);
False,src/com/google/javascript/rhino/jstype/NoResolvedType.java,src/com/google/javascript/rhino/jstype/NoResolvedType.java,84,Override
False,src/com/google/javascript/rhino/jstype/NoResolvedType.java,src/com/google/javascript/rhino/jstype/NoResolvedType.java,85,ublic JSType getPropertyType(String propertyName) {
False,src/com/google/javascript/rhino/jstype/NoResolvedType.java,src/com/google/javascript/rhino/jstype/NoResolvedType.java,86,eturn getNativeType(JSTypeNative.CHECKED_UNKNOWN_TYPE);
False,src/com/google/javascript/rhino/jstype/NoResolvedType.java,src/com/google/javascript/rhino/jstype/NoResolvedType.java,89,Override
False,src/com/google/javascript/rhino/jstype/NoResolvedType.java,src/com/google/javascript/rhino/jstype/NoResolvedType.java,90,ublic String toString() {
False,src/com/google/javascript/rhino/jstype/NoResolvedType.java,src/com/google/javascript/rhino/jstype/NoResolvedType.java,91,"eturn ""NoResolvedType"";"
False,src/com/google/javascript/rhino/jstype/NoType.java,src/com/google/javascript/rhino/jstype/NoType.java,61,ublic class NoType extends NoObjectType {
True,src/com/google/javascript/rhino/jstype/NoType.java,src/com/google/javascript/rhino/jstype/NoType.java,61,public final class NoType extends NoObjectType {
False,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,111,Override
False,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,112,ublic boolean isNoType() {
False,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,113,eturn referencedType.isNoType();
False,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,116,Override
False,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,117,ublic boolean isNoObjectType() {
False,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,118,eturn referencedType.isNoObjectType();
False,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,121,Override
False,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,122,ublic boolean isNoResolvedType() {
False,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,123,eturn referencedType.isNoResolvedType();
False,src/com/google/javascript/rhino/jstype/UnionType.java,src/com/google/javascript/rhino/jstype/UnionType.java,46,mport com.google.common.base.Predicate;
False,src/com/google/javascript/rhino/jstype/UnionType.java,src/com/google/javascript/rhino/jstype/UnionType.java,546,Override
False,src/com/google/javascript/rhino/jstype/UnionType.java,src/com/google/javascript/rhino/jstype/UnionType.java,547,ublic boolean setValidator(Predicate<JSType> validator) {
False,src/com/google/javascript/rhino/jstype/UnionType.java,src/com/google/javascript/rhino/jstype/UnionType.java,548,or (JSType a : alternates) {
False,src/com/google/javascript/rhino/jstype/UnionType.java,src/com/google/javascript/rhino/jstype/UnionType.java,549,.setValidator(validator);
False,src/com/google/javascript/rhino/jstype/UnionType.java,src/com/google/javascript/rhino/jstype/UnionType.java,551,eturn true;
False,src/com/google/javascript/rhino/jstype/UnionTypeBuilder.java,src/com/google/javascript/rhino/jstype/UnionTypeBuilder.java,128,urrent.isUnknownType() ||
False,src/com/google/javascript/rhino/jstype/UnionTypeBuilder.java,src/com/google/javascript/rhino/jstype/UnionTypeBuilder.java,129,lternate.isNoResolvedType() ||
False,src/com/google/javascript/rhino/jstype/UnionTypeBuilder.java,src/com/google/javascript/rhino/jstype/UnionTypeBuilder.java,130,urrent.isNoResolvedType()) {
True,src/com/google/javascript/rhino/jstype/UnionTypeBuilder.java,src/com/google/javascript/rhino/jstype/UnionTypeBuilder.java,128,current.isUnknownType()) {
False,src/com/google/javascript/rhino/testing/BaseJSTypeTestCase.java,src/com/google/javascript/rhino/testing/BaseJSTypeTestCase.java,61,rotected ObjectType NO_RESOLVED_TYPE;
False,src/com/google/javascript/rhino/testing/BaseJSTypeTestCase.java,src/com/google/javascript/rhino/testing/BaseJSTypeTestCase.java,127,O_RESOLVED_TYPE =
False,src/com/google/javascript/rhino/testing/BaseJSTypeTestCase.java,src/com/google/javascript/rhino/testing/BaseJSTypeTestCase.java,128,egistry.getNativeObjectType(JSTypeNative.NO_RESOLVED_TYPE);
False,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,6415,"tring f = ""goog.addDependency('zzz.js', ['MyType'], []);"" +"
False,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,6416,"/** @param {MyType} x */ function f(x) { }"";"
False,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,6417,"estClosureTypes(f, null);"
False,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,6418,"estClosureTypes(f + ""f(3);"","
False,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,6419,"actual parameter 1 of f does not match formal parameter\n"" +"
False,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,6420,"found   : number\n"" +"
False,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,6421,"required: (MyType|null|undefined)"");"
True,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,6415,testClosureTypes(
True,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,6416,"""goog.addDependency('zzz.js', ['MyType'], []);"" +"
True,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,6417,"""/** @param {MyType} x */ function f(x) { }"" +"
True,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,test/com/google/javascript/jscomp/LooseTypeCheckTest.java,6418,"""f(3);"", null);"
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,7141,"tring f = ""goog.addDependency('zzz.js', ['MyType'], []);"" +"
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,7142,"/** @param {MyType} x */ function f(x) { }"";"
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,7143,"estClosureTypes(f, null);"
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,7144,"estClosureTypes(f + ""f(3);"","
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,7145,"actual parameter 1 of f does not match formal parameter\n"" +"
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,7146,"found   : number\n"" +"
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,7147,"required: (MyType|null)"");"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,7141,testClosureTypes(
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,7142,"""goog.addDependency('zzz.js', ['MyType'], []);"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,7143,"""/** @param {MyType} x */ function f(x) { }"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,7144,"""f(3);"", null);"
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,7194,ublic void testForwardTypeDeclaration7() throws Exception {
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,7195,estClosureTypes(
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,7196,"goog.addDependency('zzz.js', ['MyType'], []);"" +"
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,7197,"/** @param {MyType=} x */"" +"
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,7198,"function f(x) { return x == undefined; }"", null);"
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,7201,ublic void testForwardTypeDeclaration8() throws Exception {
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,7202,estClosureTypes(
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,7203,"goog.addDependency('zzz.js', ['MyType'], []);"" +"
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,7204,"/** @param {MyType} x */"" +"
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,7205,"function f(x) { return x.name == undefined; }"", null);"
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,7208,ublic void testForwardTypeDeclaration9() throws Exception {
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,7209,estClosureTypes(
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,7210,"goog.addDependency('zzz.js', ['MyType'], []);"" +"
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,7211,"/** @param {MyType} x */"" +"
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,7212,"function f(x) { x.name = 'Bob'; }"", null);"
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,7215,ublic void testForwardTypeDeclaration10() throws Exception {
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,7216,"tring f = ""goog.addDependency('zzz.js', ['MyType'], []);"" +"
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,7217,"/** @param {MyType|number} x */ function f(x) { }"";"
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,7218,"estClosureTypes(f, null);"
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,7219,"estClosureTypes(f + ""f(3);"", null);"
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,7220,"estClosureTypes(f + ""f('3');"","
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,7221,"actual parameter 1 of f does not match formal parameter\n"" +"
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,7222,"found   : string\n"" +"
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,7223,"required: (MyType|null|number)"");"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,51,mport com.google.javascript.rhino.SimpleErrorReporter;
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,83,rivate NamedType forwardDeclaredNamedType;
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,166,orwardDeclaredNamedType =
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,167,"ew NamedType(registry, ""forwardDeclared"", ""source"", 1, 0);"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,168,"egistry.forwardDeclareType(""typeA"");"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,169,orwardDeclaredNamedType.resolve(
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,170,"ew SimpleErrorReporter(), EMPTY_SCOPE);"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,174,"O_RESOLVED_TYPE,"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,202,"oogSubBar,"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,203,orwardDeclaredNamedType);
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,194,googSubBar);
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,661, Tests the behavior of the unresolved Bottom type.
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,663,ublic void testNoResolvedType() throws Exception {
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,664,/ isXxx
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,665,ssertFalse(NO_RESOLVED_TYPE.isNoObjectType());
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,666,ssertFalse(NO_RESOLVED_TYPE.isNoType());
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,667,ssertTrue(NO_RESOLVED_TYPE.isNoResolvedType());
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,668,ssertFalse(NO_RESOLVED_TYPE.isArrayType());
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,669,ssertFalse(NO_RESOLVED_TYPE.isBooleanValueType());
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,670,ssertFalse(NO_RESOLVED_TYPE.isDateType());
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,671,ssertFalse(NO_RESOLVED_TYPE.isEnumElementType());
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,672,ssertFalse(NO_RESOLVED_TYPE.isNullType());
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,673,ssertFalse(NO_RESOLVED_TYPE.isNamedType());
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,674,ssertTrue(NO_RESOLVED_TYPE.isNumber());
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,675,ssertFalse(NO_RESOLVED_TYPE.isNumberObjectType());
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,676,ssertFalse(NO_RESOLVED_TYPE.isNumberValueType());
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,677,ssertTrue(NO_RESOLVED_TYPE.isObject());
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,678,ssertFalse(NO_RESOLVED_TYPE.isFunctionPrototypeType());
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,679,ssertFalse(NO_RESOLVED_TYPE.isRegexpType());
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,680,ssertTrue(NO_RESOLVED_TYPE.isString());
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,681,ssertFalse(NO_RESOLVED_TYPE.isStringObjectType());
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,682,ssertFalse(NO_RESOLVED_TYPE.isStringValueType());
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,683,ssertFalse(NO_RESOLVED_TYPE.isEnumType());
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,684,ssertFalse(NO_RESOLVED_TYPE.isUnionType());
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,685,ssertFalse(NO_RESOLVED_TYPE.isAllType());
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,686,ssertFalse(NO_RESOLVED_TYPE.isVoidType());
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,687,ssertTrue(NO_RESOLVED_TYPE.isConstructor());
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,688,ssertFalse(NO_RESOLVED_TYPE.isInstanceType());
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,690,/ canAssignTo
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,691,ssertTrue(NO_RESOLVED_TYPE.canAssignTo(NO_RESOLVED_TYPE));
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,692,ssertTrue(NO_RESOLVED_TYPE.canAssignTo(NO_OBJECT_TYPE));
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,693,ssertTrue(NO_RESOLVED_TYPE.canAssignTo(ARRAY_TYPE));
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,694,ssertTrue(NO_RESOLVED_TYPE.canAssignTo(BOOLEAN_TYPE));
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,695,ssertTrue(NO_RESOLVED_TYPE.canAssignTo(BOOLEAN_OBJECT_TYPE));
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,696,ssertTrue(NO_RESOLVED_TYPE.canAssignTo(DATE_TYPE));
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,697,ssertTrue(NO_RESOLVED_TYPE.canAssignTo(ERROR_TYPE));
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,698,ssertTrue(NO_RESOLVED_TYPE.canAssignTo(EVAL_ERROR_TYPE));
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,699,ssertTrue(NO_RESOLVED_TYPE.canAssignTo(functionType));
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,700,ssertTrue(NO_RESOLVED_TYPE.canAssignTo(NULL_TYPE));
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,701,ssertTrue(NO_RESOLVED_TYPE.canAssignTo(NUMBER_TYPE));
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,702,ssertTrue(NO_RESOLVED_TYPE.canAssignTo(NUMBER_OBJECT_TYPE));
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,703,ssertTrue(NO_RESOLVED_TYPE.canAssignTo(OBJECT_TYPE));
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,704,ssertTrue(NO_RESOLVED_TYPE.canAssignTo(URI_ERROR_TYPE));
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,705,ssertTrue(NO_RESOLVED_TYPE.canAssignTo(RANGE_ERROR_TYPE));
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,706,ssertTrue(NO_RESOLVED_TYPE.canAssignTo(REFERENCE_ERROR_TYPE));
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,707,ssertTrue(NO_RESOLVED_TYPE.canAssignTo(REGEXP_TYPE));
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,708,ssertTrue(NO_RESOLVED_TYPE.canAssignTo(STRING_TYPE));
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,709,ssertTrue(NO_RESOLVED_TYPE.canAssignTo(STRING_OBJECT_TYPE));
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,710,ssertTrue(NO_RESOLVED_TYPE.canAssignTo(SYNTAX_ERROR_TYPE));
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,711,ssertTrue(NO_RESOLVED_TYPE.canAssignTo(TYPE_ERROR_TYPE));
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,712,ssertTrue(NO_RESOLVED_TYPE.canAssignTo(ALL_TYPE));
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,713,ssertTrue(NO_RESOLVED_TYPE.canAssignTo(VOID_TYPE));
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,715,/ canTestForEqualityWith
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,716,"ssertCanTestForEqualityWith(NO_RESOLVED_TYPE, NO_RESOLVED_TYPE);"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,717,"ssertCanTestForEqualityWith(NO_RESOLVED_TYPE, NO_TYPE);"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,718,"ssertCanTestForEqualityWith(NO_RESOLVED_TYPE, NO_OBJECT_TYPE);"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,719,"ssertCanTestForEqualityWith(NO_RESOLVED_TYPE, ARRAY_TYPE);"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,720,"ssertCanTestForEqualityWith(NO_RESOLVED_TYPE, BOOLEAN_TYPE);"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,721,"ssertCanTestForEqualityWith(NO_RESOLVED_TYPE, BOOLEAN_OBJECT_TYPE);"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,722,"ssertCanTestForEqualityWith(NO_RESOLVED_TYPE, DATE_TYPE);"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,723,"ssertCanTestForEqualityWith(NO_RESOLVED_TYPE, ERROR_TYPE);"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,724,"ssertCanTestForEqualityWith(NO_RESOLVED_TYPE, EVAL_ERROR_TYPE);"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,725,"ssertCanTestForEqualityWith(NO_RESOLVED_TYPE, functionType);"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,726,"ssertCanTestForEqualityWith(NO_RESOLVED_TYPE, NULL_TYPE);"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,727,"ssertCanTestForEqualityWith(NO_RESOLVED_TYPE, NUMBER_TYPE);"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,728,"ssertCanTestForEqualityWith(NO_RESOLVED_TYPE, NUMBER_OBJECT_TYPE);"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,729,"ssertCanTestForEqualityWith(NO_RESOLVED_TYPE, OBJECT_TYPE);"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,730,"ssertCanTestForEqualityWith(NO_RESOLVED_TYPE, URI_ERROR_TYPE);"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,731,"ssertCanTestForEqualityWith(NO_RESOLVED_TYPE, RANGE_ERROR_TYPE);"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,732,"ssertCanTestForEqualityWith(NO_RESOLVED_TYPE, REFERENCE_ERROR_TYPE);"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,733,"ssertCanTestForEqualityWith(NO_RESOLVED_TYPE, REGEXP_TYPE);"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,734,"ssertCanTestForEqualityWith(NO_RESOLVED_TYPE, STRING_TYPE);"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,735,"ssertCanTestForEqualityWith(NO_RESOLVED_TYPE, STRING_OBJECT_TYPE);"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,736,"ssertCanTestForEqualityWith(NO_RESOLVED_TYPE, SYNTAX_ERROR_TYPE);"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,737,"ssertCanTestForEqualityWith(NO_RESOLVED_TYPE, TYPE_ERROR_TYPE);"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,738,"ssertCanTestForEqualityWith(NO_RESOLVED_TYPE, ALL_TYPE);"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,739,"ssertCanTestForEqualityWith(NO_RESOLVED_TYPE, VOID_TYPE);"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,741,/ canTestForShallowEqualityWith
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,742,ssertTrue(NO_RESOLVED_TYPE.canTestForShallowEqualityWith(NO_RESOLVED_TYPE));
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,743,ssertTrue(NO_RESOLVED_TYPE.canTestForShallowEqualityWith(NO_OBJECT_TYPE));
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,744,ssertTrue(NO_RESOLVED_TYPE.canTestForShallowEqualityWith(ARRAY_TYPE));
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,745,ssertTrue(NO_RESOLVED_TYPE.canTestForShallowEqualityWith(BOOLEAN_TYPE));
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,746,ssertTrue(NO_RESOLVED_TYPE.canTestForShallowEqualityWith(BOOLEAN_OBJECT_TYPE));
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,747,ssertTrue(NO_RESOLVED_TYPE.canTestForShallowEqualityWith(DATE_TYPE));
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,748,ssertTrue(NO_RESOLVED_TYPE.canTestForShallowEqualityWith(ERROR_TYPE));
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,749,ssertTrue(NO_RESOLVED_TYPE.canTestForShallowEqualityWith(EVAL_ERROR_TYPE));
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,750,ssertTrue(NO_RESOLVED_TYPE.canTestForShallowEqualityWith(functionType));
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,751,ssertTrue(NO_RESOLVED_TYPE.canTestForShallowEqualityWith(NULL_TYPE));
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,752,ssertTrue(NO_RESOLVED_TYPE.canTestForShallowEqualityWith(NUMBER_TYPE));
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,753,ssertTrue(NO_RESOLVED_TYPE.canTestForShallowEqualityWith(NUMBER_OBJECT_TYPE));
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,754,ssertTrue(NO_RESOLVED_TYPE.canTestForShallowEqualityWith(OBJECT_TYPE));
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,755,ssertTrue(NO_RESOLVED_TYPE.canTestForShallowEqualityWith(URI_ERROR_TYPE));
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,756,ssertTrue(NO_RESOLVED_TYPE.canTestForShallowEqualityWith(RANGE_ERROR_TYPE));
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,757,ssertTrue(NO_RESOLVED_TYPE.canTestForShallowEqualityWith(REFERENCE_ERROR_TYPE));
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,758,ssertTrue(NO_RESOLVED_TYPE.canTestForShallowEqualityWith(REGEXP_TYPE));
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,759,ssertTrue(NO_RESOLVED_TYPE.canTestForShallowEqualityWith(STRING_TYPE));
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,760,ssertTrue(NO_RESOLVED_TYPE.canTestForShallowEqualityWith(STRING_OBJECT_TYPE));
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,761,ssertTrue(NO_RESOLVED_TYPE.canTestForShallowEqualityWith(SYNTAX_ERROR_TYPE));
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,762,ssertTrue(NO_RESOLVED_TYPE.canTestForShallowEqualityWith(TYPE_ERROR_TYPE));
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,763,ssertTrue(NO_RESOLVED_TYPE.canTestForShallowEqualityWith(ALL_TYPE));
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,764,ssertTrue(NO_RESOLVED_TYPE.canTestForShallowEqualityWith(VOID_TYPE));
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,766,/ isNullable
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,767,ssertTrue(NO_RESOLVED_TYPE.isNullable());
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,769,/ isObject
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,770,ssertTrue(NO_RESOLVED_TYPE.isObject());
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,772,/ matchesXxx
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,773,ssertTrue(NO_RESOLVED_TYPE.matchesInt32Context());
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,774,ssertTrue(NO_RESOLVED_TYPE.matchesNumberContext());
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,775,ssertTrue(NO_RESOLVED_TYPE.matchesObjectContext());
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,776,ssertTrue(NO_RESOLVED_TYPE.matchesStringContext());
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,777,ssertTrue(NO_RESOLVED_TYPE.matchesUint32Context());
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,779,/ toString
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,780,"ssertEquals(""NoResolvedType"", NO_RESOLVED_TYPE.toString());"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,781,"ssertEquals(null, NO_RESOLVED_TYPE.getDisplayName());"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,782,ssertFalse(NO_RESOLVED_TYPE.hasDisplayName());
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,784,/ getPropertyType
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,785,"ssertTypeEquals(CHECKED_UNKNOWN_TYPE,"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,786,"O_RESOLVED_TYPE.getPropertyType(""anyProperty""));"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,788,sserts.assertResolvesToSame(NO_RESOLVED_TYPE);
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3957,"ompare(UNKNOWN, NO_RESOLVED_TYPE, NO_RESOLVED_TYPE);"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4011,"ompare(UNKNOWN, NULL_TYPE, NO_TYPE);"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4012,"ompare(UNKNOWN, VOID_TYPE, NO_TYPE);"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4013,"ompare(UNKNOWN, NULL_TYPE, unresolvedNamedType);"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4014,"ompare(UNKNOWN, VOID_TYPE, unresolvedNamedType);"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4015,"ompare(TRUE, NO_TYPE, NO_TYPE);"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4480,"O_RESOLVED_TYPE,"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4497,"ecordType,"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4498,orwardDeclaredNamedType);
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4349,recordType
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4713,ssertTrue(a.isEmptyType());
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4714,ssertFalse(a.isNoType());
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4715,ssertTrue(a.isNoResolvedType());
