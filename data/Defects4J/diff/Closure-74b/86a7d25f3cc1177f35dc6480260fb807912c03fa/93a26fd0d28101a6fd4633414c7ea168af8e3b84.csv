is_addition,old_file_path,new_file_path,line_num,content
False,src/com/google/javascript/jscomp/CheckMissingReturn.java,src/com/google/javascript/jscomp/CheckMissingReturn.java,71,ernaryValue val = NodeUtil.getBooleanValue(condition);
True,src/com/google/javascript/jscomp/CheckMissingReturn.java,src/com/google/javascript/jscomp/CheckMissingReturn.java,71,TernaryValue val = NodeUtil.getImpureBooleanValue(condition);
False,src/com/google/javascript/jscomp/CheckUnreachableCode.java,src/com/google/javascript/jscomp/CheckUnreachableCode.java,106,ernaryValue val = NodeUtil.getBooleanValue(condition);
True,src/com/google/javascript/jscomp/CheckUnreachableCode.java,src/com/google/javascript/jscomp/CheckUnreachableCode.java,106,TernaryValue val = NodeUtil.getImpureBooleanValue(condition);
False,src/com/google/javascript/jscomp/MinimizeExitPoints.java,src/com/google/javascript/jscomp/MinimizeExitPoints.java,69,f (NodeUtil.getBooleanValue(cond) == TernaryValue.FALSE) {
True,src/com/google/javascript/jscomp/MinimizeExitPoints.java,src/com/google/javascript/jscomp/MinimizeExitPoints.java,69,if (NodeUtil.getImpureBooleanValue(cond) == TernaryValue.FALSE) {
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,72,tatic TernaryValue getExpressionBooleanValue(Node n) {
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,72,static TernaryValue getImpureBooleanValue(Node n) {
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,77,eturn getExpressionBooleanValue(n.getLastChild());
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,77,return getImpureBooleanValue(n.getLastChild());
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,79,ernaryValue value = getExpressionBooleanValue(n.getLastChild());
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,79,TernaryValue value = getImpureBooleanValue(n.getLastChild());
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,82,ernaryValue lhs = getExpressionBooleanValue(n.getFirstChild());
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,83,ernaryValue rhs = getExpressionBooleanValue(n.getLastChild());
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,82,TernaryValue lhs = getImpureBooleanValue(n.getFirstChild());
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,83,TernaryValue rhs = getImpureBooleanValue(n.getLastChild());
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,87,ernaryValue lhs = getExpressionBooleanValue(n.getFirstChild());
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,88,ernaryValue rhs = getExpressionBooleanValue(n.getLastChild());
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,87,TernaryValue lhs = getImpureBooleanValue(n.getFirstChild());
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,88,TernaryValue rhs = getImpureBooleanValue(n.getLastChild());
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,92,ernaryValue trueValue = getExpressionBooleanValue(
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,92,TernaryValue trueValue = getImpureBooleanValue(
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,94,ernaryValue falseValue = getExpressionBooleanValue(n.getLastChild());
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,94,TernaryValue falseValue = getImpureBooleanValue(n.getLastChild());
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,101,case Token.ARRAYLIT:
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,102,case Token.OBJECTLIT:
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,103,// ignoring side-effects
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,104,return TernaryValue.TRUE;
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,102,eturn getBooleanValue(n);
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,107,return getPureBooleanValue(n);
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,108, effectively emulates the <code>Boolean()</code> JavaScript cast function.
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,113,* effectively emulates the <code>Boolean()</code> JavaScript cast function
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,114,"* except it return UNKNOWN for known values with side-effects, use"
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,115,* getExpressionBooleanValue if you don't care about side-effects.
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,110,tatic TernaryValue getBooleanValue(Node n) {
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,117,static TernaryValue getPureBooleanValue(Node n) {
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,119,eturn getBooleanValue(n.getLastChild()).not();
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,126,return getPureBooleanValue(n.getLastChild()).not();
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,139,ase Token.ARRAYLIT:
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,140,ase Token.OBJECTLIT:
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,149,case Token.ARRAYLIT:
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,150,case Token.OBJECTLIT:
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,151,if (!mayHaveSideEffects(n)) {
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,152,return TernaryValue.TRUE;
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,189,ernaryValue child = getBooleanValue(n.getFirstChild());
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,200,TernaryValue child = getPureBooleanValue(n.getFirstChild());
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,283,ernaryValue child = getBooleanValue(n.getFirstChild());
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,294,TernaryValue child = getPureBooleanValue(n.getFirstChild());
False,src/com/google/javascript/jscomp/PeepholeFoldConstants.java,src/com/google/javascript/jscomp/PeepholeFoldConstants.java,335,ernaryValue leftVal = NodeUtil.getBooleanValue(left);
True,src/com/google/javascript/jscomp/PeepholeFoldConstants.java,src/com/google/javascript/jscomp/PeepholeFoldConstants.java,335,TernaryValue leftVal = NodeUtil.getPureBooleanValue(left);
False,src/com/google/javascript/jscomp/PeepholeFoldConstants.java,src/com/google/javascript/jscomp/PeepholeFoldConstants.java,532,ernaryValue leftVal = NodeUtil.getBooleanValue(left);
True,src/com/google/javascript/jscomp/PeepholeFoldConstants.java,src/com/google/javascript/jscomp/PeepholeFoldConstants.java,532,TernaryValue leftVal = NodeUtil.getImpureBooleanValue(left);
False,src/com/google/javascript/jscomp/PeepholeFoldConstants.java,src/com/google/javascript/jscomp/PeepholeFoldConstants.java,543, else {
True,src/com/google/javascript/jscomp/PeepholeFoldConstants.java,src/com/google/javascript/jscomp/PeepholeFoldConstants.java,543,} else if (!mayHaveSideEffects(left)) {
False,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,512,ernaryValue value = NodeUtil.getExpressionBooleanValue(rhsAssign);
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,512,TernaryValue value = NodeUtil.getImpureBooleanValue(rhsAssign);
False,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,650,ernaryValue condValue = NodeUtil.getExpressionBooleanValue(cond);
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,650,TernaryValue condValue = NodeUtil.getImpureBooleanValue(cond);
False,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,717,ernaryValue condValue = NodeUtil.getExpressionBooleanValue(cond);
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,717,TernaryValue condValue = NodeUtil.getImpureBooleanValue(cond);
False,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,745,f (NodeUtil.getBooleanValue(cond) != TernaryValue.FALSE) {
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,745,if (NodeUtil.getPureBooleanValue(cond) != TernaryValue.FALSE) {
False,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,782,f (NodeUtil.getBooleanValue(cond) != TernaryValue.FALSE) {
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,782,if (NodeUtil.getImpureBooleanValue(cond) != TernaryValue.FALSE) {
False,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,787,"odeUtil.removeChild(n.getParent(), n);"
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,787,if (!mayHaveSideEffects(cond)) {
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,788,"NodeUtil.removeChild(n.getParent(), n);"
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,789,} else {
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,790,"Node statement = new Node(Token.EXPR_RESULT, cond.detachFromParent())"
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,791,.copyInformationFrom(cond);
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,792,"n.getParent().replaceChild(n, statement);"
False,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,801,f (NodeUtil.getBooleanValue(cond) != TernaryValue.FALSE) {
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,807,if (NodeUtil.getImpureBooleanValue(cond) != TernaryValue.FALSE) {
False,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,815,".getParent().replaceChild(n, block);"
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,821,Node parent =  n.getParent();
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,822,"parent.replaceChild(n, block);"
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,823,if (mayHaveSideEffects(cond)) {
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,824,"Node condStatement = new Node(Token.EXPR_RESULT, cond.detachFromParent())"
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,825,.copyInformationFrom(cond);
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,826,"parent.addChildAfter(condStatement, block);"
False,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,840,f (NodeUtil.getBooleanValue(forCondition) == TernaryValue.TRUE) {
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,852,if (NodeUtil.getPureBooleanValue(forCondition) == TernaryValue.TRUE) {
False,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,948,ernaryValue nVal = NodeUtil.getBooleanValue(first);
True,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,948,TernaryValue nVal = NodeUtil.getPureBooleanValue(first);
False,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,975,ernaryValue rightVal = NodeUtil.getBooleanValue(right);
False,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,976,f (NodeUtil.getBooleanValue(right) != TernaryValue.UNKNOWN) {
True,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,975,TernaryValue rightVal = NodeUtil.getPureBooleanValue(right);
True,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,976,if (NodeUtil.getPureBooleanValue(right) != TernaryValue.UNKNOWN) {
False,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,1017,f (NodeUtil.getBooleanValue(trueNode) == TernaryValue.TRUE
False,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,1018,& NodeUtil.getBooleanValue(falseNode) == TernaryValue.FALSE) {
True,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,1017,TernaryValue trueNodeVal = NodeUtil.getPureBooleanValue(trueNode);
True,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,1018,TernaryValue falseNodeVal = NodeUtil.getPureBooleanValue(falseNode);
True,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,1019,if (trueNodeVal == TernaryValue.TRUE
True,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,1020,&& falseNodeVal == TernaryValue.FALSE) {
False,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,1022, else if (NodeUtil.getBooleanValue(trueNode) == TernaryValue.FALSE
False,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,1023,& NodeUtil.getBooleanValue(falseNode) == TernaryValue.TRUE) {
True,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,1024,} else if (trueNodeVal == TernaryValue.FALSE
True,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,1025,&& falseNodeVal == TernaryValue.TRUE) {
False,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,1027, else if (NodeUtil.getBooleanValue(trueNode) == TernaryValue.TRUE) {
True,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,1029,} else if (trueNodeVal == TernaryValue.TRUE) {
False,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,1031, else if (NodeUtil.getBooleanValue(falseNode) == TernaryValue.FALSE) {
True,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,1033,} else if (falseNodeVal == TernaryValue.FALSE) {
False,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,1048,ernaryValue nVal = NodeUtil.getBooleanValue(n);
True,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,1050,TernaryValue nVal = NodeUtil.getPureBooleanValue(n);
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,108,// Known but getBooleanValue return false for expressions with side-effects
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,109,"assertBooleanUnknown(""{a:foo()}"");"
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,110,"assertBooleanUnknown(""[foo()]"");"
False,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,110,"ssertEquals(TernaryValue.TRUE, NodeUtil.getBooleanValue(getNode(val)));"
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,114,"assertEquals(TernaryValue.TRUE, NodeUtil.getPureBooleanValue(getNode(val)));"
False,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,114,"ssertEquals(TernaryValue.FALSE, NodeUtil.getBooleanValue(getNode(val)));"
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,118,assertEquals(
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,119,"TernaryValue.FALSE, NodeUtil.getPureBooleanValue(getNode(val)));"
False,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,118,"ssertEquals(TernaryValue.UNKNOWN, NodeUtil.getBooleanValue(getNode(val)));"
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,123,assertEquals(
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,124,"TernaryValue.UNKNOWN, NodeUtil.getPureBooleanValue(getNode(val)));"
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,185,"assertExpressionBooleanTrue(""{a:foo()}"");"
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,186,"assertExpressionBooleanTrue(""[foo()]"");"
False,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,182,odeUtil.getExpressionBooleanValue(getNode(val)));
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,191,NodeUtil.getImpureBooleanValue(getNode(val)));
False,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,187,odeUtil.getExpressionBooleanValue(getNode(val)));
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,196,NodeUtil.getImpureBooleanValue(getNode(val)));
False,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,192,odeUtil.getExpressionBooleanValue(getNode(val)));
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,201,NodeUtil.getImpureBooleanValue(getNode(val)));
True,test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java,test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java,222,"foldSame(""x = [foo()] && x"");"
True,test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java,test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java,977,public void testObjectLiteral() {
True,test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java,test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java,978,"test(""(!{})"", ""false"");"
True,test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java,test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java,979,"test(""(!{a:1})"", ""false"");"
True,test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java,test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java,980,"testSame(""(!{a:foo()})"");"
True,test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java,test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java,981,"testSame(""(!{'a':foo()})"");"
True,test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java,test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java,984,public void testArrayLiteral() {
True,test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java,test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java,985,"test(""(![])"", ""false"");"
True,test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java,test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java,986,"test(""(![1])"", ""false"");"
True,test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java,test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java,987,"test(""(![a])"", ""false"");"
True,test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java,test/com/google/javascript/jscomp/PeepholeFoldConstantsTest.java,988,"testSame(""(![foo()])"");"
True,test/com/google/javascript/jscomp/PeepholeIntegrationTest.java,test/com/google/javascript/jscomp/PeepholeIntegrationTest.java,341,public void testObjectLiteral() {
True,test/com/google/javascript/jscomp/PeepholeIntegrationTest.java,test/com/google/javascript/jscomp/PeepholeIntegrationTest.java,342,"test(""({})"", """");"
True,test/com/google/javascript/jscomp/PeepholeIntegrationTest.java,test/com/google/javascript/jscomp/PeepholeIntegrationTest.java,343,"test(""({a:1})"", """");"
True,test/com/google/javascript/jscomp/PeepholeIntegrationTest.java,test/com/google/javascript/jscomp/PeepholeIntegrationTest.java,344,"test(""({a:foo()})"", ""foo()"");"
True,test/com/google/javascript/jscomp/PeepholeIntegrationTest.java,test/com/google/javascript/jscomp/PeepholeIntegrationTest.java,345,"test(""({'a':foo()})"", ""foo()"");"
True,test/com/google/javascript/jscomp/PeepholeIntegrationTest.java,test/com/google/javascript/jscomp/PeepholeIntegrationTest.java,348,public void testArrayLiteral() {
True,test/com/google/javascript/jscomp/PeepholeIntegrationTest.java,test/com/google/javascript/jscomp/PeepholeIntegrationTest.java,349,"test(""([])"", """");"
True,test/com/google/javascript/jscomp/PeepholeIntegrationTest.java,test/com/google/javascript/jscomp/PeepholeIntegrationTest.java,350,"test(""([1])"", """");"
True,test/com/google/javascript/jscomp/PeepholeIntegrationTest.java,test/com/google/javascript/jscomp/PeepholeIntegrationTest.java,351,"test(""([a])"", """");"
True,test/com/google/javascript/jscomp/PeepholeIntegrationTest.java,test/com/google/javascript/jscomp/PeepholeIntegrationTest.java,352,"test(""([foo()])"", ""foo()"");"
True,test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java,test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java,197,"fold(""do { var a = 0; } while(!{a:foo()});"", ""var a=0;foo()"");"
True,test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java,test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java,577,public void testObjectLiteral() {
True,test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java,test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java,578,"test(""({})"", """");"
True,test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java,test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java,579,"test(""({a:1})"", """");"
True,test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java,test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java,580,"test(""({a:foo()})"", ""foo()"");"
True,test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java,test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java,581,"test(""({'a':foo()})"", ""foo()"");"
True,test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java,test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java,584,public void testArrayLiteral() {
True,test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java,test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java,585,"test(""([])"", """");"
True,test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java,test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java,586,"test(""([1])"", """");"
True,test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java,test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java,587,"test(""([a])"", """");"
True,test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java,test/com/google/javascript/jscomp/PeepholeRemoveDeadCodeTest.java,588,"test(""([foo()])"", ""foo()"");"
True,test/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntaxTest.java,test/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntaxTest.java,798,public void testObjectLiteral() {
True,test/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntaxTest.java,test/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntaxTest.java,799,"test(""({})"", ""1"");"
True,test/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntaxTest.java,test/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntaxTest.java,800,"test(""({a:1})"", ""1"");"
True,test/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntaxTest.java,test/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntaxTest.java,801,"testSame(""({a:foo()})"");"
True,test/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntaxTest.java,test/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntaxTest.java,802,"testSame(""({'a':foo()})"");"
True,test/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntaxTest.java,test/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntaxTest.java,805,public void testArrayLiteral() {
True,test/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntaxTest.java,test/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntaxTest.java,806,"test(""([])"", ""1"");"
True,test/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntaxTest.java,test/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntaxTest.java,807,"test(""([1])"", ""1"");"
True,test/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntaxTest.java,test/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntaxTest.java,808,"test(""([a])"", ""1"");"
True,test/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntaxTest.java,test/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntaxTest.java,809,"testSame(""([foo()])"");"
