is_addition,old_file_path,new_file_path,line_num,content
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,22,mport com.google.javascript.jscomp.AbstractCompiler.LifeCycleStage;
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,24,mport com.google.javascript.jscomp.Scope.Var;
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,50,// TODO(johnlenz): Remove this.
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,51,"OptimizeParameters(AbstractCompiler compiler, NameReferenceGraph unused) {"
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,52,this(compiler);
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,55,reconditions.checkState(
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,56,ompiler.getLifeCycleStage() == LifeCycleStage.NORMALIZED);
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,185,oolean continueLooking = false;
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,194,"ontinueLooking = buildParameterList(parameters, cur, site.scope);"
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,194,"buildParameterList(parameters, cur);"
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,197,"ontinueLooking= findFixedParameters(parameters, cur);"
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,197,"findConstantParameters(parameters, cur);"
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,199,f (!continueLooking) {
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,200,eturn;
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,204,ontinueLooking = adjustForSideEffects(parameters);
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,205,f (!continueLooking) {
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,206,eturn;
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,214,"ptimizeCallSite(defFinder, parameters, call);"
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,206,"optimizeCallSite(parameters, call);"
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,226, Adjust the parameters to move based on the side-effects seen.
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,227, @return Whether there are any movable parameters.
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,229,rivate boolean adjustForSideEffects(List<Parameter> parameters) {
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,230,"/ If a parameter is moved, that has side-effect no parameters that"
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,231,/ can be effected by side-effects can be left.
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,233,"/ A parameter can be moved if it can't be side-effected (immutable),"
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,234,"/ or there are no following side-effects, that aren't moved."
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,236,oolean anyMovable = false;
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,237,oolean seenUnmovableSideEffects = false;
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,238,oolean seenUnmoveableSideEfffected = false;
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,239,or (int i = parameters.size() - 1; i >= 0; i--) {
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,240,arameter current = parameters.get(i);
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,242,"/ Preserve side-effect ordering, don't move this parameter if:"
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,243,/ * the current parameter has side-effects and a following
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,244,/ parameters that will not be move can be effected.
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,245,/ * the current parameter can be effected and a following
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,246,/ parameter that will not be moved has side-effects
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,248,f (current.shouldRemove
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,249,& ((seenUnmovableSideEffects && current.canBeSideEffected())
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,250,| (seenUnmoveableSideEfffected && current.hasSideEffects()))) {
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,251,urrent.shouldRemove = false;
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,254,f (current.shouldRemove) {
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,255,nyMovable = true;
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,256, else {
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,257,f (current.canBeSideEffected) {
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,258,eenUnmoveableSideEfffected = true;
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,261,f (current.hasSideEffects) {
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,262,eenUnmovableSideEffects = true;
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,266,eturn anyMovable;
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,270, Detemine which parameter use the same expression.
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,271, @return Whether any parameter was found that can be updated.
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,273,"rivate boolean findFixedParameters(List<Parameter> parameters, Node cur) {"
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,274,oolean anyMovable = false;
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,217,"private void findConstantParameters(List<Parameter> parameters, Node cur) {"
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,277,arameter p;
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,279," = new Parameter(cur, false);"
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,280,arameters.add(p);
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,281, else {
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,282, = parameters.get(index);
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,283,f (p.shouldRemove()) {
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,284,ode value = p.getArg();
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,285,f (!cur.isEquivalentTo(value)) {
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,286,.setShouldRemove(false);
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,287, else {
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,288,nyMovable = true;
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,221,"parameters.add(new Parameter(cur, false));"
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,222,} else if (parameters.get(index).shouldRemove()) {
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,223,Node value = parameters.get(index).getArg();
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,224,"if (!nodesAreEqual(cur, value)) {"
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,225,parameters.get(index).setShouldRemove(false);
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,293,"etParameterSideEffectInfo(p, cur);"
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,301,eturn anyMovable;
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,305, @return Whether any parameter was movable.
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,307,rivate boolean buildParameterList(
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,308,"ist<Parameter> parameters, Node cur, Scope s) {"
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,309,oolean anyMovable = false;
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,236,"private void buildParameterList(List<Parameter> parameters, Node cur) {"
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,311,"oolean movable = isMovableValue(cur, s);"
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,312,"arameter p = new Parameter(cur, movable);"
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,313,"etParameterSideEffectInfo(p, cur);"
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,314,arameters.add(p);
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,315,f (movable) {
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,316,nyMovable = true;
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,319,eturn anyMovable;
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,322,"rivate void setParameterSideEffectInfo(Parameter p, Node value) {"
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,323,f (!p.hasSideEffects()) {
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,324,".setHasSideEffects(NodeUtil.mayHaveSideEffects(value, compiler));"
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,327,f (!p.canBeSideEffected()) {
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,328,.setCanBeSideEffected(NodeUtil.canBeSideEffected(value));
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,238,"parameters.add(new Parameter(cur, NodeUtil.isLiteralValue(cur, false)));"
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,334, @return Whether the expression can be safely moved to another function
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,335,   in another scope.
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,337,"rivate boolean isMovableValue(Node n, Scope s) {"
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,338,"/ Things that can change value or are inaccessible can't be moved, these"
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,339,"/ are ""this"", ""arguments"", local names, and functions that capture local"
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,340,/ values.
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,341,witch (n.getType()) {
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,342,ase Token.THIS:
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,343,eturn false;
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,344,ase Token.FUNCTION:
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,345,/ Don't move function closures.
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,346,/ TODO(johnlenz): Closure that only contain global reference can be
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,347,/ moved.
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,348,eturn false;
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,349,ase Token.NAME:
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,350,"f (n.getString().equals(""arguments"")) {"
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,351,eturn false;
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,352, else {
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,353,ar v = s.getVar(n.getString());
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,354,f (v != null && v.isLocal()) {
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,355,eturn false;
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,358,reak;
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,361,or (Node c = n.getFirstChild(); c != null; c = c.getNext()) {
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,362,"f (!isMovableValue(c, s)) {"
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,363,eturn false;
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,366,eturn true;
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,382,rivate void optimizeCallSite(
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,383,"impleDefinitionFinder defFinder, List<Parameter> parameters, Node call) {"
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,255,"private void optimizeCallSite(List<Parameter> parameters, Node call) {"
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,385,arameter p = parameters.get(index);
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,386,f (p.shouldRemove()) {
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,387,"liminateCallParamAt(defFinder, p, call, index);"
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,257,if (parameters.get(index).shouldRemove()) {
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,258,"eliminateCallParamAt(call, index);"
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,264,* Node equality as intended by the this pass.
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,265,* @param n1 A node
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,266,* @param n2 A node
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,267,* @return true if both node are considered equal for the purposes of this
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,268,"* class, false otherwise."
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,270,"private boolean nodesAreEqual(Node n1, Node n2) {"
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,271,return NodeUtil.isImmutableValue(n1) && NodeUtil.isImmutableValue(n2) &&
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,272,n1.isEquivalentTo(n2);
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,399,rivate boolean hasSideEffects;
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,400,rivate boolean canBeSideEffected;
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,419,ublic void setHasSideEffects(boolean hasSideEffects) {
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,420,his.hasSideEffects = hasSideEffects;
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,423,ublic boolean hasSideEffects() {
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,424,eturn hasSideEffects;
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,427,ublic void setCanBeSideEffected(boolean canBeSideEffected) {
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,428,his.canBeSideEffected = canBeSideEffected;
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,431,ublic boolean canBeSideEffected() {
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,432,eturn canBeSideEffected;
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,450,reconditions.checkState(value.getParent() == null);
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,451,"ode newVar = NodeUtil.newVarNode(varName.getString(), value);"
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,315,"Node newVar = NodeUtil.newVarNode(varName.getQualifiedName(),"
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,316,value.cloneTree());
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,506, @param defFinder
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,507, @param p
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,512,rivate Node eliminateCallParamAt(
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,513,"impleDefinitionFinder defFinder, Parameter p, Node call, int argIndex) {"
True,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,375,"private Node eliminateCallParamAt(Node call, int argIndex) {"
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,522,/ The value in the parameter object is the one that is being moved into
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,523,"/ function definition leave that one's references.  For everthing else,"
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,524,/ remove any references.
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,525,f (p.getArg() != formalArgPtr) {
False,src/com/google/javascript/jscomp/OptimizeParameters.java,src/com/google/javascript/jscomp/OptimizeParameters.java,526,efFinder.removeReferences(formalArgPtr);
False,src/com/google/javascript/jscomp/SimpleDefinitionFinder.java,src/com/google/javascript/jscomp/SimpleDefinitionFinder.java,288,"ew UseSite(node, traversal.getScope(), traversal.getModule()));"
True,src/com/google/javascript/jscomp/SimpleDefinitionFinder.java,src/com/google/javascript/jscomp/SimpleDefinitionFinder.java,288,"new UseSite(node, traversal.getModule()));"
False,src/com/google/javascript/jscomp/SimpleDefinitionFinder.java,src/com/google/javascript/jscomp/SimpleDefinitionFinder.java,425,"his.nameUseSiteMultimap.remove(name, new UseSite(useSite, null, null));"
True,src/com/google/javascript/jscomp/SimpleDefinitionFinder.java,src/com/google/javascript/jscomp/SimpleDefinitionFinder.java,425,"this.nameUseSiteMultimap.remove(name, new UseSite(useSite, null));"
False,src/com/google/javascript/jscomp/UseSite.java,src/com/google/javascript/jscomp/UseSite.java,30,inal Scope scope;
False,src/com/google/javascript/jscomp/UseSite.java,src/com/google/javascript/jscomp/UseSite.java,33,"seSite(Node node, Scope scope, JSModule module) {"
True,src/com/google/javascript/jscomp/UseSite.java,src/com/google/javascript/jscomp/UseSite.java,32,"UseSite(Node node, JSModule module) {"
False,src/com/google/javascript/jscomp/UseSite.java,src/com/google/javascript/jscomp/UseSite.java,35,his.scope = scope;
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,32,uper.enableNormalize();
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,248,/ Don't change the call to baz as it has been aliased.
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,250,est(
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,251,"function foo(bar) {};"" +"
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,252,"baz = function(a) {};"" +"
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,253,"baz(1);"" +"
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,254,"foo(baz);"","
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,255,"function foo() {var bar = baz};"" +"
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,256,"baz = function(a) {};"" +"
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,257,"baz(1);"" +"
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,258,"foo();"");"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,247,"String src = ""function foo(bar) {};"" +"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,248,"""baz = function(a) {};"" +"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,249,"""baz(1);"" +"
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,250,"""foo(baz);""; // Baz should be aliased."
True,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,251,testSame(src);
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,481,ublic void testMutableValues1() {
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,482,"est(""function foo(p1) {} foo()"","
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,483,"function foo() {var p1} foo()"");"
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,484,"est(""function foo(p1) {} foo(1)"","
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,485,"function foo() {var p1=1} foo()"");"
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,486,"est(""function foo(p1) {} foo([])"","
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,487,"function foo() {var p1=[]} foo()"");"
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,488,"est(""function foo(p1) {} foo({})"","
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,489,"function foo() {var p1={}} foo()"");"
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,490,"est(""var x;function foo(p1) {} foo(x)"","
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,491,"var x;function foo() {var p1=x} foo()"");"
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,492,"est(""var x;function foo(p1) {} foo(x())"","
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,493,"var x;function foo() {var p1=x()} foo()"");"
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,494,"est(""var x;function foo(p1) {} foo(new x())"","
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,495,"var x;function foo() {var p1=new x()} foo()"");"
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,496,"est(""var x;function foo(p1) {} foo('' + x)"","
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,497,"var x;function foo() {var p1='' + x} foo()"");"
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,499,"estSame(""function foo(p1) {} foo(this)"");"
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,500,"estSame(""function foo(p1) {} foo(arguments)"");"
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,501,"estSame(""function foo(p1) {} foo(function(){})"");"
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,502,"estSame(""function foo(p1) {} (function () {var x;foo(x)})()"");"
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,505,ublic void testMutableValues2() {
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,506,"est(""function foo(p1, p2) {} foo(1, 2)"","
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,507,"function foo() {var p1=1; var p2 = 2} foo()"");"
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,508,"est(""var x; var y; function foo(p1, p2) {} foo(x(), y())"","
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,509,"var x; var y; function foo() {var p1=x(); var p2 = y()} foo()"");"
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,512,ublic void testMutableValues3() {
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,513,est(
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,514,"var x; var y; var z;"" +"
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,515,"function foo(p1, p2) {}"" +"
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,516,"foo(x(), y()); foo(x(),y())"","
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,517,"var x; var y; var z;"" +"
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,518,"function foo() {var p1=x(); var p2=y()}"" +"
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,519,"foo(); foo()"");"
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,522,ublic void testMutableValues4() {
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,523,/ Preserve the ordering of side-effects.
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,524,"/ If z(), can't be moved into the function then z() may change the value"
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,525,/ of x and y.
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,526,estSame(
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,527,"var x; var y; var z;"" +"
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,528,"function foo(p1, p2, p3) {}"" +"
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,529,"foo(x(), y(), z()); foo(x(),y(),3)"");"
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,531,"/ If z(), can't be moved into the function then z() may change the value"
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,532,/ of x and y.
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,533,estSame(
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,534,"var x; var y; var z;"" +"
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,535,"function foo(p1, p2, p3) {}"" +"
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,536,"foo(x, y(), z()); foo(x,y(),3)"");"
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,538,"/ Mutable object that can not be effect by side-effects are movable,"
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,539,/ however.
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,540,est(
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,541,"var x; var y; var z;"" +"
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,542,"function foo(p1, p2, p3) {}"" +"
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,543,"foo([], y(), z()); foo([],y(),3)"","
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,544,"var x; var y; var z;"" +"
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,545,"function foo(p2, p3) {var p1=[]}"" +"
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,546,"foo(y(), z()); foo(y(),3)"");"
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,549,ublic void testMutableValues5() {
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,550,est(
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,551,"var x; var y; var z;"" +"
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,552,"function foo(p1, p2) {}"" +"
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,553,"new foo(new x(), y()); new foo(new x(),y())"","
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,554,"var x; var y; var z;"" +"
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,555,"function foo() {var p1=new x(); var p2=y()}"" +"
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,556,"new foo(); new foo()"");"
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,558,est(
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,559,"var x; var y; var z;"" +"
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,560,"function foo(p1, p2) {}"" +"
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,561,"new foo(x(), y()); new foo(x(),y())"","
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,562,"var x; var y; var z;"" +"
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,563,"function foo() {var p1=x(); var p2=y()}"" +"
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,564,"new foo(); new foo()"");"
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,566,estSame(
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,567,"var x; var y; var z;"" +"
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,568,"function foo(p1, p2, p3) {}"" +"
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,569,"new foo(x(), y(), z()); new foo(x(),y(),3)"");"
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,571,estSame(
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,572,"var x; var y; var z;"" +"
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,573,"function foo(p1, p2, p3) {}"" +"
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,574,"new foo(x, y(), z()); new foo(x,y(),3)"");"
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,576,est(
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,577,"var x; var y; var z;"" +"
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,578,"function foo(p1, p2, p3) {}"" +"
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,579,"new foo([], y(), z()); new foo([],y(),3)"","
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,580,"var x; var y; var z;"" +"
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,581,"function foo(p2, p3) {var p1=[]}"" +"
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,582,"new foo(y(), z()); new foo(y(),3)"");"
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,585,ublic void testShadows() {
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,586,"estSame(""function foo(a) {}"" +"
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,587,"var x;"" +"
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,588,"function f() {"" +"
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,589,"  var x;"" +"
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,590,"  function g() {"" +"
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,591,"    foo(x());"" +"
False,test/com/google/javascript/jscomp/OptimizeParametersTest.java,test/com/google/javascript/jscomp/OptimizeParametersTest.java,594,"foo(x())"");"
