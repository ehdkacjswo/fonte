is_addition,old_file_path,new_file_path,line_num,content
False,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,240,"/ Type-checking already does more accurate method arity checking, so don't"
False,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,241,/ do legacy method arity checking unless checkTypes is OFF.
False,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,246, else {
False,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,247,f (options.checkFunctions.isOn()) {
False,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,248,hecks.add(checkFunctions);
False,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,251,f (options.checkMethods.isOn()) {
False,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,252,hecks.add(checkMethods);
False,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,853,** Checks number of args passed to functions. */
False,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,854,rivate final PassFactory checkFunctions =
False,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,855,"ew PassFactory(""checkFunctions"", true) {"
False,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,856,Override
False,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,857,rotected CompilerPass createInternal(AbstractCompiler compiler) {
False,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,858,"eturn new FunctionCheck(compiler, options.checkFunctions);"
False,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,862,** Checks number of args passed to methods. */
False,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,863,rivate final PassFactory checkMethods =
False,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,864,"ew PassFactory(""checkMethods"", true) {"
False,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,865,Override
False,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,866,rotected CompilerPass createInternal(AbstractCompiler compiler) {
False,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,867,"eturn new MethodCheck(compiler, options.checkMethods);"
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,2, Copyright 2004 Google Inc.
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,4," Licensed under the Apache License, Version 2.0 (the ""License"");"
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,5, you may not use this file except in compliance with the License.
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,6, You may obtain a copy of the License at
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,8,     http://www.apache.org/licenses/LICENSE-2.0
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,10," Unless required by applicable law or agreed to in writing, software"
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,11," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,12," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,13, See the License for the specific language governing permissions and
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,14, limitations under the License.
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,17,ackage com.google.javascript.jscomp;
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,19,mport com.google.common.base.Preconditions;
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,20,mport com.google.common.collect.Lists;
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,21,mport com.google.javascript.jscomp.CheckLevel;
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,22,mport com.google.javascript.jscomp.NodeTraversal.AbstractPostOrderCallback;
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,23,mport com.google.javascript.rhino.Node;
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,24,mport com.google.javascript.rhino.Token;
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,26,mport java.util.Collections;
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,27,mport java.util.HashMap;
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,28,mport java.util.Map;
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,32, Checks that functions have the correct number of arguments.
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,36,lass FunctionCheck implements CompilerPass {
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,38,rivate final AbstractCompiler compiler;
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,40,** CheckLevel for reporting {@link #WRONG_ARGUMENT_COUNT_ERROR} */
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,41,rivate final CheckLevel level;
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,43,/ We store the FunctionInfo objects in a map so we do not have to go through
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,44,"/ them more than once. More importantly, we do that because we remove the"
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,45,/ var_args argument the first time and therefore we cannot use the same
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,46,/ function node to derive a new FunctionInfo.
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,47,"rivate final Map<Node, FunctionInfo> functionInfos;"
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,49,/ Errors
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,51,tatic final DiagnosticType WRONG_ARGUMENT_COUNT_ERROR = DiagnosticType.error(
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,52,"JSC_WRONG_ARGUMENT_COUNT"","
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,53,"Function {0}: called with {1} argument(s). "" +"
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,54,"All definitions of this function require at least {2} argument(s)"" +"
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,55,"{3}."");"
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,57,tatic final DiagnosticType OPTIONAL_ARGS_ERROR = DiagnosticType.error(
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,58,"JSC_OPTIONAL_ARGS_ERROR"","
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,59,"Required argument must precede optional argument(s)"");"
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,61,tatic final DiagnosticType VAR_ARGS_ERROR = DiagnosticType.error(
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,62,"JSC_VAR_ARGS_ERROR"","
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,63,"Argument must precede var_args argument"");"
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,66,"unctionCheck(AbstractCompiler compiler, CheckLevel level) {"
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,67,his.compiler = compiler;
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,68,his.level = level;
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,69,"his.functionInfos = new HashMap<Node, FunctionInfo>();"
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,72,"ublic void process(Node externs, Node root) {"
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,73,"odeTraversal.traverseRoots(compiler,"
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,74,"ists.newArrayList(externs, root), new ArgCheck());"
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,78, Contains information about the number of args a function accepts.
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,80,tatic class FunctionInfo {
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,81,inal int args;
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,82,inal int optionalArgs;
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,83,inal boolean hasVarArgs;
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,85,"unctionInfo(int args, int optionalArgs, boolean hasVarArgs) {"
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,86,his.args = args;
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,87,his.optionalArgs = optionalArgs;
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,88,his.hasVarArgs = hasVarArgs;
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,91,Override public boolean equals(Object other) {
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,92,f (!(other instanceof FunctionInfo)) {
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,93,eturn false;
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,96,unctionInfo o = (FunctionInfo) other;
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,98,eturn o.args == args &&
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,99,.optionalArgs == optionalArgs &&
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,100,.hasVarArgs == hasVarArgs;
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,103,Override public int hashCode() {
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,104,nt result = 17;
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,105,esult = 37 * result + args;
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,106,esult = 37 * result + optionalArgs;
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,107,esult = 37 * result + (hasVarArgs ? 1 : 0);
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,108,eturn result;
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,111,Override public String toString() {
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,112,"eturn args + "" total argument(s) "" +"
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,113,"of which "" + optionalArgs + "" is/are optional"" +"
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,114,"hasVarArgs ? "", var_args supported"" : """");"
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,119, Second pass: look at the function calls and check that the number of
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,120, arguments are okay.
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,122,lass ArgCheck extends AbstractPostOrderCallback {
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,123,"ublic void visit(NodeTraversal t, Node n, Node parent) {"
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,124,witch (n.getType()) {
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,126,ase Token.NEW:
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,127,ase Token.CALL:
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,128,ode fn = n.getFirstChild();
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,129,f (fn.getType() == Token.NAME) {
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,131,tring fnName = fn.getString();
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,133,/ Lookup the function
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,134,cope.Var v = t.getScope().getVar(fnName);
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,136,/ VarCheck should have caught this undefined function
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,137,f (v == null) {
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,138,eturn;
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,141,ode fnDef = v.getInitialValue();
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,142,f (fnDef == null ||
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,143,nDef.getType() != Token.FUNCTION) {
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,144,"/ It's a variable, can't check this."
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,145,eturn;
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,148,"unctionInfo f = getFunctionInfo(fnDef, v.getInputName());"
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,150,"heckCall(n, fnName, Collections.singletonList(f), t, level);"
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,152,reak;
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,157,"tatic void checkCall(Node n,"
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,158,"tring fnName,"
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,159,"terable<FunctionInfo> infos,"
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,160,"odeTraversal t,"
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,161,heckLevel level) {
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,162,nt count = n.getChildCount() - 1;
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,163,oolean matched = false;
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,165,nt minArgs = Integer.MAX_VALUE;
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,166,nt maxArgs = Integer.MIN_VALUE;
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,168,or (FunctionInfo f : infos) {
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,169,nt requiredCount = f.args - f.optionalArgs;
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,170,f (count >= requiredCount && (count <= f.args || f.hasVarArgs)) {
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,171,atched = true;
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,172,reak;
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,175,"inArgs = Math.min(minArgs, requiredCount);"
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,176,"axArgs = Math.max(maxArgs, f.hasVarArgs ? Integer.MAX_VALUE : f.args);"
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,179,f (!matched) {
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,180,.getCompiler().report(
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,181,"SError.make(t, n,"
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,182,"evel,"
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,183,"RONG_ARGUMENT_COUNT_ERROR, fnName,"
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,184,"tring.valueOf(count), String.valueOf(minArgs),"
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,185,axArgs != Integer.MAX_VALUE
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,186," "" and no more than "" + maxArgs + "" argument(s)"""
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,192, Gets a {@link FunctionInfo} instance containing information about a
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,193, particular function's arguments. Caches the result for faster handling of
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,194, repeated queries.
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,196, @param fn A FUNCTION node
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,197, @param fnSourceName The name of the script source in which the function is
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,198,     defined (for formatting error/warning messages)
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,200,"unctionInfo getFunctionInfo(Node fn, String fnSourceName) {"
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,201,unctionInfo fi = functionInfos.get(fn);
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,202,f (fi == null) {
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,203,"i = createFunctionInfo(compiler, fn, fnSourceName);"
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,204,"unctionInfos.put(fn, fi);"
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,206,eturn fi;
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,210," Given a function node, creates a {@link FunctionInfo} instance containing"
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,211, information about the function's arguments.
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,213, @param compiler The compiler
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,214, @param fn A FUNCTION node
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,215, @param fnSourceName The name of the script source in which the function is
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,216,     defined (for formatting error/warning messages)
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,218,tatic FunctionInfo createFunctionInfo(
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,219,"bstractCompiler compiler, Node fn, String fnSourceName) {"
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,220,reconditions.checkState(fn.getType() == Token.FUNCTION);
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,222,/ Arguments that start with OPTIONAL_ARG_PREFIX are considered
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,223,/ optional. Count the number of required and optional args.
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,224,"nt numArgs = 0, optArgs = 0;"
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,225,oolean hasVarArgs = false;
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,226,ode args = fn.getFirstChild().getNext();
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,227,ode varArg = null;
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,228,or (Node a = args.getFirstChild(); a != null; a = a.getNext()) {
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,229,reconditions.checkState(a.getType() == Token.NAME);
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,231,tring argName = a.getString();
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,232,f (hasVarArgs) {
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,233,/ var_args must be the last param
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,234,"ompiler.report(JSError.make(fnSourceName, a, VAR_ARGS_ERROR));"
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,237,f (a.getBooleanProp(Node.IS_VAR_ARGS_PARAM)) {
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,238,arArg = a;
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,239,asVarArgs = true;
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,240,/ we don't want to count the var_args as an argument
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,241,umArgs--;
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,242, else if (a.getBooleanProp(Node.IS_OPTIONAL_PARAM)) {
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,243,ptArgs++;
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,244, else if (optArgs > 0) {
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,245,/ Optional args shouldn't precede non-optional ones
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,246,"ompiler.report(JSError.make(fnSourceName, a, OPTIONAL_ARGS_ERROR));"
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,248,umArgs++;
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,251,/ create the FunctionInfo
False,src/com/google/javascript/jscomp/FunctionCheck.java,src/com/google/javascript/jscomp/FunctionCheck.java,252,"eturn new FunctionInfo(numArgs, optArgs, hasVarArgs);"
False,src/com/google/javascript/jscomp/InlineVariables.java,src/com/google/javascript/jscomp/InlineVariables.java,653,f (!(NodeUtil.isImmutableValue(value) &&
True,src/com/google/javascript/jscomp/InlineVariables.java,src/com/google/javascript/jscomp/InlineVariables.java,654,boolean isImmutableValueWorthInlining =
True,src/com/google/javascript/jscomp/InlineVariables.java,src/com/google/javascript/jscomp/InlineVariables.java,655,NodeUtil.isImmutableValue(value) &&
False,src/com/google/javascript/jscomp/InlineVariables.java,src/com/google/javascript/jscomp/InlineVariables.java,655,"sStringWorthInlining(v, refInfo.references)))) {"
True,src/com/google/javascript/jscomp/InlineVariables.java,src/com/google/javascript/jscomp/InlineVariables.java,657,"isStringWorthInlining(v, refInfo.references));"
True,src/com/google/javascript/jscomp/InlineVariables.java,src/com/google/javascript/jscomp/InlineVariables.java,658,boolean isInlinableThisAlias =
True,src/com/google/javascript/jscomp/InlineVariables.java,src/com/google/javascript/jscomp/InlineVariables.java,659,value.getType() == Token.THIS &&
True,src/com/google/javascript/jscomp/InlineVariables.java,src/com/google/javascript/jscomp/InlineVariables.java,660,!refInfo.isEscaped();
True,src/com/google/javascript/jscomp/InlineVariables.java,src/com/google/javascript/jscomp/InlineVariables.java,661,if (!isImmutableValueWorthInlining && !isInlinableThisAlias) {
False,src/com/google/javascript/jscomp/MethodCheck.java,src/com/google/javascript/jscomp/MethodCheck.java,2, Copyright 2006 Google Inc.
False,src/com/google/javascript/jscomp/MethodCheck.java,src/com/google/javascript/jscomp/MethodCheck.java,4," Licensed under the Apache License, Version 2.0 (the ""License"");"
False,src/com/google/javascript/jscomp/MethodCheck.java,src/com/google/javascript/jscomp/MethodCheck.java,5, you may not use this file except in compliance with the License.
False,src/com/google/javascript/jscomp/MethodCheck.java,src/com/google/javascript/jscomp/MethodCheck.java,6, You may obtain a copy of the License at
False,src/com/google/javascript/jscomp/MethodCheck.java,src/com/google/javascript/jscomp/MethodCheck.java,8,     http://www.apache.org/licenses/LICENSE-2.0
False,src/com/google/javascript/jscomp/MethodCheck.java,src/com/google/javascript/jscomp/MethodCheck.java,10," Unless required by applicable law or agreed to in writing, software"
False,src/com/google/javascript/jscomp/MethodCheck.java,src/com/google/javascript/jscomp/MethodCheck.java,11," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/com/google/javascript/jscomp/MethodCheck.java,src/com/google/javascript/jscomp/MethodCheck.java,12," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/com/google/javascript/jscomp/MethodCheck.java,src/com/google/javascript/jscomp/MethodCheck.java,13, See the License for the specific language governing permissions and
False,src/com/google/javascript/jscomp/MethodCheck.java,src/com/google/javascript/jscomp/MethodCheck.java,14, limitations under the License.
False,src/com/google/javascript/jscomp/MethodCheck.java,src/com/google/javascript/jscomp/MethodCheck.java,17,ackage com.google.javascript.jscomp;
False,src/com/google/javascript/jscomp/MethodCheck.java,src/com/google/javascript/jscomp/MethodCheck.java,19,mport com.google.common.collect.HashMultimap;
False,src/com/google/javascript/jscomp/MethodCheck.java,src/com/google/javascript/jscomp/MethodCheck.java,20,mport com.google.common.collect.Multimap;
False,src/com/google/javascript/jscomp/MethodCheck.java,src/com/google/javascript/jscomp/MethodCheck.java,21,mport com.google.javascript.jscomp.FunctionCheck.FunctionInfo;
False,src/com/google/javascript/jscomp/MethodCheck.java,src/com/google/javascript/jscomp/MethodCheck.java,22,mport com.google.javascript.jscomp.NodeTraversal.Callback;
False,src/com/google/javascript/jscomp/MethodCheck.java,src/com/google/javascript/jscomp/MethodCheck.java,23,mport com.google.javascript.rhino.Node;
False,src/com/google/javascript/jscomp/MethodCheck.java,src/com/google/javascript/jscomp/MethodCheck.java,25,mport java.util.Collection;
False,src/com/google/javascript/jscomp/MethodCheck.java,src/com/google/javascript/jscomp/MethodCheck.java,28, Checks method arity. Looks for the following ways of defining methods:
False,src/com/google/javascript/jscomp/MethodCheck.java,src/com/google/javascript/jscomp/MethodCheck.java,30, <pre>
False,src/com/google/javascript/jscomp/MethodCheck.java,src/com/google/javascript/jscomp/MethodCheck.java,31, Foo.prototype.bar = function() {};
False,src/com/google/javascript/jscomp/MethodCheck.java,src/com/google/javascript/jscomp/MethodCheck.java,32, Foo.prototype = {
False,src/com/google/javascript/jscomp/MethodCheck.java,src/com/google/javascript/jscomp/MethodCheck.java,33,  bar: function() {}
False,src/com/google/javascript/jscomp/MethodCheck.java,src/com/google/javascript/jscomp/MethodCheck.java,35, Foo.bar = function() {};
False,src/com/google/javascript/jscomp/MethodCheck.java,src/com/google/javascript/jscomp/MethodCheck.java,36, </pre>
False,src/com/google/javascript/jscomp/MethodCheck.java,src/com/google/javascript/jscomp/MethodCheck.java,38," <p>Methods with the same name with different signatures are handled, it is"
False,src/com/google/javascript/jscomp/MethodCheck.java,src/com/google/javascript/jscomp/MethodCheck.java,39, assumed that callers have to match at least one of the signatures.</p>
False,src/com/google/javascript/jscomp/MethodCheck.java,src/com/google/javascript/jscomp/MethodCheck.java,43,lass MethodCheck extends MethodCompilerPass {
False,src/com/google/javascript/jscomp/MethodCheck.java,src/com/google/javascript/jscomp/MethodCheck.java,45,rivate final CheckLevel level;
False,src/com/google/javascript/jscomp/MethodCheck.java,src/com/google/javascript/jscomp/MethodCheck.java,47,** Map from method names to possible signatures */
False,src/com/google/javascript/jscomp/MethodCheck.java,src/com/google/javascript/jscomp/MethodCheck.java,48,"inal Multimap<String,FunctionInfo> methodSignatures ="
False,src/com/google/javascript/jscomp/MethodCheck.java,src/com/google/javascript/jscomp/MethodCheck.java,49,ashMultimap.create();
False,src/com/google/javascript/jscomp/MethodCheck.java,src/com/google/javascript/jscomp/MethodCheck.java,51,inal MethodCompilerPass.SignatureStore signatureCallback = new Store();
False,src/com/google/javascript/jscomp/MethodCheck.java,src/com/google/javascript/jscomp/MethodCheck.java,53,"ethodCheck(AbstractCompiler compiler, CheckLevel level) {"
False,src/com/google/javascript/jscomp/MethodCheck.java,src/com/google/javascript/jscomp/MethodCheck.java,54,uper(compiler);
False,src/com/google/javascript/jscomp/MethodCheck.java,src/com/google/javascript/jscomp/MethodCheck.java,55,his.level = level;
False,src/com/google/javascript/jscomp/MethodCheck.java,src/com/google/javascript/jscomp/MethodCheck.java,59, Checks method calls based on signatures that have been gathered. Only
False,src/com/google/javascript/jscomp/MethodCheck.java,src/com/google/javascript/jscomp/MethodCheck.java,60," calls of the form foo.bar() will be checked (as opposed to foo[""bar""])."
False,src/com/google/javascript/jscomp/MethodCheck.java,src/com/google/javascript/jscomp/MethodCheck.java,62,rivate class CheckUsage extends InvocationsCallback {
False,src/com/google/javascript/jscomp/MethodCheck.java,src/com/google/javascript/jscomp/MethodCheck.java,64,Override
False,src/com/google/javascript/jscomp/MethodCheck.java,src/com/google/javascript/jscomp/MethodCheck.java,65,"oid visit(NodeTraversal t, Node callNode, Node parent, String callName) {"
False,src/com/google/javascript/jscomp/MethodCheck.java,src/com/google/javascript/jscomp/MethodCheck.java,66,f (externMethodsWithoutSignatures.contains(callName)) {
False,src/com/google/javascript/jscomp/MethodCheck.java,src/com/google/javascript/jscomp/MethodCheck.java,67,eturn;
False,src/com/google/javascript/jscomp/MethodCheck.java,src/com/google/javascript/jscomp/MethodCheck.java,70,ollection<FunctionInfo> signatures = methodSignatures.get(callName);
False,src/com/google/javascript/jscomp/MethodCheck.java,src/com/google/javascript/jscomp/MethodCheck.java,72,f (signatures.isEmpty()) {
False,src/com/google/javascript/jscomp/MethodCheck.java,src/com/google/javascript/jscomp/MethodCheck.java,73,/ Unfortunately we can't warn directly here since we still can't catch
False,src/com/google/javascript/jscomp/MethodCheck.java,src/com/google/javascript/jscomp/MethodCheck.java,74,"/ all of the places where object methods are defined, like in arbitrary"
False,src/com/google/javascript/jscomp/MethodCheck.java,src/com/google/javascript/jscomp/MethodCheck.java,75,/ object literals and as inline properties
False,src/com/google/javascript/jscomp/MethodCheck.java,src/com/google/javascript/jscomp/MethodCheck.java,76,eturn;
False,src/com/google/javascript/jscomp/MethodCheck.java,src/com/google/javascript/jscomp/MethodCheck.java,79,"unctionCheck.checkCall(callNode, callName, signatures, t, level);"
False,src/com/google/javascript/jscomp/MethodCheck.java,src/com/google/javascript/jscomp/MethodCheck.java,83,Override
False,src/com/google/javascript/jscomp/MethodCheck.java,src/com/google/javascript/jscomp/MethodCheck.java,84,rotected Callback getActingCallback() {
False,src/com/google/javascript/jscomp/MethodCheck.java,src/com/google/javascript/jscomp/MethodCheck.java,85,eturn new CheckUsage();
False,src/com/google/javascript/jscomp/MethodCheck.java,src/com/google/javascript/jscomp/MethodCheck.java,88,Override
False,src/com/google/javascript/jscomp/MethodCheck.java,src/com/google/javascript/jscomp/MethodCheck.java,89,ignatureStore getSignatureStore() {
False,src/com/google/javascript/jscomp/MethodCheck.java,src/com/google/javascript/jscomp/MethodCheck.java,90,eturn this.signatureCallback;
False,src/com/google/javascript/jscomp/MethodCheck.java,src/com/google/javascript/jscomp/MethodCheck.java,94, Maintains the methodSignatures map.
False,src/com/google/javascript/jscomp/MethodCheck.java,src/com/google/javascript/jscomp/MethodCheck.java,96,rivate class Store implements MethodCompilerPass.SignatureStore {
False,src/com/google/javascript/jscomp/MethodCheck.java,src/com/google/javascript/jscomp/MethodCheck.java,97,Override
False,src/com/google/javascript/jscomp/MethodCheck.java,src/com/google/javascript/jscomp/MethodCheck.java,98,ublic void addSignature(
False,src/com/google/javascript/jscomp/MethodCheck.java,src/com/google/javascript/jscomp/MethodCheck.java,99,"tring functionName, Node functionNode, String sourceFile) {"
False,src/com/google/javascript/jscomp/MethodCheck.java,src/com/google/javascript/jscomp/MethodCheck.java,100,"ethodSignatures.put(functionName,"
False,src/com/google/javascript/jscomp/MethodCheck.java,src/com/google/javascript/jscomp/MethodCheck.java,101,"unctionCheck.createFunctionInfo(compiler, functionNode, sourceFile));"
False,src/com/google/javascript/jscomp/MethodCheck.java,src/com/google/javascript/jscomp/MethodCheck.java,104,Override
False,src/com/google/javascript/jscomp/MethodCheck.java,src/com/google/javascript/jscomp/MethodCheck.java,105,ublic void removeSignature(String functionName) {
False,src/com/google/javascript/jscomp/MethodCheck.java,src/com/google/javascript/jscomp/MethodCheck.java,106,"/ No signature, we remove any ones we've already found and add"
False,src/com/google/javascript/jscomp/MethodCheck.java,src/com/google/javascript/jscomp/MethodCheck.java,107,/ it to the list of methods to skip checks for
False,src/com/google/javascript/jscomp/MethodCheck.java,src/com/google/javascript/jscomp/MethodCheck.java,108,f (methodSignatures.containsKey(functionName)) {
False,src/com/google/javascript/jscomp/MethodCheck.java,src/com/google/javascript/jscomp/MethodCheck.java,109,ethodSignatures.removeAll(functionName);
False,src/com/google/javascript/jscomp/MethodCheck.java,src/com/google/javascript/jscomp/MethodCheck.java,113,ublic void reset() {
False,src/com/google/javascript/jscomp/MethodCheck.java,src/com/google/javascript/jscomp/MethodCheck.java,114,ethodSignatures.clear();
True,src/com/google/javascript/jscomp/ReferenceCollectingCallback.java,src/com/google/javascript/jscomp/ReferenceCollectingCallback.java,269,* Whether the variable is escaped into an inner scope.
True,src/com/google/javascript/jscomp/ReferenceCollectingCallback.java,src/com/google/javascript/jscomp/ReferenceCollectingCallback.java,271,boolean isEscaped() {
True,src/com/google/javascript/jscomp/ReferenceCollectingCallback.java,src/com/google/javascript/jscomp/ReferenceCollectingCallback.java,272,Scope scope = null;
True,src/com/google/javascript/jscomp/ReferenceCollectingCallback.java,src/com/google/javascript/jscomp/ReferenceCollectingCallback.java,273,for (Reference ref : references) {
True,src/com/google/javascript/jscomp/ReferenceCollectingCallback.java,src/com/google/javascript/jscomp/ReferenceCollectingCallback.java,274,if (scope == null) {
True,src/com/google/javascript/jscomp/ReferenceCollectingCallback.java,src/com/google/javascript/jscomp/ReferenceCollectingCallback.java,275,scope = ref.scope;
True,src/com/google/javascript/jscomp/ReferenceCollectingCallback.java,src/com/google/javascript/jscomp/ReferenceCollectingCallback.java,276,} else if (scope != ref.scope) {
True,src/com/google/javascript/jscomp/ReferenceCollectingCallback.java,src/com/google/javascript/jscomp/ReferenceCollectingCallback.java,277,return true;
True,src/com/google/javascript/jscomp/ReferenceCollectingCallback.java,src/com/google/javascript/jscomp/ReferenceCollectingCallback.java,280,return false;
False,test/com/google/javascript/jscomp/FunctionCheckTest.java,test/com/google/javascript/jscomp/FunctionCheckTest.java,2, Copyright 2004 Google Inc.
False,test/com/google/javascript/jscomp/FunctionCheckTest.java,test/com/google/javascript/jscomp/FunctionCheckTest.java,4," Licensed under the Apache License, Version 2.0 (the ""License"");"
False,test/com/google/javascript/jscomp/FunctionCheckTest.java,test/com/google/javascript/jscomp/FunctionCheckTest.java,5, you may not use this file except in compliance with the License.
False,test/com/google/javascript/jscomp/FunctionCheckTest.java,test/com/google/javascript/jscomp/FunctionCheckTest.java,6, You may obtain a copy of the License at
False,test/com/google/javascript/jscomp/FunctionCheckTest.java,test/com/google/javascript/jscomp/FunctionCheckTest.java,8,     http://www.apache.org/licenses/LICENSE-2.0
False,test/com/google/javascript/jscomp/FunctionCheckTest.java,test/com/google/javascript/jscomp/FunctionCheckTest.java,10," Unless required by applicable law or agreed to in writing, software"
False,test/com/google/javascript/jscomp/FunctionCheckTest.java,test/com/google/javascript/jscomp/FunctionCheckTest.java,11," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,test/com/google/javascript/jscomp/FunctionCheckTest.java,test/com/google/javascript/jscomp/FunctionCheckTest.java,12," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,test/com/google/javascript/jscomp/FunctionCheckTest.java,test/com/google/javascript/jscomp/FunctionCheckTest.java,13, See the License for the specific language governing permissions and
False,test/com/google/javascript/jscomp/FunctionCheckTest.java,test/com/google/javascript/jscomp/FunctionCheckTest.java,14, limitations under the License.
False,test/com/google/javascript/jscomp/FunctionCheckTest.java,test/com/google/javascript/jscomp/FunctionCheckTest.java,17,ackage com.google.javascript.jscomp;
False,test/com/google/javascript/jscomp/FunctionCheckTest.java,test/com/google/javascript/jscomp/FunctionCheckTest.java,19,ublic class FunctionCheckTest extends CompilerTestCase {
False,test/com/google/javascript/jscomp/FunctionCheckTest.java,test/com/google/javascript/jscomp/FunctionCheckTest.java,20,Override
False,test/com/google/javascript/jscomp/FunctionCheckTest.java,test/com/google/javascript/jscomp/FunctionCheckTest.java,21,rotected CompilerPass getProcessor(Compiler compiler) {
False,test/com/google/javascript/jscomp/FunctionCheckTest.java,test/com/google/javascript/jscomp/FunctionCheckTest.java,22,"eturn new FunctionCheck(compiler, CheckLevel.ERROR);"
False,test/com/google/javascript/jscomp/FunctionCheckTest.java,test/com/google/javascript/jscomp/FunctionCheckTest.java,25,Override
False,test/com/google/javascript/jscomp/FunctionCheckTest.java,test/com/google/javascript/jscomp/FunctionCheckTest.java,26,rotected int getNumRepetitions() {
False,test/com/google/javascript/jscomp/FunctionCheckTest.java,test/com/google/javascript/jscomp/FunctionCheckTest.java,27,/ Cannot repeat tests multiple times because var_args parameter is removed.
False,test/com/google/javascript/jscomp/FunctionCheckTest.java,test/com/google/javascript/jscomp/FunctionCheckTest.java,28,eturn 1;
False,test/com/google/javascript/jscomp/FunctionCheckTest.java,test/com/google/javascript/jscomp/FunctionCheckTest.java,31,ublic void testFunctions() {
False,test/com/google/javascript/jscomp/FunctionCheckTest.java,test/com/google/javascript/jscomp/FunctionCheckTest.java,32,/ ok
False,test/com/google/javascript/jscomp/FunctionCheckTest.java,test/com/google/javascript/jscomp/FunctionCheckTest.java,33,"estSame(""function foo() {} foo();"");"
False,test/com/google/javascript/jscomp/FunctionCheckTest.java,test/com/google/javascript/jscomp/FunctionCheckTest.java,34,"estSame(""function foo(a) {} foo('a');"");"
False,test/com/google/javascript/jscomp/FunctionCheckTest.java,test/com/google/javascript/jscomp/FunctionCheckTest.java,35,"estSame(""function foo(a,b) {} foo(10, 20);"");"
False,test/com/google/javascript/jscomp/FunctionCheckTest.java,test/com/google/javascript/jscomp/FunctionCheckTest.java,37,/ optional args
False,test/com/google/javascript/jscomp/FunctionCheckTest.java,test/com/google/javascript/jscomp/FunctionCheckTest.java,38,"estSame(""function foo(a,b,opt_c) {} foo(1,2);"");"
False,test/com/google/javascript/jscomp/FunctionCheckTest.java,test/com/google/javascript/jscomp/FunctionCheckTest.java,39,"estSame(""function foo(a,b,opt_c) {} foo(1,2,3);"");"
False,test/com/google/javascript/jscomp/FunctionCheckTest.java,test/com/google/javascript/jscomp/FunctionCheckTest.java,40,"estSame(""function foo(a,opt_b,opt_c) {} foo(1);"");"
False,test/com/google/javascript/jscomp/FunctionCheckTest.java,test/com/google/javascript/jscomp/FunctionCheckTest.java,42,/ var_args
False,test/com/google/javascript/jscomp/FunctionCheckTest.java,test/com/google/javascript/jscomp/FunctionCheckTest.java,43,"estSame(""function foo(var_args) {} foo();"");"
False,test/com/google/javascript/jscomp/FunctionCheckTest.java,test/com/google/javascript/jscomp/FunctionCheckTest.java,44,"estSame(""function foo(var_args) {} foo(1,2);"");"
False,test/com/google/javascript/jscomp/FunctionCheckTest.java,test/com/google/javascript/jscomp/FunctionCheckTest.java,45,"estSame(""function foo(a,b,var_args) {} foo(1,2);"");"
False,test/com/google/javascript/jscomp/FunctionCheckTest.java,test/com/google/javascript/jscomp/FunctionCheckTest.java,46,"estSame(""function foo(a,b,var_args) {} foo(1,2,3);"");"
False,test/com/google/javascript/jscomp/FunctionCheckTest.java,test/com/google/javascript/jscomp/FunctionCheckTest.java,47,"estSame(""function foo(a,b,var_args) {} foo(1,2,3,4,5);"");"
False,test/com/google/javascript/jscomp/FunctionCheckTest.java,test/com/google/javascript/jscomp/FunctionCheckTest.java,48,"estSame(""function foo(a,opt_b,var_args) {} foo(1);"");"
False,test/com/google/javascript/jscomp/FunctionCheckTest.java,test/com/google/javascript/jscomp/FunctionCheckTest.java,49,"estSame(""function foo(a,opt_b,var_args) {} foo(1,2);"");"
False,test/com/google/javascript/jscomp/FunctionCheckTest.java,test/com/google/javascript/jscomp/FunctionCheckTest.java,50,"estSame(""function foo(a,opt_b,var_args) {} foo(1,2,3);"");"
False,test/com/google/javascript/jscomp/FunctionCheckTest.java,test/com/google/javascript/jscomp/FunctionCheckTest.java,51,"estSame(""function foo(a,opt_b,var_args) {} foo(1,2,3,4,5);"");"
False,test/com/google/javascript/jscomp/FunctionCheckTest.java,test/com/google/javascript/jscomp/FunctionCheckTest.java,52,/ this test ensures that we can have local functions with var_args without
False,test/com/google/javascript/jscomp/FunctionCheckTest.java,test/com/google/javascript/jscomp/FunctionCheckTest.java,53,/ triggering the VAR_ARGS_USED_ERROR
False,test/com/google/javascript/jscomp/FunctionCheckTest.java,test/com/google/javascript/jscomp/FunctionCheckTest.java,54,"estSame(""function f(var_args) { function g(var_args) {} g(1,2,3); } f();"");"
False,test/com/google/javascript/jscomp/FunctionCheckTest.java,test/com/google/javascript/jscomp/FunctionCheckTest.java,56,/ error
False,test/com/google/javascript/jscomp/FunctionCheckTest.java,test/com/google/javascript/jscomp/FunctionCheckTest.java,57,"est(""function foo(a,b,opt_c) {} foo(1);"", null,"
False,test/com/google/javascript/jscomp/FunctionCheckTest.java,test/com/google/javascript/jscomp/FunctionCheckTest.java,58,unctionCheck.WRONG_ARGUMENT_COUNT_ERROR);
False,test/com/google/javascript/jscomp/FunctionCheckTest.java,test/com/google/javascript/jscomp/FunctionCheckTest.java,59,"est(""function foo(a,b,opt_c) {} foo(1,2,3,4);"", null,"
False,test/com/google/javascript/jscomp/FunctionCheckTest.java,test/com/google/javascript/jscomp/FunctionCheckTest.java,60,unctionCheck.WRONG_ARGUMENT_COUNT_ERROR);
False,test/com/google/javascript/jscomp/FunctionCheckTest.java,test/com/google/javascript/jscomp/FunctionCheckTest.java,61,"est(""function foo(a,b) {} foo(1, 2, 3);"", null,"
False,test/com/google/javascript/jscomp/FunctionCheckTest.java,test/com/google/javascript/jscomp/FunctionCheckTest.java,62,unctionCheck.WRONG_ARGUMENT_COUNT_ERROR);
False,test/com/google/javascript/jscomp/FunctionCheckTest.java,test/com/google/javascript/jscomp/FunctionCheckTest.java,63,"est(""function foo() {} foo(1, 2, 3);"", null,"
False,test/com/google/javascript/jscomp/FunctionCheckTest.java,test/com/google/javascript/jscomp/FunctionCheckTest.java,64,unctionCheck.WRONG_ARGUMENT_COUNT_ERROR);
False,test/com/google/javascript/jscomp/FunctionCheckTest.java,test/com/google/javascript/jscomp/FunctionCheckTest.java,65,"est(""function foo(a,b,c,d) {} foo(1, 2, 3);"", null,"
False,test/com/google/javascript/jscomp/FunctionCheckTest.java,test/com/google/javascript/jscomp/FunctionCheckTest.java,66,unctionCheck.WRONG_ARGUMENT_COUNT_ERROR);
False,test/com/google/javascript/jscomp/FunctionCheckTest.java,test/com/google/javascript/jscomp/FunctionCheckTest.java,67,"est(""function foo(a,b,var_args) {} foo(1);"", null,"
False,test/com/google/javascript/jscomp/FunctionCheckTest.java,test/com/google/javascript/jscomp/FunctionCheckTest.java,68,unctionCheck.WRONG_ARGUMENT_COUNT_ERROR);
False,test/com/google/javascript/jscomp/FunctionCheckTest.java,test/com/google/javascript/jscomp/FunctionCheckTest.java,69,"est(""function foo(a,b,opt_c,var_args) {} foo(1);"", null,"
False,test/com/google/javascript/jscomp/FunctionCheckTest.java,test/com/google/javascript/jscomp/FunctionCheckTest.java,70,unctionCheck.WRONG_ARGUMENT_COUNT_ERROR);
False,test/com/google/javascript/jscomp/FunctionCheckTest.java,test/com/google/javascript/jscomp/FunctionCheckTest.java,71,"est(""function foo(a,b,var_args,c) {} foo(1,2,3,4);"", null,"
False,test/com/google/javascript/jscomp/FunctionCheckTest.java,test/com/google/javascript/jscomp/FunctionCheckTest.java,72,unctionCheck.VAR_ARGS_ERROR);
False,test/com/google/javascript/jscomp/FunctionCheckTest.java,test/com/google/javascript/jscomp/FunctionCheckTest.java,75,ublic void testFunctionsWithJsDoc1() {
False,test/com/google/javascript/jscomp/FunctionCheckTest.java,test/com/google/javascript/jscomp/FunctionCheckTest.java,76,"estSame(""/** @param {*=} c */ function foo(a,b,c) {} foo(1,2);"");"
False,test/com/google/javascript/jscomp/FunctionCheckTest.java,test/com/google/javascript/jscomp/FunctionCheckTest.java,79,ublic void testFunctionsWithJsDoc2() {
False,test/com/google/javascript/jscomp/FunctionCheckTest.java,test/com/google/javascript/jscomp/FunctionCheckTest.java,80,"estSame(""/** @param {*=} c */ function foo(a,b,c) {} foo(1,2,3);"");"
False,test/com/google/javascript/jscomp/FunctionCheckTest.java,test/com/google/javascript/jscomp/FunctionCheckTest.java,83,ublic void testFunctionsWithJsDoc3() {
False,test/com/google/javascript/jscomp/FunctionCheckTest.java,test/com/google/javascript/jscomp/FunctionCheckTest.java,84,"estSame(""/** @param {*=} c \n * @param {*=} b */ "" +"
False,test/com/google/javascript/jscomp/FunctionCheckTest.java,test/com/google/javascript/jscomp/FunctionCheckTest.java,85,"function foo(a,b,c) {} foo(1);"");"
False,test/com/google/javascript/jscomp/FunctionCheckTest.java,test/com/google/javascript/jscomp/FunctionCheckTest.java,88,ublic void testFunctionsWithJsDoc4() {
False,test/com/google/javascript/jscomp/FunctionCheckTest.java,test/com/google/javascript/jscomp/FunctionCheckTest.java,89,"estSame(""/** @param {...*} a */ var foo = function(a) {}; foo();"");"
False,test/com/google/javascript/jscomp/FunctionCheckTest.java,test/com/google/javascript/jscomp/FunctionCheckTest.java,92,ublic void testFunctionsWithJsDoc5() {
False,test/com/google/javascript/jscomp/FunctionCheckTest.java,test/com/google/javascript/jscomp/FunctionCheckTest.java,93,"estSame(""/** @param {...*} a */ var foo = function(a) {}; foo(1,2);"");"
False,test/com/google/javascript/jscomp/FunctionCheckTest.java,test/com/google/javascript/jscomp/FunctionCheckTest.java,96,ublic void testFunctionsWithJsDoc6() {
False,test/com/google/javascript/jscomp/FunctionCheckTest.java,test/com/google/javascript/jscomp/FunctionCheckTest.java,97,"est(""/** @param {...*} b */ var foo = function(a, b) {}; foo();"","
False,test/com/google/javascript/jscomp/FunctionCheckTest.java,test/com/google/javascript/jscomp/FunctionCheckTest.java,98,"ull, FunctionCheck.WRONG_ARGUMENT_COUNT_ERROR);"
True,test/com/google/javascript/jscomp/InlineVariablesTest.java,test/com/google/javascript/jscomp/InlineVariablesTest.java,825,public void testThisAlias() {
True,test/com/google/javascript/jscomp/InlineVariablesTest.java,test/com/google/javascript/jscomp/InlineVariablesTest.java,826,"test(""function f() { var a = this; a.y(); a.z(); }"","
True,test/com/google/javascript/jscomp/InlineVariablesTest.java,test/com/google/javascript/jscomp/InlineVariablesTest.java,827,"""function f() { this.y(); this.z(); }"");"
True,test/com/google/javascript/jscomp/InlineVariablesTest.java,test/com/google/javascript/jscomp/InlineVariablesTest.java,830,public void testThisEscapedAlias() {
True,test/com/google/javascript/jscomp/InlineVariablesTest.java,test/com/google/javascript/jscomp/InlineVariablesTest.java,831,testSame(
True,test/com/google/javascript/jscomp/InlineVariablesTest.java,test/com/google/javascript/jscomp/InlineVariablesTest.java,832,"""function f() { var a = this; var g = function() { a.y(); }; a.z(); }"");"
False,test/com/google/javascript/jscomp/MethodCheckTest.java,test/com/google/javascript/jscomp/MethodCheckTest.java,2, Copyright 2006 Google Inc.
False,test/com/google/javascript/jscomp/MethodCheckTest.java,test/com/google/javascript/jscomp/MethodCheckTest.java,4," Licensed under the Apache License, Version 2.0 (the ""License"");"
False,test/com/google/javascript/jscomp/MethodCheckTest.java,test/com/google/javascript/jscomp/MethodCheckTest.java,5, you may not use this file except in compliance with the License.
False,test/com/google/javascript/jscomp/MethodCheckTest.java,test/com/google/javascript/jscomp/MethodCheckTest.java,6, You may obtain a copy of the License at
False,test/com/google/javascript/jscomp/MethodCheckTest.java,test/com/google/javascript/jscomp/MethodCheckTest.java,8,     http://www.apache.org/licenses/LICENSE-2.0
False,test/com/google/javascript/jscomp/MethodCheckTest.java,test/com/google/javascript/jscomp/MethodCheckTest.java,10," Unless required by applicable law or agreed to in writing, software"
False,test/com/google/javascript/jscomp/MethodCheckTest.java,test/com/google/javascript/jscomp/MethodCheckTest.java,11," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,test/com/google/javascript/jscomp/MethodCheckTest.java,test/com/google/javascript/jscomp/MethodCheckTest.java,12," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,test/com/google/javascript/jscomp/MethodCheckTest.java,test/com/google/javascript/jscomp/MethodCheckTest.java,13, See the License for the specific language governing permissions and
False,test/com/google/javascript/jscomp/MethodCheckTest.java,test/com/google/javascript/jscomp/MethodCheckTest.java,14, limitations under the License.
False,test/com/google/javascript/jscomp/MethodCheckTest.java,test/com/google/javascript/jscomp/MethodCheckTest.java,17,ackage com.google.javascript.jscomp;
False,test/com/google/javascript/jscomp/MethodCheckTest.java,test/com/google/javascript/jscomp/MethodCheckTest.java,20, Tests for {@link MethodCheck}.
False,test/com/google/javascript/jscomp/MethodCheckTest.java,test/com/google/javascript/jscomp/MethodCheckTest.java,24,ublic class MethodCheckTest extends CompilerTestCase {
False,test/com/google/javascript/jscomp/MethodCheckTest.java,test/com/google/javascript/jscomp/MethodCheckTest.java,25,rivate static final String EXTERNS =
False,test/com/google/javascript/jscomp/MethodCheckTest.java,test/com/google/javascript/jscomp/MethodCheckTest.java,26,"var window; window.setTimeout = function(fn, time) {};"";"
False,test/com/google/javascript/jscomp/MethodCheckTest.java,test/com/google/javascript/jscomp/MethodCheckTest.java,28,rivate static final String METHOD_DEFS =
False,test/com/google/javascript/jscomp/MethodCheckTest.java,test/com/google/javascript/jscomp/MethodCheckTest.java,29,"function Foo() {this.bar_ = null;}"" +"
False,test/com/google/javascript/jscomp/MethodCheckTest.java,test/com/google/javascript/jscomp/MethodCheckTest.java,30,"Foo.prototype.oneArg = function(arg) {this.bar_ = arg;};"" +"
False,test/com/google/javascript/jscomp/MethodCheckTest.java,test/com/google/javascript/jscomp/MethodCheckTest.java,31,"Foo.prototype.twoArg = function(arg1, arg2) {this.bar_ = arg1 + arg2;};"" +"
False,test/com/google/javascript/jscomp/MethodCheckTest.java,test/com/google/javascript/jscomp/MethodCheckTest.java,32,"Foo.prototype.oneOrTwoArg = function(arg1) {this.bar_ = arg1;};"" +"
False,test/com/google/javascript/jscomp/MethodCheckTest.java,test/com/google/javascript/jscomp/MethodCheckTest.java,34,"function Biz() {this.bar_ = null;}"" +"
False,test/com/google/javascript/jscomp/MethodCheckTest.java,test/com/google/javascript/jscomp/MethodCheckTest.java,35,"Biz.prototype = "" +"
False,test/com/google/javascript/jscomp/MethodCheckTest.java,test/com/google/javascript/jscomp/MethodCheckTest.java,36,"{oneOrTwoArg: function(arg1, arg2) {this.bar_ = arg1 + arg2;}};"" +"
False,test/com/google/javascript/jscomp/MethodCheckTest.java,test/com/google/javascript/jscomp/MethodCheckTest.java,38,"var Boz = {};"" +"
False,test/com/google/javascript/jscomp/MethodCheckTest.java,test/com/google/javascript/jscomp/MethodCheckTest.java,39,"Boz.staticMethod = function(arg1, arg2) {Boz.boz_ = arg1 + arg2;};"" +"
False,test/com/google/javascript/jscomp/MethodCheckTest.java,test/com/google/javascript/jscomp/MethodCheckTest.java,41,/ Methods defined in a separate functions and then added via assignment
False,test/com/google/javascript/jscomp/MethodCheckTest.java,test/com/google/javascript/jscomp/MethodCheckTest.java,42,"function oneArg(arg) {arg = arg + 1;};"" +"
False,test/com/google/javascript/jscomp/MethodCheckTest.java,test/com/google/javascript/jscomp/MethodCheckTest.java,43,"function twoArg(arg1, arg2) {arg1 = arg2 + 1;};"" +"
False,test/com/google/javascript/jscomp/MethodCheckTest.java,test/com/google/javascript/jscomp/MethodCheckTest.java,44,"Foo.prototype.oneOrTwoArg2 = oneArg;"" +"
False,test/com/google/javascript/jscomp/MethodCheckTest.java,test/com/google/javascript/jscomp/MethodCheckTest.java,45,"function Baz() {this.bar_ = null;}"" +"
False,test/com/google/javascript/jscomp/MethodCheckTest.java,test/com/google/javascript/jscomp/MethodCheckTest.java,46,"Baz.prototype = {oneOrTwoArg2: twoArg};"" +"
False,test/com/google/javascript/jscomp/MethodCheckTest.java,test/com/google/javascript/jscomp/MethodCheckTest.java,47,"Boz.staticMethod1 = oneArg;"" +"
False,test/com/google/javascript/jscomp/MethodCheckTest.java,test/com/google/javascript/jscomp/MethodCheckTest.java,48,"Boz.staticMethod2 = twoArg;"";"
False,test/com/google/javascript/jscomp/MethodCheckTest.java,test/com/google/javascript/jscomp/MethodCheckTest.java,50,ublic MethodCheckTest() {
False,test/com/google/javascript/jscomp/MethodCheckTest.java,test/com/google/javascript/jscomp/MethodCheckTest.java,51,uper(EXTERNS);
False,test/com/google/javascript/jscomp/MethodCheckTest.java,test/com/google/javascript/jscomp/MethodCheckTest.java,54,Override
False,test/com/google/javascript/jscomp/MethodCheckTest.java,test/com/google/javascript/jscomp/MethodCheckTest.java,55,rotected CompilerPass getProcessor(Compiler compiler) {
False,test/com/google/javascript/jscomp/MethodCheckTest.java,test/com/google/javascript/jscomp/MethodCheckTest.java,56,"eturn new MethodCheck(compiler, CheckLevel.ERROR);"
False,test/com/google/javascript/jscomp/MethodCheckTest.java,test/com/google/javascript/jscomp/MethodCheckTest.java,59,Override
False,test/com/google/javascript/jscomp/MethodCheckTest.java,test/com/google/javascript/jscomp/MethodCheckTest.java,60,ublic void testSame(String js) {
False,test/com/google/javascript/jscomp/MethodCheckTest.java,test/com/google/javascript/jscomp/MethodCheckTest.java,61,uper.testSame(METHOD_DEFS + js);
False,test/com/google/javascript/jscomp/MethodCheckTest.java,test/com/google/javascript/jscomp/MethodCheckTest.java,64,"rivate void testErr(String js, DiagnosticType error) {"
False,test/com/google/javascript/jscomp/MethodCheckTest.java,test/com/google/javascript/jscomp/MethodCheckTest.java,65,"est(METHOD_DEFS + js, null, error);"
False,test/com/google/javascript/jscomp/MethodCheckTest.java,test/com/google/javascript/jscomp/MethodCheckTest.java,68,ublic void testMethods() {
False,test/com/google/javascript/jscomp/MethodCheckTest.java,test/com/google/javascript/jscomp/MethodCheckTest.java,69,/ Correct usage
False,test/com/google/javascript/jscomp/MethodCheckTest.java,test/com/google/javascript/jscomp/MethodCheckTest.java,70,"estSame(""var f = new Foo();f.oneArg(1);"");"
False,test/com/google/javascript/jscomp/MethodCheckTest.java,test/com/google/javascript/jscomp/MethodCheckTest.java,71,"estSame(""var f = new Foo();f.twoArg(1, 2);"");"
False,test/com/google/javascript/jscomp/MethodCheckTest.java,test/com/google/javascript/jscomp/MethodCheckTest.java,72,"estSame(""var f = new Foo();f.oneOrTwoArg(1);"");"
False,test/com/google/javascript/jscomp/MethodCheckTest.java,test/com/google/javascript/jscomp/MethodCheckTest.java,73,"estSame(""var b = new Biz();b.oneOrTwoArg(1, 2);"");"
False,test/com/google/javascript/jscomp/MethodCheckTest.java,test/com/google/javascript/jscomp/MethodCheckTest.java,74,"estSame(""Boz.staticMethod(1, 2);"");"
False,test/com/google/javascript/jscomp/MethodCheckTest.java,test/com/google/javascript/jscomp/MethodCheckTest.java,75,"estSame(""window.setTimeout(function() {}, 100);"");"
False,test/com/google/javascript/jscomp/MethodCheckTest.java,test/com/google/javascript/jscomp/MethodCheckTest.java,77,/ Incorrect usage. We mainly check the ability of the MethodCheck pass to
False,test/com/google/javascript/jscomp/MethodCheckTest.java,test/com/google/javascript/jscomp/MethodCheckTest.java,78,/ locate method signatures. Actual comparison of arity between signatures
False,test/com/google/javascript/jscomp/MethodCheckTest.java,test/com/google/javascript/jscomp/MethodCheckTest.java,79,/ and calls is mainly tested in FunctionCheckTest
False,test/com/google/javascript/jscomp/MethodCheckTest.java,test/com/google/javascript/jscomp/MethodCheckTest.java,80,"estErr(""var f = new Foo();f.oneArg(1, 2);"","
False,test/com/google/javascript/jscomp/MethodCheckTest.java,test/com/google/javascript/jscomp/MethodCheckTest.java,81,unctionCheck.WRONG_ARGUMENT_COUNT_ERROR);
False,test/com/google/javascript/jscomp/MethodCheckTest.java,test/com/google/javascript/jscomp/MethodCheckTest.java,82,"estErr(""var f = new Foo();f.twoArg(1);"","
False,test/com/google/javascript/jscomp/MethodCheckTest.java,test/com/google/javascript/jscomp/MethodCheckTest.java,83,unctionCheck.WRONG_ARGUMENT_COUNT_ERROR);
False,test/com/google/javascript/jscomp/MethodCheckTest.java,test/com/google/javascript/jscomp/MethodCheckTest.java,84,"estErr(""Boz.staticMethod(1);"","
False,test/com/google/javascript/jscomp/MethodCheckTest.java,test/com/google/javascript/jscomp/MethodCheckTest.java,85,unctionCheck.WRONG_ARGUMENT_COUNT_ERROR);
False,test/com/google/javascript/jscomp/MethodCheckTest.java,test/com/google/javascript/jscomp/MethodCheckTest.java,86,"estErr(""window.setTimeout(function() {});"","
False,test/com/google/javascript/jscomp/MethodCheckTest.java,test/com/google/javascript/jscomp/MethodCheckTest.java,87,unctionCheck.WRONG_ARGUMENT_COUNT_ERROR);
False,test/com/google/javascript/jscomp/MethodCheckTest.java,test/com/google/javascript/jscomp/MethodCheckTest.java,89,/ These should not throw exceptions
False,test/com/google/javascript/jscomp/MethodCheckTest.java,test/com/google/javascript/jscomp/MethodCheckTest.java,90,"estSame(""var f = new Foo();f[1]();"");"
False,test/com/google/javascript/jscomp/MethodCheckTest.java,test/com/google/javascript/jscomp/MethodCheckTest.java,91,"estSame(""var f = new Foo();var b = \""oneArg\"";f[b]();"");"
False,test/com/google/javascript/jscomp/MethodCheckTest.java,test/com/google/javascript/jscomp/MethodCheckTest.java,94,ublic void testSeparateMethods() {
False,test/com/google/javascript/jscomp/MethodCheckTest.java,test/com/google/javascript/jscomp/MethodCheckTest.java,95,"estSame(""var f = new Foo();f.oneOrTwoArg2(1);"");"
False,test/com/google/javascript/jscomp/MethodCheckTest.java,test/com/google/javascript/jscomp/MethodCheckTest.java,96,"estSame(""var f = new Baz();f.oneOrTwoArg2(1, 2);"");"
False,test/com/google/javascript/jscomp/MethodCheckTest.java,test/com/google/javascript/jscomp/MethodCheckTest.java,97,"estSame(""Boz.staticMethod1(1);"");"
False,test/com/google/javascript/jscomp/MethodCheckTest.java,test/com/google/javascript/jscomp/MethodCheckTest.java,98,"estSame(""Boz.staticMethod2(1, 2);"");"
False,test/com/google/javascript/jscomp/MethodCheckTest.java,test/com/google/javascript/jscomp/MethodCheckTest.java,100,/ Can't detect these incorrect usuages as they are defined indirectly.
False,test/com/google/javascript/jscomp/MethodCheckTest.java,test/com/google/javascript/jscomp/MethodCheckTest.java,101,"estSame(""var f = new Bar();f.oneOrTwoArg2(1, 2, 3);"");"
False,test/com/google/javascript/jscomp/MethodCheckTest.java,test/com/google/javascript/jscomp/MethodCheckTest.java,102,"estSame(""Boz.staticMethod1(1, 2);"");"
False,test/com/google/javascript/jscomp/MethodCheckTest.java,test/com/google/javascript/jscomp/MethodCheckTest.java,103,"estSame(""Boz.staticMethod2(1);"");"
False,test/com/google/javascript/jscomp/MethodCheckTest.java,test/com/google/javascript/jscomp/MethodCheckTest.java,106,ublic void testNoDefinition() {
False,test/com/google/javascript/jscomp/MethodCheckTest.java,test/com/google/javascript/jscomp/MethodCheckTest.java,107,"estSame(""var f = new Foo();f.unknownMethod(1);"");"
