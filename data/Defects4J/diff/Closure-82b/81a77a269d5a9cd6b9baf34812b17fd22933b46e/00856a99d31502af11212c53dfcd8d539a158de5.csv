is_addition,old_file_path,new_file_path,line_num,content
True,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,350,case Token.SET:
True,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,351,case Token.GET:
True,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,353,// TODO(johnlenz): return a GETELEM for quoted strings.
False,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,358,ase Token.SET:
False,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,359,ase Token.GET:
False,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,360,/ TODO(johnlenz): revisit. Not sure what to do here.
False,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,361,"hrow new IllegalStateException(""not yet implemented"");"
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1641,* Determines whether a node represents an object literal get or set key
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1642,"* (e.g. key1 in {get key1() {}, set key2(a){})."
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1644,* @param node A node
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1646,static boolean isGetOrSetKey(Node node) {
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1647,switch (node.getType()) {
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1648,case Token.GET:
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1649,case Token.SET:
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1650,return true;
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1652,return false;
True,src/com/google/javascript/jscomp/RemoveUnusedVars.java,src/com/google/javascript/jscomp/RemoveUnusedVars.java,318,if (NodeUtil.isGetOrSetKey(function.getParent())) {
True,src/com/google/javascript/jscomp/RemoveUnusedVars.java,src/com/google/javascript/jscomp/RemoveUnusedVars.java,319,// The parameters object literal setters can not be removed.
True,src/com/google/javascript/jscomp/RemoveUnusedVars.java,src/com/google/javascript/jscomp/RemoveUnusedVars.java,320,return;
True,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,440,public void testRewriteImplementedMethod2() throws Exception {
True,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,441,String source = newlineJoin(
True,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,442,"""function a(){}"","
True,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,443,"""a.prototype['foo'] = function(args) {return args};"","
True,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,444,"""var o = new a;"","
True,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,445,"""o.foo()"");"
True,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,446,testSame(source);
True,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,449,public void testRewriteImplementedMethod3() throws Exception {
True,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,450,String source = newlineJoin(
True,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,451,"""function a(){}"","
True,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,452,"""a.prototype.foo = function(args) {return args};"","
True,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,453,"""var o = new a;"","
True,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,454,"""o['foo']"");"
True,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,455,testSame(source);
True,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,458,public void testRewriteImplementedMethod4() throws Exception {
True,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,459,String source = newlineJoin(
True,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,460,"""function a(){}"","
True,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,461,"""a.prototype['foo'] = function(args) {return args};"","
True,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,462,"""var o = new a;"","
True,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,463,"""o['foo']"");"
True,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,464,testSame(source);
True,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,467,public void testRewriteImplementedMethodInObj() throws Exception {
True,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,468,"// This isn't currently supported, but could be."
True,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,469,String source = newlineJoin(
True,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,470,"""function a(){}"","
True,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,471,"""a.prototype = {foo: function(args) {return args}};"","
True,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,472,"""var o = new a;"","
True,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,473,"""o.foo()"");"
True,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,474,testSame(source);
True,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,477,public void testNoRewriteGet1() throws Exception {
True,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,478,// Getters and setter require special handling.
True,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,479,String source = newlineJoin(
True,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,480,"""function a(){}"","
True,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,481,"""a.prototype = {get foo(){return f}};"","
True,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,482,"""var o = new a;"","
True,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,483,"""o.foo()"");"
True,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,484,testSame(source);
True,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,487,public void testNoRewriteGet2() throws Exception {
True,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,488,// Getters and setter require special handling.
True,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,489,String source = newlineJoin(
True,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,490,"""function a(){}"","
True,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,491,"""a.prototype = {get foo(){return 1}};"","
True,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,492,"""var o = new a;"","
True,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,493,"""o.foo"");"
True,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,494,testSame(source);
True,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,497,public void testNoRewriteSet1() throws Exception {
True,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,498,// Getters and setter require special handling.
True,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,499,String source = newlineJoin(
True,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,500,"""function a(){}"","
True,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,501,"""a.prototype = {set foo(a){}};"","
True,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,502,"""var o = new a;"","
True,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,503,"""o.foo()"");"
True,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,504,testSame(source);
True,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,507,public void testNoRewriteSet2() throws Exception {
True,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,508,// Getters and setter require special handling.
True,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,509,String source = newlineJoin(
True,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,510,"""function a(){}"","
True,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,511,"""a.prototype = {set foo(a){}};"","
True,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,512,"""var o = new a;"","
True,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,513,"""o.foo = 1"");"
True,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,514,testSame(source);
True,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,657,public String getNameString(Node n) {
True,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,658,int type = n.getType();
True,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,659,if (type == Token.NAME) {
True,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,660,return n.getString();
True,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,661,} else if (type == Token.GETPROP) {
True,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,662,String left = getNameString(n.getFirstChild());
True,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,663,if (left == null) {
True,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,664,return null;
True,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,666,"return left + ""."" + n.getLastChild().getString();"
True,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,667,} else if (type == Token.GETELEM) {
True,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,668,String left = getNameString(n.getFirstChild());
True,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,669,if (left == null) {
True,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,670,return null;
True,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,672,"return left + ""["" + n.getLastChild().getString() + ""]"";"
True,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,673,} else if (type == Token.THIS) {
True,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,674,"return ""this"";"
True,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,675,} else {
True,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,676,return null;
False,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,602,"ameNode.getQualifiedName(),"
True,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,test/com/google/javascript/jscomp/DevirtualizePrototypeMethodsTest.java,702,"getNameString(nameNode),"
False,test/com/google/javascript/jscomp/RemoveUnusedVarsTest.java,test/com/google/javascript/jscomp/RemoveUnusedVarsTest.java,553,"var b=function(){};var b=function(){};b(1,2)"");"
True,test/com/google/javascript/jscomp/RemoveUnusedVarsTest.java,test/com/google/javascript/jscomp/RemoveUnusedVarsTest.java,553,"""var b=function(){};var b=function(){};b(1,2)"");"
True,test/com/google/javascript/jscomp/RemoveUnusedVarsTest.java,test/com/google/javascript/jscomp/RemoveUnusedVarsTest.java,574,public void testDoNotOptimizeSetters() {
True,test/com/google/javascript/jscomp/RemoveUnusedVarsTest.java,test/com/google/javascript/jscomp/RemoveUnusedVarsTest.java,575,// this.removeGlobal = false;
True,test/com/google/javascript/jscomp/RemoveUnusedVarsTest.java,test/com/google/javascript/jscomp/RemoveUnusedVarsTest.java,576,// this.modifyCallSites = false;
True,test/com/google/javascript/jscomp/RemoveUnusedVarsTest.java,test/com/google/javascript/jscomp/RemoveUnusedVarsTest.java,577,"testSame(""({set s(a) {}})"");"
True,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,77,// TODO(johnlenz): Fix this.
True,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,78,checkDefinitionsInJs(
True,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,79,"""({'a' : 1}); o['a']"","
True,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,80,"ImmutableSet.<String>of(""DEF STRING null -> NUMBER""));"
True,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,94,public void testDefineGet() throws Exception {
True,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,95,// TODO(johnlenz): Add support for quoted properties
True,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,96,checkDefinitionsInJs(
True,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,97,"""({get a() {}}); o.a"","
True,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,98,"ImmutableSet.of(""DEF GET null -> FUNCTION"","
True,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,99,"""USE GETPROP o.a -> [FUNCTION]""));"
True,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,102,public void testDefineSet() throws Exception {
True,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,103,// TODO(johnlenz): Add support for quoted properties
True,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,104,checkDefinitionsInJs(
True,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,105,"""({set a(b) {}}); o.a"","
True,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,106,"ImmutableSet.of(""DEF NAME b -> <null>"","
True,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,107,"""DEF SET null -> FUNCTION"","
True,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,test/com/google/javascript/jscomp/SimpleDefinitionFinderTest.java,108,"""USE GETPROP o.a -> [FUNCTION]""));"
