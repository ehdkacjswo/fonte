is_addition,old_file_path,new_file_path,line_num,content
True,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,338,* Remove unused return values.
True,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,340,public boolean optimizeReturns;
True,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,682,optimizeReturns = false;
False,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,428,asses.add(devirtualizePrototypeMethods);
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,428,passes.add(optimizeCalls);
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,1300,"* Rewrite instance methods as static methods, to make them easier"
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,1301,* to inline.
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,1303,private final PassFactory optimizeCalls =
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,1304,"new PassFactory(""optimizeCalls"", true) {"
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,1305,@Override
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,1306,protected CompilerPass createInternal(AbstractCompiler compiler) {
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,1307,OptimizeCallGraph passes = new OptimizeCallGraph(compiler);
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,1308,if (options.optimizeReturns) {
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,1309,passes.addPass(new OptimizeReturns(compiler));
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,1311,// Devirtualize must be last as it modifies the the values
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,1312,// represented by the simple definition finder.
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,1313,passes.addPass(new DevirtualizePrototypeMethods(compiler));
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,1314,return passes;
False,src/com/google/javascript/jscomp/DevirtualizePrototypeMethods.java,src/com/google/javascript/jscomp/DevirtualizePrototypeMethods.java,66,lass DevirtualizePrototypeMethods implements SpecializationAwareCompilerPass {
True,src/com/google/javascript/jscomp/DevirtualizePrototypeMethods.java,src/com/google/javascript/jscomp/DevirtualizePrototypeMethods.java,66,class DevirtualizePrototypeMethods
True,src/com/google/javascript/jscomp/DevirtualizePrototypeMethods.java,src/com/google/javascript/jscomp/DevirtualizePrototypeMethods.java,67,"implements OptimizeCallGraph.CallGraphCompilerPass,"
True,src/com/google/javascript/jscomp/DevirtualizePrototypeMethods.java,src/com/google/javascript/jscomp/DevirtualizePrototypeMethods.java,68,SpecializationAwareCompilerPass {
True,src/com/google/javascript/jscomp/DevirtualizePrototypeMethods.java,src/com/google/javascript/jscomp/DevirtualizePrototypeMethods.java,84,process(defFinder);
False,src/com/google/javascript/jscomp/DevirtualizePrototypeMethods.java,src/com/google/javascript/jscomp/DevirtualizePrototypeMethods.java,83,or (DefinitionSite defSite : defFinder.getDefinitionSites()) {
False,src/com/google/javascript/jscomp/DevirtualizePrototypeMethods.java,src/com/google/javascript/jscomp/DevirtualizePrototypeMethods.java,84,"ewriteDefinitionIfEligible(defSite, defFinder);"
True,src/com/google/javascript/jscomp/DevirtualizePrototypeMethods.java,src/com/google/javascript/jscomp/DevirtualizePrototypeMethods.java,87,@Override
True,src/com/google/javascript/jscomp/DevirtualizePrototypeMethods.java,src/com/google/javascript/jscomp/DevirtualizePrototypeMethods.java,88,public void process(SimpleDefinitionFinder definitions) {
True,src/com/google/javascript/jscomp/DevirtualizePrototypeMethods.java,src/com/google/javascript/jscomp/DevirtualizePrototypeMethods.java,89,for (DefinitionSite defSite : definitions.getDefinitionSites()) {
True,src/com/google/javascript/jscomp/DevirtualizePrototypeMethods.java,src/com/google/javascript/jscomp/DevirtualizePrototypeMethods.java,90,"rewriteDefinitionIfEligible(defSite, definitions);"
True,src/com/google/javascript/jscomp/OptimizeCalls.java,src/com/google/javascript/jscomp/OptimizeCalls.java,2,* Copyright 2010 Google Inc.
True,src/com/google/javascript/jscomp/OptimizeCalls.java,src/com/google/javascript/jscomp/OptimizeCalls.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/com/google/javascript/jscomp/OptimizeCalls.java,src/com/google/javascript/jscomp/OptimizeCalls.java,5,* you may not use this file except in compliance with the License.
True,src/com/google/javascript/jscomp/OptimizeCalls.java,src/com/google/javascript/jscomp/OptimizeCalls.java,6,* You may obtain a copy of the License at
True,src/com/google/javascript/jscomp/OptimizeCalls.java,src/com/google/javascript/jscomp/OptimizeCalls.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/com/google/javascript/jscomp/OptimizeCalls.java,src/com/google/javascript/jscomp/OptimizeCalls.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/com/google/javascript/jscomp/OptimizeCalls.java,src/com/google/javascript/jscomp/OptimizeCalls.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/com/google/javascript/jscomp/OptimizeCalls.java,src/com/google/javascript/jscomp/OptimizeCalls.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/com/google/javascript/jscomp/OptimizeCalls.java,src/com/google/javascript/jscomp/OptimizeCalls.java,13,* See the License for the specific language governing permissions and
True,src/com/google/javascript/jscomp/OptimizeCalls.java,src/com/google/javascript/jscomp/OptimizeCalls.java,14,* limitations under the License.
True,src/com/google/javascript/jscomp/OptimizeCalls.java,src/com/google/javascript/jscomp/OptimizeCalls.java,17,package com.google.javascript.jscomp;
True,src/com/google/javascript/jscomp/OptimizeCalls.java,src/com/google/javascript/jscomp/OptimizeCalls.java,19,import com.google.common.collect.Lists;
True,src/com/google/javascript/jscomp/OptimizeCalls.java,src/com/google/javascript/jscomp/OptimizeCalls.java,20,import com.google.javascript.rhino.Node;
True,src/com/google/javascript/jscomp/OptimizeCalls.java,src/com/google/javascript/jscomp/OptimizeCalls.java,22,import java.util.List;
True,src/com/google/javascript/jscomp/OptimizeCalls.java,src/com/google/javascript/jscomp/OptimizeCalls.java,25,* A root pass that container for other passes that should run on
True,src/com/google/javascript/jscomp/OptimizeCalls.java,src/com/google/javascript/jscomp/OptimizeCalls.java,26,* with a single call graph (currently a SimpleDefinitionFinder).
True,src/com/google/javascript/jscomp/OptimizeCalls.java,src/com/google/javascript/jscomp/OptimizeCalls.java,27,* Expected passes include:
True,src/com/google/javascript/jscomp/OptimizeCalls.java,src/com/google/javascript/jscomp/OptimizeCalls.java,28,*   - optimize parameters
True,src/com/google/javascript/jscomp/OptimizeCalls.java,src/com/google/javascript/jscomp/OptimizeCalls.java,29,*   - optimize returns
True,src/com/google/javascript/jscomp/OptimizeCalls.java,src/com/google/javascript/jscomp/OptimizeCalls.java,30,*   - devirtualize prototype methods
True,src/com/google/javascript/jscomp/OptimizeCalls.java,src/com/google/javascript/jscomp/OptimizeCalls.java,32,* @author johnlenz@google.com (John Lenz)
True,src/com/google/javascript/jscomp/OptimizeCalls.java,src/com/google/javascript/jscomp/OptimizeCalls.java,34,class OptimizeCallGraph implements CompilerPass {
True,src/com/google/javascript/jscomp/OptimizeCalls.java,src/com/google/javascript/jscomp/OptimizeCalls.java,35,List<CallGraphCompilerPass> passes = Lists.newArrayList();
True,src/com/google/javascript/jscomp/OptimizeCalls.java,src/com/google/javascript/jscomp/OptimizeCalls.java,36,private AbstractCompiler compiler;
True,src/com/google/javascript/jscomp/OptimizeCalls.java,src/com/google/javascript/jscomp/OptimizeCalls.java,38,OptimizeCallGraph(AbstractCompiler compiler) {
True,src/com/google/javascript/jscomp/OptimizeCalls.java,src/com/google/javascript/jscomp/OptimizeCalls.java,39,this.compiler = compiler;
True,src/com/google/javascript/jscomp/OptimizeCalls.java,src/com/google/javascript/jscomp/OptimizeCalls.java,42,OptimizeCallGraph addPass(CallGraphCompilerPass pass) {
True,src/com/google/javascript/jscomp/OptimizeCalls.java,src/com/google/javascript/jscomp/OptimizeCalls.java,43,passes.add(pass);
True,src/com/google/javascript/jscomp/OptimizeCalls.java,src/com/google/javascript/jscomp/OptimizeCalls.java,44,return this;
True,src/com/google/javascript/jscomp/OptimizeCalls.java,src/com/google/javascript/jscomp/OptimizeCalls.java,47,interface CallGraphCompilerPass {
True,src/com/google/javascript/jscomp/OptimizeCalls.java,src/com/google/javascript/jscomp/OptimizeCalls.java,48,void process(SimpleDefinitionFinder definitions);
True,src/com/google/javascript/jscomp/OptimizeCalls.java,src/com/google/javascript/jscomp/OptimizeCalls.java,51,@Override
True,src/com/google/javascript/jscomp/OptimizeCalls.java,src/com/google/javascript/jscomp/OptimizeCalls.java,52,"public void process(Node externs, Node root) {"
True,src/com/google/javascript/jscomp/OptimizeCalls.java,src/com/google/javascript/jscomp/OptimizeCalls.java,53,if (passes.size() > 0) {
True,src/com/google/javascript/jscomp/OptimizeCalls.java,src/com/google/javascript/jscomp/OptimizeCalls.java,54,SimpleDefinitionFinder defFinder = new SimpleDefinitionFinder(compiler);
True,src/com/google/javascript/jscomp/OptimizeCalls.java,src/com/google/javascript/jscomp/OptimizeCalls.java,55,"defFinder.process(externs, root);"
True,src/com/google/javascript/jscomp/OptimizeCalls.java,src/com/google/javascript/jscomp/OptimizeCalls.java,56,for (CallGraphCompilerPass pass : passes) {
True,src/com/google/javascript/jscomp/OptimizeCalls.java,src/com/google/javascript/jscomp/OptimizeCalls.java,57,pass.process(defFinder);
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,2,* Copyright 2009 Google Inc.
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,5,* you may not use this file except in compliance with the License.
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,6,* You may obtain a copy of the License at
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,13,* See the License for the specific language governing permissions and
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,14,* limitations under the License.
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,17,package com.google.javascript.jscomp;
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,19,import com.google.common.annotations.VisibleForTesting;
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,20,import com.google.common.base.Preconditions;
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,21,import com.google.javascript.jscomp.DefinitionsRemover.Definition;
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,22,import com.google.javascript.rhino.Node;
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,23,import com.google.javascript.rhino.Token;
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,26,import java.util.Collection;
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,29,* A compiler pass for optimize function return results.  Currently this
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,30,* pass looks for results that are complete unused and rewrite then to be:
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,31,"*   ""return x()"" -->""x(); return"""
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,32,"* , but it can easily be"
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,33,* expanded to look for use context to avoid unneed type coersion:
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,34,"*   - ""return x.toString()"" --> ""return x"""
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,35,"*   - ""return !!x"" --> ""return x"""
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,36,* @author johnlenz@google.com (John Lenz)
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,38,public class OptimizeReturns
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,39,"implements OptimizeCallGraph.CallGraphCompilerPass, CompilerPass {"
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,41,private AbstractCompiler compiler;
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,43,OptimizeReturns(AbstractCompiler compiler) {
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,44,this.compiler = compiler;
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,47,@Override
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,48,@VisibleForTesting
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,49,"public void process(Node externs, Node root) {"
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,50,SimpleDefinitionFinder defFinder = new SimpleDefinitionFinder(compiler);
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,51,"defFinder.process(externs, root);"
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,52,process(defFinder);
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,55,@Override
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,56,public void process(SimpleDefinitionFinder definitions) {
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,57,for (DefinitionSite defSite : definitions.getDefinitionSites()) {
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,58,"optimizeResultsIfEligible(defSite, definitions);"
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,63,* Rewrites method results sites if the method results are never used.
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,65,* Definition and use site information is provided by the
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,66,* {@link SimpleDefinitionFinder} passed in as an argument.
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,68,* @param defSite definition site to process.
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,69,* @param defFinder structure that hold Node -> Definition and
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,70,* Definition -> [UseSite] maps.
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,72,private void optimizeResultsIfEligible(
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,73,"DefinitionSite defSite, SimpleDefinitionFinder defFinder) {"
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,75,"if (defSite.inExterns || callResultsMaybeUsed(defFinder, defSite)) {"
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,76,return;
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,79,rewriteReturns(defSite.definition.getRValue());
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,83,* Determines if a function result might be used.  A result might be use if:
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,84,* - Function must is exported.
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,85,* - The definition is never accessed outside a function call context.
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,87,private boolean callResultsMaybeUsed(
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,88,"SimpleDefinitionFinder defFinder, DefinitionSite definitionSite) {"
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,90,Definition definition = definitionSite.definition;
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,92,// Assume non-function definitions results are used.
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,93,Node rValue = definition.getRValue();
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,94,if (rValue == null || !NodeUtil.isFunction(rValue)) {
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,95,return true;
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,98,"// Be conservative, don't try to optimize any declaration that isn't as"
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,99,// simple function declaration or assignment.
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,100,if (!isSimpleFunctionDeclaration(rValue)) {
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,101,return true;
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,104,// Assume an exported method result is used.
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,105,"if (maybeExported(compiler, definition)) {"
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,106,return true;
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,109,Collection<UseSite> useSites = defFinder.getUseSites(definition);
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,110,for (UseSite site : useSites) {
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,111,// Assume indirect definitions references use the result
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,112,Node useNodeParent = site.node.getParent();
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,113,if (isCall(site)) {
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,114,Node callNode = useNodeParent;
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,115,Preconditions.checkState(callNode.getType() == Token.CALL);
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,116,if (isValueUsed(callNode)) {
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,117,return true;
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,119,} else {
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,120,// Allow a standalone name reference.
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,121,//     var a;
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,122,if (!NodeUtil.isVar(useNodeParent)) {
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,123,return true;
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,127,// TODO(johnlenz): Add specialization support.
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,130,// No possible use of the definition result
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,131,return false;
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,134,static boolean maybeExported(
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,135,"AbstractCompiler compiler, Definition definition) {"
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,136,// Assume an exported method result is used.
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,137,Node lValue = definition.getLValue();
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,138,if (lValue == null) {
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,139,return true;
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,142,String partialName;
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,143,if (NodeUtil.isGetProp(lValue)) {
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,144,partialName = lValue.getLastChild().getString();
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,145,} else if (NodeUtil.isName(lValue)) {
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,146,partialName = lValue.getString();
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,147,} else {
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,148,// GETELEM is assumed to be an export or other expression are unknown
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,149,// uses.
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,150,return true;
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,153,CodingConvention codingConvention = compiler.getCodingConvention();
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,154,if (codingConvention.isExported(partialName)) {
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,155,return true;
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,158,return false;
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,161,static boolean isSimpleFunctionDeclaration(Node fn) {
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,162,Node parent = fn.getParent();
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,163,Node gramps = parent.getParent();
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,165,// Simple definition finder doesn't provide useful results in some
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,166,"// cases, specifically:"
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,167,//  - functions with recursive definitions
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,168,//  - functions defined in object literals
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,169,//  - functions defined in array litersals
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,170,// Here we defined a set of known function declaration that are 'ok'.
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,172,// example: function a(){};
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,173,if (NodeUtil.isFunctionDeclaration(fn)) {
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,174,return true;
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,177,// example: a = function(){};
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,178,// example: var a = function(){};
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,179,if (fn.getFirstChild().getString().isEmpty()
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,180,&& (NodeUtil.isExprAssign(gramps) || NodeUtil.isName(parent))) {
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,181,return true;
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,184,return false;
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,188,* Determines if the name node acts as the function name in a call expression.
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,190,private static boolean isValueUsed(Node node) {
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,191,// TODO(johnlenz): consider sharing some code with trySimpleUnusedResult.
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,192,Node parent = node.getParent();
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,193,switch (parent.getType()) {
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,194,case Token.EXPR_RESULT:
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,195,return false;
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,196,case Token.HOOK:
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,197,case Token.AND:
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,198,case Token.OR:
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,199,return (node == parent.getFirstChild()) ? true : isValueUsed(parent);
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,200,case Token.COMMA:
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,201,return (node == parent.getFirstChild()) ? false : isValueUsed(parent);
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,202,case Token.FOR:
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,203,if (NodeUtil.isForIn(parent)) {
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,204,return true;
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,205,} else {
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,206,// Only an expression whose result is in the condition part of the
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,207,// expression is used.
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,208,return (parent.getChildAtIndex(1) == node);
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,210,default:
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,211,return true;
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,216,"* For the supplied function node, rewrite all the return expressions so that:"
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,217,*    return foo();
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,218,* becomes:
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,219,*    foo(); return;
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,220,* Useless return will be removed later by the peephole optimization passes.
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,222,private void rewriteReturns(Node fnNode) {
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,223,Preconditions.checkState(NodeUtil.isFunction(fnNode));
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,224,NodeUtil.visitPostOrder(
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,225,"fnNode.getLastChild(),"
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,226,new NodeUtil.Visitor() {
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,227,@Override
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,228,public void visit(Node node) {
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,229,if (node.getType() == Token.RETURN && node.hasOneChild()) {
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,230,Node result = node.removeFirstChild();
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,231,"if (NodeUtil.mayHaveSideEffects(result, compiler)) {"
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,232,node.getParent().addChildBefore(
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,233,new Node(
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,234,"Token.EXPR_RESULT, result).copyInformationFrom(result), node);"
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,236,compiler.reportCodeChange();
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,240,new NodeUtil.MatchShallowStatement());
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,244,* Determines if the name node acts as the function name in a call expression.
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,246,private static boolean isCall(UseSite site) {
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,247,Node node = site.node;
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,248,Node parent = node.getParent();
True,src/com/google/javascript/jscomp/OptimizeReturns.java,src/com/google/javascript/jscomp/OptimizeReturns.java,249,return (parent.getFirstChild() == node) && NodeUtil.isCall(parent);
False,src/com/google/javascript/jscomp/SimpleDefinitionFinder.java,src/com/google/javascript/jscomp/SimpleDefinitionFinder.java,55,his.definitionSiteMap = Maps.newHashMap();
True,src/com/google/javascript/jscomp/SimpleDefinitionFinder.java,src/com/google/javascript/jscomp/SimpleDefinitionFinder.java,55,this.definitionSiteMap = Maps.newLinkedHashMap();
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,2,* Copyright 2009 Google Inc.
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,5,* you may not use this file except in compliance with the License.
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,6,* You may obtain a copy of the License at
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,13,* See the License for the specific language governing permissions and
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,14,* limitations under the License.
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,17,package com.google.javascript.jscomp;
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,19,import com.google.common.base.Joiner;
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,22,* Tests OptimizeReturns
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,23,* @author johnlenz@google.com (John Lenz)
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,25,public class OptimizeReturnsTest extends CompilerTestCase {
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,27,@Override
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,28,protected CompilerPass getProcessor(Compiler compiler) {
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,29,return new OptimizeReturns(compiler);
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,32,private static final String EXTERNAL_SYMBOLS =
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,33,"""var extern;extern.externalMethod"";"
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,35,public OptimizeReturnsTest() {
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,36,super(EXTERNAL_SYMBOLS);
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,39,@Override
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,40,protected int getNumRepetitions() {
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,41,// run pass once.
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,42,return 1;
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,45,@Override
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,46,protected void setUp() throws Exception {
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,47,super.setUp();
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,48,super.enableLineNumberCheck(true);
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,49,disableTypeCheck();
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,53,* Combine source strings using '\n' as the separator.
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,55,private static String newlineJoin(String ... parts) {
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,56,"return Joiner.on(""\n"").join(parts);"
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,59,public void testNoRewriteUsedResult1() throws Exception {
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,60,String source = newlineJoin(
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,61,"""function a(){return 1}"","
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,62,"""var x = a()"");"
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,63,testSame(source);
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,66,public void testNoRewriteUsedResult2() throws Exception {
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,67,String source = newlineJoin(
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,68,"""var a = function(){return 1}"","
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,69,"""a(); var b = a()"");"
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,70,testSame(source);
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,73,public void testRewriteUnusedResult1() throws Exception {
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,74,String source = newlineJoin(
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,75,"""function a(){return 1}"","
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,76,"""a()"");"
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,77,String expected = newlineJoin(
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,78,"""function a(){return}"","
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,79,"""a()"");"
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,80,"test(source, expected);"
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,83,public void testRewriteUnusedResult2() throws Exception {
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,84,String source = newlineJoin(
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,85,"""var a; a = function(){return 1}"","
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,86,"""a()"");"
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,87,String expected = newlineJoin(
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,88,"""var a; a = function(){return}"","
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,89,"""a()"");"
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,90,"test(source, expected);"
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,93,public void testRewriteUnusedResult3() throws Exception {
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,94,String source = newlineJoin(
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,95,"""var a = function(){return 1}"","
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,96,"""a()"");"
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,97,String expected = newlineJoin(
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,98,"""var a = function(){return}"","
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,99,"""a()"");"
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,100,"test(source, expected);"
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,103,public void testRewriteUnusedResult4a() throws Exception {
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,104,String source = newlineJoin(
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,105,"""var a = function(){return a()}"","
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,106,"""a()"");"
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,107,testSame(source);
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,110,public void testRewriteUnusedResult4b() throws Exception {
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,111,String source = newlineJoin(
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,112,"""var a = function b(){return b()}"","
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,113,"""a()"");"
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,114,testSame(source);
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,117,public void testRewriteUnusedResult4c() throws Exception {
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,118,String source = newlineJoin(
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,119,"""function a(){return a()}"","
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,120,"""a()"");"
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,121,testSame(source);
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,124,public void testRewriteUnusedResult5() throws Exception {
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,125,String source = newlineJoin(
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,126,"""function a(){}"","
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,127,"""a.prototype.foo = function(args) {return args};"","
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,128,"""var o = new a;"","
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,129,"""o.foo()"");"
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,130,String expected = newlineJoin(
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,131,"""function a(){}"","
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,132,"""a.prototype.foo = function(args) {return};"","
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,133,"""var o = new a;"","
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,134,"""o.foo()"");"
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,135,"test(source, expected);"
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,138,public void testRewriteUnusedResult6() throws Exception {
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,139,String source = newlineJoin(
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,140,"""function a(){return (g = 1)}"","
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,141,"""a()"");"
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,142,String expected = newlineJoin(
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,143,"""function a(){g = 1;return}"","
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,144,"""a()"");"
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,145,"test(source, expected);"
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,148,public void testRewriteUnusedResult7a() throws Exception {
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,149,String source = newlineJoin(
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,150,"""function a() { return 1 }"","
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,151,"""function b() { return a() }"","
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,152,"""function c() { return b() }"","
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,153,"""c();"");"
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,155,// TODO(johnlenz): It would be better if we do some kind of fixed point.
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,156,String expected = newlineJoin(
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,157,"""function a() { return 1 }"","
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,158,"""function b() { return a() }"","
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,159,"""function c() { b(); return }"","
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,160,"""c();"");"
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,161,"test(source, expected);"
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,164,public void testRewriteUnusedResult7b() throws Exception {
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,165,String source = newlineJoin(
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,166,"""c();"","
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,167,"""function c() { return b() }"","
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,168,"""function b() { return a() }"","
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,169,"""function a() { return 1 }"");"
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,172,// TODO(johnlenz): It would be better if we do some kind of fixed point.
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,173,String expected = newlineJoin(
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,174,"""c();"","
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,175,"""function c() { b(); return }"","
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,176,"""function b() { a(); return }"","
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,177,"""function a() { return }"");"
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,178,"test(source, expected);"
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,181,public void testRewriteUnusedResult8() throws Exception {
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,182,String source = newlineJoin(
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,183,"""function a() { return c() }"","
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,184,"""function b() { return a() }"","
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,185,"""function c() { return b() }"","
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,186,"""c();"");"
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,187,testSame(source);
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,190,public void testNoRewriteObjLit1() throws Exception {
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,191,String source = newlineJoin(
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,192,"""var a = {b:function(){return 1;}}"","
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,193,"""for(c in a) (a[c])();"","
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,194,"""a()"");"
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,195,testSame(source);
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,198,public void testNoRewriteObjLit2() throws Exception {
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,199,String source = newlineJoin(
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,200,"""var a = {b:function fn(){return 1;}}"","
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,201,"""for(c in a) (a[c])();"","
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,202,"""a()"");"
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,203,testSame(source);
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,206,public void testNoRewriteArrLit() throws Exception {
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,207,String source = newlineJoin(
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,208,"""var a = [function(){return 1;}]"","
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,209,"""(a[0])();"","
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,210,"""a()"");"
True,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,test/com/google/javascript/jscomp/OptimizeReturnsTest.java,211,testSame(source);
