is_addition,old_file_path,new_file_path,line_num,content
False,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,241,inal protected void initOptionsFromFlags(CompilerOptions options) {
True,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,241,protected DiagnosticGroups getDiagnoticGroups() {
True,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,242,return new DiagnosticGroups();
True,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,245,protected void initOptionsFromFlags(CompilerOptions options) {
True,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,247,DiagnosticGroups diagnosticGroups = getDiagnoticGroups();
False,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,243,iagnosticGroups.setWarningLevels(
True,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,249,diagnosticGroups.setWarningLevels(
False,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,246,iagnosticGroups.setWarningLevels(
True,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,252,diagnosticGroups.setWarningLevels(
False,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,249,iagnosticGroups.setWarningLevels(
True,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,255,diagnosticGroups.setWarningLevels(
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,228,initBasedOnOptions();
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,261,initBasedOnOptions();
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,267,* Do any initialization that is dependent on the compiler options.
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,269,private void initBasedOnOptions() {
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,270,// Create the source map if necessary.
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,271,if (options_.sourceMapOutputPath != null) {
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,272,sourceMap_ = new SourceMap();
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,622,/ Create the source map if necessary.
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,623,f (options_.sourceMapOutputPath != null) {
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,624,his.sourceMap_ = new SourceMap();
False,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,23,mport java.util.ArrayDeque;
False,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,24,mport java.util.Deque;
False,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,37,/ List of labels for switch statements.
False,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,38,rivate Deque<String> switchLabels = new ArrayDeque<String>();
False,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,40,tatic final DiagnosticType INVALID_BREAK = DiagnosticType.error(
False,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,41,"JSC_INVALID_BREAK"","
False,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,42,"unlabeled break must be inside loop or switch"");"
False,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,44,tatic final DiagnosticType INVALID_CONTINUE = DiagnosticType.error(
False,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,45,"JSC_INVALID_CONTINUE"","
False,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,46,"continue must be inside loop"");"
False,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,48,tatic final DiagnosticType INVALID_LABEL_CONTINUE = DiagnosticType.error(
False,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,49,"JSC_INVALID_LABEL_CONTINUE"","
False,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,50,"continue can only target labels of loop structures"");"
False,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,62,"heck(root, false, false);"
True,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,44,check(root);
False,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,66, Reports errors for any invalid breaks and continues in an AST. This method
False,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,67, uses recursion to perform a pre-order traversal. It keeps track the
False,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,68, iteration-statement nest depth and switch-statement nest depth. If there is
False,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,69, a break or continue in the AST but there is no corresponding nesting of
False,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,70," iteration-statement or switch-statement, the function will report an error."
False,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,71," Also, it keeps track of the labels for switch-statements. If a labeled"
False,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,72," continue-statement points to a switch-statement, it will also report an"
False,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,73, error.
False,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,74, <p>
False,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,75, There is no need to verify that a label has actually been defined because
False,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,76, the parser has already done so.
False,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,77, <p>
False,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,78, TODO(user): Use a light version of NodeTraversal for this and other
False,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,79, similar passes.
True,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,48,* Reports errors for any invalid use of control structures.
False,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,82, @param inLoop Is there a loop above this node.
False,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,83, @param inSwitch Is there a switch above this node.
False,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,85,"rivate void check(Node node, boolean inLoop, boolean inSwitch) {"
True,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,52,private void check(Node node) {
False,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,96,ase Token.FUNCTION:
False,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,97,/ Save the old labels because we are in a new scope.
False,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,98,eque<String> oldSwitchLabels = switchLabels;
False,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,99,witchLabels = new ArrayDeque<String>();
False,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,101,/ Reset to zero since the spec does not allow break/continue across
False,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,102,/ functions.
False,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,103,ode body = node.getFirstChild().getNext().getNext();
False,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,104,"heck(body, false, false);"
False,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,106,/ Restore the old labels.
False,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,107,witchLabels = oldSwitchLabels;
False,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,108,reak;
False,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,110,ase Token.FOR:
False,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,111,ode child = node.getFirstChild();
False,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,112,"heck(child, inLoop, inSwitch);"
False,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,113,hild = child.getNext();
False,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,114,"heck(child, inLoop, inSwitch);"
False,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,115,hild = child.getNext();
False,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,116,/ We have a FOR-IN if we have 3 blocks only.
False,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,117,f (child.getNext() == null) {
False,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,118,/ This is the case when we have FOR.
False,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,119,"heck(child, true, inSwitch);"
False,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,120, else {
False,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,121,"heck(child, inLoop, inSwitch);"
False,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,122,"heck(child.getNext(), true, inSwitch);"
False,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,124,reak;
False,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,126,ase Token.WHILE:
False,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,127,"heck(node.getFirstChild(), inLoop, inSwitch);"
False,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,128,"heck(node.getFirstChild().getNext(), true, inSwitch);"
False,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,129,reak;
False,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,131,ase Token.DO:
False,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,132,"heck(node.getFirstChild(), true, inSwitch);"
False,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,133,reak;
False,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,135,ase Token.SWITCH:
False,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,136,"heck(node.getFirstChild(), inLoop, inSwitch);"
False,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,137,or (Node cChild = node.getFirstChild().getNext(); cChild != null;) {
False,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,138,ode next = cChild.getNext();
False,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,139,"heck(cChild, inLoop, true);"
False,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,140,Child = next;
False,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,142,reak;
False,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,147,or (Node sChild = node.getFirstChild(); sChild != null;) {
False,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,148,ode next = sChild.getNext();
False,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,149,"heck(sChild, false, false);"
False,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,150,Child = next;
False,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,152,reak;
False,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,154,ase Token.LABEL:
False,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,155,ode switchNode = node.getLastChild();
False,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,157,/ Record the switch label in the list.
False,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,158,f (switchNode.getType() == Token.SWITCH) {
False,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,159,tring label = node.getFirstChild().getString();
False,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,160,witchLabels.addFirst(label);
False,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,161,"heck(node.getFirstChild().getNext(), inLoop, inSwitch);"
False,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,162,witchLabels.removeFirst();
False,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,163, else {
False,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,164,"heck(node.getFirstChild().getNext(), inLoop, inSwitch);"
False,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,166,reak;
False,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,168,ase Token.BREAK:
False,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,169,/ Make sure we are in at least one loop nest or switch nest.
False,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,170,f (!node.hasChildren() && !inLoop && !inSwitch) {
False,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,171,"eport(node, INVALID_BREAK);"
False,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,173,reak;
False,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,175,ase Token.CONTINUE:
False,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,176,"/ If there is no label, we just need to make sure we are in at least"
False,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,177,/ one loop nest.
False,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,178,f (!inLoop) {
False,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,179,"eport(node, INVALID_CONTINUE);"
False,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,181,f (node.hasChildren()) {
False,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,182,"/ Now we have to verify that the label is not a label for ""switch""."
False,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,183,ode label = node.getFirstChild();
False,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,184,f (switchLabels.contains(label.getString())) {
False,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,185,"eport(node, INVALID_LABEL_CONTINUE);"
False,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,190,efault:
False,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,191,or (Node bChild = node.getFirstChild(); bChild != null;) {
False,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,192,ode next = bChild.getNext();
False,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,193,"heck(bChild, inLoop, inSwitch);"
False,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,194,Child = next;
True,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,69,for (Node bChild = node.getFirstChild(); bChild != null;) {
True,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,70,Node next = bChild.getNext();
True,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,71,check(bChild);
True,src/com/google/javascript/jscomp/ControlStructureCheck.java,src/com/google/javascript/jscomp/ControlStructureCheck.java,72,bChild = next;
False,src/com/google/javascript/jscomp/DiagnosticGroups.java,src/com/google/javascript/jscomp/DiagnosticGroups.java,31,rivate DiagnosticGroups() {} // all static
True,src/com/google/javascript/jscomp/DiagnosticGroups.java,src/com/google/javascript/jscomp/DiagnosticGroups.java,31,DiagnosticGroups() {}
False,src/com/google/javascript/jscomp/DiagnosticGroups.java,src/com/google/javascript/jscomp/DiagnosticGroups.java,43,tatic DiagnosticGroup forName(String name) {
True,src/com/google/javascript/jscomp/DiagnosticGroups.java,src/com/google/javascript/jscomp/DiagnosticGroups.java,43,DiagnosticGroup forName(String name) {
False,src/com/google/javascript/jscomp/DiagnosticGroups.java,src/com/google/javascript/jscomp/DiagnosticGroups.java,108,"tatic void setWarningLevels(CompilerOptions options,"
True,src/com/google/javascript/jscomp/DiagnosticGroups.java,src/com/google/javascript/jscomp/DiagnosticGroups.java,108,"void setWarningLevels(CompilerOptions options,"
False,src/com/google/javascript/jscomp/DiagnosticGroups.java,src/com/google/javascript/jscomp/DiagnosticGroups.java,111,iagnosticGroup group = DiagnosticGroups.forName(name);
True,src/com/google/javascript/jscomp/DiagnosticGroups.java,src/com/google/javascript/jscomp/DiagnosticGroups.java,111,DiagnosticGroup group = forName(name);
True,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,296,"// The root condition node might have changed, get it again."
True,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,297,condition = NodeUtil.getConditionExpression(n);
True,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,298,"this.tryFoldForCondition(condition, n);"
True,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,1926,* Remove always true loop conditions.
True,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,1928,"private void tryFoldForCondition(Node n, Node parent) {"
True,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,1929,if (NodeUtil.isLiteralValue(n)) {
True,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,1930,boolean result = NodeUtil.getBooleanValue(n);
True,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,1931,if (result) {
True,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,1932,"parent.replaceChild(n, new Node(Token.EMPTY));"
True,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,1933,compiler.reportCodeChange();
False,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,21,mport com.google.javascript.rhino.jstype.JSType;
False,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,22,mport com.google.javascript.rhino.jstype.FunctionType;
False,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,23,mport com.google.javascript.rhino.jstype.ObjectType;
True,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,23,import com.google.javascript.rhino.jstype.EnumType;
True,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,24,import com.google.javascript.rhino.jstype.FunctionType;
True,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,25,import com.google.javascript.rhino.jstype.JSType;
True,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,26,import com.google.javascript.rhino.jstype.ObjectType;
True,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,28,import javax.annotation.Nullable;
True,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,33,"* Propagates JSDoc across the type graph, but not across the symbol graph."
True,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,34,* This means that if you have:
True,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,35,* <code>
True,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,36,* var x = new Foo();
True,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,37,* x.bar;
True,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,38,* </code>
True,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,39,"* then the JSType attached to x.bar may get associated JSDoc, but the"
True,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,40,* Node and Var will not.
True,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,42,* JSDoc is initially attached to AST Nodes at parse time.
True,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,43,* There are 3 ways that JSDoc get propagated across the type system.
True,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,44,"* 1) Nominal types (e.g., constructors) may contain JSDocInfo for their"
True,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,45,*    declaration.
True,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,46,* 2) Object types have a JSDocInfo slot for each property on that type.
True,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,47,* 3) Shape types (like structural functions) may have JSDocInfo.
True,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,49,"* #1 and #2 should be self-explanatory, and non-controversial. #3 is"
True,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,50,* a bit trickier. It means that if you have:
True,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,51,* <code>
True,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,52,* /** @param {number} x /
True,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,53,* Foo.prototype.bar = goog.abstractMethod;
True,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,54,* </code>
True,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,55,* the JSDocInfo will appear in two places in the type system: in the 'bar'
True,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,56,"* slot of Foo.prototype, and on the anonymous function type created by"
True,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,57,* this expression.
False,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,57,ase Token.FUNCTION:
False,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,58,/ Infer JSDocInfo on all programmer-defined types.
False,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,59,"/ Conveniently, all programmer-defined types are functions."
False,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,60,SType fnType = n.getJSType();
False,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,61,f (fnType == null) {
False,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,62,reak;
True,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,86,// Infer JSDocInfo on types of all type declarations on variables.
True,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,87,case Token.NAME:
True,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,88,if (parent == null) {
True,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,89,return;
True,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,92,"// Only allow JSDoc on VARs, function declarations, and assigns."
True,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,93,if (parent.getType() != Token.VAR &&
True,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,94,!NodeUtil.isFunctionDeclaration(parent) &&
True,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,95,!(parent.getType() == Token.ASSIGN &&
True,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,96,n == parent.getFirstChild())) {
True,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,97,return;
False,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,76,parent.getType() == Token.ASSIGN ||
False,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,77,arent.getType() == Token.NAME)) {
True,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,111,!(parent.getType() == Token.VAR &&
True,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,112,!parent.hasOneChild())) {
False,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,80,f (docInfo == null) {
False,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,81,ode gramps = parent.getParent();
False,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,82,f (gramps != null && gramps.getType() == Token.VAR &&
False,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,83,ramps.hasOneChild()) {
False,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,84,ocInfo = gramps.getJSDocInfo();
True,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,116,// Try to find the type of the NAME.
True,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,117,JSType varType = n.getJSType();
True,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,118,if (varType == null && parent.getType() == Token.FUNCTION) {
True,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,119,varType = parent.getJSType();
False,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,89,f (docInfo != null && fnType instanceof FunctionType) {
False,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,90,unctionType maybeCtorType = (FunctionType) fnType;
False,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,91,aybeCtorType.setJSDocInfo(docInfo);
False,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,92,f (maybeCtorType.isConstructor()) {
False,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,93,aybeCtorType.getInstanceType().setJSDocInfo(docInfo);
True,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,122,"// If we have no type to attach JSDocInfo to, then there's nothing"
True,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,123,// we can do.
True,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,124,if (varType == null || docInfo == null) {
True,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,125,return;
True,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,128,"// Dereference the type. If the result is not an object, or already"
True,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,129,"// has docs attached, then do nothing."
True,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,130,ObjectType objType = dereferenceToObject(varType);
True,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,131,if (objType == null || objType.getJSDocInfo() != null) {
True,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,132,return;
True,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,135,"attachJSDocInfoToNominalTypeOrShape(objType, docInfo, n.getString());"
False,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,117,SType lhsType = n.getFirstChild().getJSType();
False,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,118,f (lhsType != null &&
False,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,119,hsType instanceof ObjectType) {
False,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,120,bjectType objectType = (ObjectType) lhsType;
False,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,121,bjectType.setPropertyJSDocInfo(
False,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,122,".getLastChild().getString(), docInfo, inExterns);"
True,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,157,ObjectType lhsType =
True,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,158,dereferenceToObject(n.getFirstChild().getJSType());
True,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,159,if (lhsType != null) {
True,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,160,"// Put the JSDoc in the property slot, if there is one."
True,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,161,String propName = n.getLastChild().getString();
True,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,162,if (lhsType.hasOwnProperty(propName)) {
True,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,163,"lhsType.setPropertyJSDocInfo(propName, docInfo, inExterns);"
True,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,166,// Put the JSDoc in any constructors or function shapes as well.
True,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,167,ObjectType propType =
True,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,168,dereferenceToObject(lhsType.getPropertyType(propName));
True,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,169,if (propType != null) {
True,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,170,attachJSDocInfoToNominalTypeOrShape(
True,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,171,"propType, docInfo, n.getQualifiedName());"
True,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,181,"* Dereferences the given type to an object, or returns null."
True,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,183,private ObjectType dereferenceToObject(JSType type) {
True,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,184,type = type == null ? null : type.dereference();
True,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,185,return (type instanceof ObjectType) ? (ObjectType) type : null;
True,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,189,* Handle cases #1 and #3 in the class doc.
True,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,191,private void attachJSDocInfoToNominalTypeOrShape(
True,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,192,"ObjectType objType, JSDocInfo docInfo, @Nullable String qName) {"
True,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,193,if (objType.isConstructor() ||
True,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,194,objType.isEnumType() ||
True,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,195,objType.isInterface()) {
True,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,196,// Named types.
True,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,197,if (objType.hasReferenceName() &&
True,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,198,objType.getReferenceName().equals(qName)) {
True,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,199,objType.setJSDocInfo(docInfo);
True,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,201,if (objType.isConstructor() || objType.isInterface()) {
True,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,202,((FunctionType) objType).getInstanceType().setJSDocInfo(
True,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,203,docInfo);
True,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,204,} else if (objType instanceof EnumType) {
True,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,205,((EnumType) objType).getElementsType().setJSDocInfo(docInfo);
True,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,208,} else if (!objType.isNativeObjectType() &&
True,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,209,objType.isFunctionType()) {
True,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,210,// Structural functions.
True,src/com/google/javascript/jscomp/InferJSDocInfo.java,src/com/google/javascript/jscomp/InferJSDocInfo.java,211,objType.setJSDocInfo(docInfo);
False,src/com/google/javascript/jscomp/SanityCheck.java,src/com/google/javascript/jscomp/SanityCheck.java,53,anityCheckCodeGeneration(root);
True,src/com/google/javascript/jscomp/SanityCheck.java,src/com/google/javascript/jscomp/SanityCheck.java,53,Node reparsedRoot = sanityCheckCodeGeneration(root);
True,src/com/google/javascript/jscomp/SanityCheck.java,src/com/google/javascript/jscomp/SanityCheck.java,54,if (reparsedRoot != null) {
True,src/com/google/javascript/jscomp/SanityCheck.java,src/com/google/javascript/jscomp/SanityCheck.java,55,"sanityCheckSymbolTable(reparsedRoot, root);"
True,src/com/google/javascript/jscomp/SanityCheck.java,src/com/google/javascript/jscomp/SanityCheck.java,60,* Sanity checks that symbol table is up-to-date.
True,src/com/google/javascript/jscomp/SanityCheck.java,src/com/google/javascript/jscomp/SanityCheck.java,62,"private void sanityCheckSymbolTable(Node reparsedRoot, Node originalRoot) {"
True,src/com/google/javascript/jscomp/SanityCheck.java,src/com/google/javascript/jscomp/SanityCheck.java,63,SymbolTable table = compiler.acquireSymbolTable();
True,src/com/google/javascript/jscomp/SanityCheck.java,src/com/google/javascript/jscomp/SanityCheck.java,64,"table.verify(reparsedRoot, originalRoot);"
True,src/com/google/javascript/jscomp/SanityCheck.java,src/com/google/javascript/jscomp/SanityCheck.java,65,table.release();
True,src/com/google/javascript/jscomp/SanityCheck.java,src/com/google/javascript/jscomp/SanityCheck.java,73,* @return The regenerated parse tree. Null on error.
False,src/com/google/javascript/jscomp/SanityCheck.java,src/com/google/javascript/jscomp/SanityCheck.java,61,rivate void sanityCheckCodeGeneration(Node root) {
True,src/com/google/javascript/jscomp/SanityCheck.java,src/com/google/javascript/jscomp/SanityCheck.java,75,private Node sanityCheckCodeGeneration(Node root) {
False,src/com/google/javascript/jscomp/SanityCheck.java,src/com/google/javascript/jscomp/SanityCheck.java,65,eturn;
True,src/com/google/javascript/jscomp/SanityCheck.java,src/com/google/javascript/jscomp/SanityCheck.java,79,return null;
False,src/com/google/javascript/jscomp/SanityCheck.java,src/com/google/javascript/jscomp/SanityCheck.java,73,eturn;
True,src/com/google/javascript/jscomp/SanityCheck.java,src/com/google/javascript/jscomp/SanityCheck.java,87,return null;
True,src/com/google/javascript/jscomp/SanityCheck.java,src/com/google/javascript/jscomp/SanityCheck.java,97,return root2;
False,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,47,iagnosticType.warning(
True,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,47,DiagnosticType.error(
False,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,52,iagnosticType.warning(
True,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,52,DiagnosticType.error(
False,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,57,iagnosticType.warning(
True,src/com/google/javascript/jscomp/SymbolTable.java,src/com/google/javascript/jscomp/SymbolTable.java,57,DiagnosticType.error(
False,src/com/google/javascript/rhino/jstype/EnumElementType.java,src/com/google/javascript/rhino/jstype/EnumElementType.java,123,oolean isNominalType() {
True,src/com/google/javascript/rhino/jstype/EnumElementType.java,src/com/google/javascript/rhino/jstype/EnumElementType.java,123,public boolean isNominalType() {
False,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,145,oolean isNominalType() {
True,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,src/com/google/javascript/rhino/jstype/InstanceObjectType.java,145,public boolean isNominalType() {
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,272,oolean isNominalType() {
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,272,public boolean isNominalType() {
False,src/com/google/javascript/rhino/jstype/NamedType.java,src/com/google/javascript/rhino/jstype/NamedType.java,155,oolean isNominalType() {
True,src/com/google/javascript/rhino/jstype/NamedType.java,src/com/google/javascript/rhino/jstype/NamedType.java,155,public boolean isNominalType() {
False,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,123,oolean isNominalType() {
True,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,123,public boolean isNominalType() {
True,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,65,* An expected symbol table error. Only useful for testing the
True,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,66,* symbol table error-handling.
True,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,68,private DiagnosticType expectedSymbolTableError = null;
False,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,669,rrorManager symbolTableWarnings = new BlackHoleErrorManager(compiler);
True,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,675,ErrorManager symbolTableErrorManager =
True,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,676,new BlackHoleErrorManager(compiler);
True,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,682,JSError[] stErrors = symbolTableErrorManager.getErrors();
True,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,683,if (expectedSymbolTableError != null) {
True,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,684,"assertEquals(""There should be one error."", 1, stErrors.length);"
True,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,685,"assertEquals(expectedSymbolTableError, stErrors[0].getType());"
True,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,686,} else {
True,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,687,"assertEquals(""Unexpected symbol table error(s): "" +"
True,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,688,"Join.join(""\n"", stErrors),"
True,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,689,"0, stErrors.length);"
False,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,679, else if (symbolTableWarnings.getWarnings().length > 0) {
False,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,680,SError[] warnings = symbolTableWarnings.getWarnings();
False,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,681,"ssertEquals(""There should be one symbol table warning"","
False,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,682,", warnings.length);"
False,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,683,"ssertEquals(warning, warnings[0].getType());"
True,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,859,protected void setExpectedSymbolTableError(DiagnosticType type) {
True,test/com/google/javascript/jscomp/CompilerTestCase.java,test/com/google/javascript/jscomp/CompilerTestCase.java,860,this.expectedSymbolTableError = type;
True,test/com/google/javascript/jscomp/ControlStructureCheckTest.java,test/com/google/javascript/jscomp/ControlStructureCheckTest.java,25,// Rhino parse error message text
True,test/com/google/javascript/jscomp/ControlStructureCheckTest.java,test/com/google/javascript/jscomp/ControlStructureCheckTest.java,26,final String UNLABELED_BREAK =
True,test/com/google/javascript/jscomp/ControlStructureCheckTest.java,test/com/google/javascript/jscomp/ControlStructureCheckTest.java,27,"""unlabelled break must be inside loop or switch"";"
True,test/com/google/javascript/jscomp/ControlStructureCheckTest.java,test/com/google/javascript/jscomp/ControlStructureCheckTest.java,29,"final String UNEXPECTED_CONTINUE = ""continue must be inside loop"";"
True,test/com/google/javascript/jscomp/ControlStructureCheckTest.java,test/com/google/javascript/jscomp/ControlStructureCheckTest.java,31,final String UNEXPECTED_LABLED_CONTINUE =
True,test/com/google/javascript/jscomp/ControlStructureCheckTest.java,test/com/google/javascript/jscomp/ControlStructureCheckTest.java,32,"""continue can only use labeles of iteration statements"";"
True,test/com/google/javascript/jscomp/ControlStructureCheckTest.java,test/com/google/javascript/jscomp/ControlStructureCheckTest.java,34,"final String UNDEFINED_LABEL = ""undefined label"";"
False,test/com/google/javascript/jscomp/ControlStructureCheckTest.java,test/com/google/javascript/jscomp/ControlStructureCheckTest.java,71,ssertInvalidLabelContinue(
True,test/com/google/javascript/jscomp/ControlStructureCheckTest.java,test/com/google/javascript/jscomp/ControlStructureCheckTest.java,82,assertInvalidLabeledContinue(
False,test/com/google/javascript/jscomp/ControlStructureCheckTest.java,test/com/google/javascript/jscomp/ControlStructureCheckTest.java,79,ublic void testContinueNotCrossFunction() {
True,test/com/google/javascript/jscomp/ControlStructureCheckTest.java,test/com/google/javascript/jscomp/ControlStructureCheckTest.java,90,public void testContinueNotCrossFunction1() {
True,test/com/google/javascript/jscomp/ControlStructureCheckTest.java,test/com/google/javascript/jscomp/ControlStructureCheckTest.java,94,public void testContinueNotCrossFunction2() {
True,test/com/google/javascript/jscomp/ControlStructureCheckTest.java,test/com/google/javascript/jscomp/ControlStructureCheckTest.java,95,assertUndefinedLabel(
True,test/com/google/javascript/jscomp/ControlStructureCheckTest.java,test/com/google/javascript/jscomp/ControlStructureCheckTest.java,96,"""a:switch(1){case(1):function f(){while(1){continue a;}}}"");"
False,test/com/google/javascript/jscomp/ControlStructureCheckTest.java,test/com/google/javascript/jscomp/ControlStructureCheckTest.java,97,"ssertSomeError(js, ControlStructureCheck.INVALID_BREAK);"
True,test/com/google/javascript/jscomp/ControlStructureCheckTest.java,test/com/google/javascript/jscomp/ControlStructureCheckTest.java,113,"testParseError(js, UNLABELED_BREAK);"
False,test/com/google/javascript/jscomp/ControlStructureCheckTest.java,test/com/google/javascript/jscomp/ControlStructureCheckTest.java,101,"ssertSomeError(js, ControlStructureCheck.INVALID_CONTINUE);"
True,test/com/google/javascript/jscomp/ControlStructureCheckTest.java,test/com/google/javascript/jscomp/ControlStructureCheckTest.java,117,"testParseError(js, UNEXPECTED_CONTINUE);"
False,test/com/google/javascript/jscomp/ControlStructureCheckTest.java,test/com/google/javascript/jscomp/ControlStructureCheckTest.java,104,rivate void assertInvalidLabelContinue(String js) {
False,test/com/google/javascript/jscomp/ControlStructureCheckTest.java,test/com/google/javascript/jscomp/ControlStructureCheckTest.java,105,"ssertSomeError(js, ControlStructureCheck.INVALID_LABEL_CONTINUE);"
True,test/com/google/javascript/jscomp/ControlStructureCheckTest.java,test/com/google/javascript/jscomp/ControlStructureCheckTest.java,120,private void assertInvalidLabeledContinue(String js) {
True,test/com/google/javascript/jscomp/ControlStructureCheckTest.java,test/com/google/javascript/jscomp/ControlStructureCheckTest.java,121,"testParseError(js, UNEXPECTED_LABLED_CONTINUE);"
False,test/com/google/javascript/jscomp/ControlStructureCheckTest.java,test/com/google/javascript/jscomp/ControlStructureCheckTest.java,109, Tests that either a parse error or the given error is triggered.
False,test/com/google/javascript/jscomp/ControlStructureCheckTest.java,test/com/google/javascript/jscomp/ControlStructureCheckTest.java,110," The new parser is stricter with control structure checks, so it will catch"
False,test/com/google/javascript/jscomp/ControlStructureCheckTest.java,test/com/google/javascript/jscomp/ControlStructureCheckTest.java,111, some of these at parse time.
False,test/com/google/javascript/jscomp/ControlStructureCheckTest.java,test/com/google/javascript/jscomp/ControlStructureCheckTest.java,113,"rivate void assertSomeError(String js, DiagnosticType error) {"
False,test/com/google/javascript/jscomp/ControlStructureCheckTest.java,test/com/google/javascript/jscomp/ControlStructureCheckTest.java,114,f (!hasParseError(js)) {
False,test/com/google/javascript/jscomp/ControlStructureCheckTest.java,test/com/google/javascript/jscomp/ControlStructureCheckTest.java,115,"est(js, js, error);"
True,test/com/google/javascript/jscomp/ControlStructureCheckTest.java,test/com/google/javascript/jscomp/ControlStructureCheckTest.java,124,private void assertUndefinedLabel(String js) {
True,test/com/google/javascript/jscomp/ControlStructureCheckTest.java,test/com/google/javascript/jscomp/ControlStructureCheckTest.java,125,"testParseError(js, UNDEFINED_LABEL);"
False,test/com/google/javascript/jscomp/ControlStructureCheckTest.java,test/com/google/javascript/jscomp/ControlStructureCheckTest.java,119,rivate boolean hasParseError(String js) {
True,test/com/google/javascript/jscomp/ControlStructureCheckTest.java,test/com/google/javascript/jscomp/ControlStructureCheckTest.java,128,"private void testParseError(String js, String errorText) {"
False,test/com/google/javascript/jscomp/ControlStructureCheckTest.java,test/com/google/javascript/jscomp/ControlStructureCheckTest.java,122,eturn compiler.getErrorCount() > 0;
True,test/com/google/javascript/jscomp/ControlStructureCheckTest.java,test/com/google/javascript/jscomp/ControlStructureCheckTest.java,131,assertTrue(compiler.getErrorCount() == 1);
True,test/com/google/javascript/jscomp/ControlStructureCheckTest.java,test/com/google/javascript/jscomp/ControlStructureCheckTest.java,132,String msg = compiler.getErrors()[0].toString();
True,test/com/google/javascript/jscomp/ControlStructureCheckTest.java,test/com/google/javascript/jscomp/ControlStructureCheckTest.java,133,assertTrue(msg.contains(errorText));
False,test/com/google/javascript/jscomp/FoldConstantsTest.java,test/com/google/javascript/jscomp/FoldConstantsTest.java,898,"old(""for(;!false;) foo() "", ""for(;1;) foo()"");"
False,test/com/google/javascript/jscomp/FoldConstantsTest.java,test/com/google/javascript/jscomp/FoldConstantsTest.java,899,"old(""for(;true;) foo() "", ""for(;1;) foo() "");"
False,test/com/google/javascript/jscomp/FoldConstantsTest.java,test/com/google/javascript/jscomp/FoldConstantsTest.java,900,"old(""for(;!void 0;) foo()"", ""for(;1;) foo()"");"
True,test/com/google/javascript/jscomp/FoldConstantsTest.java,test/com/google/javascript/jscomp/FoldConstantsTest.java,898,"fold(""for(;!false;) foo() "", ""for(;;) foo()"");"
True,test/com/google/javascript/jscomp/FoldConstantsTest.java,test/com/google/javascript/jscomp/FoldConstantsTest.java,899,"fold(""for(;true;) foo() "", ""for(;;) foo() "");"
True,test/com/google/javascript/jscomp/FoldConstantsTest.java,test/com/google/javascript/jscomp/FoldConstantsTest.java,900,"fold(""for(;1;) foo()"", ""for(;;) foo()"");"
True,test/com/google/javascript/jscomp/FoldConstantsTest.java,test/com/google/javascript/jscomp/FoldConstantsTest.java,901,"foldSame(""for(;;) foo()"");"
True,test/com/google/javascript/jscomp/FoldConstantsTest.java,test/com/google/javascript/jscomp/FoldConstantsTest.java,902,"fold(""for(;!void 0;) foo()"", ""for(;;) foo()"");"
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,2,* Copyright 2009 Google Inc.
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,5,* you may not use this file except in compliance with the License.
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,6,* You may obtain a copy of the License at
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,13,* See the License for the specific language governing permissions and
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,14,* limitations under the License.
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,17,package com.google.javascript.jscomp;
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,20,import com.google.common.collect.Lists;
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,21,import com.google.javascript.jscomp.NodeTraversal.AbstractPostOrderCallback;
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,22,import com.google.javascript.jscomp.NodeTraversal.Callback;
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,23,import com.google.javascript.jscomp.ScopeCreator;
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,24,import com.google.javascript.rhino.Node;
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,25,import com.google.javascript.rhino.jstype.FunctionType;
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,26,import com.google.javascript.rhino.jstype.JSType;
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,27,import com.google.javascript.rhino.jstype.JSTypeNative;
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,28,import com.google.javascript.rhino.jstype.JSTypeRegistry;
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,29,import com.google.javascript.rhino.jstype.ObjectType;
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,31,import java.util.Deque;
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,35,* Tests for {@link InferJSDocInfo}.
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,38,// TODO(nicksantos): A lot of this code is duplicated from
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,39,// TypedScopeCreatorTest. We should create a common test harness for
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,40,// assertions about type information.
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,41,public class InferJSDocInfoTest extends CompilerTestCase {
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,43,private JSTypeRegistry registry;
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,44,private Scope globalScope;
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,45,private Scope lastLocalScope;
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,47,@Override
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,48,public int getNumRepetitions() {
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,49,return 1;
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,52,@Override
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,53,protected CompilerOptions getOptions() {
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,54,CompilerOptions options = super.getOptions();
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,55,options.ideMode = true;
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,56,return options;
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,59,private final Callback callback = new AbstractPostOrderCallback() {
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,60,"public void visit(NodeTraversal t, Node n, Node parent) {"
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,61,Scope s = t.getScope();
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,62,if (s.isGlobal()) {
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,63,globalScope = s;
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,64,} else {
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,65,lastLocalScope = s;
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,70,@Override
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,71,public CompilerPass getProcessor(final Compiler compiler) {
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,72,registry = compiler.getTypeRegistry();
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,73,return new CompilerPass() {
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,74,"public void process(Node externs, Node root) {"
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,75,ScopeCreator scopeCreator =
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,76,new MemoizedScopeCreator(new TypedScopeCreator(compiler));
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,77,"Scope topScope = scopeCreator.createScope(root.getParent(), null);"
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,78,(new TypeInferencePass(
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,79,"compiler, compiler.getReverseAbstractInterpreter(),"
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,80,"topScope, scopeCreator)).process(externs, root);"
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,81,NodeTraversal t = new NodeTraversal(
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,82,"compiler, callback, scopeCreator);"
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,83,"t.traverseRoots(Lists.newArrayList(externs, root));"
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,84,"(new InferJSDocInfo(compiler)).process(externs, root);"
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,89,public void testNativeCtor() {
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,90,testSame(
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,91,"""/** Object. \n * @param {*} x \n * @constructor */ "" +"
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,92,"""function Object(x) {};"" +"
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,93,"""var x = new Object();"" +"
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,94,"""/** Another object. */ var y = new Object();"");"
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,95,assertEquals(
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,96,"""Object."","
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,97,"findGlobalNameType(""x"").getJSDocInfo().getBlockDescription());"
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,98,assertEquals(
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,99,"""Object."","
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,100,"findGlobalNameType(""y"").getJSDocInfo().getBlockDescription());"
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,101,assertEquals(
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,102,"""Object."","
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,103,"globalScope.getVar(""y"").getType().getJSDocInfo().getBlockDescription());"
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,106,public void testStructuralFunctions() {
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,107,testSame(
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,108,"""/** Object. \n * @param {*} x \n * @constructor */ "" +"
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,109,"""function Object(x) {};"" +"
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,110,"""/** Function. \n * @param {*} x */ "" +"
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,111,"""function fn(x) {};"" +"
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,112,"""var goog = {};"" +"
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,113,"""/** Another object. \n * @type {Object} */ goog.x = new Object();"" +"
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,114,"""/** Another function. \n * @param {number} x */ goog.y = fn;"");"
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,115,assertEquals(
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,116,"""(Object|null)"","
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,117,"globalScope.getVar(""goog.x"").getType().toString());"
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,118,assertEquals(
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,119,"""Object."","
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,120,"globalScope.getVar(""goog.x"").getType().restrictByNotNullOrUndefined()"
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,121,.getJSDocInfo().getBlockDescription());
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,122,assertEquals(
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,123,"""Another function."","
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,124,"globalScope.getVar(""goog.y"").getType()"
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,125,.getJSDocInfo().getBlockDescription());
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,128,public void testInstanceObject() {
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,129,// Asserts that no property gets attached to the instance object.
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,130,testSame(
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,131,"""/** @constructor */ function Foo() {}"" +"
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,132,"""var f = new Foo();"" +"
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,133,"""/** @type {number} */ f.bar = 4;"");"
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,134,"ObjectType type = (ObjectType) globalScope.getVar(""f"").getType();"
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,135,"assertEquals(""Foo"", type.toString());"
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,136,"assertFalse(type.hasProperty(""bar""));"
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,137,"assertNull(type.getOwnPropertyJSDocInfo(""bar""));"
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,140,public void testInterface() {
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,141,testSame(
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,142,"""/** An interface. \n * @interface */ function Foo() {}"" +"
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,143,"""var f = new Foo();"" +"
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,144,"""/** @type {number} */ f.bar = 4;"");"
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,145,"ObjectType type = (ObjectType) globalScope.getVar(""Foo"").getType();"
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,146,assertEquals(
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,147,"""An interface."","
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,148,type.getJSDocInfo().getBlockDescription());
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,151,public void testNamespacedCtor() {
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,152,testSame(
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,153,"""var goog = {};"" +"
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,154,"""/** Hello! \n * @constructor */ goog.Foo = function() {};"" +"
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,155,"""goog.Foo.bar = goog.Foo;"" +"
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,156,"""/** Bye! \n * @param {string=} opt_x */"" +"
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,157,"""goog.Foo.prototype.baz = goog.Foo;"" +"
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,158,"""/** Blargh */ var x = new goog.Foo();"");"
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,159,assertEquals(
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,160,"""Hello!"","
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,161,"findGlobalNameType(""x"").getJSDocInfo().getBlockDescription());"
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,162,assertEquals(
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,163,"""Hello!"","
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,164,"findGlobalNameType(""goog.Foo"").getJSDocInfo().getBlockDescription());"
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,165,assertEquals(
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,166,"""Hello!"","
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,167,findGlobalNameType(
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,168,"""goog.Foo.bar"").getJSDocInfo().getBlockDescription());"
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,170,assertEquals(
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,171,"""Hello!"","
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,172,findGlobalNameType(
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,173,"""goog.Foo.prototype.baz"").getJSDocInfo().getBlockDescription());"
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,175,"ObjectType proto = (ObjectType) findGlobalNameType(""goog.Foo.prototype"");"
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,176,assertEquals(
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,177,"""Bye!"","
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,178,"proto.getPropertyType(""baz"").getJSDocInfo().getBlockDescription());"
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,181,public void testAbstractMethod() {
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,182,testSame(
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,183,"""/** Abstract method. \n * @type {!Function} */ var abstractMethod;"" +"
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,184,"""/** @constructor */ function Foo() {}"" +"
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,185,"""/** Block description. \n * @param {number} x */"" +"
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,186,"""Foo.prototype.bar = abstractMethod;"");"
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,187,FunctionType abstractMethod =
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,188,"(FunctionType) findGlobalNameType(""abstractMethod"");"
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,189,assertNull(abstractMethod.getJSDocInfo());
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,191,"FunctionType ctor = (FunctionType) findGlobalNameType(""Foo"");"
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,192,ObjectType proto = ctor.getInstanceType().getImplicitPrototype();
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,193,"FunctionType method = (FunctionType) proto.getPropertyType(""bar"");"
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,194,assertEquals(
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,195,"""Block description."","
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,196,method.getJSDocInfo().getBlockDescription());
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,197,assertEquals(
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,198,"""Block description."","
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,199,"proto.getOwnPropertyJSDocInfo(""bar"").getBlockDescription());"
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,202,private JSType findGlobalNameType(String name) {
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,203,"return findNameType(name, globalScope);"
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,206,"private JSType findNameType(String name, Scope scope) {"
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,207,Node root = scope.getRootNode();
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,208,Deque<Node> queue = Lists.newLinkedList();
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,209,queue.push(root);
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,210,while (!queue.isEmpty()) {
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,211,Node current = queue.pop();
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,212,if (name.equals(current.getQualifiedName()) &&
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,213,current.getJSType() != null) {
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,214,return current.getJSType();
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,217,for (Node child : current.children()) {
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,218,queue.push(child);
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,221,return null;
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,224,private JSType getNativeType(JSTypeNative type) {
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,225,return registry.getNativeType(type);
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,228,private ObjectType getNativeObjectType(JSTypeNative type) {
True,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,test/com/google/javascript/jscomp/InferJSDocInfoTest.java,229,return (ObjectType) registry.getNativeType(type);
False,test/com/google/javascript/jscomp/JSCompilerSourceExcerptProviderTest.java,test/com/google/javascript/jscomp/JSCompilerSourceExcerptProviderTest.java,34,"ompiler.init(new JSSourceFile[] {}, new JSSourceFile[] {foo, bar}, null);"
True,test/com/google/javascript/jscomp/JSCompilerSourceExcerptProviderTest.java,test/com/google/javascript/jscomp/JSCompilerSourceExcerptProviderTest.java,34,CompilerOptions options = new CompilerOptions();
True,test/com/google/javascript/jscomp/JSCompilerSourceExcerptProviderTest.java,test/com/google/javascript/jscomp/JSCompilerSourceExcerptProviderTest.java,35,compiler.init(
True,test/com/google/javascript/jscomp/JSCompilerSourceExcerptProviderTest.java,test/com/google/javascript/jscomp/JSCompilerSourceExcerptProviderTest.java,36,"new JSSourceFile[] {}, new JSSourceFile[] {foo, bar}, options);"
True,test/com/google/javascript/jscomp/SanityCheckTest.java,test/com/google/javascript/jscomp/SanityCheckTest.java,38,@Override protected int getNumRepetitions() {
True,test/com/google/javascript/jscomp/SanityCheckTest.java,test/com/google/javascript/jscomp/SanityCheckTest.java,39,return 1;
True,test/com/google/javascript/jscomp/SanityCheckTest.java,test/com/google/javascript/jscomp/SanityCheckTest.java,89,public void testSymbolTable() throws Exception {
True,test/com/google/javascript/jscomp/SanityCheckTest.java,test/com/google/javascript/jscomp/SanityCheckTest.java,90,otherPass = new CompilerPass() {
True,test/com/google/javascript/jscomp/SanityCheckTest.java,test/com/google/javascript/jscomp/SanityCheckTest.java,91,"@Override public void process(Node externs, Node root) {"
True,test/com/google/javascript/jscomp/SanityCheckTest.java,test/com/google/javascript/jscomp/SanityCheckTest.java,92,SymbolTable st = getLastCompiler().acquireSymbolTable();
True,test/com/google/javascript/jscomp/SanityCheckTest.java,test/com/google/javascript/jscomp/SanityCheckTest.java,93,"st.createScope(root, null);"
True,test/com/google/javascript/jscomp/SanityCheckTest.java,test/com/google/javascript/jscomp/SanityCheckTest.java,94,Node script = root.getFirstChild();
True,test/com/google/javascript/jscomp/SanityCheckTest.java,test/com/google/javascript/jscomp/SanityCheckTest.java,95,script.removeChild(script.getFirstChild());
True,test/com/google/javascript/jscomp/SanityCheckTest.java,test/com/google/javascript/jscomp/SanityCheckTest.java,96,st.release();
True,test/com/google/javascript/jscomp/SanityCheckTest.java,test/com/google/javascript/jscomp/SanityCheckTest.java,100,"test(""var x;"", null, SymbolTable.VARIABLE_COUNT_MISMATCH);"
False,test/com/google/javascript/jscomp/SymbolTableTest.java,test/com/google/javascript/jscomp/SymbolTableTest.java,33,iagnosticType targetWarning = null;
True,test/com/google/javascript/jscomp/SymbolTableTest.java,test/com/google/javascript/jscomp/SymbolTableTest.java,33,DiagnosticType targetError = null;
False,test/com/google/javascript/jscomp/SymbolTableTest.java,test/com/google/javascript/jscomp/SymbolTableTest.java,40,argetWarning = null;
True,test/com/google/javascript/jscomp/SymbolTableTest.java,test/com/google/javascript/jscomp/SymbolTableTest.java,40,setExpectedSymbolTableError(null);
True,test/com/google/javascript/jscomp/SymbolTableTest.java,test/com/google/javascript/jscomp/SymbolTableTest.java,41,targetError = null;
False,test/com/google/javascript/jscomp/SymbolTableTest.java,test/com/google/javascript/jscomp/SymbolTableTest.java,50,argetWarning = VARIABLE_COUNT_MISMATCH;
False,test/com/google/javascript/jscomp/SymbolTableTest.java,test/com/google/javascript/jscomp/SymbolTableTest.java,51,"est(""var x = 3, y = 5;"", """", null, targetWarning);"
True,test/com/google/javascript/jscomp/SymbolTableTest.java,test/com/google/javascript/jscomp/SymbolTableTest.java,51,setExpectedSymbolTableError(VARIABLE_COUNT_MISMATCH);
True,test/com/google/javascript/jscomp/SymbolTableTest.java,test/com/google/javascript/jscomp/SymbolTableTest.java,52,"test(""var x = 3, y = 5;"", """");"
False,test/com/google/javascript/jscomp/SymbolTableTest.java,test/com/google/javascript/jscomp/SymbolTableTest.java,55,argetWarning = MOVED_VARIABLE;
False,test/com/google/javascript/jscomp/SymbolTableTest.java,test/com/google/javascript/jscomp/SymbolTableTest.java,56,"est(""var x = 3, y = 5;"", ""var x, y = 5;"", null, targetWarning);"
True,test/com/google/javascript/jscomp/SymbolTableTest.java,test/com/google/javascript/jscomp/SymbolTableTest.java,56,setExpectedSymbolTableError(MOVED_VARIABLE);
True,test/com/google/javascript/jscomp/SymbolTableTest.java,test/com/google/javascript/jscomp/SymbolTableTest.java,57,"test(""var x = 3, y = 5;"", ""var x, y = 5;"");"
False,test/com/google/javascript/jscomp/SymbolTableTest.java,test/com/google/javascript/jscomp/SymbolTableTest.java,60,argetWarning = MISSING_VARIABLE;
False,test/com/google/javascript/jscomp/SymbolTableTest.java,test/com/google/javascript/jscomp/SymbolTableTest.java,61,"est(""var x = 3, y = 5;"", ""var z = 3, y = 5;"", null, targetWarning);"
True,test/com/google/javascript/jscomp/SymbolTableTest.java,test/com/google/javascript/jscomp/SymbolTableTest.java,61,setExpectedSymbolTableError(MISSING_VARIABLE);
True,test/com/google/javascript/jscomp/SymbolTableTest.java,test/com/google/javascript/jscomp/SymbolTableTest.java,62,"test(""var x = 3, y = 5;"", ""var z = 3, y = 5;"");"
True,test/com/google/javascript/jscomp/SymbolTableTest.java,test/com/google/javascript/jscomp/SymbolTableTest.java,65,@Override
True,test/com/google/javascript/jscomp/SymbolTableTest.java,test/com/google/javascript/jscomp/SymbolTableTest.java,66,protected void setExpectedSymbolTableError(DiagnosticType type) {
True,test/com/google/javascript/jscomp/SymbolTableTest.java,test/com/google/javascript/jscomp/SymbolTableTest.java,67,super.setExpectedSymbolTableError(type);
True,test/com/google/javascript/jscomp/SymbolTableTest.java,test/com/google/javascript/jscomp/SymbolTableTest.java,68,targetError = type;
False,test/com/google/javascript/jscomp/SymbolTableTest.java,test/com/google/javascript/jscomp/SymbolTableTest.java,88,f (targetWarning == null) {
True,test/com/google/javascript/jscomp/SymbolTableTest.java,test/com/google/javascript/jscomp/SymbolTableTest.java,95,if (targetError == null) {
False,test/com/google/javascript/jscomp/SymbolTableTest.java,test/com/google/javascript/jscomp/SymbolTableTest.java,95, else if (targetWarning == VARIABLE_COUNT_MISMATCH) {
True,test/com/google/javascript/jscomp/SymbolTableTest.java,test/com/google/javascript/jscomp/SymbolTableTest.java,102,} else if (targetError == VARIABLE_COUNT_MISMATCH) {
False,test/com/google/javascript/jscomp/SymbolTableTest.java,test/com/google/javascript/jscomp/SymbolTableTest.java,99, else if (targetWarning == MISSING_VARIABLE) {
True,test/com/google/javascript/jscomp/SymbolTableTest.java,test/com/google/javascript/jscomp/SymbolTableTest.java,106,} else if (targetError == MISSING_VARIABLE) {
False,test/com/google/javascript/jscomp/SymbolTableTest.java,test/com/google/javascript/jscomp/SymbolTableTest.java,102, else if (targetWarning == MOVED_VARIABLE) {
True,test/com/google/javascript/jscomp/SymbolTableTest.java,test/com/google/javascript/jscomp/SymbolTableTest.java,109,} else if (targetError == MOVED_VARIABLE) {
True,test/com/google/javascript/rhino/AllTests.java,test/com/google/javascript/rhino/AllTests.java,3,* ***** BEGIN LICENSE BLOCK *****
True,test/com/google/javascript/rhino/AllTests.java,test/com/google/javascript/rhino/AllTests.java,4,* Version: MPL 1.1/GPL 2.0
True,test/com/google/javascript/rhino/AllTests.java,test/com/google/javascript/rhino/AllTests.java,6,* The contents of this file are subject to the Mozilla Public License Version
True,test/com/google/javascript/rhino/AllTests.java,test/com/google/javascript/rhino/AllTests.java,7,"* 1.1 (the ""License""); you may not use this file except in compliance with"
True,test/com/google/javascript/rhino/AllTests.java,test/com/google/javascript/rhino/AllTests.java,8,* the License. You may obtain a copy of the License at
True,test/com/google/javascript/rhino/AllTests.java,test/com/google/javascript/rhino/AllTests.java,9,* http://www.mozilla.org/MPL/
True,test/com/google/javascript/rhino/AllTests.java,test/com/google/javascript/rhino/AllTests.java,11,"* Software distributed under the License is distributed on an ""AS IS"" basis,"
True,test/com/google/javascript/rhino/AllTests.java,test/com/google/javascript/rhino/AllTests.java,12,"* WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License"
True,test/com/google/javascript/rhino/AllTests.java,test/com/google/javascript/rhino/AllTests.java,13,* for the specific language governing rights and limitations under the
True,test/com/google/javascript/rhino/AllTests.java,test/com/google/javascript/rhino/AllTests.java,14,* License.
True,test/com/google/javascript/rhino/AllTests.java,test/com/google/javascript/rhino/AllTests.java,16,"* The Original Code is Rhino code, released"
True,test/com/google/javascript/rhino/AllTests.java,test/com/google/javascript/rhino/AllTests.java,17,"* May 6, 1999."
True,test/com/google/javascript/rhino/AllTests.java,test/com/google/javascript/rhino/AllTests.java,19,* The Initial Developer of the Original Code is
True,test/com/google/javascript/rhino/AllTests.java,test/com/google/javascript/rhino/AllTests.java,20,* Netscape Communications Corporation.
True,test/com/google/javascript/rhino/AllTests.java,test/com/google/javascript/rhino/AllTests.java,21,* Portions created by the Initial Developer are Copyright (C) 1997-1999
True,test/com/google/javascript/rhino/AllTests.java,test/com/google/javascript/rhino/AllTests.java,22,* the Initial Developer. All Rights Reserved.
True,test/com/google/javascript/rhino/AllTests.java,test/com/google/javascript/rhino/AllTests.java,24,* Contributor(s):
True,test/com/google/javascript/rhino/AllTests.java,test/com/google/javascript/rhino/AllTests.java,25,*   Nick Santos
True,test/com/google/javascript/rhino/AllTests.java,test/com/google/javascript/rhino/AllTests.java,27,"* Alternatively, the contents of this file may be used under the terms of"
True,test/com/google/javascript/rhino/AllTests.java,test/com/google/javascript/rhino/AllTests.java,28,"* the GNU General Public License Version 2 or later (the ""GPL""), in which"
True,test/com/google/javascript/rhino/AllTests.java,test/com/google/javascript/rhino/AllTests.java,29,* case the provisions of the GPL are applicable instead of those above. If
True,test/com/google/javascript/rhino/AllTests.java,test/com/google/javascript/rhino/AllTests.java,30,* you wish to allow use of your version of this file only under the terms of
True,test/com/google/javascript/rhino/AllTests.java,test/com/google/javascript/rhino/AllTests.java,31,* the GPL and not to allow others to use your version of this file under the
True,test/com/google/javascript/rhino/AllTests.java,test/com/google/javascript/rhino/AllTests.java,32,"* MPL, indicate your decision by deleting the provisions above and replacing"
True,test/com/google/javascript/rhino/AllTests.java,test/com/google/javascript/rhino/AllTests.java,33,* them with the notice and other provisions required by the GPL. If you do
True,test/com/google/javascript/rhino/AllTests.java,test/com/google/javascript/rhino/AllTests.java,34,"* not delete the provisions above, a recipient may use your version of this"
True,test/com/google/javascript/rhino/AllTests.java,test/com/google/javascript/rhino/AllTests.java,35,* file under either the MPL or the GPL.
True,test/com/google/javascript/rhino/AllTests.java,test/com/google/javascript/rhino/AllTests.java,37,* ***** END LICENSE BLOCK ***** */
True,test/com/google/javascript/rhino/AllTests.java,test/com/google/javascript/rhino/AllTests.java,39,package com.google.javascript.rhino;
True,test/com/google/javascript/rhino/AllTests.java,test/com/google/javascript/rhino/AllTests.java,41,import com.google.javascript.rhino.jstype.BooleanLiteralSetTest;
True,test/com/google/javascript/rhino/AllTests.java,test/com/google/javascript/rhino/AllTests.java,42,import com.google.javascript.rhino.jstype.FunctionParamBuilderTest;
True,test/com/google/javascript/rhino/AllTests.java,test/com/google/javascript/rhino/AllTests.java,43,import com.google.javascript.rhino.jstype.JSTypeRegistryTest;
True,test/com/google/javascript/rhino/AllTests.java,test/com/google/javascript/rhino/AllTests.java,44,import com.google.javascript.rhino.jstype.JSTypeTest;
True,test/com/google/javascript/rhino/AllTests.java,test/com/google/javascript/rhino/AllTests.java,45,import com.google.javascript.rhino.jstype.TernaryValueTest;
True,test/com/google/javascript/rhino/AllTests.java,test/com/google/javascript/rhino/AllTests.java,46,import com.google.javascript.rhino.jstype.UnionTypeBuilderTest;
True,test/com/google/javascript/rhino/AllTests.java,test/com/google/javascript/rhino/AllTests.java,48,import junit.framework.Test;
True,test/com/google/javascript/rhino/AllTests.java,test/com/google/javascript/rhino/AllTests.java,49,import junit.framework.TestSuite;
True,test/com/google/javascript/rhino/AllTests.java,test/com/google/javascript/rhino/AllTests.java,51,import java.util.logging.Level;
True,test/com/google/javascript/rhino/AllTests.java,test/com/google/javascript/rhino/AllTests.java,52,import java.util.logging.Logger;
True,test/com/google/javascript/rhino/AllTests.java,test/com/google/javascript/rhino/AllTests.java,54,public class AllTests {
True,test/com/google/javascript/rhino/AllTests.java,test/com/google/javascript/rhino/AllTests.java,55,public static Test suite() throws Exception {
True,test/com/google/javascript/rhino/AllTests.java,test/com/google/javascript/rhino/AllTests.java,56,// suspend logging
True,test/com/google/javascript/rhino/AllTests.java,test/com/google/javascript/rhino/AllTests.java,57,"Logger.getLogger(""com.google"").setLevel(Level.OFF);"
True,test/com/google/javascript/rhino/AllTests.java,test/com/google/javascript/rhino/AllTests.java,59,// The testing framework is lame and doesn't work in third_party.
True,test/com/google/javascript/rhino/AllTests.java,test/com/google/javascript/rhino/AllTests.java,60,// Manually load the classes.
True,test/com/google/javascript/rhino/AllTests.java,test/com/google/javascript/rhino/AllTests.java,61,TestSuite suite = new TestSuite();
True,test/com/google/javascript/rhino/AllTests.java,test/com/google/javascript/rhino/AllTests.java,63,suite.addTestSuite(JSDocInfoTest.class);
True,test/com/google/javascript/rhino/AllTests.java,test/com/google/javascript/rhino/AllTests.java,64,suite.addTestSuite(NodeTest.class);
True,test/com/google/javascript/rhino/AllTests.java,test/com/google/javascript/rhino/AllTests.java,65,suite.addTestSuite(ParserTest.class);
True,test/com/google/javascript/rhino/AllTests.java,test/com/google/javascript/rhino/AllTests.java,66,suite.addTestSuite(TokenStreamTest.class);
True,test/com/google/javascript/rhino/AllTests.java,test/com/google/javascript/rhino/AllTests.java,68,suite.addTestSuite(BooleanLiteralSetTest.class);
True,test/com/google/javascript/rhino/AllTests.java,test/com/google/javascript/rhino/AllTests.java,69,suite.addTestSuite(FunctionParamBuilderTest.class);
True,test/com/google/javascript/rhino/AllTests.java,test/com/google/javascript/rhino/AllTests.java,70,suite.addTestSuite(JSTypeRegistryTest.class);
True,test/com/google/javascript/rhino/AllTests.java,test/com/google/javascript/rhino/AllTests.java,71,suite.addTestSuite(JSTypeTest.class);
True,test/com/google/javascript/rhino/AllTests.java,test/com/google/javascript/rhino/AllTests.java,72,suite.addTestSuite(TernaryValueTest.class);
True,test/com/google/javascript/rhino/AllTests.java,test/com/google/javascript/rhino/AllTests.java,73,suite.addTestSuite(UnionTypeBuilderTest.class);
True,test/com/google/javascript/rhino/AllTests.java,test/com/google/javascript/rhino/AllTests.java,75,return suite;
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,3,* ***** BEGIN LICENSE BLOCK *****
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,4,* Version: MPL 1.1/GPL 2.0
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,6,* The contents of this file are subject to the Mozilla Public License Version
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,7,"* 1.1 (the ""License""); you may not use this file except in compliance with"
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,8,* the License. You may obtain a copy of the License at
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,9,* http://www.mozilla.org/MPL/
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,11,"* Software distributed under the License is distributed on an ""AS IS"" basis,"
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,12,"* WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License"
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,13,* for the specific language governing rights and limitations under the
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,14,* License.
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,16,"* The Original Code is Rhino code, released"
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,17,"* May 6, 1999."
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,19,* The Initial Developer of the Original Code is
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,20,* Netscape Communications Corporation.
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,21,* Portions created by the Initial Developer are Copyright (C) 1997-1999
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,22,* the Initial Developer. All Rights Reserved.
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,24,* Contributor(s):
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,25,*   Nick Santos
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,27,"* Alternatively, the contents of this file may be used under the terms of"
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,28,"* the GNU General Public License Version 2 or later (the ""GPL""), in which"
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,29,* case the provisions of the GPL are applicable instead of those above. If
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,30,* you wish to allow use of your version of this file only under the terms of
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,31,* the GPL and not to allow others to use your version of this file under the
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,32,"* MPL, indicate your decision by deleting the provisions above and replacing"
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,33,* them with the notice and other provisions required by the GPL. If you do
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,34,"* not delete the provisions above, a recipient may use your version of this"
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,35,* file under either the MPL or the GPL.
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,37,* ***** END LICENSE BLOCK ***** */
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,39,package com.google.javascript.rhino;
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,41,import static com.google.javascript.rhino.JSDocInfo.Visibility.PRIVATE;
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,42,import static com.google.javascript.rhino.JSDocInfo.Visibility.PROTECTED;
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,43,import static com.google.javascript.rhino.JSDocInfo.Visibility.PUBLIC;
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,44,import static com.google.javascript.rhino.jstype.JSTypeNative.BOOLEAN_TYPE;
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,45,import static com.google.javascript.rhino.jstype.JSTypeNative.NUMBER_OBJECT_TYPE;
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,46,import static com.google.javascript.rhino.jstype.JSTypeNative.NUMBER_TYPE;
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,47,import static com.google.javascript.rhino.jstype.JSTypeNative.STRING_TYPE;
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,49,import com.google.common.collect.Sets;
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,50,import com.google.javascript.rhino.jstype.JSType;
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,51,import com.google.javascript.rhino.jstype.JSTypeNative;
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,52,import com.google.javascript.rhino.jstype.JSTypeRegistry;
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,53,import com.google.javascript.rhino.testing.TestErrorReporter;
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,55,import junit.framework.TestCase;
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,57,public class JSDocInfoTest extends TestCase {
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,58,"private TestErrorReporter errorReporter = new TestErrorReporter(null, null);"
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,59,private JSTypeRegistry registry = new JSTypeRegistry(errorReporter);
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,61,private JSType getNativeType(JSTypeNative typeId) {
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,62,return registry.getNativeType(typeId);
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,66,* Tests the assigned ordinal of the elements of the
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,67,* {@link JSDocInfo.Visibility} enum.
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,69,public void testVisibilityOrdinal() {
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,70,"assertEquals(0, PRIVATE.ordinal());"
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,71,"assertEquals(1, PROTECTED.ordinal());"
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,72,"assertEquals(2, PUBLIC.ordinal());"
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,75,public void testSetType() {
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,76,JSDocInfo info = new JSDocInfo();
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,77,"info.setType(fromString(""string""));"
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,79,assertNull(info.getBaseType());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,80,assertNull(info.getDescription());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,81,assertNull(info.getEnumParameterType());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,82,"assertEquals(0, info.getParameterCount());"
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,83,assertNull(info.getReturnType());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,84,"assertEquals(getNativeType(STRING_TYPE), resolve(info.getType()));"
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,85,assertNull(info.getVisibility());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,86,assertTrue(info.hasType());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,87,assertFalse(info.isConstant());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,88,assertFalse(info.isConstructor());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,89,assertFalse(info.isHidden());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,90,assertFalse(info.shouldPreserveTry());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,93,public void testSetTypeAndVisibility() {
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,94,JSDocInfo info = new JSDocInfo();
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,95,"info.setType(fromString(""string""));"
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,96,info.setVisibility(PROTECTED);
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,98,assertNull(info.getBaseType());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,99,assertNull(info.getDescription());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,100,assertNull(info.getEnumParameterType());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,101,"assertEquals(0, info.getParameterCount());"
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,102,assertNull(info.getReturnType());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,103,"assertEquals(getNativeType(STRING_TYPE), resolve(info.getType()));"
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,104,"assertEquals(PROTECTED, info.getVisibility());"
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,105,assertTrue(info.hasType());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,106,assertFalse(info.isConstant());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,107,assertFalse(info.isConstructor());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,108,assertFalse(info.isHidden());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,109,assertFalse(info.shouldPreserveTry());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,112,public void testSetReturnType() {
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,113,JSDocInfo info = new JSDocInfo();
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,114,"info.setReturnType(fromString(""string""));"
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,116,assertNull(info.getBaseType());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,117,assertNull(info.getDescription());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,118,assertNull(info.getEnumParameterType());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,119,"assertEquals(0, info.getParameterCount());"
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,120,"assertEquals(getNativeType(STRING_TYPE), resolve(info.getReturnType()));"
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,121,assertNull(info.getType());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,122,assertNull(info.getVisibility());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,123,assertFalse(info.hasType());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,124,assertFalse(info.isConstant());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,125,assertFalse(info.isConstructor());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,126,assertFalse(info.isHidden());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,127,assertFalse(info.shouldPreserveTry());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,130,public void testSetReturnTypeAndBaseType() {
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,131,JSDocInfo info = new JSDocInfo();
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,132,info.setBaseType(
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,133,new JSTypeExpression(
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,134,"new Node(Token.BANG, Node.newString(""Number"")), """", registry));"
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,135,"info.setReturnType(fromString(""string""));"
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,137,"assertEquals(getNativeType(NUMBER_OBJECT_TYPE),"
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,138,resolve(info.getBaseType()));
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,139,assertNull(info.getDescription());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,140,assertNull(info.getEnumParameterType());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,141,"assertEquals(0, info.getParameterCount());"
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,142,"assertEquals(getNativeType(STRING_TYPE), resolve(info.getReturnType()));"
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,143,assertNull(info.getType());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,144,assertNull(info.getVisibility());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,145,assertFalse(info.hasType());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,146,assertFalse(info.isConstant());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,147,assertFalse(info.isConstructor());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,148,assertFalse(info.isHidden());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,149,assertFalse(info.shouldPreserveTry());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,152,public void testSetEnumParameterType() {
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,153,JSDocInfo info = new JSDocInfo();
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,154,"info.setEnumParameterType(fromString(""string""));"
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,156,assertNull(info.getBaseType());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,157,assertNull(info.getDescription());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,158,"assertEquals(getNativeType(STRING_TYPE),"
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,159,resolve(info.getEnumParameterType()));
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,160,"assertEquals(0, info.getParameterCount());"
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,161,assertNull(info.getReturnType());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,162,assertNull(info.getType());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,163,assertNull(info.getVisibility());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,164,assertFalse(info.hasType());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,165,assertFalse(info.isConstant());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,166,assertFalse(info.isConstructor());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,167,assertFalse(info.isHidden());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,168,assertFalse(info.shouldPreserveTry());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,171,public void testMultipleSetType() {
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,172,JSDocInfo info = new JSDocInfo();
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,173,"info.setType(fromString(""number""));"
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,175,try {
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,176,"info.setReturnType(fromString(""boolean""));"
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,177,"fail(""Expected exception"");"
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,178,} catch (IllegalStateException e) {}
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,180,try {
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,181,"info.setEnumParameterType(fromString(""string""));"
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,182,"fail(""Expected exception"");"
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,183,} catch (IllegalStateException e) {}
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,185,try {
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,186,"info.setTypedefType(fromString(""string""));"
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,187,"fail(""Expected exception"");"
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,188,} catch (IllegalStateException e) {}
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,190,"assertEquals(getNativeType(NUMBER_TYPE), resolve(info.getType()));"
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,191,assertNull(info.getReturnType());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,192,assertNull(info.getEnumParameterType());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,193,assertNull(info.getTypedefType());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,194,assertTrue(info.hasType());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,197,public void testMultipleSetType2() {
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,198,JSDocInfo info = new JSDocInfo();
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,200,"info.setReturnType(fromString(""boolean""));"
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,202,try {
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,203,"info.setType(fromString(""number""));"
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,204,"fail(""Expected exception"");"
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,205,} catch (IllegalStateException e) {}
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,207,try {
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,208,"info.setEnumParameterType(fromString(""string""));"
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,209,"fail(""Expected exception"");"
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,210,} catch (IllegalStateException e) {}
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,212,try {
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,213,"info.setTypedefType(fromString(""string""));"
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,214,"fail(""Expected exception"");"
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,215,} catch (IllegalStateException e) {}
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,217,"assertEquals(getNativeType(BOOLEAN_TYPE),"
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,218,resolve(info.getReturnType()));
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,219,assertNull(info.getEnumParameterType());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,220,assertNull(info.getType());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,221,assertNull(info.getTypedefType());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,222,assertFalse(info.hasType());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,225,public void testMultipleSetType3() {
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,226,JSDocInfo info = new JSDocInfo();
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,227,"info.setEnumParameterType(fromString(""boolean""));"
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,229,try {
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,230,"info.setType(fromString(""number""));"
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,231,"fail(""Expected exception"");"
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,232,} catch (IllegalStateException e) {}
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,234,try {
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,235,"info.setReturnType(fromString(""string""));"
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,236,"fail(""Expected exception"");"
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,237,} catch (IllegalStateException e) {}
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,239,try {
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,240,"info.setTypedefType(fromString(""string""));"
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,241,"fail(""Expected exception"");"
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,242,} catch (IllegalStateException e) {}
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,244,assertNull(info.getType());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,245,assertNull(info.getTypedefType());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,246,assertNull(info.getReturnType());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,247,"assertEquals(getNativeType(BOOLEAN_TYPE),"
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,248,resolve(info.getEnumParameterType()));
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,251,public void testSetTypedefType() {
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,252,JSDocInfo info = new JSDocInfo();
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,253,"info.setTypedefType(fromString(""boolean""));"
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,255,"assertEquals(getNativeType(BOOLEAN_TYPE),"
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,256,resolve(info.getTypedefType()));
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,257,assertTrue(info.hasTypedefType());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,258,assertFalse(info.hasType());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,259,assertFalse(info.hasEnumParameterType());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,260,assertFalse(info.hasReturnType());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,263,public void testSetConstant() {
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,264,JSDocInfo info = new JSDocInfo();
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,265,info.setConstant(true);
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,267,assertFalse(info.hasType());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,268,assertTrue(info.isConstant());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,269,assertFalse(info.isConstructor());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,270,assertFalse(info.isDefine());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,271,assertFalse(info.isHidden());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,272,assertFalse(info.shouldPreserveTry());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,275,public void testSetConstructor() {
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,276,JSDocInfo info = new JSDocInfo();
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,277,info.setConstructor(true);
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,279,assertFalse(info.isConstant());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,280,assertTrue(info.isConstructor());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,281,assertFalse(info.isDefine());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,282,assertFalse(info.isHidden());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,283,assertFalse(info.shouldPreserveTry());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,286,public void testSetDefine() {
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,287,JSDocInfo info = new JSDocInfo();
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,288,info.setDefine(true);
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,290,assertTrue(info.isConstant());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,291,assertFalse(info.isConstructor());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,292,assertTrue(info.isDefine());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,293,assertFalse(info.isHidden());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,294,assertFalse(info.shouldPreserveTry());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,297,public void testSetHidden() {
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,298,JSDocInfo info = new JSDocInfo();
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,299,info.setHidden(true);
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,301,assertFalse(info.hasType());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,302,assertFalse(info.isConstant());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,303,assertFalse(info.isConstructor());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,304,assertFalse(info.isDefine());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,305,assertTrue(info.isHidden());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,306,assertFalse(info.shouldPreserveTry());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,309,public void testSetShouldPreserveTry() {
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,310,JSDocInfo info = new JSDocInfo();
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,311,info.setShouldPreserveTry(true);
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,313,assertFalse(info.isConstant());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,314,assertFalse(info.isConstructor());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,315,assertFalse(info.isDefine());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,316,assertFalse(info.isHidden());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,317,assertTrue(info.shouldPreserveTry());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,320,public void testSetNoTypeCheck() {
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,321,JSDocInfo info = new JSDocInfo();
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,322,info.setNoCheck(true);
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,324,assertFalse(info.isDeprecated());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,325,assertFalse(info.isNoAlias());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,326,assertFalse(info.isOverride());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,327,assertTrue(info.isNoTypeCheck());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,330,public void testSetOverride() {
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,331,JSDocInfo info = new JSDocInfo();
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,332,info.setOverride(true);
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,334,assertFalse(info.isDeprecated());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,335,assertFalse(info.isNoAlias());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,336,assertTrue(info.isOverride());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,339,public void testSetExport() {
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,340,JSDocInfo info = new JSDocInfo();
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,341,info.setExport(true);
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,343,assertTrue(info.isExport());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,346,public void testSetNoAlias() {
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,347,JSDocInfo info = new JSDocInfo();
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,348,info.setNoAlias(true);
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,350,assertFalse(info.isDeprecated());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,351,assertFalse(info.isOverride());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,352,assertTrue(info.isNoAlias());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,355,public void testSetDeprecated() {
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,356,JSDocInfo info = new JSDocInfo();
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,357,info.setDeprecated(true);
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,359,assertFalse(info.isNoAlias());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,360,assertFalse(info.isOverride());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,361,assertTrue(info.isDeprecated());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,364,public void testMultipleSetFlags1() {
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,365,JSDocInfo info = new JSDocInfo();
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,366,info.setConstant(true);
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,367,info.setConstructor(true);
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,368,info.setHidden(true);
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,369,info.setShouldPreserveTry(true);
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,371,assertFalse(info.hasType());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,372,assertTrue(info.isConstant());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,373,assertTrue(info.isConstructor());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,374,assertFalse(info.isDefine());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,375,assertTrue(info.isHidden());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,376,assertTrue(info.shouldPreserveTry());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,378,info.setHidden(false);
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,380,assertTrue(info.isConstant());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,381,assertTrue(info.isConstructor());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,382,assertFalse(info.isDefine());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,383,assertFalse(info.isHidden());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,384,assertTrue(info.shouldPreserveTry());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,386,info.setConstant(false);
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,387,info.setConstructor(false);
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,389,assertFalse(info.isConstant());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,390,assertFalse(info.isConstructor());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,391,assertFalse(info.isDefine());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,392,assertFalse(info.isHidden());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,393,assertTrue(info.shouldPreserveTry());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,395,info.setConstructor(true);
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,397,assertFalse(info.isConstant());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,398,assertTrue(info.isConstructor());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,399,assertFalse(info.isDefine());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,400,assertFalse(info.isHidden());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,401,assertTrue(info.shouldPreserveTry());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,404,public void testSetFileOverviewWithDocumentationOff() {
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,405,JSDocInfo info = new JSDocInfo();
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,406,"info.documentFileOverview(""hi bob"");"
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,407,assertNull(info.getFileOverview());
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,410,public void testSetFileOverviewWithDocumentationOn() {
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,411,JSDocInfo info = new JSDocInfo(true);
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,412,"info.documentFileOverview(""hi bob"");"
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,413,"assertEquals(""hi bob"", info.getFileOverview());"
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,416,public void testSetSuppressions() {
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,417,JSDocInfo info = new JSDocInfo(true);
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,418,"info.setSuppressions(Sets.newHashSet(""sam"", ""bob""));"
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,419,"assertEquals(Sets.newHashSet(""bob"", ""sam""), info.getSuppressions());"
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,422,/** Gets the type expression for a simple type name. */
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,423,private JSTypeExpression fromString(String s) {
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,424,"return new JSTypeExpression(Node.newString(s), """", registry);"
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,427,"private JSType resolve(JSTypeExpression n, String... warnings) {"
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,428,errorReporter.setWarnings(warnings);
True,test/com/google/javascript/rhino/JSDocInfoTest.java,test/com/google/javascript/rhino/JSDocInfoTest.java,429,return n.evaluate(null);
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,3,* ***** BEGIN LICENSE BLOCK *****
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,4,* Version: MPL 1.1/GPL 2.0
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,6,* The contents of this file are subject to the Mozilla Public License Version
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,7,"* 1.1 (the ""License""); you may not use this file except in compliance with"
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,8,* the License. You may obtain a copy of the License at
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,9,* http://www.mozilla.org/MPL/
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,11,"* Software distributed under the License is distributed on an ""AS IS"" basis,"
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,12,"* WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License"
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,13,* for the specific language governing rights and limitations under the
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,14,* License.
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,16,"* The Original Code is Rhino code, released"
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,17,"* May 6, 1999."
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,19,* The Initial Developer of the Original Code is
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,20,* Netscape Communications Corporation.
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,21,* Portions created by the Initial Developer are Copyright (C) 1997-1999
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,22,* the Initial Developer. All Rights Reserved.
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,24,* Contributor(s):
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,25,*   Nick Santos
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,27,"* Alternatively, the contents of this file may be used under the terms of"
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,28,"* the GNU General Public License Version 2 or later (the ""GPL""), in which"
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,29,* case the provisions of the GPL are applicable instead of those above. If
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,30,* you wish to allow use of your version of this file only under the terms of
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,31,* the GPL and not to allow others to use your version of this file under the
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,32,"* MPL, indicate your decision by deleting the provisions above and replacing"
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,33,* them with the notice and other provisions required by the GPL. If you do
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,34,"* not delete the provisions above, a recipient may use your version of this"
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,35,* file under either the MPL or the GPL.
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,37,* ***** END LICENSE BLOCK ***** */
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,39,package com.google.javascript.rhino;
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,41,import com.google.common.base.Pair;
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,42,import com.google.javascript.rhino.testing.TestErrorReporter;
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,44,import junit.framework.TestCase;
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,46,public class NodeTest extends TestCase {
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,47,public void testMergeExtractNormal() throws Exception {
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,48,"testMergeExtract(5, 6);"
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,49,"testMergeExtract(456, 3423);"
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,50,"testMergeExtract(0, 0);"
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,53,public void testMergeExtractErroneous() throws Exception {
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,54,"assertEquals(-1, Node.mergeLineCharNo(-5, 90));"
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,55,"assertEquals(-1, Node.mergeLineCharNo(0, -1));"
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,56,"assertEquals(-1, Node.extractLineno(-1));"
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,57,"assertEquals(-1, Node.extractCharno(-1));"
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,60,public void testMergeOverflowGraciously() throws Exception {
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,61,"int linecharno = Node.mergeLineCharNo(89, 4096);"
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,62,"assertEquals(89, Node.extractLineno(linecharno));"
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,63,"assertEquals(4095, Node.extractCharno(linecharno));"
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,66,public void testCheckTreeEqualsImplSame() {
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,67,"Node node1 = new Node(1, new Node(2));"
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,68,"Node node2 = new Node(1, new Node(2));"
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,69,"assertEquals(null, node1.checkTreeEqualsImpl(node2));"
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,72,public void testCheckTreeEqualsImplDifferentType() {
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,73,"Node node1 = new Node(1, new Node(2));"
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,74,"Node node2 = new Node(2, new Node(2));"
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,75,"assertEquals(Pair.of(node1, node2), node1.checkTreeEqualsImpl(node2));"
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,78,public void testCheckTreeEqualsImplDifferentChildCount() {
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,79,"Node node1 = new Node(1, new Node(2));"
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,80,Node node2 = new Node(1);
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,81,"assertEquals(Pair.of(node1, node2), node1.checkTreeEqualsImpl(node2));"
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,84,public void testCheckTreeEqualsImplDifferentChild() {
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,85,Node child1 = new Node(1);
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,86,Node child2 = new Node(2);
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,87,"Node node1 = new Node(1, child1);"
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,88,"Node node2 = new Node(1, child2);"
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,89,"assertEquals(Pair.of(child1, child2), node1.checkTreeEqualsImpl(node2));"
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,92,public void testCheckTreeEqualsSame() {
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,93,Node node1 = new Node(1);
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,94,"assertEquals(null, node1.checkTreeEquals(node1));"
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,97,public void testCheckTreeEqualsStringDifferent() {
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,98,Node node1 = new Node(1);
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,99,Node node2 = new Node(2);
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,100,assertNotNull(node1.checkTreeEquals(node2));
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,103,public void testCheckTreeEqualsBooleanSame() {
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,104,Node node1 = new Node(1);
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,105,"assertEquals(true, node1.checkTreeEqualsSilent(node1));"
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,108,public void testCheckTreeEqualsBooleanDifferent() {
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,109,Node node1 = new Node(1);
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,110,Node node2 = new Node(2);
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,111,"assertEquals(false, node1.checkTreeEqualsSilent(node2));"
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,114,public void testCheckTreeEqualsImplDifferentIncProp() {
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,115,Node node1 = new Node(Token.INC);
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,116,"node1.putIntProp(Node.INCRDECR_PROP, 1);"
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,117,Node node2 = new Node(Token.INC);
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,118,assertNotNull(node1.checkTreeEqualsImpl(node2));
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,121,public void testVarArgs1() {
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,122,assertFalse(new Node(1).isVarArgs());
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,125,public void testVarArgs2() {
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,126,Node n = new Node(1);
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,127,n.setVarArgs(false);
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,128,assertFalse(n.isVarArgs());
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,131,public void testVarArgs3() {
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,132,Node n = new Node(1);
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,133,n.setVarArgs(true);
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,134,assertTrue(n.isVarArgs());
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,137,"private void testMergeExtract(int lineno, int charno) {"
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,138,"int linecharno = Node.mergeLineCharNo(lineno, charno);"
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,139,"assertEquals(lineno, Node.extractLineno(linecharno));"
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,140,"assertEquals(charno, Node.extractCharno(linecharno));"
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,143,public void testFileLevelJSDocAppender() {
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,144,Node n = new Node(1);
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,145,Node.FileLevelJsDocBuilder builder = n.getJsDocBuilderForNode();
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,146,"builder.append(""foo"");"
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,147,"builder.append(""bar"");"
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,148,"assertEquals(""foobar"", n.getJSDocInfo().getLicense());"
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,151,public void testIsQualifiedName() {
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,152,"assertTrue(getNode(""a"").isQualifiedName());"
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,153,"assertTrue(getNode(""$"").isQualifiedName());"
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,154,"assertTrue(getNode(""_"").isQualifiedName());"
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,155,"assertTrue(getNode(""a.b"").isQualifiedName());"
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,156,"assertTrue(getNode(""a_b.cccccc$d4.x.y.zA$"").isQualifiedName());"
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,157,"assertTrue(getNode(""this.foo"").isQualifiedName());"
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,158,"assertFalse(getNode(""0"").isQualifiedName());"
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,159,"assertFalse(getNode(""[]"").isQualifiedName());"
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,160,"assertFalse(getNode(""{}"").isQualifiedName());"
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,161,"assertFalse(getNode(""''"").isQualifiedName());"
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,162,"assertFalse(getNode(""a[b]"").isQualifiedName());"
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,163,"assertFalse(getNode(""a[b].c"").isQualifiedName());"
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,164,"assertFalse(getNode(""c.a[b]"").isQualifiedName());"
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,165,"assertFalse(getNode(""a()"").isQualifiedName());"
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,166,"assertFalse(getNode(""a().b"").isQualifiedName());"
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,167,"assertFalse(getNode(""b.a()"").isQualifiedName());"
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,168,"assertFalse(getNode(""'a'"").isQualifiedName());"
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,169,"assertFalse(getNode(""/x/"").isQualifiedName());"
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,170,"assertFalse(getNode(""++x"").isQualifiedName());"
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,173,public void testCloneAnnontations() {
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,174,"Node n = getNode(""a"");"
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,175,assertFalse(n.getBooleanProp(Node.IS_CONSTANT_NAME));
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,176,"n.putBooleanProp(Node.IS_CONSTANT_NAME, true);"
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,177,assertTrue(n.getBooleanProp(Node.IS_CONSTANT_NAME));
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,179,Node nodeClone = n.cloneNode();
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,180,assertTrue(nodeClone.getBooleanProp(Node.IS_CONSTANT_NAME));
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,183,private static Node getNode(String js) {
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,184,"Node root = parse(""var a=("" + js + "");"");"
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,185,Node expr = root.getFirstChild();
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,186,Node var = expr.getFirstChild();
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,187,return var.getFirstChild();
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,190,private static Node parse(String string) {
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,191,CompilerEnvirons environment = new CompilerEnvirons();
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,192,"TestErrorReporter testErrorReporter = new TestErrorReporter(null, null);"
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,193,environment.setErrorReporter(testErrorReporter);
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,194,environment.setParseJSDoc(true);
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,195,"Parser p = new Parser(environment, testErrorReporter, null);"
True,test/com/google/javascript/rhino/NodeTest.java,test/com/google/javascript/rhino/NodeTest.java,196,"return p.parse(string, null, 0);"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,3,* ***** BEGIN LICENSE BLOCK *****
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,4,* Version: MPL 1.1/GPL 2.0
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,6,* The contents of this file are subject to the Mozilla Public License Version
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,7,"* 1.1 (the ""License""); you may not use this file except in compliance with"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,8,* the License. You may obtain a copy of the License at
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,9,* http://www.mozilla.org/MPL/
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,11,"* Software distributed under the License is distributed on an ""AS IS"" basis,"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,12,"* WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,13,* for the specific language governing rights and limitations under the
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,14,* License.
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,16,"* The Original Code is Rhino code, released"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,17,"* May 6, 1999."
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,19,* The Initial Developer of the Original Code is
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,20,* Netscape Communications Corporation.
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,21,* Portions created by the Initial Developer are Copyright (C) 1997-1999
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,22,* the Initial Developer. All Rights Reserved.
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,24,* Contributor(s):
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,25,*   Nick Santos
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,27,"* Alternatively, the contents of this file may be used under the terms of"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,28,"* the GNU General Public License Version 2 or later (the ""GPL""), in which"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,29,* case the provisions of the GPL are applicable instead of those above. If
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,30,* you wish to allow use of your version of this file only under the terms of
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,31,* the GPL and not to allow others to use your version of this file under the
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,32,"* MPL, indicate your decision by deleting the provisions above and replacing"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,33,* them with the notice and other provisions required by the GPL. If you do
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,34,"* not delete the provisions above, a recipient may use your version of this"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,35,* file under either the MPL or the GPL.
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,37,* ***** END LICENSE BLOCK ***** */
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,39,package com.google.javascript.rhino;
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,41,import com.google.common.base.Pair;
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,42,import com.google.common.collect.ImmutableList;
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,43,import com.google.javascript.rhino.testing.BaseJSTypeTestCase;
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,44,import com.google.javascript.rhino.testing.TestErrorReporter;
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,47,import java.util.List;
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,49,public class ParserTest extends BaseJSTypeTestCase {
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,50,private static final String TRAILING_COMMA_MESSAGE =
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,51,"ScriptRuntime.getMessage0(""msg.trailing.comma"");"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,53,public void testLinenoCharnoAssign1() throws Exception {
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,54,"Node assign = parse(""a = b"").getFirstChild().getFirstChild();"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,56,"assertEquals(Token.ASSIGN, assign.getType());"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,57,"assertEquals(0, assign.getLineno());"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,58,"assertEquals(2, assign.getCharno());"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,61,public void testLinenoCharnoAssign2() throws Exception {
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,62,"Node assign = parse(""\n a.g.h.k    =  45"").getFirstChild().getFirstChild();"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,64,"assertEquals(Token.ASSIGN, assign.getType());"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,65,"assertEquals(1, assign.getLineno());"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,66,"assertEquals(12, assign.getCharno());"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,69,public void testLinenoCharnoCall() throws Exception {
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,70,"Node call = parse(""\n foo(123);"").getFirstChild().getFirstChild();"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,72,"assertEquals(Token.CALL, call.getType());"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,73,"assertEquals(1, call.getLineno());"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,74,"assertEquals(4, call.getCharno());"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,77,public void testLinenoCharnoGetProp1() throws Exception {
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,78,"Node getprop = parse(""\n foo.bar"").getFirstChild().getFirstChild();"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,80,"assertEquals(Token.GETPROP, getprop.getType());"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,81,"assertEquals(1, getprop.getLineno());"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,82,"assertEquals(4, getprop.getCharno());"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,84,Node name = getprop.getFirstChild().getNext();
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,85,"assertEquals(Token.STRING, name.getType());"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,86,"assertEquals(1, name.getLineno());"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,87,"assertEquals(5, name.getCharno());"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,90,public void testLinenoCharnoGetProp2() throws Exception {
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,91,"Node getprop = parse(""\n foo.\nbar"").getFirstChild().getFirstChild();"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,93,"assertEquals(Token.GETPROP, getprop.getType());"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,94,"assertEquals(1, getprop.getLineno());"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,95,"assertEquals(4, getprop.getCharno());"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,97,Node name = getprop.getFirstChild().getNext();
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,98,"assertEquals(Token.STRING, name.getType());"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,99,"assertEquals(2, name.getLineno());"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,100,"assertEquals(0, name.getCharno());"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,103,public void testLinenoCharnoGetelem1() throws Exception {
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,104,"Node call = parse(""\n foo[123]"").getFirstChild().getFirstChild();"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,106,"assertEquals(Token.GETELEM, call.getType());"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,107,"assertEquals(1, call.getLineno());"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,108,"assertEquals(4, call.getCharno());"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,111,public void testLinenoCharnoGetelem2() throws Exception {
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,112,"Node call = parse(""\n   \n foo()[123]"").getFirstChild().getFirstChild();"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,114,"assertEquals(Token.GETELEM, call.getType());"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,115,"assertEquals(2, call.getLineno());"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,116,"assertEquals(6, call.getCharno());"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,119,public void testLinenoCharnoGetelem3() throws Exception {
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,120,"Node call = parse(""\n   \n (8 + kl)[123]"").getFirstChild().getFirstChild();"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,122,"assertEquals(Token.GETELEM, call.getType());"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,123,"assertEquals(2, call.getLineno());"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,124,"assertEquals(9, call.getCharno());"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,127,public void testLinenoCharnoForComparison() throws Exception {
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,128,Node lt =
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,129,"parse(""for (; i < j;){}"").getFirstChild().getFirstChild().getNext();"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,131,"assertEquals(Token.LT, lt.getType());"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,132,"assertEquals(0, lt.getLineno());"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,133,"assertEquals(9, lt.getCharno());"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,136,public void testLinenoCharnoHook() throws Exception {
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,137,"Node n = parse(""\n a ? 9 : 0"").getFirstChild().getFirstChild();"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,139,"assertEquals(Token.HOOK, n.getType());"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,140,"assertEquals(1, n.getLineno());"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,141,"assertEquals(3, n.getCharno());"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,144,public void testLinenoCharnoArrayLiteral() throws Exception {
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,145,"Node n = parse(""\n  [8, 9]"").getFirstChild().getFirstChild();"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,147,"assertEquals(Token.ARRAYLIT, n.getType());"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,148,"assertEquals(1, n.getLineno());"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,149,"assertEquals(2, n.getCharno());"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,151,n = n.getFirstChild();
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,153,"assertEquals(Token.NUMBER, n.getType());"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,154,"assertEquals(1, n.getLineno());"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,155,"assertEquals(3, n.getCharno());"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,157,n = n.getNext();
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,159,"assertEquals(Token.NUMBER, n.getType());"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,160,"assertEquals(1, n.getLineno());"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,161,"assertEquals(6, n.getCharno());"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,164,public void testLinenoCharnoObjectLiteral() throws Exception {
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,165,"Node n = parse(""\n\n var a = {a:0\n,b :1};"")"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,166,.getFirstChild().getFirstChild().getFirstChild();
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,168,"assertEquals(Token.OBJECTLIT, n.getType());"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,169,"assertEquals(2, n.getLineno());"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,170,"assertEquals(9, n.getCharno());"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,172,n = n.getFirstChild();
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,174,"assertEquals(Token.STRING, n.getType());"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,175,"assertEquals(2, n.getLineno());"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,176,"assertEquals(10, n.getCharno());"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,178,n = n.getNext();
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,180,"assertEquals(Token.NUMBER, n.getType());"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,181,"assertEquals(2, n.getLineno());"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,182,"assertEquals(12, n.getCharno());"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,184,n = n.getNext();
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,186,"assertEquals(Token.STRING, n.getType());"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,187,"assertEquals(3, n.getLineno());"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,188,"assertEquals(1, n.getCharno());"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,190,n = n.getNext();
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,192,"assertEquals(Token.NUMBER, n.getType());"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,193,"assertEquals(3, n.getLineno());"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,194,"assertEquals(4, n.getCharno());"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,197,public void testLinenoCharnoAdd() throws Exception {
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,198,"testLinenoCharnoBinop(""+"");"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,201,public void testLinenoCharnoSub() throws Exception {
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,202,"testLinenoCharnoBinop(""-"");"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,205,public void testLinenoCharnoMul() throws Exception {
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,206,"testLinenoCharnoBinop(""*"");"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,209,public void testLinenoCharnoDiv() throws Exception {
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,210,"testLinenoCharnoBinop(""/"");"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,213,public void testLinenoCharnoMod() throws Exception {
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,214,"testLinenoCharnoBinop(""%"");"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,217,public void testLinenoCharnoShift() throws Exception {
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,218,"testLinenoCharnoBinop(""<<"");"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,221,public void testLinenoCharnoBinaryAnd() throws Exception {
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,222,"testLinenoCharnoBinop(""&"");"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,225,public void testLinenoCharnoAnd() throws Exception {
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,226,"testLinenoCharnoBinop(""&&"");"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,229,public void testLinenoCharnoBinaryOr() throws Exception {
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,230,"testLinenoCharnoBinop(""|"");"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,233,public void testLinenoCharnoOr() throws Exception {
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,234,"testLinenoCharnoBinop(""||"");"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,237,public void testLinenoCharnoLt() throws Exception {
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,238,"testLinenoCharnoBinop(""<"");"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,241,public void testLinenoCharnoLe() throws Exception {
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,242,"testLinenoCharnoBinop(""<="");"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,245,public void testLinenoCharnoGt() throws Exception {
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,246,"testLinenoCharnoBinop("">"");"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,249,public void testLinenoCharnoGe() throws Exception {
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,250,"testLinenoCharnoBinop("">="");"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,253,private void testLinenoCharnoBinop(String binop) {
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,254,"Node op = parse(""var a = 89 "" + binop + "" 76"").getFirstChild()."
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,255,getFirstChild().getFirstChild();
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,257,"assertEquals(0, op.getLineno());"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,258,"assertEquals(11, op.getCharno());"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,261,public void testUnescapedSlashInRegexpCharClass() throws Exception {
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,262,// The tokenizer without the fix for this bug throws an error.
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,263,"parse(""var foo = /[/]/;"");"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,264,"parse(""var foo = /[hi there/]/;"");"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,265,"parse(""var foo = /[/yo dude]/;"");"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,266,"parse(""var foo = /\\/[@#$/watashi/wa/suteevu/desu]/;"");"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,269,"private void assertNodeEquality(Node expected, Node found) {"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,270,String message = expected.checkTreeEquals(found);
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,271,if (message != null) {
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,272,fail(message);
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,276,"@SuppressWarnings(""unchecked"")"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,277,public void testParse() {
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,278,"Node a = Node.newString(Token.NAME, ""a"");"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,279,"a.addChildToFront(Node.newString(Token.NAME, ""b""));"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,280,"List<Pair<String, Node>> testCases = ImmutableList.of("
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,281,Pair.of(
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,282,"""3;"","
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,283,"createScript(new Node(Token.EXPR_RESULT, Node.newNumber(3.0)))),"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,284,Pair.of(
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,285,"""var a = b;"","
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,286,"createScript(new Node(Token.VAR, a))),"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,287,Pair.of(
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,288,"""\""hell\\\no\\ world\\\n\\\n!\"""","
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,289,"createScript(new Node(Token.EXPR_RESULT,"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,290,"Node.newString(Token.STRING, ""hello world!"")))));"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,292,"for (Pair<String, Node> testCase : testCases) {"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,293,"assertNodeEquality(testCase.second, parse(testCase.first));"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,297,private Node createScript(Node n) {
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,298,Node script = new ScriptOrFnNode(Token.SCRIPT);
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,299,script.addChildToBack(n);
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,300,return script;
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,303,public void testTrailingCommaWarning1() {
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,304,"parse(""var a = ['foo', 'bar'];"");"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,307,public void testTrailingCommaWarning2() {
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,308,"parse(""var a = ['foo',,'bar'];"");"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,311,public void testTrailingCommaWarning3() {
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,312,"parse(""var a = ['foo', 'bar',];"", TRAILING_COMMA_MESSAGE);"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,315,public void testTrailingCommaWarning4() {
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,316,"parse(""var a = [,];"", TRAILING_COMMA_MESSAGE);"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,319,public void testTrailingCommaWarning5() {
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,320,"parse(""var a = {'foo': 'bar'};"");"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,323,public void testTrailingCommaWarning6() {
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,324,"parse(""var a = {'foo': 'bar',};"", TRAILING_COMMA_MESSAGE);"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,327,public void testTrailingCommaWarning7() {
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,328,"parse(""var a = {,};"", TRAILING_COMMA_MESSAGE);"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,331,"private Node parse(String string, String... warnings) {"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,332,CompilerEnvirons environment = new CompilerEnvirons();
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,333,"TestErrorReporter testErrorReporter = new TestErrorReporter(null, warnings);"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,334,environment.setErrorReporter(testErrorReporter);
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,335,environment.setParseJSDoc(true);
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,336,environment.setParseJSDocDocumentation(true);
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,337,"Parser p = new Parser(environment, testErrorReporter, registry);"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,338,"Node script = p.parse(string, null, 0);"
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,340,// verifying that all warnings were seen
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,341,assertTrue(testErrorReporter.hasEncounteredAllErrors());
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,342,assertTrue(testErrorReporter.hasEncounteredAllWarnings());
True,test/com/google/javascript/rhino/ParserTest.java,test/com/google/javascript/rhino/ParserTest.java,344,return script;
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,3,* ***** BEGIN LICENSE BLOCK *****
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,4,* Version: MPL 1.1/GPL 2.0
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,6,* The contents of this file are subject to the Mozilla Public License Version
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,7,"* 1.1 (the ""License""); you may not use this file except in compliance with"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,8,* the License. You may obtain a copy of the License at
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,9,* http://www.mozilla.org/MPL/
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,11,"* Software distributed under the License is distributed on an ""AS IS"" basis,"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,12,"* WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,13,* for the specific language governing rights and limitations under the
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,14,* License.
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,16,"* The Original Code is Rhino code, released"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,17,"* May 6, 1999."
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,19,* The Initial Developer of the Original Code is
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,20,* Netscape Communications Corporation.
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,21,* Portions created by the Initial Developer are Copyright (C) 1997-1999
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,22,* the Initial Developer. All Rights Reserved.
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,24,* Contributor(s):
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,25,*   Nick Santos
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,27,"* Alternatively, the contents of this file may be used under the terms of"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,28,"* the GNU General Public License Version 2 or later (the ""GPL""), in which"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,29,* case the provisions of the GPL are applicable instead of those above. If
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,30,* you wish to allow use of your version of this file only under the terms of
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,31,* the GPL and not to allow others to use your version of this file under the
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,32,"* MPL, indicate your decision by deleting the provisions above and replacing"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,33,* them with the notice and other provisions required by the GPL. If you do
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,34,"* not delete the provisions above, a recipient may use your version of this"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,35,* file under either the MPL or the GPL.
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,37,* ***** END LICENSE BLOCK ***** */
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,39,package com.google.javascript.rhino;
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,41,import static com.google.javascript.rhino.Token.ADD;
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,42,import static com.google.javascript.rhino.Token.ANNOTATION;
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,43,import static com.google.javascript.rhino.Token.BANG;
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,44,import static com.google.javascript.rhino.Token.COLON;
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,45,import static com.google.javascript.rhino.Token.COMMA;
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,46,import static com.google.javascript.rhino.Token.DOT;
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,47,import static com.google.javascript.rhino.Token.ELLIPSIS;
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,48,import static com.google.javascript.rhino.Token.ELSE;
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,49,import static com.google.javascript.rhino.Token.EOC;
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,50,import static com.google.javascript.rhino.Token.EOF;
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,51,import static com.google.javascript.rhino.Token.EOL;
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,52,import static com.google.javascript.rhino.Token.EQUALS;
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,53,import static com.google.javascript.rhino.Token.GT;
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,54,import static com.google.javascript.rhino.Token.IF;
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,55,import static com.google.javascript.rhino.Token.LB;
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,56,import static com.google.javascript.rhino.Token.LC;
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,57,import static com.google.javascript.rhino.Token.LP;
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,58,import static com.google.javascript.rhino.Token.LT;
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,59,import static com.google.javascript.rhino.Token.NAME;
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,60,import static com.google.javascript.rhino.Token.PIPE;
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,61,import static com.google.javascript.rhino.Token.QMARK;
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,62,import static com.google.javascript.rhino.Token.RB;
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,63,import static com.google.javascript.rhino.Token.RC;
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,64,import static com.google.javascript.rhino.Token.RP;
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,65,import static com.google.javascript.rhino.Token.STAR;
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,66,import static com.google.javascript.rhino.Token.STRING;
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,67,import static com.google.javascript.rhino.Token.name;
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,69,import com.google.common.collect.ImmutableList;
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,71,import junit.framework.TestCase;
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,73,import java.io.IOException;
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,74,import java.io.StringReader;
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,75,import java.util.List;
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,77,public class TokenStreamTest extends TestCase {
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,79,public void testLinenoCharnoGetUngetchar() throws Exception {
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,80,"TokenStream stream = stream(""some\nrandom\nstring"");"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,82,int c;
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,83,"assertLinenoOffset(stream, 0, -1);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,84,"c = getAndTestChar(stream, 's');"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,85,"assertLinenoOffset(stream, 0, 0);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,86,stream.ungetChar(c);
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,87,"assertLinenoOffset(stream, 0, -1);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,88,"c = getAndTestChar(stream, 's');"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,89,"c = getAndTestChar(stream, 'o');"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,90,"assertLinenoOffset(stream, 0, 1);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,91,stream.ungetChar(c);
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,92,"assertLinenoOffset(stream, 0, 0);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,93,"c = getAndTestChar(stream, 'o');"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,94,"assertLinenoOffset(stream, 0, 1);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,95,"c = getAndTestChar(stream, 'm');"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,96,"assertLinenoOffset(stream, 0, 2);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,97,stream.ungetChar(c);
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,98,"assertLinenoOffset(stream, 0, 1);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,99,"c = getAndTestChar(stream, 'm');"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,100,"c = getAndTestChar(stream, 'e');"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,101,"assertLinenoOffset(stream, 0, 3);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,102,"c = getAndTestChar(stream, '\n');"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,103,"assertLinenoOffset(stream, 0, 4);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,104,"c = getAndTestChar(stream, 'r');"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,105,"assertLinenoOffset(stream, 1, 0);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,106,"c = getAndTestChar(stream, 'a');"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,107,"assertLinenoOffset(stream, 1, 1);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,108,"c = getAndTestChar(stream, 'n');"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,109,"assertLinenoOffset(stream, 1, 2);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,110,"c = getAndTestChar(stream, 'd');"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,111,"assertLinenoOffset(stream, 1, 3);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,112,stream.ungetChar(c);
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,113,stream.ungetChar('n');
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,114,"c = getAndTestChar(stream, 'n');"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,115,"assertLinenoOffset(stream, 1, 2);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,116,"c = getAndTestChar(stream, 'd');"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,117,"assertLinenoOffset(stream, 1, 3);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,118,"c = getAndTestChar(stream, 'o');"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,119,"assertLinenoOffset(stream, 1, 4);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,120,"c = getAndTestChar(stream, 'm');"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,121,"assertLinenoOffset(stream, 1, 5);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,122,"c = getAndTestChar(stream, '\n');"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,123,"assertLinenoOffset(stream, 1, 6);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,124,"c = getAndTestChar(stream, 's');"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,125,"assertLinenoOffset(stream, 2, 0);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,126,"c = getAndTestChar(stream, 't');"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,127,"assertLinenoOffset(stream, 2, 1);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,128,"c = getAndTestChar(stream, 'r');"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,129,"assertLinenoOffset(stream, 2, 2);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,130,"c = getAndTestChar(stream, 'i');"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,131,"assertLinenoOffset(stream, 2, 3);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,132,"c = getAndTestChar(stream, 'n');"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,133,"assertLinenoOffset(stream, 2, 4);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,134,"c = getAndTestChar(stream, 'g');"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,135,"assertLinenoOffset(stream, 2, 5);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,138,"private int getAndTestChar(TokenStream stream, char e) throws IOException {"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,139,int c = stream.getChar();
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,140,"assertEquals(e, (char) c);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,141,return c;
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,144,public void testLinenoCharno1() throws Exception {
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,145,"TokenStream stream = stream(""if else"");"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,146,"testNextTokenPosition(stream, IF, 0, 0);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,147,"testNextTokenPosition(stream, ELSE, 0, 3);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,150,public void testLinenoCharno2() throws Exception {
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,151,"TokenStream stream = stream("" if   else"");"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,152,"testNextTokenPosition(stream, IF, 0, 1);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,153,"testNextTokenPosition(stream, ELSE, 0, 6);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,156,public void testLinenoCharno3() throws Exception {
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,157,"TokenStream stream = stream("" if \n  else"");"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,158,"testNextTokenPosition(stream, IF, 0, 1);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,159,"testNextTokenPosition(stream, EOL, 0, 4);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,160,"testNextTokenPosition(stream, ELSE, 1, 2);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,163,public void testLinenoCharno4() throws Exception {
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,164,"TokenStream stream = stream(""foo.bar"");"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,165,"testNextTokenPosition(stream, NAME, 0, 0);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,166,"testNextTokenPosition(stream, DOT, 0, 3);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,167,"testNextTokenPosition(stream, NAME, 0, 4);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,170,public void testLinenoCharno5() throws Exception {
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,171,"TokenStream stream = stream(""   foo  \n + \n  ("");"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,172,"testNextTokenPosition(stream, NAME, 0, 3);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,173,"testNextTokenPosition(stream, EOL, 0, 8);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,174,"testNextTokenPosition(stream, ADD, 1, 1);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,175,"testNextTokenPosition(stream, EOL, 1, 3);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,176,"testNextTokenPosition(stream, LP, 2, 2);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,179,public void testJSDocTokenization1() throws Exception {
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,180,List<Integer> tokens = ImmutableList.of(
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,181,"STAR, ANNOTATION, LC, STRING, RC, EOL, STAR, ANNOTATION);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,182,"List<String> strings = ImmutableList.of(""type"", ""string"", ""private"");"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,183,"testJSDocTokenStream("" * @type {string}\n * @private"", tokens, strings);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,184,"testJSDocTokenStream("" *    @type { string } \n * @private"","
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,185,"tokens, strings);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,186,"testJSDocTokenStream("" * @type   {  string}\n * @private"", tokens, strings);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,187,"testJSDocTokenStream("" * @type {string  }\n * @private"", tokens, strings);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,188,"testJSDocTokenStream("" * @type {string}\n *   @private"", tokens, strings);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,189,"testJSDocTokenStream("" * @type {string}   \n * @private"", tokens, strings);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,192,public void testJSDocTokenization2() throws Exception {
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,193,List<Integer> tokens = ImmutableList.of(
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,194,"ANNOTATION, LC, STRING, LT, STRING, PIPE, STRING, GT, RC);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,195,"List<String> strings = ImmutableList.of(""param"", ""Array"", ""string"", ""null"");"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,196,"testJSDocTokenStream(""@param {Array.<string|null>}"", tokens, strings);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,197,"testJSDocTokenStream(""@param {Array.<string|null>}"", tokens, strings);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,198,"testJSDocTokenStream(""@param {Array.<string |null>}"", tokens, strings);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,199,"testJSDocTokenStream("" @param {Array.<string |  null>}"", tokens, strings);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,200,"testJSDocTokenStream("" @param {Array.<string|null  >}"", tokens, strings);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,201,"testJSDocTokenStream(""@param {Array  .<string|null>}"", tokens, strings);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,202,"testJSDocTokenStream(""@param   {Array.<string|null>}"", tokens, strings);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,203,"testJSDocTokenStream(""@param {  Array.<string|null>}"", tokens, strings);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,204,"testJSDocTokenStream(""@param {Array.<string|   null>}  "", tokens, strings);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,205,"testJSDocTokenStream(""@param {Array.<string|null>}"", tokens, strings);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,206,"testJSDocTokenStream(""     @param { Array .< string |null > } "","
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,207,"tokens, strings);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,210,public void testJSDocTokenization3() throws Exception {
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,211,List<Integer> tokens = ImmutableList.of(
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,212,"ANNOTATION, LC, STRING, LT, STRING, PIPE, STRING, GT, RC);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,213,"List<String> strings = ImmutableList.of(""param"", ""Array"", ""string"", ""null"");"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,214,"testJSDocTokenStream(""@param {Array.<string||null>}"", tokens, strings);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,215,"testJSDocTokenStream(""@param {Array.< string || null> }"", tokens, strings);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,216,"testJSDocTokenStream(""@param {Array.<string || null >  } "","
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,217,"tokens, strings);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,218,"testJSDocTokenStream(""@param {Array .<string   ||null>}"", tokens, strings);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,219,"testJSDocTokenStream(""@param {Array.< string||null>}"", tokens, strings);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,220,"testJSDocTokenStream(""@param {  Array.<string||null>}"", tokens, strings);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,221,"testJSDocTokenStream("" @param   {Array.<string||null>}"", tokens, strings);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,222,"testJSDocTokenStream(""@param   {   Array.<string|| null> }"","
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,223,"tokens, strings);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,226,public void testJSDocTokenization4() throws Exception {
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,227,List<Integer> tokens = ImmutableList.of(
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,228,"ANNOTATION, LC, STRING, LT, LP, STRING, COMMA, STRING, RP, GT, RC, EOF);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,229,"List<String> strings = ImmutableList.of(""param"", ""Array"", ""string"", ""null"");"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,230,"testJSDocTokenStream(""@param {Array.<(string,null)>}"", tokens, strings);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,231,"testJSDocTokenStream(""@param {Array  .<(string,null)> } "", tokens, strings);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,232,"testJSDocTokenStream("" @param {Array.<  (  string,null)>}"","
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,233,"tokens, strings);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,234,"testJSDocTokenStream(""@param {Array.<(string  , null)>}"", tokens, strings);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,235,"testJSDocTokenStream(""@param {Array.<(string,   null)  > }  "","
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,236,"tokens, strings);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,237,"testJSDocTokenStream(""@param {  Array  .<  (string,null)>}   "","
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,238,"tokens, strings);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,241,public void testJSDocTokenization5() throws Exception {
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,242,"List<Integer> tokens = ImmutableList.of(ANNOTATION, STRING, EOC, EOF);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,243,"List<String> strings = ImmutableList.of(""param"", ""foo.Bar"");"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,244,"testJSDocTokenStream(""@param foo.Bar*/"", tokens, strings);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,245,"testJSDocTokenStream("" @param   foo.Bar*/"", tokens, strings);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,246,"testJSDocTokenStream("" @param foo.Bar   */"", tokens, strings);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,249,public void testJSDocTokenization6() throws Exception {
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,250,List<Integer> tokens = ImmutableList.of(
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,251,"ANNOTATION, EOL, ANNOTATION, EOL, ANNOTATION, EOC);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,252,"List<String> strings = ImmutableList.of(""hidden"", ""static"", ""desc"");"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,253,"testJSDocTokenStream(""@hidden\n@static\n@desc*/"", tokens, strings);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,254,"testJSDocTokenStream(""@hidden\n @static\n@desc*/"", tokens, strings);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,255,"testJSDocTokenStream(""@hidden\n@static\n @desc*/"", tokens, strings);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,256,"testJSDocTokenStream(""@hidden\n@static\n@desc */"", tokens, strings);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,257,"testJSDocTokenStream("" @hidden \n@static\n @desc*/"", tokens, strings);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,258,"testJSDocTokenStream(""@hidden\n@static    \n @desc  */"", tokens, strings);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,259,"testJSDocTokenStream(""@hidden\n@static\n@desc*/"", tokens, strings);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,260,"testJSDocTokenStream(""@hidden   \n@static   \n @desc*/"", tokens, strings);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,263,public void testJSDocTokenization7() throws Exception {
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,264,List<Integer> tokens = ImmutableList.of(
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,265,"ELLIPSIS, ELLIPSIS, ELLIPSIS, ELLIPSIS, ELLIPSIS, LT, EOC);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,266,List<String> strings = ImmutableList.of();
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,268,"testJSDocTokenStream(""................<*/"", tokens, strings);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,269,"testJSDocTokenStream(""............... .<*/"", tokens, strings);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,270,"testJSDocTokenStream(""................< */"", tokens, strings);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,271,"testJSDocTokenStream(""............... .< */"", tokens, strings);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,272,"testJSDocTokenStream(""............... .< */ "", tokens, strings);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,273,"testJSDocTokenStream("" ............... .< */ "", tokens, strings);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,276,public void testJSDocTokenization8() throws Exception {
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,277,List<Integer> tokens = ImmutableList.of(
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,278,"STAR, ANNOTATION, STRING, STRING, STRING, STRING, STRING, STRING,"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,279,"STRING, EOL, EOC);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,280,List<String> strings = ImmutableList.of(
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,281,"""param"", ""foo.Bar"", ""opt_name"", ""this"", ""parameter"", ""is"", ""a"", ""name"");"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,282,testJSDocTokenStream(
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,283,""" * @param foo.Bar opt_name this parameter is a name\n"" +"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,284,""" */"", tokens, strings);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,285,testJSDocTokenStream(
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,286,"""  *  @param foo.Bar opt_name this parameter is a name \n"" +"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,287,""" */ "", tokens, strings);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,290,public void testJSDocTokenization9() throws Exception {
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,291,List<Integer> tokens = ImmutableList.of(
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,292,"STAR, ANNOTATION, STRING, STRING, STRING, STRING, STRING, ANNOTATION,"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,293,"STRING, EOL, EOC);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,294,List<String> strings = ImmutableList.of(
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,295,"""param"", ""foo.Bar"", ""opt_name"", ""this"", ""parameter"", ""does"","
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,296,"""media"", ""blah"");"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,297,testJSDocTokenStream(
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,298,""" * @param foo.Bar opt_name this parameter does @media blah\n"" +"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,299,""" */"", tokens, strings);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,302,public void testJSDocTokenization10() throws Exception {
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,303,"List<Integer> tokens = ImmutableList.of(STRING, GT, EOC);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,304,"List<String> strings = ImmutableList.of(""Array<String"");"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,305,"testJSDocTokenStream(""Array<String>*/"", tokens, strings);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,308,public void testJSDocTokenization11() throws Exception {
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,309,List<Integer> tokens = ImmutableList.of(
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,310,"ANNOTATION, LC, STRING, QMARK, RC, EOC, EOF);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,311,"List<String> strings = ImmutableList.of(""param"", ""string"");"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,312,"testJSDocTokenStream(""@param {string?}*/"", tokens, strings);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,313,"testJSDocTokenStream("" @param {string?}*/"", tokens, strings);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,314,"testJSDocTokenStream(""@param { string?}*/"", tokens, strings);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,315,"testJSDocTokenStream(""@param {string ?}*/"", tokens, strings);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,316,"testJSDocTokenStream(""@param  {string ?  } */"", tokens, strings);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,317,"testJSDocTokenStream(""@param { string  ?  }*/"", tokens, strings);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,318,"testJSDocTokenStream(""@param {string?  }*/"", tokens, strings);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,321,public void testJSDocTokenization12() throws Exception {
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,322,"List<Integer> tokens = ImmutableList.of(STRING, ELLIPSIS, EOC);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,323,"List<String> strings = ImmutableList.of(""function"");"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,325,"testJSDocTokenStream(""function ...*/"", tokens, strings);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,328,public void testJSDocTokenization13() throws Exception {
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,329,"List<Integer> tokens = ImmutableList.of(ELLIPSIS, LB, STRING, RB, EOC);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,330,"List<String> strings = ImmutableList.of(""number"");"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,332,"testJSDocTokenStream(""...[number]*/"", tokens, strings);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,335,public void testJSDocTokenization14() throws Exception {
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,336,// Since ES4 type parsing only requires to parse an ellispis when it is
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,337,"// followed by a comma (,) we are allowing this case to parse this way."
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,338,"// This is a simplification of the tokenizer, but the extra complexity is"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,339,// never used.
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,340,"List<Integer> tokens = ImmutableList.of(STRING, LB, STRING, EOC);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,341,"List<String> strings = ImmutableList.of(""foo"", ""bar..."");"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,343,"testJSDocTokenStream(""foo[ bar...*/"", tokens, strings);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,346,public void testJSDocTokenization15() throws Exception {
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,347,List<Integer> tokens = ImmutableList.of(
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,348,"STRING, LB, STRING, COMMA, ELLIPSIS, EOC);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,349,"List<String> strings = ImmutableList.of(""foo"", ""bar"");"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,351,"testJSDocTokenStream(""foo[ bar,...*/"", tokens, strings);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,352,"testJSDocTokenStream(""foo[ bar ,...*/"", tokens, strings);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,353,"testJSDocTokenStream(""foo[bar, ...*/"", tokens, strings);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,354,"testJSDocTokenStream(""foo[ bar  ,   ...  */"", tokens, strings);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,355,"testJSDocTokenStream(""foo [bar,... */"", tokens, strings);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,358,public void testJSDocTokenization16() throws Exception {
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,359,List<Integer> tokens = ImmutableList.of(
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,360,"STRING, COLON, COLON, COLON, ELLIPSIS, STRING, COLON, STRING, EOC);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,361,"List<String> strings = ImmutableList.of(""foo"", ""bar"", ""bar2"");"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,363,"testJSDocTokenStream(""foo:::...bar:bar2*/"", tokens, strings);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,366,public void testJSDocTokenization17() throws Exception {
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,367,"List<Integer> tokens = ImmutableList.of(STRING, EOL, EOC);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,368,"List<String> strings = ImmutableList.of("".."");"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,370,"testJSDocTokenStream(""..\n*/"", tokens, strings);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,373,public void testJSDocTokenization18() throws Exception {
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,374,"List<Integer> tokens = ImmutableList.of(STRING, EOL, EOC);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,375,"List<String> strings = ImmutableList.of(""."");"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,377,"testJSDocTokenStream("".\n*/"", tokens, strings);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,380,public void testJSDocTokenization19() throws Exception {
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,381,"List<Integer> tokens = ImmutableList.of(ANNOTATION, LC, STAR, RC, EOC);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,382,"List<String> strings = ImmutableList.of(""type"", ""*"");"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,384,"testJSDocTokenStream(""@type {*}*/"", tokens, strings);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,387,public void testJSDocTokenization20() throws Exception {
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,388,List<Integer> tokens = ImmutableList.of(
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,389,"ANNOTATION, LC, BANG, STRING, RC, EOC, EOF);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,390,"List<String> strings = ImmutableList.of(""param"", ""Object"");"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,391,"testJSDocTokenStream(""@param {!Object}*/"", tokens, strings);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,392,"testJSDocTokenStream("" @param {!Object}*/"", tokens, strings);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,393,"testJSDocTokenStream(""@param {! Object}*/"", tokens, strings);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,394,"testJSDocTokenStream(""@param { !Object}*/"", tokens, strings);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,395,"testJSDocTokenStream(""@param  {!Object  } */"", tokens, strings);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,396,"testJSDocTokenStream(""@param {  ! Object  }*/"", tokens, strings);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,397,"testJSDocTokenStream(""@param {!Object  }*/"", tokens, strings);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,400,public void testJSDocTokenization21() throws Exception {
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,401,List<Integer> tokens = ImmutableList.of(
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,402,"ANNOTATION, LC, STRING, EQUALS, RC, EOC, EOF);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,403,"List<String> strings = ImmutableList.of(""param"", ""Object"");"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,404,"testJSDocTokenStream(""@param {Object=}*/"", tokens, strings);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,405,"testJSDocTokenStream("" @param {Object=}*/"", tokens, strings);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,406,"testJSDocTokenStream(""@param { Object =}*/"", tokens, strings);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,407,"testJSDocTokenStream(""@param { Object=}*/"", tokens, strings);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,408,"testJSDocTokenStream(""@param  {Object=  } */"", tokens, strings);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,409,"testJSDocTokenStream(""@param { Object = }*/"", tokens, strings);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,410,"testJSDocTokenStream(""@param {Object=  }*/"", tokens, strings);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,413,public void testJSDocLinenoCharno1() throws Exception {
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,414,"TokenStream stream = stream("" * @type {string}\n  *   @private"");"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,415,"testNextJSDocTokenPosition(stream, STAR, 0, 1);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,416,"testNextJSDocTokenPosition(stream, ANNOTATION, 0, 3);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,417,"testNextJSDocTokenPosition(stream, LC, 0, 9);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,418,"testNextJSDocTokenPosition(stream, STRING, 0, 10);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,419,"testNextJSDocTokenPosition(stream, RC, 0, 16);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,420,"testNextJSDocTokenPosition(stream, EOL, 0, 17);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,421,"testNextJSDocTokenPosition(stream, STAR, 1, 2);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,422,"testNextJSDocTokenPosition(stream, ANNOTATION, 1, 6);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,425,public void testJSDocLinenoCharno2() throws Exception {
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,426,"TokenStream stream = stream(""@param \n  {Array .<string\n  | null>}"");"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,427,"testNextJSDocTokenPosition(stream, ANNOTATION, 0, 0);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,428,"testNextJSDocTokenPosition(stream, EOL, 0, 7);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,429,"testNextJSDocTokenPosition(stream, LC, 1, 2);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,430,"testNextJSDocTokenPosition(stream, STRING, 1, 3);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,431,"testNextJSDocTokenPosition(stream, LT, 1, 9);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,432,"testNextJSDocTokenPosition(stream, STRING, 1, 11);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,433,"testNextJSDocTokenPosition(stream, EOL, 1, 17);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,434,"testNextJSDocTokenPosition(stream, PIPE, 2, 2);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,435,"testNextJSDocTokenPosition(stream, STRING, 2, 4);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,436,"testNextJSDocTokenPosition(stream, GT, 2, 8);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,437,"testNextJSDocTokenPosition(stream, RC, 2, 9);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,440,"private void testJSDocTokenStream(String comment, List<Integer> tokens,"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,441,List<String> strings) throws IOException {
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,442,TokenStream stream = stream(comment);
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,443,int stringsIndex = 0;
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,444,for (int token : tokens) {
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,445,int readToken = stream.getJSDocToken();
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,447,// token equality
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,448,if (token != readToken) {
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,449,"assertEquals(name(token), name(readToken));"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,452,// string equality
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,453,if (token == ANNOTATION || token == STRING) {
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,454,"assertEquals(strings.get(stringsIndex++), stream.getString());"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,459,"private void testNextTokenPosition(TokenStream stream, int token,"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,460,"int lineno, int charno) throws IOException {"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,461,"assertEquals(token, stream.getToken());"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,462,"assertLinenoCharno(stream, lineno, charno);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,465,"private void testNextJSDocTokenPosition(TokenStream stream, int token,"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,466,"int lineno, int charno) throws IOException {"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,467,"assertEquals(token, stream.getJSDocToken());"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,468,"assertLinenoCharno(stream, lineno, charno);"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,471,"private void assertLinenoCharno(TokenStream stream, int lineno, int charno) {"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,472,"assertEquals(""lineno"", lineno, stream.getLineno());"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,473,"assertEquals(""charno"", charno, stream.getCharno());"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,476,"private void assertLinenoOffset(TokenStream stream, int lineno,"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,477,int charnoCursor) {
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,478,"assertEquals(""lineno"", lineno, stream.getLineno());"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,479,"assertEquals(""offset"", charnoCursor, stream.getOffset());"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,482,private TokenStream stream(String source) {
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,483,"return new TokenStream(new Parser(null, null),"
True,test/com/google/javascript/rhino/TokenStreamTest.java,test/com/google/javascript/rhino/TokenStreamTest.java,484,"new StringReader(source), null, 0);"
True,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,3,* ***** BEGIN LICENSE BLOCK *****
True,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,4,* Version: MPL 1.1/GPL 2.0
True,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,6,* The contents of this file are subject to the Mozilla Public License Version
True,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,7,"* 1.1 (the ""License""); you may not use this file except in compliance with"
True,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,8,* the License. You may obtain a copy of the License at
True,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,9,* http://www.mozilla.org/MPL/
True,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,11,"* Software distributed under the License is distributed on an ""AS IS"" basis,"
True,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,12,"* WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License"
True,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,13,* for the specific language governing rights and limitations under the
True,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,14,* License.
True,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,16,"* The Original Code is Rhino code, released"
True,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,17,"* May 6, 1999."
True,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,19,* The Initial Developer of the Original Code is
True,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,20,* Netscape Communications Corporation.
True,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,21,* Portions created by the Initial Developer are Copyright (C) 1997-1999
True,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,22,* the Initial Developer. All Rights Reserved.
True,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,24,* Contributor(s):
True,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,25,*   Nick Santos
True,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,27,"* Alternatively, the contents of this file may be used under the terms of"
True,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,28,"* the GNU General Public License Version 2 or later (the ""GPL""), in which"
True,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,29,* case the provisions of the GPL are applicable instead of those above. If
True,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,30,* you wish to allow use of your version of this file only under the terms of
True,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,31,* the GPL and not to allow others to use your version of this file under the
True,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,32,"* MPL, indicate your decision by deleting the provisions above and replacing"
True,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,33,* them with the notice and other provisions required by the GPL. If you do
True,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,34,"* not delete the provisions above, a recipient may use your version of this"
True,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,35,* file under either the MPL or the GPL.
True,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,37,* ***** END LICENSE BLOCK ***** */
True,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,39,package com.google.javascript.rhino.jstype;
True,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,41,import static com.google.javascript.rhino.jstype.BooleanLiteralSet.BOTH;
True,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,42,import static com.google.javascript.rhino.jstype.BooleanLiteralSet.EMPTY;
True,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,43,import static com.google.javascript.rhino.jstype.BooleanLiteralSet.FALSE;
True,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,44,import static com.google.javascript.rhino.jstype.BooleanLiteralSet.TRUE;
True,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,46,import junit.framework.TestCase;
True,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,49,* Tests {@link BooleanLiteralSet}.
True,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,53,public class BooleanLiteralSetTest extends TestCase {
True,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,55,public void testIntersection() {
True,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,56,"assertEquals(EMPTY, EMPTY.intersection(EMPTY));"
True,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,57,"assertEquals(EMPTY, EMPTY.intersection(TRUE));"
True,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,58,"assertEquals(EMPTY, EMPTY.intersection(FALSE));"
True,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,59,"assertEquals(EMPTY, EMPTY.intersection(BOTH));"
True,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,60,"assertEquals(EMPTY, TRUE.intersection(EMPTY));"
True,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,61,"assertEquals(TRUE, TRUE.intersection(TRUE));"
True,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,62,"assertEquals(EMPTY, TRUE.intersection(FALSE));"
True,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,63,"assertEquals(TRUE, TRUE.intersection(BOTH));"
True,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,64,"assertEquals(EMPTY, FALSE.intersection(EMPTY));"
True,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,65,"assertEquals(EMPTY, FALSE.intersection(TRUE));"
True,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,66,"assertEquals(FALSE, FALSE.intersection(FALSE));"
True,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,67,"assertEquals(FALSE, FALSE.intersection(BOTH));"
True,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,68,"assertEquals(EMPTY, BOTH.intersection(EMPTY));"
True,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,69,"assertEquals(TRUE, BOTH.intersection(TRUE));"
True,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,70,"assertEquals(FALSE, BOTH.intersection(FALSE));"
True,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,71,"assertEquals(BOTH, BOTH.intersection(BOTH));"
True,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,74,public void testUnion() {
True,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,75,"assertEquals(EMPTY, EMPTY.union(EMPTY));"
True,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,76,"assertEquals(TRUE, EMPTY.union(TRUE));"
True,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,77,"assertEquals(FALSE, EMPTY.union(FALSE));"
True,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,78,"assertEquals(BOTH, EMPTY.union(BOTH));"
True,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,79,"assertEquals(TRUE, TRUE.union(EMPTY));"
True,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,80,"assertEquals(TRUE, TRUE.union(TRUE));"
True,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,81,"assertEquals(BOTH, TRUE.union(FALSE));"
True,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,82,"assertEquals(BOTH, TRUE.union(BOTH));"
True,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,83,"assertEquals(FALSE, FALSE.union(EMPTY));"
True,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,84,"assertEquals(BOTH, FALSE.union(TRUE));"
True,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,85,"assertEquals(FALSE, FALSE.union(FALSE));"
True,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,86,"assertEquals(BOTH, FALSE.union(BOTH));"
True,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,87,"assertEquals(BOTH, BOTH.union(EMPTY));"
True,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,88,"assertEquals(BOTH, BOTH.union(TRUE));"
True,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,89,"assertEquals(BOTH, BOTH.union(FALSE));"
True,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,90,"assertEquals(BOTH, BOTH.union(BOTH));"
True,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,93,public void testGet() {
True,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,94,"assertEquals(TRUE, BooleanLiteralSet.get(true));"
True,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,95,"assertEquals(FALSE, BooleanLiteralSet.get(false));"
True,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,98,public void testContains() {
True,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,99,assertFalse(EMPTY.contains(true));
True,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,100,assertFalse(EMPTY.contains(false));
True,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,101,assertTrue(TRUE.contains(true));
True,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,102,assertFalse(TRUE.contains(false));
True,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,103,assertFalse(FALSE.contains(true));
True,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,104,assertTrue(FALSE.contains(false));
True,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,105,assertTrue(BOTH.contains(true));
True,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,test/com/google/javascript/rhino/jstype/BooleanLiteralSetTest.java,106,assertTrue(BOTH.contains(false));
True,test/com/google/javascript/rhino/jstype/FunctionParamBuilderTest.java,test/com/google/javascript/rhino/jstype/FunctionParamBuilderTest.java,3,* ***** BEGIN LICENSE BLOCK *****
True,test/com/google/javascript/rhino/jstype/FunctionParamBuilderTest.java,test/com/google/javascript/rhino/jstype/FunctionParamBuilderTest.java,4,* Version: MPL 1.1/GPL 2.0
True,test/com/google/javascript/rhino/jstype/FunctionParamBuilderTest.java,test/com/google/javascript/rhino/jstype/FunctionParamBuilderTest.java,6,* The contents of this file are subject to the Mozilla Public License Version
True,test/com/google/javascript/rhino/jstype/FunctionParamBuilderTest.java,test/com/google/javascript/rhino/jstype/FunctionParamBuilderTest.java,7,"* 1.1 (the ""License""); you may not use this file except in compliance with"
True,test/com/google/javascript/rhino/jstype/FunctionParamBuilderTest.java,test/com/google/javascript/rhino/jstype/FunctionParamBuilderTest.java,8,* the License. You may obtain a copy of the License at
True,test/com/google/javascript/rhino/jstype/FunctionParamBuilderTest.java,test/com/google/javascript/rhino/jstype/FunctionParamBuilderTest.java,9,* http://www.mozilla.org/MPL/
True,test/com/google/javascript/rhino/jstype/FunctionParamBuilderTest.java,test/com/google/javascript/rhino/jstype/FunctionParamBuilderTest.java,11,"* Software distributed under the License is distributed on an ""AS IS"" basis,"
True,test/com/google/javascript/rhino/jstype/FunctionParamBuilderTest.java,test/com/google/javascript/rhino/jstype/FunctionParamBuilderTest.java,12,"* WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License"
True,test/com/google/javascript/rhino/jstype/FunctionParamBuilderTest.java,test/com/google/javascript/rhino/jstype/FunctionParamBuilderTest.java,13,* for the specific language governing rights and limitations under the
True,test/com/google/javascript/rhino/jstype/FunctionParamBuilderTest.java,test/com/google/javascript/rhino/jstype/FunctionParamBuilderTest.java,14,* License.
True,test/com/google/javascript/rhino/jstype/FunctionParamBuilderTest.java,test/com/google/javascript/rhino/jstype/FunctionParamBuilderTest.java,16,"* The Original Code is Rhino code, released"
True,test/com/google/javascript/rhino/jstype/FunctionParamBuilderTest.java,test/com/google/javascript/rhino/jstype/FunctionParamBuilderTest.java,17,"* May 6, 1999."
True,test/com/google/javascript/rhino/jstype/FunctionParamBuilderTest.java,test/com/google/javascript/rhino/jstype/FunctionParamBuilderTest.java,19,* The Initial Developer of the Original Code is
True,test/com/google/javascript/rhino/jstype/FunctionParamBuilderTest.java,test/com/google/javascript/rhino/jstype/FunctionParamBuilderTest.java,20,* Netscape Communications Corporation.
True,test/com/google/javascript/rhino/jstype/FunctionParamBuilderTest.java,test/com/google/javascript/rhino/jstype/FunctionParamBuilderTest.java,21,* Portions created by the Initial Developer are Copyright (C) 1997-1999
True,test/com/google/javascript/rhino/jstype/FunctionParamBuilderTest.java,test/com/google/javascript/rhino/jstype/FunctionParamBuilderTest.java,22,* the Initial Developer. All Rights Reserved.
True,test/com/google/javascript/rhino/jstype/FunctionParamBuilderTest.java,test/com/google/javascript/rhino/jstype/FunctionParamBuilderTest.java,24,* Contributor(s):
True,test/com/google/javascript/rhino/jstype/FunctionParamBuilderTest.java,test/com/google/javascript/rhino/jstype/FunctionParamBuilderTest.java,25,*   Nick Santos
True,test/com/google/javascript/rhino/jstype/FunctionParamBuilderTest.java,test/com/google/javascript/rhino/jstype/FunctionParamBuilderTest.java,27,"* Alternatively, the contents of this file may be used under the terms of"
True,test/com/google/javascript/rhino/jstype/FunctionParamBuilderTest.java,test/com/google/javascript/rhino/jstype/FunctionParamBuilderTest.java,28,"* the GNU General Public License Version 2 or later (the ""GPL""), in which"
True,test/com/google/javascript/rhino/jstype/FunctionParamBuilderTest.java,test/com/google/javascript/rhino/jstype/FunctionParamBuilderTest.java,29,* case the provisions of the GPL are applicable instead of those above. If
True,test/com/google/javascript/rhino/jstype/FunctionParamBuilderTest.java,test/com/google/javascript/rhino/jstype/FunctionParamBuilderTest.java,30,* you wish to allow use of your version of this file only under the terms of
True,test/com/google/javascript/rhino/jstype/FunctionParamBuilderTest.java,test/com/google/javascript/rhino/jstype/FunctionParamBuilderTest.java,31,* the GPL and not to allow others to use your version of this file under the
True,test/com/google/javascript/rhino/jstype/FunctionParamBuilderTest.java,test/com/google/javascript/rhino/jstype/FunctionParamBuilderTest.java,32,"* MPL, indicate your decision by deleting the provisions above and replacing"
True,test/com/google/javascript/rhino/jstype/FunctionParamBuilderTest.java,test/com/google/javascript/rhino/jstype/FunctionParamBuilderTest.java,33,* them with the notice and other provisions required by the GPL. If you do
True,test/com/google/javascript/rhino/jstype/FunctionParamBuilderTest.java,test/com/google/javascript/rhino/jstype/FunctionParamBuilderTest.java,34,"* not delete the provisions above, a recipient may use your version of this"
True,test/com/google/javascript/rhino/jstype/FunctionParamBuilderTest.java,test/com/google/javascript/rhino/jstype/FunctionParamBuilderTest.java,35,* file under either the MPL or the GPL.
True,test/com/google/javascript/rhino/jstype/FunctionParamBuilderTest.java,test/com/google/javascript/rhino/jstype/FunctionParamBuilderTest.java,37,* ***** END LICENSE BLOCK ***** */
True,test/com/google/javascript/rhino/jstype/FunctionParamBuilderTest.java,test/com/google/javascript/rhino/jstype/FunctionParamBuilderTest.java,39,package com.google.javascript.rhino.jstype;
True,test/com/google/javascript/rhino/jstype/FunctionParamBuilderTest.java,test/com/google/javascript/rhino/jstype/FunctionParamBuilderTest.java,41,import com.google.javascript.rhino.Node;
True,test/com/google/javascript/rhino/jstype/FunctionParamBuilderTest.java,test/com/google/javascript/rhino/jstype/FunctionParamBuilderTest.java,42,import com.google.javascript.rhino.testing.BaseJSTypeTestCase;
True,test/com/google/javascript/rhino/jstype/FunctionParamBuilderTest.java,test/com/google/javascript/rhino/jstype/FunctionParamBuilderTest.java,46,* Tests for FunctionParamBuilder.
True,test/com/google/javascript/rhino/jstype/FunctionParamBuilderTest.java,test/com/google/javascript/rhino/jstype/FunctionParamBuilderTest.java,49,public class FunctionParamBuilderTest extends BaseJSTypeTestCase {
True,test/com/google/javascript/rhino/jstype/FunctionParamBuilderTest.java,test/com/google/javascript/rhino/jstype/FunctionParamBuilderTest.java,51,public void testBuild() throws Exception {
True,test/com/google/javascript/rhino/jstype/FunctionParamBuilderTest.java,test/com/google/javascript/rhino/jstype/FunctionParamBuilderTest.java,52,FunctionParamBuilder builder = new FunctionParamBuilder(registry);
True,test/com/google/javascript/rhino/jstype/FunctionParamBuilderTest.java,test/com/google/javascript/rhino/jstype/FunctionParamBuilderTest.java,53,assertTrue(builder.addRequiredParams(NUMBER_TYPE));
True,test/com/google/javascript/rhino/jstype/FunctionParamBuilderTest.java,test/com/google/javascript/rhino/jstype/FunctionParamBuilderTest.java,54,assertTrue(builder.addOptionalParams(BOOLEAN_TYPE));
True,test/com/google/javascript/rhino/jstype/FunctionParamBuilderTest.java,test/com/google/javascript/rhino/jstype/FunctionParamBuilderTest.java,55,assertTrue(builder.addVarArgs(STRING_TYPE));
True,test/com/google/javascript/rhino/jstype/FunctionParamBuilderTest.java,test/com/google/javascript/rhino/jstype/FunctionParamBuilderTest.java,57,Node params = builder.build();
True,test/com/google/javascript/rhino/jstype/FunctionParamBuilderTest.java,test/com/google/javascript/rhino/jstype/FunctionParamBuilderTest.java,58,"assertEquals(NUMBER_TYPE, params.getFirstChild().getJSType());"
True,test/com/google/javascript/rhino/jstype/FunctionParamBuilderTest.java,test/com/google/javascript/rhino/jstype/FunctionParamBuilderTest.java,59,"assertEquals(registry.createOptionalType(BOOLEAN_TYPE),"
True,test/com/google/javascript/rhino/jstype/FunctionParamBuilderTest.java,test/com/google/javascript/rhino/jstype/FunctionParamBuilderTest.java,60,params.getFirstChild().getNext().getJSType());
True,test/com/google/javascript/rhino/jstype/FunctionParamBuilderTest.java,test/com/google/javascript/rhino/jstype/FunctionParamBuilderTest.java,61,"assertEquals(registry.createOptionalType(STRING_TYPE),"
True,test/com/google/javascript/rhino/jstype/FunctionParamBuilderTest.java,test/com/google/javascript/rhino/jstype/FunctionParamBuilderTest.java,62,params.getLastChild().getJSType());
True,test/com/google/javascript/rhino/jstype/FunctionParamBuilderTest.java,test/com/google/javascript/rhino/jstype/FunctionParamBuilderTest.java,64,assertTrue(params.getFirstChild().getNext().isOptionalArg());
True,test/com/google/javascript/rhino/jstype/FunctionParamBuilderTest.java,test/com/google/javascript/rhino/jstype/FunctionParamBuilderTest.java,65,assertTrue(params.getLastChild().isVarArgs());
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,3,* ***** BEGIN LICENSE BLOCK *****
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,4,* Version: MPL 1.1/GPL 2.0
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,6,* The contents of this file are subject to the Mozilla Public License Version
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,7,"* 1.1 (the ""License""); you may not use this file except in compliance with"
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,8,* the License. You may obtain a copy of the License at
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,9,* http://www.mozilla.org/MPL/
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,11,"* Software distributed under the License is distributed on an ""AS IS"" basis,"
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,12,"* WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License"
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,13,* for the specific language governing rights and limitations under the
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,14,* License.
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,16,"* The Original Code is Rhino code, released"
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,17,"* May 6, 1999."
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,19,* The Initial Developer of the Original Code is
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,20,* Netscape Communications Corporation.
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,21,* Portions created by the Initial Developer are Copyright (C) 1997-1999
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,22,* the Initial Developer. All Rights Reserved.
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,24,* Contributor(s):
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,25,*   Nick Santos
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,27,"* Alternatively, the contents of this file may be used under the terms of"
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,28,"* the GNU General Public License Version 2 or later (the ""GPL""), in which"
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,29,* case the provisions of the GPL are applicable instead of those above. If
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,30,* you wish to allow use of your version of this file only under the terms of
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,31,* the GPL and not to allow others to use your version of this file under the
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,32,"* MPL, indicate your decision by deleting the provisions above and replacing"
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,33,* them with the notice and other provisions required by the GPL. If you do
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,34,"* not delete the provisions above, a recipient may use your version of this"
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,35,* file under either the MPL or the GPL.
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,37,* ***** END LICENSE BLOCK ***** */
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,39,package com.google.javascript.rhino.jstype;
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,41,import com.google.javascript.rhino.SimpleErrorReporter;
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,43,import junit.framework.TestCase;
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,46,* Tests {@link JSTypeRegistry}.
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,50,public class JSTypeRegistryTest extends TestCase {
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,51,"// TODO(user): extend this class with more tests, as JSTypeRegistry is"
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,52,// now much larger
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,53,public void testGetBuiltInType() {
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,54,JSTypeRegistry typeRegistry = new JSTypeRegistry(null);
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,55,"assertEquals(typeRegistry.getNativeType(JSTypeNative.BOOLEAN_TYPE),"
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,56,"typeRegistry.getType(""boolean""));"
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,59,public void testGetDeclaredType() {
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,60,JSTypeRegistry typeRegistry = new JSTypeRegistry(null);
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,61,JSType type = typeRegistry.createAnonymousObjectType();
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,62,"String name = ""Foo"";"
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,63,"typeRegistry.declareType(name, type);"
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,64,"assertEquals(type, typeRegistry.getType(name));"
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,66,// Ensure different instances are independent.
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,67,JSTypeRegistry typeRegistry2 = new JSTypeRegistry(null);
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,68,"assertEquals(null, typeRegistry2.getType(name));"
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,69,"assertEquals(type, typeRegistry.getType(name));"
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,72,public void testGetDeclaredTypeInNamespace() {
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,73,JSTypeRegistry typeRegistry = new JSTypeRegistry(null);
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,74,JSType type = typeRegistry.createAnonymousObjectType();
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,75,"String name = ""a.b.Foo"";"
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,76,"typeRegistry.declareType(name, type);"
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,77,"assertEquals(type, typeRegistry.getType(name));"
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,78,"assertTrue(typeRegistry.hasNamespace(""a""));"
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,79,"assertTrue(typeRegistry.hasNamespace(""a.b""));"
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,82,public void testTypeAsNamespace() {
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,83,JSTypeRegistry typeRegistry = new JSTypeRegistry(null);
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,85,JSType type = typeRegistry.createAnonymousObjectType();
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,86,"String name = ""a.b.Foo"";"
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,87,"typeRegistry.declareType(name, type);"
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,88,"assertEquals(type, typeRegistry.getType(name));"
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,90,type = typeRegistry.createAnonymousObjectType();
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,91,"name = ""a.b.Foo.Bar"";"
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,92,"typeRegistry.declareType(name, type);"
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,93,"assertEquals(type, typeRegistry.getType(name));"
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,95,"assertTrue(typeRegistry.hasNamespace(""a""));"
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,96,"assertTrue(typeRegistry.hasNamespace(""a.b""));"
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,97,"assertTrue(typeRegistry.hasNamespace(""a.b.Foo""));"
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,100,public void testGenerationIncrementing() {
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,101,SimpleErrorReporter reporter = new SimpleErrorReporter();
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,102,final JSTypeRegistry typeRegistry = new JSTypeRegistry(reporter);
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,104,StaticScope<JSType> scope = new StaticScope<JSType>() {
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,105,public StaticSlot<JSType> getSlot(final String name) {
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,106,return new SimpleSlot(
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,107,"name,"
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,108,"typeRegistry.getNativeType(JSTypeNative.UNKNOWN_TYPE),"
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,109,false);
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,111,public StaticSlot<JSType> getOwnSlot(String name) {
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,112,return getSlot(name);
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,114,public StaticScope<JSType> getParentScope() { return null; }
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,115,public JSType getTypeOfThis() { return null; }
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,118,ObjectType namedType =
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,119,"(ObjectType) typeRegistry.getType(scope, ""Foo"", null, 0, 0);"
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,120,ObjectType subNamed =
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,121,typeRegistry.createObjectType(typeRegistry.createObjectType(namedType));
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,123,// Subclass of named type is initially unresolved.
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,124,typeRegistry.setLastGeneration(false);
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,125,typeRegistry.resolveTypesInScope(scope);
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,126,assertTrue(subNamed.isUnknownType());
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,128,"// Subclass of named type is still unresolved, even though the named type is"
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,129,// now present in the registry.
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,130,"typeRegistry.declareType(""Foo"", typeRegistry.createAnonymousObjectType());"
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,131,typeRegistry.resolveTypesInScope(scope);
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,132,assertTrue(subNamed.isUnknownType());
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,134,"assertNull(""Unexpected errors: "" + reporter.errors(),"
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,135,reporter.errors());
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,136,"assertNull(""Unexpected warnings: "" + reporter.warnings(),"
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,137,reporter.warnings());
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,139,"// After incrementing the generation, resolve works again."
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,140,typeRegistry.incrementGeneration();
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,141,typeRegistry.setLastGeneration(true);
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,142,typeRegistry.resolveTypesInScope(scope);
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,143,assertFalse(subNamed.isUnknownType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3,* ***** BEGIN LICENSE BLOCK *****
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4,* Version: MPL 1.1/GPL 2.0
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,6,* The contents of this file are subject to the Mozilla Public License Version
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,7,"* 1.1 (the ""License""); you may not use this file except in compliance with"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,8,* the License. You may obtain a copy of the License at
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,9,* http://www.mozilla.org/MPL/
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,11,"* Software distributed under the License is distributed on an ""AS IS"" basis,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,12,"* WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,13,* for the specific language governing rights and limitations under the
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,14,* License.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,16,"* The Original Code is Rhino code, released"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,17,"* May 6, 1999."
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,19,* The Initial Developer of the Original Code is
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,20,* Netscape Communications Corporation.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,21,* Portions created by the Initial Developer are Copyright (C) 1997-1999
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,22,* the Initial Developer. All Rights Reserved.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,24,* Contributor(s):
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,25,*   Nick Santos
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,27,"* Alternatively, the contents of this file may be used under the terms of"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,28,"* the GNU General Public License Version 2 or later (the ""GPL""), in which"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,29,* case the provisions of the GPL are applicable instead of those above. If
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,30,* you wish to allow use of your version of this file only under the terms of
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,31,* the GPL and not to allow others to use your version of this file under the
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,32,"* MPL, indicate your decision by deleting the provisions above and replacing"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,33,* them with the notice and other provisions required by the GPL. If you do
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,34,"* not delete the provisions above, a recipient may use your version of this"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,35,* file under either the MPL or the GPL.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,37,* ***** END LICENSE BLOCK ***** */
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,39,package com.google.javascript.rhino.jstype;
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,41,import static com.google.javascript.rhino.jstype.TernaryValue.FALSE;
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,42,import static com.google.javascript.rhino.jstype.TernaryValue.TRUE;
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,43,import static com.google.javascript.rhino.jstype.TernaryValue.UNKNOWN;
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,45,import com.google.common.base.Pair;
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,46,import com.google.common.collect.Lists;
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,47,import com.google.common.collect.ImmutableList;
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,48,import com.google.common.collect.Sets;
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,49,import com.google.javascript.rhino.JSDocInfo;
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,50,import com.google.javascript.rhino.JSDocInfo.Visibility;
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,51,import com.google.javascript.rhino.Node;
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,52,import com.google.javascript.rhino.Token;
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,53,import com.google.javascript.rhino.testing.BaseJSTypeTestCase;
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,55,import java.util.HashMap;
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,56,import java.util.List;
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,57,import java.util.Map;
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,58,import java.util.Set;
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,60,public class JSTypeTest extends BaseJSTypeTestCase {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,61,private FunctionType dateMethod;
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,62,private FunctionType functionType;
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,63,private NamedType unresolvedNamedType;
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,64,private FunctionType googBar;
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,65,private FunctionType googSubBar;
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,66,private FunctionType googSubSubBar;
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,67,private ObjectType googBarInst;
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,68,private ObjectType googSubBarInst;
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,69,private ObjectType googSubSubBarInst;
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,70,private NamedType namedGoogBar;
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,71,private ObjectType subclassOfUnresolvedNamedType;
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,72,private FunctionType subclassCtor;
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,73,private FunctionType interfaceType;
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,74,private JSType recordType;
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,75,private EnumType enumType;
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,76,private EnumElementType elementsType;
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,78,private static final StaticScope<JSType> EMPTY_SCOPE =
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,79,new StaticScope<JSType>() {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,80,@Override
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,81,public StaticScope<JSType> getParentScope() { return null; }
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,83,@Override
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,84,public StaticSlot<JSType> getSlot(String name) { return null; }
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,86,@Override
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,87,public StaticSlot<JSType> getOwnSlot(String name) { return null; }
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,89,@Override
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,90,public JSType getTypeOfThis() { return null; }
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,94,* A non exhaustive list of representative types used to test simple
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,95,* properties that should hold for all types (such as the reflexivity
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,96,* of subtyping).
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,98,private List<JSType> types;
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,100,@Override
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,101,protected void setUp() throws Exception {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,102,super.setUp();
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,104,RecordTypeBuilder builder = new RecordTypeBuilder(registry);
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,105,"builder.addProperty(""a"", NUMBER_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,106,"builder.addProperty(""b"", STRING_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,107,recordType = builder.build();
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,109,"enumType = new EnumType(registry, ""Enum"", NUMBER_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,110,elementsType = enumType.getElementsType();
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,111,"functionType = new FunctionType(registry, null, null, null, NUMBER_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,112,"dateMethod = new FunctionType(registry, null, null, new Node(Token.LP),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,113,"NUMBER_TYPE, DATE_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,114,unresolvedNamedType =
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,115,"new NamedType(registry, ""not.resolved.named.type"", null, -1, -1);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,116,"namedGoogBar = new NamedType(registry, ""goog.Bar"", null, -1, -1);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,118,subclassCtor =
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,119,"new FunctionType(registry, null, null, null, null, null, null,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,120,"true, false);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,121,subclassCtor.setPrototypeBasedOn(unresolvedNamedType);
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,122,subclassOfUnresolvedNamedType = subclassCtor.getInstanceType();
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,124,"interfaceType = new FunctionType(registry, ""Interface"", null);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,126,"googBar = registry.createConstructorType(""goog.Bar"", null, null, null);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,127,"googBar.getPrototype().defineDeclaredProperty(""date"", DATE_TYPE, true);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,128,googBar.setImplementedInterfaces(
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,129,Lists.<ObjectType>newArrayList(interfaceType.getInstanceType()));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,130,googBarInst = googBar.getInstanceType();
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,132,googSubBar = registry.createConstructorType(
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,133,"""googSubBar"", null, null, null);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,134,googSubBar.setPrototypeBasedOn(googBar.getInstanceType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,135,googSubBarInst = googSubBar.getInstanceType();
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,137,googSubSubBar = registry.createConstructorType(
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,138,"""googSubSubBar"", null, null, null);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,139,googSubSubBar.setPrototypeBasedOn(googSubBar.getInstanceType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,140,googSubSubBarInst = googSubSubBar.getInstanceType();
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,142,final ObjectType googObject = registry.createAnonymousObjectType();
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,143,"googObject.defineDeclaredProperty(""Bar"", googBar, false);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,145,"namedGoogBar.resolve(null, new StaticScope<JSType>() {"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,146,public StaticSlot<JSType> getSlot(String name) {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,147,"if (""goog"".equals(name)) {"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,148,"return new SimpleSlot(""goog"", googObject, false);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,149,} else {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,150,return null;
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,154,public StaticSlot<JSType> getOwnSlot(String name) {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,155,return getSlot(name);
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,158,public StaticScope<JSType> getParentScope() {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,159,return null;
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,162,public JSType getTypeOfThis() { return null; }
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,165,types = ImmutableList.of(
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,166,"NO_OBJECT_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,167,"NO_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,168,"BOOLEAN_OBJECT_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,169,"BOOLEAN_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,170,"STRING_OBJECT_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,171,"STRING_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,172,"VOID_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,173,"UNKNOWN_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,174,"NULL_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,175,"NUMBER_OBJECT_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,176,"NUMBER_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,177,"DATE_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,178,"ERROR_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,179,"SYNTAX_ERROR_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,180,"dateMethod,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,181,"functionType,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,182,"unresolvedNamedType,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,183,"googBar,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,184,"googSubBar,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,185,"googSubSubBar,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,186,"namedGoogBar,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,187,"googBar.getInstanceType(),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,188,"subclassOfUnresolvedNamedType,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,189,"subclassCtor,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,190,"recordType,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,191,"enumType,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,192,"elementsType,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,193,"googBar,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,194,googSubBar);
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,198,* Tests the behavior of the top constructor type.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,200,public void testUniversalConstructorType() throws Exception {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,201,// isXxx
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,202,assertFalse(U2U_CONSTRUCTOR_TYPE.isNoObjectType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,203,assertFalse(U2U_CONSTRUCTOR_TYPE.isNoType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,204,assertFalse(U2U_CONSTRUCTOR_TYPE.isArrayType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,205,assertFalse(U2U_CONSTRUCTOR_TYPE.isBooleanValueType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,206,assertFalse(U2U_CONSTRUCTOR_TYPE.isDateType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,207,assertFalse(U2U_CONSTRUCTOR_TYPE.isEnumElementType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,208,assertFalse(U2U_CONSTRUCTOR_TYPE.isNullType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,209,assertFalse(U2U_CONSTRUCTOR_TYPE.isNamedType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,210,assertFalse(U2U_CONSTRUCTOR_TYPE.isNullType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,211,assertFalse(U2U_CONSTRUCTOR_TYPE.isNumber());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,212,assertFalse(U2U_CONSTRUCTOR_TYPE.isNumberObjectType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,213,assertFalse(U2U_CONSTRUCTOR_TYPE.isNumberValueType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,214,assertTrue(U2U_CONSTRUCTOR_TYPE.isObject());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,215,assertFalse(U2U_CONSTRUCTOR_TYPE.isFunctionPrototypeType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,216,assertFalse(U2U_CONSTRUCTOR_TYPE.isRegexpType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,217,assertFalse(U2U_CONSTRUCTOR_TYPE.isString());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,218,assertFalse(U2U_CONSTRUCTOR_TYPE.isStringObjectType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,219,assertFalse(U2U_CONSTRUCTOR_TYPE.isStringValueType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,220,assertFalse(U2U_CONSTRUCTOR_TYPE.isEnumType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,221,assertFalse(U2U_CONSTRUCTOR_TYPE.isUnionType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,222,assertFalse(U2U_CONSTRUCTOR_TYPE.isAllType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,223,assertFalse(U2U_CONSTRUCTOR_TYPE.isVoidType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,224,assertTrue(U2U_CONSTRUCTOR_TYPE.isConstructor());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,225,assertTrue(U2U_CONSTRUCTOR_TYPE.isInstanceType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,227,// canAssignTo
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,228,assertFalse(U2U_CONSTRUCTOR_TYPE.canAssignTo(NO_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,229,assertFalse(U2U_CONSTRUCTOR_TYPE.canAssignTo(NO_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,230,assertFalse(U2U_CONSTRUCTOR_TYPE.isSubtype(ARRAY_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,231,assertFalse(U2U_CONSTRUCTOR_TYPE.canAssignTo(BOOLEAN_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,232,assertFalse(U2U_CONSTRUCTOR_TYPE.canAssignTo(BOOLEAN_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,233,assertFalse(U2U_CONSTRUCTOR_TYPE.canAssignTo(DATE_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,234,assertFalse(U2U_CONSTRUCTOR_TYPE.canAssignTo(ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,235,assertFalse(U2U_CONSTRUCTOR_TYPE.canAssignTo(EVAL_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,236,assertTrue(U2U_CONSTRUCTOR_TYPE.canAssignTo(functionType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,237,assertFalse(U2U_CONSTRUCTOR_TYPE.canAssignTo(recordType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,238,assertFalse(U2U_CONSTRUCTOR_TYPE.canAssignTo(NULL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,239,assertFalse(U2U_CONSTRUCTOR_TYPE.canAssignTo(NUMBER_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,240,assertFalse(U2U_CONSTRUCTOR_TYPE.canAssignTo(NUMBER_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,241,assertTrue(U2U_CONSTRUCTOR_TYPE.canAssignTo(OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,242,assertFalse(U2U_CONSTRUCTOR_TYPE.canAssignTo(URI_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,243,assertFalse(U2U_CONSTRUCTOR_TYPE.canAssignTo(RANGE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,244,assertFalse(U2U_CONSTRUCTOR_TYPE.canAssignTo(REFERENCE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,245,assertFalse(U2U_CONSTRUCTOR_TYPE.canAssignTo(REGEXP_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,246,assertFalse(U2U_CONSTRUCTOR_TYPE.canAssignTo(STRING_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,247,assertFalse(U2U_CONSTRUCTOR_TYPE.canAssignTo(STRING_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,248,assertFalse(U2U_CONSTRUCTOR_TYPE.canAssignTo(SYNTAX_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,249,assertFalse(U2U_CONSTRUCTOR_TYPE.canAssignTo(TYPE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,250,assertTrue(U2U_CONSTRUCTOR_TYPE.canAssignTo(ALL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,251,assertFalse(U2U_CONSTRUCTOR_TYPE.canAssignTo(VOID_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,253,// canTestForEqualityWith
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,254,assertTrue(U2U_CONSTRUCTOR_TYPE.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,255,canTestForEqualityWith(NO_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,256,assertTrue(U2U_CONSTRUCTOR_TYPE.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,257,canTestForEqualityWith(NO_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,258,assertTrue(U2U_CONSTRUCTOR_TYPE.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,259,canTestForEqualityWith(ALL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,260,assertTrue(U2U_CONSTRUCTOR_TYPE.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,261,canTestForEqualityWith(ARRAY_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,262,assertTrue(U2U_CONSTRUCTOR_TYPE.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,263,canTestForEqualityWith(BOOLEAN_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,264,assertTrue(U2U_CONSTRUCTOR_TYPE.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,265,canTestForEqualityWith(BOOLEAN_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,266,assertTrue(U2U_CONSTRUCTOR_TYPE.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,267,canTestForEqualityWith(DATE_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,268,assertTrue(U2U_CONSTRUCTOR_TYPE.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,269,canTestForEqualityWith(ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,270,assertTrue(U2U_CONSTRUCTOR_TYPE.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,271,canTestForEqualityWith(EVAL_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,272,assertTrue(U2U_CONSTRUCTOR_TYPE.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,273,canTestForEqualityWith(functionType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,274,assertTrue(U2U_CONSTRUCTOR_TYPE.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,275,canTestForEqualityWith(recordType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,276,assertFalse(U2U_CONSTRUCTOR_TYPE.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,277,canTestForEqualityWith(NULL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,278,assertTrue(U2U_CONSTRUCTOR_TYPE.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,279,canTestForEqualityWith(NUMBER_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,280,assertTrue(U2U_CONSTRUCTOR_TYPE.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,281,canTestForEqualityWith(NUMBER_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,282,assertTrue(U2U_CONSTRUCTOR_TYPE.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,283,canTestForEqualityWith(OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,284,assertTrue(U2U_CONSTRUCTOR_TYPE.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,285,canTestForEqualityWith(URI_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,286,assertTrue(U2U_CONSTRUCTOR_TYPE.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,287,canTestForEqualityWith(RANGE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,288,assertTrue(U2U_CONSTRUCTOR_TYPE.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,289,canTestForEqualityWith(REFERENCE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,290,assertTrue(U2U_CONSTRUCTOR_TYPE.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,291,canTestForEqualityWith(REGEXP_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,292,assertTrue(U2U_CONSTRUCTOR_TYPE.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,293,canTestForEqualityWith(STRING_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,294,assertTrue(U2U_CONSTRUCTOR_TYPE.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,295,canTestForEqualityWith(STRING_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,296,assertTrue(U2U_CONSTRUCTOR_TYPE.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,297,canTestForEqualityWith(SYNTAX_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,298,assertTrue(U2U_CONSTRUCTOR_TYPE.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,299,canTestForEqualityWith(TYPE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,300,assertFalse(U2U_CONSTRUCTOR_TYPE.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,301,canTestForEqualityWith(VOID_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,303,// canTestForShallowEqualityWith
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,304,assertTrue(U2U_CONSTRUCTOR_TYPE.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,305,canTestForShallowEqualityWith(NO_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,306,assertTrue(U2U_CONSTRUCTOR_TYPE.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,307,canTestForShallowEqualityWith(NO_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,308,assertFalse(U2U_CONSTRUCTOR_TYPE.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,309,canTestForShallowEqualityWith(ARRAY_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,310,assertFalse(U2U_CONSTRUCTOR_TYPE.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,311,canTestForShallowEqualityWith(BOOLEAN_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,312,assertFalse(U2U_CONSTRUCTOR_TYPE.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,313,canTestForShallowEqualityWith(BOOLEAN_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,314,assertFalse(U2U_CONSTRUCTOR_TYPE.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,315,canTestForShallowEqualityWith(DATE_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,316,assertFalse(U2U_CONSTRUCTOR_TYPE.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,317,canTestForShallowEqualityWith(ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,318,assertFalse(U2U_CONSTRUCTOR_TYPE.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,319,canTestForShallowEqualityWith(EVAL_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,320,assertTrue(U2U_CONSTRUCTOR_TYPE.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,321,canTestForShallowEqualityWith(functionType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,322,assertFalse(U2U_CONSTRUCTOR_TYPE.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,323,canTestForShallowEqualityWith(recordType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,324,assertFalse(U2U_CONSTRUCTOR_TYPE.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,325,canTestForShallowEqualityWith(NULL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,326,assertFalse(U2U_CONSTRUCTOR_TYPE.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,327,canTestForShallowEqualityWith(NUMBER_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,328,assertFalse(U2U_CONSTRUCTOR_TYPE.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,329,canTestForShallowEqualityWith(NUMBER_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,330,assertTrue(U2U_CONSTRUCTOR_TYPE.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,331,canTestForShallowEqualityWith(OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,332,assertFalse(U2U_CONSTRUCTOR_TYPE.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,333,canTestForShallowEqualityWith(URI_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,334,assertFalse(U2U_CONSTRUCTOR_TYPE.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,335,canTestForShallowEqualityWith(RANGE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,336,assertFalse(U2U_CONSTRUCTOR_TYPE.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,337,canTestForShallowEqualityWith(REFERENCE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,338,assertFalse(U2U_CONSTRUCTOR_TYPE.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,339,canTestForShallowEqualityWith(REGEXP_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,340,assertFalse(U2U_CONSTRUCTOR_TYPE.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,341,canTestForShallowEqualityWith(STRING_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,342,assertFalse(U2U_CONSTRUCTOR_TYPE.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,343,canTestForShallowEqualityWith(STRING_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,344,assertFalse(U2U_CONSTRUCTOR_TYPE.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,345,canTestForShallowEqualityWith(SYNTAX_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,346,assertFalse(U2U_CONSTRUCTOR_TYPE.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,347,canTestForShallowEqualityWith(TYPE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,348,assertTrue( U2U_CONSTRUCTOR_TYPE.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,349,canTestForShallowEqualityWith(ALL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,350,assertFalse(U2U_CONSTRUCTOR_TYPE.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,351,canTestForShallowEqualityWith(VOID_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,353,// isNullable
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,354,assertFalse(U2U_CONSTRUCTOR_TYPE.isNullable());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,356,// isObject
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,357,assertTrue(U2U_CONSTRUCTOR_TYPE.isObject());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,359,// matchesXxx
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,360,assertFalse(U2U_CONSTRUCTOR_TYPE.matchesInt32Context());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,361,assertFalse(U2U_CONSTRUCTOR_TYPE.matchesNumberContext());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,362,assertTrue(U2U_CONSTRUCTOR_TYPE.matchesObjectContext());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,363,assertFalse(U2U_CONSTRUCTOR_TYPE.matchesStringContext());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,364,assertFalse(U2U_CONSTRUCTOR_TYPE.matchesUint32Context());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,366,// toString
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,367,"assertEquals(""Function"","
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,368,U2U_CONSTRUCTOR_TYPE.toString());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,370,// getPropertyType
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,371,"assertEquals(UNKNOWN_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,372,"U2U_CONSTRUCTOR_TYPE.getPropertyType(""anyProperty""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,374,assertTrue(U2U_CONSTRUCTOR_TYPE.isNative());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,375,assertTrue(U2U_CONSTRUCTOR_TYPE.isNativeObjectType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,379,* Tests the behavior of the Bottom Object yype.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,381,public void testNoObjectType() throws Exception {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,382,// isXxx
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,383,assertTrue(NO_OBJECT_TYPE.isNoObjectType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,384,assertFalse(NO_OBJECT_TYPE.isNoType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,385,assertFalse(NO_OBJECT_TYPE.isArrayType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,386,assertFalse(NO_OBJECT_TYPE.isBooleanValueType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,387,assertFalse(NO_OBJECT_TYPE.isDateType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,388,assertFalse(NO_OBJECT_TYPE.isEnumElementType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,389,assertFalse(NO_OBJECT_TYPE.isNullType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,390,assertFalse(NO_OBJECT_TYPE.isNamedType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,391,assertFalse(NO_OBJECT_TYPE.isNullType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,392,assertTrue(NO_OBJECT_TYPE.isNumber());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,393,assertFalse(NO_OBJECT_TYPE.isNumberObjectType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,394,assertFalse(NO_OBJECT_TYPE.isNumberValueType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,395,assertTrue(NO_OBJECT_TYPE.isObject());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,396,assertFalse(NO_OBJECT_TYPE.isFunctionPrototypeType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,397,assertFalse(NO_OBJECT_TYPE.isRegexpType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,398,assertTrue(NO_OBJECT_TYPE.isString());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,399,assertFalse(NO_OBJECT_TYPE.isStringObjectType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,400,assertFalse(NO_OBJECT_TYPE.isStringValueType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,401,assertFalse(NO_OBJECT_TYPE.isEnumType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,402,assertFalse(NO_OBJECT_TYPE.isUnionType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,403,assertFalse(NO_OBJECT_TYPE.isAllType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,404,assertFalse(NO_OBJECT_TYPE.isVoidType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,405,assertTrue(NO_OBJECT_TYPE.isConstructor());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,406,assertFalse(NO_OBJECT_TYPE.isInstanceType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,408,// canAssignTo
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,409,assertFalse(NO_OBJECT_TYPE.canAssignTo(NO_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,410,assertTrue(NO_OBJECT_TYPE.canAssignTo(NO_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,411,assertTrue(NO_OBJECT_TYPE.isSubtype(ARRAY_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,412,assertFalse(NO_OBJECT_TYPE.canAssignTo(BOOLEAN_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,413,assertTrue(NO_OBJECT_TYPE.canAssignTo(BOOLEAN_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,414,assertTrue(NO_OBJECT_TYPE.canAssignTo(DATE_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,415,assertTrue(NO_OBJECT_TYPE.canAssignTo(ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,416,assertTrue(NO_OBJECT_TYPE.canAssignTo(EVAL_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,417,assertTrue(NO_OBJECT_TYPE.canAssignTo(functionType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,418,assertTrue(NO_OBJECT_TYPE.canAssignTo(recordType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,419,assertFalse(NO_OBJECT_TYPE.canAssignTo(NULL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,420,assertFalse(NO_OBJECT_TYPE.canAssignTo(NUMBER_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,421,assertTrue(NO_OBJECT_TYPE.canAssignTo(NUMBER_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,422,assertTrue(NO_OBJECT_TYPE.canAssignTo(OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,423,assertTrue(NO_OBJECT_TYPE.canAssignTo(URI_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,424,assertTrue(NO_OBJECT_TYPE.canAssignTo(RANGE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,425,assertTrue(NO_OBJECT_TYPE.canAssignTo(REFERENCE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,426,assertTrue(NO_OBJECT_TYPE.canAssignTo(REGEXP_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,427,assertFalse(NO_OBJECT_TYPE.canAssignTo(STRING_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,428,assertTrue(NO_OBJECT_TYPE.canAssignTo(STRING_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,429,assertTrue(NO_OBJECT_TYPE.canAssignTo(SYNTAX_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,430,assertTrue(NO_OBJECT_TYPE.canAssignTo(TYPE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,431,assertTrue(NO_OBJECT_TYPE.canAssignTo(ALL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,432,assertFalse(NO_OBJECT_TYPE.canAssignTo(VOID_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,434,// canTestForEqualityWith
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,435,assertFalse(NO_OBJECT_TYPE.canTestForEqualityWith(NO_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,436,assertFalse(NO_OBJECT_TYPE.canTestForEqualityWith(NO_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,437,assertTrue(NO_OBJECT_TYPE.canTestForEqualityWith(ALL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,438,assertTrue(NO_OBJECT_TYPE.canTestForEqualityWith(ARRAY_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,439,assertTrue(NO_OBJECT_TYPE.canTestForEqualityWith(BOOLEAN_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,440,assertTrue(NO_OBJECT_TYPE.canTestForEqualityWith(BOOLEAN_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,441,assertTrue(NO_OBJECT_TYPE.canTestForEqualityWith(DATE_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,442,assertTrue(NO_OBJECT_TYPE.canTestForEqualityWith(ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,443,assertTrue(NO_OBJECT_TYPE.canTestForEqualityWith(EVAL_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,444,assertTrue(NO_OBJECT_TYPE.canTestForEqualityWith(functionType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,445,assertTrue(NO_OBJECT_TYPE.canTestForEqualityWith(recordType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,446,assertTrue(NO_OBJECT_TYPE.canTestForEqualityWith(NULL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,447,assertTrue(NO_OBJECT_TYPE.canTestForEqualityWith(NUMBER_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,448,assertTrue(NO_OBJECT_TYPE.canTestForEqualityWith(NUMBER_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,449,assertTrue(NO_OBJECT_TYPE.canTestForEqualityWith(OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,450,assertTrue(NO_OBJECT_TYPE.canTestForEqualityWith(URI_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,451,assertTrue(NO_OBJECT_TYPE.canTestForEqualityWith(RANGE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,452,assertTrue(NO_OBJECT_TYPE.canTestForEqualityWith(REFERENCE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,453,assertTrue(NO_OBJECT_TYPE.canTestForEqualityWith(REGEXP_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,454,assertTrue(NO_OBJECT_TYPE.canTestForEqualityWith(STRING_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,455,assertTrue(NO_OBJECT_TYPE.canTestForEqualityWith(STRING_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,456,assertTrue(NO_OBJECT_TYPE.canTestForEqualityWith(SYNTAX_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,457,assertTrue(NO_OBJECT_TYPE.canTestForEqualityWith(TYPE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,458,assertTrue(NO_OBJECT_TYPE.canTestForEqualityWith(VOID_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,460,// canTestForShallowEqualityWith
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,461,assertTrue(NO_OBJECT_TYPE.canTestForShallowEqualityWith(NO_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,462,assertTrue(NO_OBJECT_TYPE.canTestForShallowEqualityWith(NO_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,463,assertTrue(NO_OBJECT_TYPE.canTestForShallowEqualityWith(ARRAY_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,464,assertFalse(NO_OBJECT_TYPE.canTestForShallowEqualityWith(BOOLEAN_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,465,assertTrue(NO_OBJECT_TYPE.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,466,canTestForShallowEqualityWith(BOOLEAN_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,467,assertTrue(NO_OBJECT_TYPE.canTestForShallowEqualityWith(DATE_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,468,assertTrue(NO_OBJECT_TYPE.canTestForShallowEqualityWith(ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,469,assertTrue(NO_OBJECT_TYPE.canTestForShallowEqualityWith(EVAL_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,470,assertTrue(NO_OBJECT_TYPE.canTestForShallowEqualityWith(functionType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,471,assertTrue(NO_OBJECT_TYPE.canTestForShallowEqualityWith(recordType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,472,assertFalse(NO_OBJECT_TYPE.canTestForShallowEqualityWith(NULL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,473,assertFalse(NO_OBJECT_TYPE.canTestForShallowEqualityWith(NUMBER_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,474,assertTrue(NO_OBJECT_TYPE.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,475,canTestForShallowEqualityWith(NUMBER_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,476,assertTrue(NO_OBJECT_TYPE.canTestForShallowEqualityWith(OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,477,assertTrue(NO_OBJECT_TYPE.canTestForShallowEqualityWith(URI_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,478,assertTrue(NO_OBJECT_TYPE.canTestForShallowEqualityWith(RANGE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,479,assertTrue(NO_OBJECT_TYPE.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,480,canTestForShallowEqualityWith(REFERENCE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,481,assertTrue(NO_OBJECT_TYPE.canTestForShallowEqualityWith(REGEXP_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,482,assertFalse(NO_OBJECT_TYPE.canTestForShallowEqualityWith(STRING_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,483,assertTrue(NO_OBJECT_TYPE.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,484,canTestForShallowEqualityWith(STRING_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,485,assertTrue(NO_OBJECT_TYPE.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,486,canTestForShallowEqualityWith(SYNTAX_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,487,assertTrue(NO_OBJECT_TYPE.canTestForShallowEqualityWith(TYPE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,488,assertTrue(NO_OBJECT_TYPE.canTestForShallowEqualityWith(ALL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,489,assertFalse(NO_OBJECT_TYPE.canTestForShallowEqualityWith(VOID_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,491,// isNullable
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,492,assertFalse(NO_OBJECT_TYPE.isNullable());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,494,// isObject
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,495,assertTrue(NO_OBJECT_TYPE.isObject());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,497,// matchesXxx
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,498,assertTrue(NO_OBJECT_TYPE.matchesInt32Context());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,499,assertTrue(NO_OBJECT_TYPE.matchesNumberContext());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,500,assertTrue(NO_OBJECT_TYPE.matchesObjectContext());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,501,assertTrue(NO_OBJECT_TYPE.matchesStringContext());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,502,assertTrue(NO_OBJECT_TYPE.matchesUint32Context());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,504,// toString
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,505,"assertEquals(""NoObject"", NO_OBJECT_TYPE.toString());"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,507,// getPropertyType
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,508,"assertEquals(NO_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,509,"NO_OBJECT_TYPE.getPropertyType(""anyProperty""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,513,* Tests the behavior of the Bottom type.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,515,public void testNoType() throws Exception {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,516,// isXxx
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,517,assertFalse(NO_TYPE.isNoObjectType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,518,assertTrue(NO_TYPE.isNoType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,519,assertFalse(NO_TYPE.isArrayType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,520,assertFalse(NO_TYPE.isBooleanValueType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,521,assertFalse(NO_TYPE.isDateType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,522,assertFalse(NO_TYPE.isEnumElementType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,523,assertFalse(NO_TYPE.isNullType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,524,assertFalse(NO_TYPE.isNamedType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,525,assertFalse(NO_TYPE.isNullType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,526,assertTrue(NO_TYPE.isNumber());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,527,assertFalse(NO_TYPE.isNumberObjectType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,528,assertFalse(NO_TYPE.isNumberValueType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,529,assertTrue(NO_TYPE.isObject());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,530,assertFalse(NO_TYPE.isFunctionPrototypeType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,531,assertFalse(NO_TYPE.isRegexpType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,532,assertTrue(NO_TYPE.isString());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,533,assertFalse(NO_TYPE.isStringObjectType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,534,assertFalse(NO_TYPE.isStringValueType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,535,assertFalse(NO_TYPE.isEnumType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,536,assertFalse(NO_TYPE.isUnionType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,537,assertFalse(NO_TYPE.isAllType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,538,assertFalse(NO_TYPE.isVoidType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,539,assertTrue(NO_TYPE.isConstructor());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,540,assertFalse(NO_TYPE.isInstanceType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,542,// canAssignTo
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,543,assertTrue(NO_TYPE.canAssignTo(NO_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,544,assertTrue(NO_TYPE.canAssignTo(NO_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,545,assertTrue(NO_TYPE.canAssignTo(ARRAY_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,546,assertTrue(NO_TYPE.canAssignTo(BOOLEAN_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,547,assertTrue(NO_TYPE.canAssignTo(BOOLEAN_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,548,assertTrue(NO_TYPE.canAssignTo(DATE_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,549,assertTrue(NO_TYPE.canAssignTo(ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,550,assertTrue(NO_TYPE.canAssignTo(EVAL_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,551,assertTrue(NO_TYPE.canAssignTo(functionType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,552,assertTrue(NO_TYPE.canAssignTo(NULL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,553,assertTrue(NO_TYPE.canAssignTo(NUMBER_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,554,assertTrue(NO_TYPE.canAssignTo(NUMBER_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,555,assertTrue(NO_TYPE.canAssignTo(OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,556,assertTrue(NO_TYPE.canAssignTo(URI_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,557,assertTrue(NO_TYPE.canAssignTo(RANGE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,558,assertTrue(NO_TYPE.canAssignTo(REFERENCE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,559,assertTrue(NO_TYPE.canAssignTo(REGEXP_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,560,assertTrue(NO_TYPE.canAssignTo(STRING_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,561,assertTrue(NO_TYPE.canAssignTo(STRING_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,562,assertTrue(NO_TYPE.canAssignTo(SYNTAX_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,563,assertTrue(NO_TYPE.canAssignTo(TYPE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,564,assertTrue(NO_TYPE.canAssignTo(ALL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,565,assertTrue(NO_TYPE.canAssignTo(VOID_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,567,// canTestForEqualityWith
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,568,assertFalse(NO_TYPE.canTestForEqualityWith(NO_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,569,assertFalse(NO_TYPE.canTestForEqualityWith(NO_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,570,assertTrue(NO_TYPE.canTestForEqualityWith(ARRAY_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,571,assertTrue(NO_TYPE.canTestForEqualityWith(BOOLEAN_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,572,assertTrue(NO_TYPE.canTestForEqualityWith(BOOLEAN_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,573,assertTrue(NO_TYPE.canTestForEqualityWith(DATE_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,574,assertTrue(NO_TYPE.canTestForEqualityWith(ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,575,assertTrue(NO_TYPE.canTestForEqualityWith(EVAL_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,576,assertTrue(NO_TYPE.canTestForEqualityWith(functionType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,577,assertTrue(NO_TYPE.canTestForEqualityWith(NULL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,578,assertTrue(NO_TYPE.canTestForEqualityWith(NUMBER_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,579,assertTrue(NO_TYPE.canTestForEqualityWith(NUMBER_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,580,assertTrue(NO_TYPE.canTestForEqualityWith(OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,581,assertTrue(NO_TYPE.canTestForEqualityWith(URI_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,582,assertTrue(NO_TYPE.canTestForEqualityWith(RANGE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,583,assertTrue(NO_TYPE.canTestForEqualityWith(REFERENCE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,584,assertTrue(NO_TYPE.canTestForEqualityWith(REGEXP_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,585,assertTrue(NO_TYPE.canTestForEqualityWith(STRING_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,586,assertTrue(NO_TYPE.canTestForEqualityWith(STRING_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,587,assertTrue(NO_TYPE.canTestForEqualityWith(SYNTAX_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,588,assertTrue(NO_TYPE.canTestForEqualityWith(TYPE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,589,assertTrue(NO_TYPE.canTestForEqualityWith(ALL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,590,assertTrue(NO_TYPE.canTestForEqualityWith(VOID_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,592,// canTestForShallowEqualityWith
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,593,assertTrue(NO_TYPE.canTestForShallowEqualityWith(NO_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,594,assertTrue(NO_TYPE.canTestForShallowEqualityWith(NO_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,595,assertTrue(NO_TYPE.canTestForShallowEqualityWith(ARRAY_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,596,assertTrue(NO_TYPE.canTestForShallowEqualityWith(BOOLEAN_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,597,assertTrue(NO_TYPE.canTestForShallowEqualityWith(BOOLEAN_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,598,assertTrue(NO_TYPE.canTestForShallowEqualityWith(DATE_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,599,assertTrue(NO_TYPE.canTestForShallowEqualityWith(ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,600,assertTrue(NO_TYPE.canTestForShallowEqualityWith(EVAL_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,601,assertTrue(NO_TYPE.canTestForShallowEqualityWith(functionType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,602,assertTrue(NO_TYPE.canTestForShallowEqualityWith(NULL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,603,assertTrue(NO_TYPE.canTestForShallowEqualityWith(NUMBER_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,604,assertTrue(NO_TYPE.canTestForShallowEqualityWith(NUMBER_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,605,assertTrue(NO_TYPE.canTestForShallowEqualityWith(OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,606,assertTrue(NO_TYPE.canTestForShallowEqualityWith(URI_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,607,assertTrue(NO_TYPE.canTestForShallowEqualityWith(RANGE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,608,assertTrue(NO_TYPE.canTestForShallowEqualityWith(REFERENCE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,609,assertTrue(NO_TYPE.canTestForShallowEqualityWith(REGEXP_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,610,assertTrue(NO_TYPE.canTestForShallowEqualityWith(STRING_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,611,assertTrue(NO_TYPE.canTestForShallowEqualityWith(STRING_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,612,assertTrue(NO_TYPE.canTestForShallowEqualityWith(SYNTAX_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,613,assertTrue(NO_TYPE.canTestForShallowEqualityWith(TYPE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,614,assertTrue(NO_TYPE.canTestForShallowEqualityWith(ALL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,615,assertTrue(NO_TYPE.canTestForShallowEqualityWith(VOID_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,617,// isNullable
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,618,assertTrue(NO_TYPE.isNullable());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,620,// isObject
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,621,assertTrue(NO_TYPE.isObject());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,623,// matchesXxx
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,624,assertTrue(NO_TYPE.matchesInt32Context());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,625,assertTrue(NO_TYPE.matchesNumberContext());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,626,assertTrue(NO_TYPE.matchesObjectContext());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,627,assertTrue(NO_TYPE.matchesStringContext());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,628,assertTrue(NO_TYPE.matchesUint32Context());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,630,// toString
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,631,"assertEquals(""None"", NO_TYPE.toString());"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,633,// getPropertyType
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,634,"assertEquals(NO_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,635,"NO_TYPE.getPropertyType(""anyProperty""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,639,* Tests the behavior of the Array type.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,641,public void testArrayType() throws Exception {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,642,// isXxx
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,643,assertTrue(ARRAY_TYPE.isArrayType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,644,assertFalse(ARRAY_TYPE.isBooleanValueType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,645,assertFalse(ARRAY_TYPE.isDateType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,646,assertFalse(ARRAY_TYPE.isEnumElementType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,647,assertFalse(ARRAY_TYPE.isNamedType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,648,assertFalse(ARRAY_TYPE.isNullType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,649,assertFalse(ARRAY_TYPE.isNumber());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,650,assertFalse(ARRAY_TYPE.isNumberObjectType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,651,assertFalse(ARRAY_TYPE.isNumberValueType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,652,assertTrue(ARRAY_TYPE.isObject());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,653,assertFalse(ARRAY_TYPE.isFunctionPrototypeType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,654,assertTrue(ARRAY_TYPE.getImplicitPrototype().isFunctionPrototypeType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,655,assertFalse(ARRAY_TYPE.isRegexpType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,656,assertFalse(ARRAY_TYPE.isString());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,657,assertFalse(ARRAY_TYPE.isStringObjectType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,658,assertFalse(ARRAY_TYPE.isStringValueType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,659,assertFalse(ARRAY_TYPE.isEnumType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,660,assertFalse(ARRAY_TYPE.isUnionType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,661,assertFalse(ARRAY_TYPE.isAllType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,662,assertFalse(ARRAY_TYPE.isVoidType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,663,assertFalse(ARRAY_TYPE.isConstructor());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,664,assertTrue(ARRAY_TYPE.isInstanceType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,666,// canAssignTo
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,667,assertFalse(ARRAY_TYPE.canAssignTo(NO_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,668,assertFalse(ARRAY_TYPE.canAssignTo(NO_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,669,assertTrue(ARRAY_TYPE.canAssignTo(ALL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,670,assertFalse(ARRAY_TYPE.canAssignTo(STRING_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,671,assertFalse(ARRAY_TYPE.canAssignTo(NUMBER_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,672,assertFalse(ARRAY_TYPE.canAssignTo(functionType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,673,assertFalse(ARRAY_TYPE.canAssignTo(recordType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,674,assertFalse(ARRAY_TYPE.canAssignTo(NULL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,675,assertTrue(ARRAY_TYPE.canAssignTo(OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,676,assertFalse(ARRAY_TYPE.canAssignTo(DATE_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,677,assertTrue(ARRAY_TYPE.canAssignTo(unresolvedNamedType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,678,assertFalse(ARRAY_TYPE.canAssignTo(namedGoogBar));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,679,assertFalse(ARRAY_TYPE.canAssignTo(REGEXP_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,681,// canBeCalled
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,682,assertFalse(ARRAY_TYPE.canBeCalled());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,684,// canTestForEqualityWith
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,685,assertTrue(ARRAY_TYPE.canTestForEqualityWith(NO_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,686,assertTrue(ARRAY_TYPE.canTestForEqualityWith(NO_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,687,assertTrue(ARRAY_TYPE.canTestForEqualityWith(ALL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,688,assertTrue(ARRAY_TYPE.canTestForEqualityWith(STRING_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,689,assertTrue(ARRAY_TYPE.canTestForEqualityWith(NUMBER_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,690,assertTrue(ARRAY_TYPE.canTestForEqualityWith(functionType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,691,assertTrue(ARRAY_TYPE.canTestForEqualityWith(recordType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,692,assertFalse(ARRAY_TYPE.canTestForEqualityWith(VOID_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,693,assertTrue(ARRAY_TYPE.canTestForEqualityWith(OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,694,assertTrue(ARRAY_TYPE.canTestForEqualityWith(DATE_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,695,assertTrue(ARRAY_TYPE.canTestForEqualityWith(REGEXP_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,697,// canTestForShallowEqualityWith
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,698,assertTrue(ARRAY_TYPE.canTestForShallowEqualityWith(NO_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,699,assertTrue(ARRAY_TYPE.canTestForShallowEqualityWith(NO_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,700,assertTrue(ARRAY_TYPE.canTestForShallowEqualityWith(ARRAY_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,701,assertFalse(ARRAY_TYPE.canTestForShallowEqualityWith(BOOLEAN_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,702,assertFalse(ARRAY_TYPE.canTestForShallowEqualityWith(BOOLEAN_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,703,assertFalse(ARRAY_TYPE.canTestForShallowEqualityWith(DATE_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,704,assertFalse(ARRAY_TYPE.canTestForShallowEqualityWith(ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,705,assertFalse(ARRAY_TYPE.canTestForShallowEqualityWith(EVAL_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,706,assertFalse(ARRAY_TYPE.canTestForShallowEqualityWith(functionType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,707,assertFalse(ARRAY_TYPE.canTestForShallowEqualityWith(recordType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,708,assertFalse(ARRAY_TYPE.canTestForShallowEqualityWith(NULL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,709,assertFalse(ARRAY_TYPE.canTestForShallowEqualityWith(NUMBER_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,710,assertFalse(ARRAY_TYPE.canTestForShallowEqualityWith(NUMBER_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,711,assertTrue(ARRAY_TYPE.canTestForShallowEqualityWith(OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,712,assertFalse(ARRAY_TYPE.canTestForShallowEqualityWith(URI_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,713,assertFalse(ARRAY_TYPE.canTestForShallowEqualityWith(RANGE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,714,assertFalse(ARRAY_TYPE.canTestForShallowEqualityWith(REFERENCE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,715,assertFalse(ARRAY_TYPE.canTestForShallowEqualityWith(REGEXP_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,716,assertFalse(ARRAY_TYPE.canTestForShallowEqualityWith(STRING_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,717,assertFalse(ARRAY_TYPE.canTestForShallowEqualityWith(STRING_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,718,assertFalse(ARRAY_TYPE.canTestForShallowEqualityWith(SYNTAX_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,719,assertFalse(ARRAY_TYPE.canTestForShallowEqualityWith(TYPE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,720,assertTrue(ARRAY_TYPE.canTestForShallowEqualityWith(ALL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,721,assertFalse(ARRAY_TYPE.canTestForShallowEqualityWith(VOID_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,723,// isNullable
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,724,assertFalse(ARRAY_TYPE.isNullable());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,725,"assertTrue(createUnionType(ARRAY_TYPE, NULL_TYPE).isNullable());"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,727,// isObject
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,728,assertTrue(ARRAY_TYPE.isObject());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,730,// getLeastSupertype
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,731,"assertEquals(ALL_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,732,ARRAY_TYPE.getLeastSupertype(ALL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,733,"assertEquals(createUnionType(STRING_OBJECT_TYPE, ARRAY_TYPE),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,734,ARRAY_TYPE.getLeastSupertype(STRING_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,735,"assertEquals(createUnionType(NUMBER_TYPE, ARRAY_TYPE),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,736,ARRAY_TYPE.getLeastSupertype(NUMBER_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,737,"assertEquals(createUnionType(ARRAY_TYPE, functionType),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,738,ARRAY_TYPE.getLeastSupertype(functionType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,739,"assertEquals(OBJECT_TYPE, ARRAY_TYPE.getLeastSupertype(OBJECT_TYPE));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,740,"assertEquals(createUnionType(DATE_TYPE, ARRAY_TYPE),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,741,ARRAY_TYPE.getLeastSupertype(DATE_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,742,"assertEquals(createUnionType(REGEXP_TYPE, ARRAY_TYPE),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,743,ARRAY_TYPE.getLeastSupertype(REGEXP_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,745,// getPropertyType
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,746,"assertEquals(17, ARRAY_TYPE.getImplicitPrototype().getPropertiesCount());"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,747,"assertEquals(18, ARRAY_TYPE.getPropertiesCount());"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,748,"assertReturnTypeEquals(ARRAY_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,749,"ARRAY_TYPE.getPropertyType(""constructor""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,750,"assertReturnTypeEquals(STRING_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,751,"ARRAY_TYPE.getPropertyType(""toString""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,752,"assertReturnTypeEquals(STRING_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,753,"ARRAY_TYPE.getPropertyType(""toLocaleString""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,754,"assertReturnTypeEquals(ARRAY_TYPE, ARRAY_TYPE.getPropertyType(""concat""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,755,"assertReturnTypeEquals(STRING_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,756,"ARRAY_TYPE.getPropertyType(""join""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,757,"assertReturnTypeEquals(UNKNOWN_TYPE, ARRAY_TYPE.getPropertyType(""pop""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,758,"assertReturnTypeEquals(NUMBER_TYPE, ARRAY_TYPE.getPropertyType(""push""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,759,"assertReturnTypeEquals(ARRAY_TYPE, ARRAY_TYPE.getPropertyType(""reverse""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,760,"assertReturnTypeEquals(UNKNOWN_TYPE, ARRAY_TYPE.getPropertyType(""shift""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,761,"assertReturnTypeEquals(ARRAY_TYPE, ARRAY_TYPE.getPropertyType(""slice""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,762,"assertReturnTypeEquals(ARRAY_TYPE, ARRAY_TYPE.getPropertyType(""sort""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,763,"assertReturnTypeEquals(ARRAY_TYPE, ARRAY_TYPE.getPropertyType(""splice""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,764,"assertReturnTypeEquals(NUMBER_TYPE, ARRAY_TYPE.getPropertyType(""unshift""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,765,"assertEquals(NUMBER_TYPE, ARRAY_TYPE.getPropertyType(""length""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,767,// isPropertyType*
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,768,"assertPropertyTypeDeclared(ARRAY_TYPE, ""pop"");"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,770,// matchesXxx
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,771,assertFalse(ARRAY_TYPE.matchesInt32Context());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,772,assertFalse(ARRAY_TYPE.matchesNumberContext());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,773,assertTrue(ARRAY_TYPE.matchesObjectContext());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,774,assertTrue(ARRAY_TYPE.matchesStringContext());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,775,assertFalse(ARRAY_TYPE.matchesUint32Context());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,777,// toString
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,778,"assertEquals(""Array"", ARRAY_TYPE.toString());"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,780,assertTrue(ARRAY_TYPE.isNativeObjectType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,784,* Tests the behavior of the unknown type.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,786,public void testUnknownType() throws Exception {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,787,// isXxx
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,788,assertFalse(UNKNOWN_TYPE.isArrayType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,789,assertFalse(UNKNOWN_TYPE.isBooleanObjectType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,790,assertFalse(UNKNOWN_TYPE.isBooleanValueType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,791,assertFalse(UNKNOWN_TYPE.isDateType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,792,assertFalse(UNKNOWN_TYPE.isEnumElementType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,793,assertFalse(UNKNOWN_TYPE.isNamedType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,794,assertFalse(UNKNOWN_TYPE.isNullType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,795,assertFalse(UNKNOWN_TYPE.isNumberObjectType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,796,assertFalse(UNKNOWN_TYPE.isNumberValueType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,797,assertTrue(UNKNOWN_TYPE.isObject());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,798,assertFalse(UNKNOWN_TYPE.isFunctionPrototypeType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,799,assertFalse(UNKNOWN_TYPE.isRegexpType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,800,assertFalse(UNKNOWN_TYPE.isStringObjectType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,801,assertFalse(UNKNOWN_TYPE.isStringValueType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,802,assertFalse(UNKNOWN_TYPE.isEnumType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,803,assertFalse(UNKNOWN_TYPE.isUnionType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,804,assertTrue(UNKNOWN_TYPE.isUnknownType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,805,assertFalse(UNKNOWN_TYPE.isVoidType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,806,assertFalse(UNKNOWN_TYPE.isConstructor());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,807,assertFalse(UNKNOWN_TYPE.isInstanceType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,809,// autoboxesTo
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,810,assertNull(UNKNOWN_TYPE.autoboxesTo());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,812,// canAssignTo
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,813,assertTrue(UNKNOWN_TYPE.canAssignTo(UNKNOWN_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,814,assertTrue(UNKNOWN_TYPE.canAssignTo(STRING_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,815,assertTrue(UNKNOWN_TYPE.canAssignTo(NUMBER_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,816,assertTrue(UNKNOWN_TYPE.canAssignTo(functionType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,817,assertTrue(UNKNOWN_TYPE.canAssignTo(recordType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,818,assertTrue(UNKNOWN_TYPE.canAssignTo(NULL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,819,assertTrue(UNKNOWN_TYPE.canAssignTo(OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,820,assertTrue(UNKNOWN_TYPE.canAssignTo(DATE_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,821,assertTrue(UNKNOWN_TYPE.canAssignTo(namedGoogBar));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,822,assertTrue(UNKNOWN_TYPE.canAssignTo(unresolvedNamedType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,823,assertTrue(UNKNOWN_TYPE.canAssignTo(REGEXP_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,824,assertTrue(UNKNOWN_TYPE.canAssignTo(VOID_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,826,// canBeCalled
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,827,assertTrue(UNKNOWN_TYPE.canBeCalled());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,829,// canTestForEqualityWith
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,830,assertTrue(UNKNOWN_TYPE.canTestForEqualityWith(UNKNOWN_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,831,assertTrue(UNKNOWN_TYPE.canTestForEqualityWith(STRING_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,832,assertTrue(UNKNOWN_TYPE.canTestForEqualityWith(NUMBER_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,833,assertTrue(UNKNOWN_TYPE.canTestForEqualityWith(functionType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,834,assertTrue(UNKNOWN_TYPE.canTestForEqualityWith(recordType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,835,assertTrue(UNKNOWN_TYPE.canTestForEqualityWith(VOID_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,836,assertTrue(UNKNOWN_TYPE.canTestForEqualityWith(OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,837,assertTrue(UNKNOWN_TYPE.canTestForEqualityWith(DATE_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,838,assertTrue(UNKNOWN_TYPE.canTestForEqualityWith(REGEXP_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,839,assertTrue(UNKNOWN_TYPE.canTestForEqualityWith(BOOLEAN_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,841,// canTestForShallowEqualityWith
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,842,assertTrue(UNKNOWN_TYPE.canTestForShallowEqualityWith(UNKNOWN_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,843,assertTrue(UNKNOWN_TYPE.canTestForShallowEqualityWith(STRING_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,844,assertTrue(UNKNOWN_TYPE.canTestForShallowEqualityWith(NUMBER_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,845,assertTrue(UNKNOWN_TYPE.canTestForShallowEqualityWith(functionType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,846,assertTrue(UNKNOWN_TYPE.canTestForShallowEqualityWith(recordType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,847,assertTrue(UNKNOWN_TYPE.canTestForShallowEqualityWith(VOID_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,848,assertTrue(UNKNOWN_TYPE.canTestForShallowEqualityWith(OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,849,assertTrue(UNKNOWN_TYPE.canTestForShallowEqualityWith(DATE_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,850,assertTrue(UNKNOWN_TYPE.canTestForShallowEqualityWith(REGEXP_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,852,// canHaveNullValue
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,853,assertTrue(UNKNOWN_TYPE.isNullable());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,855,// getGreatestCommonType
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,856,"assertEquals(UNKNOWN_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,857,UNKNOWN_TYPE.getLeastSupertype(UNKNOWN_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,858,"assertEquals(UNKNOWN_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,859,UNKNOWN_TYPE.getLeastSupertype(STRING_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,860,"assertEquals(UNKNOWN_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,861,UNKNOWN_TYPE.getLeastSupertype(NUMBER_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,862,"assertEquals(UNKNOWN_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,863,UNKNOWN_TYPE.getLeastSupertype(functionType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,864,"assertEquals(UNKNOWN_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,865,UNKNOWN_TYPE.getLeastSupertype(OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,866,"assertEquals(UNKNOWN_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,867,UNKNOWN_TYPE.getLeastSupertype(DATE_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,868,"assertEquals(UNKNOWN_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,869,UNKNOWN_TYPE.getLeastSupertype(REGEXP_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,871,// matchesXxx
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,872,assertTrue(UNKNOWN_TYPE.matchesInt32Context());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,873,assertTrue(UNKNOWN_TYPE.matchesNumberContext());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,874,assertTrue(UNKNOWN_TYPE.matchesObjectContext());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,875,assertTrue(UNKNOWN_TYPE.matchesStringContext());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,876,assertTrue(UNKNOWN_TYPE.matchesUint32Context());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,878,// isPropertyType*
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,879,"assertPropertyTypeUnknown(UNKNOWN_TYPE, ""XXX"");"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,881,// toString
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,882,"assertEquals(""?"", UNKNOWN_TYPE.toString());"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,886,* Tests the behavior of the unknown type.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,888,public void testAllType() throws Exception {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,889,// isXxx
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,890,assertFalse(ALL_TYPE.isArrayType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,891,assertFalse(ALL_TYPE.isBooleanValueType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,892,assertFalse(ALL_TYPE.isDateType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,893,assertFalse(ALL_TYPE.isEnumElementType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,894,assertFalse(ALL_TYPE.isNamedType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,895,assertFalse(ALL_TYPE.isNullType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,896,assertFalse(ALL_TYPE.isNumber());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,897,assertFalse(ALL_TYPE.isNumberObjectType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,898,assertFalse(ALL_TYPE.isNumberValueType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,899,assertFalse(ALL_TYPE.isObject());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,900,assertFalse(ALL_TYPE.isFunctionPrototypeType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,901,assertFalse(ALL_TYPE.isRegexpType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,902,assertFalse(ALL_TYPE.isString());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,903,assertFalse(ALL_TYPE.isStringObjectType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,904,assertFalse(ALL_TYPE.isStringValueType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,905,assertFalse(ALL_TYPE.isEnumType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,906,assertFalse(ALL_TYPE.isUnionType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,907,assertTrue(ALL_TYPE.isAllType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,908,assertFalse(ALL_TYPE.isVoidType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,909,assertFalse(ALL_TYPE.isConstructor());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,910,assertFalse(ALL_TYPE.isInstanceType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,912,// canAssignTo
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,913,assertFalse(ALL_TYPE.canAssignTo(NO_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,914,assertFalse(ALL_TYPE.canAssignTo(NO_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,915,assertTrue(ALL_TYPE.canAssignTo(ALL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,916,assertFalse(ALL_TYPE.canAssignTo(STRING_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,917,assertFalse(ALL_TYPE.canAssignTo(NUMBER_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,918,assertFalse(ALL_TYPE.canAssignTo(functionType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,919,assertFalse(ALL_TYPE.canAssignTo(recordType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,920,assertFalse(ALL_TYPE.canAssignTo(NULL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,921,assertFalse(ALL_TYPE.canAssignTo(OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,922,assertFalse(ALL_TYPE.canAssignTo(DATE_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,923,assertTrue(ALL_TYPE.canAssignTo(unresolvedNamedType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,924,assertFalse(ALL_TYPE.canAssignTo(namedGoogBar));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,925,assertFalse(ALL_TYPE.canAssignTo(REGEXP_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,926,assertFalse(ALL_TYPE.canAssignTo(VOID_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,927,assertTrue(ALL_TYPE.canAssignTo(UNKNOWN_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,929,// canBeCalled
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,930,assertFalse(ALL_TYPE.canBeCalled());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,932,// canTestForEqualityWith
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,933,assertTrue(ALL_TYPE.canTestForEqualityWith(ALL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,934,assertTrue(ALL_TYPE.canTestForEqualityWith(STRING_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,935,assertTrue(ALL_TYPE.canTestForEqualityWith(NUMBER_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,936,assertTrue(ALL_TYPE.canTestForEqualityWith(functionType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,937,assertTrue(ALL_TYPE.canTestForEqualityWith(recordType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,938,assertTrue(ALL_TYPE.canTestForEqualityWith(VOID_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,939,assertTrue(ALL_TYPE.canTestForEqualityWith(OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,940,assertTrue(ALL_TYPE.canTestForEqualityWith(DATE_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,941,assertTrue(ALL_TYPE.canTestForEqualityWith(REGEXP_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,943,// canTestForShallowEqualityWith
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,944,assertTrue(ALL_TYPE.canTestForShallowEqualityWith(NO_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,945,assertTrue(ALL_TYPE.canTestForShallowEqualityWith(NO_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,946,assertTrue(ALL_TYPE.canTestForShallowEqualityWith(ARRAY_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,947,assertTrue(ALL_TYPE.canTestForShallowEqualityWith(BOOLEAN_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,948,assertTrue(ALL_TYPE.canTestForShallowEqualityWith(BOOLEAN_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,949,assertTrue(ALL_TYPE.canTestForShallowEqualityWith(DATE_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,950,assertTrue(ALL_TYPE.canTestForShallowEqualityWith(ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,951,assertTrue(ALL_TYPE.canTestForShallowEqualityWith(EVAL_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,952,assertTrue(ALL_TYPE.canTestForShallowEqualityWith(functionType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,953,assertTrue(ALL_TYPE.canTestForShallowEqualityWith(recordType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,954,assertTrue(ALL_TYPE.canTestForShallowEqualityWith(NULL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,955,assertTrue(ALL_TYPE.canTestForShallowEqualityWith(NUMBER_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,956,assertTrue(ALL_TYPE.canTestForShallowEqualityWith(NUMBER_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,957,assertTrue(ALL_TYPE.canTestForShallowEqualityWith(OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,958,assertTrue(ALL_TYPE.canTestForShallowEqualityWith(URI_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,959,assertTrue(ALL_TYPE.canTestForShallowEqualityWith(RANGE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,960,assertTrue(ALL_TYPE.canTestForShallowEqualityWith(REFERENCE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,961,assertTrue(ALL_TYPE.canTestForShallowEqualityWith(REGEXP_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,962,assertTrue(ALL_TYPE.canTestForShallowEqualityWith(STRING_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,963,assertTrue(ALL_TYPE.canTestForShallowEqualityWith(STRING_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,964,assertTrue(ALL_TYPE.canTestForShallowEqualityWith(SYNTAX_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,965,assertTrue(ALL_TYPE.canTestForShallowEqualityWith(TYPE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,966,assertTrue(ALL_TYPE.canTestForShallowEqualityWith(ALL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,967,assertTrue(ALL_TYPE.canTestForShallowEqualityWith(VOID_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,969,// isNullable
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,970,assertFalse(ALL_TYPE.isNullable());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,972,// getLeastSupertype
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,973,"assertEquals(ALL_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,974,ALL_TYPE.getLeastSupertype(ALL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,975,"assertEquals(ALL_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,976,ALL_TYPE.getLeastSupertype(STRING_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,977,"assertEquals(ALL_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,978,ALL_TYPE.getLeastSupertype(NUMBER_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,979,"assertEquals(ALL_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,980,ALL_TYPE.getLeastSupertype(functionType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,981,"assertEquals(ALL_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,982,ALL_TYPE.getLeastSupertype(OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,983,"assertEquals(ALL_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,984,ALL_TYPE.getLeastSupertype(DATE_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,985,"assertEquals(ALL_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,986,ALL_TYPE.getLeastSupertype(REGEXP_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,988,// matchesXxx
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,989,assertFalse(ALL_TYPE.matchesInt32Context());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,990,assertFalse(ALL_TYPE.matchesNumberContext());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,991,assertFalse(ALL_TYPE.matchesObjectContext());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,992,assertTrue(ALL_TYPE.matchesStringContext());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,993,assertFalse(ALL_TYPE.matchesUint32Context());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,995,// toString
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,996,"assertEquals(""*"", ALL_TYPE.toString());"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1000,* Tests the behavior of the Object type (the object
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1001,* at the top of the JavaScript hierarchy).
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1003,public void testTheObjectType() throws Exception {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1004,// implicit prototype
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1005,"assertEquals(OBJECT_PROTOTYPE, OBJECT_TYPE.getImplicitPrototype());"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1007,// isXxx
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1008,assertFalse(OBJECT_TYPE.isNoObjectType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1009,assertFalse(OBJECT_TYPE.isNoType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1010,assertFalse(OBJECT_TYPE.isArrayType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1011,assertFalse(OBJECT_TYPE.isBooleanValueType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1012,assertFalse(OBJECT_TYPE.isDateType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1013,assertFalse(OBJECT_TYPE.isEnumElementType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1014,assertFalse(OBJECT_TYPE.isNullType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1015,assertFalse(OBJECT_TYPE.isNamedType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1016,assertFalse(OBJECT_TYPE.isNullType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1017,assertFalse(OBJECT_TYPE.isNumber());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1018,assertFalse(OBJECT_TYPE.isNumberObjectType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1019,assertFalse(OBJECT_TYPE.isNumberValueType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1020,assertTrue(OBJECT_TYPE.isObject());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1021,assertFalse(OBJECT_TYPE.isFunctionPrototypeType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1022,assertTrue(OBJECT_TYPE.getImplicitPrototype().isFunctionPrototypeType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1023,assertFalse(OBJECT_TYPE.isRegexpType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1024,assertFalse(OBJECT_TYPE.isString());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1025,assertFalse(OBJECT_TYPE.isStringObjectType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1026,assertFalse(OBJECT_TYPE.isStringValueType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1027,assertFalse(OBJECT_TYPE.isEnumType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1028,assertFalse(OBJECT_TYPE.isUnionType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1029,assertFalse(OBJECT_TYPE.isAllType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1030,assertFalse(OBJECT_TYPE.isVoidType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1031,assertFalse(OBJECT_TYPE.isConstructor());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1032,assertTrue(OBJECT_TYPE.isInstanceType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1034,// canAssignTo
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1035,assertFalse(OBJECT_TYPE.canAssignTo(NO_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1036,assertTrue(OBJECT_TYPE.canAssignTo(ALL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1037,assertFalse(OBJECT_TYPE.canAssignTo(STRING_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1038,assertFalse(OBJECT_TYPE.canAssignTo(NUMBER_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1039,assertFalse(OBJECT_TYPE.canAssignTo(functionType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1040,assertFalse(OBJECT_TYPE.canAssignTo(recordType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1041,assertFalse(OBJECT_TYPE.canAssignTo(NULL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1042,assertTrue(OBJECT_TYPE.canAssignTo(OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1043,assertFalse(OBJECT_TYPE.canAssignTo(DATE_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1044,assertFalse(OBJECT_TYPE.canAssignTo(namedGoogBar));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1045,assertTrue(OBJECT_TYPE.canAssignTo(unresolvedNamedType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1046,assertFalse(OBJECT_TYPE.canAssignTo(REGEXP_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1047,assertFalse(OBJECT_TYPE.canAssignTo(ARRAY_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1048,assertTrue(OBJECT_TYPE.canAssignTo(UNKNOWN_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1050,// canBeCalled
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1051,assertFalse(OBJECT_TYPE.canBeCalled());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1053,// canTestForEqualityWith
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1054,assertTrue(OBJECT_TYPE.canTestForEqualityWith(ALL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1055,assertTrue(OBJECT_TYPE.canTestForEqualityWith(STRING_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1056,assertTrue(OBJECT_TYPE.canTestForEqualityWith(NUMBER_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1057,assertTrue(OBJECT_TYPE.canTestForEqualityWith(STRING_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1058,assertTrue(OBJECT_TYPE.canTestForEqualityWith(BOOLEAN_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1059,assertTrue(OBJECT_TYPE.canTestForEqualityWith(functionType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1060,assertTrue(OBJECT_TYPE.canTestForEqualityWith(recordType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1061,assertFalse(OBJECT_TYPE.canTestForEqualityWith(VOID_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1062,assertTrue(OBJECT_TYPE.canTestForEqualityWith(OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1063,assertTrue(OBJECT_TYPE.canTestForEqualityWith(DATE_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1064,assertTrue(OBJECT_TYPE.canTestForEqualityWith(REGEXP_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1065,assertTrue(OBJECT_TYPE.canTestForEqualityWith(ARRAY_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1066,assertTrue(OBJECT_TYPE.canTestForEqualityWith(UNKNOWN_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1068,// canTestForShallowEqualityWith
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1069,assertTrue(OBJECT_TYPE.canTestForShallowEqualityWith(NO_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1070,assertTrue(OBJECT_TYPE.canTestForShallowEqualityWith(NO_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1071,assertTrue(OBJECT_TYPE.canTestForShallowEqualityWith(ARRAY_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1072,assertFalse(OBJECT_TYPE.canTestForShallowEqualityWith(BOOLEAN_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1073,assertTrue(OBJECT_TYPE.canTestForShallowEqualityWith(BOOLEAN_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1074,assertTrue(OBJECT_TYPE.canTestForShallowEqualityWith(DATE_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1075,assertTrue(OBJECT_TYPE.canTestForShallowEqualityWith(ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1076,assertTrue(OBJECT_TYPE.canTestForShallowEqualityWith(EVAL_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1077,assertTrue(OBJECT_TYPE.canTestForShallowEqualityWith(functionType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1078,assertTrue(OBJECT_TYPE.canTestForShallowEqualityWith(recordType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1079,assertFalse(OBJECT_TYPE.canTestForShallowEqualityWith(NULL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1080,assertFalse(OBJECT_TYPE.canTestForShallowEqualityWith(NUMBER_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1081,assertTrue(OBJECT_TYPE.canTestForShallowEqualityWith(NUMBER_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1082,assertTrue(OBJECT_TYPE.canTestForShallowEqualityWith(OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1083,assertTrue(OBJECT_TYPE.canTestForShallowEqualityWith(URI_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1084,assertTrue(OBJECT_TYPE.canTestForShallowEqualityWith(RANGE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1085,assertTrue(OBJECT_TYPE.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1086,canTestForShallowEqualityWith(REFERENCE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1087,assertTrue(OBJECT_TYPE.canTestForShallowEqualityWith(REGEXP_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1088,assertFalse(OBJECT_TYPE.canTestForShallowEqualityWith(STRING_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1089,assertTrue(OBJECT_TYPE.canTestForShallowEqualityWith(STRING_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1090,assertTrue(OBJECT_TYPE.canTestForShallowEqualityWith(SYNTAX_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1091,assertTrue(OBJECT_TYPE.canTestForShallowEqualityWith(TYPE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1092,assertTrue(OBJECT_TYPE.canTestForShallowEqualityWith(ALL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1093,assertFalse(OBJECT_TYPE.canTestForShallowEqualityWith(VOID_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1094,assertTrue(OBJECT_TYPE.canTestForShallowEqualityWith(UNKNOWN_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1096,// isNullable
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1097,assertFalse(OBJECT_TYPE.isNullable());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1099,// getLeastSupertype
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1100,"assertEquals(ALL_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1101,OBJECT_TYPE.getLeastSupertype(ALL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1102,"assertEquals(OBJECT_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1103,OBJECT_TYPE.getLeastSupertype(STRING_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1104,"assertEquals(createUnionType(OBJECT_TYPE, NUMBER_TYPE),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1105,OBJECT_TYPE.getLeastSupertype(NUMBER_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1106,"assertEquals(OBJECT_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1107,OBJECT_TYPE.getLeastSupertype(functionType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1108,"assertEquals(OBJECT_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1109,OBJECT_TYPE.getLeastSupertype(OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1110,"assertEquals(OBJECT_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1111,OBJECT_TYPE.getLeastSupertype(DATE_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1112,"assertEquals(OBJECT_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1113,OBJECT_TYPE.getLeastSupertype(REGEXP_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1115,// getPropertyType
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1116,"assertEquals(7, OBJECT_TYPE.getPropertiesCount());"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1117,"assertReturnTypeEquals(OBJECT_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1118,"OBJECT_TYPE.getPropertyType(""constructor""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1119,"assertReturnTypeEquals(STRING_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1120,"OBJECT_TYPE.getPropertyType(""toString""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1121,"assertReturnTypeEquals(STRING_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1122,"OBJECT_TYPE.getPropertyType(""toLocaleString""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1123,"assertReturnTypeEquals(UNKNOWN_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1124,"OBJECT_TYPE.getPropertyType(""valueOf""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1125,"assertReturnTypeEquals(BOOLEAN_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1126,"OBJECT_TYPE.getPropertyType(""hasOwnProperty""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1127,"assertReturnTypeEquals(BOOLEAN_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1128,"OBJECT_TYPE.getPropertyType(""isPrototypeOf""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1129,"assertReturnTypeEquals(BOOLEAN_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1130,"OBJECT_TYPE.getPropertyType(""propertyIsEnumerable""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1132,// matchesXxx
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1133,assertFalse(OBJECT_TYPE.matchesInt32Context());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1134,assertFalse(OBJECT_TYPE.matchesNumberContext());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1135,assertTrue(OBJECT_TYPE.matchesObjectContext());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1136,assertTrue(OBJECT_TYPE.matchesStringContext());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1137,assertFalse(OBJECT_TYPE.matchesUint32Context());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1139,// implicit prototype
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1140,"assertEquals(OBJECT_PROTOTYPE, OBJECT_TYPE.getImplicitPrototype());"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1142,// toString
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1143,"assertEquals(""Object"", OBJECT_TYPE.toString());"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1145,assertTrue(OBJECT_TYPE.isNativeObjectType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1146,assertTrue(OBJECT_TYPE.getImplicitPrototype().isNativeObjectType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1150,* Tests the behavior of the number value type.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1152,public void testNumberObjectType() throws Exception {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1153,// isXxx
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1154,assertFalse(NUMBER_OBJECT_TYPE.isArrayType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1155,assertFalse(NUMBER_OBJECT_TYPE.isBooleanObjectType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1156,assertFalse(NUMBER_OBJECT_TYPE.isBooleanValueType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1157,assertFalse(NUMBER_OBJECT_TYPE.isDateType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1158,assertFalse(NUMBER_OBJECT_TYPE.isEnumElementType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1159,assertFalse(NUMBER_OBJECT_TYPE.isNamedType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1160,assertFalse(NUMBER_OBJECT_TYPE.isNullType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1161,assertTrue(NUMBER_OBJECT_TYPE.isNumber());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1162,assertTrue(NUMBER_OBJECT_TYPE.isNumberObjectType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1163,assertFalse(NUMBER_OBJECT_TYPE.isNumberValueType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1164,assertTrue(NUMBER_OBJECT_TYPE.isObject());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1165,assertFalse(NUMBER_OBJECT_TYPE.isFunctionPrototypeType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1166,assertTrue(NUMBER_OBJECT_TYPE.getImplicitPrototype().isFunctionPrototypeType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1167,assertFalse(NUMBER_OBJECT_TYPE.isRegexpType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1168,assertFalse(NUMBER_OBJECT_TYPE.isString());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1169,assertFalse(NUMBER_OBJECT_TYPE.isStringObjectType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1170,assertFalse(NUMBER_OBJECT_TYPE.isStringValueType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1171,assertFalse(NUMBER_OBJECT_TYPE.isEnumType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1172,assertFalse(NUMBER_OBJECT_TYPE.isUnionType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1173,assertFalse(NUMBER_OBJECT_TYPE.isAllType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1174,assertFalse(NUMBER_OBJECT_TYPE.isVoidType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1175,assertFalse(NUMBER_OBJECT_TYPE.isConstructor());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1176,assertTrue(NUMBER_OBJECT_TYPE.isInstanceType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1178,// autoboxesTo
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1179,"assertEquals(NUMBER_OBJECT_TYPE, NUMBER_TYPE.autoboxesTo());"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1181,// unboxesTo
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1182,"assertEquals(NUMBER_TYPE, NUMBER_OBJECT_TYPE.unboxesTo());"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1184,// canAssignTo
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1185,assertTrue(NUMBER_OBJECT_TYPE.canAssignTo(ALL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1186,assertFalse(NUMBER_OBJECT_TYPE.canAssignTo(STRING_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1187,assertTrue(NUMBER_OBJECT_TYPE.canAssignTo(NUMBER_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1188,assertFalse(NUMBER_OBJECT_TYPE.canAssignTo(functionType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1189,assertFalse(NUMBER_OBJECT_TYPE.canAssignTo(NULL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1190,assertTrue(NUMBER_OBJECT_TYPE.canAssignTo(OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1191,assertFalse(NUMBER_OBJECT_TYPE.canAssignTo(DATE_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1192,assertTrue(NUMBER_OBJECT_TYPE.canAssignTo(unresolvedNamedType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1193,assertFalse(NUMBER_OBJECT_TYPE.canAssignTo(namedGoogBar));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1194,assertTrue(NUMBER_OBJECT_TYPE.canAssignTo(
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1195,"createUnionType(NUMBER_OBJECT_TYPE, NULL_TYPE)));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1196,assertTrue(NUMBER_OBJECT_TYPE.canAssignTo(
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1197,"createUnionType(NUMBER_TYPE, NULL_TYPE)));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1198,assertTrue(NUMBER_OBJECT_TYPE.canAssignTo(UNKNOWN_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1200,// canBeCalled
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1201,assertFalse(NUMBER_OBJECT_TYPE.canBeCalled());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1203,// canTestForEqualityWith
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1204,assertTrue(NUMBER_OBJECT_TYPE.canTestForEqualityWith(NO_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1205,assertTrue(NUMBER_OBJECT_TYPE.canTestForEqualityWith(NO_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1206,assertTrue(NUMBER_OBJECT_TYPE.canTestForEqualityWith(ALL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1207,assertTrue(NUMBER_OBJECT_TYPE.canTestForEqualityWith(NUMBER_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1208,assertTrue(NUMBER_OBJECT_TYPE.canTestForEqualityWith(STRING_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1209,assertTrue(NUMBER_OBJECT_TYPE.canTestForEqualityWith(functionType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1210,assertTrue(NUMBER_OBJECT_TYPE.canTestForEqualityWith(elementsType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1211,assertFalse(NUMBER_OBJECT_TYPE.canTestForEqualityWith(VOID_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1212,assertTrue(NUMBER_OBJECT_TYPE.canTestForEqualityWith(OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1213,assertTrue(NUMBER_OBJECT_TYPE.canTestForEqualityWith(DATE_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1214,assertTrue(NUMBER_OBJECT_TYPE.canTestForEqualityWith(REGEXP_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1215,assertTrue(NUMBER_OBJECT_TYPE.canTestForEqualityWith(ARRAY_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1217,// canTestForShallowEqualityWith
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1218,assertTrue(NUMBER_OBJECT_TYPE.canTestForShallowEqualityWith(NO_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1219,assertTrue(NUMBER_OBJECT_TYPE.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1220,canTestForShallowEqualityWith(NO_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1221,assertFalse(NUMBER_OBJECT_TYPE.canTestForShallowEqualityWith(ARRAY_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1222,assertFalse(NUMBER_OBJECT_TYPE.canTestForShallowEqualityWith(BOOLEAN_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1223,assertFalse(NUMBER_OBJECT_TYPE.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1224,canTestForShallowEqualityWith(BOOLEAN_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1225,assertFalse(NUMBER_OBJECT_TYPE.canTestForShallowEqualityWith(DATE_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1226,assertFalse(NUMBER_OBJECT_TYPE.canTestForShallowEqualityWith(ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1227,assertFalse(NUMBER_OBJECT_TYPE.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1228,canTestForShallowEqualityWith(EVAL_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1229,assertFalse(NUMBER_OBJECT_TYPE.canTestForShallowEqualityWith(functionType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1230,assertFalse(NUMBER_OBJECT_TYPE.canTestForShallowEqualityWith(NULL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1231,assertFalse(NUMBER_OBJECT_TYPE.canTestForShallowEqualityWith(NUMBER_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1232,assertTrue(NUMBER_OBJECT_TYPE.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1233,canTestForShallowEqualityWith(NUMBER_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1234,assertTrue(NUMBER_OBJECT_TYPE.canTestForShallowEqualityWith(OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1235,assertFalse(NUMBER_OBJECT_TYPE.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1236,canTestForShallowEqualityWith(URI_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1237,assertFalse(NUMBER_OBJECT_TYPE.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1238,canTestForShallowEqualityWith(RANGE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1239,assertFalse(NUMBER_OBJECT_TYPE.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1240,canTestForShallowEqualityWith(REFERENCE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1241,assertFalse(NUMBER_OBJECT_TYPE.canTestForShallowEqualityWith(REGEXP_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1242,assertFalse(NUMBER_OBJECT_TYPE.canTestForShallowEqualityWith(STRING_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1243,assertFalse(NUMBER_OBJECT_TYPE.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1244,canTestForShallowEqualityWith(STRING_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1245,assertFalse(NUMBER_OBJECT_TYPE.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1246,canTestForShallowEqualityWith(SYNTAX_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1247,assertFalse(NUMBER_OBJECT_TYPE.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1248,canTestForShallowEqualityWith(TYPE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1249,assertTrue(NUMBER_OBJECT_TYPE.canTestForShallowEqualityWith(ALL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1250,assertFalse(NUMBER_OBJECT_TYPE.canTestForShallowEqualityWith(VOID_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1252,// isNullable
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1253,assertFalse(NUMBER_OBJECT_TYPE.isNullable());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1255,// getLeastSupertype
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1256,"assertEquals(ALL_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1257,NUMBER_OBJECT_TYPE.getLeastSupertype(ALL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1258,"assertEquals(createUnionType(NUMBER_OBJECT_TYPE, STRING_OBJECT_TYPE),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1259,NUMBER_OBJECT_TYPE.getLeastSupertype(STRING_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1260,"assertEquals(createUnionType(NUMBER_OBJECT_TYPE, NUMBER_TYPE),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1261,NUMBER_OBJECT_TYPE.getLeastSupertype(NUMBER_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1262,"assertEquals(createUnionType(NUMBER_OBJECT_TYPE, functionType),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1263,NUMBER_OBJECT_TYPE.getLeastSupertype(functionType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1264,"assertEquals(OBJECT_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1265,NUMBER_OBJECT_TYPE.getLeastSupertype(OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1266,"assertEquals(createUnionType(NUMBER_OBJECT_TYPE, DATE_TYPE),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1267,NUMBER_OBJECT_TYPE.getLeastSupertype(DATE_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1268,"assertEquals(createUnionType(NUMBER_OBJECT_TYPE, REGEXP_TYPE),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1269,NUMBER_OBJECT_TYPE.getLeastSupertype(REGEXP_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1271,// matchesXxx
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1272,assertTrue(NUMBER_OBJECT_TYPE.matchesInt32Context());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1273,assertTrue(NUMBER_OBJECT_TYPE.matchesNumberContext());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1274,assertTrue(NUMBER_OBJECT_TYPE.matchesObjectContext());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1275,assertTrue(NUMBER_OBJECT_TYPE.matchesStringContext());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1276,assertTrue(NUMBER_OBJECT_TYPE.matchesUint32Context());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1278,// toString
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1279,"assertEquals(""Number"", NUMBER_OBJECT_TYPE.toString());"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1281,assertTrue(NUMBER_OBJECT_TYPE.isNativeObjectType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1285,* Tests the behavior of the number value type.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1287,public void testNumberValueType() throws Exception {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1288,// isXxx
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1289,assertFalse(NUMBER_TYPE.isArrayType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1290,assertFalse(NUMBER_TYPE.isBooleanObjectType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1291,assertFalse(NUMBER_TYPE.isBooleanValueType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1292,assertFalse(NUMBER_TYPE.isDateType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1293,assertFalse(NUMBER_TYPE.isEnumElementType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1294,assertFalse(NUMBER_TYPE.isNamedType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1295,assertFalse(NUMBER_TYPE.isNullType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1296,assertTrue(NUMBER_TYPE.isNumber());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1297,assertFalse(NUMBER_TYPE.isNumberObjectType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1298,assertTrue(NUMBER_TYPE.isNumberValueType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1299,assertFalse(NUMBER_TYPE.isFunctionPrototypeType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1300,assertFalse(NUMBER_TYPE.isRegexpType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1301,assertFalse(NUMBER_TYPE.isString());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1302,assertFalse(NUMBER_TYPE.isStringObjectType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1303,assertFalse(NUMBER_TYPE.isStringValueType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1304,assertFalse(NUMBER_TYPE.isEnumType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1305,assertFalse(NUMBER_TYPE.isUnionType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1306,assertFalse(NUMBER_TYPE.isAllType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1307,assertFalse(NUMBER_TYPE.isVoidType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1308,assertFalse(NUMBER_TYPE.isConstructor());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1309,assertFalse(NUMBER_TYPE.isInstanceType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1311,// autoboxesTo
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1312,"assertEquals(NUMBER_OBJECT_TYPE, NUMBER_TYPE.autoboxesTo());"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1314,// canAssignTo
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1315,assertTrue(NUMBER_TYPE.canAssignTo(ALL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1316,assertFalse(NUMBER_TYPE.canAssignTo(STRING_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1317,assertTrue(NUMBER_TYPE.canAssignTo(NUMBER_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1318,assertFalse(NUMBER_TYPE.canAssignTo(functionType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1319,assertFalse(NUMBER_TYPE.canAssignTo(NULL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1320,assertTrue(NUMBER_TYPE.canAssignTo(OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1321,assertFalse(NUMBER_TYPE.canAssignTo(DATE_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1322,assertTrue(NUMBER_TYPE.canAssignTo(unresolvedNamedType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1323,assertFalse(NUMBER_TYPE.canAssignTo(namedGoogBar));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1324,assertTrue(NUMBER_TYPE.canAssignTo(
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1325,"createUnionType(NUMBER_TYPE, NULL_TYPE)));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1326,assertTrue(NUMBER_TYPE.canAssignTo(UNKNOWN_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1328,// canBeCalled
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1329,assertFalse(NUMBER_TYPE.canBeCalled());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1331,// canTestForEqualityWith
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1332,assertTrue(NUMBER_TYPE.canTestForEqualityWith(NO_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1333,assertTrue(NUMBER_TYPE.canTestForEqualityWith(NO_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1334,assertTrue(NUMBER_TYPE.canTestForEqualityWith(ALL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1335,assertTrue(NUMBER_TYPE.canTestForEqualityWith(NUMBER_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1336,assertTrue(NUMBER_TYPE.canTestForEqualityWith(STRING_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1337,assertTrue(NUMBER_TYPE.canTestForEqualityWith(functionType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1338,assertFalse(NUMBER_TYPE.canTestForEqualityWith(VOID_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1339,assertTrue(NUMBER_TYPE.canTestForEqualityWith(OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1340,assertTrue(NUMBER_TYPE.canTestForEqualityWith(DATE_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1341,assertTrue(NUMBER_TYPE.canTestForEqualityWith(REGEXP_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1342,assertTrue(NUMBER_TYPE.canTestForEqualityWith(ARRAY_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1343,assertTrue(NUMBER_TYPE.canTestForEqualityWith(UNKNOWN_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1345,// canTestForShallowEqualityWith
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1346,assertTrue(NUMBER_TYPE.canTestForShallowEqualityWith(NO_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1347,assertFalse(NUMBER_TYPE.canTestForShallowEqualityWith(NO_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1348,assertFalse(NUMBER_TYPE.canTestForShallowEqualityWith(ARRAY_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1349,assertFalse(NUMBER_TYPE.canTestForShallowEqualityWith(BOOLEAN_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1350,assertFalse(NUMBER_TYPE.canTestForShallowEqualityWith(BOOLEAN_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1351,assertFalse(NUMBER_TYPE.canTestForShallowEqualityWith(DATE_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1352,assertFalse(NUMBER_TYPE.canTestForShallowEqualityWith(ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1353,assertFalse(NUMBER_TYPE.canTestForShallowEqualityWith(EVAL_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1354,assertFalse(NUMBER_TYPE.canTestForShallowEqualityWith(functionType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1355,assertFalse(NUMBER_TYPE.canTestForShallowEqualityWith(NULL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1356,assertTrue(NUMBER_TYPE.canTestForShallowEqualityWith(NUMBER_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1357,assertFalse(NUMBER_TYPE.canTestForShallowEqualityWith(NUMBER_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1358,assertFalse(NUMBER_TYPE.canTestForShallowEqualityWith(OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1359,assertFalse(NUMBER_TYPE.canTestForShallowEqualityWith(URI_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1360,assertFalse(NUMBER_TYPE.canTestForShallowEqualityWith(RANGE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1361,assertFalse(NUMBER_TYPE.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1362,canTestForShallowEqualityWith(REFERENCE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1363,assertFalse(NUMBER_TYPE.canTestForShallowEqualityWith(REGEXP_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1364,assertFalse(NUMBER_TYPE.canTestForShallowEqualityWith(STRING_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1365,assertFalse(NUMBER_TYPE.canTestForShallowEqualityWith(STRING_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1366,assertFalse(NUMBER_TYPE.canTestForShallowEqualityWith(SYNTAX_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1367,assertFalse(NUMBER_TYPE.canTestForShallowEqualityWith(TYPE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1368,assertTrue(NUMBER_TYPE.canTestForShallowEqualityWith(ALL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1369,assertFalse(NUMBER_TYPE.canTestForShallowEqualityWith(VOID_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1370,assertTrue(NUMBER_TYPE.canTestForShallowEqualityWith(UNKNOWN_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1372,// isNullable
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1373,assertFalse(NUMBER_TYPE.isNullable());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1375,// getLeastSupertype
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1376,"assertEquals(ALL_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1377,NUMBER_TYPE.getLeastSupertype(ALL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1378,"assertEquals(createUnionType(NUMBER_TYPE, STRING_OBJECT_TYPE),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1379,NUMBER_TYPE.getLeastSupertype(STRING_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1380,"assertEquals(NUMBER_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1381,NUMBER_TYPE.getLeastSupertype(NUMBER_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1382,"assertEquals(createUnionType(NUMBER_TYPE, functionType),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1383,NUMBER_TYPE.getLeastSupertype(functionType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1384,"assertEquals(createUnionType(NUMBER_TYPE, OBJECT_TYPE),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1385,NUMBER_TYPE.getLeastSupertype(OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1386,"assertEquals(createUnionType(NUMBER_TYPE, DATE_TYPE),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1387,NUMBER_TYPE.getLeastSupertype(DATE_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1388,"assertEquals(createUnionType(NUMBER_TYPE, REGEXP_TYPE),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1389,NUMBER_TYPE.getLeastSupertype(REGEXP_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1391,// matchesXxx
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1392,assertTrue(NUMBER_TYPE.matchesInt32Context());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1393,assertTrue(NUMBER_TYPE.matchesNumberContext());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1394,assertTrue(NUMBER_TYPE.matchesObjectContext());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1395,assertTrue(NUMBER_TYPE.matchesStringContext());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1396,assertTrue(NUMBER_TYPE.matchesUint32Context());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1398,// toString
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1399,"assertEquals(""number"", NUMBER_TYPE.toString());"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1403,* Tests the behavior of the null type.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1405,public void testNullType() throws Exception {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1406,// isXxx
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1407,assertFalse(NULL_TYPE.isArrayType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1408,assertFalse(NULL_TYPE.isBooleanValueType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1409,assertFalse(NULL_TYPE.isDateType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1410,assertFalse(NULL_TYPE.isEnumElementType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1411,assertFalse(NULL_TYPE.isNamedType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1412,assertTrue(NULL_TYPE.isNullType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1413,assertFalse(NULL_TYPE.isNumber());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1414,assertFalse(NULL_TYPE.isNumberObjectType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1415,assertFalse(NULL_TYPE.isNumberValueType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1416,assertFalse(NULL_TYPE.isFunctionPrototypeType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1417,assertFalse(NULL_TYPE.isRegexpType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1418,assertFalse(NULL_TYPE.isString());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1419,assertFalse(NULL_TYPE.isStringObjectType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1420,assertFalse(NULL_TYPE.isStringValueType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1421,assertFalse(NULL_TYPE.isEnumType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1422,assertFalse(NULL_TYPE.isUnionType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1423,assertFalse(NULL_TYPE.isAllType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1424,assertFalse(NULL_TYPE.isVoidType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1425,assertFalse(NULL_TYPE.isConstructor());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1426,assertFalse(NULL_TYPE.isInstanceType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1428,// autoboxesTo
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1429,assertNull(NULL_TYPE.autoboxesTo());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1431,// canAssignTo
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1432,assertFalse(NULL_TYPE.canAssignTo(NO_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1433,assertFalse(NULL_TYPE.canAssignTo(NO_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1434,assertTrue(NULL_TYPE.canAssignTo(NULL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1435,assertTrue(NULL_TYPE.canAssignTo(ALL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1436,assertFalse(NULL_TYPE.canAssignTo(STRING_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1437,assertFalse(NULL_TYPE.canAssignTo(NUMBER_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1438,assertFalse(NULL_TYPE.canAssignTo(functionType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1439,assertFalse(NULL_TYPE.canAssignTo(OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1440,assertFalse(NULL_TYPE.canAssignTo(DATE_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1441,assertFalse(NULL_TYPE.canAssignTo(REGEXP_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1442,assertFalse(NULL_TYPE.canAssignTo(ARRAY_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1443,assertTrue(NULL_TYPE.canAssignTo(UNKNOWN_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1445,assertTrue(NULL_TYPE.canAssignTo(createNullableType(NO_OBJECT_TYPE)));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1446,assertTrue(NULL_TYPE.canAssignTo(createNullableType(NO_TYPE)));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1447,assertTrue(NULL_TYPE.canAssignTo(createNullableType(NULL_TYPE)));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1448,assertTrue(NULL_TYPE.canAssignTo(createNullableType(ALL_TYPE)));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1449,assertTrue(NULL_TYPE.canAssignTo(createNullableType(STRING_OBJECT_TYPE)));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1450,assertTrue(NULL_TYPE.canAssignTo(createNullableType(NUMBER_TYPE)));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1451,assertTrue(NULL_TYPE.canAssignTo(createNullableType(functionType)));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1452,assertTrue(NULL_TYPE.canAssignTo(createNullableType(OBJECT_TYPE)));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1453,assertTrue(NULL_TYPE.canAssignTo(createNullableType(DATE_TYPE)));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1454,assertTrue(NULL_TYPE.canAssignTo(createNullableType(REGEXP_TYPE)));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1455,assertTrue(NULL_TYPE.canAssignTo(createNullableType(ARRAY_TYPE)));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1457,// canBeCalled
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1458,assertFalse(NULL_TYPE.canBeCalled());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1460,// canTestForEqualityWith
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1461,assertTrue(NULL_TYPE.canTestForEqualityWith(NO_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1462,assertFalse(NULL_TYPE.canTestForEqualityWith(NO_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1463,assertTrue(NULL_TYPE.canTestForEqualityWith(ALL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1464,assertFalse(NULL_TYPE.canTestForEqualityWith(ARRAY_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1465,assertFalse(NULL_TYPE.canTestForEqualityWith(BOOLEAN_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1466,assertFalse(NULL_TYPE.canTestForEqualityWith(BOOLEAN_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1467,assertFalse(NULL_TYPE.canTestForEqualityWith(DATE_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1468,assertFalse(NULL_TYPE.canTestForEqualityWith(ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1469,assertFalse(NULL_TYPE.canTestForEqualityWith(EVAL_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1470,assertFalse(NULL_TYPE.canTestForEqualityWith(functionType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1471,assertFalse(NULL_TYPE.canTestForEqualityWith(NULL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1472,assertFalse(NULL_TYPE.canTestForEqualityWith(NUMBER_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1473,assertFalse(NULL_TYPE.canTestForEqualityWith(NUMBER_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1474,assertFalse(NULL_TYPE.canTestForEqualityWith(OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1475,assertFalse(NULL_TYPE.canTestForEqualityWith(URI_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1476,assertFalse(NULL_TYPE.canTestForEqualityWith(RANGE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1477,assertFalse(NULL_TYPE.canTestForEqualityWith(REFERENCE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1478,assertFalse(NULL_TYPE.canTestForEqualityWith(REGEXP_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1479,assertFalse(NULL_TYPE.canTestForEqualityWith(STRING_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1480,assertFalse(NULL_TYPE.canTestForEqualityWith(STRING_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1481,assertFalse(NULL_TYPE.canTestForEqualityWith(SYNTAX_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1482,assertFalse(NULL_TYPE.canTestForEqualityWith(TYPE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1483,assertFalse(NULL_TYPE.canTestForEqualityWith(VOID_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1485,// canTestForShallowEqualityWith
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1486,assertTrue(NULL_TYPE.canTestForShallowEqualityWith(NO_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1487,assertFalse(NULL_TYPE.canTestForShallowEqualityWith(NO_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1488,assertFalse(NULL_TYPE.canTestForShallowEqualityWith(ARRAY_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1489,assertFalse(NULL_TYPE.canTestForShallowEqualityWith(BOOLEAN_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1490,assertFalse(NULL_TYPE.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1491,canTestForShallowEqualityWith(BOOLEAN_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1492,assertFalse(NULL_TYPE.canTestForShallowEqualityWith(DATE_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1493,assertFalse(NULL_TYPE.canTestForShallowEqualityWith(ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1494,assertFalse(NULL_TYPE.canTestForShallowEqualityWith(EVAL_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1495,assertFalse(NULL_TYPE.canTestForShallowEqualityWith(functionType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1496,assertTrue(NULL_TYPE.canTestForShallowEqualityWith(NULL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1497,assertFalse(NULL_TYPE.canTestForShallowEqualityWith(NUMBER_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1498,assertFalse(NULL_TYPE.canTestForShallowEqualityWith(NUMBER_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1499,assertFalse(NULL_TYPE.canTestForShallowEqualityWith(OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1500,assertFalse(NULL_TYPE.canTestForShallowEqualityWith(URI_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1501,assertFalse(NULL_TYPE.canTestForShallowEqualityWith(RANGE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1502,assertFalse(NULL_TYPE.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1503,canTestForShallowEqualityWith(REFERENCE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1504,assertFalse(NULL_TYPE.canTestForShallowEqualityWith(REGEXP_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1505,assertFalse(NULL_TYPE.canTestForShallowEqualityWith(STRING_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1506,assertFalse(NULL_TYPE.canTestForShallowEqualityWith(STRING_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1507,assertFalse(NULL_TYPE.canTestForShallowEqualityWith(SYNTAX_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1508,assertFalse(NULL_TYPE.canTestForShallowEqualityWith(TYPE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1509,assertTrue(NULL_TYPE.canTestForShallowEqualityWith(ALL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1510,assertFalse(NULL_TYPE.canTestForShallowEqualityWith(VOID_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1511,assertTrue(NULL_TYPE.canTestForShallowEqualityWith(
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1512,createNullableType(STRING_OBJECT_TYPE)));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1514,// getLeastSupertype
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1515,"assertEquals(NULL_TYPE, NULL_TYPE.getLeastSupertype(NULL_TYPE));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1516,"assertEquals(ALL_TYPE, NULL_TYPE.getLeastSupertype(ALL_TYPE));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1517,"assertEquals(createNullableType(STRING_OBJECT_TYPE),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1518,NULL_TYPE.getLeastSupertype(STRING_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1519,"assertEquals(createNullableType(NUMBER_TYPE),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1520,NULL_TYPE.getLeastSupertype(NUMBER_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1521,"assertEquals(createNullableType(functionType),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1522,NULL_TYPE.getLeastSupertype(functionType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1523,"assertEquals(createNullableType(OBJECT_TYPE),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1524,NULL_TYPE.getLeastSupertype(OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1525,"assertEquals(createNullableType(DATE_TYPE),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1526,NULL_TYPE.getLeastSupertype(DATE_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1527,"assertEquals(createNullableType(REGEXP_TYPE),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1528,NULL_TYPE.getLeastSupertype(REGEXP_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1530,// matchesXxx
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1531,assertTrue(NULL_TYPE.matchesInt32Context());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1532,assertTrue(NULL_TYPE.matchesNumberContext());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1533,assertFalse(NULL_TYPE.matchesObjectContext());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1534,assertTrue(NULL_TYPE.matchesStringContext());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1535,assertTrue(NULL_TYPE.matchesUint32Context());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1537,// matchesObjectContext
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1538,assertFalse(NULL_TYPE.matchesObjectContext());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1540,// toString
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1541,"assertEquals(""null"", NULL_TYPE.toString());"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1545,* Tests the behavior of the Date type.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1547,public void testDateType() throws Exception {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1548,// isXxx
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1549,assertFalse(DATE_TYPE.isArrayType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1550,assertFalse(DATE_TYPE.isBooleanValueType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1551,assertTrue(DATE_TYPE.isDateType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1552,assertFalse(DATE_TYPE.isEnumElementType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1553,assertFalse(DATE_TYPE.isNamedType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1554,assertFalse(DATE_TYPE.isNullType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1555,assertFalse(DATE_TYPE.isNumberValueType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1556,assertFalse(DATE_TYPE.isFunctionPrototypeType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1557,assertTrue(DATE_TYPE.getImplicitPrototype().isFunctionPrototypeType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1558,assertFalse(DATE_TYPE.isRegexpType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1559,assertFalse(DATE_TYPE.isStringValueType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1560,assertFalse(DATE_TYPE.isEnumType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1561,assertFalse(DATE_TYPE.isUnionType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1562,assertFalse(DATE_TYPE.isAllType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1563,assertFalse(DATE_TYPE.isVoidType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1564,assertFalse(DATE_TYPE.isConstructor());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1565,assertTrue(DATE_TYPE.isInstanceType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1567,// autoboxesTo
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1568,assertNull(DATE_TYPE.autoboxesTo());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1570,// canAssignTo
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1571,assertFalse(DATE_TYPE.canAssignTo(NO_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1572,assertFalse(DATE_TYPE.canAssignTo(NO_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1573,assertFalse(DATE_TYPE.isSubtype(ARRAY_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1574,assertFalse(DATE_TYPE.canAssignTo(BOOLEAN_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1575,assertFalse(DATE_TYPE.canAssignTo(BOOLEAN_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1576,assertTrue(DATE_TYPE.canAssignTo(DATE_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1577,assertFalse(DATE_TYPE.canAssignTo(ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1578,assertFalse(DATE_TYPE.canAssignTo(EVAL_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1579,assertFalse(DATE_TYPE.canAssignTo(functionType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1580,assertFalse(DATE_TYPE.canAssignTo(NULL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1581,assertFalse(DATE_TYPE.canAssignTo(NUMBER_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1582,assertFalse(DATE_TYPE.canAssignTo(NUMBER_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1583,assertTrue(DATE_TYPE.canAssignTo(OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1584,assertFalse(DATE_TYPE.canAssignTo(URI_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1585,assertFalse(DATE_TYPE.canAssignTo(RANGE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1586,assertFalse(DATE_TYPE.canAssignTo(REFERENCE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1587,assertFalse(DATE_TYPE.canAssignTo(REGEXP_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1588,assertFalse(DATE_TYPE.canAssignTo(STRING_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1589,assertFalse(DATE_TYPE.canAssignTo(STRING_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1590,assertFalse(DATE_TYPE.canAssignTo(SYNTAX_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1591,assertFalse(DATE_TYPE.canAssignTo(TYPE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1592,assertTrue(DATE_TYPE.canAssignTo(ALL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1593,assertFalse(DATE_TYPE.canAssignTo(VOID_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1595,// canBeCalled
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1596,assertFalse(DATE_TYPE.canBeCalled());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1598,// canTestForEqualityWith
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1599,assertTrue(DATE_TYPE.canTestForEqualityWith(ALL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1600,assertTrue(DATE_TYPE.canTestForEqualityWith(STRING_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1601,assertTrue(DATE_TYPE.canTestForEqualityWith(NUMBER_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1602,assertTrue(DATE_TYPE.canTestForEqualityWith(functionType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1603,assertFalse(DATE_TYPE.canTestForEqualityWith(VOID_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1604,assertTrue(DATE_TYPE.canTestForEqualityWith(OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1605,assertTrue(DATE_TYPE.canTestForEqualityWith(DATE_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1606,assertTrue(DATE_TYPE.canTestForEqualityWith(REGEXP_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1607,assertTrue(DATE_TYPE.canTestForEqualityWith(ARRAY_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1609,// canTestForShallowEqualityWith
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1610,assertTrue(DATE_TYPE.canTestForShallowEqualityWith(NO_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1611,assertTrue(DATE_TYPE.canTestForShallowEqualityWith(NO_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1612,assertFalse(DATE_TYPE.canTestForShallowEqualityWith(ARRAY_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1613,assertFalse(DATE_TYPE.canTestForShallowEqualityWith(BOOLEAN_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1614,assertFalse(DATE_TYPE.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1615,canTestForShallowEqualityWith(BOOLEAN_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1616,assertTrue(DATE_TYPE.canTestForShallowEqualityWith(DATE_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1617,assertFalse(DATE_TYPE.canTestForShallowEqualityWith(ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1618,assertFalse(DATE_TYPE.canTestForShallowEqualityWith(EVAL_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1619,assertFalse(DATE_TYPE.canTestForShallowEqualityWith(functionType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1620,assertFalse(DATE_TYPE.canTestForShallowEqualityWith(NULL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1621,assertFalse(DATE_TYPE.canTestForShallowEqualityWith(NUMBER_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1622,assertFalse(DATE_TYPE.canTestForShallowEqualityWith(NUMBER_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1623,assertTrue(DATE_TYPE.canTestForShallowEqualityWith(OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1624,assertFalse(DATE_TYPE.canTestForShallowEqualityWith(URI_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1625,assertFalse(DATE_TYPE.canTestForShallowEqualityWith(RANGE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1626,assertFalse(DATE_TYPE.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1627,canTestForShallowEqualityWith(REFERENCE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1628,assertFalse(DATE_TYPE.canTestForShallowEqualityWith(REGEXP_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1629,assertFalse(DATE_TYPE.canTestForShallowEqualityWith(STRING_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1630,assertFalse(DATE_TYPE.canTestForShallowEqualityWith(STRING_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1631,assertFalse(DATE_TYPE.canTestForShallowEqualityWith(SYNTAX_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1632,assertFalse(DATE_TYPE.canTestForShallowEqualityWith(TYPE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1633,assertTrue(DATE_TYPE.canTestForShallowEqualityWith(ALL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1634,assertFalse(DATE_TYPE.canTestForShallowEqualityWith(VOID_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1636,// isNullable
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1637,assertFalse(DATE_TYPE.isNullable());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1638,assertTrue(createNullableType(DATE_TYPE).isNullable());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1640,// getLeastSupertype
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1641,"assertEquals(ALL_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1642,DATE_TYPE.getLeastSupertype(ALL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1643,"assertEquals(createUnionType(DATE_TYPE, STRING_OBJECT_TYPE),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1644,DATE_TYPE.getLeastSupertype(STRING_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1645,"assertEquals(createUnionType(DATE_TYPE, NUMBER_TYPE),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1646,DATE_TYPE.getLeastSupertype(NUMBER_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1647,"assertEquals(createUnionType(DATE_TYPE, functionType),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1648,DATE_TYPE.getLeastSupertype(functionType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1649,"assertEquals(OBJECT_TYPE, DATE_TYPE.getLeastSupertype(OBJECT_TYPE));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1650,"assertEquals(DATE_TYPE, DATE_TYPE.getLeastSupertype(DATE_TYPE));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1651,"assertEquals(createUnionType(DATE_TYPE, REGEXP_TYPE),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1652,DATE_TYPE.getLeastSupertype(REGEXP_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1654,// getPropertyType
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1655,"assertEquals(46, DATE_TYPE.getImplicitPrototype().getPropertiesCount());"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1656,"assertEquals(46, DATE_TYPE.getPropertiesCount());"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1657,"assertReturnTypeEquals(DATE_TYPE, DATE_TYPE.getPropertyType(""constructor""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1658,"assertReturnTypeEquals(STRING_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1659,"DATE_TYPE.getPropertyType(""toString""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1660,"assertReturnTypeEquals(STRING_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1661,"DATE_TYPE.getPropertyType(""toDateString""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1662,"assertReturnTypeEquals(STRING_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1663,"DATE_TYPE.getPropertyType(""toTimeString""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1664,"assertReturnTypeEquals(STRING_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1665,"DATE_TYPE.getPropertyType(""toLocaleString""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1666,"assertReturnTypeEquals(STRING_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1667,"DATE_TYPE.getPropertyType(""toLocaleDateString""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1668,"assertReturnTypeEquals(STRING_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1669,"DATE_TYPE.getPropertyType(""toLocaleTimeString""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1670,"assertReturnTypeEquals(NUMBER_TYPE, DATE_TYPE.getPropertyType(""valueOf""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1671,"assertReturnTypeEquals(NUMBER_TYPE, DATE_TYPE.getPropertyType(""getTime""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1672,"assertReturnTypeEquals(NUMBER_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1673,"DATE_TYPE.getPropertyType(""getFullYear""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1674,"assertReturnTypeEquals(NUMBER_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1675,"DATE_TYPE.getPropertyType(""getUTCFullYear""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1676,"assertReturnTypeEquals(NUMBER_TYPE, DATE_TYPE.getPropertyType(""getMonth""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1677,"assertReturnTypeEquals(NUMBER_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1678,"DATE_TYPE.getPropertyType(""getUTCMonth""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1679,"assertReturnTypeEquals(NUMBER_TYPE, DATE_TYPE.getPropertyType(""getDate""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1680,"assertReturnTypeEquals(NUMBER_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1681,"DATE_TYPE.getPropertyType(""getUTCDate""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1682,"assertReturnTypeEquals(NUMBER_TYPE, DATE_TYPE.getPropertyType(""getDay""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1683,"assertReturnTypeEquals(NUMBER_TYPE, DATE_TYPE.getPropertyType(""getUTCDay""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1684,"assertReturnTypeEquals(NUMBER_TYPE, DATE_TYPE.getPropertyType(""getHours""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1685,"assertReturnTypeEquals(NUMBER_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1686,"DATE_TYPE.getPropertyType(""getUTCHours""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1687,"assertReturnTypeEquals(NUMBER_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1688,"DATE_TYPE.getPropertyType(""getMinutes""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1689,"assertReturnTypeEquals(NUMBER_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1690,"DATE_TYPE.getPropertyType(""getUTCMinutes""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1691,"assertReturnTypeEquals(NUMBER_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1692,"DATE_TYPE.getPropertyType(""getSeconds""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1693,"assertReturnTypeEquals(NUMBER_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1694,"DATE_TYPE.getPropertyType(""getUTCSeconds""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1695,"assertReturnTypeEquals(NUMBER_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1696,"DATE_TYPE.getPropertyType(""getMilliseconds""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1697,"assertReturnTypeEquals(NUMBER_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1698,"DATE_TYPE.getPropertyType(""getUTCMilliseconds""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1699,"assertReturnTypeEquals(NUMBER_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1700,"DATE_TYPE.getPropertyType(""getTimezoneOffset""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1701,"assertReturnTypeEquals(NUMBER_TYPE, DATE_TYPE.getPropertyType(""setTime""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1702,"assertReturnTypeEquals(NUMBER_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1703,"DATE_TYPE.getPropertyType(""setMilliseconds""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1704,"assertReturnTypeEquals(NUMBER_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1705,"DATE_TYPE.getPropertyType(""setUTCMilliseconds""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1706,"assertReturnTypeEquals(NUMBER_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1707,"DATE_TYPE.getPropertyType(""setSeconds""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1708,"assertReturnTypeEquals(NUMBER_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1709,"DATE_TYPE.getPropertyType(""setUTCSeconds""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1710,"assertReturnTypeEquals(NUMBER_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1711,"DATE_TYPE.getPropertyType(""setUTCSeconds""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1712,"assertReturnTypeEquals(NUMBER_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1713,"DATE_TYPE.getPropertyType(""setMinutes""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1714,"assertReturnTypeEquals(NUMBER_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1715,"DATE_TYPE.getPropertyType(""setUTCMinutes""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1716,"assertReturnTypeEquals(NUMBER_TYPE, DATE_TYPE.getPropertyType(""setHours""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1717,"assertReturnTypeEquals(NUMBER_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1718,"DATE_TYPE.getPropertyType(""setUTCHours""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1719,"assertReturnTypeEquals(NUMBER_TYPE, DATE_TYPE.getPropertyType(""setDate""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1720,"assertReturnTypeEquals(NUMBER_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1721,"DATE_TYPE.getPropertyType(""setUTCDate""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1722,"assertReturnTypeEquals(NUMBER_TYPE, DATE_TYPE.getPropertyType(""setMonth""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1723,"assertReturnTypeEquals(NUMBER_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1724,"DATE_TYPE.getPropertyType(""setUTCMonth""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1725,"assertReturnTypeEquals(NUMBER_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1726,"DATE_TYPE.getPropertyType(""setFullYear""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1727,"assertReturnTypeEquals(NUMBER_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1728,"DATE_TYPE.getPropertyType(""setUTCFullYear""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1729,"assertReturnTypeEquals(STRING_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1730,"DATE_TYPE.getPropertyType(""toUTCString""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1731,"assertReturnTypeEquals(STRING_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1732,"DATE_TYPE.getPropertyType(""toGMTString""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1734,// matchesXxx
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1735,assertTrue(DATE_TYPE.matchesInt32Context());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1736,assertTrue(DATE_TYPE.matchesNumberContext());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1737,assertTrue(DATE_TYPE.matchesObjectContext());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1738,assertTrue(DATE_TYPE.matchesStringContext());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1739,assertTrue(DATE_TYPE.matchesUint32Context());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1741,// toString
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1742,"assertEquals(""Date"", DATE_TYPE.toString());"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1744,assertTrue(DATE_TYPE.isNativeObjectType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1748,* Tests the behavior of the RegExp type.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1750,public void testRegExpType() throws Exception {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1751,// isXxx
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1752,assertFalse(REGEXP_TYPE.isNoType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1753,assertFalse(REGEXP_TYPE.isNoObjectType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1754,assertFalse(REGEXP_TYPE.isArrayType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1755,assertFalse(REGEXP_TYPE.isBooleanValueType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1756,assertFalse(REGEXP_TYPE.isDateType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1757,assertFalse(REGEXP_TYPE.isEnumElementType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1758,assertFalse(REGEXP_TYPE.isNamedType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1759,assertFalse(REGEXP_TYPE.isNullType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1760,assertFalse(REGEXP_TYPE.isNumberValueType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1761,assertFalse(REGEXP_TYPE.isFunctionPrototypeType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1762,assertTrue(REGEXP_TYPE.getImplicitPrototype().isFunctionPrototypeType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1763,assertTrue(REGEXP_TYPE.isRegexpType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1764,assertFalse(REGEXP_TYPE.isStringValueType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1765,assertFalse(REGEXP_TYPE.isEnumType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1766,assertFalse(REGEXP_TYPE.isUnionType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1767,assertFalse(REGEXP_TYPE.isAllType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1768,assertFalse(REGEXP_TYPE.isVoidType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1770,// autoboxesTo
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1771,assertNull(REGEXP_TYPE.autoboxesTo());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1773,// canAssignTo
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1774,assertFalse(REGEXP_TYPE.canAssignTo(NO_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1775,assertFalse(REGEXP_TYPE.canAssignTo(NO_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1776,assertFalse(REGEXP_TYPE.canAssignTo(ARRAY_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1777,assertFalse(REGEXP_TYPE.canAssignTo(BOOLEAN_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1778,assertFalse(REGEXP_TYPE.canAssignTo(BOOLEAN_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1779,assertFalse(REGEXP_TYPE.canAssignTo(DATE_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1780,assertFalse(REGEXP_TYPE.canAssignTo(ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1781,assertFalse(REGEXP_TYPE.canAssignTo(EVAL_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1782,assertFalse(REGEXP_TYPE.canAssignTo(functionType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1783,assertFalse(REGEXP_TYPE.canAssignTo(NULL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1784,assertFalse(REGEXP_TYPE.canAssignTo(NUMBER_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1785,assertFalse(REGEXP_TYPE.canAssignTo(NUMBER_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1786,assertTrue(REGEXP_TYPE.canAssignTo(OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1787,assertFalse(REGEXP_TYPE.canAssignTo(URI_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1788,assertFalse(REGEXP_TYPE.canAssignTo(RANGE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1789,assertFalse(REGEXP_TYPE.canAssignTo(REFERENCE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1790,assertTrue(REGEXP_TYPE.canAssignTo(REGEXP_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1791,assertFalse(REGEXP_TYPE.canAssignTo(STRING_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1792,assertFalse(REGEXP_TYPE.canAssignTo(STRING_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1793,assertFalse(REGEXP_TYPE.canAssignTo(SYNTAX_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1794,assertFalse(REGEXP_TYPE.canAssignTo(TYPE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1795,assertTrue(REGEXP_TYPE.canAssignTo(ALL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1796,assertFalse(REGEXP_TYPE.canAssignTo(VOID_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1798,// canBeCalled
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1799,assertTrue(REGEXP_TYPE.canBeCalled());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1801,// canTestForEqualityWith
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1802,assertTrue(REGEXP_TYPE.canTestForEqualityWith(ALL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1803,assertTrue(REGEXP_TYPE.canTestForEqualityWith(STRING_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1804,assertTrue(REGEXP_TYPE.canTestForEqualityWith(NUMBER_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1805,assertTrue(REGEXP_TYPE.canTestForEqualityWith(functionType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1806,assertFalse(REGEXP_TYPE.canTestForEqualityWith(VOID_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1807,assertTrue(REGEXP_TYPE.canTestForEqualityWith(OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1808,assertTrue(REGEXP_TYPE.canTestForEqualityWith(DATE_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1809,assertTrue(REGEXP_TYPE.canTestForEqualityWith(REGEXP_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1810,assertTrue(REGEXP_TYPE.canTestForEqualityWith(ARRAY_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1812,// canTestForShallowEqualityWith
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1813,assertTrue(REGEXP_TYPE.canTestForShallowEqualityWith(NO_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1814,assertTrue(REGEXP_TYPE.canTestForShallowEqualityWith(NO_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1815,assertFalse(REGEXP_TYPE.canTestForShallowEqualityWith(ARRAY_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1816,assertFalse(REGEXP_TYPE.canTestForShallowEqualityWith(BOOLEAN_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1817,assertFalse(REGEXP_TYPE.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1818,canTestForShallowEqualityWith(BOOLEAN_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1819,assertFalse(REGEXP_TYPE.canTestForShallowEqualityWith(DATE_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1820,assertFalse(REGEXP_TYPE.canTestForShallowEqualityWith(ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1821,assertFalse(REGEXP_TYPE.canTestForShallowEqualityWith(EVAL_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1822,assertFalse(REGEXP_TYPE.canTestForShallowEqualityWith(functionType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1823,assertFalse(REGEXP_TYPE.canTestForShallowEqualityWith(NULL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1824,assertFalse(REGEXP_TYPE.canTestForShallowEqualityWith(NUMBER_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1825,assertFalse(REGEXP_TYPE.canTestForShallowEqualityWith(NUMBER_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1826,assertTrue(REGEXP_TYPE.canTestForShallowEqualityWith(OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1827,assertFalse(REGEXP_TYPE.canTestForShallowEqualityWith(URI_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1828,assertFalse(REGEXP_TYPE.canTestForShallowEqualityWith(RANGE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1829,assertFalse(REGEXP_TYPE.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1830,canTestForShallowEqualityWith(REFERENCE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1831,assertTrue(REGEXP_TYPE.canTestForShallowEqualityWith(REGEXP_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1832,assertFalse(REGEXP_TYPE.canTestForShallowEqualityWith(STRING_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1833,assertFalse(REGEXP_TYPE.canTestForShallowEqualityWith(STRING_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1834,assertFalse(REGEXP_TYPE.canTestForShallowEqualityWith(SYNTAX_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1835,assertFalse(REGEXP_TYPE.canTestForShallowEqualityWith(TYPE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1836,assertTrue(REGEXP_TYPE.canTestForShallowEqualityWith(ALL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1837,assertFalse(REGEXP_TYPE.canTestForShallowEqualityWith(VOID_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1839,// isNullable
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1840,assertFalse(REGEXP_TYPE.isNullable());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1841,assertTrue(createNullableType(REGEXP_TYPE).isNullable());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1843,// getLeastSupertype
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1844,"assertEquals(ALL_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1845,REGEXP_TYPE.getLeastSupertype(ALL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1846,"assertEquals(createUnionType(REGEXP_TYPE, STRING_OBJECT_TYPE),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1847,REGEXP_TYPE.getLeastSupertype(STRING_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1848,"assertEquals(createUnionType(REGEXP_TYPE, NUMBER_TYPE),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1849,REGEXP_TYPE.getLeastSupertype(NUMBER_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1850,"assertEquals(createUnionType(REGEXP_TYPE, functionType),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1851,REGEXP_TYPE.getLeastSupertype(functionType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1852,"assertEquals(OBJECT_TYPE, REGEXP_TYPE.getLeastSupertype(OBJECT_TYPE));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1853,"assertEquals(createUnionType(DATE_TYPE, REGEXP_TYPE),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1854,REGEXP_TYPE.getLeastSupertype(DATE_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1855,"assertEquals(REGEXP_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1856,REGEXP_TYPE.getLeastSupertype(REGEXP_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1858,// getPropertyType
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1859,"assertEquals(9, REGEXP_TYPE.getImplicitPrototype().getPropertiesCount());"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1860,"assertEquals(14, REGEXP_TYPE.getPropertiesCount());"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1861,"assertReturnTypeEquals(REGEXP_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1862,"REGEXP_TYPE.getPropertyType(""constructor""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1863,"assertReturnTypeEquals(createNullableType(ARRAY_TYPE),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1864,"REGEXP_TYPE.getPropertyType(""exec""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1865,"assertReturnTypeEquals(BOOLEAN_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1866,"REGEXP_TYPE.getPropertyType(""test""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1867,"assertReturnTypeEquals(STRING_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1868,"REGEXP_TYPE.getPropertyType(""toString""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1869,"assertEquals(STRING_TYPE, REGEXP_TYPE.getPropertyType(""source""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1870,"assertEquals(BOOLEAN_TYPE, REGEXP_TYPE.getPropertyType(""global""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1871,"assertEquals(BOOLEAN_TYPE, REGEXP_TYPE.getPropertyType(""ignoreCase""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1872,"assertEquals(BOOLEAN_TYPE, REGEXP_TYPE.getPropertyType(""multiline""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1873,"assertEquals(NUMBER_TYPE, REGEXP_TYPE.getPropertyType(""lastIndex""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1875,// matchesXxx
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1876,assertFalse(REGEXP_TYPE.matchesInt32Context());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1877,assertFalse(REGEXP_TYPE.matchesNumberContext());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1878,assertTrue(REGEXP_TYPE.matchesObjectContext());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1879,assertTrue(REGEXP_TYPE.matchesStringContext());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1880,assertFalse(REGEXP_TYPE.matchesUint32Context());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1882,// toString
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1883,"assertEquals(""RegExp"", REGEXP_TYPE.toString());"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1885,assertTrue(REGEXP_TYPE.isNativeObjectType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1889,* Tests the behavior of the string object type.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1891,public void testStringObjectType() throws Exception {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1892,// isXxx
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1893,assertFalse(STRING_OBJECT_TYPE.isArrayType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1894,assertFalse(STRING_OBJECT_TYPE.isBooleanObjectType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1895,assertFalse(STRING_OBJECT_TYPE.isBooleanValueType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1896,assertFalse(STRING_OBJECT_TYPE.isDateType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1897,assertFalse(STRING_OBJECT_TYPE.isEnumElementType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1898,assertFalse(STRING_OBJECT_TYPE.isNamedType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1899,assertFalse(STRING_OBJECT_TYPE.isNullType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1900,assertFalse(STRING_OBJECT_TYPE.isNumber());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1901,assertFalse(STRING_OBJECT_TYPE.isNumberObjectType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1902,assertFalse(STRING_OBJECT_TYPE.isNumberValueType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1903,assertFalse(STRING_OBJECT_TYPE.isFunctionPrototypeType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1904,assertTrue(STRING_OBJECT_TYPE.getImplicitPrototype().isFunctionPrototypeType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1905,assertFalse(STRING_OBJECT_TYPE.isRegexpType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1906,assertTrue(STRING_OBJECT_TYPE.isString());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1907,assertTrue(STRING_OBJECT_TYPE.isStringObjectType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1908,assertFalse(STRING_OBJECT_TYPE.isStringValueType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1909,assertFalse(STRING_OBJECT_TYPE.isEnumType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1910,assertFalse(STRING_OBJECT_TYPE.isUnionType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1911,assertFalse(STRING_OBJECT_TYPE.isAllType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1912,assertFalse(STRING_OBJECT_TYPE.isVoidType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1913,assertFalse(STRING_OBJECT_TYPE.isConstructor());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1914,assertTrue(STRING_OBJECT_TYPE.isInstanceType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1916,// autoboxesTo
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1917,"assertEquals(STRING_OBJECT_TYPE, STRING_TYPE.autoboxesTo());"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1919,// unboxesTo
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1920,"assertEquals(STRING_TYPE, STRING_OBJECT_TYPE.unboxesTo());"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1922,// canAssignTo
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1923,assertTrue(STRING_OBJECT_TYPE.canAssignTo(ALL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1924,assertTrue(STRING_OBJECT_TYPE.canAssignTo(STRING_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1925,assertTrue(STRING_OBJECT_TYPE.canAssignTo(STRING_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1926,assertTrue(STRING_OBJECT_TYPE.canAssignTo(OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1927,assertFalse(STRING_OBJECT_TYPE.canAssignTo(NUMBER_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1928,assertFalse(STRING_OBJECT_TYPE.canAssignTo(DATE_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1929,assertFalse(STRING_OBJECT_TYPE.canAssignTo(REGEXP_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1930,assertFalse(STRING_OBJECT_TYPE.canAssignTo(ARRAY_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1931,assertTrue(STRING_OBJECT_TYPE.canAssignTo(STRING_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1933,// canBeCalled
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1934,assertFalse(STRING_OBJECT_TYPE.canBeCalled());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1936,// canTestForEqualityWith
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1937,assertTrue(STRING_OBJECT_TYPE.canTestForEqualityWith(ALL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1938,assertTrue(STRING_OBJECT_TYPE.canTestForEqualityWith(STRING_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1939,assertTrue(STRING_OBJECT_TYPE.canTestForEqualityWith(STRING_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1940,assertTrue(STRING_OBJECT_TYPE.canTestForEqualityWith(functionType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1941,assertTrue(STRING_OBJECT_TYPE.canTestForEqualityWith(OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1942,assertTrue(STRING_OBJECT_TYPE.canTestForEqualityWith(NUMBER_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1943,assertTrue(STRING_OBJECT_TYPE.canTestForEqualityWith(BOOLEAN_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1944,assertTrue(STRING_OBJECT_TYPE.canTestForEqualityWith(BOOLEAN_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1945,assertTrue(STRING_OBJECT_TYPE.canTestForEqualityWith(DATE_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1946,assertTrue(STRING_OBJECT_TYPE.canTestForEqualityWith(REGEXP_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1947,assertTrue(STRING_OBJECT_TYPE.canTestForEqualityWith(ARRAY_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1948,assertTrue(STRING_OBJECT_TYPE.canTestForEqualityWith(UNKNOWN_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1950,// canTestForShallowEqualityWith
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1951,assertTrue(STRING_OBJECT_TYPE.canTestForShallowEqualityWith(NO_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1952,assertTrue(STRING_OBJECT_TYPE.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1953,canTestForShallowEqualityWith(NO_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1954,assertFalse(STRING_OBJECT_TYPE.canTestForShallowEqualityWith(ARRAY_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1955,assertFalse(STRING_OBJECT_TYPE.canTestForShallowEqualityWith(BOOLEAN_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1956,assertFalse(STRING_OBJECT_TYPE.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1957,canTestForShallowEqualityWith(BOOLEAN_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1958,assertFalse(STRING_OBJECT_TYPE.canTestForShallowEqualityWith(DATE_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1959,assertFalse(STRING_OBJECT_TYPE.canTestForShallowEqualityWith(ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1960,assertFalse(STRING_OBJECT_TYPE.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1961,canTestForShallowEqualityWith(EVAL_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1962,assertFalse(STRING_OBJECT_TYPE.canTestForShallowEqualityWith(functionType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1963,assertFalse(STRING_OBJECT_TYPE.canTestForShallowEqualityWith(NULL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1964,assertFalse(STRING_OBJECT_TYPE.canTestForShallowEqualityWith(NUMBER_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1965,assertFalse(STRING_OBJECT_TYPE.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1966,canTestForShallowEqualityWith(NUMBER_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1967,assertTrue(STRING_OBJECT_TYPE.canTestForShallowEqualityWith(OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1968,assertFalse(STRING_OBJECT_TYPE.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1969,canTestForShallowEqualityWith(URI_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1970,assertFalse(STRING_OBJECT_TYPE.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1971,canTestForShallowEqualityWith(RANGE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1972,assertFalse(STRING_OBJECT_TYPE.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1973,canTestForShallowEqualityWith(REFERENCE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1974,assertFalse(STRING_OBJECT_TYPE.canTestForShallowEqualityWith(REGEXP_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1975,assertFalse(STRING_OBJECT_TYPE.canTestForShallowEqualityWith(STRING_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1976,assertTrue(STRING_OBJECT_TYPE.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1977,canTestForShallowEqualityWith(STRING_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1978,assertFalse(STRING_OBJECT_TYPE.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1979,canTestForShallowEqualityWith(SYNTAX_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1980,assertFalse(STRING_OBJECT_TYPE.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1981,canTestForShallowEqualityWith(TYPE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1982,assertTrue(STRING_OBJECT_TYPE.canTestForShallowEqualityWith(ALL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1983,assertFalse(STRING_OBJECT_TYPE.canTestForShallowEqualityWith(VOID_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1984,assertTrue(STRING_OBJECT_TYPE.canTestForShallowEqualityWith(UNKNOWN_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1986,// properties (ECMA-262 page 98 - 106)
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1987,"assertEquals(23, STRING_OBJECT_TYPE.getImplicitPrototype()."
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1988,getPropertiesCount());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1989,"assertEquals(24, STRING_OBJECT_TYPE.getPropertiesCount());"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1991,"assertReturnTypeEquals(STRING_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1992,"STRING_OBJECT_TYPE.getPropertyType(""toString""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1993,"assertReturnTypeEquals(STRING_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1994,"STRING_OBJECT_TYPE.getPropertyType(""valueOf""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1995,"assertReturnTypeEquals(STRING_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1996,"STRING_OBJECT_TYPE.getPropertyType(""charAt""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1997,"assertReturnTypeEquals(NUMBER_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1998,"STRING_OBJECT_TYPE.getPropertyType(""charCodeAt""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1999,"assertReturnTypeEquals(STRING_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2000,"STRING_OBJECT_TYPE.getPropertyType(""concat""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2001,"assertReturnTypeEquals(NUMBER_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2002,"STRING_OBJECT_TYPE.getPropertyType(""indexOf""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2003,"assertReturnTypeEquals(NUMBER_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2004,"STRING_OBJECT_TYPE.getPropertyType(""lastIndexOf""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2005,"assertReturnTypeEquals(NUMBER_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2006,"STRING_OBJECT_TYPE.getPropertyType(""localeCompare""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2007,"assertReturnTypeEquals(createNullableType(ARRAY_TYPE),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2008,"STRING_OBJECT_TYPE.getPropertyType(""match""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2009,"assertReturnTypeEquals(STRING_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2010,"STRING_OBJECT_TYPE.getPropertyType(""replace""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2011,"assertReturnTypeEquals(NUMBER_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2012,"STRING_OBJECT_TYPE.getPropertyType(""search""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2013,"assertReturnTypeEquals(STRING_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2014,"STRING_OBJECT_TYPE.getPropertyType(""slice""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2015,"assertReturnTypeEquals(ARRAY_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2016,"STRING_OBJECT_TYPE.getPropertyType(""split""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2017,"assertReturnTypeEquals(STRING_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2018,"STRING_OBJECT_TYPE.getPropertyType(""substring""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2019,"assertReturnTypeEquals(STRING_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2020,"STRING_OBJECT_TYPE.getPropertyType(""toLowerCase""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2021,"assertReturnTypeEquals(STRING_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2022,"STRING_OBJECT_TYPE.getPropertyType(""toLocaleLowerCase""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2023,"assertReturnTypeEquals(STRING_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2024,"STRING_OBJECT_TYPE.getPropertyType(""toUpperCase""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2025,"assertReturnTypeEquals(STRING_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2026,"STRING_OBJECT_TYPE.getPropertyType(""toLocaleUpperCase""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2027,"assertEquals(NUMBER_TYPE, STRING_OBJECT_TYPE.getPropertyType(""length""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2029,// matchesXxx
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2030,assertTrue(STRING_OBJECT_TYPE.matchesInt32Context());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2031,assertTrue(STRING_OBJECT_TYPE.matchesNumberContext());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2032,assertTrue(STRING_OBJECT_TYPE.matchesObjectContext());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2033,assertTrue(STRING_OBJECT_TYPE.matchesStringContext());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2034,assertTrue(STRING_OBJECT_TYPE.matchesUint32Context());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2036,// isNullable
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2037,assertFalse(STRING_OBJECT_TYPE.isNullable());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2038,assertTrue(createNullableType(STRING_OBJECT_TYPE).isNullable());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2040,assertTrue(STRING_OBJECT_TYPE.isNativeObjectType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2044,* Tests the behavior of the string value type.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2046,public void testStringValueType() throws Exception {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2047,// isXxx
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2048,assertFalse(STRING_TYPE.isArrayType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2049,assertFalse(STRING_TYPE.isBooleanObjectType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2050,assertFalse(STRING_TYPE.isBooleanValueType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2051,assertFalse(STRING_TYPE.isDateType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2052,assertFalse(STRING_TYPE.isEnumElementType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2053,assertFalse(STRING_TYPE.isNamedType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2054,assertFalse(STRING_TYPE.isNullType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2055,assertFalse(STRING_TYPE.isNumber());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2056,assertFalse(STRING_TYPE.isNumberObjectType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2057,assertFalse(STRING_TYPE.isNumberValueType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2058,assertFalse(STRING_TYPE.isFunctionPrototypeType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2059,assertFalse(STRING_TYPE.isRegexpType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2060,assertTrue(STRING_TYPE.isString());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2061,assertFalse(STRING_TYPE.isStringObjectType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2062,assertTrue(STRING_TYPE.isStringValueType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2063,assertFalse(STRING_TYPE.isEnumType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2064,assertFalse(STRING_TYPE.isUnionType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2065,assertFalse(STRING_TYPE.isAllType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2066,assertFalse(STRING_TYPE.isVoidType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2067,assertFalse(STRING_TYPE.isConstructor());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2068,assertFalse(STRING_TYPE.isInstanceType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2070,// autoboxesTo
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2071,"assertEquals(STRING_OBJECT_TYPE, STRING_TYPE.autoboxesTo());"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2073,// unboxesTo
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2074,"assertEquals(STRING_TYPE, STRING_OBJECT_TYPE.unboxesTo());"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2076,// canAssignTo
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2077,assertTrue(STRING_TYPE.canAssignTo(ALL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2078,assertTrue(STRING_TYPE.canAssignTo(STRING_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2079,assertFalse(STRING_TYPE.canAssignTo(NUMBER_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2080,assertTrue(STRING_TYPE.canAssignTo(OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2081,assertFalse(STRING_TYPE.canAssignTo(NUMBER_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2082,assertFalse(STRING_TYPE.canAssignTo(DATE_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2083,assertFalse(STRING_TYPE.canAssignTo(REGEXP_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2084,assertFalse(STRING_TYPE.canAssignTo(ARRAY_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2085,assertTrue(STRING_TYPE.canAssignTo(STRING_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2086,assertTrue(STRING_TYPE.canAssignTo(UNKNOWN_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2088,// canBeCalled
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2089,assertFalse(STRING_TYPE.canBeCalled());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2091,// canTestForEqualityWith
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2092,assertTrue(STRING_TYPE.canTestForEqualityWith(ALL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2093,assertTrue(STRING_TYPE.canTestForEqualityWith(STRING_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2094,assertTrue(STRING_TYPE.canTestForEqualityWith(functionType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2095,assertTrue(STRING_TYPE.canTestForEqualityWith(OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2096,assertTrue(STRING_TYPE.canTestForEqualityWith(NUMBER_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2097,assertTrue(STRING_TYPE.canTestForEqualityWith(BOOLEAN_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2098,assertTrue(STRING_TYPE.canTestForEqualityWith(BOOLEAN_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2099,assertTrue(STRING_TYPE.canTestForEqualityWith(DATE_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2100,assertTrue(STRING_TYPE.canTestForEqualityWith(REGEXP_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2101,assertTrue(STRING_TYPE.canTestForEqualityWith(ARRAY_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2102,assertTrue(STRING_TYPE.canTestForEqualityWith(UNKNOWN_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2104,// canTestForShallowEqualityWith
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2105,assertTrue(STRING_TYPE.canTestForShallowEqualityWith(NO_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2106,assertFalse(STRING_TYPE.canTestForShallowEqualityWith(NO_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2107,assertFalse(STRING_TYPE.canTestForShallowEqualityWith(ARRAY_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2108,assertFalse(STRING_TYPE.canTestForShallowEqualityWith(BOOLEAN_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2109,assertFalse(STRING_TYPE.canTestForShallowEqualityWith(BOOLEAN_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2110,assertFalse(STRING_TYPE.canTestForShallowEqualityWith(DATE_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2111,assertFalse(STRING_TYPE.canTestForShallowEqualityWith(ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2112,assertFalse(STRING_TYPE.canTestForShallowEqualityWith(EVAL_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2113,assertFalse(STRING_TYPE.canTestForShallowEqualityWith(functionType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2114,assertFalse(STRING_TYPE.canTestForShallowEqualityWith(NULL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2115,assertFalse(STRING_TYPE.canTestForShallowEqualityWith(NUMBER_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2116,assertFalse(STRING_TYPE.canTestForShallowEqualityWith(NUMBER_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2117,assertFalse(STRING_TYPE.canTestForShallowEqualityWith(OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2118,assertFalse(STRING_TYPE.canTestForShallowEqualityWith(URI_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2119,assertFalse(STRING_TYPE.canTestForShallowEqualityWith(RANGE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2120,assertFalse(STRING_TYPE.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2121,canTestForShallowEqualityWith(REFERENCE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2122,assertFalse(STRING_TYPE.canTestForShallowEqualityWith(REGEXP_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2123,assertTrue(STRING_TYPE.canTestForShallowEqualityWith(STRING_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2124,assertFalse(STRING_TYPE.canTestForShallowEqualityWith(STRING_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2125,assertFalse(STRING_TYPE.canTestForShallowEqualityWith(SYNTAX_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2126,assertFalse(STRING_TYPE.canTestForShallowEqualityWith(TYPE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2127,assertTrue(STRING_TYPE.canTestForShallowEqualityWith(ALL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2128,assertFalse(STRING_TYPE.canTestForShallowEqualityWith(VOID_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2129,assertTrue(STRING_TYPE.canTestForShallowEqualityWith(UNKNOWN_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2131,// matchesXxx
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2132,assertTrue(STRING_TYPE.matchesInt32Context());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2133,assertTrue(STRING_TYPE.matchesNumberContext());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2134,assertTrue(STRING_TYPE.matchesObjectContext());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2135,assertTrue(STRING_TYPE.matchesStringContext());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2136,assertTrue(STRING_TYPE.matchesUint32Context());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2138,// isNullable
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2139,assertFalse(STRING_TYPE.isNullable());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2140,assertTrue(createNullableType(STRING_TYPE).isNullable());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2142,// toString
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2143,"assertEquals(""string"", STRING_TYPE.toString());"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2145,// findPropertyType
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2146,"assertEquals(NUMBER_TYPE, STRING_TYPE.findPropertyType(""length""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2147,"assertEquals(null, STRING_TYPE.findPropertyType(""unknownProperty""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2150,"private void assertPropertyTypeDeclared(ObjectType ownerType, String prop) {"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2151,assertTrue(ownerType.isPropertyTypeDeclared(prop));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2152,assertFalse(ownerType.isPropertyTypeInferred(prop));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2155,"private void assertPropertyTypeInferred(ObjectType ownerType, String prop) {"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2156,assertFalse(ownerType.isPropertyTypeDeclared(prop));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2157,assertTrue(ownerType.isPropertyTypeInferred(prop));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2160,"private void assertPropertyTypeUnknown(ObjectType ownerType, String prop) {"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2161,assertFalse(ownerType.isPropertyTypeDeclared(prop));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2162,assertFalse(ownerType.isPropertyTypeInferred(prop));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2163,assertTrue(ownerType.getPropertyType(prop).isUnknownType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2166,"private void assertReturnTypeEquals(JSType expectedReturnType,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2167,JSType function) {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2168,assertTrue(function instanceof FunctionType);
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2169,"assertEquals(expectedReturnType, ((FunctionType) function).getReturnType());"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2174,* Tests the behavior of record types.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2176,public void testRecordType() throws Exception {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2177,// isXxx
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2178,assertTrue(recordType.isObject());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2179,assertFalse(recordType.isFunctionPrototypeType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2181,// canAssignTo
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2182,assertTrue(recordType.canAssignTo(ALL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2183,assertFalse(recordType.canAssignTo(STRING_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2184,assertFalse(recordType.canAssignTo(NUMBER_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2185,assertFalse(recordType.canAssignTo(DATE_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2186,assertFalse(recordType.canAssignTo(REGEXP_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2187,assertTrue(recordType.canAssignTo(UNKNOWN_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2188,assertTrue(recordType.canAssignTo(OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2189,assertFalse(recordType.canAssignTo(U2U_CONSTRUCTOR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2191,// autoboxesTo
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2192,assertNull(recordType.autoboxesTo());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2194,// canBeCalled
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2195,assertFalse(recordType.canBeCalled());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2197,// canTestForEqualityWith
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2198,assertTrue(recordType.canTestForEqualityWith(ALL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2199,assertTrue(recordType.canTestForEqualityWith(STRING_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2200,assertTrue(recordType.canTestForEqualityWith(recordType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2201,assertTrue(recordType.canTestForEqualityWith(functionType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2202,assertTrue(recordType.canTestForEqualityWith(OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2203,assertTrue(recordType.canTestForEqualityWith(NUMBER_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2204,assertTrue(recordType.canTestForEqualityWith(DATE_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2205,assertTrue(recordType.canTestForEqualityWith(REGEXP_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2207,// canTestForShallowEqualityWith
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2208,assertTrue(recordType.canTestForShallowEqualityWith(NO_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2209,assertTrue(recordType.canTestForShallowEqualityWith(NO_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2210,assertFalse(recordType.canTestForShallowEqualityWith(ARRAY_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2211,assertFalse(recordType.canTestForShallowEqualityWith(BOOLEAN_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2212,assertFalse(recordType.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2213,canTestForShallowEqualityWith(BOOLEAN_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2214,assertFalse(recordType.canTestForShallowEqualityWith(DATE_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2215,assertFalse(recordType.canTestForShallowEqualityWith(ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2216,assertFalse(recordType.canTestForShallowEqualityWith(EVAL_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2217,assertTrue(recordType.canTestForShallowEqualityWith(recordType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2218,assertFalse(recordType.canTestForShallowEqualityWith(NULL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2219,assertFalse(recordType.canTestForShallowEqualityWith(NUMBER_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2220,assertFalse(recordType.canTestForShallowEqualityWith(NUMBER_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2221,assertTrue(recordType.canTestForShallowEqualityWith(OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2222,assertFalse(recordType.canTestForShallowEqualityWith(URI_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2223,assertFalse(recordType.canTestForShallowEqualityWith(RANGE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2224,assertFalse(recordType.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2225,canTestForShallowEqualityWith(REFERENCE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2226,assertFalse(recordType.canTestForShallowEqualityWith(REGEXP_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2227,assertFalse(recordType.canTestForShallowEqualityWith(STRING_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2228,assertFalse(recordType.canTestForShallowEqualityWith(STRING_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2229,assertFalse(recordType.canTestForShallowEqualityWith(SYNTAX_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2230,assertFalse(recordType.canTestForShallowEqualityWith(TYPE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2231,assertTrue(recordType.canTestForShallowEqualityWith(ALL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2232,assertFalse(recordType.canTestForShallowEqualityWith(VOID_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2233,assertTrue(recordType.canTestForShallowEqualityWith(UNKNOWN_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2235,// matchesXxx
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2236,assertFalse(recordType.matchesInt32Context());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2237,assertFalse(recordType.matchesNumberContext());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2238,assertTrue(recordType.matchesObjectContext());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2239,assertFalse(recordType.matchesStringContext());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2240,assertFalse(recordType.matchesUint32Context());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2244,* Tests the behavior of the instance of Function.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2246,public void testFunctionInstanceType() throws Exception {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2247,FunctionType functionInst = FUNCTION_INSTANCE_TYPE;
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2249,// isXxx
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2250,assertTrue(functionInst.isObject());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2251,assertFalse(functionInst.isFunctionPrototypeType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2252,assertTrue(functionInst.getImplicitPrototype()
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2253,.isFunctionPrototypeType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2255,// canAssignTo
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2256,assertTrue(functionInst.canAssignTo(ALL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2257,assertFalse(functionInst.canAssignTo(STRING_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2258,assertFalse(functionInst.canAssignTo(NUMBER_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2259,assertFalse(functionInst.canAssignTo(DATE_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2260,assertFalse(functionInst.canAssignTo(REGEXP_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2261,assertTrue(functionInst.canAssignTo(UNKNOWN_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2262,assertTrue(functionInst.canAssignTo(U2U_CONSTRUCTOR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2264,// autoboxesTo
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2265,assertNull(functionInst.autoboxesTo());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2267,// canBeCalled
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2268,assertTrue(functionInst.canBeCalled());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2270,// canTestForEqualityWith
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2271,assertTrue(functionInst.canTestForEqualityWith(ALL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2272,assertTrue(functionInst.canTestForEqualityWith(STRING_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2273,assertTrue(functionInst.canTestForEqualityWith(functionInst));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2274,assertTrue(functionInst.canTestForEqualityWith(OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2275,assertTrue(functionInst.canTestForEqualityWith(NUMBER_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2276,assertTrue(functionInst.canTestForEqualityWith(DATE_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2277,assertTrue(functionInst.canTestForEqualityWith(REGEXP_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2279,// canTestForShallowEqualityWith
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2280,assertTrue(functionInst.canTestForShallowEqualityWith(NO_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2281,assertTrue(functionInst.canTestForShallowEqualityWith(NO_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2282,assertFalse(functionInst.canTestForShallowEqualityWith(ARRAY_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2283,assertFalse(functionInst.canTestForShallowEqualityWith(BOOLEAN_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2284,assertFalse(functionInst.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2285,canTestForShallowEqualityWith(BOOLEAN_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2286,assertFalse(functionInst.canTestForShallowEqualityWith(DATE_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2287,assertFalse(functionInst.canTestForShallowEqualityWith(ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2288,assertFalse(functionInst.canTestForShallowEqualityWith(EVAL_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2289,assertTrue(functionInst.canTestForShallowEqualityWith(functionInst));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2290,assertFalse(functionInst.canTestForShallowEqualityWith(NULL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2291,assertFalse(functionInst.canTestForShallowEqualityWith(NUMBER_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2292,assertFalse(functionInst.canTestForShallowEqualityWith(NUMBER_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2293,assertTrue(functionInst.canTestForShallowEqualityWith(OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2294,assertFalse(functionInst.canTestForShallowEqualityWith(URI_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2295,assertFalse(functionInst.canTestForShallowEqualityWith(RANGE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2296,assertFalse(functionInst.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2297,canTestForShallowEqualityWith(REFERENCE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2298,assertFalse(functionInst.canTestForShallowEqualityWith(REGEXP_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2299,assertFalse(functionInst.canTestForShallowEqualityWith(STRING_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2300,assertFalse(functionInst.canTestForShallowEqualityWith(STRING_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2301,assertFalse(functionInst.canTestForShallowEqualityWith(SYNTAX_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2302,assertFalse(functionInst.canTestForShallowEqualityWith(TYPE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2303,assertTrue(functionInst.canTestForShallowEqualityWith(ALL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2304,assertFalse(functionInst.canTestForShallowEqualityWith(VOID_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2305,assertTrue(functionInst.canTestForShallowEqualityWith(UNKNOWN_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2307,// matchesXxx
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2308,assertFalse(functionInst.matchesInt32Context());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2309,assertFalse(functionInst.matchesNumberContext());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2310,assertTrue(functionInst.matchesObjectContext());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2311,assertFalse(functionInst.matchesStringContext());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2312,assertFalse(functionInst.matchesUint32Context());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2314,// hasProperty
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2315,"assertTrue(functionInst.hasProperty(""prototype""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2316,"assertPropertyTypeInferred(functionInst, ""prototype"");"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2318,// misc
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2319,"assertEquals(FUNCTION_FUNCTION_TYPE, functionInst.getConstructor());"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2320,"assertEquals(FUNCTION_PROTOTYPE, functionInst.getImplicitPrototype());"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2321,"assertEquals(functionInst, FUNCTION_FUNCTION_TYPE.getInstanceType());"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2325,* Tests the behavior of functional types.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2327,public void testFunctionType() throws Exception {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2328,// isXxx
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2329,assertTrue(functionType.isObject());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2330,assertFalse(functionType.isFunctionPrototypeType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2331,assertTrue(functionType.getImplicitPrototype().getImplicitPrototype()
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2332,.isFunctionPrototypeType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2334,// canAssignTo
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2335,assertTrue(functionType.canAssignTo(ALL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2336,assertFalse(functionType.canAssignTo(STRING_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2337,assertFalse(functionType.canAssignTo(NUMBER_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2338,assertFalse(functionType.canAssignTo(DATE_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2339,assertFalse(functionType.canAssignTo(REGEXP_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2340,assertTrue(functionType.canAssignTo(UNKNOWN_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2341,assertTrue(functionType.canAssignTo(U2U_CONSTRUCTOR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2343,// autoboxesTo
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2344,assertNull(functionType.autoboxesTo());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2346,// canBeCalled
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2347,assertTrue(functionType.canBeCalled());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2349,// canTestForEqualityWith
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2350,assertTrue(functionType.canTestForEqualityWith(ALL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2351,assertTrue(functionType.canTestForEqualityWith(STRING_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2352,assertTrue(functionType.canTestForEqualityWith(functionType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2353,assertTrue(functionType.canTestForEqualityWith(OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2354,assertTrue(functionType.canTestForEqualityWith(NUMBER_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2355,assertTrue(functionType.canTestForEqualityWith(DATE_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2356,assertTrue(functionType.canTestForEqualityWith(REGEXP_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2358,// canTestForShallowEqualityWith
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2359,assertTrue(functionType.canTestForShallowEqualityWith(NO_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2360,assertTrue(functionType.canTestForShallowEqualityWith(NO_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2361,assertFalse(functionType.canTestForShallowEqualityWith(ARRAY_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2362,assertFalse(functionType.canTestForShallowEqualityWith(BOOLEAN_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2363,assertFalse(functionType.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2364,canTestForShallowEqualityWith(BOOLEAN_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2365,assertFalse(functionType.canTestForShallowEqualityWith(DATE_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2366,assertFalse(functionType.canTestForShallowEqualityWith(ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2367,assertFalse(functionType.canTestForShallowEqualityWith(EVAL_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2368,assertTrue(functionType.canTestForShallowEqualityWith(functionType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2369,assertFalse(functionType.canTestForShallowEqualityWith(NULL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2370,assertFalse(functionType.canTestForShallowEqualityWith(NUMBER_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2371,assertFalse(functionType.canTestForShallowEqualityWith(NUMBER_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2372,assertTrue(functionType.canTestForShallowEqualityWith(OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2373,assertFalse(functionType.canTestForShallowEqualityWith(URI_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2374,assertFalse(functionType.canTestForShallowEqualityWith(RANGE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2375,assertFalse(functionType.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2376,canTestForShallowEqualityWith(REFERENCE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2377,assertFalse(functionType.canTestForShallowEqualityWith(REGEXP_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2378,assertFalse(functionType.canTestForShallowEqualityWith(STRING_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2379,assertFalse(functionType.canTestForShallowEqualityWith(STRING_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2380,assertFalse(functionType.canTestForShallowEqualityWith(SYNTAX_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2381,assertFalse(functionType.canTestForShallowEqualityWith(TYPE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2382,assertTrue(functionType.canTestForShallowEqualityWith(ALL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2383,assertFalse(functionType.canTestForShallowEqualityWith(VOID_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2384,assertTrue(functionType.canTestForShallowEqualityWith(UNKNOWN_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2386,// matchesXxx
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2387,assertFalse(functionType.matchesInt32Context());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2388,assertFalse(functionType.matchesNumberContext());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2389,assertTrue(functionType.matchesObjectContext());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2390,assertFalse(functionType.matchesStringContext());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2391,assertFalse(functionType.matchesUint32Context());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2393,// hasProperty
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2394,"assertTrue(functionType.hasProperty(""prototype""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2395,"assertPropertyTypeInferred(functionType, ""prototype"");"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2399,* Tests the subtyping relation of record types.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2401,public void testRecordTypeSubtyping() {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2402,RecordTypeBuilder builder = new RecordTypeBuilder(registry);
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2403,"builder.addProperty(""a"", NUMBER_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2404,"builder.addProperty(""b"", STRING_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2405,"builder.addProperty(""c"", STRING_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2406,JSType subRecordType = builder.build();
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2408,assertTrue(subRecordType.isSubtype(recordType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2409,assertFalse(recordType.isSubtype(subRecordType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2411,builder = new RecordTypeBuilder(registry);
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2412,"builder.addProperty(""a"", OBJECT_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2413,"builder.addProperty(""b"", STRING_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2414,JSType differentRecordType = builder.build();
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2416,assertFalse(differentRecordType.isSubtype(recordType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2417,assertFalse(recordType.isSubtype(differentRecordType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2421,* Tests the subtyping relation of record types when an object has
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2422,* an inferred property..
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2424,public void testRecordTypeSubtypingWithInferredProperties() {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2425,RecordTypeBuilder builder = new RecordTypeBuilder(registry);
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2426,"builder.addProperty(""a"", googSubBarInst);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2427,JSType record = builder.build();
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2429,ObjectType subtypeProp = registry.createAnonymousObjectType();
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2430,"subtypeProp.defineInferredProperty(""a"", googSubSubBarInst, false);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2431,assertTrue(subtypeProp.isSubtype(record));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2432,assertFalse(record.isSubtype(subtypeProp));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2434,ObjectType supertypeProp = registry.createAnonymousObjectType();
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2435,"supertypeProp.defineInferredProperty(""a"", googBarInst, false);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2436,assertFalse(supertypeProp.isSubtype(record));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2437,assertFalse(record.isSubtype(supertypeProp));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2439,ObjectType declaredSubtypeProp = registry.createAnonymousObjectType();
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2440,"declaredSubtypeProp.defineDeclaredProperty(""a"", googSubSubBarInst, false);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2441,assertFalse(declaredSubtypeProp.isSubtype(record));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2442,assertFalse(record.isSubtype(declaredSubtypeProp));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2446,* Tests the getLeastSupertype method for record types.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2448,public void testRecordTypeLeastSuperType1() {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2449,RecordTypeBuilder builder = new RecordTypeBuilder(registry);
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2450,"builder.addProperty(""a"", NUMBER_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2451,"builder.addProperty(""b"", STRING_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2452,"builder.addProperty(""c"", STRING_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2453,JSType subRecordType = builder.build();
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2455,JSType leastSupertype = recordType.getLeastSupertype(subRecordType);
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2456,"assertEquals(leastSupertype, recordType);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2459,public void testRecordTypeLeastSuperType2() {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2460,RecordTypeBuilder builder = new RecordTypeBuilder(registry);
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2461,"builder.addProperty(""e"", NUMBER_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2462,"builder.addProperty(""b"", STRING_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2463,"builder.addProperty(""c"", STRING_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2464,JSType subRecordType = builder.build();
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2466,JSType leastSupertype = recordType.getLeastSupertype(subRecordType);
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2468,builder = new RecordTypeBuilder(registry);
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2469,"builder.addProperty(""b"", STRING_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2471,"assertEquals(leastSupertype, builder.build());"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2474,public void testRecordTypeLeastSuperType3() {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2475,RecordTypeBuilder builder = new RecordTypeBuilder(registry);
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2476,"builder.addProperty(""d"", NUMBER_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2477,"builder.addProperty(""e"", STRING_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2478,"builder.addProperty(""f"", STRING_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2479,JSType subRecordType = builder.build();
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2481,JSType leastSupertype = recordType.getLeastSupertype(subRecordType);
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2482,"assertEquals(leastSupertype, OBJECT_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2485,public void testRecordTypeLeastSuperType4() {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2486,JSType leastSupertype = recordType.getLeastSupertype(OBJECT_TYPE);
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2487,"assertEquals(leastSupertype, OBJECT_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2491,* Tests the getGreastestSubtype method for record types.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2493,public void testRecordTypeGreatestSubType1() {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2494,RecordTypeBuilder builder = new RecordTypeBuilder(registry);
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2495,"builder.addProperty(""d"", NUMBER_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2496,"builder.addProperty(""e"", STRING_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2497,"builder.addProperty(""f"", STRING_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2499,JSType subRecordType = builder.build();
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2501,JSType subtype = recordType.getGreatestSubtype(subRecordType);
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2503,builder = new RecordTypeBuilder(registry);
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2504,"builder.addProperty(""d"", NUMBER_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2505,"builder.addProperty(""e"", STRING_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2506,"builder.addProperty(""f"", STRING_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2507,"builder.addProperty(""a"", NUMBER_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2508,"builder.addProperty(""b"", STRING_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2510,"assertEquals(subtype, builder.build());"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2513,public void testRecordTypeGreatestSubType2() {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2514,RecordTypeBuilder builder = new RecordTypeBuilder(registry);
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2516,JSType subRecordType = builder.build();
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2518,JSType subtype = recordType.getGreatestSubtype(subRecordType);
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2520,builder = new RecordTypeBuilder(registry);
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2521,"builder.addProperty(""a"", NUMBER_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2522,"builder.addProperty(""b"", STRING_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2524,"assertEquals(subtype, builder.build());"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2527,public void testRecordTypeGreatestSubType3() {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2528,RecordTypeBuilder builder = new RecordTypeBuilder(registry);
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2529,"builder.addProperty(""a"", NUMBER_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2530,"builder.addProperty(""b"", STRING_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2531,"builder.addProperty(""c"", STRING_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2533,JSType subRecordType = builder.build();
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2535,JSType subtype = recordType.getGreatestSubtype(subRecordType);
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2537,builder = new RecordTypeBuilder(registry);
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2538,"builder.addProperty(""a"", NUMBER_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2539,"builder.addProperty(""b"", STRING_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2540,"builder.addProperty(""c"", STRING_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2542,"assertEquals(subtype, builder.build());"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2545,public void testRecordTypeGreatestSubType4() {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2546,RecordTypeBuilder builder = new RecordTypeBuilder(registry);
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2547,"builder.addProperty(""a"", STRING_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2548,"builder.addProperty(""b"", STRING_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2549,"builder.addProperty(""c"", STRING_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2551,JSType subRecordType = builder.build();
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2553,JSType subtype = recordType.getGreatestSubtype(subRecordType);
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2554,"assertEquals(subtype, NO_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2557,public void testRecordTypeGreatestSubType5() {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2558,RecordTypeBuilder builder = new RecordTypeBuilder(registry);
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2559,"builder.addProperty(""a"", STRING_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2561,JSType recordType = builder.build();
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2563,"assertEquals(NO_OBJECT_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2564,recordType.getGreatestSubtype(U2U_CONSTRUCTOR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2566,"// if Function is given a property ""a"" of type ""string"", then it's"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2567,// a subtype of the record type {a: string}.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2568,"U2U_CONSTRUCTOR_TYPE.defineDeclaredProperty(""a"", STRING_TYPE, false);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2569,"assertEquals(U2U_CONSTRUCTOR_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2570,recordType.getGreatestSubtype(U2U_CONSTRUCTOR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2571,"assertEquals(U2U_CONSTRUCTOR_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2572,U2U_CONSTRUCTOR_TYPE.getGreatestSubtype(recordType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2575,public void testRecordTypeGreatestSubType6() {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2576,RecordTypeBuilder builder = new RecordTypeBuilder(registry);
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2577,"builder.addProperty(""x"", UNKNOWN_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2579,JSType recordType = builder.build();
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2581,"assertEquals(NO_OBJECT_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2582,recordType.getGreatestSubtype(U2U_CONSTRUCTOR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2584,"// if Function is given a property ""x"" of type ""string"", then it's"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2585,// also a subtype of the record type {x: ?}.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2586,"U2U_CONSTRUCTOR_TYPE.defineDeclaredProperty(""x"", STRING_TYPE, false);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2587,"assertEquals(U2U_CONSTRUCTOR_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2588,recordType.getGreatestSubtype(U2U_CONSTRUCTOR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2589,"assertEquals(U2U_CONSTRUCTOR_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2590,U2U_CONSTRUCTOR_TYPE.getGreatestSubtype(recordType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2593,public void testRecordTypeGreatestSubType7() {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2594,RecordTypeBuilder builder = new RecordTypeBuilder(registry);
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2595,"builder.addProperty(""x"", NUMBER_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2597,JSType recordType = builder.build();
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2599,"// if Function is given a property ""x"" of type ""string"", then it's"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2600,// not a subtype of the record type {x: number}.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2601,"U2U_CONSTRUCTOR_TYPE.defineDeclaredProperty(""x"", STRING_TYPE, false);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2602,"assertEquals(NO_OBJECT_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2603,recordType.getGreatestSubtype(U2U_CONSTRUCTOR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2605,public void testRecordTypeGreatestSubType8() {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2606,RecordTypeBuilder builder = new RecordTypeBuilder(registry);
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2607,"builder.addProperty(""xyz"", UNKNOWN_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2609,JSType recordType = builder.build();
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2611,"assertEquals(NO_OBJECT_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2612,recordType.getGreatestSubtype(U2U_CONSTRUCTOR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2614,"// if goog.Bar is given a property ""xyz"" of type ""string"", then it's"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2615,// also a subtype of the record type {x: ?}.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2616,"googBar.defineDeclaredProperty(""xyz"", STRING_TYPE, false);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2618,"assertEquals(googBar,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2619,recordType.getGreatestSubtype(U2U_CONSTRUCTOR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2620,"assertEquals(googBar,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2621,U2U_CONSTRUCTOR_TYPE.getGreatestSubtype(recordType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2623,ObjectType googBarInst = googBar.getInstanceType();
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2624,"assertEquals(NO_OBJECT_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2625,recordType.getGreatestSubtype(googBarInst));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2626,"assertEquals(NO_OBJECT_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2627,googBarInst.getGreatestSubtype(recordType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2631,"* Tests the ""apply"" method on the function type."
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2633,public void testApplyOfDateMethod() {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2634,"JSType applyType = dateMethod.getPropertyType(""apply"");"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2635,"assertTrue(""apply should be a function"","
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2636,applyType instanceof FunctionType);
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2638,FunctionType applyFn = (FunctionType) applyType;
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2639,"assertEquals(""apply should have the same return type as its function"","
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2640,"NUMBER_TYPE, applyFn.getReturnType());"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2642,Node params = applyFn.getParametersNode();
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2643,"assertEquals(""apply takes two args"","
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2644,"2, params.getChildCount());"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2645,"assertEquals(""apply's first arg is the @this type"","
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2646,"registry.createOptionalNullableType(DATE_TYPE),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2647,params.getFirstChild().getJSType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2648,"assertEquals(""apply's second arg is an Array"","
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2649,"registry.createOptionalNullableType(OBJECT_TYPE),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2650,params.getLastChild().getJSType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2651,"assertTrue(""apply's args must be optional"","
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2652,params.getFirstChild().isOptionalArg());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2653,"assertTrue(""apply's args must be optional"","
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2654,params.getLastChild().isOptionalArg());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2658,"* Tests the ""call"" method on the function type."
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2660,public void testCallOfDateMethod() {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2661,"JSType callType = dateMethod.getPropertyType(""call"");"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2662,"assertTrue(""call should be a function"","
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2663,callType instanceof FunctionType);
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2665,FunctionType callFn = (FunctionType) callType;
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2666,"assertEquals(""call should have the same return type as its function"","
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2667,"NUMBER_TYPE, callFn.getReturnType());"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2669,Node params = callFn.getParametersNode();
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2670,"assertEquals(""call takes one argument in this case"","
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2671,"1, params.getChildCount());"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2672,"assertEquals(""call's first arg is the @this type"","
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2673,"registry.createOptionalNullableType(DATE_TYPE),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2674,params.getFirstChild().getJSType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2675,"assertTrue(""call's args must be optional"","
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2676,params.getFirstChild().isOptionalArg());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2680,* Tests the representation of function types.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2682,public void testFunctionTypeRepresentation() {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2683,"assertEquals(""function (number, string): boolean"","
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2684,"registry.createFunctionType(BOOLEAN_TYPE, false, NUMBER_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2685,STRING_TYPE).toString());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2687,"assertEquals(""function (this:Array, ...[*]): Array"","
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2688,ARRAY_FUNCTION_TYPE.toString());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2690,"assertEquals(""function (this:Boolean, *): boolean"","
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2691,BOOLEAN_OBJECT_FUNCTION_TYPE.toString());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2693,"assertEquals(""function (this:Number, *): number"","
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2694,NUMBER_OBJECT_FUNCTION_TYPE.toString());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2696,"assertEquals(""function (this:String, *): string"","
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2697,STRING_OBJECT_FUNCTION_TYPE.toString());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2699,"assertEquals(""function (...[number]): boolean"","
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2700,"registry.createFunctionType(BOOLEAN_TYPE, true, NUMBER_TYPE)"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2701,.toString());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2703,"assertEquals(""function (number, ...[string]): boolean"","
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2704,"registry.createFunctionType(BOOLEAN_TYPE, true, NUMBER_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2705,STRING_TYPE).toString());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2707,"assertEquals(""function (this:Date, number): (boolean|number|string)"","
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2708,"new FunctionType(registry, null,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2709,"null,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2710,"new JSTypeRegistry(null).createParameters(NUMBER_TYPE),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2711,"NUMBER_STRING_BOOLEAN,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2712,DATE_TYPE).toString());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2716,* Tests relationships between structural function types.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2718,public void testFunctionTypeRelationships() {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2719,"FunctionType dateMethodEmpty = new FunctionType(registry, null, null,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2720,"null, null, DATE_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2721,"FunctionType dateMethodWithParam = new FunctionType(registry, null, null,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2722,"new JSTypeRegistry(null).createParameters(NUMBER_TYPE), null, DATE_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2723,"FunctionType dateMethodWithReturn = new FunctionType(registry, null, null,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2724,"null, NUMBER_TYPE, DATE_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2725,"FunctionType stringMethodEmpty = new FunctionType(registry, null, null,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2726,"null, null, STRING_OBJECT_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2727,"FunctionType stringMethodWithParam = new FunctionType(registry, null, null,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2728,"new JSTypeRegistry(null).createParameters(NUMBER_TYPE), null,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2729,STRING_OBJECT_TYPE);
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2730,"FunctionType stringMethodWithReturn = new FunctionType(registry, null,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2731,"null, null, NUMBER_TYPE, STRING_OBJECT_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2733,// One-off tests.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2734,assertFalse(stringMethodEmpty.isSubtype(dateMethodEmpty));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2736,// Systemic tests.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2737,List<FunctionType> allFunctions = Lists.newArrayList(
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2738,"dateMethodEmpty, dateMethodWithParam, dateMethodWithReturn,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2739,"stringMethodEmpty, stringMethodWithParam, stringMethodWithReturn);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2740,for (int i = 0; i < allFunctions.size(); i++) {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2741,for (int j = 0; j < allFunctions.size(); j++) {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2742,FunctionType typeA = allFunctions.get(i);
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2743,FunctionType typeB = allFunctions.get(j);
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2744,"assertEquals(String.format(""equals(%s, %s)"", typeA, typeB),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2745,"i == j, typeA.equals(typeB));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2747,"// For this particular set of functions, the functions are subtypes"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2748,"// of each other iff they have the same ""this"" type."
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2749,"assertEquals(String.format(""isSubtype(%s, %s)"", typeA, typeB),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2750,"typeA.getTypeOfThis().equals(typeB.getTypeOfThis()),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2751,typeA.isSubtype(typeB));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2753,if (i == j) {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2754,"assertEquals(typeA, typeA.getLeastSupertype(typeB));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2755,"assertEquals(typeA, typeA.getGreatestSubtype(typeB));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2756,} else {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2757,"assertEquals(String.format(""sup(%s, %s)"", typeA, typeB),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2758,"U2U_CONSTRUCTOR_TYPE, typeA.getLeastSupertype(typeB));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2759,"assertEquals(String.format(""inf(%s, %s)"", typeA, typeB),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2760,"NO_OBJECT_TYPE, typeA.getGreatestSubtype(typeB));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2766,* Tests relationships between structural function types.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2768,public void testFunctionSubTypeRelationships() {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2769,"FunctionType googBarMethod = new FunctionType(registry, null, null,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2770,"null, null, googBar);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2771,"FunctionType googBarParamFn = new FunctionType(registry, null, null,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2772,"new JSTypeRegistry(null).createParameters(googBar), null, null);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2773,"FunctionType googBarReturnFn = new FunctionType(registry, null, null,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2774,"null, googBar, null);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2775,"FunctionType googSubBarMethod = new FunctionType(registry, null, null,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2776,"null, null, googSubBar);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2777,"FunctionType googSubBarParamFn = new FunctionType(registry, null, null,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2778,"new JSTypeRegistry(null).createParameters(googSubBar), null, null);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2779,"FunctionType googSubBarReturnFn = new FunctionType(registry, null, null,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2780,"null, googSubBar, null);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2782,assertTrue(googBarMethod.isSubtype(googSubBarMethod));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2783,assertTrue(googBarReturnFn.isSubtype(googSubBarReturnFn));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2785,List<FunctionType> allFunctions = Lists.newArrayList(
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2786,"googBarMethod, googBarParamFn, googBarReturnFn,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2787,"googSubBarMethod, googSubBarParamFn, googSubBarReturnFn);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2788,for (int i = 0; i < allFunctions.size(); i++) {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2789,for (int j = 0; j < allFunctions.size(); j++) {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2790,FunctionType typeA = allFunctions.get(i);
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2791,FunctionType typeB = allFunctions.get(j);
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2792,"assertEquals(String.format(""equals(%s, %s)"", typeA, typeB),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2793,"i == j, typeA.equals(typeB));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2795,// TODO(nicksantos): This formulation of least subtype and greatest
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2796,// supertype is a bit loose. We might want to tighten it up later.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2797,if (i == j) {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2798,"assertEquals(typeA, typeA.getLeastSupertype(typeB));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2799,"assertEquals(typeA, typeA.getGreatestSubtype(typeB));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2800,} else {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2801,"assertEquals(String.format(""sup(%s, %s)"", typeA, typeB),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2802,"U2U_CONSTRUCTOR_TYPE, typeA.getLeastSupertype(typeB));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2803,"assertEquals(String.format(""inf(%s, %s)"", typeA, typeB),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2804,"NO_OBJECT_TYPE, typeA.getGreatestSubtype(typeB));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2811,* Tests that defining a property of a function's {@code prototype} adds the
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2812,* property to it instance type.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2814,public void testFunctionPrototypeAndImplicitPrototype1() {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2815,FunctionType constructor =
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2816,"registry.createConstructorType(null, null, null, null);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2817,ObjectType instance = constructor.getInstanceType();
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2819,// adding one property on the prototype
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2820,ObjectType prototype =
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2821,"(ObjectType) constructor.getPropertyType(""prototype"");"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2822,"prototype.defineDeclaredProperty(""foo"", DATE_TYPE, false);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2824,"assertEquals(NATIVE_PROPERTIES_COUNT + 1, instance.getPropertiesCount());"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2828,* Tests that replacing a function's {@code prototype} changes the visible
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2829,* properties of its instance type.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2831,public void testFunctionPrototypeAndImplicitPrototype2() {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2832,FunctionType constructor =
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2833,"registry.createConstructorType(null, null, null, null);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2834,ObjectType instance = constructor.getInstanceType();
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2836,// replacing the prototype
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2837,ObjectType prototype = registry.createAnonymousObjectType();
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2838,"prototype.defineDeclaredProperty(""foo"", DATE_TYPE, false);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2839,"constructor.defineDeclaredProperty(""prototype"", prototype, true);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2841,"assertEquals(NATIVE_PROPERTIES_COUNT + 1, instance.getPropertiesCount());"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2845,* Tests that the native constructor U2U_CONSTRUCTOR_TYPE is properly
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2846,* implemented.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2848,public void testFunctionCyclycity() throws Exception {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2849,FunctionPrototypeType instanceType =
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2850,new FunctionPrototypeType(
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2851,"registry, U2U_CONSTRUCTOR_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2852,U2U_CONSTRUCTOR_TYPE.getInstanceType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2853,U2U_CONSTRUCTOR_TYPE.setPrototype(instanceType);
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2854,U2U_CONSTRUCTOR_TYPE.detectImplicitPrototypeCycle();
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2855,instanceType.detectImplicitPrototypeCycle();
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2858,/** Tests assigning jsdoc on a prototype property. */
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2859,public void testJSDocOnPrototypeProperty() throws Exception {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2860,"subclassCtor.setPropertyJSDocInfo(""prototype"", new JSDocInfo(), true);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2861,"assertNull(subclassCtor.getOwnPropertyJSDocInfo(""prototype""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2865,* Tests the behavior of the void type.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2867,public void testVoidType() throws Exception {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2868,// canAssignTo
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2869,assertTrue(VOID_TYPE.canAssignTo(ALL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2870,assertFalse(VOID_TYPE.canAssignTo(STRING_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2871,assertFalse(VOID_TYPE.canAssignTo(REGEXP_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2873,// autoboxesTo
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2874,assertNull(VOID_TYPE.autoboxesTo());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2876,// canTestForEqualityWith
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2877,assertTrue(VOID_TYPE.canTestForEqualityWith(ALL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2878,assertFalse(VOID_TYPE.canTestForEqualityWith(REGEXP_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2880,// canTestForShallowEqualityWith
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2881,assertTrue(VOID_TYPE.canTestForShallowEqualityWith(NO_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2882,assertFalse(VOID_TYPE.canTestForShallowEqualityWith(NO_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2883,assertFalse(VOID_TYPE.canTestForShallowEqualityWith(ARRAY_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2884,assertFalse(VOID_TYPE.canTestForShallowEqualityWith(BOOLEAN_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2885,assertFalse(VOID_TYPE.canTestForShallowEqualityWith(BOOLEAN_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2886,assertFalse(VOID_TYPE.canTestForShallowEqualityWith(DATE_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2887,assertFalse(VOID_TYPE.canTestForShallowEqualityWith(ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2888,assertFalse(VOID_TYPE.canTestForShallowEqualityWith(EVAL_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2889,assertFalse(VOID_TYPE.canTestForShallowEqualityWith(functionType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2890,assertFalse(VOID_TYPE.canTestForShallowEqualityWith(NULL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2891,assertFalse(VOID_TYPE.canTestForShallowEqualityWith(NUMBER_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2892,assertFalse(VOID_TYPE.canTestForShallowEqualityWith(NUMBER_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2893,assertFalse(VOID_TYPE.canTestForShallowEqualityWith(OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2894,assertFalse(VOID_TYPE.canTestForShallowEqualityWith(URI_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2895,assertFalse(VOID_TYPE.canTestForShallowEqualityWith(RANGE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2896,assertFalse(VOID_TYPE.canTestForShallowEqualityWith(REFERENCE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2897,assertFalse(VOID_TYPE.canTestForShallowEqualityWith(REGEXP_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2898,assertFalse(VOID_TYPE.canTestForShallowEqualityWith(STRING_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2899,assertFalse(VOID_TYPE.canTestForShallowEqualityWith(STRING_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2900,assertFalse(VOID_TYPE.canTestForShallowEqualityWith(SYNTAX_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2901,assertFalse(VOID_TYPE.canTestForShallowEqualityWith(TYPE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2902,assertTrue(VOID_TYPE.canTestForShallowEqualityWith(ALL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2903,assertTrue(VOID_TYPE.canTestForShallowEqualityWith(VOID_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2904,assertTrue(VOID_TYPE.canTestForShallowEqualityWith(
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2905,"createUnionType(NUMBER_TYPE, VOID_TYPE)));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2907,// matchesXxx
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2908,assertFalse(VOID_TYPE.matchesInt32Context());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2909,assertFalse(VOID_TYPE.matchesNumberContext());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2910,assertFalse(VOID_TYPE.matchesObjectContext());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2911,assertTrue(VOID_TYPE.matchesStringContext());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2912,assertFalse(VOID_TYPE.matchesUint32Context());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2916,* Tests the behavior of the boolean type.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2918,public void testBooleanValueType() throws Exception {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2919,// isXxx
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2920,assertFalse(BOOLEAN_TYPE.isArrayType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2921,assertFalse(BOOLEAN_TYPE.isBooleanObjectType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2922,assertTrue(BOOLEAN_TYPE.isBooleanValueType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2923,assertFalse(BOOLEAN_TYPE.isDateType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2924,assertFalse(BOOLEAN_TYPE.isEnumElementType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2925,assertFalse(BOOLEAN_TYPE.isNamedType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2926,assertFalse(BOOLEAN_TYPE.isNullType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2927,assertFalse(BOOLEAN_TYPE.isNumberObjectType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2928,assertFalse(BOOLEAN_TYPE.isNumberValueType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2929,assertFalse(BOOLEAN_TYPE.isFunctionPrototypeType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2930,assertFalse(BOOLEAN_TYPE.isRegexpType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2931,assertFalse(BOOLEAN_TYPE.isStringObjectType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2932,assertFalse(BOOLEAN_TYPE.isStringValueType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2933,assertFalse(BOOLEAN_TYPE.isEnumType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2934,assertFalse(BOOLEAN_TYPE.isUnionType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2935,assertFalse(BOOLEAN_TYPE.isAllType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2936,assertFalse(BOOLEAN_TYPE.isVoidType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2937,assertFalse(BOOLEAN_TYPE.isConstructor());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2938,assertFalse(BOOLEAN_TYPE.isInstanceType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2940,// autoboxesTo
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2941,"assertEquals(BOOLEAN_OBJECT_TYPE, BOOLEAN_TYPE.autoboxesTo());"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2943,// unboxesTo
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2944,"assertEquals(BOOLEAN_TYPE, BOOLEAN_OBJECT_TYPE.unboxesTo());"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2946,// canAssignTo
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2947,assertTrue(BOOLEAN_TYPE.canAssignTo(ALL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2948,assertFalse(BOOLEAN_TYPE.canAssignTo(STRING_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2949,assertFalse(BOOLEAN_TYPE.canAssignTo(NUMBER_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2950,assertFalse(BOOLEAN_TYPE.canAssignTo(functionType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2951,assertFalse(BOOLEAN_TYPE.canAssignTo(NULL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2952,assertTrue(BOOLEAN_TYPE.canAssignTo(OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2953,assertFalse(BOOLEAN_TYPE.canAssignTo(DATE_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2954,assertTrue(BOOLEAN_TYPE.canAssignTo(unresolvedNamedType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2955,assertFalse(BOOLEAN_TYPE.canAssignTo(namedGoogBar));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2956,assertFalse(BOOLEAN_TYPE.canAssignTo(REGEXP_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2958,// canBeCalled
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2959,assertFalse(BOOLEAN_TYPE.canBeCalled());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2961,// canTestForEqualityWith
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2962,assertTrue(BOOLEAN_TYPE.canTestForEqualityWith(ALL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2963,assertTrue(BOOLEAN_TYPE.canTestForEqualityWith(STRING_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2964,assertTrue(BOOLEAN_TYPE.canTestForEqualityWith(NUMBER_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2965,assertTrue(BOOLEAN_TYPE.canTestForEqualityWith(functionType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2966,assertFalse(BOOLEAN_TYPE.canTestForEqualityWith(VOID_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2967,assertTrue(BOOLEAN_TYPE.canTestForEqualityWith(OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2968,assertTrue(BOOLEAN_TYPE.canTestForEqualityWith(DATE_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2969,assertTrue(BOOLEAN_TYPE.canTestForEqualityWith(REGEXP_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2970,assertTrue(BOOLEAN_TYPE.canTestForEqualityWith(UNKNOWN_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2972,// canTestForShallowEqualityWith
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2973,assertTrue(BOOLEAN_TYPE.canTestForShallowEqualityWith(NO_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2974,assertFalse(BOOLEAN_TYPE.canTestForShallowEqualityWith(NO_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2975,assertFalse(BOOLEAN_TYPE.canTestForShallowEqualityWith(ARRAY_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2976,assertTrue(BOOLEAN_TYPE.canTestForShallowEqualityWith(BOOLEAN_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2977,assertFalse(BOOLEAN_TYPE.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2978,canTestForShallowEqualityWith(BOOLEAN_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2979,assertFalse(BOOLEAN_TYPE.canTestForShallowEqualityWith(DATE_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2980,assertFalse(BOOLEAN_TYPE.canTestForShallowEqualityWith(ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2981,assertFalse(BOOLEAN_TYPE.canTestForShallowEqualityWith(EVAL_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2982,assertFalse(BOOLEAN_TYPE.canTestForShallowEqualityWith(functionType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2983,assertFalse(BOOLEAN_TYPE.canTestForShallowEqualityWith(NULL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2984,assertFalse(BOOLEAN_TYPE.canTestForShallowEqualityWith(NUMBER_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2985,assertFalse(BOOLEAN_TYPE.canTestForShallowEqualityWith(NUMBER_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2986,assertFalse(BOOLEAN_TYPE.canTestForShallowEqualityWith(OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2987,assertFalse(BOOLEAN_TYPE.canTestForShallowEqualityWith(URI_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2988,assertFalse(BOOLEAN_TYPE.canTestForShallowEqualityWith(RANGE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2989,assertFalse(BOOLEAN_TYPE.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2990,canTestForShallowEqualityWith(REFERENCE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2991,assertFalse(BOOLEAN_TYPE.canTestForShallowEqualityWith(REGEXP_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2992,assertFalse(BOOLEAN_TYPE.canTestForShallowEqualityWith(STRING_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2993,assertFalse(BOOLEAN_TYPE.canTestForShallowEqualityWith(STRING_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2994,assertFalse(BOOLEAN_TYPE.canTestForShallowEqualityWith(SYNTAX_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2995,assertFalse(BOOLEAN_TYPE.canTestForShallowEqualityWith(TYPE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2996,assertTrue(BOOLEAN_TYPE.canTestForShallowEqualityWith(ALL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2997,assertFalse(BOOLEAN_TYPE.canTestForShallowEqualityWith(VOID_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2998,assertTrue(BOOLEAN_TYPE.canTestForShallowEqualityWith(UNKNOWN_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3000,// isNullable
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3001,assertFalse(BOOLEAN_TYPE.isNullable());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3003,// matchesXxx
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3004,assertTrue(BOOLEAN_TYPE.matchesInt32Context());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3005,assertTrue(BOOLEAN_TYPE.matchesNumberContext());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3006,assertTrue(BOOLEAN_TYPE.matchesObjectContext());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3007,assertTrue(BOOLEAN_TYPE.matchesStringContext());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3008,assertTrue(BOOLEAN_TYPE.matchesUint32Context());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3010,// toString
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3011,"assertEquals(""boolean"", BOOLEAN_TYPE.toString());"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3015,* Tests the behavior of the Boolean type.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3017,public void testBooleanObjectType() throws Exception {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3018,// isXxx
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3019,assertFalse(BOOLEAN_OBJECT_TYPE.isArrayType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3020,assertTrue(BOOLEAN_OBJECT_TYPE.isBooleanObjectType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3021,assertFalse(BOOLEAN_OBJECT_TYPE.isBooleanValueType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3022,assertFalse(BOOLEAN_OBJECT_TYPE.isDateType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3023,assertFalse(BOOLEAN_OBJECT_TYPE.isEnumElementType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3024,assertFalse(BOOLEAN_OBJECT_TYPE.isNamedType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3025,assertFalse(BOOLEAN_OBJECT_TYPE.isNullType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3026,assertFalse(BOOLEAN_OBJECT_TYPE.isNumberObjectType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3027,assertFalse(BOOLEAN_OBJECT_TYPE.isNumberValueType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3028,assertFalse(BOOLEAN_OBJECT_TYPE.isFunctionPrototypeType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3029,assertTrue(
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3030,BOOLEAN_OBJECT_TYPE.getImplicitPrototype().isFunctionPrototypeType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3031,assertFalse(BOOLEAN_OBJECT_TYPE.isRegexpType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3032,assertFalse(BOOLEAN_OBJECT_TYPE.isStringObjectType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3033,assertFalse(BOOLEAN_OBJECT_TYPE.isStringValueType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3034,assertFalse(BOOLEAN_OBJECT_TYPE.isEnumType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3035,assertFalse(BOOLEAN_OBJECT_TYPE.isUnionType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3036,assertFalse(BOOLEAN_OBJECT_TYPE.isAllType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3037,assertFalse(BOOLEAN_OBJECT_TYPE.isVoidType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3038,assertFalse(BOOLEAN_OBJECT_TYPE.isConstructor());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3039,assertTrue(BOOLEAN_OBJECT_TYPE.isInstanceType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3041,// canAssignTo
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3042,assertTrue(BOOLEAN_OBJECT_TYPE.canAssignTo(ALL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3043,assertFalse(BOOLEAN_OBJECT_TYPE.canAssignTo(STRING_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3044,assertFalse(BOOLEAN_OBJECT_TYPE.canAssignTo(NUMBER_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3045,assertFalse(BOOLEAN_OBJECT_TYPE.canAssignTo(functionType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3046,assertFalse(BOOLEAN_OBJECT_TYPE.canAssignTo(NULL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3047,assertTrue(BOOLEAN_OBJECT_TYPE.canAssignTo(OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3048,assertFalse(BOOLEAN_OBJECT_TYPE.canAssignTo(DATE_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3049,assertTrue(BOOLEAN_OBJECT_TYPE.canAssignTo(unresolvedNamedType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3050,assertFalse(BOOLEAN_OBJECT_TYPE.canAssignTo(namedGoogBar));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3051,assertFalse(BOOLEAN_OBJECT_TYPE.canAssignTo(REGEXP_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3052,// canBeCalled
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3053,assertFalse(BOOLEAN_OBJECT_TYPE.canBeCalled());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3055,// canTestForEqualityWith
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3056,assertTrue(BOOLEAN_OBJECT_TYPE.canTestForEqualityWith(ALL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3057,assertTrue(BOOLEAN_OBJECT_TYPE.canTestForEqualityWith(STRING_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3058,assertTrue(BOOLEAN_OBJECT_TYPE.canTestForEqualityWith(NUMBER_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3059,assertTrue(BOOLEAN_OBJECT_TYPE.canTestForEqualityWith(functionType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3060,assertFalse(BOOLEAN_OBJECT_TYPE.canTestForEqualityWith(VOID_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3061,assertTrue(BOOLEAN_OBJECT_TYPE.canTestForEqualityWith(OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3062,assertTrue(BOOLEAN_OBJECT_TYPE.canTestForEqualityWith(DATE_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3063,assertTrue(BOOLEAN_OBJECT_TYPE.canTestForEqualityWith(REGEXP_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3065,// canTestForShallowEqualityWith
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3066,assertTrue(BOOLEAN_OBJECT_TYPE.canTestForShallowEqualityWith(NO_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3067,assertTrue(BOOLEAN_OBJECT_TYPE.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3068,canTestForShallowEqualityWith(NO_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3069,assertFalse(BOOLEAN_OBJECT_TYPE.canTestForShallowEqualityWith(ARRAY_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3070,assertFalse(BOOLEAN_OBJECT_TYPE.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3071,canTestForShallowEqualityWith(BOOLEAN_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3072,assertTrue(BOOLEAN_OBJECT_TYPE.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3073,canTestForShallowEqualityWith(BOOLEAN_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3074,assertFalse(BOOLEAN_OBJECT_TYPE.canTestForShallowEqualityWith(DATE_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3075,assertFalse(BOOLEAN_OBJECT_TYPE.canTestForShallowEqualityWith(ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3076,assertFalse(BOOLEAN_OBJECT_TYPE.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3077,canTestForShallowEqualityWith(EVAL_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3078,assertFalse(BOOLEAN_OBJECT_TYPE.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3079,canTestForShallowEqualityWith(functionType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3080,assertFalse(BOOLEAN_OBJECT_TYPE.canTestForShallowEqualityWith(NULL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3081,assertFalse(BOOLEAN_OBJECT_TYPE.canTestForShallowEqualityWith(NUMBER_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3082,assertFalse(BOOLEAN_OBJECT_TYPE.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3083,canTestForShallowEqualityWith(NUMBER_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3084,assertTrue(BOOLEAN_OBJECT_TYPE.canTestForShallowEqualityWith(OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3085,assertFalse(BOOLEAN_OBJECT_TYPE.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3086,canTestForShallowEqualityWith(URI_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3087,assertFalse(BOOLEAN_OBJECT_TYPE.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3088,canTestForShallowEqualityWith(RANGE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3089,assertFalse(BOOLEAN_OBJECT_TYPE.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3090,canTestForShallowEqualityWith(REFERENCE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3091,assertFalse(BOOLEAN_OBJECT_TYPE.canTestForShallowEqualityWith(REGEXP_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3092,assertFalse(BOOLEAN_OBJECT_TYPE.canTestForShallowEqualityWith(STRING_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3093,assertFalse(BOOLEAN_OBJECT_TYPE.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3094,canTestForShallowEqualityWith(STRING_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3095,assertFalse(BOOLEAN_OBJECT_TYPE.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3096,canTestForShallowEqualityWith(SYNTAX_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3097,assertFalse(BOOLEAN_OBJECT_TYPE.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3098,canTestForShallowEqualityWith(TYPE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3099,assertTrue(BOOLEAN_OBJECT_TYPE.canTestForShallowEqualityWith(ALL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3100,assertFalse(BOOLEAN_OBJECT_TYPE.canTestForShallowEqualityWith(VOID_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3102,// isNullable
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3103,assertFalse(BOOLEAN_OBJECT_TYPE.isNullable());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3105,// matchesXxx
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3106,assertTrue(BOOLEAN_OBJECT_TYPE.matchesInt32Context());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3107,assertTrue(BOOLEAN_OBJECT_TYPE.matchesNumberContext());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3108,assertTrue(BOOLEAN_OBJECT_TYPE.matchesObjectContext());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3109,assertTrue(BOOLEAN_OBJECT_TYPE.matchesStringContext());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3110,assertTrue(BOOLEAN_OBJECT_TYPE.matchesUint32Context());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3112,// toString
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3113,"assertEquals(""Boolean"", BOOLEAN_OBJECT_TYPE.toString());"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3115,assertTrue(BOOLEAN_OBJECT_TYPE.isNativeObjectType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3119,* Tests the behavior of the enum type.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3121,public void testEnumType() throws Exception {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3122,"EnumType enumType = new EnumType(registry, ""Enum"", NUMBER_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3124,// isXxx
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3125,assertFalse(enumType.isArrayType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3126,assertFalse(enumType.isBooleanObjectType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3127,assertFalse(enumType.isBooleanValueType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3128,assertFalse(enumType.isDateType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3129,assertFalse(enumType.isEnumElementType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3130,assertFalse(enumType.isNamedType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3131,assertFalse(enumType.isNullType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3132,assertFalse(enumType.isNumberObjectType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3133,assertFalse(enumType.isNumberValueType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3134,assertFalse(enumType.isFunctionPrototypeType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3135,assertFalse(enumType.isRegexpType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3136,assertFalse(enumType.isStringObjectType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3137,assertFalse(enumType.isStringValueType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3138,assertTrue(enumType.isEnumType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3139,assertFalse(enumType.isUnionType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3140,assertFalse(enumType.isAllType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3141,assertFalse(enumType.isVoidType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3142,assertFalse(enumType.isConstructor());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3143,assertFalse(enumType.isInstanceType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3145,// canAssignTo
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3146,assertTrue(enumType.canAssignTo(ALL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3147,assertFalse(enumType.canAssignTo(STRING_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3148,assertFalse(enumType.canAssignTo(NUMBER_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3149,assertFalse(enumType.canAssignTo(functionType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3150,assertFalse(enumType.canAssignTo(NULL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3151,assertTrue(enumType.canAssignTo(OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3152,assertFalse(enumType.canAssignTo(DATE_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3153,assertTrue(enumType.canAssignTo(unresolvedNamedType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3154,assertFalse(enumType.canAssignTo(namedGoogBar));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3155,assertFalse(enumType.canAssignTo(REGEXP_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3157,// canBeCalled
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3158,assertFalse(enumType.canBeCalled());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3160,// canTestForEqualityWith
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3161,assertTrue(enumType.canTestForEqualityWith(ALL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3162,assertTrue(enumType.canTestForEqualityWith(STRING_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3163,assertTrue(enumType.canTestForEqualityWith(NUMBER_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3164,assertTrue(enumType.canTestForEqualityWith(functionType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3165,assertFalse(enumType.canTestForEqualityWith(VOID_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3166,assertTrue(enumType.canTestForEqualityWith(OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3167,assertTrue(enumType.canTestForEqualityWith(DATE_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3168,assertTrue(enumType.canTestForEqualityWith(REGEXP_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3170,// canTestForShallowEqualityWith
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3171,assertTrue(enumType.canTestForShallowEqualityWith(NO_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3172,assertTrue(enumType.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3173,canTestForShallowEqualityWith(NO_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3174,assertFalse(enumType.canTestForShallowEqualityWith(ARRAY_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3175,assertFalse(enumType.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3176,canTestForShallowEqualityWith(BOOLEAN_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3177,assertTrue(enumType.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3178,canTestForShallowEqualityWith(enumType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3179,assertFalse(enumType.canTestForShallowEqualityWith(DATE_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3180,assertFalse(enumType.canTestForShallowEqualityWith(ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3181,assertFalse(enumType.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3182,canTestForShallowEqualityWith(EVAL_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3183,assertFalse(enumType.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3184,canTestForShallowEqualityWith(functionType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3185,assertFalse(enumType.canTestForShallowEqualityWith(NULL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3186,assertFalse(enumType.canTestForShallowEqualityWith(NUMBER_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3187,assertFalse(enumType.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3188,canTestForShallowEqualityWith(NUMBER_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3189,assertTrue(enumType.canTestForShallowEqualityWith(OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3190,assertFalse(enumType.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3191,canTestForShallowEqualityWith(URI_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3192,assertFalse(enumType.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3193,canTestForShallowEqualityWith(RANGE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3194,assertFalse(enumType.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3195,canTestForShallowEqualityWith(REFERENCE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3196,assertFalse(enumType.canTestForShallowEqualityWith(REGEXP_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3197,assertFalse(enumType.canTestForShallowEqualityWith(STRING_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3198,assertFalse(enumType.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3199,canTestForShallowEqualityWith(STRING_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3200,assertFalse(enumType.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3201,canTestForShallowEqualityWith(SYNTAX_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3202,assertFalse(enumType.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3203,canTestForShallowEqualityWith(TYPE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3204,assertTrue(enumType.canTestForShallowEqualityWith(ALL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3205,assertFalse(enumType.canTestForShallowEqualityWith(VOID_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3207,// isNullable
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3208,assertFalse(enumType.isNullable());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3210,// matchesXxx
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3211,assertFalse(enumType.matchesInt32Context());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3212,assertFalse(enumType.matchesNumberContext());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3213,assertTrue(enumType.matchesObjectContext());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3214,assertTrue(enumType.matchesStringContext());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3215,assertFalse(enumType.matchesUint32Context());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3217,// toString
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3218,"assertEquals(""enum{Enum}"", enumType.toString());"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3222,* Tests the behavior of the enum element type.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3224,public void testEnumElementType() throws Exception {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3225,// isXxx
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3226,assertFalse(elementsType.isArrayType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3227,assertFalse(elementsType.isBooleanObjectType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3228,assertFalse(elementsType.isBooleanValueType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3229,assertFalse(elementsType.isDateType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3230,assertTrue(elementsType.isEnumElementType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3231,assertFalse(elementsType.isNamedType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3232,assertFalse(elementsType.isNullType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3233,assertFalse(elementsType.isNumberObjectType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3234,assertFalse(elementsType.isNumberValueType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3235,assertFalse(elementsType.isFunctionPrototypeType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3236,assertFalse(elementsType.isRegexpType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3237,assertFalse(elementsType.isStringObjectType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3238,assertFalse(elementsType.isStringValueType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3239,assertFalse(elementsType.isEnumType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3240,assertFalse(elementsType.isUnionType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3241,assertFalse(elementsType.isAllType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3242,assertFalse(elementsType.isVoidType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3243,assertFalse(elementsType.isConstructor());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3244,assertFalse(elementsType.isInstanceType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3246,// canAssignTo
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3247,assertTrue(elementsType.canAssignTo(ALL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3248,assertFalse(elementsType.canAssignTo(STRING_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3249,assertTrue(elementsType.canAssignTo(NUMBER_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3250,assertFalse(elementsType.canAssignTo(functionType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3251,assertFalse(elementsType.canAssignTo(NULL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3252,assertTrue(elementsType.canAssignTo(OBJECT_TYPE)); // autoboxing
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3253,assertFalse(elementsType.canAssignTo(DATE_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3254,assertTrue(elementsType.canAssignTo(unresolvedNamedType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3255,assertFalse(elementsType.canAssignTo(namedGoogBar));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3256,assertFalse(elementsType.canAssignTo(REGEXP_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3258,// canBeCalled
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3259,assertFalse(elementsType.canBeCalled());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3261,// canTestForEqualityWith
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3262,assertTrue(elementsType.canTestForEqualityWith(ALL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3263,assertTrue(elementsType.canTestForEqualityWith(STRING_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3264,assertTrue(elementsType.canTestForEqualityWith(NUMBER_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3265,assertTrue(elementsType.canTestForEqualityWith(NUMBER_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3266,assertTrue(elementsType.canTestForEqualityWith(elementsType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3267,assertTrue(elementsType.canTestForEqualityWith(functionType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3268,assertFalse(elementsType.canTestForEqualityWith(VOID_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3269,assertTrue(elementsType.canTestForEqualityWith(OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3270,assertTrue(elementsType.canTestForEqualityWith(DATE_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3271,assertTrue(elementsType.canTestForEqualityWith(REGEXP_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3273,// canTestForShallowEqualityWith
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3274,assertTrue(elementsType.canTestForShallowEqualityWith(NO_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3275,assertFalse(elementsType.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3276,canTestForShallowEqualityWith(NO_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3277,assertFalse(elementsType.canTestForShallowEqualityWith(ARRAY_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3278,assertFalse(elementsType.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3279,canTestForShallowEqualityWith(BOOLEAN_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3280,assertTrue(elementsType.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3281,canTestForShallowEqualityWith(elementsType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3282,assertFalse(elementsType.canTestForShallowEqualityWith(DATE_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3283,assertFalse(elementsType.canTestForShallowEqualityWith(ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3284,assertFalse(elementsType.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3285,canTestForShallowEqualityWith(EVAL_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3286,assertFalse(elementsType.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3287,canTestForShallowEqualityWith(functionType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3288,assertFalse(elementsType.canTestForShallowEqualityWith(NULL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3289,assertTrue(elementsType.canTestForShallowEqualityWith(NUMBER_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3290,assertFalse(elementsType.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3291,canTestForShallowEqualityWith(NUMBER_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3292,assertFalse(elementsType.canTestForShallowEqualityWith(OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3293,assertFalse(elementsType.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3294,canTestForShallowEqualityWith(URI_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3295,assertFalse(elementsType.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3296,canTestForShallowEqualityWith(RANGE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3297,assertFalse(elementsType.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3298,canTestForShallowEqualityWith(REFERENCE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3299,assertFalse(elementsType.canTestForShallowEqualityWith(REGEXP_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3300,assertFalse(elementsType.canTestForShallowEqualityWith(STRING_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3301,assertFalse(elementsType.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3302,canTestForShallowEqualityWith(STRING_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3303,assertFalse(elementsType.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3304,canTestForShallowEqualityWith(SYNTAX_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3305,assertFalse(elementsType.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3306,canTestForShallowEqualityWith(TYPE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3307,assertTrue(elementsType.canTestForShallowEqualityWith(ALL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3308,assertFalse(elementsType.canTestForShallowEqualityWith(VOID_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3310,// isNullable
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3311,assertFalse(elementsType.isNullable());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3313,// matchesXxx
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3314,assertTrue(elementsType.matchesInt32Context());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3315,assertTrue(elementsType.matchesNumberContext());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3316,assertTrue(elementsType.matchesObjectContext());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3317,assertTrue(elementsType.matchesStringContext());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3318,assertTrue(elementsType.matchesUint32Context());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3320,// toString
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3321,"assertEquals(""Enum.<number>"", elementsType.toString());"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3324,public void testStringEnumType() throws Exception {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3325,EnumElementType stringEnum =
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3326,"new EnumType(registry, ""Enum"", STRING_TYPE).getElementsType();"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3328,"assertEquals(UNKNOWN_TYPE, stringEnum.getPropertyType(""length""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3329,"assertEquals(NUMBER_TYPE, stringEnum.findPropertyType(""length""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3330,"assertEquals(false, stringEnum.hasProperty(""length""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3331,"assertEquals(STRING_OBJECT_TYPE, stringEnum.autoboxesTo());"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3332,assertNull(stringEnum.getConstructor());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3335,public void testStringObjectEnumType() throws Exception {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3336,EnumElementType stringEnum =
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3337,"new EnumType(registry, ""Enum"", STRING_OBJECT_TYPE).getElementsType();"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3339,"assertEquals(NUMBER_TYPE, stringEnum.getPropertyType(""length""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3340,"assertEquals(NUMBER_TYPE, stringEnum.findPropertyType(""length""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3341,"assertEquals(true, stringEnum.hasProperty(""length""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3342,"assertEquals(STRING_OBJECT_FUNCTION_TYPE, stringEnum.getConstructor());"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3346,* Tests the behavior of variants type.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3348,"@SuppressWarnings(""checked"")"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3349,public void testUnionType() throws Exception {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3350,UnionType nullOrString =
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3351,"(UnionType) createUnionType(NULL_TYPE, STRING_OBJECT_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3352,UnionType stringOrNull =
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3353,"(UnionType) createUnionType(STRING_OBJECT_TYPE, NULL_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3355,"assertEquals(nullOrString, stringOrNull);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3356,"assertEquals(stringOrNull, nullOrString);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3358,"assertTypeCanAssignToItself(createUnionType(VOID_TYPE, NUMBER_TYPE));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3359,assertTypeCanAssignToItself(
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3360,"createUnionType(NUMBER_TYPE, STRING_TYPE, OBJECT_TYPE));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3361,"assertTypeCanAssignToItself(createUnionType(NUMBER_TYPE, BOOLEAN_TYPE));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3362,assertTypeCanAssignToItself(createUnionType(VOID_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3364,UnionType nullOrUnknown =
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3365,"(UnionType) createUnionType(NULL_TYPE, unresolvedNamedType);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3366,assertTrue(nullOrUnknown.isUnknownType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3367,"assertEquals(nullOrUnknown, NULL_TYPE.getLeastSupertype(nullOrUnknown));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3368,"assertEquals(nullOrUnknown, nullOrUnknown.getLeastSupertype(NULL_TYPE));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3369,"assertEquals(UNKNOWN_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3370,NULL_TYPE.getGreatestSubtype(nullOrUnknown));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3371,"assertEquals(UNKNOWN_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3372,nullOrUnknown.getGreatestSubtype(NULL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3374,assertTrue(NULL_TYPE.differsFrom(nullOrUnknown));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3375,assertTrue(nullOrUnknown.differsFrom(NULL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3376,assertFalse(nullOrUnknown.differsFrom(unresolvedNamedType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3378,assertTrue(NULL_TYPE.isSubtype(nullOrUnknown));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3379,assertTrue(unresolvedNamedType.isSubtype(nullOrUnknown));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3380,assertTrue(nullOrUnknown.isSubtype(NULL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3382,"assertEquals(unresolvedNamedType,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3383,nullOrUnknown.restrictByNotNullOrUndefined());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3385,// findPropertyType
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3386,"assertEquals(NUMBER_TYPE, nullOrString.findPropertyType(""length""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3387,"assertEquals(null, nullOrString.findPropertyType(""lengthx""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3391,* Tests object types.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3393,public void testObjectType() throws Exception {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3394,PrototypeObjectType objectType =
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3395,"new PrototypeObjectType(registry, null, null);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3397,// isXxx
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3398,assertFalse(objectType.isAllType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3399,assertFalse(objectType.isArrayType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3400,assertFalse(objectType.isDateType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3401,assertFalse(objectType.isFunctionPrototypeType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3402,assertTrue(objectType.getImplicitPrototype() == OBJECT_TYPE);
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3404,// canAssignTo
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3405,assertTrue(objectType.canAssignTo(ALL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3406,assertFalse(objectType.canAssignTo(STRING_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3407,assertFalse(objectType.canAssignTo(NUMBER_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3408,assertFalse(objectType.canAssignTo(functionType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3409,assertFalse(objectType.canAssignTo(NULL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3410,assertFalse(objectType.canAssignTo(DATE_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3411,assertTrue(objectType.canAssignTo(OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3412,assertTrue(objectType.canAssignTo(unresolvedNamedType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3413,assertFalse(objectType.canAssignTo(namedGoogBar));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3414,assertFalse(objectType.canAssignTo(REGEXP_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3416,// autoboxesTo
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3417,assertNull(objectType.autoboxesTo());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3419,// canTestForEqualityWith
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3420,assertTrue(objectType.canTestForEqualityWith(NUMBER_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3422,// matchesXxxContext
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3423,assertFalse(objectType.matchesInt32Context());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3424,assertFalse(objectType.matchesNumberContext());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3425,assertTrue(objectType.matchesObjectContext());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3426,assertFalse(objectType.matchesStringContext());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3427,assertFalse(objectType.matchesUint32Context());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3429,// isNullable
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3430,assertFalse(objectType.isNullable());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3431,assertTrue(createNullableType(objectType).isNullable());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3433,// toString
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3434,"assertEquals(""{...}"", objectType.toString());"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3438,* Tests the goog.Bar type.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3440,public void testGoogBar() throws Exception {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3441,assertTrue(namedGoogBar.isInstanceType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3442,assertFalse(googBar.isInstanceType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3443,assertFalse(namedGoogBar.isConstructor());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3444,assertTrue(googBar.isConstructor());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3445,assertTrue(googBar.getInstanceType().isInstanceType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3446,assertTrue(namedGoogBar.getConstructor().isConstructor());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3447,assertTrue(namedGoogBar.getImplicitPrototype().isFunctionPrototypeType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3449,// canAssignTo
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3450,assertTypeCanAssignToItself(googBar);
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3451,assertTypeCanAssignToItself(namedGoogBar);
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3452,googBar.canAssignTo(namedGoogBar);
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3453,namedGoogBar.canAssignTo(googBar);
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3454,assertTrue(googBar.equals(googBar));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3455,assertFalse(googBar.equals(googSubBar));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3459,* Tests how properties are counted for object types.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3461,public void testObjectTypePropertiesCount() throws Exception {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3462,ObjectType sup = registry.createAnonymousObjectType();
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3463,int nativeProperties = sup.getPropertiesCount();
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3465,"sup.defineDeclaredProperty(""a"", DATE_TYPE, false);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3466,"assertEquals(nativeProperties + 1, sup.getPropertiesCount());"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3468,"sup.defineDeclaredProperty(""b"", DATE_TYPE, false);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3469,"assertEquals(nativeProperties + 2, sup.getPropertiesCount());"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3471,ObjectType sub = registry.createObjectType(sup);
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3472,"assertEquals(nativeProperties + 2, sub.getPropertiesCount());"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3476,* Tests how properties are defined.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3478,public void testDefineProperties() {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3479,ObjectType prototype = googBar.getPrototype();
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3480,ObjectType instance = googBar.getInstanceType();
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3482,"assertEquals(instance.getImplicitPrototype(), prototype);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3484,// Test declarations.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3485,assertTrue(
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3486,"prototype.defineDeclaredProperty(""declared"", NUMBER_TYPE, false));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3487,assertFalse(
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3488,"prototype.defineDeclaredProperty(""declared"", NUMBER_TYPE, false));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3489,assertFalse(
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3490,"instance.defineDeclaredProperty(""declared"", NUMBER_TYPE, false));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3491,"assertEquals(NUMBER_TYPE, instance.getPropertyType(""declared""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3493,// Test inferring different types.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3494,assertTrue(
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3495,"prototype.defineInferredProperty(""inferred1"", STRING_TYPE, false));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3496,assertTrue(
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3497,"prototype.defineInferredProperty(""inferred1"", NUMBER_TYPE, false));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3498,assertEquals(
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3499,"createUnionType(NUMBER_TYPE, STRING_TYPE),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3500,"instance.getPropertyType(""inferred1""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3502,// Test inferring different types on different objects.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3503,assertTrue(
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3504,"prototype.defineInferredProperty(""inferred2"", STRING_TYPE, false));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3505,assertTrue(
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3506,"instance.defineInferredProperty(""inferred2"", NUMBER_TYPE, false));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3507,assertEquals(
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3508,"createUnionType(NUMBER_TYPE, STRING_TYPE),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3509,"instance.getPropertyType(""inferred2""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3511,// Test inferring on the supertype and declaring on the subtype.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3512,assertTrue(
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3513,"prototype.defineInferredProperty(""prop"", STRING_TYPE, false));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3514,assertTrue(
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3515,"instance.defineDeclaredProperty(""prop"", NUMBER_TYPE, false));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3516,"assertEquals(NUMBER_TYPE, instance.getPropertyType(""prop""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3517,"assertEquals(STRING_TYPE, prototype.getPropertyType(""prop""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3521,* Tests that properties are correctly counted even when shadowing occurs.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3523,public void testObjectTypePropertiesCountWithShadowing() {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3524,ObjectType sup = registry.createAnonymousObjectType();
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3525,int nativeProperties = sup.getPropertiesCount();
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3527,"sup.defineDeclaredProperty(""a"", OBJECT_TYPE, false);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3528,"assertEquals(nativeProperties + 1, sup.getPropertiesCount());"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3530,ObjectType sub = registry.createObjectType(sup);
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3531,"sub.defineDeclaredProperty(""a"", OBJECT_TYPE, false);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3532,"assertEquals(nativeProperties + 1, sub.getPropertiesCount());"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3535,public void testObjectTypeIsPropertyInExterns() {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3536,ObjectType sup =
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3537,registry.createObjectType(registry.createAnonymousObjectType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3538,ObjectType sub = registry.createObjectType(sup);
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3540,"sup.defineProperty(""externProp"", null, false, /* inExterns */ true);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3541,"sub.defineProperty(""externProp"", null, false, /* inExterns */ false);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3543,"assertTrue(sup.isPropertyInExterns(""externProp""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3544,"assertFalse(sub.isPropertyInExterns(""externProp""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3548,* Tests the named type goog.Bar.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3550,public void testNamedGoogBar() throws Exception {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3551,// isXxx
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3552,assertFalse(namedGoogBar.isFunctionPrototypeType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3553,assertTrue(namedGoogBar.getImplicitPrototype().isFunctionPrototypeType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3555,// canAssignTo
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3556,assertTrue(namedGoogBar.canAssignTo(ALL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3557,assertFalse(namedGoogBar.canAssignTo(STRING_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3558,assertFalse(namedGoogBar.canAssignTo(NUMBER_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3559,assertFalse(namedGoogBar.canAssignTo(functionType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3560,assertFalse(namedGoogBar.canAssignTo(NULL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3561,assertTrue(namedGoogBar.canAssignTo(OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3562,assertFalse(namedGoogBar.canAssignTo(DATE_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3563,assertTrue(namedGoogBar.canAssignTo(namedGoogBar));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3564,assertTrue(namedGoogBar.canAssignTo(unresolvedNamedType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3565,assertFalse(namedGoogBar.canAssignTo(REGEXP_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3566,assertFalse(namedGoogBar.canAssignTo(ARRAY_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3568,// autoboxesTo
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3569,assertNull(namedGoogBar.autoboxesTo());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3571,// properties
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3572,"assertEquals(DATE_TYPE, namedGoogBar.getPropertyType(""date""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3574,assertFalse(namedGoogBar.isNativeObjectType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3575,assertFalse(namedGoogBar.getImplicitPrototype().isNativeObjectType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3579,* Tests the prototype chaining of native objects.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3581,public void testPrototypeChaining() throws Exception {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3582,// equals
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3583,"assertEquals(ARRAY_TYPE.getImplicitPrototype().getImplicitPrototype(),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3584,OBJECT_TYPE);
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3585,assertEquals(BOOLEAN_OBJECT_TYPE.getImplicitPrototype().
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3586,"getImplicitPrototype(), OBJECT_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3587,"assertEquals(DATE_TYPE.getImplicitPrototype().getImplicitPrototype(),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3588,OBJECT_TYPE);
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3589,"assertEquals(ERROR_TYPE.getImplicitPrototype().getImplicitPrototype(),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3590,OBJECT_TYPE);
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3591,"assertEquals(EVAL_ERROR_TYPE.getImplicitPrototype().getImplicitPrototype(),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3592,ERROR_TYPE);
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3593,assertEquals(NUMBER_OBJECT_TYPE.getImplicitPrototype().
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3594,"getImplicitPrototype(), OBJECT_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3595,"assertEquals(URI_ERROR_TYPE.getImplicitPrototype().getImplicitPrototype(),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3596,ERROR_TYPE);
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3597,"assertEquals(RANGE_ERROR_TYPE.getImplicitPrototype().getImplicitPrototype(),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3598,ERROR_TYPE);
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3599,assertEquals(REFERENCE_ERROR_TYPE.getImplicitPrototype().
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3600,"getImplicitPrototype(), ERROR_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3601,assertEquals(STRING_OBJECT_TYPE.getImplicitPrototype().
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3602,"getImplicitPrototype(), OBJECT_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3603,"assertEquals(REGEXP_TYPE.getImplicitPrototype().getImplicitPrototype(),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3604,OBJECT_TYPE);
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3605,assertEquals(SYNTAX_ERROR_TYPE.getImplicitPrototype().
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3606,"getImplicitPrototype(), ERROR_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3607,assertEquals(TYPE_ERROR_TYPE.getImplicitPrototype().
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3608,"getImplicitPrototype(), ERROR_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3610,// not same
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3611,"assertNotSame(EVAL_ERROR_TYPE.getImplicitPrototype(),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3612,URI_ERROR_TYPE.getImplicitPrototype());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3613,"assertNotSame(EVAL_ERROR_TYPE.getImplicitPrototype(),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3614,RANGE_ERROR_TYPE.getImplicitPrototype());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3615,"assertNotSame(EVAL_ERROR_TYPE.getImplicitPrototype(),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3616,REFERENCE_ERROR_TYPE.getImplicitPrototype());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3617,"assertNotSame(EVAL_ERROR_TYPE.getImplicitPrototype(),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3618,SYNTAX_ERROR_TYPE.getImplicitPrototype());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3619,"assertNotSame(EVAL_ERROR_TYPE.getImplicitPrototype(),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3620,TYPE_ERROR_TYPE.getImplicitPrototype());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3622,"assertNotSame(URI_ERROR_TYPE.getImplicitPrototype(),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3623,RANGE_ERROR_TYPE.getImplicitPrototype());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3624,"assertNotSame(URI_ERROR_TYPE.getImplicitPrototype(),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3625,REFERENCE_ERROR_TYPE.getImplicitPrototype());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3626,"assertNotSame(URI_ERROR_TYPE.getImplicitPrototype(),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3627,SYNTAX_ERROR_TYPE.getImplicitPrototype());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3628,"assertNotSame(URI_ERROR_TYPE.getImplicitPrototype(),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3629,TYPE_ERROR_TYPE.getImplicitPrototype());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3631,"assertNotSame(RANGE_ERROR_TYPE.getImplicitPrototype(),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3632,REFERENCE_ERROR_TYPE.getImplicitPrototype());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3633,"assertNotSame(RANGE_ERROR_TYPE.getImplicitPrototype(),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3634,SYNTAX_ERROR_TYPE.getImplicitPrototype());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3635,"assertNotSame(RANGE_ERROR_TYPE.getImplicitPrototype(),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3636,TYPE_ERROR_TYPE.getImplicitPrototype());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3638,"assertNotSame(REFERENCE_ERROR_TYPE.getImplicitPrototype(),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3639,SYNTAX_ERROR_TYPE.getImplicitPrototype());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3640,"assertNotSame(REFERENCE_ERROR_TYPE.getImplicitPrototype(),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3641,TYPE_ERROR_TYPE.getImplicitPrototype());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3643,"assertNotSame(SYNTAX_ERROR_TYPE.getImplicitPrototype(),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3644,TYPE_ERROR_TYPE.getImplicitPrototype());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3648,* Tests that function instances have their constructor pointer back at the
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3649,* function that created them.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3651,public void testInstanceFunctionChaining() throws Exception {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3652,// Array
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3653,"assertEquals(ARRAY_FUNCTION_TYPE, ARRAY_TYPE.getConstructor());"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3655,// Boolean
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3656,"assertEquals(BOOLEAN_OBJECT_FUNCTION_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3657,BOOLEAN_OBJECT_TYPE.getConstructor());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3659,// Date
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3660,"assertEquals(DATE_FUNCTION_TYPE, DATE_TYPE.getConstructor());"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3662,// Error
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3663,"assertEquals(ERROR_FUNCTION_TYPE, ERROR_TYPE.getConstructor());"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3665,// EvalError
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3666,"assertEquals(EVAL_ERROR_FUNCTION_TYPE, EVAL_ERROR_TYPE.getConstructor());"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3668,// Number
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3669,"assertEquals(NUMBER_OBJECT_FUNCTION_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3670,NUMBER_OBJECT_TYPE.getConstructor());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3672,// Object
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3673,"assertEquals(OBJECT_FUNCTION_TYPE, OBJECT_TYPE.getConstructor());"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3675,// RangeError
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3676,"assertEquals(RANGE_ERROR_FUNCTION_TYPE, RANGE_ERROR_TYPE.getConstructor());"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3678,// ReferenceError
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3679,"assertEquals(REFERENCE_ERROR_FUNCTION_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3680,REFERENCE_ERROR_TYPE.getConstructor());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3682,// RegExp
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3683,"assertEquals(REGEXP_FUNCTION_TYPE, REGEXP_TYPE.getConstructor());"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3685,// String
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3686,"assertEquals(STRING_OBJECT_FUNCTION_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3687,STRING_OBJECT_TYPE.getConstructor());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3689,// SyntaxError
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3690,"assertEquals(SYNTAX_ERROR_FUNCTION_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3691,SYNTAX_ERROR_TYPE.getConstructor());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3693,// TypeError
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3694,"assertEquals(TYPE_ERROR_FUNCTION_TYPE, TYPE_ERROR_TYPE.getConstructor());"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3696,// URIError
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3697,"assertEquals(URI_ERROR_FUNCTION_TYPE, URI_ERROR_TYPE.getConstructor());"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3701,* Tests that the method {@link JSType#canTestForEqualityWith(JSType)} handles
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3702,* special corner cases.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3704,"@SuppressWarnings(""checked"")"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3705,public void testCanTestForEqualityWithCornerCases() {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3706,// null == undefined is always true
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3707,assertFalse(NULL_TYPE.canTestForEqualityWith(VOID_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3709,"// (Object,null) == undefined could be true or false"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3710,UnionType nullableObject =
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3711,"(UnionType) createUnionType(OBJECT_TYPE, NULL_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3712,assertTrue(nullableObject.canTestForEqualityWith(VOID_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3713,assertTrue(VOID_TYPE.canTestForEqualityWith(nullableObject));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3717,* Tests the {@link JSType#testForEquality(JSType)} method.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3719,public void testTestForEquality() {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3720,"compare(TRUE, NO_OBJECT_TYPE, NO_OBJECT_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3721,"compare(UNKNOWN, ALL_TYPE, ALL_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3722,"compare(TRUE, NO_TYPE, NO_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3723,"compare(UNKNOWN, NO_OBJECT_TYPE, NUMBER_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3724,"compare(UNKNOWN, ALL_TYPE, NUMBER_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3725,"compare(UNKNOWN, NO_TYPE, NUMBER_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3727,"compare(FALSE, NULL_TYPE, BOOLEAN_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3728,"compare(TRUE, NULL_TYPE, NULL_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3729,"compare(FALSE, NULL_TYPE, NUMBER_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3730,"compare(FALSE, NULL_TYPE, OBJECT_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3731,"compare(FALSE, NULL_TYPE, STRING_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3732,"compare(TRUE, NULL_TYPE, VOID_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3733,"compare(UNKNOWN, NULL_TYPE, createUnionType(UNKNOWN_TYPE, VOID_TYPE));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3734,"compare(UNKNOWN, NULL_TYPE, createUnionType(OBJECT_TYPE, VOID_TYPE));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3735,"compare(UNKNOWN, NULL_TYPE, unresolvedNamedType);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3736,"compare(UNKNOWN,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3737,"NULL_TYPE, createUnionType(unresolvedNamedType, DATE_TYPE));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3739,"compare(FALSE, VOID_TYPE, REGEXP_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3740,"compare(TRUE, VOID_TYPE, VOID_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3741,"compare(UNKNOWN, VOID_TYPE, createUnionType(REGEXP_TYPE, VOID_TYPE));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3743,"compare(UNKNOWN, NUMBER_TYPE, BOOLEAN_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3744,"compare(UNKNOWN, NUMBER_TYPE, NUMBER_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3745,"compare(UNKNOWN, NUMBER_TYPE, OBJECT_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3747,"compare(UNKNOWN, ARRAY_TYPE, BOOLEAN_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3748,"compare(UNKNOWN, OBJECT_TYPE, BOOLEAN_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3749,"compare(UNKNOWN, OBJECT_TYPE, STRING_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3751,"compare(UNKNOWN, STRING_TYPE, STRING_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3753,"compare(UNKNOWN, STRING_TYPE, BOOLEAN_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3754,"compare(UNKNOWN, STRING_TYPE, NUMBER_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3755,"compare(FALSE, STRING_TYPE, VOID_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3756,"compare(FALSE, STRING_TYPE, NULL_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3757,"compare(FALSE, STRING_TYPE, createUnionType(NULL_TYPE, VOID_TYPE));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3759,"compare(UNKNOWN, UNKNOWN_TYPE, BOOLEAN_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3760,"compare(UNKNOWN, UNKNOWN_TYPE, NULL_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3761,"compare(UNKNOWN, UNKNOWN_TYPE, VOID_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3764,"private void compare(TernaryValue r, JSType t1, JSType t2) {"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3765,"assertEquals(r, t1.testForEquality(t2));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3766,"assertEquals(r, t2.testForEquality(t1));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3770,* Tests the subtyping relationships among simple types.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3772,public void testSubtypingSimpleTypes() throws Exception {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3773,// Any
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3774,assertTrue(NO_TYPE.isSubtype(NO_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3775,assertTrue(NO_TYPE.isSubtype(NO_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3776,assertTrue(NO_TYPE.isSubtype(ARRAY_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3777,assertTrue(NO_TYPE.isSubtype(BOOLEAN_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3778,assertTrue(NO_TYPE.isSubtype(BOOLEAN_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3779,assertTrue(NO_TYPE.isSubtype(DATE_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3780,assertTrue(NO_TYPE.isSubtype(ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3781,assertTrue(NO_TYPE.isSubtype(EVAL_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3782,assertTrue(NO_TYPE.isSubtype(functionType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3783,assertTrue(NO_TYPE.isSubtype(NULL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3784,assertTrue(NO_TYPE.isSubtype(NUMBER_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3785,assertTrue(NO_TYPE.isSubtype(NUMBER_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3786,assertTrue(NO_TYPE.isSubtype(OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3787,assertTrue(NO_TYPE.isSubtype(URI_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3788,assertTrue(NO_TYPE.isSubtype(RANGE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3789,assertTrue(NO_TYPE.isSubtype(REFERENCE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3790,assertTrue(NO_TYPE.isSubtype(REGEXP_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3791,assertTrue(NO_TYPE.isSubtype(STRING_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3792,assertTrue(NO_TYPE.isSubtype(STRING_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3793,assertTrue(NO_TYPE.isSubtype(SYNTAX_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3794,assertTrue(NO_TYPE.isSubtype(TYPE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3795,assertTrue(NO_TYPE.isSubtype(ALL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3796,assertTrue(NO_TYPE.isSubtype(VOID_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3798,// AnyObject
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3799,assertFalse(NO_OBJECT_TYPE.isSubtype(NO_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3800,assertTrue(NO_OBJECT_TYPE.isSubtype(NO_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3801,assertTrue(NO_OBJECT_TYPE.isSubtype(ARRAY_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3802,assertFalse(NO_OBJECT_TYPE.isSubtype(BOOLEAN_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3803,assertTrue(NO_OBJECT_TYPE.isSubtype(BOOLEAN_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3804,assertTrue(NO_OBJECT_TYPE.isSubtype(DATE_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3805,assertTrue(NO_OBJECT_TYPE.isSubtype(ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3806,assertTrue(NO_OBJECT_TYPE.isSubtype(EVAL_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3807,assertTrue(NO_OBJECT_TYPE.isSubtype(functionType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3808,assertFalse(NO_OBJECT_TYPE.isSubtype(NULL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3809,assertFalse(NO_OBJECT_TYPE.isSubtype(NUMBER_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3810,assertTrue(NO_OBJECT_TYPE.isSubtype(NUMBER_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3811,assertTrue(NO_OBJECT_TYPE.isSubtype(OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3812,assertTrue(NO_OBJECT_TYPE.isSubtype(URI_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3813,assertTrue(NO_OBJECT_TYPE.isSubtype(RANGE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3814,assertTrue(NO_OBJECT_TYPE.isSubtype(REFERENCE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3815,assertTrue(NO_OBJECT_TYPE.isSubtype(REGEXP_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3816,assertFalse(NO_OBJECT_TYPE.isSubtype(STRING_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3817,assertTrue(NO_OBJECT_TYPE.isSubtype(STRING_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3818,assertTrue(NO_OBJECT_TYPE.isSubtype(SYNTAX_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3819,assertTrue(NO_OBJECT_TYPE.isSubtype(TYPE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3820,assertTrue(NO_OBJECT_TYPE.isSubtype(ALL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3821,assertFalse(NO_OBJECT_TYPE.isSubtype(VOID_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3823,// Array
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3824,assertFalse(ARRAY_TYPE.isSubtype(NO_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3825,assertFalse(ARRAY_TYPE.isSubtype(NO_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3826,assertTrue(ARRAY_TYPE.isSubtype(ARRAY_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3827,assertFalse(ARRAY_TYPE.isSubtype(BOOLEAN_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3828,assertFalse(ARRAY_TYPE.isSubtype(BOOLEAN_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3829,assertFalse(ARRAY_TYPE.isSubtype(DATE_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3830,assertFalse(ARRAY_TYPE.isSubtype(ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3831,assertFalse(ARRAY_TYPE.isSubtype(EVAL_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3832,assertFalse(ARRAY_TYPE.isSubtype(functionType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3833,assertFalse(ARRAY_TYPE.isSubtype(NULL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3834,assertFalse(ARRAY_TYPE.isSubtype(NUMBER_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3835,assertFalse(ARRAY_TYPE.isSubtype(NUMBER_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3836,assertTrue(ARRAY_TYPE.isSubtype(OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3837,assertFalse(ARRAY_TYPE.isSubtype(URI_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3838,assertFalse(ARRAY_TYPE.isSubtype(RANGE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3839,assertFalse(ARRAY_TYPE.isSubtype(REFERENCE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3840,assertFalse(ARRAY_TYPE.isSubtype(REGEXP_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3841,assertFalse(ARRAY_TYPE.isSubtype(STRING_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3842,assertFalse(ARRAY_TYPE.isSubtype(STRING_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3843,assertFalse(ARRAY_TYPE.isSubtype(SYNTAX_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3844,assertFalse(ARRAY_TYPE.isSubtype(TYPE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3845,assertTrue(ARRAY_TYPE.isSubtype(ALL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3846,assertFalse(ARRAY_TYPE.isSubtype(VOID_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3848,// boolean
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3849,assertFalse(BOOLEAN_TYPE.isSubtype(NO_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3850,assertFalse(BOOLEAN_TYPE.isSubtype(NO_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3851,assertFalse(BOOLEAN_TYPE.isSubtype(ARRAY_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3852,assertTrue(BOOLEAN_TYPE.isSubtype(BOOLEAN_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3853,assertFalse(BOOLEAN_TYPE.isSubtype(BOOLEAN_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3854,assertFalse(BOOLEAN_TYPE.isSubtype(DATE_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3855,assertFalse(BOOLEAN_TYPE.isSubtype(ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3856,assertFalse(BOOLEAN_TYPE.isSubtype(EVAL_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3857,assertFalse(BOOLEAN_TYPE.isSubtype(functionType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3858,assertFalse(BOOLEAN_TYPE.isSubtype(NULL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3859,assertFalse(BOOLEAN_TYPE.isSubtype(NUMBER_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3860,assertFalse(BOOLEAN_TYPE.isSubtype(NUMBER_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3861,assertFalse(BOOLEAN_TYPE.isSubtype(OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3862,assertFalse(BOOLEAN_TYPE.isSubtype(URI_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3863,assertFalse(BOOLEAN_TYPE.isSubtype(RANGE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3864,assertFalse(BOOLEAN_TYPE.isSubtype(REFERENCE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3865,assertFalse(BOOLEAN_TYPE.isSubtype(REGEXP_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3866,assertFalse(BOOLEAN_TYPE.isSubtype(STRING_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3867,assertFalse(BOOLEAN_TYPE.isSubtype(STRING_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3868,assertFalse(BOOLEAN_TYPE.isSubtype(SYNTAX_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3869,assertFalse(BOOLEAN_TYPE.isSubtype(TYPE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3870,assertTrue(BOOLEAN_TYPE.isSubtype(ALL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3871,assertFalse(BOOLEAN_TYPE.isSubtype(VOID_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3873,// Boolean
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3874,assertFalse(BOOLEAN_OBJECT_TYPE.isSubtype(NO_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3875,assertFalse(BOOLEAN_OBJECT_TYPE.isSubtype(NO_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3876,assertFalse(BOOLEAN_OBJECT_TYPE.isSubtype(ARRAY_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3877,assertFalse(BOOLEAN_OBJECT_TYPE.isSubtype(BOOLEAN_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3878,assertTrue(BOOLEAN_OBJECT_TYPE.isSubtype(BOOLEAN_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3879,assertFalse(BOOLEAN_OBJECT_TYPE.isSubtype(DATE_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3880,assertFalse(BOOLEAN_OBJECT_TYPE.isSubtype(ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3881,assertFalse(BOOLEAN_OBJECT_TYPE.isSubtype(EVAL_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3882,assertFalse(BOOLEAN_OBJECT_TYPE.isSubtype(functionType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3883,assertFalse(BOOLEAN_OBJECT_TYPE.isSubtype(NULL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3884,assertFalse(BOOLEAN_OBJECT_TYPE.isSubtype(NUMBER_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3885,assertFalse(BOOLEAN_OBJECT_TYPE.isSubtype(NUMBER_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3886,assertTrue(BOOLEAN_OBJECT_TYPE.isSubtype(OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3887,assertFalse(BOOLEAN_OBJECT_TYPE.isSubtype(URI_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3888,assertFalse(BOOLEAN_OBJECT_TYPE.isSubtype(RANGE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3889,assertFalse(BOOLEAN_OBJECT_TYPE.isSubtype(REFERENCE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3890,assertFalse(BOOLEAN_OBJECT_TYPE.isSubtype(REGEXP_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3891,assertFalse(BOOLEAN_OBJECT_TYPE.isSubtype(STRING_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3892,assertFalse(BOOLEAN_OBJECT_TYPE.isSubtype(STRING_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3893,assertFalse(BOOLEAN_OBJECT_TYPE.isSubtype(SYNTAX_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3894,assertFalse(BOOLEAN_OBJECT_TYPE.isSubtype(TYPE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3895,assertTrue(BOOLEAN_OBJECT_TYPE.isSubtype(ALL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3896,assertFalse(BOOLEAN_OBJECT_TYPE.isSubtype(VOID_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3898,// Date
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3899,assertFalse(DATE_TYPE.isSubtype(NO_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3900,assertFalse(DATE_TYPE.isSubtype(NO_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3901,assertFalse(DATE_TYPE.isSubtype(ARRAY_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3902,assertFalse(DATE_TYPE.isSubtype(BOOLEAN_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3903,assertFalse(DATE_TYPE.isSubtype(BOOLEAN_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3904,assertTrue(DATE_TYPE.isSubtype(DATE_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3905,assertFalse(DATE_TYPE.isSubtype(ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3906,assertFalse(DATE_TYPE.isSubtype(EVAL_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3907,assertFalse(DATE_TYPE.isSubtype(functionType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3908,assertFalse(DATE_TYPE.isSubtype(NULL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3909,assertFalse(DATE_TYPE.isSubtype(NUMBER_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3910,assertFalse(DATE_TYPE.isSubtype(NUMBER_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3911,assertTrue(DATE_TYPE.isSubtype(OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3912,assertFalse(DATE_TYPE.isSubtype(URI_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3913,assertFalse(DATE_TYPE.isSubtype(RANGE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3914,assertFalse(DATE_TYPE.isSubtype(REFERENCE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3915,assertFalse(DATE_TYPE.isSubtype(REGEXP_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3916,assertFalse(DATE_TYPE.isSubtype(STRING_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3917,assertFalse(DATE_TYPE.isSubtype(STRING_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3918,assertFalse(DATE_TYPE.isSubtype(SYNTAX_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3919,assertFalse(DATE_TYPE.isSubtype(TYPE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3920,assertTrue(DATE_TYPE.isSubtype(ALL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3921,assertFalse(DATE_TYPE.isSubtype(VOID_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3923,// Error
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3924,assertFalse(ERROR_TYPE.isSubtype(NO_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3925,assertFalse(ERROR_TYPE.isSubtype(NO_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3926,assertFalse(ERROR_TYPE.isSubtype(ARRAY_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3927,assertFalse(ERROR_TYPE.isSubtype(BOOLEAN_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3928,assertFalse(ERROR_TYPE.isSubtype(BOOLEAN_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3929,assertFalse(ERROR_TYPE.isSubtype(DATE_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3930,assertTrue(ERROR_TYPE.isSubtype(ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3931,assertFalse(ERROR_TYPE.isSubtype(EVAL_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3932,assertFalse(ERROR_TYPE.isSubtype(functionType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3933,assertFalse(ERROR_TYPE.isSubtype(NULL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3934,assertFalse(ERROR_TYPE.isSubtype(NUMBER_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3935,assertFalse(ERROR_TYPE.isSubtype(NUMBER_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3936,assertTrue(ERROR_TYPE.isSubtype(OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3937,assertFalse(ERROR_TYPE.isSubtype(URI_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3938,assertFalse(ERROR_TYPE.isSubtype(RANGE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3939,assertFalse(ERROR_TYPE.isSubtype(REFERENCE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3940,assertFalse(ERROR_TYPE.isSubtype(REGEXP_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3941,assertFalse(ERROR_TYPE.isSubtype(STRING_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3942,assertFalse(ERROR_TYPE.isSubtype(STRING_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3943,assertFalse(ERROR_TYPE.isSubtype(SYNTAX_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3944,assertFalse(ERROR_TYPE.isSubtype(TYPE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3945,assertTrue(ERROR_TYPE.isSubtype(ALL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3946,assertFalse(ERROR_TYPE.isSubtype(VOID_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3948,// EvalError
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3949,assertFalse(EVAL_ERROR_TYPE.isSubtype(NO_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3950,assertFalse(EVAL_ERROR_TYPE.isSubtype(NO_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3951,assertFalse(EVAL_ERROR_TYPE.isSubtype(ARRAY_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3952,assertFalse(EVAL_ERROR_TYPE.isSubtype(BOOLEAN_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3953,assertFalse(EVAL_ERROR_TYPE.isSubtype(BOOLEAN_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3954,assertFalse(ERROR_TYPE.isSubtype(DATE_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3955,assertTrue(EVAL_ERROR_TYPE.isSubtype(ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3956,assertTrue(EVAL_ERROR_TYPE.isSubtype(EVAL_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3957,assertFalse(EVAL_ERROR_TYPE.isSubtype(functionType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3958,assertFalse(EVAL_ERROR_TYPE.isSubtype(NULL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3959,assertFalse(EVAL_ERROR_TYPE.isSubtype(NUMBER_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3960,assertFalse(EVAL_ERROR_TYPE.isSubtype(NUMBER_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3961,assertTrue(EVAL_ERROR_TYPE.isSubtype(OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3962,assertFalse(EVAL_ERROR_TYPE.isSubtype(URI_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3963,assertFalse(EVAL_ERROR_TYPE.isSubtype(RANGE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3964,assertFalse(EVAL_ERROR_TYPE.isSubtype(REFERENCE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3965,assertFalse(EVAL_ERROR_TYPE.isSubtype(REGEXP_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3966,assertFalse(EVAL_ERROR_TYPE.isSubtype(STRING_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3967,assertFalse(EVAL_ERROR_TYPE.isSubtype(STRING_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3968,assertFalse(EVAL_ERROR_TYPE.isSubtype(SYNTAX_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3969,assertFalse(EVAL_ERROR_TYPE.isSubtype(TYPE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3970,assertTrue(EVAL_ERROR_TYPE.isSubtype(ALL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3971,assertFalse(EVAL_ERROR_TYPE.isSubtype(VOID_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3973,// RangeError
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3974,assertTrue(RANGE_ERROR_TYPE.isSubtype(ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3976,// ReferenceError
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3977,assertTrue(REFERENCE_ERROR_TYPE.isSubtype(ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3979,// TypeError
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3980,assertTrue(TYPE_ERROR_TYPE.isSubtype(ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3982,// UriError
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3983,assertTrue(URI_ERROR_TYPE.isSubtype(ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3985,// Unknown
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3986,assertFalse(ALL_TYPE.isSubtype(NO_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3987,assertFalse(ALL_TYPE.isSubtype(NO_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3988,assertFalse(ALL_TYPE.isSubtype(ARRAY_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3989,assertFalse(ALL_TYPE.isSubtype(BOOLEAN_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3990,assertFalse(ALL_TYPE.isSubtype(BOOLEAN_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3991,assertFalse(ERROR_TYPE.isSubtype(DATE_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3992,assertFalse(ALL_TYPE.isSubtype(ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3993,assertFalse(ALL_TYPE.isSubtype(EVAL_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3994,assertFalse(ALL_TYPE.isSubtype(functionType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3995,assertFalse(ALL_TYPE.isSubtype(NULL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3996,assertFalse(ALL_TYPE.isSubtype(NUMBER_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3997,assertFalse(ALL_TYPE.isSubtype(NUMBER_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3998,assertFalse(ALL_TYPE.isSubtype(OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,3999,assertFalse(ALL_TYPE.isSubtype(URI_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4000,assertFalse(ALL_TYPE.isSubtype(RANGE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4001,assertFalse(ALL_TYPE.isSubtype(REFERENCE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4002,assertFalse(ALL_TYPE.isSubtype(REGEXP_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4003,assertFalse(ALL_TYPE.isSubtype(STRING_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4004,assertFalse(ALL_TYPE.isSubtype(STRING_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4005,assertFalse(ALL_TYPE.isSubtype(SYNTAX_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4006,assertFalse(ALL_TYPE.isSubtype(TYPE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4007,assertTrue(ALL_TYPE.isSubtype(ALL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4008,assertFalse(ALL_TYPE.isSubtype(VOID_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4012,* Tests subtyping of union types.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4014,public void testSubtypingUnionTypes() throws Exception {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4015,// subtypes
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4016,assertTrue(BOOLEAN_TYPE.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4017,"isSubtype(createUnionType(BOOLEAN_TYPE, STRING_TYPE)));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4018,"assertTrue(createUnionType(BOOLEAN_TYPE, STRING_TYPE)."
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4019,"isSubtype(createUnionType(BOOLEAN_TYPE, STRING_TYPE)));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4020,"assertTrue(createUnionType(BOOLEAN_TYPE, STRING_TYPE)."
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4021,"isSubtype(createUnionType(BOOLEAN_TYPE, STRING_TYPE, NULL_TYPE)));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4022,"assertTrue(createUnionType(BOOLEAN_TYPE, STRING_TYPE)."
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4023,"isSubtype(createUnionType(BOOLEAN_TYPE, STRING_TYPE, NULL_TYPE)));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4024,assertTrue(createUnionType(BOOLEAN_TYPE).
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4025,"isSubtype(createUnionType(BOOLEAN_TYPE, STRING_TYPE, NULL_TYPE)));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4026,assertTrue(createUnionType(STRING_TYPE).
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4027,"isSubtype(createUnionType(BOOLEAN_TYPE, STRING_TYPE, NULL_TYPE)));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4028,"assertTrue(createUnionType(STRING_TYPE, NULL_TYPE).isSubtype(ALL_TYPE));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4029,"assertTrue(createUnionType(DATE_TYPE, REGEXP_TYPE).isSubtype(OBJECT_TYPE));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4030,"assertTrue(createUnionType(URI_ERROR_TYPE, EVAL_ERROR_TYPE)."
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4031,isSubtype(ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4032,"assertTrue(createUnionType(URI_ERROR_TYPE, EVAL_ERROR_TYPE)."
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4033,isSubtype(OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4035,// not subtypes
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4036,"assertFalse(createUnionType(STRING_TYPE, NULL_TYPE).isSubtype(NO_TYPE));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4037,"assertFalse(createUnionType(STRING_TYPE, NULL_TYPE)."
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4038,isSubtype(NO_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4039,"assertFalse(createUnionType(NO_OBJECT_TYPE, NULL_TYPE)."
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4040,isSubtype(OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4042,// defined unions
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4043,assertTrue(NUMBER_TYPE.isSubtype(OBJECT_NUMBER_STRING));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4044,assertTrue(OBJECT_TYPE.isSubtype(OBJECT_NUMBER_STRING));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4045,assertTrue(STRING_TYPE.isSubtype(OBJECT_NUMBER_STRING));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4046,assertTrue(NO_OBJECT_TYPE.isSubtype(OBJECT_NUMBER_STRING));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4048,assertTrue(NUMBER_TYPE.isSubtype(NUMBER_STRING_BOOLEAN));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4049,assertTrue(BOOLEAN_TYPE.isSubtype(NUMBER_STRING_BOOLEAN));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4050,assertTrue(STRING_TYPE.isSubtype(NUMBER_STRING_BOOLEAN));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4052,assertTrue(NUMBER_TYPE.isSubtype(OBJECT_NUMBER_STRING_BOOLEAN));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4053,assertTrue(OBJECT_TYPE.isSubtype(OBJECT_NUMBER_STRING_BOOLEAN));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4054,assertTrue(STRING_TYPE.isSubtype(OBJECT_NUMBER_STRING_BOOLEAN));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4055,assertTrue(BOOLEAN_TYPE.isSubtype(OBJECT_NUMBER_STRING_BOOLEAN));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4056,assertTrue(NO_OBJECT_TYPE.isSubtype(OBJECT_NUMBER_STRING_BOOLEAN));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4060,* Tests that the Object type is the greatest element (top) of the object
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4061,* hierarchy.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4063,public void testSubtypingObjectTopOfObjects() throws Exception {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4064,assertTrue(OBJECT_TYPE.isSubtype(OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4065,"assertTrue(createUnionType(DATE_TYPE, REGEXP_TYPE).isSubtype(OBJECT_TYPE));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4066,"assertTrue(createUnionType(OBJECT_TYPE, NO_OBJECT_TYPE)."
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4067,isSubtype(OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4068,assertTrue(functionType.isSubtype(OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4071,public void testSubtypingFunctionPrototypeType() throws Exception {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4072,"FunctionType sub1 = registry.createConstructorType(null, null, null, null);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4073,sub1.setPrototypeBasedOn(googBar);
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4074,"FunctionType sub2 = registry.createConstructorType(null, null, null, null);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4075,sub2.setPrototypeBasedOn(googBar);
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4077,ObjectType o1 = sub1.getInstanceType();
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4078,ObjectType o2 = sub2.getInstanceType();
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4080,assertFalse(o1.isSubtype(o2));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4081,assertFalse(o1.getImplicitPrototype().isSubtype(o2.getImplicitPrototype()));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4082,assertTrue(o1.getImplicitPrototype().isSubtype(googBar));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4083,assertTrue(o2.getImplicitPrototype().isSubtype(googBar));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4086,public void testSubtypingFunctionFixedArgs() throws Exception {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4087,"FunctionType f1 = registry.createFunctionType(OBJECT_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4088,"false, BOOLEAN_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4089,"FunctionType f2 = registry.createFunctionType(STRING_OBJECT_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4090,"false, BOOLEAN_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4092,assertTrue(f1.isSubtype(f1));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4093,assertFalse(f1.isSubtype(f2));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4094,assertTrue(f2.isSubtype(f1));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4095,assertTrue(f2.isSubtype(f2));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4097,assertTrue(f1.isSubtype(U2U_CONSTRUCTOR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4098,assertTrue(f2.isSubtype(U2U_CONSTRUCTOR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4099,assertTrue(U2U_CONSTRUCTOR_TYPE.isSubtype(f1));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4100,assertTrue(U2U_CONSTRUCTOR_TYPE.isSubtype(f2));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4103,public void testSubtypingFunctionMultipleFixedArgs() throws Exception {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4104,"FunctionType f1 = registry.createFunctionType(OBJECT_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4105,"false, EVAL_ERROR_TYPE, STRING_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4106,"FunctionType f2 = registry.createFunctionType(STRING_OBJECT_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4107,"false, ERROR_TYPE, ALL_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4109,assertTrue(f1.isSubtype(f1));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4110,assertFalse(f1.isSubtype(f2));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4111,assertTrue(f2.isSubtype(f1));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4112,assertTrue(f2.isSubtype(f2));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4114,assertTrue(f1.isSubtype(U2U_CONSTRUCTOR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4115,assertTrue(f2.isSubtype(U2U_CONSTRUCTOR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4116,assertTrue(U2U_CONSTRUCTOR_TYPE.isSubtype(f1));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4117,assertTrue(U2U_CONSTRUCTOR_TYPE.isSubtype(f2));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4120,public void testSubtypingFunctionFixedArgsNotMatching() throws Exception {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4121,"FunctionType f1 = registry.createFunctionType(OBJECT_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4122,"false, EVAL_ERROR_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4123,"FunctionType f2 = registry.createFunctionType(STRING_OBJECT_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4124,"false, ERROR_TYPE, ALL_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4126,assertTrue(f1.isSubtype(f1));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4127,assertFalse(f1.isSubtype(f2));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4128,assertTrue(f2.isSubtype(f1));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4129,assertTrue(f2.isSubtype(f2));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4131,assertTrue(f1.isSubtype(U2U_CONSTRUCTOR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4132,assertTrue(f2.isSubtype(U2U_CONSTRUCTOR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4133,assertTrue(U2U_CONSTRUCTOR_TYPE.isSubtype(f1));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4134,assertTrue(U2U_CONSTRUCTOR_TYPE.isSubtype(f2));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4137,public void testSubtypingFunctionVariableArgsOneOnly() throws Exception {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4138,// f1 = (EvalError...) -> Object
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4139,"FunctionType f1 = registry.createFunctionType(OBJECT_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4140,"true, EVAL_ERROR_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4141,"// f2 = (Error, Object) -> String"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4142,"FunctionType f2 = registry.createFunctionType(STRING_OBJECT_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4143,"false, ERROR_TYPE, OBJECT_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4145,assertTrue(f1.isSubtype(f1));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4146,assertFalse(f1.isSubtype(f2));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4147,assertFalse(f2.isSubtype(f1));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4148,assertTrue(f2.isSubtype(f2));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4150,assertTrue(f1.isSubtype(U2U_CONSTRUCTOR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4151,assertTrue(f2.isSubtype(U2U_CONSTRUCTOR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4152,assertTrue(U2U_CONSTRUCTOR_TYPE.isSubtype(f1));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4153,assertTrue(U2U_CONSTRUCTOR_TYPE.isSubtype(f2));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4156,public void testSubtypingFunctionVariableArgsBoth() throws Exception {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4157,"// f1 = (UriError, EvalError, EvalError...) -> Object"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4158,"FunctionType f1 = registry.createFunctionType(OBJECT_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4159,"true,  URI_ERROR_TYPE, EVAL_ERROR_TYPE, EVAL_ERROR_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4160,"// f2 = (Error, Object, EvalError...) -> String"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4161,"FunctionType f2 = registry.createFunctionType(STRING_OBJECT_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4162,"true, ERROR_TYPE, OBJECT_TYPE, EVAL_ERROR_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4164,assertTrue(f1.isSubtype(f1));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4165,assertFalse(f1.isSubtype(f2));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4166,assertTrue(f2.isSubtype(f1));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4167,assertTrue(f2.isSubtype(f2));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4169,assertTrue(f1.isSubtype(U2U_CONSTRUCTOR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4170,assertTrue(f2.isSubtype(U2U_CONSTRUCTOR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4171,assertTrue(U2U_CONSTRUCTOR_TYPE.isSubtype(f1));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4172,assertTrue(U2U_CONSTRUCTOR_TYPE.isSubtype(f2));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4175,public void testSubtypingMostGeneralFunction() throws Exception {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4176,"// (EvalError, String) -> Object"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4177,"FunctionType f1 = registry.createFunctionType(OBJECT_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4178,"false, EVAL_ERROR_TYPE, STRING_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4179,"// (string, void) -> number"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4180,"FunctionType f2 = registry.createFunctionType(NUMBER_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4181,"false, STRING_TYPE, VOID_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4182,"// (Date, string, number) -> AnyObject"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4183,"FunctionType f3 = registry.createFunctionType(NO_OBJECT_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4184,"false, DATE_TYPE, STRING_TYPE, NUMBER_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4185,// (Number) -> Any
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4186,"FunctionType f4 = registry.createFunctionType(NO_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4187,"false, NUMBER_OBJECT_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4188,// f1 = (EvalError...) -> Object
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4189,"FunctionType f5 = registry.createFunctionType(OBJECT_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4190,"true, EVAL_ERROR_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4191,"// f2 = (Error, Object) -> String"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4192,"FunctionType f6 = registry.createFunctionType(STRING_OBJECT_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4193,"false, ERROR_TYPE, OBJECT_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4194,"// f1 = (UriError, EvalError...) -> Object"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4195,"FunctionType f7 = registry.createFunctionType(OBJECT_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4196,"true,  URI_ERROR_TYPE, EVAL_ERROR_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4197,"// f2 = (Error, Object, EvalError...) -> String"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4198,"FunctionType f8 = registry.createFunctionType(STRING_OBJECT_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4199,"true, ERROR_TYPE, OBJECT_TYPE, EVAL_ERROR_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4201,assertTrue(LEAST_FUNCTION_TYPE.isSubtype(GREATEST_FUNCTION_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4202,assertTrue(LEAST_FUNCTION_TYPE.isSubtype(U2U_CONSTRUCTOR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4203,assertTrue(U2U_CONSTRUCTOR_TYPE.isSubtype(LEAST_FUNCTION_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4205,assertFalse(GREATEST_FUNCTION_TYPE.isSubtype(LEAST_FUNCTION_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4206,assertTrue(GREATEST_FUNCTION_TYPE.isSubtype(U2U_CONSTRUCTOR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4207,assertTrue(U2U_CONSTRUCTOR_TYPE.isSubtype(GREATEST_FUNCTION_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4209,assertTrue(f1.isSubtype(GREATEST_FUNCTION_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4210,assertTrue(f2.isSubtype(GREATEST_FUNCTION_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4211,assertTrue(f3.isSubtype(GREATEST_FUNCTION_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4212,assertTrue(f4.isSubtype(GREATEST_FUNCTION_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4213,assertTrue(f5.isSubtype(GREATEST_FUNCTION_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4214,assertTrue(f6.isSubtype(GREATEST_FUNCTION_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4215,assertTrue(f7.isSubtype(GREATEST_FUNCTION_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4216,assertTrue(f8.isSubtype(GREATEST_FUNCTION_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4218,assertFalse(f1.isSubtype(LEAST_FUNCTION_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4219,assertFalse(f2.isSubtype(LEAST_FUNCTION_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4220,assertFalse(f3.isSubtype(LEAST_FUNCTION_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4221,assertFalse(f4.isSubtype(LEAST_FUNCTION_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4222,assertFalse(f5.isSubtype(LEAST_FUNCTION_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4223,assertFalse(f6.isSubtype(LEAST_FUNCTION_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4224,assertFalse(f7.isSubtype(LEAST_FUNCTION_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4225,assertFalse(f8.isSubtype(LEAST_FUNCTION_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4227,assertTrue(LEAST_FUNCTION_TYPE.isSubtype(f1));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4228,assertTrue(LEAST_FUNCTION_TYPE.isSubtype(f2));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4229,assertTrue(LEAST_FUNCTION_TYPE.isSubtype(f3));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4230,assertTrue(LEAST_FUNCTION_TYPE.isSubtype(f4));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4231,assertTrue(LEAST_FUNCTION_TYPE.isSubtype(f5));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4232,assertTrue(LEAST_FUNCTION_TYPE.isSubtype(f6));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4233,assertTrue(LEAST_FUNCTION_TYPE.isSubtype(f7));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4234,assertTrue(LEAST_FUNCTION_TYPE.isSubtype(f8));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4236,assertFalse(GREATEST_FUNCTION_TYPE.isSubtype(f1));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4237,assertFalse(GREATEST_FUNCTION_TYPE.isSubtype(f2));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4238,assertFalse(GREATEST_FUNCTION_TYPE.isSubtype(f3));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4239,assertFalse(GREATEST_FUNCTION_TYPE.isSubtype(f4));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4240,assertFalse(GREATEST_FUNCTION_TYPE.isSubtype(f5));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4241,assertFalse(GREATEST_FUNCTION_TYPE.isSubtype(f6));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4242,assertFalse(GREATEST_FUNCTION_TYPE.isSubtype(f7));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4243,assertFalse(GREATEST_FUNCTION_TYPE.isSubtype(f8));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4247,* Types to test for symmetrical relationships.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4249,private List<JSType> getTypesToTestForSymmetry() {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4250,return Lists.newArrayList(
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4251,"UNKNOWN_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4252,"NULL_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4253,"VOID_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4254,"NUMBER_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4255,"STRING_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4256,"BOOLEAN_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4257,"OBJECT_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4258,"U2U_CONSTRUCTOR_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4259,"ALL_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4260,"NO_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4261,"NO_OBJECT_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4262,"createUnionType(BOOLEAN_TYPE, STRING_TYPE),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4263,"createUnionType(NUMBER_TYPE, STRING_TYPE),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4264,"createUnionType(NULL_TYPE, dateMethod),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4265,"createUnionType(UNKNOWN_TYPE, dateMethod),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4266,"createUnionType(namedGoogBar, dateMethod),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4267,"enumType,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4268,"elementsType,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4269,"dateMethod,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4270,"functionType,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4271,"unresolvedNamedType,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4272,"googBar,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4273,"namedGoogBar,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4274,"googBar.getInstanceType(),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4275,"namedGoogBar,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4276,"subclassOfUnresolvedNamedType,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4277,"subclassCtor,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4278,recordType
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4283,* Tests that getLeastSupertype is a symmetric relation.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4285,public void testSymmetryOfLeastSupertype() {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4286,List<JSType> listA = getTypesToTestForSymmetry();
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4287,List<JSType> listB = getTypesToTestForSymmetry();
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4288,for (JSType typeA : listA) {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4289,for (JSType typeB : listB) {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4290,JSType aOnB = typeA.getLeastSupertype(typeB);
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4291,JSType bOnA = typeB.getLeastSupertype(typeA);
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4293,"// Use a custom assert message instead of the normal assertEquals,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4294,// to make it more helpful.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4295,assertTrue(
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4296,"String.format(""getLeastSupertype not symmetrical:\n"" +"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4297,"""typeA: %s\ntypeB: %s\n"" +"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4298,"""a.getLeastSupertype(b): %s\n"" +"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4299,"""b.getLeastSupertype(a): %s\n"","
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4300,"typeA, typeB, aOnB, bOnA),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4301,aOnB.equals(bOnA));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4306,public void testWeirdBug() {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4307,assertFalse(googBar.equals(googBar.getInstanceType()));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4308,assertFalse(googBar.getInstanceType().equals(googBar));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4309,assertFalse(googBar.isSubtype(googBar.getInstanceType()));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4310,assertFalse(googBar.getInstanceType().isSubtype(googBar));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4314,* Tests that getGreatestSubtype is a symmetric relation.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4316,public void testSymmetryOfGreatestSubtype() {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4317,List<JSType> listA = getTypesToTestForSymmetry();
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4318,List<JSType> listB = getTypesToTestForSymmetry();
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4319,for (JSType typeA : listA) {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4320,for (JSType typeB : listB) {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4321,JSType aOnB = typeA.getGreatestSubtype(typeB);
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4322,JSType bOnA = typeB.getGreatestSubtype(typeA);
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4324,"// Use a custom assert message instead of the normal assertEquals,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4325,// to make it more helpful.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4326,assertTrue(
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4327,"String.format(""getGreatestSubtype not symmetrical:\n"" +"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4328,"""typeA: %s\ntypeB: %s\n"" +"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4329,"""a.getGreatestSubtype(b): %s\n"" +"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4330,"""b.getGreatestSubtype(a): %s\n"","
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4331,"typeA, typeB, aOnB, bOnA),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4332,aOnB.equals(bOnA));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4338,* Tests that getLeastSupertype is a reflexive relation.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4340,public void testReflexivityOfLeastSupertype() {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4341,List<JSType> list = getTypesToTestForSymmetry();
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4342,for (JSType type : list) {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4343,"assertEquals(""getLeastSupertype not reflexive"","
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4344,"type, type.getLeastSupertype(type));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4349,* Tests that getGreatestSubtype is a reflexive relation.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4351,public void testReflexivityOfGreatestSubtype() {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4352,List<JSType> list = getTypesToTestForSymmetry();
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4353,for (JSType type : list) {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4354,"assertEquals(""getGreatestSubtype not reflexive"","
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4355,"type, type.getGreatestSubtype(type));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4360,* Tests {@link JSType#getLeastSupertype(JSType)} for unresolved named types.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4362,public void testLeastSupertypeUnresolvedNamedType() {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4363,"// (undefined,function(?):?) and ? unresolved named type"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4364,JSType expected = registry.createUnionType(
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4365,"unresolvedNamedType, U2U_FUNCTION_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4366,"assertEquals(expected,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4367,unresolvedNamedType.getLeastSupertype(U2U_FUNCTION_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4368,"assertEquals(expected,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4369,U2U_FUNCTION_TYPE.getLeastSupertype(unresolvedNamedType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4370,"assertEquals(""(function (...[?]): ?|not.resolved.named.type)"","
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4371,expected.toString());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4374,public void testLeastSupertypeUnresolvedNamedType2() {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4375,JSType expected = registry.createUnionType(
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4376,"unresolvedNamedType, UNKNOWN_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4377,"assertEquals(expected,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4378,unresolvedNamedType.getLeastSupertype(UNKNOWN_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4379,"assertEquals(expected,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4380,UNKNOWN_TYPE.getLeastSupertype(unresolvedNamedType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4381,"assertEquals(UNKNOWN_TYPE, expected);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4384,public void testLeastSupertypeUnresolvedNamedType3() {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4385,JSType expected = registry.createUnionType(
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4386,"unresolvedNamedType, CHECKED_UNKNOWN_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4387,"assertEquals(expected,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4388,unresolvedNamedType.getLeastSupertype(CHECKED_UNKNOWN_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4389,"assertEquals(expected,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4390,CHECKED_UNKNOWN_TYPE.getLeastSupertype(unresolvedNamedType));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4391,"assertEquals(CHECKED_UNKNOWN_TYPE, expected);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4394,/** Tests the subclass of an unresolve named type */
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4395,public void testSubclassOfUnresolvedNamedType() {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4396,assertTrue(subclassOfUnresolvedNamedType.isUnknownType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4400,"* Tests the {@link NamedType#equals} function, which had a bug in it."
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4402,public void testNamedTypeEquals() {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4403,JSTypeRegistry jst = new JSTypeRegistry(null);
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4405,// test == if references are equal
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4406,"NamedType a = new NamedType(jst, ""type1"", ""source"", 1, 0);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4407,"NamedType b = new NamedType(jst, ""type1"", ""source"", 1, 0);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4408,assertTrue(a.equals(b));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4410,// test != to non-NamedType
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4411,"assertFalse(a.equals(""type1""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4413,// test == instance of referenced type
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4414,assertTrue(namedGoogBar.equals(googBar.getInstanceType()));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4415,assertTrue(googBar.getInstanceType().equals(namedGoogBar));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4419,* Tests the {@link NamedType#equals} function against other types.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4421,public void testNamedTypeEquals2() {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4422,// test == if references are equal
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4423,"NamedType a = new NamedType(registry, ""typeA"", ""source"", 1, 0);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4424,"NamedType b = new NamedType(registry, ""typeB"", ""source"", 1, 0);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4426,ObjectType realA = registry.createConstructorType(
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4427,"""typeA"", null, null, null).getInstanceType();"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4428,ObjectType realB = registry.createEnumType(
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4429,"""typeB"", NUMBER_TYPE).getElementsType();"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4430,"registry.declareType(""typeA"", realA);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4431,"registry.declareType(""typeB"", realB);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4433,"assertEquals(a.hashCode(), realA.hashCode());"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4434,"assertEquals(a, realA);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4435,"assertEquals(b.hashCode(), realB.hashCode());"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4436,"assertEquals(b, realB);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4438,"a.resolve(null, null);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4439,"b.resolve(null, null);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4441,assertTrue(a.isResolved());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4442,assertTrue(b.isResolved());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4443,"assertEquals(a.hashCode(), realA.hashCode());"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4444,"assertEquals(a, realA);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4445,"assertEquals(b.hashCode(), realB.hashCode());"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4446,"assertEquals(b, realB);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4450,* Tests the {@link NamedType#equals} function against other types
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4451,* when it's forward-declared.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4453,public void testForwardDeclaredNamedTypeEquals() {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4454,// test == if references are equal
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4455,"NamedType a = new NamedType(registry, ""typeA"", ""source"", 1, 0);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4456,"NamedType b = new NamedType(registry, ""typeA"", ""source"", 1, 0);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4457,"registry.forwardDeclareType(""typeA"");"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4459,"assertEquals(a.hashCode(), b.hashCode());"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4460,"assertEquals(a, b);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4462,"a.resolve(null, EMPTY_SCOPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4464,assertTrue(a.isResolved());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4465,assertFalse(b.isResolved());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4467,"assertEquals(a.hashCode(), b.hashCode());"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4468,"assertEquals(a, b);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4470,assertFalse(a.equals(UNKNOWN_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4471,assertFalse(b.equals(UNKNOWN_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4474,public void testForwardDeclaredNamedType() {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4475,"NamedType a = new NamedType(registry, ""typeA"", ""source"", 1, 0);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4476,"registry.forwardDeclareType(""typeA"");"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4478,"assertEquals(UNKNOWN_TYPE, a.getLeastSupertype(UNKNOWN_TYPE));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4479,"assertEquals(CHECKED_UNKNOWN_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4480,a.getLeastSupertype(CHECKED_UNKNOWN_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4481,"assertEquals(UNKNOWN_TYPE, UNKNOWN_TYPE.getLeastSupertype(a));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4482,"assertEquals(CHECKED_UNKNOWN_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4483,CHECKED_UNKNOWN_TYPE.getLeastSupertype(a));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4487,* Tests {@link JSType#getGreatestSubtype(JSType)} on simple types.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4489,public void testGreatestSubtypeSimpleTypes() {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4490,"assertEquals(ARRAY_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4491,ARRAY_TYPE.getGreatestSubtype(ALL_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4492,"assertEquals(ARRAY_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4493,ALL_TYPE.getGreatestSubtype(ARRAY_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4494,"assertEquals(NO_OBJECT_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4495,REGEXP_TYPE.getGreatestSubtype(NO_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4496,"assertEquals(NO_OBJECT_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4497,NO_OBJECT_TYPE.getGreatestSubtype(REGEXP_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4498,"assertEquals(NO_OBJECT_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4499,ARRAY_TYPE.getGreatestSubtype(STRING_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4500,"assertEquals(NO_TYPE, ARRAY_TYPE.getGreatestSubtype(NUMBER_TYPE));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4501,"assertEquals(NO_OBJECT_TYPE, ARRAY_TYPE.getGreatestSubtype(functionType));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4502,"assertEquals(STRING_OBJECT_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4503,STRING_OBJECT_TYPE.getGreatestSubtype(OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4504,"assertEquals(STRING_OBJECT_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4505,OBJECT_TYPE.getGreatestSubtype(STRING_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4506,"assertEquals(NO_OBJECT_TYPE, ARRAY_TYPE.getGreatestSubtype(DATE_TYPE));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4507,"assertEquals(NO_OBJECT_TYPE, ARRAY_TYPE.getGreatestSubtype(REGEXP_TYPE));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4508,"assertEquals(EVAL_ERROR_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4509,ERROR_TYPE.getGreatestSubtype(EVAL_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4510,"assertEquals(EVAL_ERROR_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4511,EVAL_ERROR_TYPE.getGreatestSubtype(ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4512,"assertEquals(NO_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4513,NULL_TYPE.getGreatestSubtype(ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4514,"assertEquals(UNKNOWN_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4515,NUMBER_TYPE.getGreatestSubtype(UNKNOWN_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4519,* Tests {@link JSType#getGreatestSubtype(JSType)} on union types.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4521,public void testGreatestSubtypeUnionTypes1() {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4522,"assertEquals(NULL_TYPE, createNullableType(STRING_TYPE).getGreatestSubtype("
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4523,createNullableType(NUMBER_TYPE)));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4527,* Tests {@link JSType#getGreatestSubtype(JSType)} on union types.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4529,"@SuppressWarnings(""checked"")"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4530,public void testGreatestSubtypeUnionTypes2() {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4531,UnionType evalUriError =
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4532,"(UnionType) createUnionType(EVAL_ERROR_TYPE, URI_ERROR_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4533,"assertEquals(evalUriError,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4534,evalUriError.getGreatestSubtype(ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4538,* Tests {@link JSType#getGreatestSubtype(JSType)} on union types.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4540,"@SuppressWarnings(""checked"")"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4541,public void testGreatestSubtypeUnionTypes3() {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4542,"// (number,undefined,null)"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4543,UnionType nullableOptionalNumber =
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4544,"(UnionType) createUnionType(NULL_TYPE, VOID_TYPE, NUMBER_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4545,"// (null,undefined)"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4546,UnionType nullUndefined =
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4547,"(UnionType) createUnionType(VOID_TYPE, NULL_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4548,"assertEquals(nullUndefined,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4549,nullUndefined.getGreatestSubtype(nullableOptionalNumber));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4550,"assertEquals(nullUndefined,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4551,nullableOptionalNumber.getGreatestSubtype(nullUndefined));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4555,* Tests that a derived class extending a type via a named type is a subtype
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4556,* of it.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4558,public void testSubtypingDerivedExtendsNamedBaseType() throws Exception {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4559,ObjectType derived =
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4560,registry.createObjectType(registry.createObjectType(namedGoogBar));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4562,assertTrue(derived.isSubtype(googBar.getInstanceType()));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4565,public void testNamedSubtypeChain() throws Exception {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4566,List<JSType> typeChain = Lists.newArrayList(
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4567,"registry.getNativeType(JSTypeNative.ALL_TYPE),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4568,"registry.getNativeType(JSTypeNative.OBJECT_PROTOTYPE),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4569,"registry.getNativeType(JSTypeNative.OBJECT_TYPE),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4570,"googBar.getPrototype(),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4571,"googBar.getInstanceType(),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4572,"googSubBar.getPrototype(),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4573,"googSubBar.getInstanceType(),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4574,"googSubSubBar.getPrototype(),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4575,"googSubSubBar.getInstanceType(),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4576,"registry.getNativeType(JSTypeNative.NO_OBJECT_TYPE),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4577,registry.getNativeType(JSTypeNative.NO_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4578,verifySubtypeChain(typeChain);
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4581,public void testRecordSubtypeChain() throws Exception {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4582,RecordTypeBuilder builder = new RecordTypeBuilder(registry);
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4583,"builder.addProperty(""a"", STRING_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4584,JSType aType = builder.build();
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4586,builder = new RecordTypeBuilder(registry);
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4587,"builder.addProperty(""a"", STRING_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4588,"builder.addProperty(""b"", STRING_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4589,JSType abType = builder.build();
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4591,builder = new RecordTypeBuilder(registry);
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4592,"builder.addProperty(""a"", STRING_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4593,"builder.addProperty(""b"", STRING_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4594,"builder.addProperty(""c"", NUMBER_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4595,JSType abcType = builder.build();
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4597,List<JSType> typeChain = Lists.newArrayList(
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4598,"registry.getNativeType(JSTypeNative.ALL_TYPE),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4599,"registry.getNativeType(JSTypeNative.OBJECT_PROTOTYPE),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4600,"registry.getNativeType(JSTypeNative.OBJECT_TYPE),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4601,"aType,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4602,"abType,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4603,"abcType,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4604,"registry.getNativeType(JSTypeNative.NO_OBJECT_TYPE),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4605,registry.getNativeType(JSTypeNative.NO_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4606,verifySubtypeChain(typeChain);
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4609,public void testRecordAndObjectChain2() throws Exception {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4610,RecordTypeBuilder builder = new RecordTypeBuilder(registry);
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4611,"builder.addProperty(""date"", DATE_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4612,JSType hasDateProperty = builder.build();
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4614,List<JSType> typeChain = Lists.newArrayList(
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4615,"registry.getNativeType(JSTypeNative.OBJECT_TYPE),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4616,"hasDateProperty,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4617,"googBar.getInstanceType(),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4618,"registry.getNativeType(JSTypeNative.NO_OBJECT_TYPE),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4619,registry.getNativeType(JSTypeNative.NO_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4620,verifySubtypeChain(typeChain);
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4623,public void testRecordAndObjectChain3() throws Exception {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4624,RecordTypeBuilder builder = new RecordTypeBuilder(registry);
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4625,"builder.addProperty(""date"", UNKNOWN_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4626,JSType hasUnknownDateProperty = builder.build();
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4628,List<JSType> typeChain = Lists.newArrayList(
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4629,"registry.getNativeType(JSTypeNative.OBJECT_TYPE),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4630,"hasUnknownDateProperty,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4631,"googBar.getInstanceType(),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4632,"registry.getNativeType(JSTypeNative.NO_OBJECT_TYPE),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4633,registry.getNativeType(JSTypeNative.NO_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4634,verifySubtypeChain(typeChain);
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4637,public void testNullableNamedTypeChain() throws Exception {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4638,List<JSType> typeChain = Lists.newArrayList(
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4639,"registry.getNativeType(JSTypeNative.ALL_TYPE),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4640,registry.createOptionalNullableType(
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4641,"registry.getNativeType(JSTypeNative.OBJECT_PROTOTYPE)),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4642,registry.createOptionalNullableType(
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4643,"registry.getNativeType(JSTypeNative.OBJECT_TYPE)),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4644,"registry.createOptionalNullableType(googBar.getPrototype()),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4645,"registry.createOptionalNullableType(googBar.getInstanceType()),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4646,"registry.createNullableType(googSubBar.getPrototype()),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4647,"registry.createNullableType(googSubBar.getInstanceType()),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4648,"googSubSubBar.getPrototype(),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4649,"googSubSubBar.getInstanceType(),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4650,"registry.getNativeType(JSTypeNative.NO_OBJECT_TYPE),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4651,registry.getNativeType(JSTypeNative.NO_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4652,verifySubtypeChain(typeChain);
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4655,public void testEnumTypeChain() throws Exception {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4656,List<JSType> typeChain = Lists.newArrayList(
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4657,"registry.getNativeType(JSTypeNative.ALL_TYPE),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4658,"registry.getNativeType(JSTypeNative.OBJECT_PROTOTYPE),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4659,"registry.getNativeType(JSTypeNative.OBJECT_TYPE),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4660,"enumType,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4661,"registry.getNativeType(JSTypeNative.NO_OBJECT_TYPE),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4662,registry.getNativeType(JSTypeNative.NO_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4663,verifySubtypeChain(typeChain);
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4666,public void testFunctionSubtypeChain() throws Exception {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4667,List<JSType> typeChain = Lists.newArrayList(
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4668,"registry.getNativeType(JSTypeNative.ALL_TYPE),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4669,"registry.getNativeType(JSTypeNative.OBJECT_PROTOTYPE),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4670,"registry.getNativeType(JSTypeNative.OBJECT_TYPE),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4671,"registry.getNativeType(JSTypeNative.FUNCTION_PROTOTYPE),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4672,"dateMethod,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4673,"registry.getNativeType(JSTypeNative.NO_OBJECT_TYPE),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4674,registry.getNativeType(JSTypeNative.NO_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4675,verifySubtypeChain(typeChain);
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4678,public void testConstructorSubtypeChain() throws Exception {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4679,List<JSType> typeChain = Lists.newArrayList(
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4680,"registry.getNativeType(JSTypeNative.ALL_TYPE),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4681,"registry.getNativeType(JSTypeNative.OBJECT_PROTOTYPE),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4682,"registry.getNativeType(JSTypeNative.OBJECT_TYPE),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4683,"registry.getNativeType(JSTypeNative.FUNCTION_PROTOTYPE),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4684,"registry.getNativeType(JSTypeNative.FUNCTION_INSTANCE_TYPE),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4685,"registry.getNativeType(JSTypeNative.NO_OBJECT_TYPE),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4686,registry.getNativeType(JSTypeNative.NO_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4687,verifySubtypeChain(typeChain);
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4690,public void testGoogBarSubtypeChain() throws Exception {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4691,List<JSType> typeChain = Lists.newArrayList(
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4692,"registry.getNativeType(JSTypeNative.FUNCTION_INSTANCE_TYPE),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4693,"googBar,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4694,"googSubBar,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4695,"googSubSubBar,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4696,registry.getNativeType(JSTypeNative.NO_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4697,"verifySubtypeChain(typeChain, false);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4700,public void testConstructorWithArgSubtypeChain() throws Exception {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4701,FunctionType googBarArgConstructor = registry.createConstructorType(
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4702,"""barArg"", null, registry.createParameters(googBar), null);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4703,FunctionType googSubBarArgConstructor = registry.createConstructorType(
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4704,"""subBarArg"", null, registry.createParameters(googSubBar), null);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4706,List<JSType> typeChain = Lists.newArrayList(
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4707,"registry.getNativeType(JSTypeNative.FUNCTION_INSTANCE_TYPE),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4708,"googBarArgConstructor,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4709,"googSubBarArgConstructor,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4710,registry.getNativeType(JSTypeNative.NO_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4711,"verifySubtypeChain(typeChain, false);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4715,* Tests that the given chain of types has a total ordering defined
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4716,"* by the subtype relationship, with types at the top of the lattice"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4717,* listed first.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4719,* Also verifies that the infimum of any two types on the chain
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4720,"* is the lower type, and the supremum of any two types on the chain"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4721,* is the higher type.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4723,public void verifySubtypeChain(List<JSType> typeChain) throws Exception {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4724,"verifySubtypeChain(typeChain, true);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4727,"public void verifySubtypeChain(List<JSType> typeChain,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4728,boolean checkSubtyping) throws Exception {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4729,for (int i = 0; i < typeChain.size(); i++) {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4730,for (int j = 0; j < typeChain.size(); j++) {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4731,JSType typeI = typeChain.get(i);
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4732,JSType typeJ = typeChain.get(j);
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4734,if (i == j) {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4735,"assertTrue(typeI + "" should equal itself"", typeI.equals(typeI));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4736,} else {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4737,"assertFalse(typeI + "" should not equal "" + typeJ,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4738,typeI.equals(typeJ));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4741,if (checkSubtyping) {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4742,if (i <= j) {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4743,"assertTrue(typeJ + "" should be a subtype of "" + typeI,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4744,typeJ.isSubtype(typeI));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4745,} else {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4746,"assertFalse(typeJ + "" should not be a subtype of "" + typeI,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4747,typeJ.isSubtype(typeI));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4750,JSType expectedSupremum = i < j ? typeI : typeJ;
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4751,JSType expectedInfimum = i > j ? typeI : typeJ;
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4752,assertEquals(
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4753,"expectedSupremum + "" should be the least supertype of "" + typeI +"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4754,""" and "" + typeJ,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4755,"expectedSupremum, typeI.getLeastSupertype(typeJ));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4756,assertEquals(
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4757,"expectedInfimum + "" should be the greatest subtype of "" + typeI +"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4758,""" and "" + typeJ,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4759,"expectedInfimum, typeI.getGreatestSubtype(typeJ));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4766,* Tests that special union types can assign to other types. For instance
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4767,"* <code>(number,Number)</code> can assign to <code>number</code> or"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4768,"* <code>Number</code> even though <code>number &lt; (number, Number)</code>"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4769,"* and <code>Number &lt; (number,Number)</code>. Unions containing the unknown"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4770,* type should be able to assign to any other type.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4772,"@SuppressWarnings(""checked"")"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4773,public void testSpecialUnionCanAssignTo() throws Exception {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4774,// autoboxing quirks
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4775,UnionType numbers =
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4776,"(UnionType) createUnionType(NUMBER_TYPE, NUMBER_OBJECT_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4777,assertTrue(numbers.canAssignTo(NUMBER_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4778,assertTrue(numbers.canAssignTo(NUMBER_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4779,assertFalse(numbers.canAssignTo(EVAL_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4781,UnionType strings =
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4782,"(UnionType) createUnionType(STRING_OBJECT_TYPE, STRING_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4783,assertTrue(strings.canAssignTo(STRING_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4784,assertTrue(strings.canAssignTo(STRING_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4785,assertFalse(strings.canAssignTo(DATE_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4787,UnionType booleans =
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4788,"(UnionType) createUnionType(BOOLEAN_OBJECT_TYPE, BOOLEAN_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4789,assertTrue(booleans.canAssignTo(BOOLEAN_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4790,assertTrue(booleans.canAssignTo(BOOLEAN_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4791,assertFalse(booleans.canAssignTo(REGEXP_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4793,// unknown quirks
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4794,"JSType unknown = createUnionType(UNKNOWN_TYPE, DATE_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4795,assertTrue(unknown.canAssignTo(STRING_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4797,// all members need to be assignable to
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4798,UnionType stringDate =
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4799,"(UnionType) createUnionType(STRING_OBJECT_TYPE, DATE_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4800,assertTrue(stringDate.canAssignTo(OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4801,assertFalse(stringDate.canAssignTo(STRING_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4802,assertFalse(stringDate.canAssignTo(DATE_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4806,* Tests the behavior of
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4807,* {@link JSType#getRestrictedTypeGivenToBooleanOutcome(boolean)}.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4809,"@SuppressWarnings(""checked"")"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4810,public void testRestrictedTypeGivenToBoolean() {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4811,// simple cases
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4812,"assertEquals(BOOLEAN_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4813,BOOLEAN_TYPE.getRestrictedTypeGivenToBooleanOutcome(true));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4814,"assertEquals(BOOLEAN_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4815,BOOLEAN_TYPE.getRestrictedTypeGivenToBooleanOutcome(false));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4817,"assertEquals(NO_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4818,NULL_TYPE.getRestrictedTypeGivenToBooleanOutcome(true));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4819,"assertEquals(NULL_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4820,NULL_TYPE.getRestrictedTypeGivenToBooleanOutcome(false));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4822,"assertEquals(NUMBER_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4823,NUMBER_TYPE.getRestrictedTypeGivenToBooleanOutcome(true));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4824,"assertEquals(NUMBER_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4825,NUMBER_TYPE.getRestrictedTypeGivenToBooleanOutcome(false));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4827,"assertEquals(STRING_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4828,STRING_TYPE.getRestrictedTypeGivenToBooleanOutcome(true));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4829,"assertEquals(STRING_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4830,STRING_TYPE.getRestrictedTypeGivenToBooleanOutcome(false));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4832,"assertEquals(STRING_OBJECT_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4833,STRING_OBJECT_TYPE.getRestrictedTypeGivenToBooleanOutcome(true));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4834,"assertEquals(NO_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4835,STRING_OBJECT_TYPE.getRestrictedTypeGivenToBooleanOutcome(false));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4837,"assertEquals(NO_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4838,VOID_TYPE.getRestrictedTypeGivenToBooleanOutcome(true));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4839,"assertEquals(VOID_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4840,VOID_TYPE.getRestrictedTypeGivenToBooleanOutcome(false));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4842,"assertEquals(NO_OBJECT_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4843,NO_OBJECT_TYPE.getRestrictedTypeGivenToBooleanOutcome(true));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4844,"assertEquals(NO_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4845,NO_OBJECT_TYPE.getRestrictedTypeGivenToBooleanOutcome(false));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4847,"assertEquals(NO_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4848,NO_TYPE.getRestrictedTypeGivenToBooleanOutcome(true));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4849,"assertEquals(NO_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4850,NO_TYPE.getRestrictedTypeGivenToBooleanOutcome(false));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4852,"assertEquals(ALL_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4853,ALL_TYPE.getRestrictedTypeGivenToBooleanOutcome(true));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4854,"assertEquals(ALL_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4855,ALL_TYPE.getRestrictedTypeGivenToBooleanOutcome(false));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4857,"assertEquals(UNKNOWN_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4858,UNKNOWN_TYPE.getRestrictedTypeGivenToBooleanOutcome(true));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4859,"assertEquals(UNKNOWN_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4860,UNKNOWN_TYPE.getRestrictedTypeGivenToBooleanOutcome(false));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4862,// unions
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4863,UnionType nullableStringValue =
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4864,(UnionType) createNullableType(STRING_TYPE);
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4865,"assertEquals(STRING_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4866,nullableStringValue.getRestrictedTypeGivenToBooleanOutcome(true));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4867,"assertEquals(nullableStringValue,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4868,nullableStringValue.getRestrictedTypeGivenToBooleanOutcome(false));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4870,UnionType nullableStringObject =
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4871,(UnionType) createNullableType(STRING_OBJECT_TYPE);
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4872,"assertEquals(STRING_OBJECT_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4873,nullableStringObject.getRestrictedTypeGivenToBooleanOutcome(true));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4874,"assertEquals(NULL_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4875,nullableStringObject.getRestrictedTypeGivenToBooleanOutcome(false));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4878,public void testRegisterProperty() {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4879,int i = 0;
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4880,Set<JSType> allObjects = Sets.newHashSet();
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4881,for (JSType type : types) {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4882,"String propName = ""ALF"" + i++;"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4883,if (type instanceof ObjectType) {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4884,ObjectType objType = (ObjectType) type;
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4885,"objType.defineDeclaredProperty(propName, UNKNOWN_TYPE, false);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4886,"objType.defineDeclaredProperty(""allHaz"", UNKNOWN_TYPE, false);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4887,"assertEquals(type,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4888,"registry.getGreatestSubtypeWithProperty(type, propName));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4889,"assertEquals(Sets.newHashSet(type),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4890,registry.getTypesWithProperty(propName));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4891,"assertEquals(NO_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4892,"registry.getGreatestSubtypeWithProperty(type, ""GRRR""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4893,allObjects.add(type);
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4896,"assertEquals(registry.getTypesWithProperty(""GRRR""),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4897,Sets.newHashSet(NO_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4898,"assertEquals(allObjects, registry.getTypesWithProperty(""allHaz""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4901,public void testRegisterPropertyMemoization() {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4902,"ObjectType derived1 = registry.createObjectType(""d1"", null, namedGoogBar);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4903,"ObjectType derived2 = registry.createObjectType(""d2"", null, namedGoogBar);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4905,"derived1.defineDeclaredProperty(""propz"", UNKNOWN_TYPE, false);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4907,"assertEquals(derived1,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4908,"registry.getGreatestSubtypeWithProperty(derived1, ""propz""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4909,"assertEquals(NO_OBJECT_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4910,"registry.getGreatestSubtypeWithProperty(derived2, ""propz""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4912,"derived2.defineDeclaredProperty(""propz"", UNKNOWN_TYPE, false);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4914,"assertEquals(derived1,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4915,"registry.getGreatestSubtypeWithProperty(derived1, ""propz""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4916,"assertEquals(derived2,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4917,"registry.getGreatestSubtypeWithProperty(derived2, ""propz""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4920,public void testGoodSetPrototypeBasedOn() {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4921,"FunctionType fun = registry.createConstructorType(""fun"", null, null, null);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4922,fun.setPrototypeBasedOn(unresolvedNamedType);
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4923,assertTrue(fun.getInstanceType().isUnknownType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4926,public void testInvalidSetPrototypeBasedOn() {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4927,"FunctionType fun = registry.createConstructorType(""fun"", null, null, null);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4928,assertFalse(fun.getInstanceType().isUnknownType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4930,// You cannot change the prototype chain after checking if it is unknown.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4931,try {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4932,fun.setPrototypeBasedOn(unresolvedNamedType);
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4933,fail();
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4934,} catch (IllegalStateException e) {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4935,e.printStackTrace();
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4939,public void testGetTypeUnderEquality1() {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4940,for (JSType type : types) {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4941,"testGetTypeUnderEquality(type, type, type, type);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4945,public void testGetTypesUnderEquality2() {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4946,// objects can be equal to numbers
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4947,testGetTypeUnderEquality(
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4948,"NUMBER_TYPE, OBJECT_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4949,"NUMBER_TYPE, OBJECT_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4952,public void testGetTypesUnderEquality3() {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4953,// null == undefined
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4954,testGetTypeUnderEquality(
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4955,"NULL_TYPE, VOID_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4956,"NULL_TYPE, VOID_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4959,"@SuppressWarnings(""checked"")"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4960,public void testGetTypesUnderEquality4() {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4961,"// (number,string) and number/string"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4962,UnionType stringNumber =
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4963,"(UnionType) createUnionType(NUMBER_TYPE, STRING_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4964,testGetTypeUnderEquality(
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4965,"stringNumber, STRING_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4966,"stringNumber, STRING_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4967,testGetTypeUnderEquality(
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4968,"stringNumber, NUMBER_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4969,"stringNumber, NUMBER_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4972,public void testGetTypesUnderEquality5() {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4973,"// (number,null) and undefined"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4974,"JSType nullUndefined = createUnionType(VOID_TYPE, NULL_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4975,testGetTypeUnderEquality(
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4976,"nullUndefined, NULL_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4977,"nullUndefined, NULL_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4978,testGetTypeUnderEquality(
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4979,"nullUndefined, VOID_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4980,"nullUndefined, VOID_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4983,public void testGetTypesUnderEquality6() {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4984,"// (number,undefined,null) == null"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4985,"JSType optNullNumber = createUnionType(VOID_TYPE, NULL_TYPE, NUMBER_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4986,testGetTypeUnderEquality(
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4987,"optNullNumber, NULL_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4988,"createUnionType(NULL_TYPE, VOID_TYPE), NULL_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4991,private void testGetTypeUnderEquality(
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4992,"JSType t1, JSType t2, JSType t1Eq, JSType t2Eq) {"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4993,// creating the pairs
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4994,"Pair<JSType, JSType> p12 = t1.getTypesUnderEquality(t2);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4995,"Pair<JSType, JSType> p21 = t2.getTypesUnderEquality(t1);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4997,// t1Eq
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4998,"assertEquals(t1Eq, p12.first);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4999,"assertEquals(t1Eq, p21.second);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5001,// t2Eq
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5002,"assertEquals(t2Eq, p12.second);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5003,"assertEquals(t2Eq, p21.first);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5006,"@SuppressWarnings(""checked"")"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5007,public void testGetTypesUnderInequality1() {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5008,// objects can be not equal to numbers
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5009,UnionType numberObject =
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5010,"(UnionType) createUnionType(NUMBER_TYPE, OBJECT_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5011,testGetTypesUnderInequality(
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5012,"numberObject, NUMBER_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5013,"numberObject, NUMBER_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5014,testGetTypesUnderInequality(
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5015,"numberObject, OBJECT_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5016,"numberObject, OBJECT_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5019,"@SuppressWarnings(""checked"")"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5020,public void testGetTypesUnderInequality2() {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5021,// null == undefined
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5022,UnionType nullUndefined =
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5023,"(UnionType) createUnionType(VOID_TYPE, NULL_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5024,testGetTypesUnderInequality(
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5025,"nullUndefined, NULL_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5026,"NO_TYPE, NO_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5027,testGetTypesUnderInequality(
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5028,"nullUndefined, VOID_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5029,"NO_TYPE, NO_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5032,"@SuppressWarnings(""checked"")"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5033,public void testGetTypesUnderInequality3() {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5034,"// (number,string)"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5035,UnionType stringNumber =
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5036,"(UnionType) createUnionType(NUMBER_TYPE, STRING_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5037,testGetTypesUnderInequality(
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5038,"stringNumber, NUMBER_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5039,"stringNumber, NUMBER_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5040,testGetTypesUnderInequality(
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5041,"stringNumber, STRING_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5042,"stringNumber, STRING_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5045,"@SuppressWarnings(""checked"")"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5046,public void testGetTypesUnderInequality4() throws Exception {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5047,"// (number,undefined,null) and null"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5048,UnionType nullableOptionalNumber =
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5049,"(UnionType) createUnionType(NULL_TYPE, VOID_TYPE, NUMBER_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5050,testGetTypesUnderInequality(
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5051,"nullableOptionalNumber, NULL_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5052,"NUMBER_TYPE, NULL_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5055,private void testGetTypesUnderInequality(
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5056,"JSType t1, JSType t2, JSType t1Eq, JSType t2Eq) {"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5057,// creating the pairs
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5058,"Pair<JSType, JSType> p12 = t1.getTypesUnderInequality(t2);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5059,"Pair<JSType, JSType> p21 = t2.getTypesUnderInequality(t1);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5061,// t1Eq
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5062,"assertEquals(t1Eq, p12.first);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5063,"assertEquals(t1Eq, p21.second);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5065,// t2Eq
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5066,"assertEquals(t2Eq, p12.second);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5067,"assertEquals(t2Eq, p21.first);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5072,* Tests the factory method
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5073,* {@link JSTypeRegistry#createRecordType}.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5075,public void testCreateRecordType() throws Exception {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5076,"Map<String, JSType> properties = new HashMap<String, JSType>();"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5077,"properties.put(""hello"", NUMBER_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5079,JSType recordType = registry.createRecordType(properties);
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5080,"assertEquals(""{ hello : number }"", recordType.toString());"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5084,* Tests the factory method
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5085,* {@link JSTypeRegistry#createUnionType(JSType...)}.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5087,"@SuppressWarnings(""checked"")"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5088,public void testCreateUnionType() throws Exception {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5089,// number
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5090,UnionType optNumber =
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5091,"(UnionType) registry.createUnionType(NUMBER_TYPE, DATE_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5092,assertTrue(optNumber.contains(NUMBER_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5093,assertTrue(optNumber.contains(DATE_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5095,// union
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5096,UnionType optUnion =
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5097,"(UnionType) registry.createUnionType(REGEXP_TYPE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5098,"registry.createUnionType(STRING_OBJECT_TYPE, DATE_TYPE));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5099,assertTrue(optUnion.contains(DATE_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5100,assertTrue(optUnion.contains(STRING_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5101,assertTrue(optUnion.contains(REGEXP_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5105,* Tests the factory method {@link JSTypeRegistry#createOptionalType(JSType)}.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5107,public void testCreateOptionalType() throws Exception {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5108,// number
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5109,UnionType optNumber = (UnionType) registry.createOptionalType(NUMBER_TYPE);
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5110,"assertUnionContains(optNumber, NUMBER_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5111,"assertUnionContains(optNumber, VOID_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5113,// union
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5114,UnionType optUnion =
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5115,(UnionType) registry.createOptionalType(
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5116,"createUnionType(STRING_OBJECT_TYPE, DATE_TYPE));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5117,"assertUnionContains(optUnion, DATE_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5118,"assertUnionContains(optUnion, STRING_OBJECT_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5119,"assertUnionContains(optUnion, VOID_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5122,"public void assertUnionContains(UnionType union, JSType type) {"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5123,"assertTrue(union + "" should contain "" + type, union.contains(type));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5127,* Tests the factory method
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5128,* {@link JSTypeRegistry#createAnonymousObjectType()}}.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5130,public void testCreateAnonymousObjectType() throws Exception {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5131,// anonymous
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5132,ObjectType anonymous = registry.createAnonymousObjectType();
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5133,"assertEquals(OBJECT_TYPE, anonymous.getImplicitPrototype());"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5134,"assertEquals(""{...}"", anonymous.getReferenceName());"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5138,* Tests the factory methods
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5139,* {@link JSTypeRegistry#createObjectType(ObjectType)}} and
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5140,"* {@link JSTypeRegistry#createObjectType(String, Node, ObjectType)}}."
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5142,public void testCreateObjectType() throws Exception {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5143,// simple
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5144,ObjectType subDate =
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5145,registry.createObjectType(DATE_TYPE.getImplicitPrototype());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5146,"assertEquals(DATE_TYPE.getImplicitPrototype(),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5147,subDate.getImplicitPrototype());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5148,"assertEquals(""{...}"", subDate.getReferenceName());"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5150,"// name, node, prototype"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5151,"ObjectType subError = registry.createObjectType(""Foo"", null,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5152,ERROR_TYPE.getImplicitPrototype());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5153,"assertEquals(ERROR_TYPE.getImplicitPrototype(),"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5154,subError.getImplicitPrototype());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5155,"assertEquals(""Foo"", subError.getReferenceName());"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5159,"* Tests {@code (U2U_CONSTRUCTOR,undefined) <: (U2U_CONSTRUCTOR,undefined)}."
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5161,"@SuppressWarnings(""checked"")"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5162,public void testBug903110() throws Exception {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5163,UnionType union =
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5164,"(UnionType) createUnionType(U2U_CONSTRUCTOR_TYPE, VOID_TYPE);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5165,assertTrue(VOID_TYPE.isSubtype(union));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5166,assertTrue(U2U_CONSTRUCTOR_TYPE.isSubtype(union));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5167,assertTrue(union.isSubtype(union));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5171,* Tests {@code U2U_FUNCTION_TYPE <: U2U_CONSTRUCTOR} and
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5172,"* {@code U2U_FUNCTION_TYPE <: (U2U_CONSTRUCTOR,undefined)}."
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5174,public void testBug904123() throws Exception {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5175,assertTrue(U2U_FUNCTION_TYPE.isSubtype(U2U_CONSTRUCTOR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5176,assertTrue(U2U_FUNCTION_TYPE.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5177,isSubtype(createOptionalType(U2U_CONSTRUCTOR_TYPE)));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5180,public void testUnionWithUnknown() throws Exception {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5181,"assertTrue(createUnionType(UNKNOWN_TYPE, NULL_TYPE).isUnknownType());"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5185,* Assert that a type can assign to itself.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5187,private void assertTypeCanAssignToItself(JSType type) {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5188,assertTrue(type.canAssignTo(type));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5192,* Tests that hasOwnProperty returns true when a property is defined directly
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5193,* on a class and false if the property is defined on the supertype or not at
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5194,* all.
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5196,public void testHasOwnProperty() throws Exception {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5197,ObjectType sup =
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5198,registry.createObjectType(registry.createAnonymousObjectType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5199,ObjectType sub = registry.createObjectType(sup);
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5201,"sup.defineProperty(""base"", null, false, false);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5202,"sub.defineProperty(""sub"", null, false, false);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5204,"assertTrue(sup.hasProperty(""base""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5205,"assertFalse(sup.hasProperty(""sub""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5206,"assertTrue(sup.hasOwnProperty(""base""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5207,"assertFalse(sup.hasOwnProperty(""sub""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5208,"assertFalse(sup.hasOwnProperty(""none""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5210,"assertTrue(sub.hasProperty(""base""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5211,"assertTrue(sub.hasProperty(""sub""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5212,"assertFalse(sub.hasOwnProperty(""base""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5213,"assertTrue(sub.hasOwnProperty(""sub""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5214,"assertFalse(sub.hasOwnProperty(""none""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5217,public void testNamedTypeHasOwnProperty() throws Exception {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5218,"namedGoogBar.getImplicitPrototype().defineProperty(""base"", null, false,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5219,false);
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5220,"namedGoogBar.defineProperty(""sub"", null, false, false);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5222,"assertFalse(namedGoogBar.hasOwnProperty(""base""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5223,"assertTrue(namedGoogBar.hasProperty(""base""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5224,"assertTrue(namedGoogBar.hasOwnProperty(""sub""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5225,"assertTrue(namedGoogBar.hasProperty(""sub""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5228,public void testGetPropertyNames() throws Exception {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5229,ObjectType sup =
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5230,registry.createObjectType(registry.createAnonymousObjectType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5231,ObjectType sub = registry.createObjectType(sup);
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5233,"sup.defineProperty(""base"", null, false, false);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5234,"sub.defineProperty(""sub"", null, false, false);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5236,"assertEquals(Sets.newHashSet(""isPrototypeOf"", ""toLocaleString"","
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5237,"""propertyIsEnumerable"", ""toString"", ""valueOf"", ""hasOwnProperty"","
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5238,"""constructor"", ""base"", ""sub""), sub.getPropertyNames());"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5239,"assertEquals(Sets.newHashSet(""isPrototypeOf"", ""toLocaleString"","
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5240,"""propertyIsEnumerable"", ""toString"", ""valueOf"", ""hasOwnProperty"","
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5241,"""constructor"", ""base""), sup.getPropertyNames());"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5243,"assertEquals(Sets.newHashSet(), NO_OBJECT_TYPE.getPropertyNames());"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5246,public void testGetAndSetJSDocInfoWithNamedType() throws Exception {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5247,JSDocInfo info = new JSDocInfo();
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5248,info.setDeprecated(true);
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5250,"assertNull(namedGoogBar.getOwnPropertyJSDocInfo(""X""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5251,"namedGoogBar.setPropertyJSDocInfo(""X"", info, false);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5252,"assertTrue(namedGoogBar.getOwnPropertyJSDocInfo(""X"").isDeprecated());"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5253,"assertPropertyTypeInferred(namedGoogBar, ""X"");"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5254,"assertEquals(UNKNOWN_TYPE, namedGoogBar.getPropertyType(""X""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5257,public void testGetAndSetJSDocInfoWithObjectTypes() throws Exception {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5258,ObjectType sup =
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5259,registry.createObjectType(registry.createAnonymousObjectType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5260,ObjectType sub = registry.createObjectType(sup);
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5262,JSDocInfo deprecated = new JSDocInfo();
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5263,deprecated.setDeprecated(true);
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5265,JSDocInfo privateInfo = new JSDocInfo();
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5266,privateInfo.setVisibility(Visibility.PRIVATE);
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5268,"sup.defineProperty(""X"", NUMBER_TYPE, false, false);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5269,"sup.setPropertyJSDocInfo(""X"", privateInfo, false);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5271,"sub.setPropertyJSDocInfo(""X"", deprecated, false);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5273,"assertFalse(sup.getOwnPropertyJSDocInfo(""X"").isDeprecated());"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5274,"assertEquals(Visibility.PRIVATE,"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5275,"sup.getOwnPropertyJSDocInfo(""X"").getVisibility());"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5276,"assertEquals(NUMBER_TYPE, sup.getPropertyType(""X""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5277,"assertTrue(sub.getOwnPropertyJSDocInfo(""X"").isDeprecated());"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5278,"assertNull(sub.getOwnPropertyJSDocInfo(""X"").getVisibility());"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5279,"assertEquals(NUMBER_TYPE, sub.getPropertyType(""X""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5282,public void testGetAndSetJSDocInfoWithNoType() throws Exception {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5283,JSDocInfo deprecated = new JSDocInfo();
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5284,deprecated.setDeprecated(true);
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5286,"NO_TYPE.setPropertyJSDocInfo(""X"", deprecated, false);"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5287,"assertNull(NO_TYPE.getOwnPropertyJSDocInfo(""X""));"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5290,public void testObjectGetSubTypes() throws Exception {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5291,assertTrue(OBJECT_FUNCTION_TYPE.getSubTypes().contains(googBar));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5292,assertTrue(googBar.getSubTypes().contains(googSubBar));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5293,assertFalse(googBar.getSubTypes().contains(googSubSubBar));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5294,assertFalse(googSubBar.getSubTypes().contains(googSubBar));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5295,assertTrue(googSubBar.getSubTypes().contains(googSubSubBar));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5298,public void testImplementingType() throws Exception {
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5299,assertTrue(registry.getDirectImplementors(
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5300,interfaceType.getInstanceType()).contains(googBar));
True,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,3,* ***** BEGIN LICENSE BLOCK *****
True,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,4,* Version: MPL 1.1/GPL 2.0
True,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,6,* The contents of this file are subject to the Mozilla Public License Version
True,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,7,"* 1.1 (the ""License""); you may not use this file except in compliance with"
True,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,8,* the License. You may obtain a copy of the License at
True,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,9,* http://www.mozilla.org/MPL/
True,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,11,"* Software distributed under the License is distributed on an ""AS IS"" basis,"
True,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,12,"* WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License"
True,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,13,* for the specific language governing rights and limitations under the
True,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,14,* License.
True,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,16,"* The Original Code is Rhino code, released"
True,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,17,"* May 6, 1999."
True,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,19,* The Initial Developer of the Original Code is
True,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,20,* Netscape Communications Corporation.
True,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,21,* Portions created by the Initial Developer are Copyright (C) 1997-1999
True,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,22,* the Initial Developer. All Rights Reserved.
True,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,24,* Contributor(s):
True,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,25,*   Nick Santos
True,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,27,"* Alternatively, the contents of this file may be used under the terms of"
True,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,28,"* the GNU General Public License Version 2 or later (the ""GPL""), in which"
True,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,29,* case the provisions of the GPL are applicable instead of those above. If
True,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,30,* you wish to allow use of your version of this file only under the terms of
True,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,31,* the GPL and not to allow others to use your version of this file under the
True,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,32,"* MPL, indicate your decision by deleting the provisions above and replacing"
True,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,33,* them with the notice and other provisions required by the GPL. If you do
True,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,34,"* not delete the provisions above, a recipient may use your version of this"
True,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,35,* file under either the MPL or the GPL.
True,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,37,* ***** END LICENSE BLOCK ***** */
True,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,39,package com.google.javascript.rhino.jstype;
True,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,41,import static com.google.javascript.rhino.jstype.TernaryValue.FALSE;
True,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,42,import static com.google.javascript.rhino.jstype.TernaryValue.TRUE;
True,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,43,import static com.google.javascript.rhino.jstype.TernaryValue.UNKNOWN;
True,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,45,import junit.framework.TestCase;
True,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,48,* Tests the behavior of {@link TernaryValue} by verifying the truth tables
True,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,49,"* of the operations {@link TernaryValue#and(TernaryValue)},"
True,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,50,"* {@link TernaryValue#not()}, {@link TernaryValue#or(TernaryValue)}"
True,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,51,* and {@link TernaryValue#xor(TernaryValue)} as well as the
True,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,52,* {@link TernaryValue#toBoolean(boolean)} method.
True,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,56,public class TernaryValueTest extends TestCase {
True,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,57,public void testOrdinal() throws Exception {
True,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,58,"assertEquals(0, FALSE.ordinal());"
True,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,59,"assertEquals(1, TRUE.ordinal());"
True,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,60,"assertEquals(2, UNKNOWN.ordinal());"
True,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,63,public void testAnd() throws Exception {
True,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,64,"assertEquals(TRUE, TRUE.and(TRUE));"
True,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,65,"assertEquals(FALSE, TRUE.and(FALSE));"
True,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,66,"assertEquals(UNKNOWN, TRUE.and(UNKNOWN));"
True,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,68,"assertEquals(FALSE, FALSE.and(TRUE));"
True,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,69,"assertEquals(FALSE, FALSE.and(FALSE));"
True,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,70,"assertEquals(FALSE, FALSE.and(UNKNOWN));"
True,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,72,"assertEquals(UNKNOWN, UNKNOWN.and(TRUE));"
True,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,73,"assertEquals(FALSE, UNKNOWN.and(FALSE));"
True,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,74,"assertEquals(UNKNOWN, UNKNOWN.and(UNKNOWN));"
True,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,77,public void testNot() throws Exception {
True,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,78,"assertEquals(FALSE, TRUE.not());"
True,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,79,"assertEquals(TRUE, FALSE.not());"
True,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,80,"assertEquals(UNKNOWN, UNKNOWN.not());"
True,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,83,public void testOr() throws Exception {
True,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,84,"assertEquals(TRUE, TRUE.or(TRUE));"
True,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,85,"assertEquals(TRUE, TRUE.or(FALSE));"
True,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,86,"assertEquals(TRUE, TRUE.or(UNKNOWN));"
True,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,88,"assertEquals(TRUE, FALSE.or(TRUE));"
True,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,89,"assertEquals(FALSE, FALSE.or(FALSE));"
True,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,90,"assertEquals(UNKNOWN, FALSE.or(UNKNOWN));"
True,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,92,"assertEquals(TRUE, UNKNOWN.or(TRUE));"
True,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,93,"assertEquals(UNKNOWN, UNKNOWN.or(FALSE));"
True,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,94,"assertEquals(UNKNOWN, UNKNOWN.or(UNKNOWN));"
True,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,97,public void testXor() throws Exception {
True,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,98,"assertEquals(FALSE, TRUE.xor(TRUE));"
True,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,99,"assertEquals(TRUE, TRUE.xor(FALSE));"
True,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,100,"assertEquals(UNKNOWN, TRUE.xor(UNKNOWN));"
True,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,102,"assertEquals(TRUE, FALSE.xor(TRUE));"
True,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,103,"assertEquals(FALSE, FALSE.xor(FALSE));"
True,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,104,"assertEquals(UNKNOWN, FALSE.xor(UNKNOWN));"
True,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,106,"assertEquals(UNKNOWN, UNKNOWN.xor(TRUE));"
True,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,107,"assertEquals(UNKNOWN, UNKNOWN.xor(FALSE));"
True,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,108,"assertEquals(UNKNOWN, UNKNOWN.xor(UNKNOWN));"
True,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,111,public void testToBoolean() throws Exception {
True,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,112,assertTrue(TRUE.toBoolean(true));
True,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,113,assertTrue(TRUE.toBoolean(false));
True,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,115,assertFalse(FALSE.toBoolean(true));
True,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,116,assertFalse(FALSE.toBoolean(false));
True,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,118,assertTrue(UNKNOWN.toBoolean(true));
True,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,119,assertFalse(UNKNOWN.toBoolean(false));
True,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,122,public void testToString() {
True,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,123,"assertEquals(""true"", TRUE.toString());"
True,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,124,"assertEquals(""false"", FALSE.toString());"
True,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,test/com/google/javascript/rhino/jstype/TernaryValueTest.java,125,"assertEquals(""unknown"", UNKNOWN.toString());"
True,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,3,* ***** BEGIN LICENSE BLOCK *****
True,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,4,* Version: MPL 1.1/GPL 2.0
True,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,6,* The contents of this file are subject to the Mozilla Public License Version
True,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,7,"* 1.1 (the ""License""); you may not use this file except in compliance with"
True,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,8,* the License. You may obtain a copy of the License at
True,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,9,* http://www.mozilla.org/MPL/
True,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,11,"* Software distributed under the License is distributed on an ""AS IS"" basis,"
True,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,12,"* WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License"
True,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,13,* for the specific language governing rights and limitations under the
True,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,14,* License.
True,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,16,"* The Original Code is Rhino code, released"
True,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,17,"* May 6, 1999."
True,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,19,* The Initial Developer of the Original Code is
True,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,20,* Netscape Communications Corporation.
True,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,21,* Portions created by the Initial Developer are Copyright (C) 1997-1999
True,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,22,* the Initial Developer. All Rights Reserved.
True,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,24,* Contributor(s):
True,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,25,*   Nick Santos
True,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,27,"* Alternatively, the contents of this file may be used under the terms of"
True,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,28,"* the GNU General Public License Version 2 or later (the ""GPL""), in which"
True,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,29,* case the provisions of the GPL are applicable instead of those above. If
True,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,30,* you wish to allow use of your version of this file only under the terms of
True,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,31,* the GPL and not to allow others to use your version of this file under the
True,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,32,"* MPL, indicate your decision by deleting the provisions above and replacing"
True,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,33,* them with the notice and other provisions required by the GPL. If you do
True,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,34,"* not delete the provisions above, a recipient may use your version of this"
True,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,35,* file under either the MPL or the GPL.
True,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,37,* ***** END LICENSE BLOCK ***** */
True,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,39,package com.google.javascript.rhino.jstype;
True,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,41,import com.google.javascript.rhino.testing.BaseJSTypeTestCase;
True,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,44,* Test for {@link UnionTypeBuilder}.
True,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,48,public class UnionTypeBuilderTest extends BaseJSTypeTestCase {
True,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,50,public void testAllType() {
True,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,51,"assertUnion(""*"", ALL_TYPE);"
True,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,52,"assertUnion(""*"", NUMBER_TYPE, ALL_TYPE);"
True,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,53,"assertUnion(""*"", ALL_TYPE, NUMBER_TYPE);"
True,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,54,"assertUnion(""*"", ALL_TYPE, NUMBER_TYPE, NO_TYPE);"
True,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,57,public void testEmptyUnion() {
True,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,58,"assertUnion(""None"");"
True,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,59,"assertUnion(""None"", NO_TYPE, NO_TYPE);"
True,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,62,public void testUnionTypes() {
True,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,63,"JSType union = registry.createUnionType(STRING_TYPE, OBJECT_TYPE);"
True,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,65,"assertUnion(""*"", ALL_TYPE, union);"
True,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,66,"assertUnion(""(Object|string)"", OBJECT_TYPE, union);"
True,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,67,"assertUnion(""(Object|string)"", union, OBJECT_TYPE);"
True,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,68,"assertUnion(""(Object|number|string)"", NUMBER_TYPE, union);"
True,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,69,"assertUnion(""(Object|number|string)"", union, NUMBER_TYPE);"
True,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,70,"assertUnion(""(Object|boolean|number|string)"", union,"
True,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,71,"registry.createUnionType(NUMBER_TYPE, BOOLEAN_TYPE));"
True,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,72,"assertUnion(""(Object|boolean|number|string)"","
True,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,73,"registry.createUnionType(NUMBER_TYPE, BOOLEAN_TYPE), union);"
True,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,74,"assertUnion(""(Object|string)"", union, STRING_OBJECT_TYPE);"
True,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,77,public void testUnknownTypes() {
True,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,78,JSType unresolvedNameA1 =
True,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,79,"new NamedType(registry, ""not.resolved.A"", null, -1, -1);"
True,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,80,JSType unresolvedNameA2 =
True,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,81,"new NamedType(registry, ""not.resolved.A"", null, -1, -1);"
True,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,82,JSType unresolvedNameB =
True,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,83,"new NamedType(registry, ""not.resolved.B"", null, -1, -1);"
True,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,85,"assertUnion(""?"", UNKNOWN_TYPE);"
True,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,86,"assertUnion(""?"", UNKNOWN_TYPE, UNKNOWN_TYPE);"
True,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,88,"// NOTE: ""(?)"" means there are multiple unknown types in the union."
True,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,89,"assertUnion(""?"", UNKNOWN_TYPE, unresolvedNameA1);"
True,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,90,"assertUnion(""not.resolved.A"", unresolvedNameA1, unresolvedNameA2);"
True,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,91,"assertUnion(""(not.resolved.A|not.resolved.B)"","
True,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,92,"unresolvedNameA1, unresolvedNameB);"
True,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,93,"assertUnion(""(Object|not.resolved.A)"", unresolvedNameA1, OBJECT_TYPE);"
True,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,96,public void testRemovalOfDupes() {
True,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,97,JSType stringAndObject =
True,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,98,"registry.createUnionType(STRING_TYPE, OBJECT_TYPE);"
True,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,99,"assertUnion(""(Object|string)"", stringAndObject, STRING_OBJECT_TYPE);"
True,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,100,"assertUnion(""(Object|string)"", STRING_OBJECT_TYPE, stringAndObject);"
True,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,103,"public void assertUnion(String expected, JSType ... types) {"
True,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,104,UnionTypeBuilder builder = new UnionTypeBuilder(registry);
True,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,105,for (JSType type : types) {
True,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,106,builder.addAlternate(type);
True,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,test/com/google/javascript/rhino/jstype/UnionTypeBuilderTest.java,108,"assertEquals(expected, builder.build().toString());"
