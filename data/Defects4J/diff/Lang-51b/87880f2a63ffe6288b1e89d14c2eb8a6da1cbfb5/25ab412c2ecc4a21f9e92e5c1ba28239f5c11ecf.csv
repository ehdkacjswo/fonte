is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,107," @version $Id: ReflectionToStringBuilder.java,v 1.11 2003/09/07 14:32:34 psteitz Exp $"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,107,"* @version $Id: ReflectionToStringBuilder.java,v 1.12 2003/10/23 22:25:16 ggregory Exp $"
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,117,"/ The HashSet implementation is not synchronized,"
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,118,/ which is just what we need here.
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,119,eturn new HashSet();
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,117,"// The HashSet implementation is not synchronized,"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,118,// which is just what we need here.
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,119,return new HashSet();
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,171,"eturn toString(object, null, false, null);"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,171,"return toString(object, null, false, false, null);"
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,197,"eturn toString(object, style, false, null);"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,197,"return toString(object, style, false, false, null);"
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,227,"eturn toString(object, style, outputTransients, null);"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,227,"return toString(object, style, outputTransients, false, null);"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,231,* <p>This method uses reflection to build a suitable
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,232,* <code>toString</code>.</p>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,234,* <p>It uses <code>AccessibleObject.setAccessible</code> to gain access to private
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,235,* fields. This means that it will throw a security exception if run
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,236,"* under a security manager, if the permissions are not set up correctly."
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,237,* It is also not as efficient as testing explicitly.</p>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,239,"* <p>If the <code>outputTransients</code> is <code>true</code>,"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,240,"* transient fields will be output, otherwise they are ignored,"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,241,"* as they are likely derived fields, and not part of the value of the"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,242,* Object.</p>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,244,"* <p>If the <code>outputStatics</code> is <code>true</code>,"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,245,"* static fields will be output, otherwise they are ignored.</p>"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,247,* <p>Static fields will not be included. Superclass fields will be appended.</p>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,249,"* <p>If the style is <code>null</code>, the default"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,250,* <code>ToStringStyle</code> is used.</p>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,252,* @param object  the Object to be output
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,253,"* @param style  the style of the <code>toString</code> to create,"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,254,*  may be <code>null</code>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,255,* @param outputTransients  whether to include transient fields
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,256,* @param outputStatics  whether to include transient fields
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,257,* @return the String result
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,258,* @throws IllegalArgumentException if the Object is <code>null</code>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,260,"public static String toString(Object object, ToStringStyle style, boolean outputTransients, boolean outputStatics) {"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,261,"return toString(object, style, outputTransients, outputStatics, null);"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,265,* <p>This method uses reflection to build a suitable
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,266,* <code>toString</code>.</p>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,268,* <p>It uses <code>AccessibleObject.setAccessible</code> to gain access to private
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,269,* fields. This means that it will throw a security exception if run
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,270,"* under a security manager, if the permissions are not set up correctly."
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,271,* It is also not as efficient as testing explicitly. </p>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,273,"* <p>If the <code>outputTransients</code> is <code>true</code>,"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,274,"* transient fields will be output, otherwise they are ignored,"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,275,"* as they are likely derived fields, and not part of the value of the"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,276,* Object.</p>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,278,"* <p>If the <code>outputStatics</code> is <code>true</code>,"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,279,"* static fields will be output, otherwise they are ignored.</p>"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,281,* <p>Superclass fields will be appended up to and including the
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,282,* specified superclass. A null superclass is treated as
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,283,* <code>java.lang.Object</code>.</p>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,285,"* <p>If the style is <code>null</code>, the default"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,286,* <code>ToStringStyle</code> is used.</p>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,288,* @param object  the Object to be output
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,289,"* @param style  the style of the <code>toString</code> to create,"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,290,*  may be <code>null</code>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,291,* @param outputTransients  whether to include transient fields
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,292,* @param outputStatics  whether to include static fields
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,293,"* @param reflectUpToClass  the superclass to reflect up to (inclusive),"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,294,*  may be <code>null</code>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,295,* @return the String result
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,296,* @throws IllegalArgumentException if the Object is <code>null</code>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,298,"public static String toString(Object object, ToStringStyle style, boolean outputTransients, boolean outputStatics, Class reflectUpToClass) {"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,299,"return new ReflectionToStringBuilder(object, style, null, reflectUpToClass, outputTransients, outputStatics).toString();"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,323,"* @deprecated Use {@link #toString(Object,ToStringStyle,boolean,boolean,Class)}"
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,260,ublic static String toString(
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,261,"bject object,"
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,262,"oStringStyle style,"
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,263,"oolean outputTransients,"
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,264,lass reflectUpToClass) {
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,334,"public static String toString(Object object, ToStringStyle style, boolean outputTransients, Class reflectUpToClass) {"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,339,* TODO: Is this convenience API really needed?
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,341,* <p>This method uses reflection to build a suitable
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,342,* <code>toString</code> value which includes static fields.</p>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,344,* <p>It uses <code>AccessibleObject.setAccessible</code> to gain access to private
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,345,* fields. This means that it will throw a security exception if run
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,346,"* under a security manager, if the permissions are not set up correctly."
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,347,* It is also not as efficient as testing explicitly. </p>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,349,* <p>Transient fields are not output.</p>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,351,* <p>Superclass fields will be appended up to and including
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,352,* <code>java.lang.Object</code>.</p>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,354,* <p>The default <code>ToStringStyle</code> is used.</p>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,356,* @param object  the Object to be output
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,357,"* @param reflectUpToClass  the superclass to reflect up to (inclusive),"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,358,*  may be <code>null</code>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,359,* @return the String result
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,360,* @throws IllegalArgumentException if the Object is <code>null</code>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,362,public static Object toStringWithStatics(Object object) {
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,363,"return toString(object, null, false, true, null);"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,367,* TODO: Is this convenience API really needed?
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,369,* <p>This method uses reflection to build a suitable
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,370,* <code>toString</code> value which includes static fields.</p>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,372,* <p>It uses <code>AccessibleObject.setAccessible</code> to gain access to private
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,373,* fields. This means that it will throw a security exception if run
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,374,"* under a security manager, if the permissions are not set up correctly."
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,375,* It is also not as efficient as testing explicitly. </p>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,377,* <p>Transient fields are not output.</p>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,379,* <p>Superclass fields will be appended up to and including the specified superclass.
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,380,* A null superclass is treated as <code>java.lang.Object</code>.</p>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,382,* <p>The default <code>ToStringStyle</code> is used.</p>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,384,* @param object  the Object to be output
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,385,"* @param reflectUpToClass  the superclass to reflect up to (inclusive),"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,386,*  may be <code>null</code>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,387,* @return the String result
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,388,* @throws IllegalArgumentException if the Object is <code>null</code>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,390,"public static Object toStringWithStatics(Object object, Class reflectUpToClass) {"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,391,"return toString(object, null, false, true, reflectUpToClass);"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,395,* TODO: Is this convenience API really needed?
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,397,* <p>This method uses reflection to build a suitable
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,398,* <code>toString</code> value which includes static fields.</p>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,400,* <p>It uses <code>AccessibleObject.setAccessible</code> to gain access to private
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,401,* fields. This means that it will throw a security exception if run
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,402,"* under a security manager, if the permissions are not set up correctly."
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,403,* It is also not as efficient as testing explicitly. </p>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,405,* <p>Transient fields are not output.</p>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,407,* <p>Superclass fields will be appended up to and including the specified superclass.
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,408,* A null superclass is treated as <code>java.lang.Object</code>.</p>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,410,"* <p>If the style is <code>null</code>, the default"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,411,* <code>ToStringStyle</code> is used.</p>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,413,* @param object  the Object to be output
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,414,"* @param style  the style of the <code>toString</code> to create,"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,415,*  may be <code>null</code>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,416,"* @param reflectUpToClass  the superclass to reflect up to (inclusive),"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,417,*  may be <code>null</code>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,418,* @return the String result
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,419,* @throws IllegalArgumentException if the Object is <code>null</code>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,421,"public static Object toStringWithStatics(Object object, ToStringStyle toStringStyle, Class reflectUpToClass) {"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,422,"return toString(object, toStringStyle, false, true, reflectUpToClass);"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,437,* Whether or not to append static fields.
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,439,private boolean appendStatics = false;
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,505,"* @deprecated Use {@link #ReflectionToStringBuilder(Object,ToStringStyle,StringBuffer,Class,boolean,boolean)}."
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,529,* Constructor.
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,531,"* @param object  the Object to build a <code>toString</code> for,"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,532,*  must not be <code>null</code>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,533,"* @param style  the style of the <code>toString</code> to create,"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,534,*  may be <code>null</code>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,535,"* @param buffer  the <code>StringBuffer</code> to populate, may be"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,536,*  <code>null</code>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,537,"* @param reflectUpToClass  the superclass to reflect up to (inclusive),"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,538,*  may be <code>null</code>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,539,* @param outputTransients  whether to include transient fields
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,540,* @param outputStatics  whether to include static fields
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,542,public ReflectionToStringBuilder(
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,543,"Object object,"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,544,"ToStringStyle style,"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,545,"StringBuffer buffer,"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,546,"Class reflectUpToClass,"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,547,"boolean outputTransients,"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,548,boolean outputStatics) {
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,549,"super(object, style, buffer);"
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,550,this.setUpToClass(reflectUpToClass);
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,551,this.setAppendTransients(outputTransients);
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,552,this.setAppendStatics(outputStatics);
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,367,  <li>Static fields are not appended.</li>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,559,*  <li>Static fields are appended only if {@link #isAppendStatics()} returns <code>true</code>.
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,375,tring fieldName = field.getName();
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,376,eturn (fieldName.indexOf(ClassUtils.INNER_CLASS_SEPARATOR_CHAR) == -1)
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,377,& (this.isAppendTransients() || !Modifier.isTransient(field.getModifiers()))
False,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,378,& (!Modifier.isStatic(field.getModifiers()));
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,566,if (field.getName().indexOf(ClassUtils.INNER_CLASS_SEPARATOR_CHAR) != -1) {
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,567,// Reject field from inner class.
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,568,return false;
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,570,if (Modifier.isTransient(field.getModifiers()) && !this.isAppendTransients()) {
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,571,// transients.
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,572,return false;
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,574,if (Modifier.isStatic(field.getModifiers()) && !this.isAppendStatics()) {
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,575,// transients.
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,576,return false;
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,578,return true;
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,663,* <p>Gets whether or not to append static fields.</p>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,665,* @return Whether or not to append static fields.
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,667,public boolean isAppendStatics() {
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,668,return this.appendStatics;
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,701,* <p>Sets whether or not to append static fields.</p>
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,703,* @param appendStatics Whether or not to append static fields.
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,705,public void setAppendStatics(boolean appendStatics) {
True,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java,706,this.appendStatics = appendStatics;
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,128," @version $Id: ToStringBuilder.java,v 1.29 2003/08/23 00:21:49 ggregory Exp $"
True,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,128,"* @version $Id: ToStringBuilder.java,v 1.30 2003/10/23 22:25:16 ggregory Exp $"
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,179,"eturn ReflectionToStringBuilder.toString(object, style, outputTransients, null);"
True,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,179,"return ReflectionToStringBuilder.toString(object, style, outputTransients, false, null);"
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,193,"eturn ReflectionToStringBuilder.toString(object, style, outputTransients, reflectUpToClass);"
True,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,193,"return ReflectionToStringBuilder.toString(object, style, outputTransients, false, reflectUpToClass);"
True,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,1039,* <p>Returns the <code>Object</code> being output.</p>
True,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,1041,* @return The object being output.
True,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,1042,* @since 2.0
True,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,1044,public Object getObject() {
True,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,1045,return object;
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,1073, <p>Returns the <code>Object</code> being output.</p>
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,1075, @return The object being output.
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,1076, @since 2.0
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,1078,ublic Object getObject() {
False,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,src/java/org/apache/commons/lang/builder/ToStringBuilder.java,1079,eturn object;
False,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,71," @version $Id: ToStringBuilderTest.java,v 1.10 2003/08/18 02:22:26 bayard Exp $"
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,71,"* @version $Id: ToStringBuilderTest.java,v 1.11 2003/10/23 22:26:00 ggregory Exp $"
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,843,public void testSimpleReflectionStatics() {
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,844,SimpleReflectionStaticFieldsFixture instance1 = new SimpleReflectionStaticFieldsFixture();
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,845,assertEquals(
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,846,"this.toBaseString(instance1) + ""[staticString=staticString,staticInt=12345]"","
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,847,"ReflectionToStringBuilder.toString(instance1, null, false, true, SimpleReflectionStaticFieldsFixture.class));"
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,848,assertEquals(
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,849,"this.toBaseString(instance1) + ""[staticString=staticString,staticInt=12345]"","
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,850,"ReflectionToStringBuilder.toString(instance1, null, true, true, SimpleReflectionStaticFieldsFixture.class));"
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,851,assertEquals(
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,852,"this.toBaseString(instance1) + ""[staticString=staticString,staticInt=12345]"","
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,853,"ReflectionToStringBuilder.toStringWithStatics(instance1, null, SimpleReflectionStaticFieldsFixture.class));"
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,854,assertEquals(
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,855,"this.toBaseString(instance1) + ""[staticString=staticString,staticInt=12345]"","
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,856,"ReflectionToStringBuilder.toStringWithStatics(instance1, SimpleReflectionStaticFieldsFixture.class));"
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,860,* Tests ReflectionToStringBuilder.toString() for statics.
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,862,public void testReflectionStatics() {
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,863,ReflectionStaticFieldsFixture instance1 = new ReflectionStaticFieldsFixture();
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,864,assertEquals(
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,865,"this.toBaseString(instance1) + ""[staticString=staticString,staticInt=12345,instanceString=instanceString,instanceInt=67890]"","
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,866,"ReflectionToStringBuilder.toString(instance1, null, false, true, ReflectionStaticFieldsFixture.class));"
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,867,assertEquals(
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,868,"this.toBaseString(instance1) + ""[staticString=staticString,staticInt=12345,staticTransientString=staticTransientString,staticTransientInt=54321,instanceString=instanceString,instanceInt=67890,transientString=transientString,transientInt=98765]"","
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,869,"ReflectionToStringBuilder.toString(instance1, null, true, true, ReflectionStaticFieldsFixture.class));"
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,870,assertEquals(
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,871,"this.toBaseString(instance1) + ""[staticString=staticString,staticInt=12345,instanceString=instanceString,instanceInt=67890]"","
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,872,"ReflectionToStringBuilder.toStringWithStatics(instance1, null, ReflectionStaticFieldsFixture.class));"
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,873,assertEquals(
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,874,"this.toBaseString(instance1) + ""[staticString=staticString,staticInt=12345,instanceString=instanceString,instanceInt=67890]"","
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,875,"ReflectionToStringBuilder.toStringWithStatics(instance1, ReflectionStaticFieldsFixture.class));"
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,879,* Tests ReflectionToStringBuilder.toString() for statics.
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,881,public void testInheritedReflectionStatics() {
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,882,InheritedReflectionStaticFieldsFixture instance1 = new InheritedReflectionStaticFieldsFixture();
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,883,assertEquals(
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,884,"this.toBaseString(instance1) + ""[staticString2=staticString2,staticInt2=67890]"","
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,885,"ReflectionToStringBuilder.toString(instance1, null, false, true, InheritedReflectionStaticFieldsFixture.class));"
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,886,assertEquals(
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,887,"this.toBaseString(instance1) + ""[staticString2=staticString2,staticInt2=67890,staticString=staticString,staticInt=12345]"","
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,888,"ReflectionToStringBuilder.toString(instance1, null, false, true, SimpleReflectionStaticFieldsFixture.class));"
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,889,assertEquals(
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,890,"this.toBaseString(instance1) + ""[staticString2=staticString2,staticInt2=67890,staticString=staticString,staticInt=12345]"","
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,891,"ReflectionToStringBuilder.toStringWithStatics(instance1, null, SimpleReflectionStaticFieldsFixture.class));"
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,892,assertEquals(
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,893,"this.toBaseString(instance1) + ""[staticString2=staticString2,staticInt2=67890,staticString=staticString,staticInt=12345]"","
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,894,"ReflectionToStringBuilder.toStringWithStatics(instance1, SimpleReflectionStaticFieldsFixture.class));"
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,898,* Tests ReflectionToStringBuilder.toString() for statics.
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,900,class ReflectionStaticFieldsFixture {
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,901,"static final String staticString = ""staticString"";"
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,902,static final int staticInt = 12345;
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,903,"static final transient String staticTransientString = ""staticTransientString"";"
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,904,static final transient int staticTransientInt = 54321;
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,905,"String instanceString = ""instanceString"";"
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,906,int instanceInt = 67890;
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,907,"transient String transientString = ""transientString"";"
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,908,transient int transientInt = 98765;
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,912,* Test fixture for ReflectionToStringBuilder.toString() for statics.
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,914,class SimpleReflectionStaticFieldsFixture {
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,915,"static final String staticString = ""staticString"";"
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,916,static final int staticInt = 12345;
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,920,* Test fixture for ReflectionToStringBuilder.toString() for statics.
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,922,class InheritedReflectionStaticFieldsFixture extends SimpleReflectionStaticFieldsFixture {
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,923,"static final String staticString2 = ""staticString2"";"
True,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java,924,static final int staticInt2 = 67890;
