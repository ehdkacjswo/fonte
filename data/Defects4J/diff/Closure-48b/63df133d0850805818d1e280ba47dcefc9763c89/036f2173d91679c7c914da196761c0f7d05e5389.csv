is_addition,old_file_path,new_file_path,line_num,content
True,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,229,static final DiagnosticType EXPECTED_THIS_TYPE =
True,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,230,DiagnosticType.warning(
True,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,231,"""JSC_EXPECTED_THIS_TYPE"","
True,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,232,"""\""{0}\"" must be called with a \""this\"" type"");"
True,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,262,"EXPECTED_THIS_TYPE,"
True,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,1578,// Functions with explcit 'this' types must be called in a GETPROP
True,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,1579,// or GETELEM.
True,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,1580,if (functionType.isOrdinaryFunction() &&
True,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,1581,!functionType.getTypeOfThis().isUnknownType() &&
True,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,1582,!functionType.getTypeOfThis().isNativeObjectType() &&
True,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,1583,!(child.getType() == Token.GETELEM ||
True,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,1584,child.getType() == Token.GETPROP)) {
True,src/com/google/javascript/jscomp/TypeCheck.java,src/com/google/javascript/jscomp/TypeCheck.java,1585,"report(t, n, EXPECTED_THIS_TYPE, functionType.toString());"
False,test/com/google/javascript/jscomp/RemoveUnusedNamesTest.java,test/com/google/javascript/jscomp/RemoveUnusedNamesTest.java,131,"est(""/** @constructor */ \n"" +"
True,test/com/google/javascript/jscomp/RemoveUnusedNamesTest.java,test/com/google/javascript/jscomp/RemoveUnusedNamesTest.java,131,"test(""/**\n"" +"
True,test/com/google/javascript/jscomp/RemoveUnusedNamesTest.java,test/com/google/javascript/jscomp/RemoveUnusedNamesTest.java,132,""" * @fileoverview\n"" +"
True,test/com/google/javascript/jscomp/RemoveUnusedNamesTest.java,test/com/google/javascript/jscomp/RemoveUnusedNamesTest.java,133,""" * @notypecheck\n"" +"
True,test/com/google/javascript/jscomp/RemoveUnusedNamesTest.java,test/com/google/javascript/jscomp/RemoveUnusedNamesTest.java,134,""" */ \n"" +"
True,test/com/google/javascript/jscomp/RemoveUnusedNamesTest.java,test/com/google/javascript/jscomp/RemoveUnusedNamesTest.java,135,"""/** @constructor */"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,4546,public void testThisTypeOfFunction1() throws Exception {
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,4547,testTypes(
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,4548,"""/** @type {function(this:Object)} */ function f() {}"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,4549,"""f();"");"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,4552,public void testThisTypeOfFunction2() throws Exception {
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,4553,testTypes(
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,4554,"""/** @constructor */ function F() {}"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,4555,"""/** @type {function(this:F)} */ function f() {}"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,4556,"""f();"","
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,4557,"""\""function (this:F): ?\"" must be called with a \""this\"" type"");"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,4560,public void testThisTypeOfFunction3() throws Exception {
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,4561,testTypes(
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,4562,"""/** @constructor */ function F() {}"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,4563,"""F.prototype.bar = function() {};"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,4564,"""var f = (new F()).bar; f();"","
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,4565,"""\""function (this:F): undefined\"" must be called with a \""this\"" type"");"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,4568,public void testThisTypeOfFunction4() throws Exception {
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,4569,testTypes(
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,4570,"""/** @constructor */ function F() {}"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,4571,"""F.prototype.moveTo = function(x, y) {};"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,4572,"""F.prototype.lineTo = function(x, y) {};"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,4573,"""function demo() {"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,4574,"""  var path = new F();"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,4575,"""  var points = [[1,1], [2,2]];"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,4576,"""  for (var i = 0; i < points.length; i++) {"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,4577,"""    (i == 0 ? path.moveTo : path.lineTo)("" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,4578,"""       points[i][0], points[i][1]);"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,4581,"""\""function (this:F, ?, ?): undefined\"" "" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,4582,"""must be called with a \""this\"" type"");"
