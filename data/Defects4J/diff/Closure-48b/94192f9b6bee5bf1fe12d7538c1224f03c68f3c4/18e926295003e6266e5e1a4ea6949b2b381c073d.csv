is_addition,old_file_path,new_file_path,line_num,content
False,src/com/google/javascript/rhino/jstype/EnumElementType.java,src/com/google/javascript/rhino/jstype/EnumElementType.java,266," Returns the infimum of a enum element type and another type, or null"
False,src/com/google/javascript/rhino/jstype/EnumElementType.java,src/com/google/javascript/rhino/jstype/EnumElementType.java,267, if the infimum is empty.
False,src/com/google/javascript/rhino/jstype/EnumElementType.java,src/com/google/javascript/rhino/jstype/EnumElementType.java,269," This can be a little bit weird. For example, suppose you have an enum"
False,src/com/google/javascript/rhino/jstype/EnumElementType.java,src/com/google/javascript/rhino/jstype/EnumElementType.java,270," of {(string|number)}, and you want the greatest subtype of the enum"
False,src/com/google/javascript/rhino/jstype/EnumElementType.java,src/com/google/javascript/rhino/jstype/EnumElementType.java,271, and a {number}.
False,src/com/google/javascript/rhino/jstype/EnumElementType.java,src/com/google/javascript/rhino/jstype/EnumElementType.java,273," The infimum is non-empty. But at the same time, we don't really have"
False,src/com/google/javascript/rhino/jstype/EnumElementType.java,src/com/google/javascript/rhino/jstype/EnumElementType.java,274," a name for this infimum. It's equivalent to ""elements of this enum that"
False,src/com/google/javascript/rhino/jstype/EnumElementType.java,src/com/google/javascript/rhino/jstype/EnumElementType.java,275," are numbers""."
False,src/com/google/javascript/rhino/jstype/EnumElementType.java,src/com/google/javascript/rhino/jstype/EnumElementType.java,277, The best we can do is make up a new type. This is similar to what
False,src/com/google/javascript/rhino/jstype/EnumElementType.java,src/com/google/javascript/rhino/jstype/EnumElementType.java,278," we do in UnionType#meet, which kind-of-sort-of makes sense, because"
False,src/com/google/javascript/rhino/jstype/EnumElementType.java,src/com/google/javascript/rhino/jstype/EnumElementType.java,279, an EnumElementType is a union of instances of a type.
False,src/com/google/javascript/rhino/jstype/EnumElementType.java,src/com/google/javascript/rhino/jstype/EnumElementType.java,281,SType meet(JSType that) {
False,src/com/google/javascript/rhino/jstype/EnumElementType.java,src/com/google/javascript/rhino/jstype/EnumElementType.java,282,SType meetPrimitive = primitiveType.getGreatestSubtype(that);
False,src/com/google/javascript/rhino/jstype/EnumElementType.java,src/com/google/javascript/rhino/jstype/EnumElementType.java,283,f (meetPrimitive.isEmptyType()) {
False,src/com/google/javascript/rhino/jstype/EnumElementType.java,src/com/google/javascript/rhino/jstype/EnumElementType.java,284,eturn null;
False,src/com/google/javascript/rhino/jstype/EnumElementType.java,src/com/google/javascript/rhino/jstype/EnumElementType.java,285, else {
False,src/com/google/javascript/rhino/jstype/EnumElementType.java,src/com/google/javascript/rhino/jstype/EnumElementType.java,286,"eturn new EnumElementType(registry, meetPrimitive, name);"
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,642,f (thisType instanceof EnumElementType) {
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,643,SType inf = ((EnumElementType) thisType).meet(thatType);
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,644,f (inf != null) {
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,645,eturn inf;
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,647, else if (thatType instanceof EnumElementType) {
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,648,SType inf = ((EnumElementType) thatType).meet(thisType);
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,649,f (inf != null) {
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,650,eturn inf;
False,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,654,f (thisType.isObject() && thatType.isObject()) {
True,src/com/google/javascript/rhino/jstype/JSType.java,src/com/google/javascript/rhino/jstype/JSType.java,640,} else if (thisType.isObject() && thatType.isObject()) {
False,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,471,f (isUnknownType() || implicitPrototypeChainIsUnknown()) {
False,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,472,"/ If unsure, say 'yes', to avoid spurious warnings."
False,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,473,"/ TODO(user): resolve the prototype chain completely in all cases,"
False,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,474,/ to avoid guessing.
False,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,475,eturn true;
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,471,if (that != null) {
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,472,if (isUnknownType() || implicitPrototypeChainIsUnknown()) {
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,473,"// If unsure, say 'yes', to avoid spurious warnings."
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,474,"// TODO(user): resolve the prototype chain completely in all cases,"
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,475,// to avoid guessing.
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,476,return true;
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,478,return this.isImplicitPrototype(thatObj);
False,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,477,eturn this.isImplicitPrototype(thatObj);
True,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,src/com/google/javascript/rhino/jstype/PrototypeObjectType.java,481,return false;
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,2819,ublic void testEnum42() throws Exception {
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,2820,estTypes(
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,2821,"/** @param {number} x */ function f(x) {}"" +"
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,2822,"/** @enum {Object} */ var MyEnum = {FOO: {newProperty: 1, b: 2}};"" +"
False,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,2823,"f(MyEnum.FOO.newProperty);"");"
False,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,3, ***** BEGIN LICENSE BLOCK *****
False,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,4, Version: MPL 1.1/GPL 2.0
False,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,6, The contents of this file are subject to the Mozilla Public License Version
False,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,7," 1.1 (the ""License""); you may not use this file except in compliance with"
False,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,8, the License. You may obtain a copy of the License at
False,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,9, http://www.mozilla.org/MPL/
False,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,11," Software distributed under the License is distributed on an ""AS IS"" basis,"
False,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,12," WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License"
False,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,13, for the specific language governing rights and limitations under the
False,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,14, License.
False,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,16," The Original Code is Rhino code, released"
False,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,17," May 6, 1999."
False,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,19, The Initial Developer of the Original Code is
False,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,20, Netscape Communications Corporation.
False,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,21, Portions created by the Initial Developer are Copyright (C) 1997-1999
False,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,22, the Initial Developer. All Rights Reserved.
False,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,24, Contributor(s):
False,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,25,   Nick Santos
False,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,27," Alternatively, the contents of this file may be used under the terms of"
False,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,28," the GNU General Public License Version 2 or later (the ""GPL""), in which"
False,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,29, case the provisions of the GPL are applicable instead of those above. If
False,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,30, you wish to allow use of your version of this file only under the terms of
False,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,31, the GPL and not to allow others to use your version of this file under the
False,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,32," MPL, indicate your decision by deleting the provisions above and replacing"
False,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,33, them with the notice and other provisions required by the GPL. If you do
False,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,34," not delete the provisions above, a recipient may use your version of this"
False,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,35, file under either the MPL or the GPL.
False,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,37, ***** END LICENSE BLOCK ***** */
False,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,39,ackage com.google.javascript.rhino.jstype;
False,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,41,mport com.google.javascript.rhino.testing.BaseJSTypeTestCase;
False,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,45, Tests for EnumElementTypes.
False,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,46, @author nicksantos@google.com (Nick Santos)
False,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,48,ublic class EnumElementTypeTest extends BaseJSTypeTestCase {
False,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,49,ublic void testSubtypeRelation() throws Exception {
False,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,50,numElementType typeA = registry.createEnumType(
False,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,51,"typeA"", NUMBER_TYPE).getElementsType();"
False,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,52,numElementType typeB = registry.createEnumType(
False,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,53,"typeB"", NUMBER_TYPE).getElementsType();"
False,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,55,ssertFalse(typeA.isSubtype(typeB));
False,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,56,ssertFalse(typeB.isSubtype(typeA));
False,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,58,ssertFalse(NUMBER_TYPE.isSubtype(typeB));
False,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,59,ssertFalse(NUMBER_TYPE.isSubtype(typeA));
False,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,61,ssertTrue(typeA.isSubtype(NUMBER_TYPE));
False,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,62,ssertTrue(typeB.isSubtype(NUMBER_TYPE));
False,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,65,ublic void testMeet() throws Exception {
False,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,66,numElementType typeA = registry.createEnumType(
False,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,67,"typeA"", createUnionType(NUMBER_TYPE, STRING_TYPE)).getElementsType();"
False,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,69,SType stringsOfA = typeA.getGreatestSubtype(STRING_TYPE);
False,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,70,ssertFalse(stringsOfA.isEmptyType());
False,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,71,"ssertEquals(""typeA.<string>"", stringsOfA.toString());"
False,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,72,ssertTrue(stringsOfA.isSubtype(typeA));
False,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,74,SType numbersOfA = NUMBER_TYPE.getGreatestSubtype(typeA);
False,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,75,ssertFalse(numbersOfA.isEmptyType());
False,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,76,"ssertEquals(""typeA.<number>"", numbersOfA.toString());"
False,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,test/com/google/javascript/rhino/jstype/EnumElementTypeTest.java,77,ssertTrue(numbersOfA.isSubtype(typeA));
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4988,ublic void testAnonymousObjectChain() throws Exception {
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4989,ist<JSType> typeChain = Lists.newArrayList(
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4990,"LL_TYPE,"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4991,"reateNullableType(OBJECT_TYPE),"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4992,"BJECT_TYPE,"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4993,"egistry.createAnonymousObjectType(),"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4994,"egistry.getNativeType(JSTypeNative.NO_OBJECT_TYPE),"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4995,egistry.getNativeType(JSTypeNative.NO_TYPE));
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4996,erifySubtypeChain(typeChain);
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,4999,ublic void testAnonymousEnumElementChain() throws Exception {
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5000,bjectType enumElemType = registry.createEnumType(
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5001,"typeB"", registry.createAnonymousObjectType()).getElementsType();"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5002,ist<JSType> typeChain = Lists.newArrayList(
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5003,"LL_TYPE,"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5004,"reateNullableType(OBJECT_TYPE),"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5005,"BJECT_TYPE,"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5006,"numElemType,"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5007,"egistry.getNativeType(JSTypeNative.NO_OBJECT_TYPE),"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5008,egistry.getNativeType(JSTypeNative.NO_TYPE));
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5009,erifySubtypeChain(typeChain);
