is_addition,old_file_path,new_file_path,line_num,content
True,src/com/google/javascript/rhino/jstype/NamedType.java,src/com/google/javascript/rhino/jstype/NamedType.java,44,import com.google.common.collect.Lists;
True,src/com/google/javascript/rhino/jstype/NamedType.java,src/com/google/javascript/rhino/jstype/NamedType.java,46,import com.google.javascript.rhino.Node;
True,src/com/google/javascript/rhino/jstype/NamedType.java,src/com/google/javascript/rhino/jstype/NamedType.java,48,import java.util.List;
True,src/com/google/javascript/rhino/jstype/NamedType.java,src/com/google/javascript/rhino/jstype/NamedType.java,108,* Property-defining continuations.
True,src/com/google/javascript/rhino/jstype/NamedType.java,src/com/google/javascript/rhino/jstype/NamedType.java,110,private List<PropertyContinuation> propertyContinuations = null;
True,src/com/google/javascript/rhino/jstype/NamedType.java,src/com/google/javascript/rhino/jstype/NamedType.java,131,@Override
True,src/com/google/javascript/rhino/jstype/NamedType.java,src/com/google/javascript/rhino/jstype/NamedType.java,132,"boolean defineProperty(String propertyName, JSType type,"
True,src/com/google/javascript/rhino/jstype/NamedType.java,src/com/google/javascript/rhino/jstype/NamedType.java,133,"boolean inferred, boolean inExterns, Node propertyNode) {"
True,src/com/google/javascript/rhino/jstype/NamedType.java,src/com/google/javascript/rhino/jstype/NamedType.java,134,if (!isResolved()) {
True,src/com/google/javascript/rhino/jstype/NamedType.java,src/com/google/javascript/rhino/jstype/NamedType.java,135,"// If this is an unresolved object type, we need to save all its"
True,src/com/google/javascript/rhino/jstype/NamedType.java,src/com/google/javascript/rhino/jstype/NamedType.java,136,// properties and define them when it is resolved.
True,src/com/google/javascript/rhino/jstype/NamedType.java,src/com/google/javascript/rhino/jstype/NamedType.java,137,if (propertyContinuations == null) {
True,src/com/google/javascript/rhino/jstype/NamedType.java,src/com/google/javascript/rhino/jstype/NamedType.java,138,propertyContinuations = Lists.newArrayList();
True,src/com/google/javascript/rhino/jstype/NamedType.java,src/com/google/javascript/rhino/jstype/NamedType.java,140,propertyContinuations.add(
True,src/com/google/javascript/rhino/jstype/NamedType.java,src/com/google/javascript/rhino/jstype/NamedType.java,141,new PropertyContinuation(
True,src/com/google/javascript/rhino/jstype/NamedType.java,src/com/google/javascript/rhino/jstype/NamedType.java,142,"propertyName, type, inferred, inExterns, propertyNode));"
True,src/com/google/javascript/rhino/jstype/NamedType.java,src/com/google/javascript/rhino/jstype/NamedType.java,143,return true;
True,src/com/google/javascript/rhino/jstype/NamedType.java,src/com/google/javascript/rhino/jstype/NamedType.java,144,} else {
True,src/com/google/javascript/rhino/jstype/NamedType.java,src/com/google/javascript/rhino/jstype/NamedType.java,145,return super.defineProperty(
True,src/com/google/javascript/rhino/jstype/NamedType.java,src/com/google/javascript/rhino/jstype/NamedType.java,146,"propertyName, type, inferred, inExterns, propertyNode);"
True,src/com/google/javascript/rhino/jstype/NamedType.java,src/com/google/javascript/rhino/jstype/NamedType.java,150,private void finishPropertyContinuations() {
True,src/com/google/javascript/rhino/jstype/NamedType.java,src/com/google/javascript/rhino/jstype/NamedType.java,151,ObjectType referencedObjType = getReferencedObjTypeInternal();
True,src/com/google/javascript/rhino/jstype/NamedType.java,src/com/google/javascript/rhino/jstype/NamedType.java,152,if (referencedObjType != null && !referencedObjType.isUnknownType()) {
True,src/com/google/javascript/rhino/jstype/NamedType.java,src/com/google/javascript/rhino/jstype/NamedType.java,153,if (propertyContinuations != null) {
True,src/com/google/javascript/rhino/jstype/NamedType.java,src/com/google/javascript/rhino/jstype/NamedType.java,154,for (PropertyContinuation c : propertyContinuations) {
True,src/com/google/javascript/rhino/jstype/NamedType.java,src/com/google/javascript/rhino/jstype/NamedType.java,155,c.commit(this);
True,src/com/google/javascript/rhino/jstype/NamedType.java,src/com/google/javascript/rhino/jstype/NamedType.java,159,propertyContinuations = null;
True,src/com/google/javascript/rhino/jstype/NamedType.java,src/com/google/javascript/rhino/jstype/NamedType.java,237,finishPropertyContinuations();
True,src/com/google/javascript/rhino/jstype/NamedType.java,src/com/google/javascript/rhino/jstype/NamedType.java,248,if (isResolved()) {
True,src/com/google/javascript/rhino/jstype/NamedType.java,src/com/google/javascript/rhino/jstype/NamedType.java,249,finishPropertyContinuations();
True,src/com/google/javascript/rhino/jstype/NamedType.java,src/com/google/javascript/rhino/jstype/NamedType.java,421,/** Store enough information to define a property at a later time. */
True,src/com/google/javascript/rhino/jstype/NamedType.java,src/com/google/javascript/rhino/jstype/NamedType.java,422,private static final class PropertyContinuation {
True,src/com/google/javascript/rhino/jstype/NamedType.java,src/com/google/javascript/rhino/jstype/NamedType.java,423,private final String propertyName;
True,src/com/google/javascript/rhino/jstype/NamedType.java,src/com/google/javascript/rhino/jstype/NamedType.java,424,private final JSType type;
True,src/com/google/javascript/rhino/jstype/NamedType.java,src/com/google/javascript/rhino/jstype/NamedType.java,425,private final boolean inferred;
True,src/com/google/javascript/rhino/jstype/NamedType.java,src/com/google/javascript/rhino/jstype/NamedType.java,426,private final boolean inExterns;
True,src/com/google/javascript/rhino/jstype/NamedType.java,src/com/google/javascript/rhino/jstype/NamedType.java,427,private final Node propertyNode;
True,src/com/google/javascript/rhino/jstype/NamedType.java,src/com/google/javascript/rhino/jstype/NamedType.java,429,private PropertyContinuation(
True,src/com/google/javascript/rhino/jstype/NamedType.java,src/com/google/javascript/rhino/jstype/NamedType.java,430,"String propertyName,"
True,src/com/google/javascript/rhino/jstype/NamedType.java,src/com/google/javascript/rhino/jstype/NamedType.java,431,"JSType type,"
True,src/com/google/javascript/rhino/jstype/NamedType.java,src/com/google/javascript/rhino/jstype/NamedType.java,432,"boolean inferred,"
True,src/com/google/javascript/rhino/jstype/NamedType.java,src/com/google/javascript/rhino/jstype/NamedType.java,433,"boolean inExterns,"
True,src/com/google/javascript/rhino/jstype/NamedType.java,src/com/google/javascript/rhino/jstype/NamedType.java,434,Node propertyNode) {
True,src/com/google/javascript/rhino/jstype/NamedType.java,src/com/google/javascript/rhino/jstype/NamedType.java,435,this.propertyName = propertyName;
True,src/com/google/javascript/rhino/jstype/NamedType.java,src/com/google/javascript/rhino/jstype/NamedType.java,436,this.type = type;
True,src/com/google/javascript/rhino/jstype/NamedType.java,src/com/google/javascript/rhino/jstype/NamedType.java,437,this.inferred = inferred;
True,src/com/google/javascript/rhino/jstype/NamedType.java,src/com/google/javascript/rhino/jstype/NamedType.java,438,this.inExterns = inExterns;
True,src/com/google/javascript/rhino/jstype/NamedType.java,src/com/google/javascript/rhino/jstype/NamedType.java,439,this.propertyNode = propertyNode;
True,src/com/google/javascript/rhino/jstype/NamedType.java,src/com/google/javascript/rhino/jstype/NamedType.java,442,void commit(ObjectType target) {
True,src/com/google/javascript/rhino/jstype/NamedType.java,src/com/google/javascript/rhino/jstype/NamedType.java,443,target.defineProperty(
True,src/com/google/javascript/rhino/jstype/NamedType.java,src/com/google/javascript/rhino/jstype/NamedType.java,444,"propertyName, type, inferred, inExterns, propertyNode);"
True,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,72,ObjectType getReferencedObjTypeInternal() {
True,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,src/com/google/javascript/rhino/jstype/ProxyObjectType.java,73,return referencedObjType;
False,src/com/google/javascript/rhino/testing/Asserts.java,src/com/google/javascript/rhino/testing/Asserts.java,62,"eturn assertValidResolve(type, new EmptyScope());"
True,src/com/google/javascript/rhino/testing/Asserts.java,src/com/google/javascript/rhino/testing/Asserts.java,62,"return assertValidResolve(type, MapBasedScope.emptyScope());"
False,src/com/google/javascript/rhino/testing/BaseJSTypeTestCase.java,src/com/google/javascript/rhino/testing/BaseJSTypeTestCase.java,387,"ew FunctionBuilder(registry).withReturnType(returnType).build(), true, null);"
True,src/com/google/javascript/rhino/testing/BaseJSTypeTestCase.java,src/com/google/javascript/rhino/testing/BaseJSTypeTestCase.java,387,"new FunctionBuilder(registry).withReturnType(returnType).build(),"
True,src/com/google/javascript/rhino/testing/BaseJSTypeTestCase.java,src/com/google/javascript/rhino/testing/BaseJSTypeTestCase.java,388,"true, null);"
True,src/com/google/javascript/rhino/testing/BaseJSTypeTestCase.java,src/com/google/javascript/rhino/testing/BaseJSTypeTestCase.java,572,"protected final void assertTypeEquals(JSType a, JSType b) {"
True,src/com/google/javascript/rhino/testing/BaseJSTypeTestCase.java,src/com/google/javascript/rhino/testing/BaseJSTypeTestCase.java,573,"Asserts.assertTypeEquals(a, b);"
True,src/com/google/javascript/rhino/testing/BaseJSTypeTestCase.java,src/com/google/javascript/rhino/testing/BaseJSTypeTestCase.java,576,"protected final void assertTypeEquals(String msg, JSType a, JSType b) {"
True,src/com/google/javascript/rhino/testing/BaseJSTypeTestCase.java,src/com/google/javascript/rhino/testing/BaseJSTypeTestCase.java,577,"Asserts.assertTypeEquals(msg, a, b);"
True,src/com/google/javascript/rhino/testing/BaseJSTypeTestCase.java,src/com/google/javascript/rhino/testing/BaseJSTypeTestCase.java,580,"protected final void assertTypeNotEquals(JSType a, JSType b) {"
True,src/com/google/javascript/rhino/testing/BaseJSTypeTestCase.java,src/com/google/javascript/rhino/testing/BaseJSTypeTestCase.java,581,"Asserts.assertTypeNotEquals(a, b);"
True,src/com/google/javascript/rhino/testing/BaseJSTypeTestCase.java,src/com/google/javascript/rhino/testing/BaseJSTypeTestCase.java,584,"protected final void assertTypeNotEquals(String msg, JSType a, JSType b) {"
True,src/com/google/javascript/rhino/testing/BaseJSTypeTestCase.java,src/com/google/javascript/rhino/testing/BaseJSTypeTestCase.java,585,"Asserts.assertTypeNotEquals(msg, a, b);"
True,src/com/google/javascript/rhino/testing/EmptyScope.java,src/com/google/javascript/rhino/testing/MapBasedScope.java,41,import com.google.common.collect.ImmutableMap;
True,src/com/google/javascript/rhino/testing/EmptyScope.java,src/com/google/javascript/rhino/testing/MapBasedScope.java,42,import com.google.common.collect.Maps;
True,src/com/google/javascript/rhino/testing/EmptyScope.java,src/com/google/javascript/rhino/testing/MapBasedScope.java,44,import com.google.javascript.rhino.jstype.SimpleSlot;
True,src/com/google/javascript/rhino/testing/EmptyScope.java,src/com/google/javascript/rhino/testing/MapBasedScope.java,48,import java.util.Map;
False,src/com/google/javascript/rhino/testing/EmptyScope.java,src/com/google/javascript/rhino/testing/MapBasedScope.java,46, An empty scope implementation.
True,src/com/google/javascript/rhino/testing/EmptyScope.java,src/com/google/javascript/rhino/testing/MapBasedScope.java,51,* A scope based on a simple hashmap.
False,src/com/google/javascript/rhino/testing/EmptyScope.java,src/com/google/javascript/rhino/testing/MapBasedScope.java,49,ublic class EmptyScope implements StaticScope<JSType> {
True,src/com/google/javascript/rhino/testing/EmptyScope.java,src/com/google/javascript/rhino/testing/MapBasedScope.java,54,public class MapBasedScope implements StaticScope<JSType> {
True,src/com/google/javascript/rhino/testing/EmptyScope.java,src/com/google/javascript/rhino/testing/MapBasedScope.java,55,"private final Map<String, StaticSlot<JSType>> slots = Maps.newHashMap();"
True,src/com/google/javascript/rhino/testing/EmptyScope.java,src/com/google/javascript/rhino/testing/MapBasedScope.java,57,"public MapBasedScope(Map<String, ? extends JSType> namesToTypes) {"
True,src/com/google/javascript/rhino/testing/EmptyScope.java,src/com/google/javascript/rhino/testing/MapBasedScope.java,58,"for (Map.Entry<String, ? extends JSType> entry : namesToTypes.entrySet()) {"
True,src/com/google/javascript/rhino/testing/EmptyScope.java,src/com/google/javascript/rhino/testing/MapBasedScope.java,59,slots.put(
True,src/com/google/javascript/rhino/testing/EmptyScope.java,src/com/google/javascript/rhino/testing/MapBasedScope.java,60,"entry.getKey(),"
True,src/com/google/javascript/rhino/testing/EmptyScope.java,src/com/google/javascript/rhino/testing/MapBasedScope.java,61,"new SimpleSlot(entry.getKey(), entry.getValue(), false));"
True,src/com/google/javascript/rhino/testing/EmptyScope.java,src/com/google/javascript/rhino/testing/MapBasedScope.java,65,public static MapBasedScope emptyScope() {
True,src/com/google/javascript/rhino/testing/EmptyScope.java,src/com/google/javascript/rhino/testing/MapBasedScope.java,66,"return new MapBasedScope(ImmutableMap.<String, JSType>of());"
False,src/com/google/javascript/rhino/testing/EmptyScope.java,src/com/google/javascript/rhino/testing/MapBasedScope.java,57,eturn null;
True,src/com/google/javascript/rhino/testing/EmptyScope.java,src/com/google/javascript/rhino/testing/MapBasedScope.java,76,return slots.get(name);
False,src/com/google/javascript/rhino/testing/EmptyScope.java,src/com/google/javascript/rhino/testing/MapBasedScope.java,62,eturn null;
True,src/com/google/javascript/rhino/testing/EmptyScope.java,src/com/google/javascript/rhino/testing/MapBasedScope.java,81,return slots.get(name);
False,test/com/google/javascript/rhino/jstype/FunctionParamBuilderTest.java,test/com/google/javascript/rhino/jstype/FunctionParamBuilderTest.java,42,mport com.google.javascript.rhino.testing.Asserts;
False,test/com/google/javascript/rhino/jstype/FunctionParamBuilderTest.java,test/com/google/javascript/rhino/jstype/FunctionParamBuilderTest.java,69,"rivate void assertTypeEquals(JSType a, JSType b) {"
False,test/com/google/javascript/rhino/jstype/FunctionParamBuilderTest.java,test/com/google/javascript/rhino/jstype/FunctionParamBuilderTest.java,70,"sserts.assertTypeEquals(a, b);"
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,46,import com.google.javascript.rhino.testing.MapBasedScope;
False,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,209,taticScope<JSType> empty = new EmptyScope();
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,210,StaticScope<JSType> empty = MapBasedScope.emptyScope();
False,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,240,taticScope<JSType> empty = new EmptyScope();
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,241,StaticScope<JSType> empty = MapBasedScope.emptyScope();
False,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,256,"xpr, ""source.js"", new EmptyScope());"
True,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,257,"expr, ""source.js"", MapBasedScope.emptyScope());"
False,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,264,rivate static class EmptyScope implements StaticScope<JSType> {
False,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,265,ublic StaticSlot<JSType> getSlot(final String name) { return null; }
False,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,266,ublic StaticSlot<JSType> getOwnSlot(String name) { return null; }
False,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,267,ublic StaticScope<JSType> getParentScope() { return null; }
False,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,test/com/google/javascript/rhino/jstype/JSTypeRegistryTest.java,268,ublic JSType getTypeOfThis() { return null; }
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,58,mport com.google.javascript.rhino.testing.EmptyScope;
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,58,import com.google.javascript.rhino.testing.MapBasedScope;
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,85,rivate static final StaticScope<JSType> EMPTY_SCOPE = new EmptyScope();
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,85,private static final StaticScope<JSType> EMPTY_SCOPE =
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,86,MapBasedScope.emptyScope();
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,743,ssertTrue(NO_RESOLVED_TYPE.canTestForShallowEqualityWith(NO_RESOLVED_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,744,assertTrue(
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,745,NO_RESOLVED_TYPE.canTestForShallowEqualityWith(NO_RESOLVED_TYPE));
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,747,ssertTrue(NO_RESOLVED_TYPE.canTestForShallowEqualityWith(BOOLEAN_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,749,assertTrue(
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,750,NO_RESOLVED_TYPE.canTestForShallowEqualityWith(BOOLEAN_OBJECT_TYPE));
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,754,ssertTrue(NO_RESOLVED_TYPE.canTestForShallowEqualityWith(NUMBER_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,757,assertTrue(
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,758,NO_RESOLVED_TYPE.canTestForShallowEqualityWith(NUMBER_OBJECT_TYPE));
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,757,ssertTrue(NO_RESOLVED_TYPE.canTestForShallowEqualityWith(RANGE_ERROR_TYPE));
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,758,ssertTrue(NO_RESOLVED_TYPE.canTestForShallowEqualityWith(REFERENCE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,761,assertTrue(
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,762,NO_RESOLVED_TYPE.canTestForShallowEqualityWith(RANGE_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,763,assertTrue(
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,764,NO_RESOLVED_TYPE.canTestForShallowEqualityWith(REFERENCE_ERROR_TYPE));
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,761,ssertTrue(NO_RESOLVED_TYPE.canTestForShallowEqualityWith(STRING_OBJECT_TYPE));
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,762,ssertTrue(NO_RESOLVED_TYPE.canTestForShallowEqualityWith(SYNTAX_ERROR_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,767,assertTrue(
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,768,NO_RESOLVED_TYPE.canTestForShallowEqualityWith(STRING_OBJECT_TYPE));
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,769,assertTrue(
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,770,NO_RESOLVED_TYPE.canTestForShallowEqualityWith(SYNTAX_ERROR_TYPE));
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1340,ssertTrue(NUMBER_OBJECT_TYPE.getImplicitPrototype().isFunctionPrototypeType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1348,assertTrue(
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,1349,NUMBER_OBJECT_TYPE.getImplicitPrototype().isFunctionPrototypeType());
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2107,ssertTrue(STRING_OBJECT_TYPE.getImplicitPrototype().isFunctionPrototypeType());
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2116,assertTrue(
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,2117,STRING_OBJECT_TYPE.getImplicitPrototype().isFunctionPrototypeType());
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5337,"ap<String, RecordProperty> properties = new HashMap<String, RecordProperty>();"
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5347,"Map<String, RecordProperty> properties ="
True,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5348,"new HashMap<String, RecordProperty>();"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5610,"rivate void assertTypeEquals(JSType a, JSType b) {"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5611,"sserts.assertTypeEquals(a, b);"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5614,"rivate void assertTypeEquals(String msg, JSType a, JSType b) {"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5615,"sserts.assertTypeEquals(msg, a, b);"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5618,"rivate void assertTypeNotEquals(JSType a, JSType b) {"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5619,"sserts.assertTypeNotEquals(a, b);"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5622,"rivate void assertTypeNotEquals(String msg, JSType a, JSType b) {"
False,test/com/google/javascript/rhino/jstype/JSTypeTest.java,test/com/google/javascript/rhino/jstype/JSTypeTest.java,5623,"sserts.assertTypeNotEquals(msg, a, b);"
True,test/com/google/javascript/rhino/jstype/NamedTypeTest.java,test/com/google/javascript/rhino/jstype/NamedTypeTest.java,3,* ***** BEGIN LICENSE BLOCK *****
True,test/com/google/javascript/rhino/jstype/NamedTypeTest.java,test/com/google/javascript/rhino/jstype/NamedTypeTest.java,4,* Version: MPL 1.1/GPL 2.0
True,test/com/google/javascript/rhino/jstype/NamedTypeTest.java,test/com/google/javascript/rhino/jstype/NamedTypeTest.java,6,* The contents of this file are subject to the Mozilla Public License Version
True,test/com/google/javascript/rhino/jstype/NamedTypeTest.java,test/com/google/javascript/rhino/jstype/NamedTypeTest.java,7,"* 1.1 (the ""License""); you may not use this file except in compliance with"
True,test/com/google/javascript/rhino/jstype/NamedTypeTest.java,test/com/google/javascript/rhino/jstype/NamedTypeTest.java,8,* the License. You may obtain a copy of the License at
True,test/com/google/javascript/rhino/jstype/NamedTypeTest.java,test/com/google/javascript/rhino/jstype/NamedTypeTest.java,9,* http://www.mozilla.org/MPL/
True,test/com/google/javascript/rhino/jstype/NamedTypeTest.java,test/com/google/javascript/rhino/jstype/NamedTypeTest.java,11,"* Software distributed under the License is distributed on an ""AS IS"" basis,"
True,test/com/google/javascript/rhino/jstype/NamedTypeTest.java,test/com/google/javascript/rhino/jstype/NamedTypeTest.java,12,"* WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License"
True,test/com/google/javascript/rhino/jstype/NamedTypeTest.java,test/com/google/javascript/rhino/jstype/NamedTypeTest.java,13,* for the specific language governing rights and limitations under the
True,test/com/google/javascript/rhino/jstype/NamedTypeTest.java,test/com/google/javascript/rhino/jstype/NamedTypeTest.java,14,* License.
True,test/com/google/javascript/rhino/jstype/NamedTypeTest.java,test/com/google/javascript/rhino/jstype/NamedTypeTest.java,16,"* The Original Code is Rhino code, released"
True,test/com/google/javascript/rhino/jstype/NamedTypeTest.java,test/com/google/javascript/rhino/jstype/NamedTypeTest.java,17,"* May 6, 1999."
True,test/com/google/javascript/rhino/jstype/NamedTypeTest.java,test/com/google/javascript/rhino/jstype/NamedTypeTest.java,19,* The Initial Developer of the Original Code is
True,test/com/google/javascript/rhino/jstype/NamedTypeTest.java,test/com/google/javascript/rhino/jstype/NamedTypeTest.java,20,* Netscape Communications Corporation.
True,test/com/google/javascript/rhino/jstype/NamedTypeTest.java,test/com/google/javascript/rhino/jstype/NamedTypeTest.java,21,* Portions created by the Initial Developer are Copyright (C) 1997-1999
True,test/com/google/javascript/rhino/jstype/NamedTypeTest.java,test/com/google/javascript/rhino/jstype/NamedTypeTest.java,22,* the Initial Developer. All Rights Reserved.
True,test/com/google/javascript/rhino/jstype/NamedTypeTest.java,test/com/google/javascript/rhino/jstype/NamedTypeTest.java,24,* Contributor(s):
True,test/com/google/javascript/rhino/jstype/NamedTypeTest.java,test/com/google/javascript/rhino/jstype/NamedTypeTest.java,25,*   Nick Santos
True,test/com/google/javascript/rhino/jstype/NamedTypeTest.java,test/com/google/javascript/rhino/jstype/NamedTypeTest.java,27,"* Alternatively, the contents of this file may be used under the terms of"
True,test/com/google/javascript/rhino/jstype/NamedTypeTest.java,test/com/google/javascript/rhino/jstype/NamedTypeTest.java,28,"* the GNU General Public License Version 2 or later (the ""GPL""), in which"
True,test/com/google/javascript/rhino/jstype/NamedTypeTest.java,test/com/google/javascript/rhino/jstype/NamedTypeTest.java,29,* case the provisions of the GPL are applicable instead of those above. If
True,test/com/google/javascript/rhino/jstype/NamedTypeTest.java,test/com/google/javascript/rhino/jstype/NamedTypeTest.java,30,* you wish to allow use of your version of this file only under the terms of
True,test/com/google/javascript/rhino/jstype/NamedTypeTest.java,test/com/google/javascript/rhino/jstype/NamedTypeTest.java,31,* the GPL and not to allow others to use your version of this file under the
True,test/com/google/javascript/rhino/jstype/NamedTypeTest.java,test/com/google/javascript/rhino/jstype/NamedTypeTest.java,32,"* MPL, indicate your decision by deleting the provisions above and replacing"
True,test/com/google/javascript/rhino/jstype/NamedTypeTest.java,test/com/google/javascript/rhino/jstype/NamedTypeTest.java,33,* them with the notice and other provisions required by the GPL. If you do
True,test/com/google/javascript/rhino/jstype/NamedTypeTest.java,test/com/google/javascript/rhino/jstype/NamedTypeTest.java,34,"* not delete the provisions above, a recipient may use your version of this"
True,test/com/google/javascript/rhino/jstype/NamedTypeTest.java,test/com/google/javascript/rhino/jstype/NamedTypeTest.java,35,* file under either the MPL or the GPL.
True,test/com/google/javascript/rhino/jstype/NamedTypeTest.java,test/com/google/javascript/rhino/jstype/NamedTypeTest.java,37,* ***** END LICENSE BLOCK ***** */
True,test/com/google/javascript/rhino/jstype/NamedTypeTest.java,test/com/google/javascript/rhino/jstype/NamedTypeTest.java,39,package com.google.javascript.rhino.jstype;
True,test/com/google/javascript/rhino/jstype/NamedTypeTest.java,test/com/google/javascript/rhino/jstype/NamedTypeTest.java,41,import com.google.common.collect.ImmutableMap;
True,test/com/google/javascript/rhino/jstype/NamedTypeTest.java,test/com/google/javascript/rhino/jstype/NamedTypeTest.java,42,import com.google.javascript.rhino.testing.BaseJSTypeTestCase;
True,test/com/google/javascript/rhino/jstype/NamedTypeTest.java,test/com/google/javascript/rhino/jstype/NamedTypeTest.java,43,import com.google.javascript.rhino.testing.MapBasedScope;
True,test/com/google/javascript/rhino/jstype/NamedTypeTest.java,test/com/google/javascript/rhino/jstype/NamedTypeTest.java,46,* @author nicksantos@google.com (Nick Santos)
True,test/com/google/javascript/rhino/jstype/NamedTypeTest.java,test/com/google/javascript/rhino/jstype/NamedTypeTest.java,48,public class NamedTypeTest extends BaseJSTypeTestCase {
True,test/com/google/javascript/rhino/jstype/NamedTypeTest.java,test/com/google/javascript/rhino/jstype/NamedTypeTest.java,49,public void testNamedTypeProperties() {
True,test/com/google/javascript/rhino/jstype/NamedTypeTest.java,test/com/google/javascript/rhino/jstype/NamedTypeTest.java,50,"NamedType namedA = new NamedType(registry, ""TypeA"", ""source"", 1, 0);"
True,test/com/google/javascript/rhino/jstype/NamedTypeTest.java,test/com/google/javascript/rhino/jstype/NamedTypeTest.java,51,FunctionType ctorA = registry.createConstructorType(
True,test/com/google/javascript/rhino/jstype/NamedTypeTest.java,test/com/google/javascript/rhino/jstype/NamedTypeTest.java,52,"""TypeA"", null, null, null);"
True,test/com/google/javascript/rhino/jstype/NamedTypeTest.java,test/com/google/javascript/rhino/jstype/NamedTypeTest.java,53,ObjectType typeA = ctorA.getInstanceType();
True,test/com/google/javascript/rhino/jstype/NamedTypeTest.java,test/com/google/javascript/rhino/jstype/NamedTypeTest.java,55,"namedA.defineDeclaredProperty(""foo"", NUMBER_TYPE, false, null);"
True,test/com/google/javascript/rhino/jstype/NamedTypeTest.java,test/com/google/javascript/rhino/jstype/NamedTypeTest.java,56,namedA.resolve(
True,test/com/google/javascript/rhino/jstype/NamedTypeTest.java,test/com/google/javascript/rhino/jstype/NamedTypeTest.java,57,"null,"
True,test/com/google/javascript/rhino/jstype/NamedTypeTest.java,test/com/google/javascript/rhino/jstype/NamedTypeTest.java,58,new MapBasedScope(
True,test/com/google/javascript/rhino/jstype/NamedTypeTest.java,test/com/google/javascript/rhino/jstype/NamedTypeTest.java,59,"ImmutableMap.of(""TypeA"", ctorA)));"
True,test/com/google/javascript/rhino/jstype/NamedTypeTest.java,test/com/google/javascript/rhino/jstype/NamedTypeTest.java,60,"assertTypeEquals(NUMBER_TYPE, typeA.getPropertyType(""foo""));"
