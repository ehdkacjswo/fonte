is_addition,old_file_path,new_file_path,line_num,content
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,227,* Constructs a TimeOfDay with specified hour and minute and zero seconds and milliseconds
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,228,* using <code>ISOChronology</code> in the default zone.
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,229,* <p>
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,230,* The constructor uses the no time zone initialising the fields as provided.
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,231,"* Once the constructor is complete, all further calculations"
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,232,* are performed without reference to a timezone (by switching to UTC).
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,234,* @param hourOfDay  the hour of the day
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,235,* @param minuteOfHour  the minute of the hour
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,237,"public TimeOfDay(int hourOfDay, int minuteOfHour) {"
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,238,"this(hourOfDay, minuteOfHour, 0, 0, null);"
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,242,* Constructs a TimeOfDay with specified hour and minute and zero seconds and milliseconds.
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,243,* <p>
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,244,* The constructor uses the time zone of the chronology specified.
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,245,"* Once the constructor is complete, all further calculations are performed"
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,246,* without reference to a timezone (by switching to UTC).
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,248,* @param hourOfDay  the hour of the day
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,249,* @param minuteOfHour  the minute of the hour
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,250,"* @param chronology  the chronology, null means ISOChronology in the default zone"
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,252,"public TimeOfDay(int hourOfDay, int minuteOfHour, Chronology chronology) {"
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,253,"this(hourOfDay, minuteOfHour, 0, 0, chronology);"
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,257,* Constructs a TimeOfDay with specified time field values and zero milliseconds
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,258,* using <code>ISOChronology</code> in the default zone.
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,259,* <p>
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,260,* The constructor uses the no time zone initialising the fields as provided.
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,261,"* Once the constructor is complete, all further calculations"
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,262,* are performed without reference to a timezone (by switching to UTC).
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,264,* @param hourOfDay  the hour of the day
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,265,* @param minuteOfHour  the minute of the hour
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,266,* @param secondOfMinute  the second of the minute
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,268,"public TimeOfDay(int hourOfDay, int minuteOfHour, int secondOfMinute) {"
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,269,"this(hourOfDay, minuteOfHour, secondOfMinute, 0, null);"
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,273,* Constructs a TimeOfDay with specified time field values and zero milliseconds.
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,274,* <p>
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,275,* The constructor uses the time zone of the chronology specified.
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,276,"* Once the constructor is complete, all further calculations are performed"
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,277,* without reference to a timezone (by switching to UTC).
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,279,* @param hourOfDay  the hour of the day
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,280,* @param minuteOfHour  the minute of the hour
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,281,* @param secondOfMinute  the second of the minute
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,282,"* @param chronology  the chronology, null means ISOChronology in the default zone"
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,284,"public TimeOfDay(int hourOfDay, int minuteOfHour, int secondOfMinute, Chronology chronology) {"
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,285,"this(hourOfDay, minuteOfHour, secondOfMinute, 0, chronology);"
False,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,262,/ TODO: Validate
True,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,JodaTime/src/java/org/joda/time/partial/TimeOfDay.java,326,chronology.validate(this);
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,56,import java.util.Date;
False,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,164,/ TODO
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,165,Date date = new Date(TEST_TIME);
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,166,TimeOfDay test = new TimeOfDay(date);
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,167,"assertEquals(ISOChronology.getInstance(), test.getChronology());"
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,168,"assertEquals(10, test.getHourOfDay());"
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,169,"assertEquals(20, test.getMinuteOfHour());"
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,170,"assertEquals(30, test.getSecondOfMinute());"
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,171,"assertEquals(40, test.getMillisOfSecond());"
False,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,171,/ TODO
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,178,Date date = new Date(TEST_TIME);
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,179,"TimeOfDay test = new TimeOfDay(date, JulianChronology.getInstance());"
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,180,"assertEquals(JulianChronology.getInstance(), test.getChronology());"
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,181,"assertEquals(10, test.getHourOfDay());"
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,182,"assertEquals(20, test.getMinuteOfHour());"
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,183,"assertEquals(30, test.getSecondOfMinute());"
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,184,"assertEquals(40, test.getMillisOfSecond());"
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,188,"* Test constructor (int, int)"
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,190,public void testConstructor_intint() throws Throwable {
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,191,"TimeOfDay test = new TimeOfDay(10, 20);"
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,192,"assertEquals(ISOChronology.getInstance(), test.getChronology());"
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,193,"assertEquals(10, test.getHourOfDay());"
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,194,"assertEquals(20, test.getMinuteOfHour());"
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,195,"assertEquals(0, test.getSecondOfMinute());"
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,196,"assertEquals(0, test.getMillisOfSecond());"
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,197,try {
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,198,"new TimeOfDay(-1, 20);"
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,199,fail();
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,200,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,201,try {
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,202,"new TimeOfDay(24, 20);"
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,203,fail();
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,204,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,205,try {
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,206,"new TimeOfDay(10, -1);"
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,207,fail();
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,208,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,209,try {
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,210,"new TimeOfDay(10, 60);"
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,211,fail();
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,212,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,216,"* Test constructor (int, int, int, Chronology)"
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,218,public void testConstructor_intintChronology() throws Throwable {
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,219,"TimeOfDay test = new TimeOfDay(10, 20, JulianChronology.getInstance());"
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,220,"assertEquals(JulianChronology.getInstance(), test.getChronology());"
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,221,"assertEquals(10, test.getHourOfDay());"
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,222,"assertEquals(20, test.getMinuteOfHour());"
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,223,"assertEquals(0, test.getSecondOfMinute());"
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,224,"assertEquals(0, test.getMillisOfSecond());"
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,225,try {
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,226,"new TimeOfDay(-1, 20, JulianChronology.getInstance());"
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,227,fail();
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,228,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,229,try {
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,230,"new TimeOfDay(24, 20, JulianChronology.getInstance());"
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,231,fail();
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,232,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,233,try {
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,234,"new TimeOfDay(10, -1, JulianChronology.getInstance());"
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,235,fail();
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,236,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,237,try {
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,238,"new TimeOfDay(10, 60, JulianChronology.getInstance());"
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,239,fail();
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,240,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,244,"* Test constructor (int, int, int)"
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,246,public void testConstructor_intintint() throws Throwable {
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,247,"TimeOfDay test = new TimeOfDay(10, 20, 30);"
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,248,"assertEquals(ISOChronology.getInstance(), test.getChronology());"
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,249,"assertEquals(10, test.getHourOfDay());"
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,250,"assertEquals(20, test.getMinuteOfHour());"
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,251,"assertEquals(30, test.getSecondOfMinute());"
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,252,"assertEquals(0, test.getMillisOfSecond());"
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,253,try {
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,254,"new TimeOfDay(-1, 20, 30);"
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,255,fail();
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,256,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,257,try {
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,258,"new TimeOfDay(24, 20, 30);"
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,259,fail();
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,260,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,261,try {
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,262,"new TimeOfDay(10, -1, 30);"
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,263,fail();
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,264,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,265,try {
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,266,"new TimeOfDay(10, 60, 30);"
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,267,fail();
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,268,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,269,try {
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,270,"new TimeOfDay(10, 20, -1);"
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,271,fail();
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,272,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,273,try {
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,274,"new TimeOfDay(10, 20, 60);"
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,275,fail();
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,276,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,280,"* Test constructor (int, int, int, Chronology)"
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,282,public void testConstructor_intintintChronology() throws Throwable {
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,283,"TimeOfDay test = new TimeOfDay(10, 20, 30, JulianChronology.getInstance());"
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,284,"assertEquals(JulianChronology.getInstance(), test.getChronology());"
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,285,"assertEquals(10, test.getHourOfDay());"
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,286,"assertEquals(20, test.getMinuteOfHour());"
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,287,"assertEquals(30, test.getSecondOfMinute());"
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,288,"assertEquals(0, test.getMillisOfSecond());"
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,289,try {
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,290,"new TimeOfDay(-1, 20, 30, JulianChronology.getInstance());"
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,291,fail();
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,292,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,293,try {
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,294,"new TimeOfDay(24, 20, 30, JulianChronology.getInstance());"
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,295,fail();
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,296,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,297,try {
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,298,"new TimeOfDay(10, -1, 30, JulianChronology.getInstance());"
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,299,fail();
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,300,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,301,try {
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,302,"new TimeOfDay(10, 60, 30, JulianChronology.getInstance());"
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,303,fail();
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,304,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,305,try {
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,306,"new TimeOfDay(10, 20, -1, JulianChronology.getInstance());"
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,307,fail();
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,308,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,309,try {
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,310,"new TimeOfDay(10, 20, 60, JulianChronology.getInstance());"
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,311,fail();
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,312,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,325,try {
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,326,"new TimeOfDay(-1, 20, 30, 40);"
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,327,fail();
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,328,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,329,try {
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,330,"new TimeOfDay(24, 20, 30, 40);"
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,331,fail();
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,332,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,333,try {
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,334,"new TimeOfDay(10, -1, 30, 40);"
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,335,fail();
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,336,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,337,try {
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,338,"new TimeOfDay(10, 60, 30, 40);"
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,339,fail();
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,340,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,341,try {
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,342,"new TimeOfDay(10, 20, -1, 40);"
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,343,fail();
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,344,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,345,try {
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,346,"new TimeOfDay(10, 20, 60, 40);"
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,347,fail();
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,348,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,349,try {
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,350,"new TimeOfDay(10, 20, 30, -1);"
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,351,fail();
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,352,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,353,try {
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,354,"new TimeOfDay(10, 20, 30, 1000);"
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,355,fail();
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,356,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,369,try {
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,370,"new TimeOfDay(-1, 20, 30, 40, JulianChronology.getInstance());"
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,371,fail();
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,372,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,373,try {
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,374,"new TimeOfDay(24, 20, 30, 40, JulianChronology.getInstance());"
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,375,fail();
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,376,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,377,try {
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,378,"new TimeOfDay(10, -1, 30, 40, JulianChronology.getInstance());"
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,379,fail();
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,380,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,381,try {
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,382,"new TimeOfDay(10, 60, 30, 40, JulianChronology.getInstance());"
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,383,fail();
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,384,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,385,try {
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,386,"new TimeOfDay(10, 20, -1, 40, JulianChronology.getInstance());"
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,387,fail();
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,388,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,389,try {
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,390,"new TimeOfDay(10, 20, 60, 40, JulianChronology.getInstance());"
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,391,fail();
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,392,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,393,try {
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,394,"new TimeOfDay(10, 20, 30, -1, JulianChronology.getInstance());"
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,395,fail();
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,396,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,397,try {
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,398,"new TimeOfDay(10, 20, 30, 1000, JulianChronology.getInstance());"
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,399,fail();
True,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,JodaTime/src/test/org/joda/test/time/partial/TestTimeOfDay.java,400,} catch (IllegalArgumentException ex) {}
