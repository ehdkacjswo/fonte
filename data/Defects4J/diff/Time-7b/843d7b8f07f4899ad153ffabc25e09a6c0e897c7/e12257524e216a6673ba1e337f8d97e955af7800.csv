is_addition,old_file_path,new_file_path,line_num,content
False,JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,93,* The pivot year to use for two-digit year parsing. */
True,JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,93,/** The pivot year to use for two-digit year parsing. */
True,JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,95,/** The default year for parsing month/day without year. */
True,JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,96,private final int iDefaultYear;
True,JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,115,iDefaultYear = 2000;
False,JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,122,nteger pivotYear) {
True,JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,125,"Integer pivotYear, int defaultYear) {"
True,JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,134,iDefaultYear = defaultYear;
False,JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,187,"OffsetParsed, iChrono, iZone, iPivotYear);"
True,JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,191,"iOffsetParsed, iChrono, iZone, iPivotYear, iDefaultYear);"
False,JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,220,"rue, iChrono, null, iPivotYear);"
True,JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,224,"true, iChrono, null, iPivotYear, iDefaultYear);"
False,JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,255,"OffsetParsed, chrono, iZone, iPivotYear);"
True,JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,259,"iOffsetParsed, chrono, iZone, iPivotYear, iDefaultYear);"
False,JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,318,"alse, iChrono, zone, iPivotYear);"
True,JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,322,"false, iChrono, zone, iPivotYear, iDefaultYear);"
False,JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,365,"OffsetParsed, iChrono, iZone, pivotYear);"
True,JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,369,"iOffsetParsed, iChrono, iZone, pivotYear, iDefaultYear);"
True,JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,417,* Returns a new formatter that will use the specified default year.
True,JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,418,* <p>
True,JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,419,* The default year is used when parsing in the case where there is a
True,JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,420,"* month or a day but not a year. Specifically, it is used if there is"
True,JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,421,* a field parsed with a duration between the length of a month and the
True,JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,422,* length of a day inclusive.
True,JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,423,* <p>
True,JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,424,* This value is typically used to move the year from 1970 to a leap year
True,JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,425,* to enable February 29th to be parsed.
True,JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,426,"* Unless customised, the year 2000 is used."
True,JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,427,* <p>
True,JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,428,* This setting has no effect when printing.
True,JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,430,* @param defaultYear  the default year to use
True,JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,431,"* @return the new formatter, not null"
True,JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,432,* @since 2.0
True,JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,434,public DateTimeFormatter withDefaultYear(int defaultYear) {
True,JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,435,"return new DateTimeFormatter(iPrinter, iParser, iLocale,"
True,JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,436,"iOffsetParsed, iChrono, iZone, iPivotYear, defaultYear);"
True,JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,440,* Gets the default year for parsing months and days.
True,JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,442,* @return the default year for parsing months and days
True,JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,443,* @since 2.0
True,JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,445,public int getDefaultYear() {
True,JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,446,return iDefaultYear;
False,JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,665,ateTimeParserBucket bucket = new DateTimeParserBucket
False,JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,666,"instantLocal, chrono, iLocale, iPivotYear);"
True,JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,703,DateTimeParserBucket bucket = new DateTimeParserBucket(
True,JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,704,"instantLocal, chrono, iLocale, iPivotYear, iDefaultYear);"
False,JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,694,"ateTimeParserBucket bucket = new DateTimeParserBucket(0, chrono, iLocale, iPivotYear);"
True,JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,732,"DateTimeParserBucket bucket = new DateTimeParserBucket(0, chrono, iLocale, iPivotYear, iDefaultYear);"
False,JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,760,"ateTimeParserBucket bucket = new DateTimeParserBucket(0, chrono, iLocale, iPivotYear);"
True,JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,798,"DateTimeParserBucket bucket = new DateTimeParserBucket(0, chrono, iLocale, iPivotYear, iDefaultYear);"
False,JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,799,"ateTimeParserBucket bucket = new DateTimeParserBucket(0, chrono, iLocale, iPivotYear);"
True,JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,837,"DateTimeParserBucket bucket = new DateTimeParserBucket(0, chrono, iLocale, iPivotYear, iDefaultYear);"
False,JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,838,"ateTimeParserBucket bucket = new DateTimeParserBucket(0, chrono, iLocale, iPivotYear);"
True,JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,876,"DateTimeParserBucket bucket = new DateTimeParserBucket(0, chrono, iLocale, iPivotYear, iDefaultYear);"
True,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,27,import org.joda.time.DurationFieldType;
True,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,68,/** Used for parsing month/day without year. */
True,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,69,private int iDefaultYear;
False,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,75, Constucts a bucket.
True,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,78,* Constructs a bucket.
True,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,83,* @deprecated Use longer constructor
True,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,85,@Deprecated
False,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,82,"his(instantLocal, chrono, locale, null);"
True,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,87,"this(instantLocal, chrono, locale, null, 2000);"
False,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,86," Constucts a bucket, with the option of specifying the pivot year for"
True,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,91,"* Constructs a bucket, with the option of specifying the pivot year for"
True,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,99,* @deprecated Use longer constructor
True,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,101,@Deprecated
True,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,103,"this(instantLocal, chrono, locale, pivotYear, 2000);"
True,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,107,"* Constructs a bucket, with the option of specifying the pivot year for"
True,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,108,* two-digit year parsing.
True,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,110,"* @param instantLocal  the initial millis from 1970-01-01T00:00:00, local time"
True,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,111,* @param chrono  the chronology to use
True,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,112,* @param locale  the locale to use
True,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,113,* @param pivotYear  the pivot year to use when parsing two-digit years
True,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,114,* @since 2.0
True,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,116,"public DateTimeParserBucket(long instantLocal, Chronology chrono,"
True,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,117,"Locale locale, Integer pivotYear, int defaultYear) {"
True,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,125,iDefaultYear = defaultYear;
False,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,165, Returns the pivot year used for parsing two-digit years.
True,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,188,* Returns the default year used when information is incomplete.
False,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,167," If null is returned, this indicates default behaviour"
True,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,190,* This is used for two-digit years and when the largest parsed field is
True,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,191,* months or days.
True,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,192,* <p>
True,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,193,* A null value for two-digit years means to use the value from DateTimeFormatterBuilder.
True,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,194,* A null value for month/day only parsing will cause the default of 2000 to be used.
True,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,339,if (count > 0) {
True,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,340,// alter base year for parsing if first field is month or day
True,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,341,DurationField months = DurationFieldType.months().getField(iChrono);
True,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,342,DurationField days = DurationFieldType.days().getField(iChrono);
True,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,343,DurationField first = savedFields[0].iField.getDurationField();
True,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,344,"if (compareReverse(first, months) >= 0 && compareReverse(first, days) <= 0) {"
True,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,345,"saveField(DateTimeFieldType.year(), iDefaultYear);"
True,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,346,"return computeMillis(resetFields, text);"
False,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,455,"rivate int compareReverse(DurationField a, DurationField b) {"
False,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,456,f (a == null || !a.isSupported()) {
False,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,457,f (b == null || !b.isSupported()) {
False,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,458,eturn 0;
False,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,460,eturn -1;
True,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,493,"static int compareReverse(DurationField a, DurationField b) {"
True,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,494,if (a == null || !a.isSupported()) {
False,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,463,eturn 1;
True,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,496,return 0;
False,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,465,eturn -a.compareTo(b);
True,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,498,return -1;
True,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,500,if (b == null || !b.isSupported()) {
True,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,501,return 1;
True,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,JodaTime/src/main/java/org/joda/time/format/DateTimeParserBucket.java,503,return -a.compareTo(b);
False,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormat.java,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormat.java,974,"heck(date, 1970, 6, 23);"
True,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormat.java,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormat.java,974,"check(date, 2000, 6, 23);"
True,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormat.java,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormat.java,977,public void testFormatParse_textMonthAtEnd_France_withSpecifiedDefault() {
True,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormat.java,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormat.java,978,"DateTimeFormatter dateFormatter = DateTimeFormat.forPattern(""dd MMM"")"
True,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormat.java,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormat.java,979,.withLocale(Locale.FRANCE).withZoneUTC().withDefaultYear(1980);
True,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormat.java,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormat.java,981,"String str = new DateTime(2007, 6, 23, 0, 0, 0, 0, UTC).toString(dateFormatter);"
True,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormat.java,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormat.java,982,"assertEquals(""23 juin"", str);"
True,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormat.java,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormat.java,983,DateTime date = dateFormatter.parseDateTime(str);
True,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormat.java,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormat.java,984,"check(date, 1980, 6, 23);"
True,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,36,import org.joda.time.chrono.GJChronology;
True,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,376,public void testParseLocalDate_yearOfEra() {
True,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,377,Chronology chrono = GJChronology.getInstanceUTC();
True,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,378,DateTimeFormatter f = DateTimeFormat
True,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,379,".forPattern(""YYYY-MM GG"")"
True,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,380,.withChronology(chrono)
True,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,381,.withLocale(Locale.UK);
True,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,383,"LocalDate date = new LocalDate(2005, 10, 1, chrono);"
True,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,384,"assertEquals(date, f.parseLocalDate(""2005-10 AD""));"
True,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,385,"assertEquals(date, f.parseLocalDate(""2005-10 CE""));"
True,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,387,"date = new LocalDate(-2005, 10, 1, chrono);"
True,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,388,"assertEquals(date, f.parseLocalDate(""2005-10 BC""));"
True,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,389,"assertEquals(date, f.parseLocalDate(""2005-10 BCE""));"
True,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,392,public void testParseLocalDate_yearOfCentury() {
True,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,393,Chronology chrono = GJChronology.getInstanceUTC();
True,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,394,DateTimeFormatter f = DateTimeFormat
True,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,395,".forPattern(""yy M d"")"
True,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,396,.withChronology(chrono)
True,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,397,.withLocale(Locale.UK)
True,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,398,.withPivotYear(2050);
True,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,400,"LocalDate date = new LocalDate(2050, 8, 4, chrono);"
True,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,401,"assertEquals(date, f.parseLocalDate(""50 8 4""));"
True,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,404,public void testParseLocalDate_monthDay_feb29() {
True,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,405,Chronology chrono = GJChronology.getInstanceUTC();
True,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,406,DateTimeFormatter f = DateTimeFormat
True,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,407,".forPattern(""M d"")"
True,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,408,.withChronology(chrono)
True,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,409,.withLocale(Locale.UK);
True,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,411,"assertEquals(new LocalDate(2000, 2, 29, chrono), f.parseLocalDate(""2 29""));"
True,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,414,public void testParseLocalDate_monthDay_withDefaultYear_feb29() {
True,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,415,Chronology chrono = GJChronology.getInstanceUTC();
True,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,416,DateTimeFormatter f = DateTimeFormat
True,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,417,".forPattern(""M d"")"
True,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,418,.withChronology(chrono)
True,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,419,.withLocale(Locale.UK)
True,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,420,.withDefaultYear(2012);
True,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,422,"assertEquals(new LocalDate(2012, 2, 29, chrono), f.parseLocalDate(""2 29""));"
True,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,451,public void testParseLocalDateTime_monthDay_feb29() {
True,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,452,Chronology chrono = GJChronology.getInstanceUTC();
True,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,453,DateTimeFormatter f = DateTimeFormat
True,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,454,".forPattern(""M d H m"")"
True,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,455,.withChronology(chrono)
True,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,456,.withLocale(Locale.UK);
True,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,458,"assertEquals(new LocalDateTime(2000, 2, 29, 13, 40, 0, 0, chrono), f.parseLocalDateTime(""2 29 13 40""));"
True,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,461,public void testParseLocalDateTime_monthDay_withDefaultYear_feb29() {
True,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,462,Chronology chrono = GJChronology.getInstanceUTC();
True,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,463,DateTimeFormatter f = DateTimeFormat
True,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,464,".forPattern(""M d H m"")"
True,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,465,.withChronology(chrono)
True,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,466,.withLocale(Locale.UK)
True,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,467,.withDefaultYear(2012);
True,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,JodaTime/src/test/java/org/joda/time/format/TestDateTimeFormatter.java,469,"assertEquals(new LocalDateTime(2012, 2, 29, 13, 40, 0, 0, chrono), f.parseLocalDateTime(""2 29 13 40""));"
