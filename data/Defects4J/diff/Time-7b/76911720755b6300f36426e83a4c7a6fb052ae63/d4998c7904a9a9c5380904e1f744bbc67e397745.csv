is_addition,old_file_path,new_file_path,line_num,content
False,JodaTime/src/java/org/joda/time/LocalTime.java,JodaTime/src/java/org/joda/time/LocalTime.java,525,eturn isSupported(type.getDurationType());
True,JodaTime/src/java/org/joda/time/LocalTime.java,JodaTime/src/java/org/joda/time/LocalTime.java,525,if (isSupported(type.getDurationType()) == false) {
True,JodaTime/src/java/org/joda/time/LocalTime.java,JodaTime/src/java/org/joda/time/LocalTime.java,526,return false;
True,JodaTime/src/java/org/joda/time/LocalTime.java,JodaTime/src/java/org/joda/time/LocalTime.java,528,DurationFieldType range = type.getRangeDurationType();
True,JodaTime/src/java/org/joda/time/LocalTime.java,JodaTime/src/java/org/joda/time/LocalTime.java,529,return (isSupported(range) || range == DurationFieldType.days());
False,JodaTime/src/test/org/joda/time/TestLocalTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalTime_Basics.java,32,mport org.joda.time.chrono.ISOChronology;
False,JodaTime/src/test/org/joda/time/TestLocalTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalTime_Basics.java,50,rivate static final Chronology ISO_PARIS = ISOChronology.getInstance(PARIS);
False,JodaTime/src/test/org/joda/time/TestLocalTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalTime_Basics.java,51,rivate static final Chronology ISO_LONDON = ISOChronology.getInstance(LONDON);
False,JodaTime/src/test/org/joda/time/TestLocalTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalTime_Basics.java,52,rivate static final Chronology ISO_TOKYO = ISOChronology.getInstance(TOKYO);
False,JodaTime/src/test/org/joda/time/TestLocalTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalTime_Basics.java,53,rivate static final Chronology ISO_UTC = ISOChronology.getInstanceUTC();
False,JodaTime/src/test/org/joda/time/TestLocalTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalTime_Basics.java,54,rivate static final Chronology BUDDHIST_PARIS = BuddhistChronology.getInstance(PARIS);
False,JodaTime/src/test/org/joda/time/TestLocalTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalTime_Basics.java,56,rivate static final Chronology BUDDHIST_TOKYO = BuddhistChronology.getInstance(TOKYO);
False,JodaTime/src/test/org/joda/time/TestLocalTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalTime_Basics.java,57,rivate static final Chronology BUDDHIST_UTC = BuddhistChronology.getInstanceUTC();
False,JodaTime/src/test/org/joda/time/TestLocalTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalTime_Basics.java,65,rivate long TEST_TIME1 =
False,JodaTime/src/test/org/joda/time/TestLocalTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalTime_Basics.java,66,L * DateTimeConstants.MILLIS_PER_HOUR
False,JodaTime/src/test/org/joda/time/TestLocalTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalTime_Basics.java,67, 2L * DateTimeConstants.MILLIS_PER_MINUTE
False,JodaTime/src/test/org/joda/time/TestLocalTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalTime_Basics.java,68, 3L * DateTimeConstants.MILLIS_PER_SECOND
False,JodaTime/src/test/org/joda/time/TestLocalTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalTime_Basics.java,69, 4L;
True,JodaTime/src/test/org/joda/time/TestLocalTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalTime_Basics.java,57,//    private long TEST_TIME1 =
True,JodaTime/src/test/org/joda/time/TestLocalTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalTime_Basics.java,58,//        1L * DateTimeConstants.MILLIS_PER_HOUR
True,JodaTime/src/test/org/joda/time/TestLocalTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalTime_Basics.java,59,//        + 2L * DateTimeConstants.MILLIS_PER_MINUTE
True,JodaTime/src/test/org/joda/time/TestLocalTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalTime_Basics.java,60,//        + 3L * DateTimeConstants.MILLIS_PER_SECOND
True,JodaTime/src/test/org/joda/time/TestLocalTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalTime_Basics.java,61,//        + 4L;
True,JodaTime/src/test/org/joda/time/TestLocalTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalTime_Basics.java,228,"DateTimeFieldType d = new DateTimeFieldType(""hours"") {"
True,JodaTime/src/test/org/joda/time/TestLocalTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalTime_Basics.java,229,public DurationFieldType getDurationType() {
True,JodaTime/src/test/org/joda/time/TestLocalTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalTime_Basics.java,230,return DurationFieldType.hours();
True,JodaTime/src/test/org/joda/time/TestLocalTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalTime_Basics.java,232,public DurationFieldType getRangeDurationType() {
True,JodaTime/src/test/org/joda/time/TestLocalTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalTime_Basics.java,233,return null;
True,JodaTime/src/test/org/joda/time/TestLocalTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalTime_Basics.java,235,public DateTimeField getField(Chronology chronology) {
True,JodaTime/src/test/org/joda/time/TestLocalTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalTime_Basics.java,236,return chronology.hourOfDay();
True,JodaTime/src/test/org/joda/time/TestLocalTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalTime_Basics.java,239,"assertEquals(false, test.isSupported(d));"
True,JodaTime/src/test/org/joda/time/TestLocalTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalTime_Basics.java,241,"d = new DateTimeFieldType(""hourOfYear"") {"
True,JodaTime/src/test/org/joda/time/TestLocalTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalTime_Basics.java,242,public DurationFieldType getDurationType() {
True,JodaTime/src/test/org/joda/time/TestLocalTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalTime_Basics.java,243,return DurationFieldType.hours();
True,JodaTime/src/test/org/joda/time/TestLocalTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalTime_Basics.java,245,public DurationFieldType getRangeDurationType() {
True,JodaTime/src/test/org/joda/time/TestLocalTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalTime_Basics.java,246,return DurationFieldType.years();
True,JodaTime/src/test/org/joda/time/TestLocalTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalTime_Basics.java,248,public DateTimeField getField(Chronology chronology) {
True,JodaTime/src/test/org/joda/time/TestLocalTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalTime_Basics.java,249,return chronology.hourOfDay();
True,JodaTime/src/test/org/joda/time/TestLocalTime_Basics.java,JodaTime/src/test/org/joda/time/TestLocalTime_Basics.java,252,"assertEquals(false, test.isSupported(d));"
