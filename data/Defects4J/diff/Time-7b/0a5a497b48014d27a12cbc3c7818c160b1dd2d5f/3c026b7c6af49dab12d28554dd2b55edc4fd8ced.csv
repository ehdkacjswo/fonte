is_addition,old_file_path,new_file_path,line_num,content
False,JodaTime/src/java/org/joda/time/LocalDate.java,JodaTime/src/java/org/joda/time/LocalDate.java,106,** The chronology to use in UTC */
True,JodaTime/src/java/org/joda/time/LocalDate.java,JodaTime/src/java/org/joda/time/LocalDate.java,106,/** The chronology to use in UTC. */
True,JodaTime/src/java/org/joda/time/LocalDate.java,JodaTime/src/java/org/joda/time/LocalDate.java,108,/** The cached hash code. */
True,JodaTime/src/java/org/joda/time/LocalDate.java,JodaTime/src/java/org/joda/time/LocalDate.java,109,private transient volatile int iHash;
True,JodaTime/src/java/org/joda/time/LocalDate.java,JodaTime/src/java/org/joda/time/LocalDate.java,543,* Gets a hash code for the instant as defined in <code>ReadablePartial</code>.
True,JodaTime/src/java/org/joda/time/LocalDate.java,JodaTime/src/java/org/joda/time/LocalDate.java,545,* @return a suitable hash code
True,JodaTime/src/java/org/joda/time/LocalDate.java,JodaTime/src/java/org/joda/time/LocalDate.java,547,public int hashCode() {
True,JodaTime/src/java/org/joda/time/LocalDate.java,JodaTime/src/java/org/joda/time/LocalDate.java,548,// override for performance
True,JodaTime/src/java/org/joda/time/LocalDate.java,JodaTime/src/java/org/joda/time/LocalDate.java,549,int hash = iHash;
True,JodaTime/src/java/org/joda/time/LocalDate.java,JodaTime/src/java/org/joda/time/LocalDate.java,550,if (hash == 0) {
True,JodaTime/src/java/org/joda/time/LocalDate.java,JodaTime/src/java/org/joda/time/LocalDate.java,551,hash = iHash = super.hashCode();
True,JodaTime/src/java/org/joda/time/LocalDate.java,JodaTime/src/java/org/joda/time/LocalDate.java,553,return hash;
True,JodaTime/src/test/org/joda/time/TestLocalDate_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDate_Basics.java,301,public void testEqualsHashCodeAPI() {
True,JodaTime/src/test/org/joda/time/TestLocalDate_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDate_Basics.java,302,"LocalDate test = new LocalDate(1970, 6, 9, COPTIC_PARIS);"
True,JodaTime/src/test/org/joda/time/TestLocalDate_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDate_Basics.java,303,int expected = 157;
True,JodaTime/src/test/org/joda/time/TestLocalDate_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDate_Basics.java,304,expected = 23 * expected + 1970;
True,JodaTime/src/test/org/joda/time/TestLocalDate_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDate_Basics.java,305,expected = 23 * expected + COPTIC_UTC.year().getType().hashCode();
True,JodaTime/src/test/org/joda/time/TestLocalDate_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDate_Basics.java,306,expected = 23 * expected + 6;
True,JodaTime/src/test/org/joda/time/TestLocalDate_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDate_Basics.java,307,expected = 23 * expected + COPTIC_UTC.monthOfYear().getType().hashCode();
True,JodaTime/src/test/org/joda/time/TestLocalDate_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDate_Basics.java,308,expected = 23 * expected + 9;
True,JodaTime/src/test/org/joda/time/TestLocalDate_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDate_Basics.java,309,expected = 23 * expected + COPTIC_UTC.dayOfMonth().getType().hashCode();
True,JodaTime/src/test/org/joda/time/TestLocalDate_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDate_Basics.java,310,expected += COPTIC_UTC.hashCode();
True,JodaTime/src/test/org/joda/time/TestLocalDate_Basics.java,JodaTime/src/test/org/joda/time/TestLocalDate_Basics.java,311,"assertEquals(expected, test.hashCode());"
