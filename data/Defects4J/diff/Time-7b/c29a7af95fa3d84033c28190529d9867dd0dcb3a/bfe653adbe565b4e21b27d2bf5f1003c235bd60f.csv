is_addition,old_file_path,new_file_path,line_num,content
True,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,22,import java.util.TreeMap;
True,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,73,"private static void addSymbols(TreeMap map, String[] symbols, Integer[] integers) {"
True,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,74,for (int i=symbols.length; --i>=0; ) {
True,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,75,String symbol = symbols[i];
True,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,76,if (symbol != null) {
True,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,77,"map.put(symbol, integers[i]);"
True,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,82,"private static void addNumerals(TreeMap map, int start, int end, Integer[] integers) {"
True,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,83,for (int i=start; i<=end; i++) {
True,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,84,"map.put(String.valueOf(i).intern(), integers[i]);"
True,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,111,// These map Strings to Integers.
True,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,112,private final TreeMap iParseEras;
True,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,113,private final TreeMap iParseDaysOfWeek;
True,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,114,private final TreeMap iParseMonths;
True,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,139,Integer[] integers = new Integer[13];
True,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,140,for (int i=0; i<13; i++) {
True,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,141,integers[i] = new Integer(i);
True,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,144,iParseEras = new TreeMap(String.CASE_INSENSITIVE_ORDER);
True,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,145,"addSymbols(iParseEras, iEras, integers);"
True,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,146,"if (""en"".equals(locale.getLanguage())) {"
True,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,147,"// Include support for parsing ""BCE"" and ""CE"" if the language is"
True,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,148,// English. At some point Joda-Time will need an independent set of
True,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,149,// localized symbols and not depend on java.text.DateFormatSymbols.
True,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,150,"iParseEras.put(""BCE"", integers[0]);"
True,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,151,"iParseEras.put(""CE"", integers[1]);"
True,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,154,iParseDaysOfWeek = new TreeMap(String.CASE_INSENSITIVE_ORDER);
True,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,155,"addSymbols(iParseDaysOfWeek, iDaysOfWeek, integers);"
True,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,156,"addSymbols(iParseDaysOfWeek, iShortDaysOfWeek, integers);"
True,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,157,"addNumerals(iParseDaysOfWeek, 1, 7, integers);"
True,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,159,iParseMonths = new TreeMap(String.CASE_INSENSITIVE_ORDER);
True,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,160,"addSymbols(iParseMonths, iMonths, integers);"
True,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,161,"addSymbols(iParseMonths, iShortMonths, integers);"
True,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,162,"addNumerals(iParseMonths, 1, 12, integers);"
False,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,131,tring[] eras = iEras;
False,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,132,or (int i=eras.length; --i>=0; ) {
False,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,133,f (eras[i].equalsIgnoreCase(text)) {
False,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,134,eturn i;
True,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,177,Integer era = (Integer) iParseEras.get(text);
True,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,178,if (era != null) {
True,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,179,return era.intValue();
False,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,153,tring[] months = iMonths;
False,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,154,or (int i=months.length; --i>=1; ) {
False,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,155,f (months[i].equalsIgnoreCase(text)) {
False,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,156,eturn i;
False,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,159,onths = iShortMonths;
False,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,160,or (int i=months.length; --i>=1; ) {
False,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,161,f (months[i].equalsIgnoreCase(text)) {
False,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,162,eturn i;
False,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,165,ry {
False,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,166,nt month = Integer.parseInt(text);
False,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,167,f (month >= 1 && month <= 12) {
False,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,168,eturn month;
False,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,170, catch (NumberFormatException ex) {
False,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,171,/ ignore
True,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,197,Integer month = (Integer) iParseMonths.get(text);
True,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,198,if (month != null) {
True,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,199,return month.intValue();
False,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,193,tring[] daysOfWeek = iDaysOfWeek;
False,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,194,or (int i=daysOfWeek.length; --i>=1; ) {
False,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,195,f (daysOfWeek[i].equalsIgnoreCase(text)) {
False,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,196,eturn i;
False,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,199,aysOfWeek = iShortDaysOfWeek;
False,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,200,or (int i=daysOfWeek.length; --i>=1; ) {
False,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,201,f (daysOfWeek[i].equalsIgnoreCase(text)) {
False,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,202,eturn i;
False,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,205,ry {
False,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,206,nt day = Integer.parseInt(text);
False,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,207,f (day >= 1 && day <= 7) {
False,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,208,eturn day;
False,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,210, catch (NumberFormatException ex) {
False,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,211,/ ignore
True,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,221,Integer day = (Integer) iParseDaysOfWeek.get(text);
True,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,222,if (day != null) {
True,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,JodaTime/src/java/org/joda/time/chrono/GJLocaleSymbols.java,223,return day.intValue();
False,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,182,hronology chrono = Chronology.getGJ();
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,182,Chronology chrono = Chronology.getGJUTC();
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,191,"assertEquals(dt, f.parseDateTime(""2005-10 CE""));"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,195,"assertEquals(dt, f.parseDateTime(""2005-10 BCE""));"
