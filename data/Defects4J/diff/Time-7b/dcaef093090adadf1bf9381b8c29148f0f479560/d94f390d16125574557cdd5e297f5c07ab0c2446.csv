is_addition,old_file_path,new_file_path,line_num,content
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,218,* Constructs an instance from datetime field values
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,219,* using <code>ISOChronology</code> in the default time zone.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,221,* @param year  the year
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,222,* @param monthOfYear  the month of the year
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,223,* @param dayOfMonth  the day of the month
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,224,* @param hourOfDay  the hour of the day
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,225,* @param minuteOfHour  the minute of the hour
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,227,public DateTime(
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,228,"int year,"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,229,"int monthOfYear,"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,230,"int dayOfMonth,"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,231,"int hourOfDay,"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,232,int minuteOfHour) {
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,233,"super(year, monthOfYear, dayOfMonth, hourOfDay, minuteOfHour, 0, 0);"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,237,* Constructs an instance from datetime field values
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,238,* using <code>ISOChronology</code> in the specified time zone.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,239,* <p>
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,240,"* If the specified time zone is null, the default zone is used."
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,242,* @param year  the year
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,243,* @param monthOfYear  the month of the year
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,244,* @param dayOfMonth  the day of the month
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,245,* @param hourOfDay  the hour of the day
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,246,* @param minuteOfHour  the minute of the hour
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,247,"* @param zone  the time zone, null means default time zone"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,249,public DateTime(
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,250,"int year,"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,251,"int monthOfYear,"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,252,"int dayOfMonth,"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,253,"int hourOfDay,"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,254,"int minuteOfHour,"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,255,DateTimeZone zone) {
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,256,"super(year, monthOfYear, dayOfMonth,"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,257,"hourOfDay, minuteOfHour, 0, 0, zone);"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,261,* Constructs an instance from datetime field values
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,262,* using the specified chronology.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,263,* <p>
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,264,"* If the chronology is null, <code>ISOChronology</code>"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,265,* in the default time zone is used.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,267,* @param year  the year
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,268,* @param monthOfYear  the month of the year
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,269,* @param dayOfMonth  the day of the month
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,270,* @param hourOfDay  the hour of the day
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,271,* @param minuteOfHour  the minute of the hour
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,272,"* @param chronology  the chronology, null means ISOChronology in default zone"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,274,public DateTime(
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,275,"int year,"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,276,"int monthOfYear,"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,277,"int dayOfMonth,"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,278,"int hourOfDay,"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,279,"int minuteOfHour,"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,280,Chronology chronology) {
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,281,"super(year, monthOfYear, dayOfMonth,"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,282,"hourOfDay, minuteOfHour, 0, 0, chronology);"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,287,* Constructs an instance from datetime field values
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,288,* using <code>ISOChronology</code> in the default time zone.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,290,* @param year  the year
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,291,* @param monthOfYear  the month of the year
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,292,* @param dayOfMonth  the day of the month
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,293,* @param hourOfDay  the hour of the day
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,294,* @param minuteOfHour  the minute of the hour
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,295,* @param secondOfMinute  the second of the minute
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,297,public DateTime(
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,298,"int year,"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,299,"int monthOfYear,"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,300,"int dayOfMonth,"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,301,"int hourOfDay,"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,302,"int minuteOfHour,"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,303,int secondOfMinute) {
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,304,"super(year, monthOfYear, dayOfMonth, hourOfDay, minuteOfHour, secondOfMinute, 0);"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,308,* Constructs an instance from datetime field values
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,309,* using <code>ISOChronology</code> in the specified time zone.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,310,* <p>
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,311,"* If the specified time zone is null, the default zone is used."
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,313,* @param year  the year
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,314,* @param monthOfYear  the month of the year
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,315,* @param dayOfMonth  the day of the month
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,316,* @param hourOfDay  the hour of the day
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,317,* @param minuteOfHour  the minute of the hour
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,318,* @param secondOfMinute  the second of the minute
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,319,"* @param zone  the time zone, null means default time zone"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,321,public DateTime(
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,322,"int year,"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,323,"int monthOfYear,"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,324,"int dayOfMonth,"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,325,"int hourOfDay,"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,326,"int minuteOfHour,"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,327,"int secondOfMinute,"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,328,DateTimeZone zone) {
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,329,"super(year, monthOfYear, dayOfMonth,"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,330,"hourOfDay, minuteOfHour, secondOfMinute, 0, zone);"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,334,* Constructs an instance from datetime field values
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,335,* using the specified chronology.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,336,* <p>
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,337,"* If the chronology is null, <code>ISOChronology</code>"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,338,* in the default time zone is used.
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,340,* @param year  the year
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,341,* @param monthOfYear  the month of the year
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,342,* @param dayOfMonth  the day of the month
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,343,* @param hourOfDay  the hour of the day
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,344,* @param minuteOfHour  the minute of the hour
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,345,* @param secondOfMinute  the second of the minute
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,346,"* @param chronology  the chronology, null means ISOChronology in default zone"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,348,public DateTime(
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,349,"int year,"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,350,"int monthOfYear,"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,351,"int dayOfMonth,"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,352,"int hourOfDay,"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,353,"int minuteOfHour,"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,354,"int secondOfMinute,"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,355,Chronology chronology) {
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,356,"super(year, monthOfYear, dayOfMonth,"
True,JodaTime/src/java/org/joda/time/DateTime.java,JodaTime/src/java/org/joda/time/DateTime.java,357,"hourOfDay, minuteOfHour, secondOfMinute, 0, chronology);"
True,JodaTime/src/test/org/joda/time/TestDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestDateTime_Constructors.java,497,"* Test constructor (int, int, int, int, int)"
True,JodaTime/src/test/org/joda/time/TestDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestDateTime_Constructors.java,499,public void testConstructor_int_int_int_int_int() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestDateTime_Constructors.java,500,"DateTime test = new DateTime(2002, 6, 9, 1, 0);  // +01:00"
True,JodaTime/src/test/org/joda/time/TestDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestDateTime_Constructors.java,501,"assertEquals(ISOChronology.getInstance(), test.getChronology());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestDateTime_Constructors.java,502,"assertEquals(LONDON, test.getZone());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestDateTime_Constructors.java,503,"assertEquals(TEST_TIME_NOW, test.getMillis());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestDateTime_Constructors.java,507,"* Test constructor (int, int, int, int, int, DateTimeZone)"
True,JodaTime/src/test/org/joda/time/TestDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestDateTime_Constructors.java,509,public void testConstructor_int_int_int_int_int_DateTimeZone() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestDateTime_Constructors.java,510,"DateTime test = new DateTime(2002, 6, 9, 2, 0, PARIS);  // +02:00"
True,JodaTime/src/test/org/joda/time/TestDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestDateTime_Constructors.java,511,"assertEquals(ISOChronology.getInstance(PARIS), test.getChronology());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestDateTime_Constructors.java,512,"assertEquals(TEST_TIME_NOW, test.getMillis());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestDateTime_Constructors.java,516,"* Test constructor (int, int, int, int, int, DateTimeZone=null)"
True,JodaTime/src/test/org/joda/time/TestDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestDateTime_Constructors.java,518,public void testConstructor_int_int_int_int_int_nullDateTimeZone() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestDateTime_Constructors.java,519,"DateTime test = new DateTime(2002, 6, 9, 1, 0, (DateTimeZone) null);  // +01:00"
True,JodaTime/src/test/org/joda/time/TestDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestDateTime_Constructors.java,520,"assertEquals(ISOChronology.getInstance(), test.getChronology());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestDateTime_Constructors.java,521,"assertEquals(TEST_TIME_NOW, test.getMillis());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestDateTime_Constructors.java,525,"* Test constructor (int, int, int, int, int, Chronology)"
True,JodaTime/src/test/org/joda/time/TestDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestDateTime_Constructors.java,527,public void testConstructor_int_int_int_int_int_Chronology() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestDateTime_Constructors.java,528,"DateTime test = new DateTime(2002, 6, 9, 1, 0, GregorianChronology.getInstance());  // +01:00"
True,JodaTime/src/test/org/joda/time/TestDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestDateTime_Constructors.java,529,"assertEquals(GregorianChronology.getInstance(), test.getChronology());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestDateTime_Constructors.java,530,"assertEquals(TEST_TIME_NOW, test.getMillis());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestDateTime_Constructors.java,534,"* Test constructor (int, int, int, int, int, Chronology=null)"
True,JodaTime/src/test/org/joda/time/TestDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestDateTime_Constructors.java,536,public void testConstructor_int_int_int_int_int_nullChronology() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestDateTime_Constructors.java,537,"DateTime test = new DateTime(2002, 6, 9, 1, 0, (Chronology) null);  // +01:00"
True,JodaTime/src/test/org/joda/time/TestDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestDateTime_Constructors.java,538,"assertEquals(ISOChronology.getInstance(), test.getChronology());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestDateTime_Constructors.java,539,"assertEquals(TEST_TIME_NOW, test.getMillis());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestDateTime_Constructors.java,544,"* Test constructor (int, int, int, int, int, int)"
True,JodaTime/src/test/org/joda/time/TestDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestDateTime_Constructors.java,546,public void testConstructor_int_int_int_int_int_int() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestDateTime_Constructors.java,547,"DateTime test = new DateTime(2002, 6, 9, 1, 0, 0);  // +01:00"
True,JodaTime/src/test/org/joda/time/TestDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestDateTime_Constructors.java,548,"assertEquals(ISOChronology.getInstance(), test.getChronology());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestDateTime_Constructors.java,549,"assertEquals(LONDON, test.getZone());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestDateTime_Constructors.java,550,"assertEquals(TEST_TIME_NOW, test.getMillis());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestDateTime_Constructors.java,554,"* Test constructor (int, int, int, int, int, int, DateTimeZone)"
True,JodaTime/src/test/org/joda/time/TestDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestDateTime_Constructors.java,556,public void testConstructor_int_int_int_int_int_int_DateTimeZone() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestDateTime_Constructors.java,557,"DateTime test = new DateTime(2002, 6, 9, 2, 0, 0, PARIS);  // +02:00"
True,JodaTime/src/test/org/joda/time/TestDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestDateTime_Constructors.java,558,"assertEquals(ISOChronology.getInstance(PARIS), test.getChronology());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestDateTime_Constructors.java,559,"assertEquals(TEST_TIME_NOW, test.getMillis());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestDateTime_Constructors.java,563,"* Test constructor (int, int, int, int, int, int, DateTimeZone=null)"
True,JodaTime/src/test/org/joda/time/TestDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestDateTime_Constructors.java,565,public void testConstructor_int_int_int_int_int_int_nullDateTimeZone() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestDateTime_Constructors.java,566,"DateTime test = new DateTime(2002, 6, 9, 1, 0, 0, (DateTimeZone) null);  // +01:00"
True,JodaTime/src/test/org/joda/time/TestDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestDateTime_Constructors.java,567,"assertEquals(ISOChronology.getInstance(), test.getChronology());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestDateTime_Constructors.java,568,"assertEquals(TEST_TIME_NOW, test.getMillis());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestDateTime_Constructors.java,572,"* Test constructor (int, int, int, int, int, int, Chronology)"
True,JodaTime/src/test/org/joda/time/TestDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestDateTime_Constructors.java,574,public void testConstructor_int_int_int_int_int_int_Chronology() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestDateTime_Constructors.java,575,"DateTime test = new DateTime(2002, 6, 9, 1, 0, 0, GregorianChronology.getInstance());  // +01:00"
True,JodaTime/src/test/org/joda/time/TestDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestDateTime_Constructors.java,576,"assertEquals(GregorianChronology.getInstance(), test.getChronology());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestDateTime_Constructors.java,577,"assertEquals(TEST_TIME_NOW, test.getMillis());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestDateTime_Constructors.java,581,"* Test constructor (int, int, int, int, int, int, Chronology=null)"
True,JodaTime/src/test/org/joda/time/TestDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestDateTime_Constructors.java,583,public void testConstructor_int_int_int_int_int_int_nullChronology() throws Throwable {
True,JodaTime/src/test/org/joda/time/TestDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestDateTime_Constructors.java,584,"DateTime test = new DateTime(2002, 6, 9, 1, 0, 0, (Chronology) null);  // +01:00"
True,JodaTime/src/test/org/joda/time/TestDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestDateTime_Constructors.java,585,"assertEquals(ISOChronology.getInstance(), test.getChronology());"
True,JodaTime/src/test/org/joda/time/TestDateTime_Constructors.java,JodaTime/src/test/org/joda/time/TestDateTime_Constructors.java,586,"assertEquals(TEST_TIME_NOW, test.getMillis());"
