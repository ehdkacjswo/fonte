is_addition,old_file_path,new_file_path,line_num,content
True,JodaTime/src/java/org/joda/time/AbstractDuration.java,JodaTime/src/java/org/joda/time/AbstractDuration.java,111,* @param duration duration to copy
True,JodaTime/src/java/org/joda/time/AbstractDuration.java,JodaTime/src/java/org/joda/time/AbstractDuration.java,112,* @throws IllegalArgumentException if duration is null
True,JodaTime/src/java/org/joda/time/AbstractDuration.java,JodaTime/src/java/org/joda/time/AbstractDuration.java,117,super();
True,JodaTime/src/java/org/joda/time/AbstractDuration.java,JodaTime/src/java/org/joda/time/AbstractDuration.java,123,* Copies another duration to this one.
True,JodaTime/src/java/org/joda/time/AbstractDuration.java,JodaTime/src/java/org/joda/time/AbstractDuration.java,125,* @param duration duration to convert
True,JodaTime/src/java/org/joda/time/AbstractDuration.java,JodaTime/src/java/org/joda/time/AbstractDuration.java,126,* @throws IllegalArgumentException if duration is null
True,JodaTime/src/java/org/joda/time/AbstractDuration.java,JodaTime/src/java/org/joda/time/AbstractDuration.java,127,* @throws UnsupportedOperationException if an unsupported field's value is
True,JodaTime/src/java/org/joda/time/AbstractDuration.java,JodaTime/src/java/org/joda/time/AbstractDuration.java,128,* non-zero
True,JodaTime/src/java/org/joda/time/AbstractDuration.java,JodaTime/src/java/org/joda/time/AbstractDuration.java,130,public AbstractDuration(Object duration) {
True,JodaTime/src/java/org/joda/time/AbstractDuration.java,JodaTime/src/java/org/joda/time/AbstractDuration.java,131,super();
True,JodaTime/src/java/org/joda/time/AbstractDuration.java,JodaTime/src/java/org/joda/time/AbstractDuration.java,132,if (duration instanceof ReadableDuration) {
True,JodaTime/src/java/org/joda/time/AbstractDuration.java,JodaTime/src/java/org/joda/time/AbstractDuration.java,133,// Only call a private method
True,JodaTime/src/java/org/joda/time/AbstractDuration.java,JodaTime/src/java/org/joda/time/AbstractDuration.java,134,ReadableDuration rd = (ReadableDuration) duration;
True,JodaTime/src/java/org/joda/time/AbstractDuration.java,JodaTime/src/java/org/joda/time/AbstractDuration.java,135,"setDuration(iType = rd.getDurationType(), rd);"
True,JodaTime/src/java/org/joda/time/AbstractDuration.java,JodaTime/src/java/org/joda/time/AbstractDuration.java,136,} else {
True,JodaTime/src/java/org/joda/time/AbstractDuration.java,JodaTime/src/java/org/joda/time/AbstractDuration.java,137,DurationConverter converter = ConverterManager.getInstance().getDurationConverter(duration);
True,JodaTime/src/java/org/joda/time/AbstractDuration.java,JodaTime/src/java/org/joda/time/AbstractDuration.java,138,DurationType type = converter.getDurationType(duration);
True,JodaTime/src/java/org/joda/time/AbstractDuration.java,JodaTime/src/java/org/joda/time/AbstractDuration.java,139,if (type.isPrecise() && converter.isPrecise(duration)) {
True,JodaTime/src/java/org/joda/time/AbstractDuration.java,JodaTime/src/java/org/joda/time/AbstractDuration.java,140,// Only call a private method
True,JodaTime/src/java/org/joda/time/AbstractDuration.java,JodaTime/src/java/org/joda/time/AbstractDuration.java,141,"setTotalMillis(iType = type, converter.getDurationMillis(duration));"
True,JodaTime/src/java/org/joda/time/AbstractDuration.java,JodaTime/src/java/org/joda/time/AbstractDuration.java,142,} else if (this instanceof ReadWritableDuration) {
True,JodaTime/src/java/org/joda/time/AbstractDuration.java,JodaTime/src/java/org/joda/time/AbstractDuration.java,143,iType = type;
True,JodaTime/src/java/org/joda/time/AbstractDuration.java,JodaTime/src/java/org/joda/time/AbstractDuration.java,144,"converter.setInto((ReadWritableDuration) this, duration);"
True,JodaTime/src/java/org/joda/time/AbstractDuration.java,JodaTime/src/java/org/joda/time/AbstractDuration.java,145,} else {
True,JodaTime/src/java/org/joda/time/AbstractDuration.java,JodaTime/src/java/org/joda/time/AbstractDuration.java,146,// Only call a private method
True,JodaTime/src/java/org/joda/time/AbstractDuration.java,JodaTime/src/java/org/joda/time/AbstractDuration.java,147,"setDuration(iType = type, new MutableDuration(type, duration));"
True,JodaTime/src/java/org/joda/time/AbstractDuration.java,JodaTime/src/java/org/joda/time/AbstractDuration.java,156,* @throws IllegalArgumentException if type is null
False,JodaTime/src/java/org/joda/time/AbstractDuration.java,JodaTime/src/java/org/joda/time/AbstractDuration.java,125,Type = type;
True,JodaTime/src/java/org/joda/time/AbstractDuration.java,JodaTime/src/java/org/joda/time/AbstractDuration.java,159,super();
True,JodaTime/src/java/org/joda/time/AbstractDuration.java,JodaTime/src/java/org/joda/time/AbstractDuration.java,160,// Only call a private method
True,JodaTime/src/java/org/joda/time/AbstractDuration.java,JodaTime/src/java/org/joda/time/AbstractDuration.java,161,"setTotalMillis(iType = type, 0);"
True,JodaTime/src/java/org/joda/time/AbstractDuration.java,JodaTime/src/java/org/joda/time/AbstractDuration.java,169,* @throws IllegalArgumentException if type or duration is null
True,JodaTime/src/java/org/joda/time/AbstractDuration.java,JodaTime/src/java/org/joda/time/AbstractDuration.java,174,super();
True,JodaTime/src/java/org/joda/time/AbstractDuration.java,JodaTime/src/java/org/joda/time/AbstractDuration.java,184,* @throws IllegalArgumentException if type or duration is null
True,JodaTime/src/java/org/joda/time/AbstractDuration.java,JodaTime/src/java/org/joda/time/AbstractDuration.java,189,super();
True,JodaTime/src/java/org/joda/time/AbstractDuration.java,JodaTime/src/java/org/joda/time/AbstractDuration.java,198,} else if (this instanceof ReadWritableDuration) {
True,JodaTime/src/java/org/joda/time/AbstractDuration.java,JodaTime/src/java/org/joda/time/AbstractDuration.java,199,iType = type;
True,JodaTime/src/java/org/joda/time/AbstractDuration.java,JodaTime/src/java/org/joda/time/AbstractDuration.java,200,"converter.setInto((ReadWritableDuration) this, duration);"
True,JodaTime/src/java/org/joda/time/AbstractDuration.java,JodaTime/src/java/org/joda/time/AbstractDuration.java,228,* @throws IllegalArgumentException if type is null
True,JodaTime/src/java/org/joda/time/AbstractDuration.java,JodaTime/src/java/org/joda/time/AbstractDuration.java,235,super();
True,JodaTime/src/java/org/joda/time/AbstractDuration.java,JodaTime/src/java/org/joda/time/AbstractDuration.java,246,* @throws IllegalArgumentException if type is null
True,JodaTime/src/java/org/joda/time/AbstractDuration.java,JodaTime/src/java/org/joda/time/AbstractDuration.java,249,super();
True,JodaTime/src/java/org/joda/time/AbstractDuration.java,JodaTime/src/java/org/joda/time/AbstractDuration.java,260,* @throws IllegalArgumentException if type is null
True,JodaTime/src/java/org/joda/time/AbstractDuration.java,JodaTime/src/java/org/joda/time/AbstractDuration.java,264,super();
True,JodaTime/src/java/org/joda/time/AbstractDuration.java,JodaTime/src/java/org/joda/time/AbstractDuration.java,276,* @throws IllegalArgumentException if type is null
True,JodaTime/src/java/org/joda/time/AbstractDuration.java,JodaTime/src/java/org/joda/time/AbstractDuration.java,280,super();
True,JodaTime/src/java/org/joda/time/AbstractDuration.java,JodaTime/src/java/org/joda/time/AbstractDuration.java,830,if (type == null) {
True,JodaTime/src/java/org/joda/time/AbstractDuration.java,JodaTime/src/java/org/joda/time/AbstractDuration.java,831,"throw new IllegalArgumentException(""The type must not be null"");"
True,JodaTime/src/java/org/joda/time/AbstractDuration.java,JodaTime/src/java/org/joda/time/AbstractDuration.java,892,if (type == null) {
True,JodaTime/src/java/org/joda/time/AbstractDuration.java,JodaTime/src/java/org/joda/time/AbstractDuration.java,893,"throw new IllegalArgumentException(""The type must not be null"");"
True,JodaTime/src/java/org/joda/time/AbstractDuration.java,JodaTime/src/java/org/joda/time/AbstractDuration.java,984,if (type == null) {
True,JodaTime/src/java/org/joda/time/AbstractDuration.java,JodaTime/src/java/org/joda/time/AbstractDuration.java,985,"throw new IllegalArgumentException(""The type must not be null"");"
True,JodaTime/src/java/org/joda/time/Duration.java,JodaTime/src/java/org/joda/time/Duration.java,80,* @param duration duration to copy
True,JodaTime/src/java/org/joda/time/Duration.java,JodaTime/src/java/org/joda/time/Duration.java,81,* @throws IllegalArgumentException if duration is null
True,JodaTime/src/java/org/joda/time/Duration.java,JodaTime/src/java/org/joda/time/Duration.java,90,* Copies another duration to this one.
True,JodaTime/src/java/org/joda/time/Duration.java,JodaTime/src/java/org/joda/time/Duration.java,92,* @param duration duration to convert
True,JodaTime/src/java/org/joda/time/Duration.java,JodaTime/src/java/org/joda/time/Duration.java,93,* @throws IllegalArgumentException if duration is null
True,JodaTime/src/java/org/joda/time/Duration.java,JodaTime/src/java/org/joda/time/Duration.java,94,* @throws UnsupportedOperationException if an unsupported field's value is
True,JodaTime/src/java/org/joda/time/Duration.java,JodaTime/src/java/org/joda/time/Duration.java,95,* non-zero
True,JodaTime/src/java/org/joda/time/Duration.java,JodaTime/src/java/org/joda/time/Duration.java,97,public Duration(Object duration) {
True,JodaTime/src/java/org/joda/time/Duration.java,JodaTime/src/java/org/joda/time/Duration.java,98,super(duration);
True,JodaTime/src/java/org/joda/time/Duration.java,JodaTime/src/java/org/joda/time/Duration.java,105,* @throws IllegalArgumentException if type is null
True,JodaTime/src/java/org/joda/time/Duration.java,JodaTime/src/java/org/joda/time/Duration.java,116,* @throws IllegalArgumentException if type or duration is null
True,JodaTime/src/java/org/joda/time/Duration.java,JodaTime/src/java/org/joda/time/Duration.java,129,* @throws IllegalArgumentException if type or duration is null
True,JodaTime/src/java/org/joda/time/Duration.java,JodaTime/src/java/org/joda/time/Duration.java,157,* @throws IllegalArgumentException if type is null
True,JodaTime/src/java/org/joda/time/Duration.java,JodaTime/src/java/org/joda/time/Duration.java,173,* @throws IllegalArgumentException if type is null
True,JodaTime/src/java/org/joda/time/Duration.java,JodaTime/src/java/org/joda/time/Duration.java,185,* @throws IllegalArgumentException if type is null
True,JodaTime/src/java/org/joda/time/Duration.java,JodaTime/src/java/org/joda/time/Duration.java,199,* @throws IllegalArgumentException if type is null
True,JodaTime/src/java/org/joda/time/MutableDuration.java,JodaTime/src/java/org/joda/time/MutableDuration.java,80,* @param duration duration to copy
True,JodaTime/src/java/org/joda/time/MutableDuration.java,JodaTime/src/java/org/joda/time/MutableDuration.java,81,* @throws IllegalArgumentException if duration is null
True,JodaTime/src/java/org/joda/time/MutableDuration.java,JodaTime/src/java/org/joda/time/MutableDuration.java,90,* Copies another duration to this one.
True,JodaTime/src/java/org/joda/time/MutableDuration.java,JodaTime/src/java/org/joda/time/MutableDuration.java,92,* @param duration duration to convert
True,JodaTime/src/java/org/joda/time/MutableDuration.java,JodaTime/src/java/org/joda/time/MutableDuration.java,93,* @throws IllegalArgumentException if duration is null
True,JodaTime/src/java/org/joda/time/MutableDuration.java,JodaTime/src/java/org/joda/time/MutableDuration.java,94,* @throws UnsupportedOperationException if an unsupported field's value is
True,JodaTime/src/java/org/joda/time/MutableDuration.java,JodaTime/src/java/org/joda/time/MutableDuration.java,95,* non-zero
True,JodaTime/src/java/org/joda/time/MutableDuration.java,JodaTime/src/java/org/joda/time/MutableDuration.java,97,public MutableDuration(Object duration) {
True,JodaTime/src/java/org/joda/time/MutableDuration.java,JodaTime/src/java/org/joda/time/MutableDuration.java,98,super(duration);
True,JodaTime/src/java/org/joda/time/MutableDuration.java,JodaTime/src/java/org/joda/time/MutableDuration.java,105,* @throws IllegalArgumentException if type is null
True,JodaTime/src/java/org/joda/time/MutableDuration.java,JodaTime/src/java/org/joda/time/MutableDuration.java,116,* @throws IllegalArgumentException if type or duration is null
True,JodaTime/src/java/org/joda/time/MutableDuration.java,JodaTime/src/java/org/joda/time/MutableDuration.java,129,* @throws IllegalArgumentException if type or duration is null
False,JodaTime/src/java/org/joda/time/MutableDuration.java,JodaTime/src/java/org/joda/time/MutableDuration.java,117,uper(type);
False,JodaTime/src/java/org/joda/time/MutableDuration.java,JodaTime/src/java/org/joda/time/MutableDuration.java,118,urationConverter converter = ConverterManager.getInstance().getDurationConverter(duration);
False,JodaTime/src/java/org/joda/time/MutableDuration.java,JodaTime/src/java/org/joda/time/MutableDuration.java,119,"onverter.setInto(this, duration);"
True,JodaTime/src/java/org/joda/time/MutableDuration.java,JodaTime/src/java/org/joda/time/MutableDuration.java,134,"super(type, duration);"
True,JodaTime/src/java/org/joda/time/MutableDuration.java,JodaTime/src/java/org/joda/time/MutableDuration.java,157,* @throws IllegalArgumentException if type is null
True,JodaTime/src/java/org/joda/time/MutableDuration.java,JodaTime/src/java/org/joda/time/MutableDuration.java,173,* @throws IllegalArgumentException if type is null
True,JodaTime/src/java/org/joda/time/MutableDuration.java,JodaTime/src/java/org/joda/time/MutableDuration.java,185,* @throws IllegalArgumentException if type is null
True,JodaTime/src/java/org/joda/time/MutableDuration.java,JodaTime/src/java/org/joda/time/MutableDuration.java,199,* @throws IllegalArgumentException if type or duration is null
