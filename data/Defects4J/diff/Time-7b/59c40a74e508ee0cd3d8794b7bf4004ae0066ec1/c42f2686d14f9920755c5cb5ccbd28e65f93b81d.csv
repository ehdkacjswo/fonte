is_addition,old_file_path,new_file_path,line_num,content
True,JodaTime/src/test/org/joda/time/format/TestAll.java,JodaTime/src/test/org/joda/time/format/TestAll.java,76,suite.addTest(TestISOPeriodFormat.suite());
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,2,"* Joda Software License, Version 1.0"
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,5,* Copyright (c) 2001-2004 Stephen Colebourne.
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,6,* All rights reserved.
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,8,"* Redistribution and use in source and binary forms, with or without"
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,9,"* modification, are permitted provided that the following conditions"
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,10,* are met:
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,12,* 1. Redistributions of source code must retain the above copyright
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,13,"*    notice, this list of conditions and the following disclaimer."
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,15,* 2. Redistributions in binary form must reproduce the above copyright
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,16,"*    notice, this list of conditions and the following disclaimer in"
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,17,*    the documentation and/or other materials provided with the
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,18,*    distribution.
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,20,"* 3. The end-user documentation included with the redistribution,"
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,21,"*    if any, must include the following acknowledgment:"
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,22,"*       ""This product includes software developed by the"
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,23,"*        Joda project (http://www.joda.org/)."""
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,24,"*    Alternately, this acknowledgment may appear in the software itself,"
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,25,*    if and wherever such third-party acknowledgments normally appear.
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,27,"* 4. The name ""Joda"" must not be used to endorse or promote products"
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,28,*    derived from this software without prior written permission. For
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,29,"*    written permission, please contact licence@joda.org."
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,31,"* 5. Products derived from this software may not be called ""Joda"","
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,32,"*    nor may ""Joda"" appear in their name, without prior written"
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,33,*    permission of the Joda project.
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,35,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,36,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,37,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,38,* DISCLAIMED.  IN NO EVENT SHALL THE JODA AUTHORS OR THE PROJECT
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,39,"* CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,40,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,41,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,42,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,43,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,44,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,45,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,46,* SUCH DAMAGE.
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,49,* This software consists of voluntary contributions made by many
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,50,* individuals on behalf of the Joda project and was originally
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,51,* created by Stephen Colebourne <scolebourne@joda.org>. For more
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,52,"* information on the Joda project, please see <http://www.joda.org/>."
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,54,package org.joda.time.format;
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,56,import java.util.Locale;
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,57,import java.util.TimeZone;
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,59,import junit.framework.TestCase;
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,60,import junit.framework.TestSuite;
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,62,import org.joda.time.DateTimeConstants;
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,63,import org.joda.time.DateTimeUtils;
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,64,import org.joda.time.DateTimeZone;
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,65,import org.joda.time.Period;
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,66,import org.joda.time.PeriodType;
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,69,* This class is a Junit unit test for PeriodFormatterBuilder.
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,71,* @author Stephen Colebourne
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,73,public class TestISOPeriodFormat extends TestCase {
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,75,"private static final Period PERIOD = new Period(1, 2, 3, 4, 5, 6, 7, 8);"
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,76,"private static final Period EMPTY_PERIOD = new Period(0, 0, 0, 0, 0, 0, 0, 0);"
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,77,"private static final Period YEAR_DAY_PERIOD = new Period(1, 0, 0, 4, 5, 6, 7, 8, PeriodType.getYearDayType());"
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,78,"private static final Period EMPTY_YEAR_DAY_PERIOD = new Period(0, 0, 0, 0, 0, 0, 0, 0, PeriodType.getYearDayType());"
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,79,"private static final Period TIME_PERIOD = new Period(0, 0, 0, 0, 5, 6, 7, 8);"
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,80,"private static final Period DATE_PERIOD = new Period(1, 2, 3, 4, 0, 0, 0, 0);"
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,82,"private static final DateTimeZone PARIS = DateTimeZone.getInstance(""Europe/Paris"");"
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,83,"private static final DateTimeZone LONDON = DateTimeZone.getInstance(""Europe/London"");"
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,84,"private static final DateTimeZone TOKYO = DateTimeZone.getInstance(""Asia/Tokyo"");"
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,86,long y2002days = 365 + 365 + 366 + 365 + 365 + 365 + 366 + 365 + 365 + 365 +
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,87,366 + 365 + 365 + 365 + 366 + 365 + 365 + 365 + 366 + 365 +
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,88,365 + 365 + 366 + 365 + 365 + 365 + 366 + 365 + 365 + 365 +
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,89,366 + 365;
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,90,// 2002-06-09
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,91,private long TEST_TIME_NOW =
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,92,(y2002days + 31L + 28L + 31L + 30L + 31L + 9L -1L) * DateTimeConstants.MILLIS_PER_DAY;
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,94,private DateTimeZone originalDateTimeZone = null;
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,95,private TimeZone originalTimeZone = null;
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,96,private Locale originalLocale = null;
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,98,public static void main(String[] args) {
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,99,junit.textui.TestRunner.run(suite());
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,102,public static TestSuite suite() {
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,103,return new TestSuite(TestISOPeriodFormat.class);
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,106,public TestISOPeriodFormat(String name) {
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,107,super(name);
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,110,protected void setUp() throws Exception {
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,111,DateTimeUtils.setCurrentMillisFixed(TEST_TIME_NOW);
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,112,originalDateTimeZone = DateTimeZone.getDefault();
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,113,originalTimeZone = TimeZone.getDefault();
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,114,originalLocale = Locale.getDefault();
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,115,DateTimeZone.setDefault(LONDON);
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,116,"TimeZone.setDefault(TimeZone.getTimeZone(""Europe/London""));"
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,117,Locale.setDefault(Locale.UK);
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,120,protected void tearDown() throws Exception {
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,121,DateTimeUtils.setCurrentMillisSystem();
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,122,DateTimeZone.setDefault(originalDateTimeZone);
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,123,TimeZone.setDefault(originalTimeZone);
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,124,Locale.setDefault(originalLocale);
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,125,originalDateTimeZone = null;
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,126,originalTimeZone = null;
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,127,originalLocale = null;
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,131,public void testFormatStandard() {
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,132,"assertEquals(""P1Y2M3W4DT5H6M7.008S"", ISOPeriodFormat.getInstance().standard().print(PERIOD));"
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,133,"assertEquals(""PT0S"", ISOPeriodFormat.getInstance().standard().print(EMPTY_PERIOD));"
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,134,"assertEquals(""P1Y4DT5H6M7.008S"", ISOPeriodFormat.getInstance().standard().print(YEAR_DAY_PERIOD));"
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,135,"assertEquals(""PT0S"", ISOPeriodFormat.getInstance().standard().print(EMPTY_YEAR_DAY_PERIOD));"
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,136,"assertEquals(""P1Y2M3W4D"", ISOPeriodFormat.getInstance().standard().print(DATE_PERIOD));"
True,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,JodaTime/src/test/org/joda/time/format/TestISOPeriodFormat.java,137,"assertEquals(""PT5H6M7.008S"", ISOPeriodFormat.getInstance().standard().print(TIME_PERIOD));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,77,"rivate static final Period EMPTY_YEAR_DAY_PERIOD = new Period(1, 0, 0, 4, 5, 6, 7, 8, PeriodType.getYearDayType());"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,78,"rivate static final Period YEAR_DAY_PERIOD = new Period(0, 0, 0, 0, 0, 0, 0, 0, PeriodType.getYearDayType());"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,77,"private static final Period YEAR_DAY_PERIOD = new Period(1, 0, 0, 4, 5, 6, 7, 8, PeriodType.getYearDayType());"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,78,"private static final Period EMPTY_YEAR_DAY_PERIOD = new Period(0, 0, 0, 0, 0, 0, 0, 0, PeriodType.getYearDayType());"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,422,"ssertEquals(""---0"", f.print(YEAR_DAY_PERIOD));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,423,"ssertEquals(4, f.calculatePrintedLength(YEAR_DAY_PERIOD));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,424,"ssertEquals(1, f.countFieldsToPrint(YEAR_DAY_PERIOD));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,422,"assertEquals(""---0"", f.print(EMPTY_YEAR_DAY_PERIOD));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,423,"assertEquals(4, f.calculatePrintedLength(EMPTY_YEAR_DAY_PERIOD));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,424,"assertEquals(1, f.countFieldsToPrint(EMPTY_YEAR_DAY_PERIOD));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,426,"ssertEquals(""1---4"", f.print(EMPTY_YEAR_DAY_PERIOD));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,427,"ssertEquals(5, f.calculatePrintedLength(EMPTY_YEAR_DAY_PERIOD));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,428,"ssertEquals(2, f.countFieldsToPrint(EMPTY_YEAR_DAY_PERIOD));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,426,"assertEquals(""1---4"", f.print(YEAR_DAY_PERIOD));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,427,"assertEquals(5, f.calculatePrintedLength(YEAR_DAY_PERIOD));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,428,"assertEquals(2, f.countFieldsToPrint(YEAR_DAY_PERIOD));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,447,"ssertEquals(""---0"", f.print(YEAR_DAY_PERIOD));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,448,"ssertEquals(4, f.calculatePrintedLength(YEAR_DAY_PERIOD));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,449,"ssertEquals(1, f.countFieldsToPrint(YEAR_DAY_PERIOD));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,447,"assertEquals(""---0"", f.print(EMPTY_YEAR_DAY_PERIOD));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,448,"assertEquals(4, f.calculatePrintedLength(EMPTY_YEAR_DAY_PERIOD));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,449,"assertEquals(1, f.countFieldsToPrint(EMPTY_YEAR_DAY_PERIOD));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,451,"ssertEquals(""1---4"", f.print(EMPTY_YEAR_DAY_PERIOD));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,452,"ssertEquals(5, f.calculatePrintedLength(EMPTY_YEAR_DAY_PERIOD));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,453,"ssertEquals(2, f.countFieldsToPrint(EMPTY_YEAR_DAY_PERIOD));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,451,"assertEquals(""1---4"", f.print(YEAR_DAY_PERIOD));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,452,"assertEquals(5, f.calculatePrintedLength(YEAR_DAY_PERIOD));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,453,"assertEquals(2, f.countFieldsToPrint(YEAR_DAY_PERIOD));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,472,"ssertEquals(""0---"", f.print(YEAR_DAY_PERIOD));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,473,"ssertEquals(4, f.calculatePrintedLength(YEAR_DAY_PERIOD));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,474,"ssertEquals(1, f.countFieldsToPrint(YEAR_DAY_PERIOD));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,472,"assertEquals(""0---"", f.print(EMPTY_YEAR_DAY_PERIOD));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,473,"assertEquals(4, f.calculatePrintedLength(EMPTY_YEAR_DAY_PERIOD));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,474,"assertEquals(1, f.countFieldsToPrint(EMPTY_YEAR_DAY_PERIOD));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,476,"ssertEquals(""1---4"", f.print(EMPTY_YEAR_DAY_PERIOD));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,477,"ssertEquals(5, f.calculatePrintedLength(EMPTY_YEAR_DAY_PERIOD));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,478,"ssertEquals(2, f.countFieldsToPrint(EMPTY_YEAR_DAY_PERIOD));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,476,"assertEquals(""1---4"", f.print(YEAR_DAY_PERIOD));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,477,"assertEquals(5, f.calculatePrintedLength(YEAR_DAY_PERIOD));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,478,"assertEquals(2, f.countFieldsToPrint(YEAR_DAY_PERIOD));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,497,"ssertEquals(""---0"", f.print(YEAR_DAY_PERIOD));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,498,"ssertEquals(4, f.calculatePrintedLength(YEAR_DAY_PERIOD));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,499,"ssertEquals(1, f.countFieldsToPrint(YEAR_DAY_PERIOD));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,497,"assertEquals(""---0"", f.print(EMPTY_YEAR_DAY_PERIOD));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,498,"assertEquals(4, f.calculatePrintedLength(EMPTY_YEAR_DAY_PERIOD));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,499,"assertEquals(1, f.countFieldsToPrint(EMPTY_YEAR_DAY_PERIOD));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,501,"ssertEquals(""1---4"", f.print(EMPTY_YEAR_DAY_PERIOD));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,502,"ssertEquals(5, f.calculatePrintedLength(EMPTY_YEAR_DAY_PERIOD));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,503,"ssertEquals(2, f.countFieldsToPrint(EMPTY_YEAR_DAY_PERIOD));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,501,"assertEquals(""1---4"", f.print(YEAR_DAY_PERIOD));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,502,"assertEquals(5, f.calculatePrintedLength(YEAR_DAY_PERIOD));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,503,"assertEquals(2, f.countFieldsToPrint(YEAR_DAY_PERIOD));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,522,"ssertEquals(""0---0"", f.print(YEAR_DAY_PERIOD));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,523,"ssertEquals(5, f.calculatePrintedLength(YEAR_DAY_PERIOD));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,524,"ssertEquals(2, f.countFieldsToPrint(YEAR_DAY_PERIOD));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,526,"ssertEquals(""1---4"", f.print(EMPTY_YEAR_DAY_PERIOD));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,522,"assertEquals(""0---0"", f.print(EMPTY_YEAR_DAY_PERIOD));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,526,"assertEquals(""1---4"", f.print(YEAR_DAY_PERIOD));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,527,"assertEquals(5, f.calculatePrintedLength(YEAR_DAY_PERIOD));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,528,"assertEquals(2, f.countFieldsToPrint(YEAR_DAY_PERIOD));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,547,"ssertEquals(""0-0-0-0"", f.print(YEAR_DAY_PERIOD));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,548,"ssertEquals(7, f.calculatePrintedLength(YEAR_DAY_PERIOD));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,549,"ssertEquals(4, f.countFieldsToPrint(YEAR_DAY_PERIOD));"
False,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,551,"ssertEquals(""1-0-0-4"", f.print(EMPTY_YEAR_DAY_PERIOD));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,547,"assertEquals(""0-0-0-0"", f.print(EMPTY_YEAR_DAY_PERIOD));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,551,"assertEquals(""1-0-0-4"", f.print(YEAR_DAY_PERIOD));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,552,"assertEquals(7, f.calculatePrintedLength(YEAR_DAY_PERIOD));"
True,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,JodaTime/src/test/org/joda/time/format/TestPeriodFormatterBuilder.java,553,"assertEquals(4, f.countFieldsToPrint(YEAR_DAY_PERIOD));"
