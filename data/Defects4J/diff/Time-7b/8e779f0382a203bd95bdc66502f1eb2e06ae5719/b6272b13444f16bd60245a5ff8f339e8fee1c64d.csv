is_addition,old_file_path,new_file_path,line_num,content
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,64,import org.joda.time.ReadWritableDuration;
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,67,* DurationFormatterBuilder is used for constructing {@link DurationFormatter}s.
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,68,* DurationFormatters are built by appending specific fields and separators.
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,70,* <p>
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,71,"* For example, a formatter that prints years and months, like ""15 years and 8 months"","
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,72,* can be constructed as follows:
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,73,* <p>
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,74,* <pre>
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,75,* DurationFormatter yearsAndMonths = new DurationFormatterBuilder()
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,76,*     .printZeroAlways()
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,77,*     .appendYears()
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,78,"*     .appendSuffix("" year"", "" years"")"
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,79,"*     .appendSeparator("" and "")"
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,80,*     .printZeroNever()
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,81,*     .appendMonths()
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,82,"*     .appendSuffix("" month"", "" months"")"
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,83,*     .toFormatter();
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,84,* </pre>
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,85,* <p>
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,86,"* DurationFormatterBuilder itself is mutable and not thread-safe, but the"
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,87,* formatters that it builds are thread-safe and immutable.
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,89,* @see DurationFormat
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,97,private String iAlternate;
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,101,private int iMaxParsedDigits = 10;
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,102,private boolean iRejectSignedValues;
False,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,93,eturn toPrinter(iFormatters);
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,119,return toFormatter();
False,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,97, Converts to a DurationPrinter that prints using all the appended
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,123,* Converts to a DurationParser that parses using all the appended
False,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,99, printer.
False,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,101, @param alternate alternate text to print when printer emits no fields
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,125,* parser.
False,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,103,ublic DurationPrinter toPrinter(String alternate) {
False,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,104,urationPrinter printer = toPrinter();
False,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,105,f (alternate != null) {
False,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,106,"eturn new AlternateSelector(printer, new Literal(alternate));"
False,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,108,eturn printer;
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,127,public DurationParser toParser() {
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,128,return toFormatter();
False,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,112, Converts to a DurationPrinter that prints using all the appended
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,132,* Converts to a DurationFormatter that formats using all the appended
False,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,114, printer.
False,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,116, @param alternate alternate printer to use when printer emits no fields
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,134,* formatter.
False,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,118,ublic DurationPrinter toPrinter(DurationPrinter alternate) {
False,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,119,urationPrinter printer = toPrinter();
False,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,120,f (alternate != null) {
False,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,121,"eturn new AlternateSelector(printer, alternate);"
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,136,public DurationFormatter toFormatter() {
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,137,DurationFormatter formatter = toFormatter(iFormatters);
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,138,if (iAlternate != null) {
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,139,"formatter = new AlternateSelector(formatter, iAlternate);"
False,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,123,eturn printer;
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,141,return formatter;
False,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,126,rivate static DurationPrinter toPrinter(List formatters) {
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,144,private static DurationFormatter toFormatter(List formatters) {
False,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,129,urationPrinter before = (DurationPrinter) formatters.get(0);
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,147,DurationFormatter before = (DurationFormatter) formatters.get(0);
False,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,131,/ Separator at the end would never print anything.
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,149,// Separator at the end would never format anything.
False,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,135,"before, toPrinter(formatters.subList(2, size)));"
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,153,"(before, toFormatter(formatters.subList(2, size)));"
False,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,141," Depending on what rules are applied, a parser may not be buildable due"
False,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,142, to ambiguities that may arise during parsing.
False,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,145,ublic boolean canBuildParser() {
False,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,146,/ TODO
False,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,147,eturn true;
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,163,iAlternate = null;
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,166,iMaxParsedDigits = 10;
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,167,iRejectSignedValues = false;
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,176,* @return this DurationFormatterBuilder
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,193,* @return this DurationFormatterBuilder
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,210,* @return this DurationFormatterBuilder
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,221,* @return this DurationFormatterBuilder
False,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,207,/ TODO
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,224,iMaxParsedDigits = maxDigits;
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,231,* @return this DurationFormatterBuilder
False,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,214,ublic DurationFormatterBuilder rejectSignedValues() {
False,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,215,/ TODO
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,233,public DurationFormatterBuilder rejectSignedValues(boolean v) {
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,234,iRejectSignedValues = v;
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,242,* @return this DurationFormatterBuilder
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,253,* @return this DurationFormatterBuilder
False,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,239, even if the duration doesn't support it.
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,262,* even if the duration doesn't support it. The parser requires values for
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,263,* fields that always print zero.
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,265,* @return this DurationFormatterBuilder
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,277,* @return this DurationFormatterBuilder
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,296,* @return this DurationFormatterBuilder
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,312,* @return this DurationFormatterBuilder
False,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,286,ublic DurationFormatterBuilder appendPrefix(DurationFieldAffix prefix) {
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,315,private DurationFormatterBuilder appendPrefix(DurationFieldAffix prefix) {
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,329,* @return this DurationFormatterBuilder
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,339,* @return this DurationFormatterBuilder
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,349,* @return this DurationFormatterBuilder
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,359,* @return this DurationFormatterBuilder
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,369,* @return this DurationFormatterBuilder
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,379,* @return this DurationFormatterBuilder
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,389,* @return this DurationFormatterBuilder
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,399,* @return this DurationFormatterBuilder
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,408,"iMaxParsedDigits, iRejectSignedValues,"
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,418,* @return this DurationFormatterBuilder
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,438,* @return this DurationFormatterBuilder
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,455,* @return this DurationFormatterBuilder
False,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,410,ublic DurationFormatterBuilder appendSuffix(DurationFieldAffix suffix) {
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,459,private DurationFormatterBuilder appendSuffix(DurationFieldAffix suffix) {
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,480,* @return this DurationFormatterBuilder
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,498,* @return this DurationFormatterBuilder
False,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,478,urationPrinter composite = createComposite(formatters);
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,530,DurationFormatter composite = createComposite(formatters);
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,542,"* Supply alternate text to print, when no fields are emitted. During"
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,543,"* parsing, the alternate text is compared against first. If the alternate"
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,544,"* text matches (ignoring case), the parser finishes without attempting to"
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,545,* parse any specific fields.
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,547,* @return this DurationFormatterBuilder
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,549,"// TODO: Drop support for alternate. Instead, show least significant field"
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,550,// that is supported.
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,551,public DurationFormatterBuilder setAlternate(String text) {
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,552,iAlternate = text;
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,553,return this;
False,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,496,rivate static DurationPrinter createComposite(List formatters) {
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,563,private static DurationFormatter createComposite(List formatters) {
False,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,498,eturn (DurationPrinter)formatters.get(0);
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,565,return (DurationFormatter)formatters.get(0);
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,572,* Defines a formatted field's prefix or suffix text.
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,574,private static interface DurationFieldAffix {
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,575,int calculatePrintedLength(int value);
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,577,"void printTo(StringBuffer buf, int value);"
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,579,"void printTo(Writer out, int value) throws IOException;"
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,582,"* @return new position after parsing affix, or ~position of failure"
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,584,"int parse(String durationStr, int position);"
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,587,"* @return position where affix starts, or original ~position if not found"
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,589,"int scan(String durationStr, int position);"
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,611,"public int parse(String durationStr, int position) {"
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,612,String text = iText;
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,613,int textLength = text.length();
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,614,"if (durationStr.regionMatches(true, position, text, 0, textLength)) {"
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,615,return position + textLength;
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,617,return ~position;
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,620,"public int scan(String durationStr, final int position) {"
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,621,String text = iText;
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,622,int textLength = text.length();
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,623,int sourceLength = durationStr.length();
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,624,for (int pos = position; pos < sourceLength; pos++) {
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,625,"if (durationStr.regionMatches(true, pos, text, 0, textLength)) {"
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,626,return pos;
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,629,return ~position;
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,654,"public int parse(String durationStr, int position) {"
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,655,String text1 = iPluralText;
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,656,String text2 = iSingularText;
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,658,if (text1.length() < text2.length()) {
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,659,// Swap in order to match longer one first.
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,660,String temp = text1;
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,661,text1 = text2;
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,662,text2 = temp;
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,665,if (durationStr.regionMatches
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,666,"(true, position, text1, 0, text1.length())) {"
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,667,return position + text1.length();
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,669,if (durationStr.regionMatches
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,670,"(true, position, text2, 0, text2.length())) {"
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,671,return position + text2.length();
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,674,return ~position;
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,677,"public int scan(String durationStr, final int position) {"
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,678,String text1 = iPluralText;
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,679,String text2 = iSingularText;
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,681,if (text1.length() < text2.length()) {
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,682,// Swap in order to match longer one first.
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,683,String temp = text1;
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,684,text1 = text2;
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,685,text2 = temp;
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,688,int textLength1 = text1.length();
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,689,int textLength2 = text2.length();
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,691,int sourceLength = durationStr.length();
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,692,for (int pos = position; pos < sourceLength; pos++) {
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,693,"if (durationStr.regionMatches(true, pos, text1, 0, textLength1)) {"
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,694,return pos;
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,696,"if (durationStr.regionMatches(true, pos, text2, 0, textLength2)) {"
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,697,return pos;
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,700,return ~position;
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,728,"public int parse(String durationStr, int position) {"
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,729,"position = iLeft.parse(durationStr, position);"
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,730,if (position >= 0) {
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,731,"position = iRight.parse(durationStr, position);"
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,733,return position;
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,736,"public int scan(String durationStr, final int position) {"
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,737,"int pos = iLeft.scan(durationStr, position);"
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,738,if (pos >= 0) {
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,739,"return iRight.scan(durationStr, pos);"
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,741,return ~position;
False,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,572,mplements DurationPrinter
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,746,implements DurationFormatter
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,750,private final int iMaxParsedDigits;
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,751,private final boolean iRejectSignedValues;
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,759,"int maxParsedDigits, boolean rejectSignedValues,"
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,763,iMaxParsedDigits = maxParsedDigits;
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,764,iRejectSignedValues = rejectSignedValues;
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,773,iMaxParsedDigits = field.iMaxParsedDigits;
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,774,iRejectSignedValues = field.iRejectSignedValues;
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,864,"public int parseInto(ReadWritableDuration duration,"
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,865,"String text, int position) {"
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,867,boolean mustParse = (iPrintZeroSetting == PRINT_ZERO_ALWAYS);
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,869,// Shortcut test.
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,870,if (position >= text.length()) {
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,871,return mustParse ? ~position : position;
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,874,if (iPrefix != null) {
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,875,"position = iPrefix.parse(text, position);"
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,876,if (position >= 0) {
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,877,"// If prefix is found, then the parse must finish."
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,878,mustParse = true;
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,879,} else {
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,880,"// Prefix not found, so bail."
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,881,if (!mustParse) {
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,882,// It's okay because parsing of this field is not
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,883,// required. Don't return an error. Fields down the
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,884,"// chain can continue on, trying to parse."
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,885,return ~position;
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,887,return position;
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,891,int suffixPos = -1;
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,892,if (iSuffix != null && !mustParse) {
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,893,"// Pre-scan the suffix, to help determine if this field must be"
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,894,// parsed.
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,895,"suffixPos = iSuffix.scan(text, position);"
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,896,if (suffixPos >= 0) {
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,897,"// If suffix is found, then parse must finish."
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,898,mustParse = true;
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,899,} else {
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,900,"// Suffix not found, so bail."
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,901,if (!mustParse) {
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,902,// It's okay because parsing of this field is not
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,903,// required. Don't return an error. Fields down the
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,904,"// chain can continue on, trying to parse."
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,905,return ~suffixPos;
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,907,return suffixPos;
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,911,if (!mustParse && !isSupported(duration.getDurationType())) {
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,912,"// If parsing is not required and the field is not supported,"
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,913,// exit gracefully so that another parser can continue on.
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,914,return position;
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,917,int limit;
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,918,if (suffixPos > 0) {
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,919,"limit = Math.min(iMaxParsedDigits, suffixPos - position);"
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,920,} else {
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,921,"limit = Math.min(iMaxParsedDigits, text.length() - position);"
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,924,boolean negative = false;
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,925,int length = 0;
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,926,while (length < limit) {
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,927,char c = text.charAt(position + length);
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,928,if (length == 0 && (c == '-' || c == '+') && !iRejectSignedValues) {
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,929,negative = c == '-';
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,930,if (negative) {
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,931,length++;
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,932,} else {
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,933,// Skip the '+' for parseInt to succeed.
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,934,position++;
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,936,// Expand the limit to disregard the sign character.
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,937,"limit = Math.min(limit + 1, text.length() - position);"
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,938,continue;
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,940,if (c < '0' || c > '9') {
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,941,break;
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,943,length++;
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,946,if (length == 0) {
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,947,return ~position;
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,950,int value;
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,951,if (length == 3 && negative) {
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,952,"value = -FormatUtils.parseTwoDigits(text, position + 1);"
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,953,} else if (length == 2) {
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,954,if (negative) {
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,955,value = text.charAt(position + 1) - '0';
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,956,value = -value;
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,957,} else {
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,958,"value = FormatUtils.parseTwoDigits(text, position);"
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,960,} else if (length == 1 && !negative) {
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,961,value = text.charAt(position) - '0';
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,962,} else {
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,963,"String sub = text.substring(position, position + length);"
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,964,try {
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,965,value = Integer.parseInt(sub);
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,966,} catch (NumberFormatException e) {
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,967,return ~position;
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,971,"setFieldValue(duration, value);"
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,972,position += length;
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,974,if (position >= 0 && iSuffix != null) {
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,975,"position = iSuffix.parse(text, position);"
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,978,return position;
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,1055,boolean isSupported(DurationType type) {
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,1056,switch (iFieldType) {
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,1057,default:
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,1058,return false;
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,1059,case 1:
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,1060,return type.years().isSupported();
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,1061,case 2:
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,1062,return type.months().isSupported();
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,1063,case 3:
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,1064,return type.weeks().isSupported();
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,1065,case 4:
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,1066,return type.days().isSupported();
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,1067,case 5:
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,1068,return type.hours().isSupported();
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,1069,case 6:
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,1070,return type.minutes().isSupported();
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,1071,case 7:
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,1072,return type.seconds().isSupported();
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,1073,case 8:
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,1074,return type.millis().isSupported();
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,1078,"void setFieldValue(ReadWritableDuration duration, int value) {"
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,1079,switch (iFieldType) {
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,1080,default:
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,1081,break;
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,1082,case 1:
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,1083,duration.setYears(value);
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,1084,break;
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,1085,case 2:
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,1086,duration.setMonths(value);
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,1087,break;
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,1088,case 3:
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,1089,duration.setWeeks(value);
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,1090,break;
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,1091,case 4:
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,1092,duration.setDays(value);
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,1093,break;
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,1094,case 5:
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,1095,duration.setHours(value);
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,1096,break;
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,1097,case 6:
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,1098,duration.setMinutes(value);
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,1099,break;
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,1100,case 7:
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,1101,duration.setSeconds(value);
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,1102,break;
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,1103,case 8:
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,1104,duration.setMillis(value);
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,1105,break;
False,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,759,mplements DurationPrinter
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,1111,implements DurationFormatter
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,1135,"public int parseInto(ReadWritableDuration duration,"
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,1136,"String durationStr, int position) {"
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,1137,"if (durationStr.regionMatches(true, position, iText, 0, iText.length())) {"
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,1138,return position + iText.length();
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,1140,return ~position;
False,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,785,mplements DurationPrinter
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,1145,implements DurationFormatter
False,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,790,rivate final DurationPrinter iBefore;
False,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,791,rivate final DurationPrinter iAfter;
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,1150,private final DurationFormatter iBefore;
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,1151,private final DurationFormatter iAfter;
False,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,798,"urationPrinter before, DurationPrinter after) {"
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,1158,"DurationFormatter before, DurationFormatter after) {"
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,1219,"public int parseInto(ReadWritableDuration duration,"
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,1220,"String durationStr, int position) {"
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,1221,final int oldPos = position;
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,1223,"position = iBefore.parseInto(duration, durationStr, position);"
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,1225,if (position < 0) {
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,1226,return position;
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,1229,if (position > oldPos) {
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,1230,"// Since position advanced, this separator is"
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,1231,// allowed. Optionally parse it.
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,1232,"if (durationStr.regionMatches(true, position, iText, 0, iText.length())) {"
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,1233,position += iText.length();
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,1234,} else if (iText != iFinalText && durationStr.regionMatches
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,1235,"(true, position, iFinalText, 0, iFinalText.length())) {"
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,1236,position += iFinalText.length();
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,1240,"return iAfter.parseInto(duration, durationStr, position);"
False,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,863,"eparator finish(DurationPrinter before, DurationPrinter after) {"
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,1247,"Separator finish(DurationFormatter before, DurationFormatter after) {"
False,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,869,mplements DurationPrinter
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,1253,implements DurationFormatter
False,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,871,rivate final DurationPrinter[] iFormatters;
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,1255,private final DurationFormatter[] iFormatters;
False,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,874,Formatters = (DurationPrinter[])formatters.toArray
False,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,875,new DurationPrinter[formatters.size()]);
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,1258,iFormatters = (DurationFormatter[])formatters.toArray
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,1259,(new DurationFormatter[formatters.size()]);
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,1296,"public int parseInto(ReadWritableDuration duration,"
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,1297,"String durationStr, int position) {"
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,1298,DurationParser[] parsers = iFormatters;
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,1300,if (parsers == null) {
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,1301,throw new UnsupportedOperationException();
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,1304,int len = parsers.length;
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,1305,for (int i=0; i<len && position >= 0; i++) {
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,1306,"position = parsers[i].parseInto(duration, durationStr, position);"
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,1308,return position;
False,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,914,mplements DurationPrinter
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,1313,implements DurationFormatter
False,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,916,rivate final DurationPrinter iPrimary;
False,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,917,rivate final DurationPrinter iAlternate;
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,1315,private final DurationFormatter iFormatter;
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,1316,private final String iAlternate;
False,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,919,"lternateSelector(DurationPrinter primary, DurationPrinter alternate) {"
False,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,920,Primary = primary;
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,1318,"AlternateSelector(DurationFormatter formatter, String alternate) {"
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,1319,iFormatter = formatter;
False,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,925,"nt count = iPrimary.countFieldsToPrint(duration, stopAt);"
False,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,926,f (count <= 0) {
False,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,927,"ount = iAlternate.countFieldsToPrint(duration, stopAt);"
False,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,929,eturn count;
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,1324,"return iFormatter.countFieldsToPrint(duration, stopAt);"
False,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,933,"f (iPrimary.countFieldsToPrint(duration, 1) > 0) {"
False,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,934,eturn iPrimary.calculatePrintedLength(duration);
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,1328,"if (iFormatter.countFieldsToPrint(duration, 1) > 0) {"
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,1329,return iFormatter.calculatePrintedLength(duration);
False,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,936,eturn iAlternate.calculatePrintedLength(duration);
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,1331,return iAlternate.length();
False,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,941,"f (iPrimary.countFieldsToPrint(duration, 1) > 0) {"
False,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,942,"Primary.printTo(buf, duration);"
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,1336,"if (iFormatter.countFieldsToPrint(duration, 1) > 0) {"
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,1337,"iFormatter.printTo(buf, duration);"
False,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,944,"Alternate.printTo(buf, duration);"
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,1339,buf.append(iAlternate);
False,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,949,"f (iPrimary.countFieldsToPrint(duration, 1) > 0) {"
False,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,950,"Primary.printTo(out, duration);"
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,1344,"if (iFormatter.countFieldsToPrint(duration, 1) > 0) {"
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,1345,"iFormatter.printTo(out, duration);"
False,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,952,"Alternate.printTo(out, duration);"
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,1347,out.write(iAlternate);
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,1351,"public int parseInto(ReadWritableDuration duration,"
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,1352,"String durationStr, int position) {"
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,1353,String alt = iAlternate;
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,1354,int altLength = alt.length();
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,1355,"if (durationStr.regionMatches(true, position, alt, 0, altLength)) {"
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,1356,return position + altLength;
True,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DurationFormatterBuilder.java,1358,"return iFormatter.parseInto(duration, durationStr, position);"
