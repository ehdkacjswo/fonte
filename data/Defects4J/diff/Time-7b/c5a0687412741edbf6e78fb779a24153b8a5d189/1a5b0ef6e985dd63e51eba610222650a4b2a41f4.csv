is_addition,old_file_path,new_file_path,line_num,content
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,611,// Halfday
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,614,* Get the halfdays duration field for this chronology.
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,616,* @return DurationField or UnsupportedDurationField if unsupported
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,618,public abstract DurationField halfdays();
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,690,// Weekyear
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,707,* Get the year of a week based year in a century field for this chronology.
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,709,* @return DateTimeField or UnsupportedDateTimeField if unsupported
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,711,public abstract  DateTimeField weekyearOfCentury();
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,759,// Century
True,JodaTime/src/java/org/joda/time/Chronology.java,JodaTime/src/java/org/joda/time/Chronology.java,775,// Era
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,490,/ TODO: Add to Chronology
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,491,/case WEEKYEAR_OF_CENTURY:
False,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,492,/return chronology.weekyearOfCentury();
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,490,case WEEKYEAR_OF_CENTURY:
True,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,JodaTime/src/java/org/joda/time/DateTimeFieldType.java,491,return chronology.weekyearOfCentury();
False,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,298,/ TODO: Add to Chronology
False,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,299,/case HALFDAYS:
False,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,300,/return chronology.halfdays();
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,298,case HALFDAYS:
True,JodaTime/src/java/org/joda/time/DurationFieldType.java,JodaTime/src/java/org/joda/time/DurationFieldType.java,299,return chronology.halfdays();
True,JodaTime/src/java/org/joda/time/chrono/AssembledChronology.java,JodaTime/src/java/org/joda/time/chrono/AssembledChronology.java,84,private transient DurationField iHalfdays;
True,JodaTime/src/java/org/joda/time/chrono/AssembledChronology.java,JodaTime/src/java/org/joda/time/chrono/AssembledChronology.java,111,private transient DateTimeField iWeekyearOfCentury;
True,JodaTime/src/java/org/joda/time/chrono/AssembledChronology.java,JodaTime/src/java/org/joda/time/chrono/AssembledChronology.java,241,public final DurationField halfdays() {
True,JodaTime/src/java/org/joda/time/chrono/AssembledChronology.java,JodaTime/src/java/org/joda/time/chrono/AssembledChronology.java,242,return iHalfdays;
True,JodaTime/src/java/org/joda/time/chrono/AssembledChronology.java,JodaTime/src/java/org/joda/time/chrono/AssembledChronology.java,289,public final DateTimeField weekyearOfCentury() {
True,JodaTime/src/java/org/joda/time/chrono/AssembledChronology.java,JodaTime/src/java/org/joda/time/chrono/AssembledChronology.java,290,return iWeekyearOfCentury;
True,JodaTime/src/java/org/joda/time/chrono/AssembledChronology.java,JodaTime/src/java/org/joda/time/chrono/AssembledChronology.java,369,iHalfdays  = (f = fields.halfdays)  != null ? f : super.halfdays();
True,JodaTime/src/java/org/joda/time/chrono/AssembledChronology.java,JodaTime/src/java/org/joda/time/chrono/AssembledChronology.java,397,iWeekyearOfCentury  = (f = fields.weekyearOfCentury)  != null ? f : super.weekyearOfCentury();
True,JodaTime/src/java/org/joda/time/chrono/AssembledChronology.java,JodaTime/src/java/org/joda/time/chrono/AssembledChronology.java,439,public DurationField halfdays;
True,JodaTime/src/java/org/joda/time/chrono/AssembledChronology.java,JodaTime/src/java/org/joda/time/chrono/AssembledChronology.java,466,public DateTimeField weekyearOfCentury;
True,JodaTime/src/java/org/joda/time/chrono/AssembledChronology.java,JodaTime/src/java/org/joda/time/chrono/AssembledChronology.java,495,if (isSupported(f = chrono.halfdays())) {
True,JodaTime/src/java/org/joda/time/chrono/AssembledChronology.java,JodaTime/src/java/org/joda/time/chrono/AssembledChronology.java,496,halfdays = f;
True,JodaTime/src/java/org/joda/time/chrono/AssembledChronology.java,JodaTime/src/java/org/joda/time/chrono/AssembledChronology.java,571,if (isSupported(f = chrono.weekyearOfCentury())) {
True,JodaTime/src/java/org/joda/time/chrono/AssembledChronology.java,JodaTime/src/java/org/joda/time/chrono/AssembledChronology.java,572,weekyearOfCentury = f;
True,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,59,import org.joda.time.DateTimeField;
False,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,61,mport org.joda.time.DateTimeField;
True,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,361,// Halfday
True,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,461,// Weekyear
True,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,482,* Get the year of a week based year in a century field for this chronology.
True,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,484,* @return DateTimeField or UnsupportedDateTimeField if unsupported
True,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,486,public DateTimeField weekyearOfCentury() {
True,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,487,"return UnsupportedDateTimeField.getInstance(DateTimeFieldType.weekyearOfCentury(), weekyears());"
True,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,548,// Century
True,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseChronology.java,568,// Era
False,JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java,319,/fields.halfdays = cHalfdaysField;  Doesn't exist in public interface
True,JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java,319,fields.halfdays = cHalfdaysField;
True,JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java,360,field = new RemainderDateTimeField(
True,JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java,361,"fields.weekyear, DateTimeFieldType.weekyearOfCentury(), 100);"
True,JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java,362,fields.weekyearOfCentury = new OffsetDateTimeField(
True,JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java,JodaTime/src/java/org/joda/time/chrono/BaseGJChronology.java,363,"field, DateTimeFieldType.weekyearOfCentury(), 1);"
True,JodaTime/src/java/org/joda/time/chrono/BuddhistChronology.java,JodaTime/src/java/org/joda/time/chrono/BuddhistChronology.java,230,field = new RemainderDateTimeField(
True,JodaTime/src/java/org/joda/time/chrono/BuddhistChronology.java,JodaTime/src/java/org/joda/time/chrono/BuddhistChronology.java,231,"fields.weekyear, DateTimeFieldType.weekyearOfCentury(), 100);"
True,JodaTime/src/java/org/joda/time/chrono/BuddhistChronology.java,JodaTime/src/java/org/joda/time/chrono/BuddhistChronology.java,232,fields.weekyearOfCentury = new OffsetDateTimeField(
True,JodaTime/src/java/org/joda/time/chrono/BuddhistChronology.java,JodaTime/src/java/org/joda/time/chrono/BuddhistChronology.java,233,"field, DateTimeFieldType.weekyearOfCentury(), 1);"
True,JodaTime/src/java/org/joda/time/chrono/GJChronology.java,JodaTime/src/java/org/joda/time/chrono/GJChronology.java,560,fields.weekyearOfCentury = new ImpreciseCutoverField
True,JodaTime/src/java/org/joda/time/chrono/GJChronology.java,JodaTime/src/java/org/joda/time/chrono/GJChronology.java,561,"(julian.weekyearOfCentury(), fields.weekyearOfCentury, fields.weekyears);"
True,JodaTime/src/java/org/joda/time/chrono/ISOChronology.java,JodaTime/src/java/org/joda/time/chrono/ISOChronology.java,213,fields.weekyearOfCentury = new RemainderDateTimeField(
True,JodaTime/src/java/org/joda/time/chrono/ISOChronology.java,JodaTime/src/java/org/joda/time/chrono/ISOChronology.java,214,"(DividedDateTimeField) fields.centuryOfEra, DateTimeFieldType.weekyearOfCentury());"
True,JodaTime/src/java/org/joda/time/chrono/LenientChronology.java,JodaTime/src/java/org/joda/time/chrono/LenientChronology.java,136,fields.weekyearOfCentury = convertField(fields.weekyearOfCentury);
True,JodaTime/src/java/org/joda/time/chrono/LimitChronology.java,JodaTime/src/java/org/joda/time/chrono/LimitChronology.java,258,"fields.halfdays = convertField(fields.halfdays, converted);"
True,JodaTime/src/java/org/joda/time/chrono/LimitChronology.java,JodaTime/src/java/org/joda/time/chrono/LimitChronology.java,277,"fields.weekyearOfCentury = convertField(fields.weekyearOfCentury, converted);"
True,JodaTime/src/java/org/joda/time/chrono/StrictChronology.java,JodaTime/src/java/org/joda/time/chrono/StrictChronology.java,136,fields.weekyearOfCentury = convertField(fields.weekyearOfCentury);
True,JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java,JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java,198,"fields.halfdays = convertField(fields.halfdays, converted);"
True,JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java,JodaTime/src/java/org/joda/time/chrono/ZonedChronology.java,217,"fields.weekyearOfCentury = convertField(fields.weekyearOfCentury, converted);"
True,JodaTime/src/test/org/joda/time/chrono/TestBuddhistChronology.java,JodaTime/src/test/org/joda/time/chrono/TestBuddhistChronology.java,180,"assertEquals(""halfdays"", GregorianChronology.getInstance().halfdays().getName());"
True,JodaTime/src/test/org/joda/time/chrono/TestBuddhistChronology.java,JodaTime/src/test/org/joda/time/chrono/TestBuddhistChronology.java,193,"assertEquals(true, BuddhistChronology.getInstance().halfdays().isSupported());"
True,JodaTime/src/test/org/joda/time/chrono/TestBuddhistChronology.java,JodaTime/src/test/org/joda/time/chrono/TestBuddhistChronology.java,205,"assertEquals(false, BuddhistChronology.getInstance().halfdays().isPrecise());"
True,JodaTime/src/test/org/joda/time/chrono/TestBuddhistChronology.java,JodaTime/src/test/org/joda/time/chrono/TestBuddhistChronology.java,217,"assertEquals(true, BuddhistChronology.getInstanceUTC().halfdays().isPrecise());"
True,JodaTime/src/test/org/joda/time/chrono/TestBuddhistChronology.java,JodaTime/src/test/org/joda/time/chrono/TestBuddhistChronology.java,231,"assertEquals(""weekyearOfCentury"", BuddhistChronology.getInstance().weekyearOfCentury().getName());"
True,JodaTime/src/test/org/joda/time/chrono/TestBuddhistChronology.java,JodaTime/src/test/org/joda/time/chrono/TestBuddhistChronology.java,244,"assertEquals(true, BuddhistChronology.getInstance().weekyearOfCentury().isSupported());"
True,JodaTime/src/test/org/joda/time/chrono/TestCopticChronology.java,JodaTime/src/test/org/joda/time/chrono/TestCopticChronology.java,180,"assertEquals(""halfdays"", CopticChronology.getInstance().halfdays().getName());"
True,JodaTime/src/test/org/joda/time/chrono/TestCopticChronology.java,JodaTime/src/test/org/joda/time/chrono/TestCopticChronology.java,193,"assertEquals(true, CopticChronology.getInstance().halfdays().isSupported());"
True,JodaTime/src/test/org/joda/time/chrono/TestCopticChronology.java,JodaTime/src/test/org/joda/time/chrono/TestCopticChronology.java,205,"assertEquals(false, CopticChronology.getInstance().halfdays().isPrecise());"
True,JodaTime/src/test/org/joda/time/chrono/TestCopticChronology.java,JodaTime/src/test/org/joda/time/chrono/TestCopticChronology.java,217,"assertEquals(true, CopticChronology.getInstanceUTC().halfdays().isPrecise());"
True,JodaTime/src/test/org/joda/time/chrono/TestCopticChronology.java,JodaTime/src/test/org/joda/time/chrono/TestCopticChronology.java,231,"assertEquals(""weekyearOfCentury"", CopticChronology.getInstance().weekyearOfCentury().getName());"
True,JodaTime/src/test/org/joda/time/chrono/TestCopticChronology.java,JodaTime/src/test/org/joda/time/chrono/TestCopticChronology.java,244,"assertEquals(true, CopticChronology.getInstance().weekyearOfCentury().isSupported());"
True,JodaTime/src/test/org/joda/time/chrono/TestGJChronology.java,JodaTime/src/test/org/joda/time/chrono/TestGJChronology.java,235,"assertEquals(""halfdays"", GJChronology.getInstance().halfdays().getName());"
True,JodaTime/src/test/org/joda/time/chrono/TestGJChronology.java,JodaTime/src/test/org/joda/time/chrono/TestGJChronology.java,249,"assertEquals(true, GJChronology.getInstance().halfdays().isSupported());"
True,JodaTime/src/test/org/joda/time/chrono/TestGJChronology.java,JodaTime/src/test/org/joda/time/chrono/TestGJChronology.java,261,"assertEquals(false, GJChronology.getInstance().halfdays().isPrecise());"
True,JodaTime/src/test/org/joda/time/chrono/TestGJChronology.java,JodaTime/src/test/org/joda/time/chrono/TestGJChronology.java,273,"assertEquals(true, GJChronology.getInstanceUTC().halfdays().isPrecise());"
True,JodaTime/src/test/org/joda/time/chrono/TestGJChronology.java,JodaTime/src/test/org/joda/time/chrono/TestGJChronology.java,287,"assertEquals(""weekyearOfCentury"", GJChronology.getInstance().weekyearOfCentury().getName());"
True,JodaTime/src/test/org/joda/time/chrono/TestGJChronology.java,JodaTime/src/test/org/joda/time/chrono/TestGJChronology.java,300,"assertEquals(true, GJChronology.getInstance().weekyearOfCentury().isSupported());"
True,JodaTime/src/test/org/joda/time/chrono/TestGregorianChronology.java,JodaTime/src/test/org/joda/time/chrono/TestGregorianChronology.java,196,"assertEquals(""halfdays"", GregorianChronology.getInstance().halfdays().getName());"
True,JodaTime/src/test/org/joda/time/chrono/TestGregorianChronology.java,JodaTime/src/test/org/joda/time/chrono/TestGregorianChronology.java,209,"assertEquals(true, GregorianChronology.getInstance().halfdays().isSupported());"
True,JodaTime/src/test/org/joda/time/chrono/TestGregorianChronology.java,JodaTime/src/test/org/joda/time/chrono/TestGregorianChronology.java,221,"assertEquals(false, GregorianChronology.getInstance().halfdays().isPrecise());"
True,JodaTime/src/test/org/joda/time/chrono/TestGregorianChronology.java,JodaTime/src/test/org/joda/time/chrono/TestGregorianChronology.java,233,"assertEquals(true, GregorianChronology.getInstanceUTC().halfdays().isPrecise());"
True,JodaTime/src/test/org/joda/time/chrono/TestGregorianChronology.java,JodaTime/src/test/org/joda/time/chrono/TestGregorianChronology.java,247,"assertEquals(""weekyearOfCentury"", GregorianChronology.getInstance().weekyearOfCentury().getName());"
True,JodaTime/src/test/org/joda/time/chrono/TestGregorianChronology.java,JodaTime/src/test/org/joda/time/chrono/TestGregorianChronology.java,260,"assertEquals(true, GregorianChronology.getInstance().weekyearOfCentury().isSupported());"
True,JodaTime/src/test/org/joda/time/chrono/TestISOChronology.java,JodaTime/src/test/org/joda/time/chrono/TestISOChronology.java,180,"assertEquals(""halfdays"", ISOChronology.getInstance().halfdays().getName());"
True,JodaTime/src/test/org/joda/time/chrono/TestISOChronology.java,JodaTime/src/test/org/joda/time/chrono/TestISOChronology.java,193,"assertEquals(true, ISOChronology.getInstance().halfdays().isSupported());"
True,JodaTime/src/test/org/joda/time/chrono/TestISOChronology.java,JodaTime/src/test/org/joda/time/chrono/TestISOChronology.java,205,"assertEquals(false, ISOChronology.getInstance().halfdays().isPrecise());"
True,JodaTime/src/test/org/joda/time/chrono/TestISOChronology.java,JodaTime/src/test/org/joda/time/chrono/TestISOChronology.java,217,"assertEquals(true, ISOChronology.getInstanceUTC().halfdays().isPrecise());"
True,JodaTime/src/test/org/joda/time/chrono/TestISOChronology.java,JodaTime/src/test/org/joda/time/chrono/TestISOChronology.java,231,"assertEquals(""weekyearOfCentury"", ISOChronology.getInstance().weekyearOfCentury().getName());"
True,JodaTime/src/test/org/joda/time/chrono/TestISOChronology.java,JodaTime/src/test/org/joda/time/chrono/TestISOChronology.java,244,"assertEquals(true, ISOChronology.getInstance().weekyearOfCentury().isSupported());"
True,JodaTime/src/test/org/joda/time/chrono/TestJulianChronology.java,JodaTime/src/test/org/joda/time/chrono/TestJulianChronology.java,196,"assertEquals(""halfdays"", JulianChronology.getInstance().halfdays().getName());"
True,JodaTime/src/test/org/joda/time/chrono/TestJulianChronology.java,JodaTime/src/test/org/joda/time/chrono/TestJulianChronology.java,209,"assertEquals(true, JulianChronology.getInstance().halfdays().isSupported());"
True,JodaTime/src/test/org/joda/time/chrono/TestJulianChronology.java,JodaTime/src/test/org/joda/time/chrono/TestJulianChronology.java,221,"assertEquals(false, JulianChronology.getInstance().halfdays().isPrecise());"
True,JodaTime/src/test/org/joda/time/chrono/TestJulianChronology.java,JodaTime/src/test/org/joda/time/chrono/TestJulianChronology.java,233,"assertEquals(true, JulianChronology.getInstanceUTC().halfdays().isPrecise());"
True,JodaTime/src/test/org/joda/time/chrono/TestJulianChronology.java,JodaTime/src/test/org/joda/time/chrono/TestJulianChronology.java,247,"assertEquals(""weekyearOfCentury"", JulianChronology.getInstance().weekyearOfCentury().getName());"
True,JodaTime/src/test/org/joda/time/chrono/TestJulianChronology.java,JodaTime/src/test/org/joda/time/chrono/TestJulianChronology.java,260,"assertEquals(true, JulianChronology.getInstance().weekyearOfCentury().isSupported());"
