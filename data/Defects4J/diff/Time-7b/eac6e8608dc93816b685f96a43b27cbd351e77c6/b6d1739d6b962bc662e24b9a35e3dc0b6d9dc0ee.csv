is_addition,old_file_path,new_file_path,line_num,content
False,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,27,mport org.joda.time.DateTimeField;
True,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,27,import org.joda.time.DateTime;
False,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,30,mport org.joda.time.DurationFieldType;
False,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,32,mport org.joda.time.field.RemainderDateTimeField;
False,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,88, Z       time zone offset             text          -08:00; -0800
True,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,86,* Z       time zone offset/id          text          -0800; -08:00; Asia/Tokyo
True,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,108,"* <strong>Zone</strong>: 'Z' outputs offset without a colon, 'ZZ' outputs"
True,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,109,"* the offset with a colon, 'ZZZ' or more outputs the zone id."
True,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,110,* <p>
False,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,112," like ':', '.', ' ', '#' and '@' will appear in the resulting time text"
True,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,113,"* like ':', '.', ' ', '#' and '?' will appear in the resulting time text"
False,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,151, The pattern string is encoded as per SimpleDateFormat.
True,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,152,"* The pattern string is described above, and is similar to SimpleDateFormat."
True,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,153,* <p>
True,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,154,"* The format may contain locale specific output, and this will change as"
True,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,155,* you change the locale of the formatter.
True,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,156,* Call {@link DateTimeFormatter#withLocale(Locale)} to switch the locale.
True,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,157,* For example:
True,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,158,* <pre>
True,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,159,* DateTimeFormat.forPattern(pattern).withLocale(Locale.FRANCE).print(dt);
True,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,160,* </pre>
False,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,172, style for that locale will be output.
True,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,181,* style for that locale will be output. For example:
True,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,182,* <pre>
True,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,183,* DateTimeFormat.forStyle(style).withLocale(Locale.FRANCE).print(dt);
True,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,184,* </pre>
False,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,196, Creates a format that outputs a medium date format.
True,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,208,* Creates a format that outputs a short time format.
False,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,203,ublic static DateTimeFormatter mediumDate() {
False,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,204,"eturn createFormatterForStyleIndex(MEDIUM, NONE);"
True,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,215,public static DateTimeFormatter shortTime() {
True,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,216,"return createFormatterForStyleIndex(NONE, SHORT);"
False,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,208, Creates a format that outputs a long date format.
True,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,220,* Creates a format that outputs a short datetime format.
False,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,215,ublic static DateTimeFormatter longDate() {
False,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,216,"eturn createFormatterForStyleIndex(LONG, NONE);"
True,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,227,public static DateTimeFormatter shortDateTime() {
True,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,228,"return createFormatterForStyleIndex(SHORT, SHORT);"
False,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,220, Creates a format that outputs a full date format.
True,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,233,* Creates a format that outputs a medium date format.
False,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,227,ublic static DateTimeFormatter fullDate() {
False,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,228,"eturn createFormatterForStyleIndex(FULL, NONE);"
True,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,240,public static DateTimeFormatter mediumDate() {
True,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,241,"return createFormatterForStyleIndex(MEDIUM, NONE);"
False,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,233, Creates a format that outputs a short time format.
True,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,245,* Creates a format that outputs a medium time format.
False,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,240,ublic static DateTimeFormatter shortTime() {
False,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,241,"eturn createFormatterForStyleIndex(NONE, SHORT);"
True,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,252,public static DateTimeFormatter mediumTime() {
True,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,253,"return createFormatterForStyleIndex(NONE, MEDIUM);"
False,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,245, Creates a format that outputs a medium time format.
True,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,257,* Creates a format that outputs a medium datetime format.
False,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,252,ublic static DateTimeFormatter mediumTime() {
False,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,253,"eturn createFormatterForStyleIndex(NONE, MEDIUM);"
True,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,264,public static DateTimeFormatter mediumDateTime() {
True,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,265,"return createFormatterForStyleIndex(MEDIUM, MEDIUM);"
False,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,257, Creates a format that outputs a long time format.
True,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,270,* Creates a format that outputs a long date format.
False,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,264,ublic static DateTimeFormatter longTime() {
False,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,265,"eturn createFormatterForStyleIndex(NONE, LONG);"
True,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,277,public static DateTimeFormatter longDate() {
True,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,278,"return createFormatterForStyleIndex(LONG, NONE);"
False,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,269, Creates a format that outputs a full time format.
True,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,282,* Creates a format that outputs a long time format.
False,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,276,ublic static DateTimeFormatter fullTime() {
False,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,277,"eturn createFormatterForStyleIndex(NONE, FULL);"
True,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,289,public static DateTimeFormatter longTime() {
True,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,290,"return createFormatterForStyleIndex(NONE, LONG);"
False,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,282, Creates a format that outputs a short datetime format.
True,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,294,* Creates a format that outputs a long datetime format.
False,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,289,ublic static DateTimeFormatter shortDateTime() {
False,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,290,"eturn createFormatterForStyleIndex(SHORT, SHORT);"
True,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,301,public static DateTimeFormatter longDateTime() {
True,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,302,"return createFormatterForStyleIndex(LONG, LONG);"
False,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,294, Creates a format that outputs a medium datetime format.
True,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,307,* Creates a format that outputs a full date format.
False,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,301,ublic static DateTimeFormatter mediumDateTime() {
False,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,302,"eturn createFormatterForStyleIndex(MEDIUM, MEDIUM);"
True,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,314,public static DateTimeFormatter fullDate() {
True,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,315,"return createFormatterForStyleIndex(FULL, NONE);"
False,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,306, Creates a format that outputs a long datetime format.
True,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,319,* Creates a format that outputs a full time format.
False,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,313,ublic static DateTimeFormatter longDateTime() {
False,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,314,"eturn createFormatterForStyleIndex(LONG, LONG);"
True,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,326,public static DateTimeFormatter fullTime() {
True,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,327,"return createFormatterForStyleIndex(NONE, FULL);"
False,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,399,"ype = new RemainderType(DateTimeFieldType.weekyear(),"
False,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,400,"ateTimeFieldType.weekyearOfCentury(), 100);"
False,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,401,reak;
False,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,402,ase 'y': default:
False,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,403,"ype = new RemainderType(DateTimeFieldType.year(),"
False,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,404,"ateTimeFieldType.yearOfCentury(), 100);"
True,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,412,builder.appendTwoDigitWeekyear(new DateTime().getWeekyear() - 30);
True,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,414,case 'y':
False,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,407,"ype = new RemainderType(DateTimeFieldType.yearOfEra(),"
False,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,408,"ateTimeFieldType.yearOfCentury(), 100);"
True,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,416,default:
True,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,417,builder.appendTwoDigitYear(new DateTime().getYear() - 30);
False,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,411,"uilder.appendDecimal(type, 2, 2);"
False,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,501,f (tokenLen >= 4) {
True,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,509,if (tokenLen == 1) {
True,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,510,"builder.appendTimeZoneOffset(null, false, 2, 2);"
True,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,511,} else if (tokenLen == 2) {
False,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,504,"uilder.appendTimeZoneOffset(null, false, 2, 2);"
True,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,514,builder.appendTimeZoneId();
False,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,633,f (pattern == null) {
True,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,643,if (pattern == null || pattern.length() == 0) {
False,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,690,engthLocaleFormatter llf = new LengthLocaleFormatter(
True,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,700,StyleFormatter llf = new StyleFormatter(
False,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,724, Special field type which derives a new field as a remainder.
False,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,726,tatic class RemainderType extends DateTimeFieldType {
False,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,727,rivate final DateTimeFieldType iWrappedType;
False,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,728,rivate final DateTimeFieldType iType;
False,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,729,rivate final int iDivisor;
False,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,731,rivate transient RemainderDateTimeField iRecent;
False,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,733,"emainderType(DateTimeFieldType wrappedType, DateTimeFieldType type, int divisor) {"
False,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,734,uper(type.getName());
False,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,735,WrappedType = wrappedType;
False,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,736,Type = type;
False,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,737,Divisor = divisor;
False,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,740,ublic DurationFieldType getDurationType() {
False,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,741,eturn iType.getDurationType();
False,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,744,ublic DurationFieldType getRangeDurationType() {
False,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,745,eturn iType.getRangeDurationType();
False,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,748,ublic DateTimeField getField(Chronology chrono) {
False,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,749,ateTimeField wrappedField = iWrappedType.getField(chrono);
False,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,750,emainderDateTimeField field = iRecent;
False,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,751,f (field != null && field.getWrappedField() == wrappedField) {
False,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,752,eturn field;
False,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,754,"ield = new RemainderDateTimeField(wrappedField, iType, iDivisor);"
False,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,755,Recent = field;
False,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,756,eturn field;
False,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,761,tatic class LengthLocaleFormatter
True,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,733,static class StyleFormatter
False,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,770,"engthLocaleFormatter(int dateStyle, int timeStyle, int type) {"
True,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,742,"StyleFormatter(int dateStyle, int timeStyle, int type) {"
False,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,815,tring key = Integer.toString(iType + iDateStyle << 4 + iTimeStyle << 8) + locale.toString();
True,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,787,locale = (locale == null ? Locale.getDefault() : locale);
True,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,JodaTime/src/java/org/joda/time/format/DateTimeFormat.java,788,String key = Integer.toString(iType + (iDateStyle << 4) + (iTimeStyle << 8)) + locale.toString();
False,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,705, @param pivot pivot year to use when parsing
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,705,* @param pivot  pivot year to use when parsing
False,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,709,eturn append0(new TwoDigitYear(pivot));
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,709,"return append0(new TwoDigitYear(DateTimeFieldType.year(), pivot));"
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,713,* Instructs the printer to emit a numeric weekyear field which always prints
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,714,* and parses two digits. A pivot year is used during parsing to determine
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,715,* the range of supported years as <code>(pivot - 50) .. (pivot + 49)</code>.
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,717,* <pre>
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,718,* pivot   supported range   00 is   20 is   40 is   60 is   80 is
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,720,* 1950      1900..1999      1900    1920    1940    1960    1980
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,721,* 1975      1925..2024      2000    2020    1940    1960    1980
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,722,* 2000      1950..2049      2000    2020    2040    1960    1980
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,723,* 2025      1975..2074      2000    2020    2040    2060    1980
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,724,* 2050      2000..2099      2000    2020    2040    2060    2080
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,725,* </pre>
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,727,* @param pivot  pivot weekyear to use when parsing
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,728,* @return this DateTimeFormatterBuilder
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,730,public DateTimeFormatterBuilder appendTwoDigitWeekyear(int pivot) {
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,731,"return append0(new TwoDigitYear(DateTimeFieldType.weekyear(), pivot));"
False,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,818,"eturn append0(new TimeZonePrinter(false), null);"
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,840,"return append0(new TimeZoneName(TimeZoneName.LONG_NAME), null);"
False,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,829,"eturn append0(new TimeZonePrinter(true), null);"
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,851,"return append0(new TimeZoneName(TimeZoneName.SHORT_NAME), null);"
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,855,* Instructs the printer to emit the identifier of the time zone.
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,856,* This field cannot currently be parsed.
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,858,* @return this DateTimeFormatterBuilder
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,860,public DateTimeFormatterBuilder appendTimeZoneId() {
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,861,"return append0(new TimeZoneName(TimeZoneName.ID), null);"
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1281,private final DateTimeFieldType iType;
False,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1251,woDigitYear(int pivot) {
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1284,"TwoDigitYear(DateTimeFieldType type, int pivot) {"
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1286,iType = type;
False,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1289,"ucket.saveField(DateTimeFieldType.year(), year);"
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1323,"bucket.saveField(iType, year);"
False,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1323,nt year = chrono.year().get(instant);
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1357,int year = iType.getField(chrono).get(instant);
False,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1354,f (partial.isSupported(DateTimeFieldType.year())) {
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1388,if (partial.isSupported(iType)) {
False,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1356,nt year = partial.get(DateTimeFieldType.year());
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,1390,int year = partial.get(iType);
False,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,2055,tatic class TimeZonePrinter
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,2089,static class TimeZoneName
False,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,2058,rivate final boolean iShortFormat;
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,2092,static final int LONG_NAME = 0;
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,2093,static final int SHORT_NAME = 1;
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,2094,static final int ID = 2;
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,2096,private final int iType;
False,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,2060,imeZonePrinter(boolean shortFormat) {
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,2098,TimeZoneName(int type) {
False,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,2062,ShortFormat = shortFormat;
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,2100,iType = type;
False,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,2066,eturn iShortFormat ? 4 : 20;
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,2104,return (iType == SHORT_NAME ? 4 : 20);
False,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,2085,f (iShortFormat) {
False,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,2086,"eturn displayZone.getShortName(instant, locale);"
False,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,2087, else {
False,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,2088,"eturn displayZone.getName(instant, locale);"
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,2123,switch (iType) {
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,2124,case LONG_NAME:
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,2125,"return displayZone.getName(instant, locale);"
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,2126,case SHORT_NAME:
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,2127,"return displayZone.getShortName(instant, locale);"
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,2128,case ID:
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,2129,return displayZone.getID();
True,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,JodaTime/src/java/org/joda/time/format/DateTimeFormatterBuilder.java,2131,"return """";"
True,JodaTime/src/test/org/joda/time/format/TestAll.java,JodaTime/src/test/org/joda/time/format/TestAll.java,40,suite.addTest(TestDateTimeFormatStyle.suite());
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,111,"dt = new DateTime(-123, 6, 9, 10, 20, 30, 40, UTC);"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,112,"assertEquals(dt.toString(), ""1"", f.print(dt));"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,127,"dt = new DateTime(-123, 6, 9, 10, 20, 30, 40, UTC);"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,128,"assertEquals(dt.toString(), ""124"", f.print(dt));  // 124th year of BCE"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,131,public void testFormat_yearOfEra_twoDigit() {
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,132,"DateTime dt = new DateTime(2004, 6, 9, 10, 20, 30, 40, UTC);"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,133,"DateTimeFormatter f = DateTimeFormat.forPattern(""YY"").withLocale(Locale.UK);"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,134,"assertEquals(dt.toString(), ""04"", f.print(dt));"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,136,"dt = new DateTime(-123, 6, 9, 10, 20, 30, 40, UTC);"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,137,"assertEquals(dt.toString(), ""23"", f.print(dt));"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,139,// current time set to 2002-06-09
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,140,f = f.withZone(UTC);
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,141,DateTime expect = null;
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,142,"expect = new DateTime(2004, 1, 1, 0, 0, 0, 0, UTC);"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,143,"assertEquals(expect, f.parseDateTime(""04""));"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,145,"expect = new DateTime(1922, 1, 1, 0, 0, 0, 0, UTC);"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,146,"assertEquals(expect, f.parseDateTime(""22""));"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,148,"expect = new DateTime(2021, 1, 1, 0, 0, 0, 0, UTC);"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,149,"assertEquals(expect, f.parseDateTime(""21""));"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,164,"dt = new DateTime(-123, 6, 9, 10, 20, 30, 40, UTC);"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,165,"assertEquals(dt.toString(), ""-123"", f.print(dt));"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,168,public void testFormat_year_twoDigit() {
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,169,"DateTime dt = new DateTime(2004, 6, 9, 10, 20, 30, 40, UTC);"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,170,"DateTimeFormatter f = DateTimeFormat.forPattern(""yy"").withLocale(Locale.UK);"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,171,"assertEquals(dt.toString(), ""04"", f.print(dt));"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,173,"dt = new DateTime(-123, 6, 9, 10, 20, 30, 40, UTC);"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,174,"assertEquals(dt.toString(), ""23"", f.print(dt));"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,176,// current time set to 2002-06-09
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,177,f = f.withZone(UTC);
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,178,DateTime expect = null;
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,179,"expect = new DateTime(2004, 1, 1, 0, 0, 0, 0, UTC);"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,180,"assertEquals(expect, f.parseDateTime(""04""));"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,182,"expect = new DateTime(1922, 1, 1, 0, 0, 0, 0, UTC);"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,183,"assertEquals(expect, f.parseDateTime(""22""));"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,185,"expect = new DateTime(2021, 1, 1, 0, 0, 0, 0, UTC);"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,186,"assertEquals(expect, f.parseDateTime(""21""));"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,201,"dt = new DateTime(-123, 6, 9, 10, 20, 30, 40, UTC);"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,202,"assertEquals(dt.toString(), ""-123"", f.print(dt));"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,205,public void testFormat_weekyearOfEra_twoDigit() {
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,206,"DateTime dt = new DateTime(2004, 6, 9, 10, 20, 30, 40, UTC);"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,207,"DateTimeFormatter f = DateTimeFormat.forPattern(""xx"").withLocale(Locale.UK);"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,208,"assertEquals(dt.toString(), ""04"", f.print(dt));"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,210,"dt = new DateTime(-123, 6, 9, 10, 20, 30, 40, UTC);"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,211,"assertEquals(dt.toString(), ""23"", f.print(dt));"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,213,// current time set to 2002-06-09
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,214,f = f.withZone(UTC);
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,215,DateTime expect = null;
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,216,"expect = new DateTime(2003, 12, 29, 0, 0, 0, 0, UTC);"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,217,"assertEquals(expect, f.parseDateTime(""04""));"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,219,"expect = new DateTime(1922, 1, 2, 0, 0, 0, 0, UTC);"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,220,"assertEquals(expect, f.parseDateTime(""22""));"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,222,"expect = new DateTime(2021, 1, 4, 0, 0, 0, 0, UTC);"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,223,"assertEquals(expect, f.parseDateTime(""21""));"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,472,public void testFormat_zoneLongText() {
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,473,"DateTime dt = new DateTime(2004, 6, 9, 10, 20, 30, 40, UTC);"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,474,"DateTimeFormatter f = DateTimeFormat.forPattern(""zzzz"").withLocale(Locale.UK);"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,475,"assertEquals(dt.toString(), ""Coordinated Universal Time"", f.print(dt));"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,477,dt = dt.withZone(NEWYORK);
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,478,"assertEquals(dt.toString(), ""Eastern Daylight Time"", f.print(dt));"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,480,dt = dt.withZone(TOKYO);
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,481,"assertEquals(dt.toString(), ""Japan Standard Time"", f.print(dt));"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,497,public void testFormat_zoneAmountColon() {
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,498,"DateTime dt = new DateTime(2004, 6, 9, 10, 20, 30, 40, UTC);"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,499,"DateTimeFormatter f = DateTimeFormat.forPattern(""ZZ"").withLocale(Locale.UK);"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,500,"assertEquals(dt.toString(), ""+00:00"", f.print(dt));"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,502,dt = dt.withZone(NEWYORK);
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,503,"assertEquals(dt.toString(), ""-04:00"", f.print(dt));"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,505,dt = dt.withZone(TOKYO);
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,506,"assertEquals(dt.toString(), ""+09:00"", f.print(dt));"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,509,public void testFormat_zoneAmountID() {
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,510,"DateTime dt = new DateTime(2004, 6, 9, 10, 20, 30, 40, UTC);"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,511,"DateTimeFormatter f = DateTimeFormat.forPattern(""ZZZ"").withLocale(Locale.UK);"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,512,"assertEquals(dt.toString(), ""UTC"", f.print(dt));"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,514,dt = dt.withZone(NEWYORK);
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,515,"assertEquals(dt.toString(), ""America/New_York"", f.print(dt));"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,517,dt = dt.withZone(TOKYO);
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,518,"assertEquals(dt.toString(), ""Asia/Tokyo"", f.print(dt));"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,528,public void testFormat_invalid() {
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,529,try {
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,530,DateTimeFormat.forPattern(null);
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,531,fail();
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,532,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,533,try {
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,534,"DateTimeFormat.forPattern("""");"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,535,fail();
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,536,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,537,try {
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,538,"DateTimeFormat.forPattern(""A"");"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,539,fail();
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,540,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,541,try {
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,542,"DateTimeFormat.forPattern(""dd/mm/AA"");"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,543,fail();
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormat.java,544,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,2,*  Copyright 2001-2005 Stephen Colebourne
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,4,"*  Licensed under the Apache License, Version 2.0 (the ""License"");"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,5,*  you may not use this file except in compliance with the License.
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,6,*  You may obtain a copy of the License at
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,8,*      http://www.apache.org/licenses/LICENSE-2.0
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,10,"*  Unless required by applicable law or agreed to in writing, software"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,11,"*  distributed under the License is distributed on an ""AS IS"" BASIS,"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,12,"*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,13,*  See the License for the specific language governing permissions and
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,14,*  limitations under the License.
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,16,package org.joda.time.format;
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,18,import java.text.DateFormat;
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,19,import java.util.Locale;
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,20,import java.util.TimeZone;
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,22,import junit.framework.TestCase;
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,23,import junit.framework.TestSuite;
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,25,import org.joda.time.DateTime;
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,26,import org.joda.time.DateTimeConstants;
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,27,import org.joda.time.DateTimeUtils;
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,28,import org.joda.time.DateTimeZone;
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,31,* This class is a Junit unit test for DateTimeFormat styles.
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,33,* @author Stephen Colebourne
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,35,public class TestDateTimeFormatStyle extends TestCase {
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,37,private static final Locale UK = Locale.UK;
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,38,private static final Locale US = Locale.US;
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,39,private static final Locale FRANCE = Locale.FRANCE;
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,40,private static final DateTimeZone UTC = DateTimeZone.UTC;
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,41,"private static final DateTimeZone PARIS = DateTimeZone.forID(""Europe/Paris"");"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,42,"private static final DateTimeZone LONDON = DateTimeZone.forID(""Europe/London"");"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,43,"private static final DateTimeZone TOKYO = DateTimeZone.forID(""Asia/Tokyo"");"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,44,"private static final DateTimeZone NEWYORK = DateTimeZone.forID(""America/New_York"");"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,46,long y2002days = 365 + 365 + 366 + 365 + 365 + 365 + 366 + 365 + 365 + 365 +
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,47,366 + 365 + 365 + 365 + 366 + 365 + 365 + 365 + 366 + 365 +
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,48,365 + 365 + 366 + 365 + 365 + 365 + 366 + 365 + 365 + 365 +
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,49,366 + 365;
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,50,// 2002-06-09
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,51,private long TEST_TIME_NOW =
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,52,(y2002days + 31L + 28L + 31L + 30L + 31L + 9L -1L) * DateTimeConstants.MILLIS_PER_DAY;
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,54,private DateTimeZone originalDateTimeZone = null;
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,55,private TimeZone originalTimeZone = null;
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,56,private Locale originalLocale = null;
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,58,public static void main(String[] args) {
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,59,junit.textui.TestRunner.run(suite());
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,62,public static TestSuite suite() {
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,63,return new TestSuite(TestDateTimeFormatStyle.class);
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,66,public TestDateTimeFormatStyle(String name) {
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,67,super(name);
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,70,protected void setUp() throws Exception {
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,71,DateTimeUtils.setCurrentMillisFixed(TEST_TIME_NOW);
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,72,originalDateTimeZone = DateTimeZone.getDefault();
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,73,originalTimeZone = TimeZone.getDefault();
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,74,originalLocale = Locale.getDefault();
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,75,DateTimeZone.setDefault(LONDON);
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,76,"TimeZone.setDefault(TimeZone.getTimeZone(""Europe/London""));"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,77,Locale.setDefault(UK);
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,80,protected void tearDown() throws Exception {
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,81,DateTimeUtils.setCurrentMillisSystem();
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,82,DateTimeZone.setDefault(originalDateTimeZone);
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,83,TimeZone.setDefault(originalTimeZone);
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,84,Locale.setDefault(originalLocale);
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,85,originalDateTimeZone = null;
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,86,originalTimeZone = null;
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,87,originalLocale = null;
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,91,public void testForStyle_stringLengths() {
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,92,try {
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,93,DateTimeFormat.forStyle(null);
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,94,fail();
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,95,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,96,try {
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,97,"DateTimeFormat.forStyle("""");"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,98,fail();
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,99,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,100,try {
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,101,"DateTimeFormat.forStyle(""S"");"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,102,fail();
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,103,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,104,try {
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,105,"DateTimeFormat.forStyle(""SSS"");"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,106,fail();
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,107,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,110,public void testForStyle_invalidStrings() {
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,111,try {
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,112,"DateTimeFormat.forStyle(""AA"");"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,113,fail();
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,114,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,115,try {
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,116,"DateTimeFormat.forStyle(""--"");"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,117,fail();
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,118,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,119,try {
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,120,"DateTimeFormat.forStyle(""ss"");"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,121,fail();
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,122,} catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,126,public void testForStyle_shortDate() throws Exception {
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,127,DateTimeFormatter f = DateTimeFormat.shortDate();
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,128,"DateTimeFormatter g = DateTimeFormat.forStyle(""S-"");"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,129,"assertSame(g, f);"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,130,"DateTime dt = new DateTime(2004, 6, 9, 10, 20, 30, 0);"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,131,"String expect = DateFormat.getDateInstance(DateFormat.SHORT, UK).format(dt.toDate());"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,132,"assertEquals(expect, f.print(dt));"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,133,"expect = DateFormat.getDateInstance(DateFormat.SHORT, US).format(dt.toDate());"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,134,"assertEquals(expect, f.withLocale(US).print(dt));"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,135,"expect = DateFormat.getDateInstance(DateFormat.SHORT, FRANCE).format(dt.toDate());"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,136,"assertEquals(expect, f.withLocale(FRANCE).print(dt));"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,138,DateTime date = new DateTime(
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,139,"DateFormat.getDateInstance(DateFormat.SHORT, FRANCE).parse(expect));"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,140,"assertEquals(date, f.withLocale(FRANCE).parseDateTime(expect));"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,143,public void testForStyle_shortTime() throws Exception {
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,144,DateTimeFormatter f = DateTimeFormat.shortTime();
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,145,"DateTimeFormatter g = DateTimeFormat.forStyle(""-S"");"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,146,"assertSame(g, f);"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,147,"DateTime dt = new DateTime(2004, 6, 9, 10, 20, 30, 0);"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,148,"String expect = DateFormat.getTimeInstance(DateFormat.SHORT, UK).format(dt.toDate());"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,149,"assertEquals(expect, f.print(dt));"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,150,"expect = DateFormat.getTimeInstance(DateFormat.SHORT, US).format(dt.toDate());"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,151,"assertEquals(expect, f.withLocale(US).print(dt));"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,152,"expect = DateFormat.getTimeInstance(DateFormat.SHORT, FRANCE).format(dt.toDate());"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,153,"assertEquals(expect, f.withLocale(FRANCE).print(dt));"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,155,DateTime date = new DateTime(
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,156,"DateFormat.getTimeInstance(DateFormat.SHORT, FRANCE).parse(expect));"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,157,"assertEquals(date, f.withLocale(FRANCE).parseDateTime(expect));"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,160,public void testForStyle_shortDateTime() throws Exception {
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,161,DateTimeFormatter f = DateTimeFormat.shortDateTime();
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,162,"DateTimeFormatter g = DateTimeFormat.forStyle(""SS"");"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,163,"assertSame(g, f);"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,164,"DateTime dt = new DateTime(2004, 6, 9, 10, 20, 30, 0);"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,165,"String expect = DateFormat.getDateTimeInstance(DateFormat.SHORT, DateFormat.SHORT, UK).format(dt.toDate());"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,166,"assertEquals(expect, f.print(dt));"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,167,"expect = DateFormat.getDateTimeInstance(DateFormat.SHORT, DateFormat.SHORT, US).format(dt.toDate());"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,168,"assertEquals(expect, f.withLocale(US).print(dt));"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,169,"expect = DateFormat.getDateTimeInstance(DateFormat.SHORT, DateFormat.SHORT, FRANCE).format(dt.toDate());"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,170,"assertEquals(expect, f.withLocale(FRANCE).print(dt));"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,172,DateTime date = new DateTime(
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,173,"DateFormat.getDateTimeInstance(DateFormat.SHORT, DateFormat.SHORT, FRANCE).parse(expect));"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,174,"assertEquals(date, f.withLocale(FRANCE).parseDateTime(expect));"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,178,public void testForStyle_mediumDate() throws Exception {
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,179,DateTimeFormatter f = DateTimeFormat.mediumDate();
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,180,"DateTimeFormatter g = DateTimeFormat.forStyle(""M-"");"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,181,"assertSame(g, f);"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,182,"DateTime dt = new DateTime(2004, 6, 9, 10, 20, 30, 0);"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,183,"String expect = DateFormat.getDateInstance(DateFormat.MEDIUM, UK).format(dt.toDate());"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,184,"assertEquals(expect, f.print(dt));"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,185,"expect = DateFormat.getDateInstance(DateFormat.MEDIUM, US).format(dt.toDate());"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,186,"assertEquals(expect, f.withLocale(US).print(dt));"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,187,"expect = DateFormat.getDateInstance(DateFormat.MEDIUM, FRANCE).format(dt.toDate());"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,188,"assertEquals(expect, f.withLocale(FRANCE).print(dt));"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,191,public void testForStyle_mediumTime() throws Exception {
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,192,DateTimeFormatter f = DateTimeFormat.mediumTime();
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,193,"DateTimeFormatter g = DateTimeFormat.forStyle(""-M"");"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,194,"assertSame(g, f);"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,195,"DateTime dt = new DateTime(2004, 6, 9, 10, 20, 30, 0);"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,196,"String expect = DateFormat.getTimeInstance(DateFormat.MEDIUM, UK).format(dt.toDate());"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,197,"assertEquals(expect, f.print(dt));"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,198,"expect = DateFormat.getTimeInstance(DateFormat.MEDIUM, US).format(dt.toDate());"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,199,"assertEquals(expect, f.withLocale(US).print(dt));"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,200,"expect = DateFormat.getTimeInstance(DateFormat.MEDIUM, FRANCE).format(dt.toDate());"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,201,"assertEquals(expect, f.withLocale(FRANCE).print(dt));"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,204,public void testForStyle_mediumDateTime() throws Exception {
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,205,DateTimeFormatter f = DateTimeFormat.mediumDateTime();
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,206,"DateTimeFormatter g = DateTimeFormat.forStyle(""MM"");"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,207,"assertSame(g, f);"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,208,"DateTime dt = new DateTime(2004, 6, 9, 10, 20, 30, 0);"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,209,"String expect = DateFormat.getDateTimeInstance(DateFormat.MEDIUM, DateFormat.MEDIUM, UK).format(dt.toDate());"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,210,"assertEquals(expect, f.print(dt));"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,211,"expect = DateFormat.getDateTimeInstance(DateFormat.MEDIUM, DateFormat.MEDIUM, US).format(dt.toDate());"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,212,"assertEquals(expect, f.withLocale(US).print(dt));"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,213,"expect = DateFormat.getDateTimeInstance(DateFormat.MEDIUM, DateFormat.MEDIUM, FRANCE).format(dt.toDate());"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,214,"assertEquals(expect, f.withLocale(FRANCE).print(dt));"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,218,public void testForStyle_longDate() throws Exception {
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,219,DateTimeFormatter f = DateTimeFormat.longDate();
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,220,"DateTimeFormatter g = DateTimeFormat.forStyle(""L-"");"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,221,"assertSame(g, f);"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,222,"DateTime dt = new DateTime(2004, 6, 9, 10, 20, 30, 0);"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,223,"String expect = DateFormat.getDateInstance(DateFormat.LONG, UK).format(dt.toDate());"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,224,"assertEquals(expect, f.print(dt));"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,225,"expect = DateFormat.getDateInstance(DateFormat.LONG, US).format(dt.toDate());"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,226,"assertEquals(expect, f.withLocale(US).print(dt));"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,227,"expect = DateFormat.getDateInstance(DateFormat.LONG, FRANCE).format(dt.toDate());"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,228,"assertEquals(expect, f.withLocale(FRANCE).print(dt));"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,231,public void testForStyle_longTime() throws Exception {
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,232,DateTimeFormatter f = DateTimeFormat.longTime();
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,233,"DateTimeFormatter g = DateTimeFormat.forStyle(""-L"");"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,234,"assertSame(g, f);"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,235,"DateTime dt = new DateTime(2004, 6, 9, 10, 20, 30, 0);"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,236,"String expect = DateFormat.getTimeInstance(DateFormat.LONG, UK).format(dt.toDate());"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,237,"assertEquals(expect, f.print(dt));"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,238,"expect = DateFormat.getTimeInstance(DateFormat.LONG, US).format(dt.toDate());"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,239,"assertEquals(expect, f.withLocale(US).print(dt));"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,240,"expect = DateFormat.getTimeInstance(DateFormat.LONG, FRANCE).format(dt.toDate());"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,241,"assertEquals(expect, f.withLocale(FRANCE).print(dt));"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,244,public void testForStyle_longDateTime() throws Exception {
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,245,DateTimeFormatter f = DateTimeFormat.longDateTime();
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,246,"DateTimeFormatter g = DateTimeFormat.forStyle(""LL"");"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,247,"assertSame(g, f);"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,248,"DateTime dt = new DateTime(2004, 6, 9, 10, 20, 30, 0);"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,249,"String expect = DateFormat.getDateTimeInstance(DateFormat.LONG, DateFormat.LONG, UK).format(dt.toDate());"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,250,"assertEquals(expect, f.print(dt));"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,251,"expect = DateFormat.getDateTimeInstance(DateFormat.LONG, DateFormat.LONG, US).format(dt.toDate());"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,252,"assertEquals(expect, f.withLocale(US).print(dt));"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,253,"expect = DateFormat.getDateTimeInstance(DateFormat.LONG, DateFormat.LONG, FRANCE).format(dt.toDate());"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,254,"assertEquals(expect, f.withLocale(FRANCE).print(dt));"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,258,public void testForStyle_fullDate() throws Exception {
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,259,DateTimeFormatter f = DateTimeFormat.fullDate();
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,260,"DateTimeFormatter g = DateTimeFormat.forStyle(""F-"");"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,261,"assertSame(g, f);"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,262,"DateTime dt = new DateTime(2004, 6, 9, 10, 20, 30, 0);"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,263,"String expect = DateFormat.getDateInstance(DateFormat.FULL, UK).format(dt.toDate());"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,264,"assertEquals(expect, f.print(dt));"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,265,"expect = DateFormat.getDateInstance(DateFormat.FULL, US).format(dt.toDate());"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,266,"assertEquals(expect, f.withLocale(US).print(dt));"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,267,"expect = DateFormat.getDateInstance(DateFormat.FULL, FRANCE).format(dt.toDate());"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,268,"assertEquals(expect, f.withLocale(FRANCE).print(dt));"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,271,public void testForStyle_fullTime() throws Exception {
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,272,DateTimeFormatter f = DateTimeFormat.fullTime();
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,273,"DateTimeFormatter g = DateTimeFormat.forStyle(""-F"");"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,274,"assertSame(g, f);"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,275,"DateTime dt = new DateTime(2004, 6, 9, 10, 20, 30, 0);"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,276,"String expect = DateFormat.getTimeInstance(DateFormat.FULL, UK).format(dt.toDate());"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,277,"assertEquals(expect, f.print(dt));"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,278,"expect = DateFormat.getTimeInstance(DateFormat.FULL, US).format(dt.toDate());"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,279,"assertEquals(expect, f.withLocale(US).print(dt));"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,280,"expect = DateFormat.getTimeInstance(DateFormat.FULL, FRANCE).format(dt.toDate());"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,281,"assertEquals(expect, f.withLocale(FRANCE).print(dt));"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,284,public void testForStyle_fullDateTime() throws Exception {
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,285,DateTimeFormatter f = DateTimeFormat.fullDateTime();
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,286,"DateTimeFormatter g = DateTimeFormat.forStyle(""FF"");"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,287,"assertSame(g, f);"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,288,"DateTime dt = new DateTime(2004, 6, 9, 10, 20, 30, 0);"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,289,"String expect = DateFormat.getDateTimeInstance(DateFormat.FULL, DateFormat.FULL, UK).format(dt.toDate());"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,290,"assertEquals(expect, f.print(dt));"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,291,"expect = DateFormat.getDateTimeInstance(DateFormat.FULL, DateFormat.FULL, US).format(dt.toDate());"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,292,"assertEquals(expect, f.withLocale(US).print(dt));"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,293,"expect = DateFormat.getDateTimeInstance(DateFormat.FULL, DateFormat.FULL, FRANCE).format(dt.toDate());"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,294,"assertEquals(expect, f.withLocale(FRANCE).print(dt));"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,298,public void testForStyle_shortMediumDateTime() throws Exception {
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,299,"DateTimeFormatter f = DateTimeFormat.forStyle(""SM"");"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,300,"DateTime dt = new DateTime(2004, 6, 9, 10, 20, 30, 0);"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,301,"String expect = DateFormat.getDateTimeInstance(DateFormat.SHORT, DateFormat.MEDIUM, UK).format(dt.toDate());"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,302,"assertEquals(expect, f.print(dt));"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,303,"expect = DateFormat.getDateTimeInstance(DateFormat.SHORT, DateFormat.MEDIUM, US).format(dt.toDate());"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,304,"assertEquals(expect, f.withLocale(US).print(dt));"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,305,"expect = DateFormat.getDateTimeInstance(DateFormat.SHORT, DateFormat.MEDIUM, FRANCE).format(dt.toDate());"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,306,"assertEquals(expect, f.withLocale(FRANCE).print(dt));"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,309,public void testForStyle_shortLongDateTime() throws Exception {
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,310,"DateTimeFormatter f = DateTimeFormat.forStyle(""SL"");"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,311,"DateTime dt = new DateTime(2004, 6, 9, 10, 20, 30, 0);"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,312,"String expect = DateFormat.getDateTimeInstance(DateFormat.SHORT, DateFormat.LONG, UK).format(dt.toDate());"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,313,"assertEquals(expect, f.print(dt));"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,314,"expect = DateFormat.getDateTimeInstance(DateFormat.SHORT, DateFormat.LONG, US).format(dt.toDate());"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,315,"assertEquals(expect, f.withLocale(US).print(dt));"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,316,"expect = DateFormat.getDateTimeInstance(DateFormat.SHORT, DateFormat.LONG, FRANCE).format(dt.toDate());"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,317,"assertEquals(expect, f.withLocale(FRANCE).print(dt));"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,320,public void testForStyle_shortFullDateTime() throws Exception {
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,321,"DateTimeFormatter f = DateTimeFormat.forStyle(""SF"");"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,322,"DateTime dt = new DateTime(2004, 6, 9, 10, 20, 30, 0);"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,323,"String expect = DateFormat.getDateTimeInstance(DateFormat.SHORT, DateFormat.FULL, UK).format(dt.toDate());"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,324,"assertEquals(expect, f.print(dt));"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,325,"expect = DateFormat.getDateTimeInstance(DateFormat.SHORT, DateFormat.FULL, US).format(dt.toDate());"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,326,"assertEquals(expect, f.withLocale(US).print(dt));"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,327,"expect = DateFormat.getDateTimeInstance(DateFormat.SHORT, DateFormat.FULL, FRANCE).format(dt.toDate());"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,328,"assertEquals(expect, f.withLocale(FRANCE).print(dt));"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,332,public void testForStyle_mediumShortDateTime() throws Exception {
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,333,"DateTimeFormatter f = DateTimeFormat.forStyle(""MS"");"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,334,"DateTime dt = new DateTime(2004, 6, 9, 10, 20, 30, 0);"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,335,"String expect = DateFormat.getDateTimeInstance(DateFormat.MEDIUM, DateFormat.SHORT, UK).format(dt.toDate());"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,336,"assertEquals(expect, f.print(dt));"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,337,"expect = DateFormat.getDateTimeInstance(DateFormat.MEDIUM, DateFormat.SHORT, US).format(dt.toDate());"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,338,"assertEquals(expect, f.withLocale(US).print(dt));"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,339,"expect = DateFormat.getDateTimeInstance(DateFormat.MEDIUM, DateFormat.SHORT, FRANCE).format(dt.toDate());"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,340,"assertEquals(expect, f.withLocale(FRANCE).print(dt));"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,343,public void testForStyle_mediumLongDateTime() throws Exception {
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,344,"DateTimeFormatter f = DateTimeFormat.forStyle(""ML"");"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,345,"DateTime dt = new DateTime(2004, 6, 9, 10, 20, 30, 0);"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,346,"String expect = DateFormat.getDateTimeInstance(DateFormat.MEDIUM, DateFormat.LONG, UK).format(dt.toDate());"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,347,"assertEquals(expect, f.print(dt));"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,348,"expect = DateFormat.getDateTimeInstance(DateFormat.MEDIUM, DateFormat.LONG, US).format(dt.toDate());"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,349,"assertEquals(expect, f.withLocale(US).print(dt));"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,350,"expect = DateFormat.getDateTimeInstance(DateFormat.MEDIUM, DateFormat.LONG, FRANCE).format(dt.toDate());"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,351,"assertEquals(expect, f.withLocale(FRANCE).print(dt));"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,354,public void testForStyle_mediumFullDateTime() throws Exception {
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,355,"DateTimeFormatter f = DateTimeFormat.forStyle(""MF"");"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,356,"DateTime dt = new DateTime(2004, 6, 9, 10, 20, 30, 0);"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,357,"String expect = DateFormat.getDateTimeInstance(DateFormat.MEDIUM, DateFormat.FULL, UK).format(dt.toDate());"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,358,"assertEquals(expect, f.print(dt));"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,359,"expect = DateFormat.getDateTimeInstance(DateFormat.MEDIUM, DateFormat.FULL, US).format(dt.toDate());"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,360,"assertEquals(expect, f.withLocale(US).print(dt));"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,361,"expect = DateFormat.getDateTimeInstance(DateFormat.MEDIUM, DateFormat.FULL, FRANCE).format(dt.toDate());"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatStyle.java,362,"assertEquals(expect, f.withLocale(FRANCE).print(dt));"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatter.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatter.java,244,fail();
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatter.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatter.java,254,fail();
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatter.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatter.java,267,fail();
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatter.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatter.java,362,fail();
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatter.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatter.java,459,fail();
False,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatter.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatter.java,456,ry {
False,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatter.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatter.java,457,".parseInto(result, ""ABC"", 0);"
False,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatter.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatter.java,458, catch (IllegalArgumentException ex) {}
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatter.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatter.java,462,"assertEquals(~0, g.parseInto(result, ""ABC"", 0));"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatter.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatter.java,463,"assertEquals(~10, g.parseInto(result, ""2004-06-09"", 0));"
True,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatter.java,JodaTime/src/test/org/joda/time/format/TestDateTimeFormatter.java,464,"assertEquals(~13, g.parseInto(result, ""XX2004-06-09T"", 2));"
