is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/joda/time/DateTimeZone.java,src/main/java/org/joda/time/DateTimeZone.java,325,onvId = zone.getDisplayName();
True,src/main/java/org/joda/time/DateTimeZone.java,src/main/java/org/joda/time/DateTimeZone.java,325,convId = zone.getID();
True,src/test/java/org/joda/time/TestDateTimeZone.java,src/test/java/org/joda/time/TestDateTimeZone.java,366,"zone = DateTimeZone.forTimeZone(TimeZone.getTimeZone(""GMT+1:23""));"
True,src/test/java/org/joda/time/TestDateTimeZone.java,src/test/java/org/joda/time/TestDateTimeZone.java,367,"assertEquals(""+01:23"", zone.getID());"
True,src/test/java/org/joda/time/TestDateTimeZone.java,src/test/java/org/joda/time/TestDateTimeZone.java,368,"assertEquals(DateTimeConstants.MILLIS_PER_HOUR + (23L * DateTimeConstants.MILLIS_PER_MINUTE),"
True,src/test/java/org/joda/time/TestDateTimeZone.java,src/test/java/org/joda/time/TestDateTimeZone.java,369,zone.getOffset(TEST_TIME_SUMMER));
True,src/test/java/org/joda/time/TestDateTimeZone.java,src/test/java/org/joda/time/TestDateTimeZone.java,375,"zone = DateTimeZone.forTimeZone(TimeZone.getTimeZone(""GMT+2""));"
True,src/test/java/org/joda/time/TestDateTimeZone.java,src/test/java/org/joda/time/TestDateTimeZone.java,376,"assertEquals(""+02:00"", zone.getID());"
True,src/test/java/org/joda/time/TestDateTimeZone.java,src/test/java/org/joda/time/TestDateTimeZone.java,377,"assertEquals((2L * DateTimeConstants.MILLIS_PER_HOUR), zone.getOffset(TEST_TIME_SUMMER));"
