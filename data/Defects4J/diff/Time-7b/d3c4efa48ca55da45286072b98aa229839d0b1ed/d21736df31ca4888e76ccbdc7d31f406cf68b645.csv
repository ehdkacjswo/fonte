is_addition,old_file_path,new_file_path,line_num,content
False,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,2," Joda Software License, Version 1.0"
False,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,5, Copyright (c) 2001-2004 Stephen Colebourne.
False,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,6, All rights reserved.
False,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,8," Redistribution and use in source and binary forms, with or without"
False,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,9," modification, are permitted provided that the following conditions"
False,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,10, are met:
False,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,12, 1. Redistributions of source code must retain the above copyright
False,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,13,"    notice, this list of conditions and the following disclaimer."
False,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,15, 2. Redistributions in binary form must reproduce the above copyright
False,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,16,"    notice, this list of conditions and the following disclaimer in"
False,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,17,    the documentation and/or other materials provided with the
False,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,18,    distribution.
False,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,20," 3. The end-user documentation included with the redistribution,"
False,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,21,"    if any, must include the following acknowledgment:"
False,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,22,"       ""This product includes software developed by the"
False,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,23,"        Joda project (http://www.joda.org/)."""
False,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,24,"    Alternately, this acknowledgment may appear in the software itself,"
False,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,25,    if and wherever such third-party acknowledgments normally appear.
False,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,27," 4. The name ""Joda"" must not be used to endorse or promote products"
False,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,28,    derived from this software without prior written permission. For
False,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,29,"    written permission, please contact licence@joda.org."
False,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,31," 5. Products derived from this software may not be called ""Joda"","
False,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,32,"    nor may ""Joda"" appear in their name, without prior written"
False,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,33,    permission of the Joda project.
False,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,35, THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
False,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,36," WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
False,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,37, OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
False,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,38, DISCLAIMED.  IN NO EVENT SHALL THE JODA AUTHORS OR THE PROJECT
False,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,39," CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
False,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,40," SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
False,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,41," LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
False,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,42," USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
False,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,43," ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
False,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,44, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
False,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,45," OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
False,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,46, SUCH DAMAGE.
False,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,49, This software consists of voluntary contributions made by many
False,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,50, individuals on behalf of the Joda project and was originally
False,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,51, created by Stephen Colebourne <scolebourne@joda.org>. For more
False,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,52," information on the Joda project, please see <http://www.joda.org/>."
False,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,54,ackage org.joda.test.time;
False,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,56,mport java.lang.reflect.Constructor;
False,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,57,mport java.lang.reflect.InvocationTargetException;
False,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,58,mport java.util.Calendar;
False,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,59,mport java.util.Date;
False,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,60,mport java.util.GregorianCalendar;
False,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,61,mport java.util.Locale;
False,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,63,mport org.joda.time.AbstractInstant;
False,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,65, This class is a Junit unit test base class for
False,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,66, Instant implementations.
False,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,68, @author Stephen Colebourne
False,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,69, @author Guy Allard
False,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,71,ublic abstract class AbstractTestAbstractInstant
False,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,72,xtends AbstractTestReadableInstant {
False,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,74,rivate static Class cls = AbstractInstant.class;
False,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,77, AbstractTestAbstractInstant constructor.
False,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,78, A constructor with this signature
False,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,79, is required for Junit testing.
False,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,80, @param name
False,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,82,ublic AbstractTestAbstractInstant(String name) {
False,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,83,"uper(name, cls);"
False,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,86, AbstractTestAbstractInstant constructor.
False,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,87, A constructor with this signature
False,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,88, is required for mapping the system inheritance tree to the
False,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,89, test class inheritance tree.
False,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,90, @param name The human readable name of the class.
False,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,91, @param cls A reference to the Class being tested.
False,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,93,"ublic AbstractTestAbstractInstant(String name, Class cls) {"
False,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,94,"uper(name, cls);"
False,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,95,bstractTestAbstractInstant.cls = cls;
False,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,99, Junit <code>setUp()</code> method.
False,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,101,rotected void setUp() /* throws Exception */ {
False,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,102,uper.setUp();
False,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,106, Junit <code>tearDown()</code> method.
False,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,108,rotected void tearDown() /* throws Exception */ {
False,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,109,uper.tearDown();
False,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,113, Create a AbstractInstant by reflection
False,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,115,"rivate AbstractInstant createAI(Class reflectClass, Class[] types, Object[] args) throws Throwable {"
False,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,116,"eturn (AbstractInstant) create(reflectClass, types, args);"
False,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,120,/ Tests of non-CTORs
False,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,122,ublic void testToDate() throws Throwable {
False,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,123,"bstractInstant ri = createAI(cls, null, null);"
False,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,124,ate date = ri.toDate();
False,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,125,"ssertEquals(ri.getMillis(), date.getTime());"
False,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,128,ublic void testToCalendar() throws Throwable {
False,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,129,"bstractInstant ri = createAI(cls, null, null);"
False,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,130,alendar cal = ri.toCalendar(Locale.UK);
False,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,131,"ssertEquals(ri.getMillis(), cal.getTime().getTime());"
False,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,134,ublic void testToCalendarEx() throws Throwable {
False,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,135,ry {
False,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,136,"bstractInstant ri = createAI(cls, null, null);"
False,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,137,alendar cal = ri.toCalendar(null);
False,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,138,ail();
False,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,139, catch (IllegalArgumentException ex) {}
False,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,142,ublic void testToGregorianCalendar() throws Throwable {
False,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,143,"bstractInstant ri = createAI(cls, null, null);"
False,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,144,regorianCalendar cal = ri.toGregorianCalendar();
False,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestAbstractInstant.java,145,"ssertEquals(ri.getMillis(), cal.getTime().getTime());"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,2," Joda Software License, Version 1.0"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,5, Copyright (c) 2001-2004 Stephen Colebourne.
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,6, All rights reserved.
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,8," Redistribution and use in source and binary forms, with or without"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,9," modification, are permitted provided that the following conditions"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,10, are met:
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,12, 1. Redistributions of source code must retain the above copyright
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,13,"    notice, this list of conditions and the following disclaimer."
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,15, 2. Redistributions in binary form must reproduce the above copyright
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,16,"    notice, this list of conditions and the following disclaimer in"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,17,    the documentation and/or other materials provided with the
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,18,    distribution.
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,20," 3. The end-user documentation included with the redistribution,"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,21,"    if any, must include the following acknowledgment:"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,22,"       ""This product includes software developed by the"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,23,"        Joda project (http://www.joda.org/)."""
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,24,"    Alternately, this acknowledgment may appear in the software itself,"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,25,    if and wherever such third-party acknowledgments normally appear.
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,27," 4. The name ""Joda"" must not be used to endorse or promote products"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,28,    derived from this software without prior written permission. For
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,29,"    written permission, please contact licence@joda.org."
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,31," 5. Products derived from this software may not be called ""Joda"","
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,32,"    nor may ""Joda"" appear in their name, without prior written"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,33,    permission of the Joda project.
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,35, THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,36," WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,37, OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,38, DISCLAIMED.  IN NO EVENT SHALL THE JODA AUTHORS OR THE PROJECT
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,39," CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,40," SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,41," LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,42," USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,43," ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,44, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,45," OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,46, SUCH DAMAGE.
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,49, This software consists of voluntary contributions made by many
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,50, individuals on behalf of the Joda project and was originally
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,51, created by Stephen Colebourne <scolebourne@joda.org>. For more
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,52," information on the Joda project, please see <http://www.joda.org/>."
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,54,ackage org.joda.test.time;
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,56,mport java.util.Calendar;
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,57,mport java.util.Date;
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,58,mport java.util.TimeZone;
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,60,mport org.joda.time.Chronology;
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,61,mport org.joda.time.DateTimeZone;
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,62,mport org.joda.time.Instant;
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,63,mport org.joda.time.ReadableInstant;
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,64,mport org.joda.time.chrono.GJChronology;
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,65,mport org.joda.time.chrono.ISOChronology;
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,68, This class is a Junit unit test base class for
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,69," DateOnly, TimeOnly, DateTime, and MutableDateTime implementations."
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,70, <p>This class handles testing of CTORs for the named classes.
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,72, @author Stephen Colebourne
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,73, @author Guy Allard
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,75,ublic abstract class AbstractTestDateTimeCommon
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,76,xtends AbstractTestAbstractInstant {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,78,/ The class to be tested.
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,79,rivate Class cls;
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,81,"rivate static final DateTimeZone ZONE = DateTimeZone.getInstance(""+02:00"");"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,84, AbstractTestDateTimeCommon constructor.
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,85, A constructor with this signature
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,86, is required for mapping the system inheritance tree to the
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,87, test class inheritance tree.
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,88, @param name The human readable name of the class.
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,89, @param cls A reference to the Class being tested.
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,91,"ublic AbstractTestDateTimeCommon(String name, Class cls) {"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,92,"uper(name, cls);"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,93,his.cls = cls;
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,97, Junit <code>setUp()</code> method.
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,99,rotected void setUp() /* throws Exception */ {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,100,uper.setUp();
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,104, Junit <code>tearDown()</code> method.
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,106,rotected void tearDown() /* throws Exception */ {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,107,uper.tearDown();
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,113, Test the CTOR with signature: (Chronology).
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,115,ublic void testCurrentTimeChronologyConstructor() throws Throwable {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,116,ong currentMillis = System.currentTimeMillis();
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,117,"eadableInstant ri = create(cls,"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,118,"ew Class[] {Chronology.class},"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,119,ew Object[] {GJChronology.getInstance(ZONE)});
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,120,"urrentMillis = round(currentMillis, ZONE.toTimeZone());"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,121,ssertTrue(ri.getMillis() - currentMillis < 1000);
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,122,"ssertEquals(GJChronology.getInstance(ZONE), ri.getChronology());"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,126," Test the CTOR with signature: (Chronology), null chronology."
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,128,ublic void testCurrentTimeChronologyNullConstructor() throws Throwable {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,129,ong currentMillis = System.currentTimeMillis();
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,130,"eadableInstant ri = create(cls, new Class[] {Chronology.class}, new Object[] {null});"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,131,"urrentMillis = round(currentMillis, DateTimeZone.getDefault().toTimeZone());"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,132,ssertTrue(ri.getMillis() - currentMillis < 20);
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,133,"ssertEquals(ISOChronology.getInstance(DateTimeZone.getDefault()), ri.getChronology());"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,139," Test the CTOR with signature: (long, Chronology)."
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,141,ublic void testMillisChronologyConstructor() throws Throwable {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,142,ong currentMillis = System.currentTimeMillis() + 1000;
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,143,"eadableInstant ri = create(cls,"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,144,"ew Class[] {Long.TYPE, Chronology.class},"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,145,"ew Object[] {new Long(currentMillis), GJChronology.getInstance(ZONE)});"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,146,"urrentMillis = round(currentMillis, ZONE.toTimeZone());"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,147,"ssertEquals(new Instant(currentMillis), new Instant(ri.getMillis()));"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,148,"ssertEquals(GJChronology.getInstance(ZONE), ri.getChronology());"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,152," Test the CTOR with signature: (long, Chronology), null chronology."
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,154,ublic void testMillisChronologyNullConstructor() throws Throwable {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,155,ong currentMillis = System.currentTimeMillis() + 1000;
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,156,"eadableInstant ri = create(cls,"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,157,"ew Class[] {Long.TYPE, Chronology.class},"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,158,"ew Object[] {new Long(currentMillis), null});"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,159,"urrentMillis = round(currentMillis, DateTimeZone.getDefault().toTimeZone());"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,160,"ssertEquals(new Instant(currentMillis), new Instant(ri.getMillis()));"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,161,"ssertEquals(ISOChronology.getInstance(DateTimeZone.getDefault()), ri.getChronology());"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,165," Test the CTOR with signature: (long, Chronology). Fixed time 1"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,167,ublic void testMillisChronologyConstructorTime1() throws Throwable {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,168,ong currentMillis = 20L * 24 * 60 * 60 * 1000 + 5L * 60 * 60 * 1000; // 20 days 5hrs
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,169,"eadableInstant ri = create(cls,"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,170,"ew Class[] {Long.TYPE, Chronology.class},"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,171,"ew Object[] {new Long(currentMillis), GJChronology.getInstance(ZONE)});"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,172,"urrentMillis = round(currentMillis, ZONE.toTimeZone());"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,173,"ssertEquals(new Instant(currentMillis), new Instant(ri.getMillis()));"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,174,"ssertEquals(GJChronology.getInstance(ZONE), ri.getChronology());"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,178," Test the CTOR with signature: (long, Chronology). Fixed time 2"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,180,ublic void testMillisChronologyConstructorTime2() throws Throwable {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,181,ong currentMillis = 20L * 24 * 60 * 60 * 1000 + 22L * 60 * 60 * 1000; // 20 days 22hrs
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,182,"eadableInstant ri = create(cls,"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,183,"ew Class[] {Long.TYPE, Chronology.class},"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,184,"ew Object[] {new Long(currentMillis), GJChronology.getInstance(ZONE)});"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,185,"urrentMillis = round(currentMillis, ZONE.toTimeZone());"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,186,"ssertEquals(new Instant(currentMillis), new Instant(ri.getMillis()));"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,187,"ssertEquals(GJChronology.getInstance(ZONE), ri.getChronology());"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,193," Test the CTOR with signature: (ReadableInstant, Chronology)."
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,195,ublic void testReadableInstantChronologyConstructor() throws Throwable {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,196,"eadableInstant instant = create(Instant.class, null, null);"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,197,"eadableInstant ri = create(cls,"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,198,"ew Class[] {ReadableInstant.class, Chronology.class},"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,199,"ew Object[] {instant, GJChronology.getInstance(ZONE)});"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,200,"ong currentMillis = round(instant.getMillis(), ZONE.toTimeZone());"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,201,"ssertEquals(new Instant(currentMillis), new Instant(ri.getMillis()));"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,202,"ssertEquals(GJChronology.getInstance(ZONE), ri.getChronology());"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,206," Test the CTOR with signature: (ReadableInstant, Chronology), null Chronology."
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,208,ublic void testReadableInstantChronologyNullConstructor() throws Throwable {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,209,"eadableInstant instant = create(Instant.class, null, null);"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,210,"eadableInstant ri = create(cls,"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,211,"ew Class[] {ReadableInstant.class, Chronology.class},"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,212,"ew Object[] {instant, null});"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,213,"ong currentMillis = round(instant.getMillis(), DateTimeZone.getDefault().toTimeZone());"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,214,"ssertEquals(new Instant(currentMillis), new Instant(ri.getMillis()));"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,215,"ssertEquals(ISOChronology.getInstance(DateTimeZone.getDefault()), ri.getChronology());"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,219," Test the CTOR with signature: (ReadableInstant, Chronology), null RI."
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,221,ublic void testReadableInstantNullChronologyConstructor() throws Throwable {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,222,ry {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,223,"reate(cls,"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,224,"ew Class[] {ReadableInstant.class, Chronology.class},"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,225,"ew Object[] {null, GJChronology.getInstanceUTC()});"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,226,ail();
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,227, catch (IllegalArgumentException ex) {}
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,231," Test the CTOR with signature: (ReadableInstant, Chronology), null RI, chronology."
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,233,ublic void testReadableInstantNullChronologyNullConstructor() throws Throwable {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,234,ry {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,235,"reate(cls,"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,236,"ew Class[] {ReadableInstant.class, Chronology.class},"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,237,"ew Object[] {null, null});"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,238,ail();
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,239, catch (IllegalArgumentException ex) {}
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,245," Test the CTOR with signature: (Date, Chronology)."
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,247,ublic void testDateChronologyConstructor() throws Throwable {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,248,ate date = new Date();
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,249,"eadableInstant ri = create(cls,"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,250,"ew Class[] {Date.class, Chronology.class},"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,251,"ew Object[] {date, GJChronology.getInstance(ZONE)});"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,252,"ong currentMillis = round(date.getTime(), ZONE.toTimeZone());"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,253,"ssertEquals(new Instant(currentMillis), new Instant(ri.getMillis()));"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,254,"ssertEquals(GJChronology.getInstance(ZONE), ri.getChronology());"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,258," Test the CTOR with signature: (Date, Chronology), null Chronology."
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,260,ublic void testDateChronologyNullConstructor() throws Throwable {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,261,ate date = new Date();
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,262,"eadableInstant ri = create(cls,"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,263,"ew Class[] {Date.class, Chronology.class},"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,264,"ew Object[] {date, null});"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,265,"ong currentMillis = round(date.getTime(), DateTimeZone.getDefault().toTimeZone());"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,266,"ssertEquals(new Instant(currentMillis), new Instant(ri.getMillis()));"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,267,"ssertEquals(ISOChronology.getInstance(DateTimeZone.getDefault()), ri.getChronology());"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,271," Test the CTOR with signature: (Date, Chronology), null RI."
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,273,ublic void testDateNullChronologyConstructor() throws Throwable {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,274,ry {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,275,"reate(cls,"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,276,"ew Class[] {Date.class, Chronology.class},"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,277,"ew Object[] {null, GJChronology.getInstanceUTC()});"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,278,ail();
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,279, catch (IllegalArgumentException ex) {}
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,283," Test the CTOR with signature: (Date, Chronology), null RI, chronology."
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,285,ublic void testDateNullChronologyNullConstructor() throws Throwable {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,286,ry {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,287,"reate(cls,"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,288,"ew Class[] {Date.class, Chronology.class},"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,289,"ew Object[] {null, null});"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,290,ail();
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,291, catch (IllegalArgumentException ex) {}
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,297," Test the CTOR with signature: (Calendar, Chronology)."
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,299,ublic void testCalendarChronologyConstructor() throws Throwable {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,300,alendar calendar = Calendar.getInstance();
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,301,"eadableInstant ri = create(cls,"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,302,"ew Class[] {Calendar.class, Chronology.class},"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,303,"ew Object[] {calendar, GJChronology.getInstance(ZONE)});"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,304,"ong currentMillis = round(calendar.getTime().getTime(), ZONE.toTimeZone());"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,305,"ssertEquals(new Instant(currentMillis), new Instant(ri.getMillis()));"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,306,"ssertEquals(GJChronology.getInstance(ZONE), ri.getChronology());"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,310," Test the CTOR with signature: (Calendar, Chronology), null Chronology."
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,312,ublic void testCalendarChronologyNullConstructor() throws Throwable {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,313,"alendar calendar = Calendar.getInstance(TimeZone.getTimeZone(""GMT+02:00""));"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,314,"eadableInstant ri = create(cls,"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,315,"ew Class[] {Calendar.class, Chronology.class},"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,316,"ew Object[] {calendar, null});"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,317,"ong currentMillis = round(calendar.getTime().getTime(), DateTimeZone.getInstance(""+02:00"").toTimeZone());"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,318,"ssertEquals(new Instant(currentMillis), new Instant(ri.getMillis()));"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,319,"ssertEquals(GJChronology.getInstance(ZONE), ri.getChronology());"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,323," Test the CTOR with signature: (Calendar, Chronology), null RI."
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,325,ublic void testCalendarNullChronologyConstructor() throws Throwable {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,326,ry {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,327,"reate(cls,"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,328,"ew Class[] {Calendar.class, Chronology.class},"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,329,"ew Object[] {null, GJChronology.getInstanceUTC()});"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,330,ail();
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,331, catch (IllegalArgumentException ex) {}
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,335," Test the CTOR with signature: (Calendar, Chronology), null RI, chronology."
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,337,ublic void testCalendarNullChronologyNullConstructor() throws Throwable {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,338,ry {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,339,"reate(cls,"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,340,"ew Class[] {Calendar.class, Chronology.class},"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,341,"ew Object[] {null, null});"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,342,ail();
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,343, catch (IllegalArgumentException ex) {}
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,349," Test the CTOR with signature: (String, Chronology)."
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,351,ublic void testStringChronologyConstructor() throws Throwable {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,352,"tring str = ""1970-01-01T13:02:03.004Z"";"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,353,ong millis = 4 + 3*1000 + 2*1000*60 + 13*1000*60*60;
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,354,f (isDateOnly()) {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,355,"tr = ""1970-01-02TZ"";"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,356,illis = 1 * 24 * 60 * 60 * 1000;
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,357, else if (isTimeOnly()) {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,358,"tr = ""T13:02:03.004Z"";"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,360,"eadableInstant ri = create(cls,"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,361,"ew Class[] {String.class, Chronology.class},"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,362,"ew Object[] {str, GJChronology.getInstance(ZONE)});"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,363,"ssertEquals(new Instant(millis), new Instant(ri.getMillis()));"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,364,"ssertEquals(GJChronology.getInstance(ZONE), ri.getChronology());"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,368," Test the CTOR with signature: (String, Chronology), null Chronology."
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,370,ublic void testStringChronologyNullConstructor() throws Throwable {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,371,"tring str = ""1970-01-01T13:02:03.004Z"";"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,372,ong millis = 4 + 3*1000 + 2*1000*60 + 13*1000*60*60;
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,373,f (isDateOnly()) {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,374,"tr = ""1970-01-02TZ"";"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,375,illis = 1 * 24 * 60 * 60 * 1000;
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,376, else if (isTimeOnly()) {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,377,"tr = ""T13:02:03.004Z"";"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,379,"eadableInstant ri = create(cls,"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,380,"ew Class[] {String.class, Chronology.class},"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,381,"ew Object[] {str, null});"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,382,"ssertEquals(new Instant(millis), new Instant(ri.getMillis()));"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,383,"ssertEquals(ISOChronology.getInstance(), ri.getChronology());"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,387," Test the CTOR with signature: (String, Chronology), null RI."
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,389,ublic void testStringNullChronologyConstructor() throws Throwable {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,390,ry {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,391,"reate(cls,"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,392,"ew Class[] {String.class, Chronology.class},"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,393,"ew Object[] {null, GJChronology.getInstanceUTC()});"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,394,ail();
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,395, catch (IllegalArgumentException ex) {}
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,399," Test the CTOR with signature: (String, Chronology), null RI, chronology."
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,401,ublic void testStringNullChronologyNullConstructor() throws Throwable {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,402,ry {
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,403,"reate(cls,"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,404,"ew Class[] {String.class, Chronology.class},"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,405,"ew Object[] {null, null});"
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,406,ail();
False,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,JodaTime/src/test/org/joda/test/time/AbstractTestDateTimeCommon.java,407, catch (IllegalArgumentException ex) {}
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,2," Joda Software License, Version 1.0"
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,5, Copyright (c) 2001-2004 Stephen Colebourne.
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,6, All rights reserved.
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,8," Redistribution and use in source and binary forms, with or without"
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,9," modification, are permitted provided that the following conditions"
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,10, are met:
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,12, 1. Redistributions of source code must retain the above copyright
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,13,"    notice, this list of conditions and the following disclaimer."
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,15, 2. Redistributions in binary form must reproduce the above copyright
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,16,"    notice, this list of conditions and the following disclaimer in"
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,17,    the documentation and/or other materials provided with the
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,18,    distribution.
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,20," 3. The end-user documentation included with the redistribution,"
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,21,"    if any, must include the following acknowledgment:"
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,22,"       ""This product includes software developed by the"
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,23,"        Joda project (http://www.joda.org/)."""
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,24,"    Alternately, this acknowledgment may appear in the software itself,"
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,25,    if and wherever such third-party acknowledgments normally appear.
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,27," 4. The name ""Joda"" must not be used to endorse or promote products"
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,28,    derived from this software without prior written permission. For
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,29,"    written permission, please contact licence@joda.org."
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,31," 5. Products derived from this software may not be called ""Joda"","
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,32,"    nor may ""Joda"" appear in their name, without prior written"
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,33,    permission of the Joda project.
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,35, THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,36," WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,37, OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,38, DISCLAIMED.  IN NO EVENT SHALL THE JODA AUTHORS OR THE PROJECT
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,39," CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,40," SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,41," LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,42," USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,43," ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,44, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,45," OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,46, SUCH DAMAGE.
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,49, This software consists of voluntary contributions made by many
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,50, individuals on behalf of the Joda project and was originally
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,51, created by Stephen Colebourne <scolebourne@joda.org>. For more
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,52," information on the Joda project, please see <http://www.joda.org/>."
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,54,ackage org.joda.test.time;
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,56,mport java.lang.reflect.Constructor;
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,57,mport java.lang.reflect.InvocationTargetException;
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,58,mport java.text.SimpleDateFormat;
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,59,mport java.util.Date;
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,60,mport java.util.GregorianCalendar;
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,61,mport java.util.TimeZone;
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,63,mport junit.framework.TestCase;
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,65,mport org.joda.time.Chronology;
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,66,mport org.joda.time.DateTime;
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,67,mport org.joda.time.DateTimeZone;
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,68,mport org.joda.time.Instant;
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,69,mport org.joda.time.ReadableInstant;
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,70,mport org.joda.time.chrono.ISOChronology;
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,72, This class is a Junit unit test base class for
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,73, ReadableInstant implementations.
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,75, @author Stephen Colebourne
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,76, @author Guy Allard
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,78,ublic abstract class AbstractTestReadableInstant extends TestCase {
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,80,rivate SimpleDateFormat dateTimeFormat;
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,81,rivate final Class cls;
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,82,rivate final Class otherClass;
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,84,rivate TimeZone storeTimeZone = null;
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,87, Constructor.
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,88, @param name
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,90,"ublic AbstractTestReadableInstant(String name, Class cls) {"
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,91,uper(name);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,92,his.cls = cls;
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,93,f (cls == Instant.class) {
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,94,therClass = DateTime.class;
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,95, else {
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,96,therClass = Instant.class;
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,100, Junit <code>setUp()</code> method.
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,102,rotected void setUp() /* throws Exception */ {
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,103,"ateTimeFormat = new SimpleDateFormat(""yyyy-MM-dd'T'HH:mm:ss.sss'Z'"");"
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,104,toreTimeZone = TimeZone.getDefault();
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,105,/ this way we don't hide time zone problems during UK winter
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,106,"imeZone.setDefault(TimeZone.getTimeZone(""GMT+04:00""));"
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,110, Junit <code>tearDown()</code> method.
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,112,rotected void tearDown() /* throws Exception */ {
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,113,ateTimeFormat = null;
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,114,imeZone.setDefault(storeTimeZone);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,118, Create a ReadableInstant by reflection
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,120,"rotected ReadableInstant create(Class reflectClass, Class[] types, Object[] args) throws Throwable {"
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,121,ry {
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,122,onstructor con = reflectClass.getConstructor(types);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,123,eturn (ReadableInstant) con.newInstance(args);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,125, catch (InvocationTargetException ex) {
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,126,hrow ex.getTargetException();
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,127, catch (NoSuchMethodException ex) {
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,128,f (types == null || types.length == 0) {
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,129,ypes = new Class[] {Chronology.class};
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,130,rgs = new Object[] {ISOChronology.getInstance(DateTimeZone.getDefault())};
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,132,f (types.length == 1 && types[0] == Long.TYPE) {
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,133,"ypes = new Class[] {Long.TYPE, Chronology.class};"
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,134,"rgs = new Object[] {args[0], ISOChronology.getInstance(DateTimeZone.getDefault())};"
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,136,ry {
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,137,onstructor con = reflectClass.getConstructor(types);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,138,eturn (ReadableInstant) con.newInstance(args);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,140, catch (InvocationTargetException ex2) {
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,141,hrow ex2.getTargetException();
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,146,rotected abstract ReadableInstant createSmall(boolean ofAnotherClass);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,147,rotected abstract ReadableInstant createMid(boolean ofAnotherClass);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,148,rotected abstract ReadableInstant createLarge(boolean ofAnotherClass);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,149,rotected abstract ReadableInstant createUTC(long millis);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,151,rotected boolean isDateOnly() {
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,152,eturn false;
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,155,rotected boolean isTimeOnly() {
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,156,eturn false;
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,160, Round the millis
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,161, @param currentMillis
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,162, @return long
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,164,"rotected long round(long currentMillis, TimeZone zone) {"
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,165,f (zone == null) {
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,166,one = TimeZone.getDefault();
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,168,f (isDateOnly()) {
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,169,regorianCalendar cal = new GregorianCalendar(zone);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,170,al.setTime(new Date(currentMillis));
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,171,"al.set(GregorianCalendar.AM_PM, GregorianCalendar.AM);"
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,172,"al.set(GregorianCalendar.HOUR, 0);"
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,173,"al.set(GregorianCalendar.HOUR_OF_DAY, 0);"
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,174,"al.set(GregorianCalendar.MINUTE, 0);"
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,175,"al.set(GregorianCalendar.SECOND, 0);"
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,176,"al.set(GregorianCalendar.MILLISECOND, 0);"
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,177,eturn cal.getTime().getTime();
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,178, else if (isTimeOnly()) {
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,179,regorianCalendar cal = new GregorianCalendar(zone);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,180,al.setTime(new Date(currentMillis));
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,181,"al.set(GregorianCalendar.YEAR, 1970);"
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,182,"al.set(GregorianCalendar.MONTH, 0);"
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,183,"al.set(GregorianCalendar.DAY_OF_MONTH, 1);"
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,184,eturn cal.getTime().getTime();
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,186,eturn currentMillis;
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,192, Test getMillis
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,194,ublic void testGetMillis() throws Throwable {
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,195,eadableInstant ri1 = createUTC(0);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,196,"ssertEquals(0, ri1.getMillis());"
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,202, Test getChronology
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,204,ublic void testGetChronology() throws Throwable {
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,205,"eadableInstant ri1 = create(cls, new Class[] {Long.TYPE}, new Object[] {new Long(-300)});"
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,206,ssertNotNull(ri1.getChronology());
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,212, Test get
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,214,ublic void testGetField() throws Throwable {
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,215,"eadableInstant ri1 = create(cls, new Class[] {Long.TYPE}, new Object[] {new Long(1000)});"
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,216,f (isDateOnly()) {
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,217,"ssertEquals(0, ri1.get(ISOChronology.getInstance(DateTimeZone.getDefault()).secondOfMinute()));"
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,218, else {
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,219,"ssertEquals(1, ri1.get(ISOChronology.getInstance(DateTimeZone.getDefault()).secondOfMinute()));"
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,221,"ssertEquals(0, ri1.get(ISOChronology.getInstance(DateTimeZone.getDefault()).minuteOfHour()));"
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,225, Test get
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,227,ublic void testGetFieldEx() throws Throwable {
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,228,"eadableInstant ri1 = create(cls, new Class[] {Long.TYPE}, new Object[] {new Long(1000)});"
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,229,ry {
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,230,i1.get(null);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,231, catch (IllegalArgumentException ex) {
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,232,eturn;
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,234,ail();
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,240, Test equals
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,242,ublic void testEquals() throws Throwable {
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,243,eadableInstant ri1 = createSmall(false);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,244,eadableInstant ri2 = createMid(false);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,245,eadableInstant ri3 = createLarge(false);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,246,ssertTrue(ri1.equals(ri1) == true);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,247,ssertTrue(ri1.equals(ri2) == false);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,248,ssertTrue(ri1.equals(ri3) == false);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,250,ssertTrue(ri2.equals(ri1) == false);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,251,ssertTrue(ri2.equals(ri2) == true);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,252,ssertTrue(ri2.equals(ri3) == false);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,254,ssertTrue(ri3.equals(ri1) == false);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,255,ssertTrue(ri3.equals(ri2) == false);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,256,ssertTrue(ri3.equals(ri3) == true);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,258,eadableInstant ri4 = createSmall(true);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,259,ssertTrue(ri2.equals(ri4) == false);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,260,i4 = createMid(true);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,261,ssertTrue(ri2.equals(ri4) == false);  // different chronology
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,262,i4 = createLarge(true);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,263,ssertTrue(ri2.equals(ri4) == false);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,265,ssertTrue(ri2.equals(null) == false);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,266,ssertTrue(ri2.equals(new Integer(8)) == false);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,272, Test hashCode
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,274,ublic void testHashCode() throws Throwable {
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,275,eadableInstant ri1 = createSmall(false);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,276,eadableInstant ri2 = createMid(false);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,277,"eadableInstant ri3 = create(cls, new Class[] {Long.TYPE}, new Object[] {new Long(200000000L)});"
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,278,"ssertEquals(ri1.hashCode(), ri1.hashCode());"
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,279,eadableInstant ri4 = createSmall(false);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,280,"ssertEquals(ri1.hashCode(), ri4.hashCode());"
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,286, Test compareTo
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,288,ublic void testCompareTo() throws Throwable {
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,289,eadableInstant ri1 = createSmall(false);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,290,eadableInstant ri2 = createMid(false);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,291,eadableInstant ri3 = createLarge(false);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,292,ssertTrue(ri1.compareTo(ri1) == 0);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,293,ssertTrue(ri1.compareTo(ri2) < 0);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,294,ssertTrue(ri1.compareTo(ri3) < 0);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,296,ssertTrue(ri2.compareTo(ri1) > 0);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,297,ssertTrue(ri2.compareTo(ri2) == 0);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,298,ssertTrue(ri2.compareTo(ri3) < 0);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,300,ssertTrue(ri3.compareTo(ri1) > 0);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,301,ssertTrue(ri3.compareTo(ri2) > 0);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,302,ssertTrue(ri3.compareTo(ri3) == 0);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,304,eadableInstant ri4 = createSmall(true);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,305,ssertTrue(ri2.compareTo(ri4) > 0);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,306,i4 = createMid(true);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,307,ssertTrue(ri2.compareTo(ri4) == 0);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,308,i4 = createLarge(true);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,309,ssertTrue(ri2.compareTo(ri4) < 0);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,313, Test compareTo
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,315,ublic void testCompareToEx1() throws Throwable {
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,316,eadableInstant ri = createSmall(false);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,317,ry {
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,318,i.compareTo(null);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,319, catch (NullPointerException ex) {
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,320,eturn;
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,322,ail();
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,326, Test compareTo
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,328,ublic void testCompareToEx2() throws Throwable {
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,329,eadableInstant ri = createSmall(false);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,330,ry {
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,331,i.compareTo(new Integer(2));
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,332, catch (ClassCastException ex) {
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,333,eturn;
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,335,ail();
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,341, Test IsAfter
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,343,ublic void testIsAfter() throws Throwable {
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,344,eadableInstant ri1 = createSmall(false);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,345,eadableInstant ri2 = createMid(false);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,346,eadableInstant ri3 = createLarge(false);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,347,ssertTrue(ri1.isAfter(ri1) == false);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,348,ssertTrue(ri1.isAfter(ri2) == false);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,349,ssertTrue(ri1.isAfter(ri3) == false);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,351,ssertTrue(ri2.isAfter(ri1) == true);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,352,ssertTrue(ri2.isAfter(ri2) == false);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,353,ssertTrue(ri2.isAfter(ri3) == false);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,355,ssertTrue(ri3.isAfter(ri1) == true);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,356,ssertTrue(ri3.isAfter(ri2) == true);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,357,ssertTrue(ri3.isAfter(ri3) == false);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,359,eadableInstant ri4 = createSmall(true);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,360,ssertTrue(ri2.isAfter(ri4) == true);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,361,i4 = createMid(true);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,362,ssertTrue(ri2.isAfter(ri4) == false);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,363,i4 = createLarge(true);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,364,ssertTrue(ri2.isAfter(ri4) == false);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,368, Test IsAfter
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,370,ublic void testIsAfterEx() throws Throwable {
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,371,eadableInstant ri = createSmall(false);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,372,ry {
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,373,i.isAfter(null);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,374, catch (IllegalArgumentException ex) {
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,375,eturn;
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,377,ail();
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,383, Test IsBefore
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,385,ublic void testIsBefore() throws Throwable {
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,386,eadableInstant ri1 = createSmall(false);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,387,eadableInstant ri2 = createMid(false);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,388,eadableInstant ri3 = createLarge(false);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,389,ssertTrue(ri1.isBefore(ri1) == false);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,390,ssertTrue(ri1.isBefore(ri2) == true);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,391,ssertTrue(ri1.isBefore(ri3) == true);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,393,ssertTrue(ri2.isBefore(ri1) == false);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,394,ssertTrue(ri2.isBefore(ri2) == false);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,395,ssertTrue(ri2.isBefore(ri3) == true);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,397,ssertTrue(ri3.isBefore(ri1) == false);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,398,ssertTrue(ri3.isBefore(ri2) == false);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,399,ssertTrue(ri3.isBefore(ri3) == false);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,401,eadableInstant ri4 = createSmall(true);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,402,ssertTrue(ri2.isBefore(ri4)  == false);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,403,i4 = createMid(true);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,404,ssertTrue(ri2.isBefore(ri4) == false);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,405,i4 = createLarge(true);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,406,ssertTrue(ri2.isBefore(ri4) == true);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,410, Test IsBefore
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,412,ublic void testIsBeforeEx() throws Throwable {
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,413,eadableInstant ri = createSmall(false);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,414,ry {
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,415,i.isBefore(null);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,416, catch (IllegalArgumentException ex) {
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,417,eturn;
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,419,ail();
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,425, Test isEqual
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,427,ublic void testIsEqual() throws Throwable {
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,428,eadableInstant ri1 = createSmall(false);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,429,eadableInstant ri2 = createMid(false);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,430,eadableInstant ri3 = createLarge(false);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,431,ssertTrue(ri1.isEqual(ri1) == true);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,432,ssertTrue(ri1.isEqual(ri2) == false);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,433,ssertTrue(ri1.isEqual(ri3) == false);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,435,ssertTrue(ri2.isEqual(ri1) == false);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,436,ssertTrue(ri2.isEqual(ri2) == true);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,437,ssertTrue(ri2.isEqual(ri3) == false);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,439,ssertTrue(ri3.isEqual(ri1) == false);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,440,ssertTrue(ri3.isEqual(ri2) == false);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,441,ssertTrue(ri3.isEqual(ri3) == true);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,443,eadableInstant ri4 = createSmall(true);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,444,ssertTrue(ri2.isEqual(ri4) == false);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,445,i4 = createMid(true);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,446,ssertTrue(ri2.isEqual(ri4) == true);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,447,i4 = createLarge(true);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,448,ssertTrue(ri2.isEqual(ri4) == false);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,452, Test isEqual
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,454,ublic void testIsEqualEx() throws Throwable {
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,455,eadableInstant ri = createSmall(false);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,456,ry {
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,457,i.isEqual(null);
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,458, catch (IllegalArgumentException ex) {
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,459,eturn;
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,461,ail();
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,467, Test toInstant
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,469,ublic void testToInstant() throws Throwable {
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,470,"eadableInstant ri = create(cls, null, null);"
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,471,nstant instant = ri.toInstant();
False,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,JodaTime/src/test/org/joda/test/time/AbstractTestReadableInstant.java,472,"ssertEquals(instant.getMillis(), ri.getMillis());"
False,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,2," Joda Software License, Version 1.0"
False,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,5, Copyright (c) 2001-2004 Stephen Colebourne.
False,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,6, All rights reserved.
False,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,8," Redistribution and use in source and binary forms, with or without"
False,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,9," modification, are permitted provided that the following conditions"
False,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,10, are met:
False,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,12, 1. Redistributions of source code must retain the above copyright
False,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,13,"    notice, this list of conditions and the following disclaimer."
False,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,15, 2. Redistributions in binary form must reproduce the above copyright
False,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,16,"    notice, this list of conditions and the following disclaimer in"
False,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,17,    the documentation and/or other materials provided with the
False,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,18,    distribution.
False,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,20," 3. The end-user documentation included with the redistribution,"
False,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,21,"    if any, must include the following acknowledgment:"
False,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,22,"       ""This product includes software developed by the"
False,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,23,"        Joda project (http://www.joda.org/)."""
False,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,24,"    Alternately, this acknowledgment may appear in the software itself,"
False,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,25,    if and wherever such third-party acknowledgments normally appear.
False,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,27," 4. The name ""Joda"" must not be used to endorse or promote products"
False,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,28,    derived from this software without prior written permission. For
False,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,29,"    written permission, please contact licence@joda.org."
False,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,31," 5. Products derived from this software may not be called ""Joda"","
False,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,32,"    nor may ""Joda"" appear in their name, without prior written"
False,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,33,    permission of the Joda project.
False,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,35, THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
False,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,36," WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
False,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,37, OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
False,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,38, DISCLAIMED.  IN NO EVENT SHALL THE JODA AUTHORS OR THE PROJECT
False,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,39," CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
False,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,40," SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
False,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,41," LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
False,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,42," USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
False,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,43," ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
False,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,44, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
False,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,45," OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
False,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,46, SUCH DAMAGE.
False,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,49, This software consists of voluntary contributions made by many
False,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,50, individuals on behalf of the Joda project and was originally
False,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,51, created by Stephen Colebourne <scolebourne@joda.org>. For more
False,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,52," information on the Joda project, please see <http://www.joda.org/>."
False,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,54,ackage org.joda.test.time;
False,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,56,mport java.util.*;
False,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,57,mport java.text.* ;
False,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,58,mport java.io.*;
False,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,60,mport junit.framework.TestSuite;
False,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,62,mport org.joda.time.*;
False,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,63,mport org.joda.time.chrono.ISOChronology;
False,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,65, This class is a Junit unit test for the
False,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,66, org.joda.time.MutableDateTime class.
False,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,67, This currently forces tests using GMT only.
False,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,69, @author Guy Allard
False,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,71,ublic class BulkMDTTests extends BulkTest {
False,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,73, main
False,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,74, @param args command line arguments.
False,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,76,ublic static void main(String[] args) {
False,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,77,unit.textui.TestRunner.run(suite());
False,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,80, TestSuite
False,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,82,ublic static TestSuite suite() {
False,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,83,eturn BulkTest.makeSuite(BulkMDTTests.class);
False,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,86, BulkMDTTests constructor.
False,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,87, @param name
False,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,89,ublic BulkMDTTests(String name) {
False,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,90,uper(name);
False,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,92,/ Class Name: org.joda.time.MutableDateTime
False,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,94, Junit <code>setUp()</code> method.
False,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,96,rotected void setUp() /* throws Exception */ {
False,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,99, Junit <code>tearDown()</code> method.
False,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,101,rotected void tearDown() /* throws Exception */ {
False,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,102,/ super.tearDown();
False,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,105,rivate PrintStream ewtr = System.err;
False,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,106,ublic void testDummy() {
False,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,107,"wtr.println(""Dummy Test Completes"");"
False,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,108,wtr.flush();
False,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,111,ublic BulkTest bulkTestGet() {
False,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,112,"eturn new TestMDTGet(""Mutable Date Time get Method Tests"");"
False,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,115,ublic BulkTest bulkTestSet() {
False,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,116,"eturn new TestMDTSet(""Mutable Date Time set Method Tests"");"
False,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,119,ublic BulkTest bulkTestAdd() {
False,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,120,"eturn new TestMDTAdd(""Mutable Date Time add Method Tests"");"
False,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,123,ublic BulkTest bulkTestAddWrapped() {
False,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,124,"eturn new TestMDTAddWrapped(""Mutable Date Time addWrapped Method Tests"");"
False,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,JodaTime/src/test/org/joda/test/time/BulkMDTTests.java,127, // end of class BulkMDTTests
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,2," Joda Software License, Version 1.0"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,5, Copyright (c) 2001-2004 Stephen Colebourne.
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,6, All rights reserved.
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,8," Redistribution and use in source and binary forms, with or without"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,9," modification, are permitted provided that the following conditions"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,10, are met:
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,12, 1. Redistributions of source code must retain the above copyright
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,13,"    notice, this list of conditions and the following disclaimer."
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,15, 2. Redistributions in binary form must reproduce the above copyright
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,16,"    notice, this list of conditions and the following disclaimer in"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,17,    the documentation and/or other materials provided with the
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,18,    distribution.
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,20," 3. The end-user documentation included with the redistribution,"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,21,"    if any, must include the following acknowledgment:"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,22,"       ""This product includes software developed by the"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,23,"        Joda project (http://www.joda.org/)."""
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,24,"    Alternately, this acknowledgment may appear in the software itself,"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,25,    if and wherever such third-party acknowledgments normally appear.
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,27," 4. The name ""Joda"" must not be used to endorse or promote products"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,28,    derived from this software without prior written permission. For
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,29,"    written permission, please contact licence@joda.org."
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,31," 5. Products derived from this software may not be called ""Joda"","
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,32,"    nor may ""Joda"" appear in their name, without prior written"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,33,    permission of the Joda project.
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,35, THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,36," WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,37, OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,38, DISCLAIMED.  IN NO EVENT SHALL THE JODA AUTHORS OR THE PROJECT
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,39," CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,40," SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,41," LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,42," USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,43," ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,44, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,45," OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,46, SUCH DAMAGE.
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,49, This software consists of voluntary contributions made by many
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,50, individuals on behalf of the Joda project and was originally
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,51, created by Stephen Colebourne <scolebourne@joda.org>. For more
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,52," information on the Joda project, please see <http://www.joda.org/>."
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,54,ackage org.joda.test.time;
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,56,mport java.io.PrintStream;
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,58,mport junit.framework.TestSuite;
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,60,mport org.joda.time.DateTime;
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,61,mport org.joda.time.ReadableInstant;
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,64, This class is a Junit unit test for the
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,65," constructors of various DateTime, DateOnly, and"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,66, TimeOnly objects.
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,68, @author Guy Allard
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,71,ublic class TestConstructors extends BulkTest {
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,74, This is the main class for this test suite.
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,75, @param args command line arguments.
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,77,ublic static void main(String[] args) {
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,78,unit.textui.TestRunner.run(suite());
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,81, TestSuite suite() is a junit required method.
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,82, @see org.joda.test.time.BulkTest
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,84,ublic static TestSuite suite() {
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,85,eturn BulkTest.makeSuite(TestConstructors.class);
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,88, TestConstructors constructor.
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,89, @param name
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,91,ublic TestConstructors(String name) {
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,92,uper(name);
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,95,rotected void setUp() throws Exception {
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,96,uper.setUp();
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,98,rotected void tearDown() throws Exception {
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,99,uper.tearDown();
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,102, Test the <code>DateOnly</code> constructors.
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,103, @see org.joda.time.DateOnly
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,105,ublic void testDateOnlyConstructors() {
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,106,ateOnly = true;
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,108,/ Tests for Spec Section 5.2.1
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,110,"ew SectionRunner( new SpecSection( ""5.2.1.1"", dates5211 ),"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,111,""", """" ).run();"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,113,"ew SectionRunner( new SpecSection( ""5.2.1.2"", dates5212 ),"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,114,""", """" ).run();"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,116,"ew SectionRunner( new SpecSection( ""5.2.1.3"", dates5213 ),"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,117,""", """" ).run();"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,119,"ew SectionRunner( new SpecSection( ""5.2.1.4"", dates5214 ),"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,120,""", """" ).run();"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,122,/ Tests for Spec Section 5.2.2.1
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,124,"ew SectionRunner( new SpecSection( ""5.2.2.1"", dates5221 ),"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,125,""", """" ).run();"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,127,/ Tests for Spec Section 5.2.2.2
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,129,"ew SectionRunner( new SpecSection( ""5.2.2.2"", dates5222 ),"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,130,""", """" ).run();"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,132,/ Tests for Spec Section 5.2.2.3
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,134,"ew SectionRunner( new SpecSection( ""5.2.2.3"", dates5223 ),"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,135,""", """" ).run();"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,137,/ Tests for Spec Section 5.2.3.1
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,139,"ew SectionRunner( new SpecSection( ""5.2.3.1"", dates5231 ),"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,140,""", """" ).run();"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,142,/ Tests for Spec Section 5.2.3.2
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,144,"ew SectionRunner( new SpecSection( ""5.2.3.2"", dates5232 ),"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,145,""", """" ).run();"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,147,/ Tests for Spec Section 5.2.3.3
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,149,"ew SectionRunner( new SpecSection( ""5.2.3.3"", dates5233 ),"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,150,""", """" ).run();"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,152,/ Tests for Spec Section 5.2.3.4
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,154,"ew SectionRunner( new SpecSection( ""5.2.3.4"", dates5234 ),"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,155,""", """" ).run();"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,157,"tr.println(""Running Totals:"");"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,158,t.showResults();
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,161, Test the <code>TimeOnly</code> constructors.
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,162, @see org.joda.time.TimeOnly
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,164,ublic void testTimeOnlyConstructors() {
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,165,ateOnly = false;
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,167,"/ Tests for Spec Section 5.3.1 - No Leading 'T', no 'Z' suffix"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,169,"ew SectionRunner( new SpecSection( ""5.3.1.1"", times5311 ),"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,170,""", """" ).run();"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,172,"ew SectionRunner( new SpecSection( ""5.3.1.2"", times5312 ),"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,173,""", """" ).run();"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,175,"ew SectionRunner( new SpecSection( ""5.3.1.3"", times5313 ),"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,176,""", """" ).run();"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,178,"ew SectionRunner( new SpecSection( ""5.3.1.4"", times5314 ),"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,179,""", """" ).run();"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,181,"/ Tests for Spec Section 5.3.1 - Leading 'T', no 'Z' suffix"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,183,"ew SectionRunner( new SpecSection( ""5.3.1.1"", times5311 ),"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,184,"T"", """" ).run();"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,186,"ew SectionRunner( new SpecSection( ""5.3.1.2"", times5312 ),"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,187,"T"", """" ).run();"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,189,"ew SectionRunner( new SpecSection( ""5.3.1.3"", times5313 ),"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,190,"T"", """" ).run();"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,192,"ew SectionRunner( new SpecSection( ""5.3.1.4"", times5314 ),"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,193,"T"", """" ).run();"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,195,"/ Tests for Spec Section 5.3.1 - No leading 'T"", 'Z' suffix"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,197,"ew SectionRunner( new SpecSection( ""5.3.1.1"", times5311 ),"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,198,""", ""Z"" ).run();"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,200,"ew SectionRunner( new SpecSection( ""5.3.1.2"", times5312 ),"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,201,""", ""Z"" ).run();"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,203,"ew SectionRunner( new SpecSection( ""5.3.1.3"", times5313 ),"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,204,""", ""Z"" ).run();"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,206,"ew SectionRunner( new SpecSection( ""5.3.1.4"", times5314 ),"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,207,""", ""Z"" ).run();"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,209,"/ Tests for Spec Section 5.3.1 - Leading 'T"" and 'Z' suffix"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,211,"ew SectionRunner( new SpecSection( ""5.3.1.1"", times5311 ),"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,212,"T"", ""Z"" ).run();"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,214,"ew SectionRunner( new SpecSection( ""5.3.1.2"", times5312 ),"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,215,"T"", ""Z"" ).run();"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,217,"ew SectionRunner( new SpecSection( ""5.3.1.3"", times5313 ),"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,218,"T"", ""Z"" ).run();"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,220,"ew SectionRunner( new SpecSection( ""5.3.1.4"", times5314 ),"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,221,"T"", ""Z"" ).run();"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,223,/ Tests for Spec Section 5.3.2
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,225,"ew SectionRunner( new SpecSection( ""5.3.2"", times532 ),"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,226,""", """" ).run();"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,228,/ Tests for Spec Section 5.3.4.2
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,230,"ew SectionRunner( new SpecSection( ""5.3.4.2"", times5342 ),"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,231,""", """" ).run();"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,233,"tr.println(""Running Totals:"");"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,234,t.showResults();
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,237, Test the <code>DateTime</code> constructors.
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,238, @see org.joda.time.DateTime
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,240,ublic void testDateTimeConstructors() {
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,241,ateTimes = true;
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,243,/ Tests for Spec Section 5.4.1
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,245,"ew SectionRunner( new SpecSection( ""5.4.1"", datetimes541 ),"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,246,""", """" ).run();"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,247,"ew SectionRunner( new SpecSection( ""5.4.1"", datetimes541 ),"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,248,""", ""Z"" ).run();"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,250,/ Tests for Spec Section 5.4.2
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,252,"ew SectionRunner( new SpecSection( ""5.4.2"", datetimes542 ),"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,253,""", """" ).run();"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,255,"tr.println(""Running Totals:"");"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,256,t.showResults();
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,260,/ Private data and methods
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,263,rivate final TotalsTracker tt = new TotalsTracker();
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,265,rivate boolean dateOnly = true;
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,266,rivate boolean dateTimes = false;
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,267,rotected  PrintStream wtr = System.err;
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,269,/ Spec Section 5.2 - Dates
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,271,/ Spec Section 5.2.1 - Calendar Dates
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,273,/ Spec Section 5.2.1.1 - Complete Representation
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,275,rivate final String[][] dates5211 = {
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,276,"""19990101"","
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,277,"Complete~Basic~YYYYMMDD~Spec 5.2.1.1""},"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,278,"""1999-01-01"","
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,279,"Complete~Extended~YYYY-MM-DD~Spec 5.2.1.1""},"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,282,/ Spec Section 5.2.1.2 - Representations with reduced precision
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,284,rivate final String[][] dates5212 = {
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,285,/ A specific month
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,286,"""1999-01"","
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,287,"Reduced~Basic~YYYY-MM~Spec 5.2.1.2(a)""},"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,288,/ A specific year
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,289,"""1999"","
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,290,"Reduced~Basic~YYYY~Spec 5.2.1.2(b)""},"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,291,/ A specific century
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,292,"""19"","
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,293,"Reduced~Basic~YY~Spec 5.2.1.2(c)""},"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,296,/ Spec Section 5.2.1.3 - Truncated representations
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,298,rivate final String[][] dates5213 = {
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,299,/ A specific date in the implied century
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,300,"""990101"","
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,301,"Truncated~Basic~YYMMDD~Spec 5.2.1.3(a)""},"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,302,"""99-01-01"","
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,303,"Truncated~Extended~YY-MM-DD~Spec 5.2.1.3(a)""},"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,304,/ A specific year and month in the implied century
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,305,"""-9901"","
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,306,"Truncated~Basic~-YYMM~Spec 5.2.1.3(b)""},"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,307,"""-99-01"","
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,308,"Truncated~Extended~YYMMDD~Spec 5.2.1.3(b)""},"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,309,/ A specific year in the implied century
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,310,"""-99"","
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,311,"Truncated~Basic~-YY~Spec 5.2.1.3(c)""},"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,312,/ A specific day of a month in the implied year
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,313,"""--0101"","
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,314,"Truncated~Basic~--MMDD~Spec 5.2.1.3(d)""},"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,315,"""--01-01"","
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,316,"Truncated~Basic~--MM-DD~Spec 5.2.1.3(d)""},"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,317,/ A specific month in the implied year
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,318,"""--01"","
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,319,"Truncated~Basic~--MM~Spec 5.2.1.3(e)""},"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,320,/ A specific day in the implied month
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,321,"""---01"","
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,322,"Truncated~Basic~---DD~Spec 5.2.1.3(f)""},"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,325,/ Spec Section 5.2.1.4 - Expanded Representations
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,327,rivate final String[][] dates5214 = {
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,328,/ A specific day
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,329,"""-19990101"","
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,330,"Expanded~Basic~-YYYYMMDD~Spec 5.2.1.4(a)""},"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,331,"""+19990101"","
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,332,"Expanded~Basic~+YYYYMMDD~Spec 5.2.1.4(a)""},"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,333,"""-1999-01-01"","
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,334,"Expanded~Extended~-YYYY-MM-DD~Spec 5.2.1.4(a)""},"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,335,"""+1999-01-01"","
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,336,"Expanded~Extended~+YYYY-MM-DD~Spec 5.2.1.4(a)""},"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,337,/ A specific month
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,338,"""-1999-01"","
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,339,"Expanded~Basic~-YYYY-MM~Spec 5.2.1.4(b)""},"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,340,"""+1999-01"","
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,341,"Expanded~Basic~+YYYY-MM~Spec 5.2.1.4(b)""},"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,342,/ A specific year
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,343,"""-1999"","
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,344,"Expanded~Basic~-YYYY~Spec 5.2.1.4(c)""},"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,345,"""+1999"","
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,346,"Expanded~Basic~+YYYY~Spec 5.2.1.4(c)""},"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,347,/ A specific century
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,348,"""-19"","
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,349,"Expanded~Basic~-YY~Spec 5.2.1.4(d)""},"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,350,"""+19"","
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,351,"Expanded~Basic~+YY~Spec 5.2.1.4(d)""},"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,354,/ Spec Section 5.2.2 - Ordinal Dates
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,356,/ Spec Section 5.2.2.1 - Complete Representation
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,358,rivate final String[][] dates5221 = {
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,359,"""1999123"","
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,360,"Complete~Basic~YYYYDDD~Spec 5.2.2.1""},"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,361,"""1999-123"","
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,362,"Complete~Extended~YYYY-DDD~Spec 5.2.2.1""},"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,365,/ Spec Section 5.2.2.2 - Truncated Representation
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,367,rivate final String[][] dates5222 = {
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,368,/ A specific year and day in the implied century
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,369,"""99123"","
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,370,"Truncated~Basic~YYDDD~Spec 5.2.2.2(a)""},"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,371,"""99-123"","
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,372,"Truncated~Extended~YY-DDD~Spec 5.2.2.2(a)""},"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,373,/ Day only in the implied year
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,374,"""-123"","
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,375,"Truncated~Basic~-DDD~Spec 5.2.2.2(b)""},"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,378,/ Spec Section 5.2.2.3 - Expanded Representation
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,380,rivate final String[][] dates5223 = {
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,381,/ A specific day
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,382,"""-1999123"","
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,383,"Expanded~Basic~-YYYYDDD~Spec 5.2.2.3(a)""},"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,384,"""-1999-123"","
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,385,"Expanded~Extended~-YYYY-DDD~Spec 5.2.2.3(a)""},"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,388,/ Spec Section 5.2.3 - Week Date
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,390,/ Spec Section 5.2.3.1 - Complete representation
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,392,rivate final String[][] dates5231 = {
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,393,"""1999W236"","
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,394,"Complete~Basic~YYYYWwwD~Spec 5.2.3.1""},"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,395,"""1999-W23-6"","
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,396,"Complete~Extended~YYYY-Www-D~Spec 5.2.3.1""},"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,399,/ Spec Section 5.2.3.2 - Representations with reduced precision
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,401,rivate final String[][] dates5232 = {
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,402,/ A specific week
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,403,"""1999W23"","
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,404,"Reduced~Basic~YYYYWww~Spec 5.2.3.2(a)""},"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,405,"""1999-W23"","
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,406,"Reduced~Extended~YYYY-Www~Spec 5.2.3.2(a)""},"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,409,/ Spec Section 5.2.3.3 - Truncated representations
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,411,rivate final String[][] dates5233 = {
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,412,"/ Year, week, and day in the implied century"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,413,"""99W236"","
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,414,"Truncated~Basic~YYWwwD~Spec 5.2.3.3(a)""},"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,415,"""99-W23-6"","
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,416,"Truncated~Extended~YYWwwD~Spec 5.2.3.3(a)""},"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,417,/ Year and week only in the implied century
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,418,"""99W23"","
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,419,"Truncated~Basic~YYWww~Spec 5.2.3.3(b)""},"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,420,"""99-W23"","
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,421,"Truncated~Extended~YY-Www~Spec 5.2.3.3(b)""},"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,422,"/ Year of the implied decade, week and day only"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,423,"""-5W236"","
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,424,"Truncated~Basic~-YWwwD~Spec 5.2.3.3(c)""},"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,425,"""-5-W23-6"","
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,426,"Truncated~Extended~-Y-Www-D~Spec 5.2.3.3(c)""},"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,427,/ Year of the implied decade and week only
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,428,"""-5W23"","
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,429,"Truncated~Basic~-YWww~Spec 5.2.3.3(d)""},"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,430,"""-5-W23"","
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,431,"Truncated~Extended~-Y-Www~Spec 5.2.3.3(d)""},"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,432,/ Week and day only of the implied year
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,433,"""-W236"","
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,434,"Truncated~Basic~-WwwD~Spec 5.2.3.3(e)""},"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,435,"""-W23-6"","
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,436,"Truncated~Extended~-Www-D~Spec 5.2.3.3(e)""},"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,437,/ Week only of the implied year
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,438,"""-W23"","
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,439,"Truncated~Basic~-Www~Spec 5.2.3.3(f)""},"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,440,/ Day only of the implied week
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,441,"""-W-6"","
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,442,"Truncated~Basic~-W-D~Spec 5.2.3.3(g)""},"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,445,/ Spec Section 5.2.3.4 - Expanded representations
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,447,rivate final String[][] dates5234 = {
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,448,/ A specific day
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,449,"""-1999W236"","
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,450,"Truncated~Basic~-YYYYWwwd~Spec 5.2.3.4(a)""},"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,451,"""+1999W236"","
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,452,"Truncated~Basic~+YYYYWwwd~Spec 5.2.3.4(a)""},"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,453,"""-1999-W23-6"","
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,454,"Truncated~Extended~-YYYY-Www-d~Spec 5.2.3.4(a)""},"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,455,"""+1999-W23-6"","
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,456,"Truncated~Extended~+YYYY-Www-d~Spec 5.2.3.4(a)""},"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,457,/ A specific week
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,458,"""-1999W23"","
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,459,"Truncated~Basic~-YYYYWww~Spec 5.2.3.4(b)""},"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,460,"""+1999W23"","
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,461,"Truncated~Basic~+YYYYWww~Spec 5.2.3.4(b)""},"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,462,"""-1999-W23"","
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,463,"Truncated~Extended~-YYYY-Www~Spec 5.2.3.4(b)""},"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,464,"""+1999-W23"","
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,465,"Truncated~Extended~+YYYY-Www~Spec 5.2.3.4(b)""},"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,468,/ Spec Section 5.3 - Time of day
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,470,/ Spec Section 5.3.1.1 - Complete representation
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,472,rivate final String[][] times5311 = {
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,473,"""232050"","
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,474,"Complete~Basic~hhmmss~Spec 5.3.1.1""},"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,475,"""23:20:50"","
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,476,"Complete~Extended~hh:mm:ss~Spec 5.3.1.1""},"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,479,/ Spec Section 5.3.1.2 - Representations with reduced precision
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,481,rivate final String[][] times5312 = {
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,482,/ A specific hour and minute
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,483,"""2320"","
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,484,"Reduced~Basic~hhmm~Spec 5.3.1.2(a)""},"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,485,"""23:20"","
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,486,"Reduced~Extended~hh:mm~Spec 5.3.1.2(a)""},"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,487,/ A specific hour
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,488,"""23"","
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,489,"Reduced~Basic~hh~Spec 5.3.1.2(b)""},"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,492,/ Spec Section 5.3.1.3 - Representation of decimal fractions
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,494,rivate final String[][] times5313 = {
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,495,"/ A specific hour, minute, second, and decimal fraction of"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,496,/ a second
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,497,"""232050,5"","
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,498,"Decimal~Basic~hhmmss,ss~Spec 5.3.1.3(a)""},"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,499,"""23:20:50,5"","
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,500,"Decimal~Extended~hh:mm:ss,ss~Spec 5.3.1.3(a)""},"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,501,"/ A specific hour, minute, and decimal fraction of a minute"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,502,"""2320,8"","
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,503,"Decimal~Basic~hhmm,mm~Spec 5.3.1.3(b)""},"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,504,"""23:20,8"","
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,505,"Decimal~Extended~hh:mm,mm~Spec 5.3.1.3(b)""},"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,506,/ A specific hour and decimal fraction of an hour
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,507,"""23,8"","
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,508,"Decimal~Basic~hh,hh~Spec 5.3.1.3(c)""},"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,511,/ Spec Section 5.3.1.4 - Truncated representations
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,513,rivate final String[][] times5314 = {
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,514,/ A specific minute and second of the implied hour
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,515,"""-2050"","
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,516,"Truncated~Basic~-mmss~Spec 5.3.1.4(a)""},"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,517,"""-20:50"","
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,518,"Truncated~Extended~-mm:ss~Spec 5.3.1.4(a)""},"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,519,/ A specific minute of the implied hour
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,520,"""-20"","
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,521,"Truncated~Basic~-mm~Spec 5.3.1.4(b)""},"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,522,/ A specific second of the implied minute
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,523,"""--50"","
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,524,"Truncated~Basic~--ss~Spec 5.3.1.4(c)""},"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,525,/ A specific minute and second of the implied hour and
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,526,/ a decimal fraction of a second
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,527,"""-2050,5"","
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,528,"Truncated~Basic~-mmss,s~Spec 5.3.1.4(d)""},"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,529,"""-20:50,5"","
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,530,"Truncated~Extended~-mm:ss,s~Spec 5.3.1.4(d)""},"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,531,/ A specific minute of the implied hour and a decimal fraction
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,532,/ of the minute
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,533,"""-20,8"","
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,534,"Truncated~Basic~-mm,m~Spec 5.3.1.4(e)""},"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,535,/ A specific second of the implied minute and a decimal fraction
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,536,/ of the second
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,537,"""--50,5"","
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,538,"Truncated~Basic~--ss,s~Spec 5.3.1.4(f)""},"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,541,/ Spec Section 5.3.2 - Midnight
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,543,rivate final String[][] times532 = {
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,544,"""000000"","
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,545,"Midnight~Basic~000000~Spec 5.3.2""},"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,546,"""00:00:00"","
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,547,"Midnight~Extended~00:00:00~Spec 5.3.2""},"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,548,"""240000"","
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,549,"Midnight~Basic~240000~Spec 5.3.2""},"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,550,"""24:00:00"","
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,551,"Midnight~Extended~24:00:00~Spec 5.3.2""},"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,552,"""0000"","
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,553,"Midnight~Basic~0000~Spec 5.3.2 Note 1""},"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,554,"""2400"","
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,555,"Midnight~Basic~2400~Spec 5.3.2 Note 1""},"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,558,/ Spec Section 5.3.4.2 - Local time and the difference with UTC
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,560,rivate final String[][] times5342 = {
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,561,"""152746+0100"","
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,562,"Difference~Basic~hhmmss(+/-)hhmm~Spec 5.3.4.2""},"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,563,"""15:27:46+01:00"","
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,564,"Difference~Extended~hh:mm:ss(+/-)hh:mm~Spec 5.3.4.2""},"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,565,"""152746-0500"","
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,566,"Difference~Basic~hhmmss(+/-)hhmm~Spec 5.3.4.2""},"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,567,"""15:27:46-05:00"","
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,568,"Difference~Extended~hh:mm:ss(+/-)hh:mm~Spec 5.3.4.2""},"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,571,/ Spec Section 5.4 - Combinations of date and time of day
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,573,/ Spec Section 5.4.1 - Complete representation
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,575,rivate final String[][] datetimes541 = {
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,576,"""19990101T112233"","
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,577,"Combination~Basic~YYYYMMDDThhmmss~Spec 5.4.1(a)""},"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,578,"""1999-01-01T11:22:33"","
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,579,"Combination~Extended~YYYY-MM-DDThh:mm:ss~Spec 5.4.1(a)""},"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,580,"""1999123T112233"","
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,581,"Combination~Basic~YYYYDDDThhmmss~Spec 5.4.1(b)""},"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,582,"""1999-123T11:22:33"","
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,583,"Combination~Extended~YYYY-DDDThh:mm:ss~Spec 5.4.1(b)""},"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,584,"""1999W176T112233"","
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,585,"Combination~Basic~YYYYWwwDThhmmss~Spec 5.4.1(c)""},"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,586,"""1999-W17-6T11:22:33"","
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,587,"Combination~Extended~YYYY-Www-DThh:mm:ss~Spec 5.4.1(c)""},"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,590,/ Spec Section 5.4.2 - Representations other than complete
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,592,rivate final String[][] datetimes542 = {
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,593,"""19990101T1516"","
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,594,"Reduced-Combo~Basic~YYYYMMDDThhmm~Spec 5.4.2(a)""},"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,595,"""1999-01-01T15:16"","
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,596,"Reduced-Combo~Extended~YYYY-MM-DDThh:mm~Spec 5.4.2(a)""},"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,597,"""1999123T1516"","
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,598,"Reduced-Combo~Basic~YYYYDDDThhmm~Spec 5.4.2(b)""},"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,599,"""1999-123T15:16"","
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,600,"Reduced-Combo~Extended~YYYY-DDDThh:mm~Spec 5.4.2(b)""},"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,601,"""1985W155T1015+0400"","
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,602,"Reduced-Combo~Basic~YYYYWwwDThhmm+hhmm~Spec 5.4.2(b)""},"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,603,"""1985W155T1015-0400"","
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,604,"Reduced-Combo~Basic~YYYYWwwDThhmm-hhmm~Spec 5.4.2(b)""},"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,605,"""1985-W15-5T10:15+04:00"","
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,606,"Reduced-Combo~Extended~YYYY-Www-DThh:mm+hh:mm~Spec 5.4.2(b)""},"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,607,"""1985-W15-5T10:15-04:00"","
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,608,"Reduced-Combo~Extended~YYYY-Www-DThh:mm-hh:mm~Spec 5.4.2(b)""},"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,611,/ A Specification Section
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,613,rivate class SpecSection {
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,614,rivate final String name;
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,615,rivate final String[][] testData;
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,616,rivate final int numTests;
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,617,rivate int failedTests = 0;
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,618,"pecSection(final String name, final String[][] testData) {"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,619,his.name = name;
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,620,his.testData = testData;
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,621,his.numTests = this.testData.length;
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,623,ublic String getName() {
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,624,eturn name;
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,626,ublic String[][] getTestData() {
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,627,eturn testData;
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,629,ublic int getNumTests() {
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,630,eturn numTests;
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,632,ublic int getFailedTests() {
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,633,eturn failedTests;
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,635,ublic void bumpFailedTests() {
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,636,+failedTests;
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,638,ublic void showResults() {
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,639,"tr.println(""Section Results For: "" + name );"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,640,"tr.println(""\tSection Number of CTOR tests: "" + numTests );"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,641,"tr.println(""\tSection Failed CTOR tests: "" + failedTests );"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,646,/ A Specification Section Test Runner
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,648,rivate class SectionRunner {
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,649,rivate final SpecSection ss;
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,650,rivate final String prepend;
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,651,rivate final String append;
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,652,rivate ReadableInstant ri = null;
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,653,"ectionRunner(final SpecSection ss, final String prepend,"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,654,inal String append) {
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,655,his.ss = ss;
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,656,his.prepend = prepend;
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,657,his.append = append;
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,659,ublic final void run() {
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,660,"tr.println("" "");"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,661,"tr.println(""-> Start Section: "" + ss.getName());"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,662,tring[][] testData = ss.getTestData();
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,663,tring sDT = null;
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,664,oolean raised = false;
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,665,or(int nextDate = 0; nextDate < testData.length; ++nextDate) {
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,666,DT = prepend + testData[nextDate][0] + append;
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,667,"tr.println("" "");"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,668,"tr.println( ""The Next String Is: "" + sDT );"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,669,"tr.println( ""The Spec Reference Is: """
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,670, testData[nextDate][1] );
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,671,t.bumpNumTests();
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,672,ry
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,674,f ( dateTimes ) {
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,675,i = new DateTime( sDT );
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,678,lse
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,680,f ( dateOnly ) {
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,681,i = new DateOnly( sDT );
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,683,lse
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,685,i = new TimeOnly( sDT );
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,690,atch(IllegalArgumentException pe)
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,692,s.bumpFailedTests();
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,693,t.bumpFailedTests();
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,694,"tr.println(""Parse Exception Detected"");"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,695,e.printStackTrace( wtr );
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,696,aised = true;
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,698,f ( !raised ) {
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,699,"tr.print(""Construction Complete, "");"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,700,"tr.println(""As String: "" + this.ri);"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,702,aised = false;
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,703, // end of the for
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,704,s.showResults();
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,705,t.showResults();
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,706, // end of run
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,709,/ Running Totals Tracker
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,711,rivate class TotalsTracker {
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,712,rivate int numTests = 0;
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,713,rivate int failedTests = 0;
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,714,ublic final int getNumTests() { return numTests; }
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,715,ublic final int getFailedTests() { return failedTests; }
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,716,ublic final void bumpNumTests() { ++numTests; }
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,717,ublic final void bumpFailedTests() { ++failedTests; }
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,718,ublic final void showResults() {
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,719,"/ wtr.println("" "");"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,720,"tr.println(""\tCurrent Total of CTOR tests: "" + numTests );"
False,JodaTime/src/test/org/joda/test/time/TestConstructors.java,JodaTime/src/test/org/joda/test/time/TestConstructors.java,721,"tr.println(""\tCurrent # of Failed CTOR tests: "" + failedTests );"
False,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,2," Joda Software License, Version 1.0"
False,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,5, Copyright (c) 2001-2004 Stephen Colebourne.
False,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,6, All rights reserved.
False,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,8," Redistribution and use in source and binary forms, with or without"
False,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,9," modification, are permitted provided that the following conditions"
False,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,10, are met:
False,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,12, 1. Redistributions of source code must retain the above copyright
False,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,13,"    notice, this list of conditions and the following disclaimer."
False,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,15, 2. Redistributions in binary form must reproduce the above copyright
False,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,16,"    notice, this list of conditions and the following disclaimer in"
False,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,17,    the documentation and/or other materials provided with the
False,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,18,    distribution.
False,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,20," 3. The end-user documentation included with the redistribution,"
False,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,21,"    if any, must include the following acknowledgment:"
False,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,22,"       ""This product includes software developed by the"
False,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,23,"        Joda project (http://www.joda.org/)."""
False,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,24,"    Alternately, this acknowledgment may appear in the software itself,"
False,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,25,    if and wherever such third-party acknowledgments normally appear.
False,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,27," 4. The name ""Joda"" must not be used to endorse or promote products"
False,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,28,    derived from this software without prior written permission. For
False,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,29,"    written permission, please contact licence@joda.org."
False,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,31," 5. Products derived from this software may not be called ""Joda"","
False,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,32,"    nor may ""Joda"" appear in their name, without prior written"
False,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,33,    permission of the Joda project.
False,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,35, THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
False,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,36," WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
False,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,37, OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
False,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,38, DISCLAIMED.  IN NO EVENT SHALL THE JODA AUTHORS OR THE PROJECT
False,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,39," CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
False,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,40," SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
False,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,41," LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
False,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,42," USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
False,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,43," ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
False,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,44, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
False,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,45," OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
False,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,46, SUCH DAMAGE.
False,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,49, This software consists of voluntary contributions made by many
False,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,50, individuals on behalf of the Joda project and was originally
False,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,51, created by Stephen Colebourne <scolebourne@joda.org>. For more
False,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,52," information on the Joda project, please see <http://www.joda.org/>."
False,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,54,ackage org.joda.test.time;
False,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,56,mport junit.framework.TestSuite;
False,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,58,mport org.joda.time.DateTime;
False,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,59,mport org.joda.time.DateTimeZone;
False,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,60,mport org.joda.time.ReadableInstant;
False,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,61,mport org.joda.time.chrono.GJChronology;
False,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,62,mport org.joda.time.chrono.ISOChronology;
False,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,64, This class is a Junit unit test for the CTORs of the
False,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,65, DateTime date time class.  The DateTime class is passed
False,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,66," to the base class, which actually invokes the proper"
False,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,67, constructors.
False,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,69, @author Stephen Colebourne
False,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,70, @author Guy Allard
False,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,72,ublic class TestDateTimeCtors
False,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,73,xtends AbstractTestDateTimeCommon {
False,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,75,/ The class to be tested.
False,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,76,rivate static Class cls = DateTime.class;
False,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,79, This is the main class for this test suite.
False,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,80, @param args command line arguments.
False,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,82,ublic static void main(String[] args) {
False,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,83,unit.textui.TestRunner.run(suite());
False,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,86, TestSuite is a junit required method.
False,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,88,ublic static TestSuite suite() {
False,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,89,eturn BulkTest.makeSuite(TestDateTimeCtors.class);
False,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,92, Constructor.
False,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,93, @param name
False,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,95,ublic TestDateTimeCtors(String name) {
False,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,96,"uper(name, cls);"
False,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,99, Constructor
False,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,100, @param name The class name.
False,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,101, @param cls The class to be tested.
False,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,103,"ublic TestDateTimeCtors(String name, Class cls) {"
False,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,104,"uper(name, cls);"
False,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,105,estDateTimeCtors.cls = cls;
False,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,108, Junit <code>setUp()</code> method.
False,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,110,rotected void setUp() /* throws Exception */ {
False,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,111,uper.setUp();
False,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,115, Junit <code>tearDown()</code> method.
False,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,117,rotected void tearDown() /* throws Exception */ {
False,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,118,uper.tearDown();
False,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,121,rotected ReadableInstant createSmall(boolean ofAnotherClass) {
False,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,122,f (ofAnotherClass) {
False,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,123,"eturn new DateTime(-1L * 1000, GJChronology.getInstance());"
False,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,125,eturn new DateTime(-1L * 1000);
False,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,128,rotected ReadableInstant createMid(boolean ofAnotherClass) {
False,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,129,f (ofAnotherClass) {
False,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,130,"eturn new DateTime(2L * 1000, GJChronology.getInstance());"
False,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,132,eturn new DateTime(2L * 1000);
False,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,135,rotected ReadableInstant createLarge(boolean ofAnotherClass) {
False,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,136,f (ofAnotherClass) {
False,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,137,"eturn new DateTime(3L * 1000, GJChronology.getInstance());"
False,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,139,eturn new DateTime(3L * 1000);
False,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,142,rotected ReadableInstant createUTC(long millis) {
False,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestDateTimeCtors.java,143,"eturn new DateTime(millis, ISOChronology.getInstance(DateTimeZone.UTC));"
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,2," Joda Software License, Version 1.0"
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,5, Copyright (c) 2001-2004 Stephen Colebourne.
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,6, All rights reserved.
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,8," Redistribution and use in source and binary forms, with or without"
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,9," modification, are permitted provided that the following conditions"
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,10, are met:
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,12, 1. Redistributions of source code must retain the above copyright
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,13,"    notice, this list of conditions and the following disclaimer."
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,15, 2. Redistributions in binary form must reproduce the above copyright
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,16,"    notice, this list of conditions and the following disclaimer in"
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,17,    the documentation and/or other materials provided with the
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,18,    distribution.
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,20," 3. The end-user documentation included with the redistribution,"
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,21,"    if any, must include the following acknowledgment:"
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,22,"       ""This product includes software developed by the"
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,23,"        Joda project (http://www.joda.org/)."""
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,24,"    Alternately, this acknowledgment may appear in the software itself,"
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,25,    if and wherever such third-party acknowledgments normally appear.
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,27," 4. The name ""Joda"" must not be used to endorse or promote products"
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,28,    derived from this software without prior written permission. For
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,29,"    written permission, please contact licence@joda.org."
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,31," 5. Products derived from this software may not be called ""Joda"","
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,32,"    nor may ""Joda"" appear in their name, without prior written"
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,33,    permission of the Joda project.
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,35, THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,36," WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,37, OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,38, DISCLAIMED.  IN NO EVENT SHALL THE JODA AUTHORS OR THE PROJECT
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,39," CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,40," SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,41," LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,42," USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,43," ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,44, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,45," OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,46, SUCH DAMAGE.
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,49, This software consists of voluntary contributions made by many
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,50, individuals on behalf of the Joda project and was originally
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,51, created by Stephen Colebourne <scolebourne@joda.org>. For more
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,52," information on the Joda project, please see <http://www.joda.org/>."
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,54,ackage org.joda.test.time;
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,56,mport java.lang.reflect.Constructor;
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,57,mport java.lang.reflect.InvocationTargetException;
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,58,mport java.util.Calendar;
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,59,mport java.util.Date;
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,61,mport junit.framework.TestSuite;
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,63,mport org.joda.test.time.*;
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,64,mport org.joda.time.AbstractInstant;
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,65,mport org.joda.time.DateTimeZone;
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,66,mport org.joda.time.DateTime;
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,67,mport org.joda.time.Instant;
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,68,mport org.joda.time.ReadableInstant;
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,70, This class is a Junit unit test for the
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,71, Instant date time class.
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,73, @author Stephen Colebourne
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,74, @author Guy Allard
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,76,ublic class TestInstant extends AbstractTestAbstractInstant {
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,78,rivate static Class cls = Instant.class;
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,81, This is the main class for this test suite.
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,82, @param args command line arguments.
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,84,ublic static void main(String[] args) {
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,85,unit.textui.TestRunner.run(suite());
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,88, TestSuite is a junit required method.
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,90,ublic static TestSuite suite() {
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,91,eturn BulkTest.makeSuite(TestInstant.class);
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,94, TestDateTimeField constructor.
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,95, @param name
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,97,ublic TestInstant(String name) {
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,98,"uper(name, Instant.class);"
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,102, Test the CTOR with signature: ().
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,104,ublic void testCurrentTimeConstructor() throws Throwable {
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,105,ong currentMillis = System.currentTimeMillis();
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,106,"eadableInstant ri = create(cls, null, null);"
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,107,ssertTrue(ri.getMillis() - currentMillis < 100);
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,111, Test the CTOR with signature: (long).
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,113,ublic void testMillisConstructor() throws Throwable {
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,114,ong currentMillis = System.currentTimeMillis() + 1000;
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,115,"eadableInstant ri = create(cls, new Class[] {Long.TYPE}, new Object[] {new Long(currentMillis)});"
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,116,"ssertEquals(currentMillis, ri.getMillis());"
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,120, Test the CTOR with signature: (ReadableInstant).
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,122,ublic void testReadableInstantConstructor() throws Throwable {
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,123,"eadableInstant instant = create(Instant.class, null, null);"
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,124,"eadableInstant ri = create(cls, new Class[] {ReadableInstant.class}, new Object[] {instant});"
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,125,"ssertEquals(instant.getMillis(), ri.getMillis());"
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,129," Test the CTOR with signature: (ReadableInstant), null RI."
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,131,ublic void testReadableInstantConstructorEx() throws Throwable {
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,132,ry {
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,133,"reate(cls, new Class[] {ReadableInstant.class}, new Object[] {null});"
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,134, catch (IllegalArgumentException ex) {
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,135,eturn;
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,137,ail();
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,141, Test the CTOR with signature: (Date).
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,143,ublic void testDateConstructor() throws Throwable {
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,144,ate date = new Date();
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,145,"eadableInstant ri = create(cls, new Class[] {Date.class}, new Object[] {date});"
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,146,"ssertEquals(date.getTime(), ri.getMillis());"
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,150," Test the CTOR with signature: (Date), null date."
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,152,ublic void testDateConstructorEx() throws Throwable {
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,153,ry {
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,154,"reate(cls, new Class[] {Date.class}, new Object[] {null});"
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,155, catch (IllegalArgumentException ex) {
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,156,eturn;
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,158,ail();
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,162, Test the CTOR with signature: (Calendar).
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,164,ublic void testCalendarConstructor() throws Throwable {
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,165,alendar cal = Calendar.getInstance();
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,166,"eadableInstant ri = create(cls, new Class[] {Calendar.class}, new Object[] {cal});"
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,167,"ssertEquals(cal.getTime().getTime(), ri.getMillis());"
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,171," Test the CTOR with signature: (Calendar), null calendar."
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,173,ublic void testCalendarConstructorEx() throws Throwable {
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,174,ry {
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,175,"reate(cls, new Class[] {Calendar.class}, new Object[] {null});"
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,176, catch (IllegalArgumentException ex) {
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,177,eturn;
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,179,ail();
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,183, Test the CTOR with signature: (String).
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,185,ublic void testStringConstructor() throws Throwable {
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,186,"eadableInstant ri = create(cls, new Class[] {String.class}, new Object[] {""1970-01-01T13:02:03.004Z""});"
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,187,"ssertEquals(4 + 3*1000 + 2*1000*60 + 13*1000*60*60, ri.getMillis());"
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,188,/ TODO: Merge in proper ISO testing from TestConstructors
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,192," Test the CTOR with signature: (String), null string."
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,194,ublic void testStringConstructorEx() throws Throwable {
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,195,ry {
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,196,"reate(cls, new Class[] {String.class}, new Object[] {null});"
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,197, catch (IllegalArgumentException ex) {
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,198,eturn;
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,200,ail();
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,206, Test getChronology
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,208,ublic void testGetChronology() throws Throwable {
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,209,"eadableInstant ri1 = create(cls, new Class[] {Long.TYPE}, new Object[] {new Long(-300)});"
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,210,ssertNull(ri1.getChronology());
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,216, Test toInstant
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,218,ublic void testToInstant() throws Throwable {
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,219,"eadableInstant ri = create(cls, null, null);"
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,220,nstant instant = ri.toInstant();
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,221,"ssertSame(instant, ri);"
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,225, Test toString
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,227,ublic void testToString() throws Throwable {
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,228,"eadableInstant ri = create(cls, new Class[] {Long.TYPE}, new Object[] {new Long(4 + 3*1000 + 2*1000*60 + 13*1000*60*60)});"
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,229,"ssertEquals(""1970-01-01T13:02:03.004Z"", ri.toString());"
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,233, @see org.joda.test.time.AbstractTestReadableInstant#createLarge(boolean)
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,235,rotected ReadableInstant createLarge(boolean ofAnotherClass) {
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,236,f (ofAnotherClass) {
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,237,"eturn new DateTime(400, DateTimeZone.UTC);"
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,239,eturn new Instant(400);
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,243, @see org.joda.test.time.AbstractTestReadableInstant#createMid(boolean)
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,245,rotected ReadableInstant createMid(boolean ofAnotherClass) {
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,246,f (ofAnotherClass) {
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,247,"eturn new DateTime(100, DateTimeZone.UTC);"
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,249,eturn new Instant(100);
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,253, @see org.joda.test.time.AbstractTestReadableInstant#createSmall(boolean)
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,255,rotected ReadableInstant createSmall(boolean ofAnotherClass) {
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,256,f (ofAnotherClass) {
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,257,"eturn new DateTime(-300, DateTimeZone.UTC);"
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,259,eturn new Instant(-300);
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,262,rotected ReadableInstant createUTC(long millis) {
False,JodaTime/src/test/org/joda/test/time/TestInstant.java,JodaTime/src/test/org/joda/test/time/TestInstant.java,263,eturn new Instant(millis);
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,2," Joda Software License, Version 1.0"
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,5, Copyright (c) 2001-2004 Stephen Colebourne.
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,6, All rights reserved.
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,8," Redistribution and use in source and binary forms, with or without"
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,9," modification, are permitted provided that the following conditions"
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,10, are met:
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,12, 1. Redistributions of source code must retain the above copyright
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,13,"    notice, this list of conditions and the following disclaimer."
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,15, 2. Redistributions in binary form must reproduce the above copyright
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,16,"    notice, this list of conditions and the following disclaimer in"
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,17,    the documentation and/or other materials provided with the
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,18,    distribution.
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,20," 3. The end-user documentation included with the redistribution,"
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,21,"    if any, must include the following acknowledgment:"
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,22,"       ""This product includes software developed by the"
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,23,"        Joda project (http://www.joda.org/)."""
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,24,"    Alternately, this acknowledgment may appear in the software itself,"
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,25,    if and wherever such third-party acknowledgments normally appear.
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,27," 4. The name ""Joda"" must not be used to endorse or promote products"
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,28,    derived from this software without prior written permission. For
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,29,"    written permission, please contact licence@joda.org."
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,31," 5. Products derived from this software may not be called ""Joda"","
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,32,"    nor may ""Joda"" appear in their name, without prior written"
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,33,    permission of the Joda project.
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,35, THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,36," WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,37, OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,38, DISCLAIMED.  IN NO EVENT SHALL THE JODA AUTHORS OR THE PROJECT
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,39," CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,40," SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,41," LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,42," USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,43," ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,44, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,45," OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,46, SUCH DAMAGE.
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,49, This software consists of voluntary contributions made by many
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,50, individuals on behalf of the Joda project and was originally
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,51, created by Stephen Colebourne <scolebourne@joda.org>. For more
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,52," information on the Joda project, please see <http://www.joda.org/>."
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,54,ackage org.joda.test.time;
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,56,mport java.io.PrintStream;
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,57,mport java.util.Calendar;
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,58,mport java.util.Date;
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,59,mport java.util.GregorianCalendar;
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,60,mport java.util.SimpleTimeZone;
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,61,mport java.util.TimeZone;
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,63,mport junit.framework.TestSuite;
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,65,mport org.joda.time.Chronology;
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,66,mport org.joda.time.Instant;
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,67,mport org.joda.time.MutableDateTime;
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,68,mport org.joda.time.ReadableInstant;
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,69,mport org.joda.time.chrono.ISOChronology;
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,71, This class is a Junit unit test for the
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,72, org.joda.time.MutableDateTime class.
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,73, This currently forces tests using GMT only.
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,75, @author Guy Allard
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,77,ublic class TestMDTAdd extends BulkTest {
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,79, main
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,80, @param args command line arguments.
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,82,ublic static void main(String[] args) {
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,83,unit.textui.TestRunner.run(suite());
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,86, TestSuite
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,88,ublic static TestSuite suite() {
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,89,eturn BulkTest.makeSuite(TestMDTAdd.class);
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,92, TestMDTAdd constructor.
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,93, @param name
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,95,ublic TestMDTAdd(String name) {
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,96,uper(name);
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,98,/ Class Name: org.joda.time.MutableDateTime
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,100, Junit <code>setUp()</code> method.
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,102,rotected void setUp() /* throws Exception */ {
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,103,/ super.setUp();
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,104,+testNum;
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,105,"imeZone.setDefault( new SimpleTimeZone(0, ""UTC"") );"
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,106,/ gcals = gcalsMiscBunch;
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,109, Junit <code>tearDown()</code> method.
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,111,rotected void tearDown() /* throws Exception */ {
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,112,/ super.tearDown();
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,115,rivate boolean debug = true;
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,116,rivate static int testNum = 0;
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,117,rivate PrintStream ewtr = System.err;
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,119,regorianCalendar[] gcals0 = {
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,120,"ew GregorianCalendar(1999, Calendar.JANUARY, 1, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,125,eadableInstant rica = null;
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,129,hronology cronca = null;
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,133,ate jdtca = null;
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,137,alendar calca = null;
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,142,regorianCalendar[] gcals = null;
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,146,inal int bumpValue = 385;
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,147,/ final int bumpValue = 0;
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,151,/ GregorianCalendar gcal = null;
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,155,tring isoString = null;
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,159,utableDateTime mdt = null;
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,163,hronology chrona = null;
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,167,ong setMillis = -1L;
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,171,nt setYear = -1;
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,172,nt setMonth = -1;
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,173,nt setDay = -1;
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,174,nt setHour = -1;
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,175,nt setMinute = -1;
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,176,nt setSecond = -1;
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,177,nt setMillisecond = -1;
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,178,tring setString = null;
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,179,tring yearStr = null;
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,180,tring monthStr = null;
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,181,tring dayStr = null;
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,182,tring hourStr = null;
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,183,tring minuteStr = null;
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,184,tring secondStr = null;
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,185,tring millisecondStr = null;
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,189,ong longVal = null;
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,193,oolean failed;
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,196, Test the <code>addMillis(long)</code> method.
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,197, @see org.joda.time.MutableDateTime#add(long)
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,199,ublic void testAddMillis() {
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,200,"ail(""TBD"");"
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,203,ublic void testLast() {
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,204,"wtr.println(""TestMDTAdd completes"");"
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,205,wtr.flush();
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,209,/ Private methods.
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,212,rivate  void prepTest(int item) {
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,213,regorianCalendar wrkgcal = new GregorianCalendar(
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,214,"cals[item].get( Calendar.YEAR ),"
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,215,"cals[item].get( Calendar.MONTH ),"
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,216,"cals[item].get( Calendar.DATE ),"
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,217,"cals[item].get( Calendar.HOUR ),"
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,218,"cals[item].get( Calendar.MINUTE ),"
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,219,cals[item].get( Calendar.SECOND )
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,221,rkgcal.setGregorianChange(new Date(Long.MIN_VALUE));
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,222,"rkgcal.set(Calendar.ERA, gcals[item].get(Calendar.ERA));"
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,224,"rkgcal.add(Calendar.MILLISECOND, bumpValue);"
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,225,rkgcal.setMinimalDaysInFirstWeek(4);
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,226,rkgcal.setFirstDayOfWeek(Calendar.MONDAY);
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,228,/ Force the GregorianCalendar to recalculate all internal
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,229,/ values.
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,231,rkgcal.setTime( wrkgcal.getTime() );
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,233,f ( debug ) {
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,234,"wtr.println(""====Test Number: "" + testNum);"
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,235,"wtr.println(""  ==Item Number: "" + item);"
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,236,wtr.flush();
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,238,soString = getDateTimeString( wrkgcal );
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,239,dt = null;
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,240,ry
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,242,"dt = new MutableDateTime( isoString, ISOChronology.getInstanceUTC() );"
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,244,atch(IllegalArgumentException pe)
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,246,"wtr.println(""IllegalArgumentException Detected: "" + isoString);"
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,247,wtr.println( pe.getMessage() );
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,248,wtr.flush();
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,251,f ( debug ) {
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,252,"wtr.println(""    =ISO String: "" + isoString);"
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,253,wtr.flush();
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,256,etMillis = System.currentTimeMillis();
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,257,regorianCalendar gx = new GregorianCalendar();
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,258,x.setTime( new Date( setMillis ) );
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,260,etYear = gx.get(Calendar.YEAR);
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,261,etMonth = gx.get(Calendar.MONTH) + 1;
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,262,etDay = gx.get(Calendar.DATE);
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,263,etHour = gx.get(Calendar.HOUR_OF_DAY);
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,264,etMinute = gx.get(Calendar.MINUTE);
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,265,etSecond = gx.get(Calendar.SECOND);
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,266,etMillisecond = gx.get(Calendar.MILLISECOND);
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,268,ica = new Instant( setMillis );
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,269,dtca = new Date( setMillis );
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,270,alca = Calendar.getInstance();
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,271,alca.setTime( jdtca );
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,272,ongVal = new Long( setMillis );
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,274,"utableDateTime temp = new MutableDateTime( setMillis,"
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,275,SOChronology.getInstanceUTC() );
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,276,"etString = """" + temp;"
False,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,JodaTime/src/test/org/joda/test/time/TestMDTAdd.java,279, // end of class TestMDTAdd
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,2," Joda Software License, Version 1.0"
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,5, Copyright (c) 2001-2004 Stephen Colebourne.
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,6, All rights reserved.
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,8," Redistribution and use in source and binary forms, with or without"
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,9," modification, are permitted provided that the following conditions"
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,10, are met:
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,12, 1. Redistributions of source code must retain the above copyright
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,13,"    notice, this list of conditions and the following disclaimer."
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,15, 2. Redistributions in binary form must reproduce the above copyright
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,16,"    notice, this list of conditions and the following disclaimer in"
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,17,    the documentation and/or other materials provided with the
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,18,    distribution.
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,20," 3. The end-user documentation included with the redistribution,"
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,21,"    if any, must include the following acknowledgment:"
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,22,"       ""This product includes software developed by the"
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,23,"        Joda project (http://www.joda.org/)."""
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,24,"    Alternately, this acknowledgment may appear in the software itself,"
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,25,    if and wherever such third-party acknowledgments normally appear.
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,27," 4. The name ""Joda"" must not be used to endorse or promote products"
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,28,    derived from this software without prior written permission. For
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,29,"    written permission, please contact licence@joda.org."
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,31," 5. Products derived from this software may not be called ""Joda"","
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,32,"    nor may ""Joda"" appear in their name, without prior written"
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,33,    permission of the Joda project.
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,35, THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,36," WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,37, OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,38, DISCLAIMED.  IN NO EVENT SHALL THE JODA AUTHORS OR THE PROJECT
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,39," CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,40," SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,41," LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,42," USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,43," ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,44, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,45," OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,46, SUCH DAMAGE.
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,49, This software consists of voluntary contributions made by many
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,50, individuals on behalf of the Joda project and was originally
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,51, created by Stephen Colebourne <scolebourne@joda.org>. For more
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,52," information on the Joda project, please see <http://www.joda.org/>."
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,54,ackage org.joda.test.time;
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,56,mport java.io.PrintStream;
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,57,mport java.util.Calendar;
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,58,mport java.util.Date;
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,59,mport java.util.GregorianCalendar;
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,60,mport java.util.SimpleTimeZone;
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,61,mport java.util.TimeZone;
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,63,mport junit.framework.TestSuite;
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,65,mport org.joda.time.Chronology;
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,66,mport org.joda.time.Instant;
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,67,mport org.joda.time.MutableDateTime;
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,68,mport org.joda.time.ReadableInstant;
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,69,mport org.joda.time.chrono.ISOChronology;
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,71, This class is a Junit unit test for the
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,72, org.joda.time.MutableDateTime class.
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,73, This currently forces tests using GMT only.
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,75, @author Guy Allard
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,77,ublic class TestMDTAddWrapped extends BulkTest {
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,79, main
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,80, @param args command line arguments.
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,82,ublic static void main(String[] args) {
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,83,unit.textui.TestRunner.run(suite());
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,86, TestSuite
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,88,ublic static TestSuite suite() {
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,89,eturn BulkTest.makeSuite(TestMDTAddWrapped.class);
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,92, TestMDTAddWrapped constructor.
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,93, @param name
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,95,ublic TestMDTAddWrapped(String name) {
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,96,uper(name);
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,98,/ Class Name: org.joda.time.MutableDateTime
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,100, Junit <code>setUp()</code> method.
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,102,rotected void setUp() /* throws Exception */ {
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,103,/ super.setUp();
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,104,+testNum;
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,105,"imeZone.setDefault( new SimpleTimeZone(0, ""UTC"") );"
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,106,/ gcals = gcalsMiscBunch;
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,109, Junit <code>tearDown()</code> method.
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,111,rotected void tearDown() /* throws Exception */ {
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,112,/ super.tearDown();
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,115,rivate boolean debug = true;
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,116,rivate static int testNum = 0;
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,117,rivate PrintStream ewtr = System.err;
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,119,regorianCalendar[] gcals0 = {
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,120,"ew GregorianCalendar(1999, Calendar.JANUARY, 1, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,125,eadableInstant rica = null;
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,129,hronology cronca = null;
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,133,ate jdtca = null;
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,137,alendar calca = null;
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,142,regorianCalendar[] gcals = null;
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,146,inal int bumpValue = 385;
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,147,/ final int bumpValue = 0;
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,151,/ GregorianCalendar gcal = null;
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,155,tring isoString = null;
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,159,utableDateTime mdt = null;
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,163,hronology chrona = null;
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,167,ong setMillis = -1L;
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,171,nt setYear = -1;
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,172,nt setMonth = -1;
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,173,nt setDay = -1;
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,174,nt setHour = -1;
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,175,nt setMinute = -1;
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,176,nt setSecond = -1;
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,177,nt setMillisecond = -1;
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,178,tring setString = null;
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,179,tring yearStr = null;
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,180,tring monthStr = null;
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,181,tring dayStr = null;
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,182,tring hourStr = null;
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,183,tring minuteStr = null;
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,184,tring secondStr = null;
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,185,tring millisecondStr = null;
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,189,ong longVal = null;
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,193,oolean failed;
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,197,ublic void testFailure() {
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,198,"ail(""TBD - all MDT Add tests"");"
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,201,ublic void testLast() {
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,202,"wtr.println(""TestMDTAddWrapped completes"");"
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,203,wtr.flush();
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,207,/ Private methods.
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,210,rivate  void prepTest(int item) {
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,211,regorianCalendar wrkgcal = new GregorianCalendar(
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,212,"cals[item].get( Calendar.YEAR ),"
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,213,"cals[item].get( Calendar.MONTH ),"
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,214,"cals[item].get( Calendar.DATE ),"
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,215,"cals[item].get( Calendar.HOUR ),"
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,216,"cals[item].get( Calendar.MINUTE ),"
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,217,cals[item].get( Calendar.SECOND )
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,219,rkgcal.setGregorianChange(new Date(Long.MIN_VALUE));
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,220,"rkgcal.set(Calendar.ERA, gcals[item].get(Calendar.ERA));"
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,222,"rkgcal.add(Calendar.MILLISECOND, bumpValue);"
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,223,rkgcal.setMinimalDaysInFirstWeek(4);
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,224,rkgcal.setFirstDayOfWeek(Calendar.MONDAY);
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,226,/ Force the GregorianCalendar to recalculate all internal
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,227,/ values.
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,229,rkgcal.setTime( wrkgcal.getTime() );
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,231,f ( debug ) {
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,232,"wtr.println(""====Test Number: "" + testNum);"
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,233,"wtr.println(""  ==Item Number: "" + item);"
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,234,wtr.flush();
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,236,soString = getDateTimeString( wrkgcal );
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,237,dt = null;
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,238,ry
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,240,"dt = new MutableDateTime( isoString, ISOChronology.getInstanceUTC() );"
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,242,atch(IllegalArgumentException pe)
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,244,"wtr.println(""IllegalArgumentException Detected: "" + isoString);"
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,245,wtr.println( pe.getMessage() );
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,246,wtr.flush();
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,249,f ( debug ) {
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,250,"wtr.println(""    =ISO String: "" + isoString);"
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,251,wtr.flush();
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,254,etMillis = System.currentTimeMillis();
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,255,regorianCalendar gx = new GregorianCalendar();
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,256,x.setTime( new Date( setMillis ) );
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,258,etYear = gx.get(Calendar.YEAR);
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,259,etMonth = gx.get(Calendar.MONTH) + 1;
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,260,etDay = gx.get(Calendar.DATE);
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,261,etHour = gx.get(Calendar.HOUR_OF_DAY);
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,262,etMinute = gx.get(Calendar.MINUTE);
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,263,etSecond = gx.get(Calendar.SECOND);
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,264,etMillisecond = gx.get(Calendar.MILLISECOND);
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,266,ica = new Instant( setMillis );
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,267,dtca = new Date( setMillis );
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,268,alca = Calendar.getInstance();
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,269,alca.setTime( jdtca );
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,270,ongVal = new Long( setMillis );
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,272,"utableDateTime temp = new MutableDateTime( setMillis,"
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,273,SOChronology.getInstanceUTC() );
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,274,"etString = """" + temp;"
False,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,JodaTime/src/test/org/joda/test/time/TestMDTAddWrapped.java,277, // end of class TestMDTAddWrapped
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,2," Joda Software License, Version 1.0"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,5, Copyright (c) 2001-2004 Stephen Colebourne.
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,6, All rights reserved.
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,8," Redistribution and use in source and binary forms, with or without"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,9," modification, are permitted provided that the following conditions"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,10, are met:
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,12, 1. Redistributions of source code must retain the above copyright
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,13,"    notice, this list of conditions and the following disclaimer."
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,15, 2. Redistributions in binary form must reproduce the above copyright
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,16,"    notice, this list of conditions and the following disclaimer in"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,17,    the documentation and/or other materials provided with the
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,18,    distribution.
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,20," 3. The end-user documentation included with the redistribution,"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,21,"    if any, must include the following acknowledgment:"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,22,"       ""This product includes software developed by the"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,23,"        Joda project (http://www.joda.org/)."""
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,24,"    Alternately, this acknowledgment may appear in the software itself,"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,25,    if and wherever such third-party acknowledgments normally appear.
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,27," 4. The name ""Joda"" must not be used to endorse or promote products"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,28,    derived from this software without prior written permission. For
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,29,"    written permission, please contact licence@joda.org."
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,31," 5. Products derived from this software may not be called ""Joda"","
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,32,"    nor may ""Joda"" appear in their name, without prior written"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,33,    permission of the Joda project.
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,35, THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,36," WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,37, OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,38, DISCLAIMED.  IN NO EVENT SHALL THE JODA AUTHORS OR THE PROJECT
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,39," CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,40," SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,41," LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,42," USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,43," ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,44, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,45," OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,46, SUCH DAMAGE.
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,49, This software consists of voluntary contributions made by many
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,50, individuals on behalf of the Joda project and was originally
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,51, created by Stephen Colebourne <scolebourne@joda.org>. For more
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,52," information on the Joda project, please see <http://www.joda.org/>."
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,54,ackage org.joda.test.time;
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,56,mport java.io.PrintStream;
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,57,mport java.util.Calendar;
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,58,mport java.util.Date;
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,59,mport java.util.GregorianCalendar;
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,60,mport java.util.SimpleTimeZone;
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,61,mport java.util.TimeZone;
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,63,mport junit.framework.TestSuite;
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,65,mport org.joda.time.Chronology;
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,66,mport org.joda.time.DateTimeConstants;
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,67,mport org.joda.time.MutableDateTime;
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,68,mport org.joda.time.chrono.ISOChronology;
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,70, This class is a Junit unit test for the
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,71, org.joda.time.MutableDateTime class.
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,72, This currently forces tests using GMT only.
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,74, @author Guy Allard
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,76,ublic class TestMDTGet extends BulkTest {
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,78, main
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,79, @param args command line arguments.
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,81,ublic static void main(String[] args) {
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,82,unit.textui.TestRunner.run(suite());
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,85, TestSuite
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,87,ublic static TestSuite suite() {
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,88,eturn BulkTest.makeSuite(TestMDTGet.class);
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,91, TestMDTGet constructor.
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,92, @param name
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,94,ublic TestMDTGet(String name) {
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,95,uper(name);
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,97,/ Class Name: org.joda.time.MutableDateTime
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,99, Junit <code>setUp()</code> method.
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,101,rotected void setUp() /* throws Exception */ {
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,102,/ super.setUp();
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,103,+testNum;
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,104,"imeZone.setDefault( new SimpleTimeZone(0, ""UTC"") );"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,105,cals = gcals0;
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,106,/ gcals = gcalsMiscBunch;
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,109, Junit <code>tearDown()</code> method.
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,111,rotected void tearDown() /* throws Exception */ {
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,112,/ super.tearDown();
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,115,rivate boolean debug = true;
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,116,rivate static int testNum = 0;
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,117,rivate PrintStream ewtr = System.err;
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,122,oolean failed;
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,123,/ Developers/Testers Note:
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,125,"/ 1) Construct any valid array of Gregorian calendar objects,"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,126,/    e.g. 'gcals1' below.
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,127,/ 2) Change the assignment statement in the setUp() method.
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,128,/ 3) Recompile+jar.
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,130,/ The new array will be used in all the tests.
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,135,regorianCalendar[] gcals0 = {
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,136,"ew GregorianCalendar(1999, Calendar.JANUARY, 1, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,138,regorianCalendar[] gcals1 = {
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,139,"ew GregorianCalendar(1999, Calendar.JANUARY, 1, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,140,"ew GregorianCalendar(1999, 1, 1, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,141,"ew GregorianCalendar(1999, 2, 1, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,142,"ew GregorianCalendar(2000, 0, 1, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,143,"ew GregorianCalendar(2000, 1, 1, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,144,"ew GregorianCalendar(2000, 2, 1, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,146,regorianCalendar[] gcalsGJCutOver = {
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,147,"ew GregorianCalendar(1582, Calendar.OCTOBER, 4, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,148,"ew GregorianCalendar(1582, Calendar.OCTOBER, 5, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,149,"ew GregorianCalendar(1582, Calendar.OCTOBER, 6, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,150,"ew GregorianCalendar(1582, Calendar.OCTOBER, 7, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,151,"ew GregorianCalendar(1582, Calendar.OCTOBER, 8, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,152,"ew GregorianCalendar(1582, Calendar.OCTOBER, 9, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,153,"ew GregorianCalendar(1582, Calendar.OCTOBER, 10, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,154,"ew GregorianCalendar(1582, Calendar.OCTOBER, 11, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,155,"ew GregorianCalendar(1582, Calendar.OCTOBER, 12, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,156,"ew GregorianCalendar(1582, Calendar.OCTOBER, 13, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,157,"ew GregorianCalendar(1582, Calendar.OCTOBER, 14, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,158,"ew GregorianCalendar(1582, Calendar.OCTOBER, 15, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,160,regorianCalendar[] gcalsPreCut = {
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,161,"ew GregorianCalendar(1, Calendar.JANUARY, 1, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,162,"ew GregorianCalendar(400, Calendar.FEBRUARY, 28, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,163,"ew GregorianCalendar(403, Calendar.FEBRUARY, 28, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,164,"ew GregorianCalendar(404, Calendar.FEBRUARY, 29, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,165,"ew GregorianCalendar(1066, Calendar.DECEMBER, 25, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,166,"ew GregorianCalendar(1492, Calendar.MAY, 5, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,167,"ew GregorianCalendar(1385, Calendar.MARCH, 23, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,170,regorianCalendar[] gcalsYear0 = {
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,171,"ew GregorianCalendar(0, Calendar.JANUARY, 1, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,172,"ew GregorianCalendar(0, Calendar.DECEMBER, 31, 23, 59, 59),"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,174,regorianCalendar[] gcalsYearM1 = {
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,175,"ew GregorianCalendar(-1, Calendar.JANUARY, 1, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,177,regorianCalendar[] gcalsEndPoints = {
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,178,"ew GregorianCalendar(-9999, Calendar.JANUARY, 1, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,179,"ew GregorianCalendar(+9999, Calendar.DECEMBER, 31, 23, 59, 59),"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,181,/ This don't work.  ParseException from the CTOR.
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,182,regorianCalendar[] gcalsOutSide = {
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,183,"ew GregorianCalendar(+76542, Calendar.DECEMBER, 31, 23, 59, 59),"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,184,"ew GregorianCalendar(-12345, Calendar.JANUARY, 1, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,187,regorianCalendar[] gcalsMiscBunch = {
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,188,"ew GregorianCalendar(-9999, Calendar.JANUARY, 1, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,189,"ew GregorianCalendar(+9999, Calendar.DECEMBER, 31, 23, 59, 59),"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,190,"ew GregorianCalendar(-1, Calendar.JANUARY, 1, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,191,"ew GregorianCalendar(0, Calendar.JANUARY, 1, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,192,"ew GregorianCalendar(0, Calendar.DECEMBER, 31, 23, 59, 59),"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,193,"ew GregorianCalendar(1, Calendar.JANUARY, 1, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,194,"ew GregorianCalendar(400, Calendar.FEBRUARY, 28, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,195,"ew GregorianCalendar(403, Calendar.FEBRUARY, 28, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,196,"ew GregorianCalendar(404, Calendar.FEBRUARY, 29, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,197,"ew GregorianCalendar(1066, Calendar.DECEMBER, 25, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,198,"ew GregorianCalendar(1492, Calendar.MAY, 5, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,199,"ew GregorianCalendar(1385, Calendar.MARCH, 23, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,200,"ew GregorianCalendar(1582, Calendar.OCTOBER, 4, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,201,"ew GregorianCalendar(1582, Calendar.OCTOBER, 5, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,202,"ew GregorianCalendar(1582, Calendar.OCTOBER, 6, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,203,"ew GregorianCalendar(1582, Calendar.OCTOBER, 7, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,204,"ew GregorianCalendar(1582, Calendar.OCTOBER, 8, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,205,"ew GregorianCalendar(1582, Calendar.OCTOBER, 9, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,206,"ew GregorianCalendar(1582, Calendar.OCTOBER, 10, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,207,"ew GregorianCalendar(1582, Calendar.OCTOBER, 11, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,208,"ew GregorianCalendar(1582, Calendar.OCTOBER, 12, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,209,"ew GregorianCalendar(1582, Calendar.OCTOBER, 13, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,210,"ew GregorianCalendar(1582, Calendar.OCTOBER, 14, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,211,"ew GregorianCalendar(1582, Calendar.OCTOBER, 15, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,212,"ew GregorianCalendar(1999, Calendar.JANUARY, 1, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,213,"ew GregorianCalendar(1999, 1, 1, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,214,"ew GregorianCalendar(1999, 2, 1, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,215,"ew GregorianCalendar(2000, 0, 1, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,216,"ew GregorianCalendar(2000, 1, 1, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,217,"ew GregorianCalendar(2000, 2, 1, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,223,regorianCalendar[] gcals = null;
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,227,inal int bumpValue = 385;
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,228,/ final int bumpValue = 0;
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,232,/ GregorianCalendar gcal = null;
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,236,tring isoString = null;
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,240,utableDateTime mdt = null;
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,244,nt expected_year = -1;         // Calculated in setup
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,248,nt expected_mon = -1;
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,252,nt expected_day = -1;
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,256,nt expected_hour = -1;
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,260,nt expected_minute = -1;
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,264,nt expected_second = -1;
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,268,nt expected_doy = -1;
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,272,nt expected_woyw = -1;
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,276,nt expected_woyy = -1;
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,280,nt expected_dow = -1;
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,284,ong expected_gcmillis = -1L;
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,288,ong expected_millisofday = -1L;
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,292,ong expected_secondofday = -1L;
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,296,ong expected_minuteofday = -1L;
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,300,hronology chrona = null;
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,302,/ Test 'get' methods - 1st.
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,305, Test the <code>getChronology()</code> method.
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,306, @see org.joda.time.MutableDateTime#getChronology()
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,308,ublic void testGetChronology() {
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,309,or (int ngc = 0; ngc < gcals.length; ++ngc) {
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,310,repTest( ngc );
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,311,hrona = mdt.getChronology();
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,312,"ssertNotNull(""GC1:""+isoString, chrona);"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,313,/ Commented out until ?
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,314,"/ assertTrue(""GC2:""+isoString, chrona instanceof ISOChronology);"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,318, Test the <code>getMillis()</code> method.
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,319, @see org.joda.time.MutableDateTime#getMillis()
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,321,ublic void testGetMillis() {
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,322,or (int ngc = 0; ngc < gcals.length; ++ngc) {
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,323,repTest( ngc );
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,324,"ssertEquals(""GM1:""+isoString, expected_gcmillis, mdt.getMillis());"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,328, Test the <code>getDayOfWeek()</code> method.
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,329, @see org.joda.time.MutableDateTime#getDayOfWeek()
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,331,ublic void testGetDayOfWeek() {
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,332,or (int ngc = 0; ngc < gcals.length; ++ngc) {
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,333,repTest( ngc );
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,334,"ssertEquals(""GDOW1:""+isoString, expected_dow, mdt.getDayOfWeek() );"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,338, Test the <code>getDayOfMonth()</code> method.
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,339, @see org.joda.time.MutableDateTime#getDayOfMonth()
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,341,ublic void testGetDayOfMonth() {
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,342,or (int ngc = 0; ngc < gcals.length; ++ngc) {
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,343,repTest( ngc );
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,344,"ssertEquals(""GDOM1:""+isoString, expected_day, mdt.getDayOfMonth());"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,348, Test the <code>getDayOfYear()</code> method.
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,349, @see org.joda.time.MutableDateTime#getDayOfYear()
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,351,ublic void testGetDayOfYear() {
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,352,or (int ngc = 0; ngc < gcals.length; ++ngc) {
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,353,repTest( ngc );
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,354,"ssertEquals(""GDOY1:""+isoString, expected_doy, mdt.getDayOfYear());"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,358, Test the <code>getWeekOfYearWeek()</code> method.
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,359, @see org.joda.time.MutableDateTime#getWeekOfWeekyear()
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,361,ublic void testGetWeekOfWeekyear() {
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,362,or (int ngc = 0; ngc < gcals.length; ++ngc) {
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,363,repTest( ngc );
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,364,"ssertEquals(""GWOYW1:""+isoString, expected_woyw, mdt.getWeekOfWeekyear());"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,368, Test the <code>getWeekOfYearYear()</code> method.
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,369, @see org.joda.time.MutableDateTime#getWeekOfWeekyear()
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,371,ublic void testGetYearOfWeekyear() {
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,372,or (int ngc = 0; ngc < gcals.length; ++ngc) {
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,373,repTest( ngc );
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,374,"ssertEquals(""GWOYY1:""+isoString, expected_woyy, mdt.getWeekyear());"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,378, Test the <code>getMonthOfYear()</code> method.
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,379, @see org.joda.time.MutableDateTime#getMonthOfYear()
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,381,ublic void testGetMonthOfYear() {
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,382,or (int ngc = 0; ngc < gcals.length; ++ngc) {
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,383,repTest( ngc );
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,384,"ssertEquals(""GMOY1:""+isoString, expected_mon, mdt.getMonthOfYear());"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,388, Test the <code>getYear()</code> method.
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,389, @see org.joda.time.MutableDateTime#getYear()
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,391,ublic void testGetYear() {
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,392,or (int ngc = 0; ngc < gcals.length; ++ngc) {
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,393,repTest( ngc );
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,394,"ssertEquals(""GY1:""+isoString, expected_year, mdt.getYear());"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,398, Test the <code>getYearOfEra()</code> method.
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,399, @see org.joda.time.MutableDateTime#getYearOfEra()
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,402,ublic void testGetYearOfEra() {
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,403,or (int ngc = 0; ngc < gcals.length; ++ngc) {
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,404,repTest( ngc );
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,405,"ssertEquals(""GYOE1:""+isoString, Math.abs(expected_year), mdt.getYearOfEra());"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,410, Test the <code>getEra()</code> method.
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,411, @see org.joda.time.MutableDateTime#getEra()
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,414,ublic void testGetEra() {
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,415,or (int ngc = 0; ngc < gcals.length; ++ngc) {
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,416,repTest( ngc );
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,417,f ( gcals[ngc].get(Calendar.ERA) == GregorianCalendar.AD) {
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,418,"ssertEquals(""GERA1:""+isoString,"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,419,"ateTimeConstants.AD, mdt.getEra());"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,420, else {
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,421,"ssertEquals(""GERA1:""+isoString,"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,422,"ateTimeConstants.BC, mdt.getEra());"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,428, Test the <code>getMillisOfSecond()</code> method.
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,429, @see org.joda.time.MutableDateTime#getMillisOfSecond()
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,431,ublic void testGetMillisOfSecond() {
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,432,or (int ngc = 0; ngc < gcals.length; ++ngc) {
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,433,repTest( ngc );
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,434,"ssertEquals(""GMOS1:""+isoString, bumpValue, mdt.getMillisOfSecond());"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,438, Test the <code>getMillisOfDay()</code> method.
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,439, @see org.joda.time.MutableDateTime#getMillisOfDay()
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,441,ublic void testGetMillisOfDay() {
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,442,or (int ngc = 0; ngc < gcals.length; ++ngc) {
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,443,repTest( ngc );
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,444,"ssertEquals(""GMLSOD1:""+isoString, expected_millisofday, mdt.getMillisOfDay());"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,448, Test the <code>getSecondOfMinute()</code> method.
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,449, @see org.joda.time.MutableDateTime#getSecondOfMinute()
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,451,ublic void testGetSecondOfMinute() {
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,452,or (int ngc = 0; ngc < gcals.length; ++ngc) {
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,453,repTest( ngc );
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,454,"ssertEquals(""GSOM1:""+isoString, expected_second, mdt.getSecondOfMinute());"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,458, Test the <code>getSecondOfDay()</code> method.
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,459, @see org.joda.time.MutableDateTime#getSecondOfDay()
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,461,ublic void testGetSecondOfDay() {
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,462,or (int ngc = 0; ngc < gcals.length; ++ngc) {
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,463,repTest( ngc );
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,464,"ssertEquals(""GSOD1:""+isoString, expected_secondofday, mdt.getSecondOfDay());"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,468, Test the <code>getMinuteOfHour()</code> method.
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,469, @see org.joda.time.MutableDateTime#getMinuteOfHour()
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,471,ublic void testGetMinuteOfHour() {
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,472,or (int ngc = 0; ngc < gcals.length; ++ngc) {
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,473,repTest( ngc );
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,474,"ssertEquals(""GMOH1:""+isoString, expected_minute, mdt.getMinuteOfHour());"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,478, Test the <code>getMinuteOfDay()</code> method.
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,479, @see org.joda.time.MutableDateTime#getMinuteOfDay()
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,481,ublic void testGetMinuteOfDay() {
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,482,or (int ngc = 0; ngc < gcals.length; ++ngc) {
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,483,repTest( ngc );
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,484,"ssertEquals(""GMINOD1:""+isoString,"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,485,"xpected_minuteofday, mdt.getMinuteOfDay());"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,489, Test the <code>getHourOfDay()</code> method.
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,490, @see org.joda.time.MutableDateTime#getHourOfDay()
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,492,ublic void testGetHourOfDay() {
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,493,or (int ngc = 0; ngc < gcals.length; ++ngc) {
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,494,repTest( ngc );
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,495,"ssertEquals(""GHOD1:""+isoString, expected_hour,"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,496,dt.getHourOfDay());
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,500, Test the <code>dayOfWeek()</code> method.
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,501, @see org.joda.time.MutableDateTime#dayOfWeek()
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,503,ublic void testDayOfWeek() {
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,504,or (int ngc = 0; ngc < gcals.length; ++ngc) {
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,505,repTest( ngc );
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,506,"ssertEquals(""DOW1:""+isoString, expected_dow,"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,507,dt.dayOfWeek().get() );
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,508,"ssertEquals(""DOW2:""+isoString, expected_dow,"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,509,dt.dayOfWeek().getField().get(mdt.getMillis()));
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,511,"ssertEquals(""DOW3:""+isoString,"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,512,"owShort[mdt.dayOfWeek().get()],"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,513,dt.dayOfWeek().getAsShortText() );
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,514,"ssertEquals(""DOW4:""+isoString,"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,515,"owLong[mdt.dayOfWeek().get()],"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,516,dt.dayOfWeek().getAsText() );
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,520, Test the <code>dayOfMonth()</code> method.
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,521, @see org.joda.time.MutableDateTime#dayOfMonth()
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,523,ublic void testDayOfMonth() {
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,524,or (int ngc = 0; ngc < gcals.length; ++ngc) {
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,525,repTest( ngc );
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,526,"ssertEquals(""DOM1:""+isoString, expected_day,"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,527,dt.dayOfMonth().getField().get(mdt.getMillis()));
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,528,"ssertEquals(""DOM2:""+isoString, expected_day,"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,529,dt.dayOfMonth().getField().get(mdt.getMillis()));
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,530,"ssertEquals(""DOM3:""+isoString,"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,531,"""+expected_day, mdt.dayOfMonth().getAsShortText() );"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,532,"ssertEquals(""DOM4:""+isoString,"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,533,"""+expected_day, mdt.dayOfMonth().getAsText() );"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,537, Test the <code>dayOfYear()</code> method.
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,538, @see org.joda.time.MutableDateTime#dayOfYear()
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,540,ublic void testDayOfYear() {
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,541,or (int ngc = 0; ngc < gcals.length; ++ngc) {
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,542,repTest( ngc );
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,543,"ssertEquals(""DOY1:""+isoString, expected_doy,"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,544,dt.dayOfYear().getField().get(mdt.getMillis()));
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,545,"ssertEquals(""DOY2:""+isoString, expected_doy,"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,546,dt.dayOfYear().getField().get(mdt.getMillis()));
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,547,"ssertEquals(""DOY3:""+isoString,"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,548,"""+expected_doy, mdt.dayOfYear().getAsShortText() );"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,549,"ssertEquals(""DOY4:""+isoString,"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,550,"""+expected_doy, mdt.dayOfYear().getAsText() );"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,554, Test the <code>weekOfYearWeek()</code> method.
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,555, @see org.joda.time.MutableDateTime#weekOfWeekyear()
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,557,ublic void testWeekOfWeekyear() {
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,558,or (int ngc = 0; ngc < gcals.length; ++ngc) {
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,559,repTest( ngc );
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,560,"ssertEquals(""DWOYW1:""+isoString, expected_woyw,"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,561,dt.weekOfWeekyear().getField().get(mdt.getMillis()));
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,562,"ssertEquals(""DWOYW2:""+isoString, expected_woyw,"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,563,dt.weekOfWeekyear().getField().get(mdt.getMillis()));
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,564,"ssertEquals(""DWOYW3:""+isoString,"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,565,"""+expected_woyw, mdt.weekOfWeekyear().getAsShortText() );"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,566,"ssertEquals(""DWOYW4:""+isoString,"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,567,"""+expected_woyw, mdt.weekOfWeekyear().getAsText() );"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,571, Test the <code>weekOfYearYear()</code> method.
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,572, @see org.joda.time.MutableDateTime#weekyear()
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,574,ublic void testWeekyear() {
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,575,or (int ngc = 0; ngc < gcals.length; ++ngc) {
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,576,repTest( ngc );
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,577,"ssertEquals(""DWOYY1:""+isoString, expected_woyy,"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,578,dt.weekyear().getField().get(mdt.getMillis()));
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,579,"ssertEquals(""DWOYY2:""+isoString, expected_woyy,"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,580,dt.weekyear().getField().get(mdt.getMillis()));
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,581,"ssertEquals(""DWOYY3:""+isoString,"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,582,"""+expected_woyy, mdt.weekyear().getAsShortText() );"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,583,"ssertEquals(""DWOYY4:""+isoString,"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,584,"""+expected_woyy, mdt.weekyear().getAsText() );"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,588, Test the <code>monthOfYear()</code> method.
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,589, @see org.joda.time.MutableDateTime#monthOfYear()
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,591,ublic void testMonthOfYear() {
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,592,or (int ngc = 0; ngc < gcals.length; ++ngc) {
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,593,repTest( ngc );
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,594,"ssertEquals(""MOY1:""+isoString, expected_mon,"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,595,dt.monthOfYear().getField().get(mdt.getMillis()));
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,596,"ssertEquals(""MOY2:""+isoString, expected_mon,"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,597,dt.monthOfYear().getField().get(mdt.getMillis()));
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,598,"ssertEquals(""MOY3:""+isoString,"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,599,"oyShort[mdt.monthOfYear().getField().get(mdt.getMillis())],"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,600,dt.monthOfYear().getAsShortText() );
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,601,"ssertEquals(""MOY4:""+isoString,"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,602,"oyLong[mdt.monthOfYear().getField().get(mdt.getMillis())],"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,603,dt.monthOfYear().getAsText() );
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,607, Test the <code>year()</code> method.
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,608, @see org.joda.time.MutableDateTime#year()
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,610,ublic void testYear() {
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,611,or (int ngc = 0; ngc < gcals.length; ++ngc) {
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,612,repTest( ngc );
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,613,"ssertEquals(""Y1:""+isoString, expected_year,"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,614,dt.year().getField().get(mdt.getMillis()));
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,615,"ssertEquals(""Y2:""+isoString, expected_year,"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,616,dt.year().getField().get(mdt.getMillis()));
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,617,"ssertEquals(""Y3:""+isoString, """"+expected_year, mdt.year().getAsShortText() );"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,618,"ssertEquals(""Y4:""+isoString, """"+expected_year, mdt.year().getAsText() );"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,622, Test the <code>yearOfEra()</code> method.
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,623, @see org.joda.time.MutableDateTime#yearOfEra()
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,626,ublic void testYearOfEra() {
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,627,or (int ngc = 0; ngc < gcals.length; ++ngc) {
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,628,repTest( ngc );
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,629,nt lty = Math.abs( expected_year );
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,630,"ssertEquals(""YOE1:""+isoString, lty,"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,631,dt.yearOfEra().getField().get(mdt.getMillis()));
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,632,"ssertEquals(""YOE2:""+isoString, lty,"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,633,dt.yearOfEra().getField().get(mdt.getMillis()));
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,634,"ssertEquals(""YOE3:""+isoString, """"+lty, mdt.yearOfEra().getAsShortText() );"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,635,"ssertEquals(""YOE4:""+isoString, """"+lty, mdt.yearOfEra().getAsText() );"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,640, Test the <code>era()</code> method.
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,641, @see org.joda.time.MutableDateTime#era()
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,644,ublic void testEra() {
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,645,or (int ngc = 0; ngc < gcals.length; ++ngc) {
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,646,repTest( ngc );
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,647,f ( gcals[ngc].get(Calendar.ERA) == GregorianCalendar.AD) {
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,648,"ssertEquals(""ERA1:""+isoString, DateTimeConstants.AD,"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,649,dt.era().getField().get(mdt.getMillis()));
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,650,"ssertEquals(""ERA2:""+isoString, DateTimeConstants.AD,"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,651,dt.era().getField().get(mdt.getMillis()));
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,652,"ssertEquals(""ERA3:""+isoString, ""AD"", mdt.era().getAsShortText() );"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,653,"ssertEquals(""ERA4:""+isoString, ""AD"", mdt.era().getAsText() );"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,654, else {
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,655,"ssertEquals(""ERA1:""+isoString, DateTimeConstants.BC,"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,656,dt.era().getField().get(mdt.getMillis()));
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,657,"ssertEquals(""ERA2:""+isoString, DateTimeConstants.BC,"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,658,dt.era().getField().get(mdt.getMillis()));
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,659,"ssertEquals(""ERA3:""+isoString, ""BC"", mdt.era().getAsShortText() );"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,660,"ssertEquals(""ERA4:""+isoString, ""BC"", mdt.era().getAsText() );"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,666, Test the <code>millisOfSecond()</code> method.
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,667, @see org.joda.time.MutableDateTime#millisOfSecond()
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,669,ublic void testMillisOfSecond() {
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,670,or (int ngc = 0; ngc < gcals.length; ++ngc) {
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,671,repTest( ngc );
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,672,"ssertEquals(""MOS1:""+isoString,"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,673,"umpValue, mdt.millisOfSecond().getField().get(mdt.getMillis()));"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,674,"ssertEquals(""MOS2:""+isoString,"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,675,"umpValue, mdt.millisOfSecond().getField().get(mdt.getMillis()));"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,676,"ssertEquals(""MOS3:""+isoString,"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,677,"""+bumpValue, mdt.millisOfSecond().getAsShortText() );"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,678,"ssertEquals(""MOS4:""+isoString,"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,679,"""+bumpValue, mdt.millisOfSecond().getAsText() );"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,683, Test the <code>millisOfDay()</code> method.
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,684, @see org.joda.time.MutableDateTime#millisOfDay()
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,686,ublic void testMillisOfDay() {
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,687,or (int ngc = 0; ngc < gcals.length; ++ngc) {
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,688,repTest( ngc );
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,689,"ssertEquals(""MLSOD1:""+isoString,"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,690,"xpected_millisofday,"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,691,dt.millisOfDay().getField().get(mdt.getMillis()));
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,692,"ssertEquals(""MLSOD2:""+isoString,"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,693,"xpected_millisofday,"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,694,dt.millisOfDay().getField().get(mdt.getMillis()));
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,695,"ssertEquals(""MLSOD3:""+isoString,"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,696,"""+expected_millisofday, mdt.millisOfDay().getAsShortText() );"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,697,"ssertEquals(""MLSOD4:""+isoString,"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,698,"""+expected_millisofday, mdt.millisOfDay().getAsText() );"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,702, Test the <code>secondOfMinute()</code> method.
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,703, @see org.joda.time.MutableDateTime#secondOfMinute()
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,705,ublic void testSecondOfMinute() {
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,706,or (int ngc = 0; ngc < gcals.length; ++ngc) {
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,707,repTest( ngc );
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,708,"ssertEquals(""SOM1:""+isoString, expected_second,"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,709,dt.secondOfMinute().getField().get(mdt.getMillis()));
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,710,"ssertEquals(""SOM2:""+isoString, expected_second,"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,711,dt.secondOfMinute().getField().get(mdt.getMillis()));
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,712,"ssertEquals(""SOM3:""+isoString,"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,713,"""+expected_second, mdt.secondOfMinute().getAsShortText() );"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,714,"ssertEquals(""SOM4:""+isoString,"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,715,"""+expected_second, mdt.secondOfMinute().getAsText() );"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,719, Test the <code>secondOfDay()</code> method.
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,720, @see org.joda.time.MutableDateTime#secondOfDay()
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,722,ublic void testSecondOfDay() {
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,723,or (int ngc = 0; ngc < gcals.length; ++ngc) {
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,724,repTest( ngc );
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,725,"ssertEquals(""SOD1:""+isoString, expected_secondofday,"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,726,dt.secondOfDay().getField().get(mdt.getMillis()));
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,727,"ssertEquals(""SOD2:""+isoString, expected_secondofday,"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,728,dt.secondOfDay().getField().get(mdt.getMillis()));
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,729,"ssertEquals(""SOD3:""+isoString, """"+expected_secondofday,"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,730,dt.secondOfDay().getAsShortText() );
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,731,"ssertEquals(""SOD4:""+isoString, """"+expected_secondofday,"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,732,dt.secondOfDay().getAsText() );
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,736, Test the <code>minuteOfHour()</code> method.
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,737, @see org.joda.time.MutableDateTime#minuteOfHour()
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,739,ublic void testMinuteOfHour() {
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,740,or (int ngc = 0; ngc < gcals.length; ++ngc) {
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,741,repTest( ngc );
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,742,"ssertEquals(""MOH1:""+isoString, expected_minute,"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,743,dt.minuteOfHour().getField().get(mdt.getMillis()));
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,744,"ssertEquals(""MOH2:""+isoString, expected_minute,"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,745,dt.minuteOfHour().getField().get(mdt.getMillis()));
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,746,"ssertEquals(""MOH3:""+isoString,"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,747,"""+expected_minute, mdt.minuteOfHour().getAsShortText() );"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,748,"ssertEquals(""MOH4:""+isoString,"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,749,"""+expected_minute, mdt.minuteOfHour().getAsText() );"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,753, Test the <code>minuteOfDay()</code> method.
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,754, @see org.joda.time.MutableDateTime#minuteOfDay()
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,756,ublic void testMinuteOfDay() {
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,757,or (int ngc = 0; ngc < gcals.length; ++ngc) {
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,758,repTest( ngc );
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,759,"ssertEquals(""MOD1:""+isoString, expected_minuteofday,"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,760,dt.minuteOfDay().getField().get(mdt.getMillis()));
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,761,"ssertEquals(""MOD2:""+isoString, expected_minuteofday,"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,762,dt.minuteOfDay().getField().get(mdt.getMillis()));
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,763,"ssertEquals(""MOD3:""+isoString, """"+expected_minuteofday,"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,764,dt.minuteOfDay().getAsShortText() );
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,765,"ssertEquals(""MOD4:""+isoString, """"+expected_minuteofday,"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,766,dt.minuteOfDay().getAsText() );
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,770, Test the <code>hourOfDay()</code> method.
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,771, @see org.joda.time.MutableDateTime#hourOfDay()
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,773,ublic void testHourOfDay() {
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,774,or (int ngc = 0; ngc < gcals.length; ++ngc) {
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,775,repTest( ngc );
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,776,"ssertEquals(""HOD1:""+isoString, expected_hour,"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,777,dt.hourOfDay().getField().get(mdt.getMillis()));
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,778,"ssertEquals(""HOD2:""+isoString, expected_hour,"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,779,dt.hourOfDay().getField().get(mdt.getMillis()));
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,780,"ssertEquals(""HOD3:""+isoString,"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,781,"""+expected_hour, mdt.hourOfDay().getAsShortText() );"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,782,"ssertEquals(""HOD4:""+isoString,"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,783,"""+expected_hour, mdt.hourOfDay().getAsText() );"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,786,rivate static boolean getsDone = false;
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,788, Test the <code>toString()</code> method.
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,789, @see org.joda.time.MutableDateTime#toString()
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,791,ublic void testToString() {
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,792,or (int ngc = 0; ngc < gcals.length; ++ngc) {
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,793,repTest( ngc );
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,795,"ssertEquals(""TOS1:""+isoString,"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,796,"/ isoString + ""."" + bumpValue + ""Z"","
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,797,"soString,"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,798,dt.toString());
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,800,"ssertEquals(""TOS1:""+isoString,"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,801,"soString + ""."" + ""000"" + ""Z"","
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,802,dt.toString());
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,807,ublic void testLast() {
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,808,"wtr.println(""TestMDTGet completes"");"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,809,wtr.flush();
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,814,/ Private methods.
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,817,rivate  void prepTest(int item) {
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,818,regorianCalendar wrkgcal = new GregorianCalendar(
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,819,"cals[item].get( Calendar.YEAR ),"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,820,"cals[item].get( Calendar.MONTH ),"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,821,"cals[item].get( Calendar.DATE ),"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,822,"cals[item].get( Calendar.HOUR ),"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,823,"cals[item].get( Calendar.MINUTE ),"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,824,cals[item].get( Calendar.SECOND )
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,826,rkgcal.setGregorianChange(new Date(Long.MIN_VALUE));
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,827,"rkgcal.set(Calendar.ERA, gcals[item].get(Calendar.ERA));"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,829,"rkgcal.add(Calendar.MILLISECOND, bumpValue);"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,830,rkgcal.setMinimalDaysInFirstWeek(4);
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,831,rkgcal.setFirstDayOfWeek(Calendar.MONDAY);
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,833,/ Force the GregorianCalendar to recalculate all internal
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,834,/ values.
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,836,rkgcal.setTime( wrkgcal.getTime() );
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,838,f ( debug ) {
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,839,"wtr.println(""====Test Number: "" + testNum);"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,840,"wtr.println(""  ==Item Number: "" + item);"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,841,wtr.flush();
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,843,soString = getDateTimeString( wrkgcal );
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,844,dt = null;
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,845,ry
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,847,"dt = new MutableDateTime( isoString, ISOChronology.getInstanceUTC() );"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,849,atch(IllegalArgumentException pe)
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,851,"wtr.println(""IllegalArgumentException Detected: "" + isoString);"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,852,wtr.println( pe.getMessage() );
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,853,wtr.flush();
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,855,f ( debug ) {
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,856,"wtr.println(""    =ISO String: "" + isoString);"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,857,wtr.flush();
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,860,"/ When it is easy to do, we locally calculate test comparison"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,861,/ values rather than depend on Java Calendar's.
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,862,"/ If it is not fairly convenient, we call the Calendar's"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,863,/ get method.
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,865,"/ However, the following is very ugly code and needs to be"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,866,/ cleaned up.
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,868,nt pb = 0;
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,869,"f ( isoString.substring(0,1).equals(""-"") ) {"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,870,b = 1;
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,873,/ Calculate expected values.
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,875,xpected_gcmillis = wrkgcal.getTime().getTime();
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,877,"xpected_year = getPartValue( isoString.substring(0+pb,4+pb) );"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,878,f ( pb == 1 ) {
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,879,xpected_year = -expected_year;
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,882,"xpected_mon = getPartValue( isoString.substring(5+pb,7+pb) );"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,883,"xpected_day = getPartValue( isoString.substring(8+pb,10+pb) );"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,884,"xpected_hour = getPartValue( isoString.substring(11+pb,13+pb) );"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,885,"xpected_minute = getPartValue( isoString.substring(14+pb,16+pb) );"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,886,"xpected_second = getPartValue( isoString.substring(17+pb,19+pb) );"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,888,xpected_doy = wrkgcal.get(Calendar.DAY_OF_YEAR);
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,889,xpected_dow = wrkgcal.get(Calendar.DAY_OF_WEEK) - 1;
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,890,xpected_dow = (expected_dow <= 0 ? 7 : expected_dow);
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,892,xpected_woyw = wrkgcal.get(Calendar.WEEK_OF_YEAR);
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,893,f (expected_woyw == 1) {
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,894,"rkgcal.add(Calendar.DATE, +7);"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,895, else if (expected_woyw > 51) {
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,896,"rkgcal.add(Calendar.DATE, -14);"
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,898,xpected_woyy = wrkgcal.get(Calendar.YEAR);
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,899,f ( wrkgcal.get(Calendar.ERA) == GregorianCalendar.BC ) {
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,900,xpected_woyy = -(expected_woyy-1);
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,903,xpected_millisofday = expected_hour * DateTimeConstants.MILLIS_PER_HOUR
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,904, expected_minute * DateTimeConstants.MILLIS_PER_MINUTE
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,905, expected_second * DateTimeConstants.MILLIS_PER_SECOND
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,906, bumpValue;
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,907,xpected_secondofday = expected_hour * DateTimeConstants.SECONDS_PER_HOUR
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,908, expected_minute * DateTimeConstants.SECONDS_PER_MINUTE
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,909, expected_second;
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,910,xpected_minuteofday = expected_hour * DateTimeConstants.MINUTES_PER_HOUR
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,911, expected_minute;
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,912,eturn;
False,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,JodaTime/src/test/org/joda/test/time/TestMDTGet.java,914, // end of class TestMDTGet
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,2," Joda Software License, Version 1.0"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,5, Copyright (c) 2001-2004 Stephen Colebourne.
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,6, All rights reserved.
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,8," Redistribution and use in source and binary forms, with or without"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,9," modification, are permitted provided that the following conditions"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,10, are met:
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,12, 1. Redistributions of source code must retain the above copyright
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,13,"    notice, this list of conditions and the following disclaimer."
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,15, 2. Redistributions in binary form must reproduce the above copyright
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,16,"    notice, this list of conditions and the following disclaimer in"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,17,    the documentation and/or other materials provided with the
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,18,    distribution.
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,20," 3. The end-user documentation included with the redistribution,"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,21,"    if any, must include the following acknowledgment:"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,22,"       ""This product includes software developed by the"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,23,"        Joda project (http://www.joda.org/)."""
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,24,"    Alternately, this acknowledgment may appear in the software itself,"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,25,    if and wherever such third-party acknowledgments normally appear.
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,27," 4. The name ""Joda"" must not be used to endorse or promote products"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,28,    derived from this software without prior written permission. For
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,29,"    written permission, please contact licence@joda.org."
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,31," 5. Products derived from this software may not be called ""Joda"","
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,32,"    nor may ""Joda"" appear in their name, without prior written"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,33,    permission of the Joda project.
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,35, THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,36," WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,37, OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,38, DISCLAIMED.  IN NO EVENT SHALL THE JODA AUTHORS OR THE PROJECT
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,39," CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,40," SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,41," LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,42," USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,43," ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,44, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,45," OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,46, SUCH DAMAGE.
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,49, This software consists of voluntary contributions made by many
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,50, individuals on behalf of the Joda project and was originally
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,51, created by Stephen Colebourne <scolebourne@joda.org>. For more
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,52," information on the Joda project, please see <http://www.joda.org/>."
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,54,ackage org.joda.test.time;
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,56,mport java.io.PrintStream;
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,57,mport java.util.ArrayList;
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,58,mport java.util.Calendar;
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,59,mport java.util.Date;
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,60,mport java.util.GregorianCalendar;
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,61,mport java.util.SimpleTimeZone;
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,62,mport java.util.TimeZone;
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,64,mport junit.framework.TestSuite;
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,66,mport org.joda.time.Chronology;
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,67,mport org.joda.time.DateTimeConstants;
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,68,mport org.joda.time.Instant;
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,69,mport org.joda.time.MutableDateTime;
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,70,mport org.joda.time.ReadableInstant;
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,71,mport org.joda.time.chrono.ISOChronology;
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,73, This class is a Junit unit test for the
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,74, org.joda.time.MutableDateTime class.
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,75, This currently forces tests using GMT only.
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,77, @author Guy Allard
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,79,ublic class TestMDTSet extends BulkTest {
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,81, main
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,82, @param args command line arguments.
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,84,ublic static void main(String[] args) {
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,85,unit.textui.TestRunner.run(suite());
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,88, TestSuite
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,90,ublic static TestSuite suite() {
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,91,eturn BulkTest.makeSuite(TestMDTSet.class);
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,94, TestMDTSet constructor.
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,95, @param name
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,97,ublic TestMDTSet(String name) {
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,98,uper(name);
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,100,/ Class Name: org.joda.time.MutableDateTime
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,102, Junit <code>setUp()</code> method.
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,104,rotected void setUp() /* throws Exception */ {
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,105,/ super.setUp();
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,106,+testNum;
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,107,"imeZone.setDefault( new SimpleTimeZone(0, ""UTC"") );"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,108,cals = gcals0;
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,109,/ gcals = gcalsMiscBunch;
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,112, Junit <code>tearDown()</code> method.
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,114,rotected void tearDown() /* throws Exception */ {
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,115,/ super.tearDown();
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,118,rivate boolean debug = true;
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,119,rivate static int testNum = 0;
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,120,rivate PrintStream ewtr = System.err;
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,124,ong longVal = null;
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,128,oolean failed;
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,129,/ Developers/Testers Note:
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,131,"/ 1) Construct any valid array of Gregorian calendar objects,"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,132,/    e.g. 'gcals1' below.
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,133,/ 2) Change the assignment statement in the setUp() method.
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,134,/ 3) Recompile+jar.
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,136,/ The new array will be used in all the tests.
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,141,regorianCalendar[] gcals0 = {
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,142,"ew GregorianCalendar(1999, Calendar.JANUARY, 1, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,144,regorianCalendar[] gcals1 = {
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,145,"ew GregorianCalendar(1999, Calendar.JANUARY, 1, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,146,"ew GregorianCalendar(1999, 1, 1, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,147,"ew GregorianCalendar(1999, 2, 1, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,148,"ew GregorianCalendar(2000, 0, 1, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,149,"ew GregorianCalendar(2000, 1, 1, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,150,"ew GregorianCalendar(2000, 2, 1, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,152,regorianCalendar[] gcalsGJCutOver = {
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,153,"ew GregorianCalendar(1582, Calendar.OCTOBER, 4, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,154,"ew GregorianCalendar(1582, Calendar.OCTOBER, 5, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,155,"ew GregorianCalendar(1582, Calendar.OCTOBER, 6, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,156,"ew GregorianCalendar(1582, Calendar.OCTOBER, 7, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,157,"ew GregorianCalendar(1582, Calendar.OCTOBER, 8, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,158,"ew GregorianCalendar(1582, Calendar.OCTOBER, 9, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,159,"ew GregorianCalendar(1582, Calendar.OCTOBER, 10, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,160,"ew GregorianCalendar(1582, Calendar.OCTOBER, 11, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,161,"ew GregorianCalendar(1582, Calendar.OCTOBER, 12, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,162,"ew GregorianCalendar(1582, Calendar.OCTOBER, 13, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,163,"ew GregorianCalendar(1582, Calendar.OCTOBER, 14, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,164,"ew GregorianCalendar(1582, Calendar.OCTOBER, 15, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,166,regorianCalendar[] gcalsPreCut = {
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,167,"ew GregorianCalendar(1, Calendar.JANUARY, 1, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,168,"ew GregorianCalendar(400, Calendar.FEBRUARY, 28, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,169,"ew GregorianCalendar(403, Calendar.FEBRUARY, 28, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,170,"ew GregorianCalendar(404, Calendar.FEBRUARY, 29, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,171,"ew GregorianCalendar(1066, Calendar.DECEMBER, 25, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,172,"ew GregorianCalendar(1492, Calendar.MAY, 5, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,173,"ew GregorianCalendar(1385, Calendar.MARCH, 23, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,176,regorianCalendar[] gcalsYear0 = {
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,177,"ew GregorianCalendar(0, Calendar.JANUARY, 1, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,178,"ew GregorianCalendar(0, Calendar.DECEMBER, 31, 23, 59, 59),"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,180,regorianCalendar[] gcalsYearM1 = {
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,181,"ew GregorianCalendar(-1, Calendar.JANUARY, 1, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,183,regorianCalendar[] gcalsEndPoints = {
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,184,"ew GregorianCalendar(-9999, Calendar.JANUARY, 1, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,185,"ew GregorianCalendar(+9999, Calendar.DECEMBER, 31, 23, 59, 59),"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,187,/ This don't work.  ParseException from the CTOR.
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,188,regorianCalendar[] gcalsOutSide = {
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,189,"ew GregorianCalendar(+76542, Calendar.DECEMBER, 31, 23, 59, 59),"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,190,"ew GregorianCalendar(-12345, Calendar.JANUARY, 1, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,193,regorianCalendar[] gcalsMiscBunch = {
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,194,"ew GregorianCalendar(-9999, Calendar.JANUARY, 1, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,195,"ew GregorianCalendar(+9999, Calendar.DECEMBER, 31, 23, 59, 59),"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,196,"ew GregorianCalendar(-1, Calendar.JANUARY, 1, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,197,"ew GregorianCalendar(0, Calendar.JANUARY, 1, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,198,"ew GregorianCalendar(0, Calendar.DECEMBER, 31, 23, 59, 59),"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,199,"ew GregorianCalendar(1, Calendar.JANUARY, 1, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,200,"ew GregorianCalendar(400, Calendar.FEBRUARY, 28, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,201,"ew GregorianCalendar(403, Calendar.FEBRUARY, 28, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,202,"ew GregorianCalendar(404, Calendar.FEBRUARY, 29, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,203,"ew GregorianCalendar(1066, Calendar.DECEMBER, 25, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,204,"ew GregorianCalendar(1492, Calendar.MAY, 5, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,205,"ew GregorianCalendar(1385, Calendar.MARCH, 23, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,206,"ew GregorianCalendar(1582, Calendar.OCTOBER, 4, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,207,"ew GregorianCalendar(1582, Calendar.OCTOBER, 5, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,208,"ew GregorianCalendar(1582, Calendar.OCTOBER, 6, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,209,"ew GregorianCalendar(1582, Calendar.OCTOBER, 7, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,210,"ew GregorianCalendar(1582, Calendar.OCTOBER, 8, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,211,"ew GregorianCalendar(1582, Calendar.OCTOBER, 9, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,212,"ew GregorianCalendar(1582, Calendar.OCTOBER, 10, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,213,"ew GregorianCalendar(1582, Calendar.OCTOBER, 11, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,214,"ew GregorianCalendar(1582, Calendar.OCTOBER, 12, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,215,"ew GregorianCalendar(1582, Calendar.OCTOBER, 13, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,216,"ew GregorianCalendar(1582, Calendar.OCTOBER, 14, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,217,"ew GregorianCalendar(1582, Calendar.OCTOBER, 15, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,218,"ew GregorianCalendar(1999, Calendar.JANUARY, 1, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,219,"ew GregorianCalendar(1999, 1, 1, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,220,"ew GregorianCalendar(1999, 2, 1, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,221,"ew GregorianCalendar(2000, 0, 1, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,222,"ew GregorianCalendar(2000, 1, 1, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,223,"ew GregorianCalendar(2000, 2, 1, 0, 0, 0),"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,228,eadableInstant rica = null;
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,232,hronology cronca = null;
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,236,ate jdtca = null;
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,240,alendar calca = null;
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,245,regorianCalendar[] gcals = null;
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,249,inal int bumpValue = 385;
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,250,/ final int bumpValue = 0;
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,254,/ GregorianCalendar gcal = null;
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,258,tring isoString = null;
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,262,utableDateTime mdt = null;
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,266,hronology chrona = null;
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,270,ong setMillis = -1L;
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,274,nt setYear = -1;
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,275,nt setMonth = -1;
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,276,nt setDay = -1;
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,277,nt setHour = -1;
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,278,nt setMinute = -1;
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,279,nt setSecond = -1;
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,280,nt setMillisecond = -1;
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,281,tring setString = null;
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,282,tring yearStr = null;
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,283,tring monthStr = null;
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,284,tring dayStr = null;
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,285,tring hourStr = null;
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,286,tring minuteStr = null;
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,287,tring secondStr = null;
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,288,tring millisecondStr = null;
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,290,/ Long longVal = null;
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,292,oolean getsDone = true;
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,294,/ Test 'set' methods - 2nd.
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,298,/ Sets of Millis value.
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,301, Test the <code>setMillis(long)</code> method.
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,302, @see org.joda.time.MutableDateTime#setMillis(long)
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,304,ublic void testSetMillisL() {
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,305,etsDone = true;
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,306,or (int ngc = 0; ngc < gcals.length; ++ngc) {
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,307,repTest( ngc );
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,308,dt.setMillis( setMillis );
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,309,"ssertEquals(""SML1:""+isoString+"":""+setString,"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,310,"dt.getMillis(), setMillis);"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,314, Test the <code>setMillis(java.lang.Object)</code> method.
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,315, @see org.joda.time.MutableDateTime#setMillis(java.lang.Object)
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,317,ublic void testSetMillisO() {
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,318,or (int ngc = 0; ngc < gcals.length; ++ngc) {
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,319,repTest( ngc );
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,320,"/ewtr.println(""getsDone: "" + getsDone);"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,321,"/ewtr.println(""rica: "" + rica);"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,322,/ewtr.flush();
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,323,dt.setMillis( rica );
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,324,"ssertEquals(""SMO1:""+isoString+"":""+setString,"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,325,"etString, """"+mdt);"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,327,dt.setMillis( jdtca );
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,328,"ssertEquals(""SMO2:""+isoString+"":""+setString,"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,329,"etString, """"+mdt);"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,331,dt.setMillis( calca );
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,332,"ssertEquals(""SMO3:""+isoString+"":""+setString,"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,333,"etString, """"+mdt);"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,335,dt.setMillis( longVal );
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,336,"ssertEquals(""SMO4:""+isoString+"":""+setString,"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,337,"etString, """"+mdt);"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,339,dt.setMillis( setString );
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,340,"ssertEquals(""SMO5:""+isoString+"":""+setString,"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,341,"etString, """"+mdt);"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,343,ailed = false;
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,344,ica = null;
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,345,ry
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,347,dt.setMillis( rica );
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,349,atch(IllegalArgumentException iae)
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,351,ailed = true;
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,353,f ( !failed ) {
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,354,"ail(""SMO6:null"");"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,359,/ Set of individual fields through individual DateTe=imeFields.
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,362," Test the <code>set(org.joda.time.DateTimeField, int)</code> method."
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,363," @see org.joda.time.MutableDateTime#set(org.joda.time.DateTimeField, int)"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,365,ublic void testSetDTFI() {
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,366,or (int ngc = 0; ngc < gcals.length; ++ngc) {
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,367,repTest( ngc );
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,368,"dt.set( mdt.year().getField(), setYear );"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,369,"dt.set( mdt.monthOfYear().getField(), setMonth );"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,370,"dt.set( mdt.dayOfMonth().getField(), setDay );"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,371,"dt.set( mdt.hourOfDay().getField(), setHour );"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,372,"dt.set( mdt.minuteOfHour().getField(), setMinute );"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,373,"dt.set( mdt.secondOfMinute().getField(), setSecond );"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,374,"dt.set( mdt.millisOfSecond().getField(), setMillisecond );"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,375,"/ewtr.println(""setString: "" + setString);"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,376,"/ewtr.println(""mdt: "" + mdt);"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,377,"ssertEquals(""DTFI1:""+isoString+"":""+setString,"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,378,"etString, """"+mdt);"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,382,/ Sets of the date portion.
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,385, Test the <code>setDate(long)</code> method.
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,386, @see org.joda.time.MutableDateTime#setDate(long)
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,388,ublic void testSetDateL() {
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,389,or (int ngc = 0; ngc < gcals.length; ++ngc) {
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,390,repTest( ngc );
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,391,"tring before = """" + mdt;"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,392,dt.setDate( setMillis );
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,393,"tring after = """" + mdt;"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,394,"ssertEquals(""SDL1:"","
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,395,"hsDT(before), rhsDT(after) );"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,396,"ssertEquals(""SDL2:"","
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,397,"hsDT(setString), lhsDT(after) );"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,401, Test the <code>setDate(java.lang.Object)</code> method.
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,402, @see org.joda.time.MutableDateTime#setDate(java.lang.Object)
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,404,ublic void testSetDateO() {
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,405,or (int ngc = 0; ngc < gcals.length; ++ngc) {
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,406,repTest( ngc );
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,408,"tring before = """" + mdt;"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,409,tring rhsBefore = rhsDT( before );
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,411,dt.setDate( rica );
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,412,"tring after = """" + mdt;"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,413,tring rhsAfter = rhsDT( after );
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,414,"ssertEquals(""SDO1:"","
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,415,"hsBefore, rhsAfter);"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,416,"ssertEquals(""SDO1A:"","
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,417,"hsDT(setString), lhsDT(after));"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,419,dt.setDate( jdtca );
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,420,"fter = """" + mdt;"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,421,hsAfter = rhsDT( after );
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,422,"ssertEquals(""SDO2:"","
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,423,"hsBefore, rhsAfter);"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,424,"ssertEquals(""SDO2A:"","
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,425,"hsDT(setString), lhsDT(after));"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,427,dt.setDate( calca );
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,428,"fter = """" + mdt;"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,429,hsAfter = rhsDT( after );
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,430,"ssertEquals(""SDO3:"","
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,431,"hsBefore, rhsAfter);"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,432,"ssertEquals(""SDO3A:"","
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,433,"hsDT(setString), lhsDT(after));"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,435,dt.setDate( longVal );
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,436,"fter = """" + mdt;"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,437,hsAfter = rhsDT( after );
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,438,"ssertEquals(""SDO4:"","
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,439,"hsBefore, rhsAfter);"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,440,"ssertEquals(""SDO4A:"","
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,441,"hsDT(setString), lhsDT(after));"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,443,dt.setDate( setString );
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,444,"fter = """" + mdt;"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,445,hsAfter = rhsDT( after );
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,446,"ssertEquals(""SDO5:"","
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,447,"hsBefore, rhsAfter);"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,448,"ssertEquals(""SDO5A:"","
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,449,"hsDT(setString), lhsDT(after));"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,451,ailed = false;
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,452,ica = null;
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,453,ry
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,455,dt.setDate( rica );
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,457,atch(IllegalArgumentException iae)
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,459,ailed = true;
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,461,f ( !failed ) {
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,462,"ail(""SDO6:null"");"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,468," Test the <code>setDate(int, int, int)</code> method."
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,469," @see org.joda.time.MutableDateTime#setDate(int, int, int)"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,471,ublic void testSetDateIII() {
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,472,or (int ngc = 0; ngc < gcals.length; ++ngc) {
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,473,repTest( ngc );
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,475,"tring before = """" + mdt;"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,476,tring rhsBefore = rhsDT( before );
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,478,"dt.setDate( setYear, setMonth, setDay );"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,480,"tring after = """" + mdt;"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,481,tring rhsAfter = rhsDT( after );
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,482,"ssertEquals(""DIII1:"","
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,483,"hsBefore, rhsAfter);"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,484,"ssertEquals(""DIII1A:"","
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,485,"hsDT(setString), lhsDT(after));"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,489,/ Sets of the time portion of the DT.
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,492, Test the <code>setTime(long)</code> method.
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,493, @see org.joda.time.MutableDateTime#setTime(long)
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,495,ublic void testSetTimeL() {
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,496,or (int ngc = 0; ngc < gcals.length; ++ngc) {
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,497,repTest( ngc );
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,498,"tring before = """" + mdt;"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,499,dt.setTime( setMillis );
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,500,"tring after = """" + mdt;"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,501,"ssertEquals(""SDL1:"","
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,502,"hsDT(before), lhsDT(after) );"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,503,"ssertEquals(""SDL2:"","
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,504,"hsDT(setString), rhsDT(after) );"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,508, Test the <code>setTime(java.lang.Object)</code> method.
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,509, @see org.joda.time.MutableDateTime#setTime(java.lang.Object)
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,511,ublic void testSetTimeO() {
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,512,or (int ngc = 0; ngc < gcals.length; ++ngc) {
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,513,repTest( ngc );
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,514,"tring before = """" + mdt;"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,515,tring lhsBefore = lhsDT( before );
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,517,dt.setTime( rica );
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,518,"tring after = """" + mdt;"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,519,tring lhsAfter = lhsDT( after );
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,521,"/ ewtr.println(""before: "" + before);"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,522,"/ ewtr.println(""after: "" + after);"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,523,"/ ewtr.println(""setString: "" + setString);"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,524,/ ewtr.flush();
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,526,"ssertEquals(""STO1:"","
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,527,"hsBefore, lhsAfter);"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,528,"ssertEquals(""STO1A:"","
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,529,"hsDT(setString), rhsDT(after));"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,531,dt.setTime( jdtca );
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,532,"fter = """" + mdt;"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,533,hsAfter = lhsDT( after );
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,534,"ssertEquals(""STO2:"","
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,535,"hsBefore, lhsAfter);"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,536,"ssertEquals(""STO2A:"","
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,537,"hsDT(setString), rhsDT(after));"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,539,dt.setTime( calca );
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,540,"fter = """" + mdt;"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,541,hsAfter = lhsDT( after );
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,542,"ssertEquals(""STO3:"","
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,543,"hsBefore, lhsAfter);"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,544,"ssertEquals(""STO3A:"","
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,545,"hsDT(setString), rhsDT(after));"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,547,dt.setTime( longVal );
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,548,"fter = """" + mdt;"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,549,hsAfter = lhsDT( after );
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,550,"ssertEquals(""STO4:"","
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,551,"hsBefore, lhsAfter);"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,552,"ssertEquals(""STO4A:"","
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,553,"hsDT(setString), rhsDT(after));"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,555,dt.setTime( setString );
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,556,"fter = """" + mdt;"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,557,hsAfter = lhsDT( after );
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,558,"ssertEquals(""STO5:"","
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,559,"hsBefore, lhsAfter);"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,560,"ssertEquals(""STO5A:"","
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,561,"hsDT(setString), rhsDT(after));"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,563,ailed = false;
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,564,ica = null;
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,565,ry
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,567,dt.setTime( rica );
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,569,atch(IllegalArgumentException iae)
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,571,ailed = true;
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,573,f ( !failed ) {
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,574,"ail(""STO6:null"");"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,580," Test the <code>setTime(int, int, int, int)</code> method."
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,581," @see org.joda.time.MutableDateTime#setTime(int, int, int, int)"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,583,ublic void testSetTimeIIII() {
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,584,or (int ngc = 0; ngc < gcals.length; ++ngc) {
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,585,repTest( ngc );
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,586,"tring before = """" + mdt;"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,587,"dt.setTime( setHour, setMinute, setSecond, setMillisecond );"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,588,"tring after = """" + mdt;"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,589,"ssertEquals(""TIII1:"","
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,590,"hsDT(before), lhsDT(after) );"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,591,"ssertEquals(""TIII2:"","
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,592,"hsDT(setString), rhsDT(after) );"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,596,/ Sets of both the Date and Time portions.
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,599, Test the <code>setDateTime(long)</code> method.
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,600, @see org.joda.time.MutableDateTime#setDateTime(long)
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,602,ublic void testSetDateTimeL() {
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,603,or (int ngc = 0; ngc < gcals.length; ++ngc) {
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,604,repTest( ngc );
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,605,dt.setDateTime( setMillis );
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,606,"ssertEquals(""SDT1:"","
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,607,"etString, """"+mdt );"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,611, Test the <code>setDateTime(java.lang.Object)</code> method.
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,612, @see org.joda.time.MutableDateTime#setDateTime(java.lang.Object)
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,614,ublic void testSetDateTimeO() {
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,615,or (int ngc = 0; ngc < gcals.length; ++ngc) {
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,616,repTest( ngc );
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,618,dt.setDateTime( rica );
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,619,"ssertEquals(""SDTO1:"","
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,620,"etString, """"+mdt );"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,622,dt.setDateTime( jdtca );
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,623,"ssertEquals(""SDTO2:"","
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,624,"etString, """"+mdt );"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,626,dt.setDateTime( calca );
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,627,"ssertEquals(""SDTO3:"","
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,628,"etString, """"+mdt );"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,630,dt.setDateTime( longVal );
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,631,"ssertEquals(""SDTO4:"","
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,632,"etString, """"+mdt );"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,634,dt.setDateTime( setString );
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,635,"ssertEquals(""SDTO5:"","
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,636,"etString, """"+mdt );"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,638,ailed = false;
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,639,ica = null;
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,640,ry
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,642,dt.setDateTime( rica );
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,644,atch(IllegalArgumentException iae)
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,646,ailed = true;
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,648,f ( !failed ) {
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,649,"ail(""SDTO6:null"");"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,654," Test the <code>setDateTime(int, int, int, int, int, int, int)</code> method."
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,655," @see org.joda.time.MutableDateTime#setDateTime(int, int, int, int, int, int, int)"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,657,ublic void testSetDateTimeIs() {
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,658,or (int ngc = 0; ngc < gcals.length; ++ngc) {
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,659,repTest( ngc );
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,660,"dt.setDateTime( setYear, setMonth, setDay,"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,661,"etHour, setMinute, setSecond, setMillisecond );"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,662,"ssertEquals(""SDTIIs"","
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,663,"etString, """"+mdt );"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,667,/ Individual field sets.
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,670, Test the <code>setYear(int)</code> method.
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,671, @see org.joda.time.MutableDateTime#setYear(int)
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,673,ublic void testSetYear() {
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,675,or (int ngc = 0; ngc < gcals.length; ++ngc) {
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,676,repTest( ngc );
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,678,"rrayList before = getDTA( """"+mdt );"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,679,dt.setYear( setYear );
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,680,"rrayList after = getDTA( """"+mdt );"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,682,"nt[] mc = {3,5,7,9,11,13};"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,683,or (int i = 0; i < mc.length; ++i) {
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,684,"ssertEquals(""TSYR1"","
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,685,"""+(String)before.get(mc[i]),"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,686,"""+(String)after.get(mc[i])"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,689,tring e = (String)after.get(1);
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,690,"ssertEquals(""TSYR2"","
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,691,", padNumberToLen(setYear,e.length())"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,695,or (int ngc = 0; ngc < gcals.length; ++ngc) {
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,696,repTest( ngc );
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,698,"rrayList before = getDTA( """"+mdt );"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,699,dt.year().set( setYear );
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,700,"rrayList after = getDTA( """"+mdt );"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,702,"nt[] mc = {3,5,7,9,11,13};"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,703,or (int i = 0; i < mc.length; ++i) {
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,704,"ssertEquals(""TSYR1"","
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,705,"""+(String)before.get(mc[i]),"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,706,"""+(String)after.get(mc[i])"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,709,tring e = (String)after.get(1);
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,710,"ssertEquals(""TSYR2"","
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,711,", padNumberToLen(setYear,e.length())"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,716, Test the <code>setMonthOfYear(int)</code> method.
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,717, @see org.joda.time.MutableDateTime#setMonthOfYear(int)
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,719,ublic void testSetMonthOfYear() {
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,720,or (int ngc = 0; ngc < gcals.length; ++ngc) {
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,721,repTest( ngc );
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,723,"rrayList before = getDTA( """"+mdt );"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,724,dt.setMonthOfYear( setMonth );
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,725,"rrayList after = getDTA( """"+mdt );"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,727,"nt[] mc = {1,5,7,9,11,13};"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,728,or (int i = 0; i < mc.length; ++i) {
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,729,"ssertEquals(""TSMO1"","
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,730,"""+(String)before.get(mc[i]),"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,731,"""+(String)after.get(mc[i])"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,734,tring e = (String)after.get(3);
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,735,"ssertEquals(""TSMO2"","
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,736,", padNumberToLen(setMonth,e.length())"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,739,or (int ngc = 0; ngc < gcals.length; ++ngc) {
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,740,repTest( ngc );
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,742,"rrayList before = getDTA( """"+mdt );"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,743,dt.monthOfYear().set( setMonth );
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,744,"rrayList after = getDTA( """"+mdt );"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,746,"nt[] mc = {1,5,7,9,11,13};"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,747,or (int i = 0; i < mc.length; ++i) {
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,748,"ssertEquals(""TSMO1"","
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,749,"""+(String)before.get(mc[i]),"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,750,"""+(String)after.get(mc[i])"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,753,tring e = (String)after.get(3);
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,754,"ssertEquals(""TSMO2"","
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,755,", padNumberToLen(setMonth,e.length())"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,760, Test the <code>setDayOfMonth(int)</code> method.
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,761, @see org.joda.time.MutableDateTime#setDayOfMonth(int)
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,763,ublic void testSetDayOfMonth() {
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,764,or (int ngc = 0; ngc < gcals.length; ++ngc) {
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,765,repTest( ngc );
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,767,"rrayList before = getDTA( """"+mdt );"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,768,dt.setDayOfMonth( setDay );
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,769,"rrayList after = getDTA( """"+mdt );"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,771,"nt[] mc = {1,3,7,9,11,13};"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,772,or (int i = 0; i < mc.length; ++i) {
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,773,"ssertEquals(""TSDA1"","
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,774,"""+(String)before.get(mc[i]),"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,775,"""+(String)after.get(mc[i])"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,778,tring e = (String)after.get(5);
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,779,"ssertEquals(""TSDA2"","
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,780,", padNumberToLen(setDay,e.length())"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,783,or (int ngc = 0; ngc < gcals.length; ++ngc) {
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,784,repTest( ngc );
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,786,"rrayList before = getDTA( """"+mdt );"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,787,dt.dayOfMonth().set( setDay );
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,788,"rrayList after = getDTA( """"+mdt );"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,790,"nt[] mc = {1,3,7,9,11,13};"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,791,or (int i = 0; i < mc.length; ++i) {
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,792,"ssertEquals(""TSDA1"","
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,793,"""+(String)before.get(mc[i]),"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,794,"""+(String)after.get(mc[i])"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,797,tring e = (String)after.get(5);
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,798,"ssertEquals(""TSDA2"","
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,799,", padNumberToLen(setDay,e.length())"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,804, Test the <code>setHourOfDay(int)</code> method.
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,805, @see org.joda.time.MutableDateTime#setHourOfDay(int)
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,807,ublic void testSetHourOfDay() {
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,808,or (int ngc = 0; ngc < gcals.length; ++ngc) {
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,809,repTest( ngc );
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,811,"rrayList before = getDTA( """"+mdt );"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,812,dt.setHourOfDay( setHour );
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,813,"rrayList after = getDTA( """"+mdt );"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,815,"nt[] mc = {1,3,5,9,11,13};"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,816,or (int i = 0; i < mc.length; ++i) {
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,817,"ssertEquals(""TSHD1"","
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,818,"""+(String)before.get(mc[i]),"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,819,"""+(String)after.get(mc[i])"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,822,tring e = (String)after.get(7);
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,823,"ssertEquals(""TSHD2"","
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,824,", padNumberToLen(setHour,e.length())"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,827,or (int ngc = 0; ngc < gcals.length; ++ngc) {
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,828,repTest( ngc );
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,830,"rrayList before = getDTA( """"+mdt );"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,831,dt.hourOfDay().set( setHour );
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,832,"rrayList after = getDTA( """"+mdt );"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,834,"nt[] mc = {1,3,5,9,11,13};"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,835,or (int i = 0; i < mc.length; ++i) {
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,836,"ssertEquals(""TSHD1"","
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,837,"""+(String)before.get(mc[i]),"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,838,"""+(String)after.get(mc[i])"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,841,tring e = (String)after.get(7);
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,842,"ssertEquals(""TSHD2"","
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,843,", padNumberToLen(setHour,e.length())"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,848, Test the <code>setMinuteOfHour(int)</code> method.
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,849, @see org.joda.time.MutableDateTime#setMinuteOfHour(int)
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,851,ublic void testSetMinuteOfHour() {
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,852,or (int ngc = 0; ngc < gcals.length; ++ngc) {
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,853,repTest( ngc );
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,855,"rrayList before = getDTA( """"+mdt );"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,856,dt.setMinuteOfHour( setHour );
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,857,"rrayList after = getDTA( """"+mdt );"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,859,"nt[] mc = {1,3,5,7,11,13};"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,860,or (int i = 0; i < mc.length; ++i) {
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,861,"ssertEquals(""TSMH1"","
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,862,"""+(String)before.get(mc[i]),"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,863,"""+(String)after.get(mc[i])"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,866,tring e = (String)after.get(9);
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,867,"ssertEquals(""TSMH2"","
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,868,", padNumberToLen(setHour,e.length())"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,871,or (int ngc = 0; ngc < gcals.length; ++ngc) {
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,872,repTest( ngc );
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,874,"rrayList before = getDTA( """"+mdt );"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,875,dt.minuteOfHour().set( setHour );
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,876,"rrayList after = getDTA( """"+mdt );"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,878,"nt[] mc = {1,3,5,7,11,13};"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,879,or (int i = 0; i < mc.length; ++i) {
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,880,"ssertEquals(""TSMH1"","
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,881,"""+(String)before.get(mc[i]),"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,882,"""+(String)after.get(mc[i])"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,885,tring e = (String)after.get(9);
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,886,"ssertEquals(""TSMH2"","
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,887,", padNumberToLen(setHour,e.length())"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,892, Test the <code>setSecondOfMinute(int)</code> method.
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,893, @see org.joda.time.MutableDateTime#setSecondOfMinute(int)
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,895,ublic void testSetSecondOfMinute() {
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,896,or (int ngc = 0; ngc < gcals.length; ++ngc) {
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,897,repTest( ngc );
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,899,"rrayList before = getDTA( """"+mdt );"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,900,dt.setSecondOfMinute( setSecond );
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,901,"rrayList after = getDTA( """"+mdt );"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,903,"nt[] mc = {1,3,5,7,9,13};"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,904,or (int i = 0; i < mc.length; ++i) {
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,905,"ssertEquals(""TSSM1"","
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,906,"""+(String)before.get(mc[i]),"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,907,"""+(String)after.get(mc[i])"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,910,tring e = (String)after.get(11);
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,911,"ssertEquals(""TSSM2"","
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,912,", padNumberToLen(setSecond,e.length())"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,915,or (int ngc = 0; ngc < gcals.length; ++ngc) {
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,916,repTest( ngc );
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,918,"rrayList before = getDTA( """"+mdt );"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,919,dt.secondOfMinute().set( setSecond );
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,920,"rrayList after = getDTA( """"+mdt );"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,922,"nt[] mc = {1,3,5,7,9,13};"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,923,or (int i = 0; i < mc.length; ++i) {
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,924,"ssertEquals(""TSSM1"","
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,925,"""+(String)before.get(mc[i]),"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,926,"""+(String)after.get(mc[i])"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,929,tring e = (String)after.get(11);
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,930,"ssertEquals(""TSSM2"","
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,931,", padNumberToLen(setSecond,e.length())"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,936, Test the <code>setMillisOfSecond(int)</code> method.
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,937, @see org.joda.time.MutableDateTime#setMillisOfSecond(int)
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,939,ublic void testSetMillisOfSecond() {
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,940,or (int ngc = 0; ngc < gcals.length; ++ngc) {
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,941,repTest( ngc );
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,943,"rrayList before = getDTA( """"+mdt );"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,944,dt.setMillisOfSecond( setMillisecond );
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,945,"rrayList after = getDTA( """"+mdt );"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,947,"nt[] mc = {1,3,5,7,9,11};"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,948,or (int i = 0; i < mc.length; ++i) {
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,949,"ssertEquals(""TSMS1"","
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,950,"""+(String)before.get(mc[i]),"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,951,"""+(String)after.get(mc[i])"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,954,tring e = (String)after.get(13);
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,955,"ssertEquals(""TSMS2"","
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,956,", padNumberToLen(setMillisecond,e.length())"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,959,or (int ngc = 0; ngc < gcals.length; ++ngc) {
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,960,repTest( ngc );
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,962,"rrayList before = getDTA( """"+mdt );"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,963,dt.millisOfSecond().set( setMillisecond );
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,964,"rrayList after = getDTA( """"+mdt );"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,966,"nt[] mc = {1,3,5,7,9,11};"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,967,or (int i = 0; i < mc.length; ++i) {
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,968,"ssertEquals(""TSMS1"","
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,969,"""+(String)before.get(mc[i]),"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,970,"""+(String)after.get(mc[i])"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,973,tring e = (String)after.get(13);
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,974,"ssertEquals(""TSMS2"","
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,975,", padNumberToLen(setMillisecond,e.length())"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,980, Test the <code>setDayOfYear(int)</code> method.
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,981, @see org.joda.time.MutableDateTime#setDayOfYear(int)
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,983,ublic void testSetDayOfYear() {
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,985,"wtr.println(""testSetDayOfYear needs enhancement"");"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,986,wtr.flush();
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,988,"tring ts = ""1776-07-04T11:22:33.000Z"";"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,990,dt = getMDTFromString( ts );
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,991,dt.setDayOfYear( 8 );
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,992,"ssertEquals(""SDOY1"","
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,993,"1776-01-08T11:22:33.000Z"","
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,994,dt.toString() );
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,996,dt = getMDTFromString( ts );
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,997,dt.setDayOfYear( 60 );
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,998,"ssertEquals(""SDOY2"","
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,999,"1776-02-29T11:22:33.000Z"","
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1000,dt.toString() );
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1002,dt = getMDTFromString( ts );
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1003,dt.setDayOfYear( 366 );
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1004,"ssertEquals(""SDOY3"","
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1005,"1776-12-31T11:22:33.000Z"","
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1006,dt.toString() );
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1008,dt = getMDTFromString( ts );
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1009,ailed = false;
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1010,ry
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1012,dt.setDayOfYear( 367 );
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1014,atch(IllegalArgumentException iae)
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1016,ailed = true;
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1018,f ( !failed ) {
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1019,"ail(""SDOY4"");"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1022,"dt = getMDTFromString( ""1777-12-31T11:22:33.000Z"" );"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1023,ailed = false;
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1024,ry
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1026,dt.setDayOfYear( 366 );
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1028,atch(IllegalArgumentException iae)
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1030,ailed = true;
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1032,f ( !failed ) {
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1033,"ail(""SDOY4"");"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1037, Test the <code>setDayOfWeek(int)</code> method.
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1038, @see org.joda.time.MutableDateTime#setDayOfWeek(int)
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1040,ublic void testSetDayOfWeek() {
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1042,"wtr.println(""testSetDayOfWeek needs enhancement"");"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1043,wtr.flush();
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1044,"tring ts = ""1776-07-04T11:22:33.000Z"";"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1046,dt = getMDTFromString( ts );
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1048,dt.setDayOfWeek( DateTimeConstants.MONDAY );
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1049,"ssertEquals(""SDOW1"","
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1050,"1776-07-01T11:22:33.000Z"","
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1051,dt.toString() );
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1053,dt.setDayOfWeek( DateTimeConstants.SUNDAY );
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1054,"ssertEquals(""SDOW2"","
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1055,"1776-07-07T11:22:33.000Z"","
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1056,dt.toString() );
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1058,ailed = false;
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1059,ry
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1061,dt.setDayOfWeek( 8 );
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1063,atch(IllegalArgumentException iae)
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1065,ailed = true;
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1067,f ( !failed ) {
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1068,"ail(""SWOY4"");"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1074," Test the <code>setWeekOfYear(int, int)</code> method."
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1075, @see org.joda.time.MutableDateTime#setWeekOfWeekyear(int)
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1077,ublic void testSetWeekOfYear() {
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1078,"wtr.println(""testSetWeekOfYear needs enhancement"");"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1079,wtr.flush();
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1080,"tring ts = ""1776-07-04T11:22:33.000Z"";"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1082,dt = getMDTFromString( ts );
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1084,dt.setWeekyear( 1944 );
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1085,dt.setWeekOfWeekyear( 2 );
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1086,"ssertEquals(""SWOY1"", 2, mdt.getWeekOfWeekyear());"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1087,"ssertEquals(""SWOY2"", 1944, mdt.getWeekyear());"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1088,"ssertEquals(""SWOY3"","
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1089,"1944-01-13T11:22:33.000Z"","
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1090,dt.toString() );
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1092,ailed = false;
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1093,ry
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1095,dt.setWeekyear( 2003 );
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1096,dt.setWeekOfWeekyear( 53 ); // 03 has 52 weeks
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1098,atch(IllegalArgumentException iae)
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1100,ailed = true;
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1102,f ( !failed ) {
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1103,"ail(""SWOY4"");"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1106,ailed = false;
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1107,ry
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1109,dt.setWeekyear( 2004 );
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1110,dt.setWeekOfWeekyear( 53 ); // 03 has 52 weeks
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1112,atch(IllegalArgumentException iae)
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1114,ailed = true;
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1116,f ( failed ) {
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1117,"ail(""SWOY5"");"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1121,ublic void testLast() {
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1122,"wtr.println(""TestMDTSet completes"");"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1123,wtr.flush();
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1128,/ Private methods.
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1131,rivate  void prepTest(int item) {
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1132,regorianCalendar wrkgcal = new GregorianCalendar(
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1133,"cals[item].get( Calendar.YEAR ),"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1134,"cals[item].get( Calendar.MONTH ),"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1135,"cals[item].get( Calendar.DATE ),"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1136,"cals[item].get( Calendar.HOUR ),"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1137,"cals[item].get( Calendar.MINUTE ),"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1138,cals[item].get( Calendar.SECOND )
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1140,rkgcal.setGregorianChange(new Date(Long.MIN_VALUE));
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1141,"rkgcal.set(Calendar.ERA, gcals[item].get(Calendar.ERA));"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1143,"rkgcal.add(Calendar.MILLISECOND, bumpValue);"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1144,rkgcal.setMinimalDaysInFirstWeek(4);
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1145,rkgcal.setFirstDayOfWeek(Calendar.MONDAY);
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1147,/ Force the GregorianCalendar to recalculate all internal
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1148,/ values.
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1150,rkgcal.setTime( wrkgcal.getTime() );
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1152,f ( debug ) {
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1153,"wtr.println(""====Test Number: "" + testNum);"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1154,"wtr.println(""  ==Item Number: "" + item);"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1155,wtr.flush();
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1157,soString = getDateTimeString( wrkgcal );
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1158,dt = null;
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1159,ry
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1161,"dt = new MutableDateTime( isoString, ISOChronology.getInstanceUTC() );"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1163,atch(IllegalArgumentException pe)
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1165,"wtr.println(""IllegalArgumentException Detected: "" + isoString);"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1166,wtr.println( pe.getMessage() );
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1167,wtr.flush();
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1170,f ( debug ) {
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1171,"wtr.println(""    =ISO String: "" + isoString);"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1172,wtr.flush();
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1175,etMillis = System.currentTimeMillis();
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1176,regorianCalendar gx = new GregorianCalendar();
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1177,x.setTime( new Date( setMillis ) );
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1179,etYear = gx.get(Calendar.YEAR);
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1180,etMonth = gx.get(Calendar.MONTH) + 1;
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1181,etDay = gx.get(Calendar.DATE);
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1182,etHour = gx.get(Calendar.HOUR_OF_DAY);
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1183,etMinute = gx.get(Calendar.MINUTE);
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1184,etSecond = gx.get(Calendar.SECOND);
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1185,etMillisecond = gx.get(Calendar.MILLISECOND);
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1187,ica = new Instant( setMillis );
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1188,dtca = new Date( setMillis );
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1189,alca = Calendar.getInstance();
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1190,alca.setTime( jdtca );
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1191,ongVal = new Long( setMillis );
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1193,"utableDateTime temp = new MutableDateTime( setMillis,"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1194,SOChronology.getInstanceUTC() );
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1195,"etString = """" + temp;"
False,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,JodaTime/src/test/org/joda/test/time/TestMDTSet.java,1197, // end of class TestMDTSet
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,2," Joda Software License, Version 1.0"
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,5, Copyright (c) 2001-2004 Stephen Colebourne.
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,6, All rights reserved.
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,8," Redistribution and use in source and binary forms, with or without"
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,9," modification, are permitted provided that the following conditions"
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,10, are met:
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,12, 1. Redistributions of source code must retain the above copyright
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,13,"    notice, this list of conditions and the following disclaimer."
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,15, 2. Redistributions in binary form must reproduce the above copyright
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,16,"    notice, this list of conditions and the following disclaimer in"
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,17,    the documentation and/or other materials provided with the
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,18,    distribution.
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,20," 3. The end-user documentation included with the redistribution,"
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,21,"    if any, must include the following acknowledgment:"
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,22,"       ""This product includes software developed by the"
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,23,"        Joda project (http://www.joda.org/)."""
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,24,"    Alternately, this acknowledgment may appear in the software itself,"
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,25,    if and wherever such third-party acknowledgments normally appear.
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,27," 4. The name ""Joda"" must not be used to endorse or promote products"
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,28,    derived from this software without prior written permission. For
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,29,"    written permission, please contact licence@joda.org."
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,31," 5. Products derived from this software may not be called ""Joda"","
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,32,"    nor may ""Joda"" appear in their name, without prior written"
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,33,    permission of the Joda project.
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,35, THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,36," WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,37, OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,38, DISCLAIMED.  IN NO EVENT SHALL THE JODA AUTHORS OR THE PROJECT
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,39," CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,40," SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,41," LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,42," USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,43," ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,44, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,45," OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,46, SUCH DAMAGE.
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,49, This software consists of voluntary contributions made by many
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,50, individuals on behalf of the Joda project and was originally
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,51, created by Stephen Colebourne <scolebourne@joda.org>. For more
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,52," information on the Joda project, please see <http://www.joda.org/>."
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,54,ackage org.joda.test.time;
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,56,mport java.lang.reflect.Constructor;
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,57,mport java.lang.reflect.InvocationTargetException;
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,59,mport java.util.*;
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,60,mport java.text.* ;
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,61,mport java.io.*;
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,63,mport junit.framework.TestSuite;
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,65,mport org.joda.time.MutableDateTime;
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,66,mport org.joda.time.chrono.ISOChronology;
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,68, This class is a Junit unit test for the
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,69, org.joda.time.MutableDateTime class.
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,71, @author Stephen Colebourne
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,72, @author Guy Allard
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,74,ublic class TestMutableDateTime
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,75,xtends BulkTest {
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,77,rivate static Class cls = MutableDateTime.class;
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,80, main
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,81, @param args command line arguments.
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,83,ublic static void main(String[] args) {
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,84,unit.textui.TestRunner.run(suite());
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,87, TestSuite
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,89,ublic static TestSuite suite() {
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,90,eturn BulkTest.makeSuite(TestMutableDateTime.class);
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,93, TestMutableDateTime constructor.  A constructor with this signature
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,94, is required for Junit testing.
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,95, @param name The human readable name of the class.
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,97,ublic TestMutableDateTime(String name) {
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,98,uper(name);
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,102, Junit <code>setUp()</code> method.
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,104,rotected void setUp() /* throws Exception */ {
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,105,"/ TimeZone.setDefault( new SimpleTimeZone(0, ""UTC"") );"
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,109, Junit <code>tearDown()</code> method.
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,111,rotected void tearDown() /* throws Exception */ {
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,112,/ super.tearDown();
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,116,/ No CTOR test methods are provided here!
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,117,/ All MutableDateTime CTORs map directly to AbstractDateTime
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,118,"/ CTORS, and all each MDT CTOR does is call super."
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,120,/ New CTOR tests are required only for:
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,121,/ 1) CTORs which do *NOT* call super(...) at all.
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,122,/ 1) CTORs which do *NOT* call super(...) with a matching signature.
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,123,/ 2) CTORs with differing method signatures (new at this level).
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,125,/ Add Other BulkTests
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,127,ublic BulkTest bulkTestGet() {
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,128,"eturn new TestMDTGet(""Mutable Date Time get Method Tests"");"
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,131,ublic BulkTest bulkTestSet() {
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,132,"eturn new TestMDTSet(""Mutable Date Time set Method Tests"");"
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTime.java,135, // end of class TestMutableDateTime
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,2," Joda Software License, Version 1.0"
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,5, Copyright (c) 2001-2004 Stephen Colebourne.
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,6, All rights reserved.
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,8," Redistribution and use in source and binary forms, with or without"
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,9," modification, are permitted provided that the following conditions"
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,10, are met:
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,12, 1. Redistributions of source code must retain the above copyright
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,13,"    notice, this list of conditions and the following disclaimer."
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,15, 2. Redistributions in binary form must reproduce the above copyright
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,16,"    notice, this list of conditions and the following disclaimer in"
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,17,    the documentation and/or other materials provided with the
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,18,    distribution.
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,20," 3. The end-user documentation included with the redistribution,"
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,21,"    if any, must include the following acknowledgment:"
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,22,"       ""This product includes software developed by the"
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,23,"        Joda project (http://www.joda.org/)."""
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,24,"    Alternately, this acknowledgment may appear in the software itself,"
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,25,    if and wherever such third-party acknowledgments normally appear.
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,27," 4. The name ""Joda"" must not be used to endorse or promote products"
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,28,    derived from this software without prior written permission. For
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,29,"    written permission, please contact licence@joda.org."
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,31," 5. Products derived from this software may not be called ""Joda"","
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,32,"    nor may ""Joda"" appear in their name, without prior written"
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,33,    permission of the Joda project.
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,35, THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,36," WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,37, OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,38, DISCLAIMED.  IN NO EVENT SHALL THE JODA AUTHORS OR THE PROJECT
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,39," CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,40," SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,41," LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,42," USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,43," ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,44, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,45," OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,46, SUCH DAMAGE.
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,49, This software consists of voluntary contributions made by many
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,50, individuals on behalf of the Joda project and was originally
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,51, created by Stephen Colebourne <scolebourne@joda.org>. For more
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,52," information on the Joda project, please see <http://www.joda.org/>."
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,54,ackage org.joda.test.time;
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,56,mport junit.framework.TestSuite;
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,58,mport org.joda.time.DateTimeZone;
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,59,mport org.joda.time.DateTime;
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,60,mport org.joda.time.MutableDateTime;
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,61,mport org.joda.time.ReadableInstant;
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,62,mport org.joda.time.chrono.GJChronology;
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,63,mport org.joda.time.chrono.ISOChronology;
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,65, This class is a Junit unit test for the CTORs of the
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,66, MutableDateTime date time class.  The MutableDateTime class is passed
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,67," to the base class, which actually invokes the proper"
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,68, constructors.
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,70, @author Stephen Colebourne
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,71, @author Guy Allard
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,73,ublic class TestMutableDateTimeCtors
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,74,xtends AbstractTestDateTimeCommon {
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,76,/ The class to be tested.
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,77,rivate static Class cls = MutableDateTime.class;
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,80, This is the main class for this test suite.
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,81, @param args command line arguments.
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,83,ublic static void main(String[] args) {
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,84,unit.textui.TestRunner.run(suite());
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,87, TestSuite is a junit required method.
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,89,ublic static TestSuite suite() {
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,90,eturn BulkTest.makeSuite(TestMutableDateTimeCtors.class);
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,93, Constructor.
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,94, @param name
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,96,ublic TestMutableDateTimeCtors(String name) {
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,97,"uper(name, cls);"
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,100, Constructor
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,101, @param name The class name.
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,102, @param cls The class to be tested.
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,104,"ublic TestMutableDateTimeCtors(String name, Class cls) {"
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,105,"uper(name, cls);"
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,106,estMutableDateTimeCtors.cls = cls;
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,109, Junit <code>setUp()</code> method.
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,111,rotected void setUp() /* throws Exception */ {
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,112,uper.setUp();
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,116, Junit <code>tearDown()</code> method.
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,118,rotected void tearDown() /* throws Exception */ {
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,119,uper.tearDown();
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,122,rotected ReadableInstant createSmall(boolean ofAnotherClass) {
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,123,f (ofAnotherClass) {
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,124,"eturn new DateTime(-1L * 1000, GJChronology.getInstance());"
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,126,eturn new MutableDateTime(-1L * 1000);
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,129,rotected ReadableInstant createMid(boolean ofAnotherClass) {
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,130,f (ofAnotherClass) {
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,131,"eturn new DateTime(2L * 1000, GJChronology.getInstance());"
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,133,eturn new MutableDateTime((2L * 1000));
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,136,rotected ReadableInstant createLarge(boolean ofAnotherClass) {
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,137,f (ofAnotherClass) {
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,138,"eturn new DateTime(3L * 1000, GJChronology.getInstance());"
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,140,eturn new MutableDateTime((3L * 1000));
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,143,rotected ReadableInstant createUTC(long millis) {
False,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,JodaTime/src/test/org/joda/test/time/TestMutableDateTimeCtors.java,144,"eturn new MutableDateTime(millis, ISOChronology.getInstance(DateTimeZone.UTC));"
