is_addition,old_file_path,new_file_path,line_num,content
True,JodaTime/src/java/org/joda/time/DateTimeZone.java,JodaTime/src/java/org/joda/time/DateTimeZone.java,68,import org.joda.time.chrono.ISOChronology;
False,JodaTime/src/java/org/joda/time/DateTimeZone.java,JodaTime/src/java/org/joda/time/DateTimeZone.java,234,nt offset = -(int) offsetFormatter().parseMillis(id);
True,JodaTime/src/java/org/joda/time/DateTimeZone.java,JodaTime/src/java/org/joda/time/DateTimeZone.java,235,// Pass in explicit chronology since default time zone may not yet be initialized.
True,JodaTime/src/java/org/joda/time/DateTimeZone.java,JodaTime/src/java/org/joda/time/DateTimeZone.java,236,"int offset = -(int) offsetFormatter().parseMillis(id, ISOChronology.getInstance(UTC));"
False,JodaTime/src/java/org/joda/time/DateTimeZone.java,JodaTime/src/java/org/joda/time/DateTimeZone.java,335,nt offset = -(int) offsetFormatter().parseMillis(convId);
True,JodaTime/src/java/org/joda/time/DateTimeZone.java,JodaTime/src/java/org/joda/time/DateTimeZone.java,337,// Pass in explicit chronology since default time zone may not yet be initialized.
True,JodaTime/src/java/org/joda/time/DateTimeZone.java,JodaTime/src/java/org/joda/time/DateTimeZone.java,338,int offset = -(int) offsetFormatter().parseMillis
True,JodaTime/src/java/org/joda/time/DateTimeZone.java,JodaTime/src/java/org/joda/time/DateTimeZone.java,339,"(convId, ISOChronology.getInstance(UTC));"
