is_addition,old_file_path,new_file_path,line_num,content
False,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,153,"FlagSpec(help = ""Check types for validity."")"
False,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,154,ublic static final Flag<Boolean> FLAG_check_types = Flag.value(false);
False,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,559,f (FLAG_check_types.get()) {
False,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,src/com/google/javascript/jscomp/AbstractCompilerRunner.java,560,ptions.checkTypes = true;
False,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,303,tring propAlias = alias + '$' + p.name;
True,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,303,"String propAlias = appendPropForAlias(alias, p.name);"
False,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,451,"ollapseDeclarationOfNameAndDescendants(p, alias + '$' + p.name);"
True,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,451,collapseDeclarationOfNameAndDescendants(
True,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,452,"p, appendPropForAlias(alias, p.name));"
False,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,457,"pdateSimpleDeclaration(alias + '$' + p.name, p.declaration);"
True,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,458,updateSimpleDeclaration(
True,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,459,"appendPropForAlias(alias, p.name), p, p.declaration);"
True,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,472,* @param refName The name for the reference being updated.
False,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,473,"rivate void updateSimpleDeclaration(String alias, Ref ref) {"
True,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,476,"private void updateSimpleDeclaration(String alias, Name refName, Ref ref) {"
False,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,482,"lias.replace(""$"", "".""));"
True,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,485,refName.fullName());
False,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,612,"lias, rvalue,"
True,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,615,"n, alias, rvalue,"
False,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,669,"ame, rvalue, varNode, gramps.getChildBefore(varNode),"
True,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,672,"n, name, rvalue, varNode, gramps.getChildBefore(varNode),"
False,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,722,"tring alias, Node objlit, Node varNode, Node nameToAddAfter,"
False,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,723,"ode varParent, boolean discardKeys) {"
True,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,725,"Name objlitName, String alias, Node objlit, Node varNode,"
True,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,726,"Node nameToAddAfter, Node varParent, boolean discardKeys) {"
False,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,739,tring propAlias = alias + '$' +
False,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,740,isJsIdentifier ? key.getString()
False,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,741, String.valueOf(++arbitraryNameCounter));
False,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,742,"tring qName = propAlias.replace('$', '.');"
True,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,742,String propName = isJsIdentifier ?
True,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,743,key.getString() : String.valueOf(++arbitraryNameCounter);
True,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,744,"String propAlias = appendPropForAlias(alias, propName);"
True,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,745,String qName = objlitName.fullName() + '.' + propName;
False,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,818,tring propAlias = alias + '$' + p.name;
True,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,821,"String propAlias = appendPropForAlias(alias, p.name);"
True,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,845,"private static String appendPropForAlias(String root, String prop) {"
True,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,846,if (prop.indexOf('$') != -1) {
True,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,847,// Encode '$' in a property as '$0'. Because '0' cannot be the
True,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,848,"// start of an identifier, this will never conflict with our"
True,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,849,// encoding from '.' -> '$'.
True,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,850,"prop = prop.replaceAll(""\\$"", ""\\$0"");"
True,src/com/google/javascript/jscomp/CollapseProperties.java,src/com/google/javascript/jscomp/CollapseProperties.java,852,return root + '$' + prop;
True,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,205,/** Enhanced function inlining */
True,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,206,public boolean inlineLocalFunctions;
False,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,330,f (options.inlineFunctions) {
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,330,if (options.inlineFunctions || options.inlineLocalFunctions) {
False,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,1077,"ompiler, compiler.getUniqueNameIdSupplier(),"
False,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,1078,"nableBlockInlining, options.decomposeExpressions,"
False,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,1079,ptions.inlineAnonymousFunctionExpressions);
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,1077,"compiler,"
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,1078,"compiler.getUniqueNameIdSupplier(),"
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,1079,"options.inlineFunctions,"
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,1080,"options.inlineLocalFunctions,"
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,1081,"options.inlineAnonymousFunctionExpressions,"
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,1082,"enableBlockInlining,"
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,1083,options.decomposeExpressions);
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,790,ode name2 = elseAssign.getFirstChild();
True,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,790,Node maybeName2 = elseAssign.getFirstChild();
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,792,f (name1.hasChildren() && name1.getString().equals(name2.getString())) {
True,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,792,if (name1.hasChildren()
True,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,793,&& maybeName2.getType() == Token.NAME
True,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,794,&& name1.getString().equals(maybeName2.getString())) {
False,src/com/google/javascript/jscomp/InlineFunctions.java,src/com/google/javascript/jscomp/InlineFunctions.java,25,mport com.google.javascript.jscomp.NodeTraversal.AbstractShallowStatementCallback;
True,src/com/google/javascript/jscomp/InlineFunctions.java,src/com/google/javascript/jscomp/InlineFunctions.java,25,import com.google.javascript.jscomp.NodeTraversal.Callback;
True,src/com/google/javascript/jscomp/InlineFunctions.java,src/com/google/javascript/jscomp/InlineFunctions.java,73,private final boolean inlineGlobalFunctions;
True,src/com/google/javascript/jscomp/InlineFunctions.java,src/com/google/javascript/jscomp/InlineFunctions.java,74,private final boolean inlineLocalFunctions;
True,src/com/google/javascript/jscomp/InlineFunctions.java,src/com/google/javascript/jscomp/InlineFunctions.java,78,"boolean inlineGlobalFunctions,"
True,src/com/google/javascript/jscomp/InlineFunctions.java,src/com/google/javascript/jscomp/InlineFunctions.java,79,"boolean inlineLocalFunctions,"
True,src/com/google/javascript/jscomp/InlineFunctions.java,src/com/google/javascript/jscomp/InlineFunctions.java,80,"boolean inlineAnonymousFunctionExpressions,"
False,src/com/google/javascript/jscomp/InlineFunctions.java,src/com/google/javascript/jscomp/InlineFunctions.java,77,"oolean enableExpressionDecomposition,"
False,src/com/google/javascript/jscomp/InlineFunctions.java,src/com/google/javascript/jscomp/InlineFunctions.java,78,oolean inlineAnonymousFunctionExpressions) {
True,src/com/google/javascript/jscomp/InlineFunctions.java,src/com/google/javascript/jscomp/InlineFunctions.java,82,boolean enableExpressionDecomposition) {
False,src/com/google/javascript/jscomp/InlineFunctions.java,src/com/google/javascript/jscomp/InlineFunctions.java,82,his.blockFunctionInliningEnabled = blockFunctionInliningEnabled;
True,src/com/google/javascript/jscomp/InlineFunctions.java,src/com/google/javascript/jscomp/InlineFunctions.java,87,this.inlineGlobalFunctions = inlineGlobalFunctions;
True,src/com/google/javascript/jscomp/InlineFunctions.java,src/com/google/javascript/jscomp/InlineFunctions.java,88,this.inlineLocalFunctions = inlineLocalFunctions;
False,src/com/google/javascript/jscomp/InlineFunctions.java,src/com/google/javascript/jscomp/InlineFunctions.java,84,nlineAnonymousFunctionExpressions;
True,src/com/google/javascript/jscomp/InlineFunctions.java,src/com/google/javascript/jscomp/InlineFunctions.java,90,inlineAnonymousFunctionExpressions;
True,src/com/google/javascript/jscomp/InlineFunctions.java,src/com/google/javascript/jscomp/InlineFunctions.java,91,this.blockFunctionInliningEnabled = blockFunctionInliningEnabled;
False,src/com/google/javascript/jscomp/InlineFunctions.java,src/com/google/javascript/jscomp/InlineFunctions.java,105,/ TODO(johnlenz): Merge FindAnonymousFunctionCalls with
False,src/com/google/javascript/jscomp/InlineFunctions.java,src/com/google/javascript/jscomp/InlineFunctions.java,106,/ FindCandidateFunctions.
False,src/com/google/javascript/jscomp/InlineFunctions.java,src/com/google/javascript/jscomp/InlineFunctions.java,107,f (inlineAnonymousFunctionExpressions) {
False,src/com/google/javascript/jscomp/InlineFunctions.java,src/com/google/javascript/jscomp/InlineFunctions.java,108,"odeTraversal.traverse(compiler, root, new FindAnonymousFunctionCalls());"
False,src/com/google/javascript/jscomp/InlineFunctions.java,src/com/google/javascript/jscomp/InlineFunctions.java,146,rivate class FindCandidateFunctions
False,src/com/google/javascript/jscomp/InlineFunctions.java,src/com/google/javascript/jscomp/InlineFunctions.java,147,xtends AbstractShallowStatementCallback {
True,src/com/google/javascript/jscomp/InlineFunctions.java,src/com/google/javascript/jscomp/InlineFunctions.java,149,private class FindCandidateFunctions implements Callback {
True,src/com/google/javascript/jscomp/InlineFunctions.java,src/com/google/javascript/jscomp/InlineFunctions.java,150,private int callsSeen = 0;
True,src/com/google/javascript/jscomp/InlineFunctions.java,src/com/google/javascript/jscomp/InlineFunctions.java,152,@Override
True,src/com/google/javascript/jscomp/InlineFunctions.java,src/com/google/javascript/jscomp/InlineFunctions.java,153,public boolean shouldTraverse(
True,src/com/google/javascript/jscomp/InlineFunctions.java,src/com/google/javascript/jscomp/InlineFunctions.java,154,"NodeTraversal nodeTraversal, Node n, Node parent) {"
True,src/com/google/javascript/jscomp/InlineFunctions.java,src/com/google/javascript/jscomp/InlineFunctions.java,155,// Don't traverse into function bodies
True,src/com/google/javascript/jscomp/InlineFunctions.java,src/com/google/javascript/jscomp/InlineFunctions.java,156,// if we aren't inlining local functions.
True,src/com/google/javascript/jscomp/InlineFunctions.java,src/com/google/javascript/jscomp/InlineFunctions.java,157,return inlineLocalFunctions || inlineAnonymousFunctionExpressions
True,src/com/google/javascript/jscomp/InlineFunctions.java,src/com/google/javascript/jscomp/InlineFunctions.java,158,|| parent == null || NodeUtil.isControlStructure(parent)
True,src/com/google/javascript/jscomp/InlineFunctions.java,src/com/google/javascript/jscomp/InlineFunctions.java,159,|| NodeUtil.isStatementBlock(parent);
False,src/com/google/javascript/jscomp/InlineFunctions.java,src/com/google/javascript/jscomp/InlineFunctions.java,149,witch (n.getType()) {
True,src/com/google/javascript/jscomp/InlineFunctions.java,src/com/google/javascript/jscomp/InlineFunctions.java,163,if ((t.inGlobalScope() && inlineGlobalFunctions)
True,src/com/google/javascript/jscomp/InlineFunctions.java,src/com/google/javascript/jscomp/InlineFunctions.java,164,|| (!t.inGlobalScope() && inlineLocalFunctions)) {
True,src/com/google/javascript/jscomp/InlineFunctions.java,src/com/google/javascript/jscomp/InlineFunctions.java,165,"findNamedFunctions(t, n, parent);"
True,src/com/google/javascript/jscomp/InlineFunctions.java,src/com/google/javascript/jscomp/InlineFunctions.java,168,if (inlineAnonymousFunctionExpressions) {
True,src/com/google/javascript/jscomp/InlineFunctions.java,src/com/google/javascript/jscomp/InlineFunctions.java,169,"findAnonymousFunctionExpressions(t, n);"
True,src/com/google/javascript/jscomp/InlineFunctions.java,src/com/google/javascript/jscomp/InlineFunctions.java,173,"public void findNamedFunctions(NodeTraversal t, Node n, Node parent) {"
True,src/com/google/javascript/jscomp/InlineFunctions.java,src/com/google/javascript/jscomp/InlineFunctions.java,174,if (!NodeUtil.isStatement(n)) {
True,src/com/google/javascript/jscomp/InlineFunctions.java,src/com/google/javascript/jscomp/InlineFunctions.java,175,// There aren't any interesting functions here.
True,src/com/google/javascript/jscomp/InlineFunctions.java,src/com/google/javascript/jscomp/InlineFunctions.java,176,return;
True,src/com/google/javascript/jscomp/InlineFunctions.java,src/com/google/javascript/jscomp/InlineFunctions.java,179,switch (n.getType()) {
False,src/com/google/javascript/jscomp/InlineFunctions.java,src/com/google/javascript/jscomp/InlineFunctions.java,182, Find anonymous functions that are called directly in the form of
False,src/com/google/javascript/jscomp/InlineFunctions.java,src/com/google/javascript/jscomp/InlineFunctions.java,183,"   (function(a,b,...){...})(a,b,...)"
False,src/com/google/javascript/jscomp/InlineFunctions.java,src/com/google/javascript/jscomp/InlineFunctions.java,184, or
False,src/com/google/javascript/jscomp/InlineFunctions.java,src/com/google/javascript/jscomp/InlineFunctions.java,185,"   (function(a,b,...){...}).call(this,a,b, ...)"
False,src/com/google/javascript/jscomp/InlineFunctions.java,src/com/google/javascript/jscomp/InlineFunctions.java,187,rivate class FindAnonymousFunctionCalls
False,src/com/google/javascript/jscomp/InlineFunctions.java,src/com/google/javascript/jscomp/InlineFunctions.java,188,xtends AbstractPostOrderCallback {
False,src/com/google/javascript/jscomp/InlineFunctions.java,src/com/google/javascript/jscomp/InlineFunctions.java,189,rivate int callsSeen = 0;
False,src/com/google/javascript/jscomp/InlineFunctions.java,src/com/google/javascript/jscomp/InlineFunctions.java,190,"ublic void visit(NodeTraversal t, Node n, Node parent) {"
True,src/com/google/javascript/jscomp/InlineFunctions.java,src/com/google/javascript/jscomp/InlineFunctions.java,210,* Find anonymous functions that are called directly in the form of
True,src/com/google/javascript/jscomp/InlineFunctions.java,src/com/google/javascript/jscomp/InlineFunctions.java,211,"*   (function(a,b,...){...})(a,b,...)"
True,src/com/google/javascript/jscomp/InlineFunctions.java,src/com/google/javascript/jscomp/InlineFunctions.java,212,* or
True,src/com/google/javascript/jscomp/InlineFunctions.java,src/com/google/javascript/jscomp/InlineFunctions.java,213,"*   (function(a,b,...){...}).call(this,a,b, ...)"
True,src/com/google/javascript/jscomp/InlineFunctions.java,src/com/google/javascript/jscomp/InlineFunctions.java,215,"public void findAnonymousFunctionExpressions(NodeTraversal t, Node n) {"
True,src/com/google/javascript/jscomp/Normalize.java,src/com/google/javascript/jscomp/Normalize.java,254,if (n.getType() == Token.LABEL) {
True,src/com/google/javascript/jscomp/Normalize.java,src/com/google/javascript/jscomp/Normalize.java,255,normalizeLabels(n);
True,src/com/google/javascript/jscomp/Normalize.java,src/com/google/javascript/jscomp/Normalize.java,264,"// Only inspect the children of SCRIPTs, BLOCKs, as all these"
True,src/com/google/javascript/jscomp/Normalize.java,src/com/google/javascript/jscomp/Normalize.java,265,// are the only legal place for VARs.
True,src/com/google/javascript/jscomp/Normalize.java,src/com/google/javascript/jscomp/Normalize.java,266,if (NodeUtil.isStatementBlock(n)) {
True,src/com/google/javascript/jscomp/Normalize.java,src/com/google/javascript/jscomp/Normalize.java,275,// TODO(johnlenz): Move this to NodeTypeNormalizer once the unit tests are
True,src/com/google/javascript/jscomp/Normalize.java,src/com/google/javascript/jscomp/Normalize.java,276,// fixed.
True,src/com/google/javascript/jscomp/Normalize.java,src/com/google/javascript/jscomp/Normalize.java,278,* Limit the number of special cases where LABELs need to be handled. Only
True,src/com/google/javascript/jscomp/Normalize.java,src/com/google/javascript/jscomp/Normalize.java,279,* BLOCK and loops are allowed to be labeled.  Loop labels must remain in
True,src/com/google/javascript/jscomp/Normalize.java,src/com/google/javascript/jscomp/Normalize.java,280,* place as the named continues are not allowed for labeled blocks.
True,src/com/google/javascript/jscomp/Normalize.java,src/com/google/javascript/jscomp/Normalize.java,282,private void normalizeLabels(Node n) {
True,src/com/google/javascript/jscomp/Normalize.java,src/com/google/javascript/jscomp/Normalize.java,283,Preconditions.checkArgument(n.getType() == Token.LABEL);
True,src/com/google/javascript/jscomp/Normalize.java,src/com/google/javascript/jscomp/Normalize.java,285,Node last = n.getLastChild();
True,src/com/google/javascript/jscomp/Normalize.java,src/com/google/javascript/jscomp/Normalize.java,286,switch (last.getType()) {
True,src/com/google/javascript/jscomp/Normalize.java,src/com/google/javascript/jscomp/Normalize.java,287,case Token.LABEL:
True,src/com/google/javascript/jscomp/Normalize.java,src/com/google/javascript/jscomp/Normalize.java,288,case Token.BLOCK:
True,src/com/google/javascript/jscomp/Normalize.java,src/com/google/javascript/jscomp/Normalize.java,289,case Token.FOR:
True,src/com/google/javascript/jscomp/Normalize.java,src/com/google/javascript/jscomp/Normalize.java,290,case Token.WHILE:
True,src/com/google/javascript/jscomp/Normalize.java,src/com/google/javascript/jscomp/Normalize.java,291,case Token.DO:
True,src/com/google/javascript/jscomp/Normalize.java,src/com/google/javascript/jscomp/Normalize.java,292,return;
True,src/com/google/javascript/jscomp/Normalize.java,src/com/google/javascript/jscomp/Normalize.java,293,default:
True,src/com/google/javascript/jscomp/Normalize.java,src/com/google/javascript/jscomp/Normalize.java,294,Node block = new Node(Token.BLOCK);
True,src/com/google/javascript/jscomp/Normalize.java,src/com/google/javascript/jscomp/Normalize.java,295,"n.replaceChild(last, block);"
True,src/com/google/javascript/jscomp/Normalize.java,src/com/google/javascript/jscomp/Normalize.java,296,block.addChildToFront(last);
True,src/com/google/javascript/jscomp/Normalize.java,src/com/google/javascript/jscomp/Normalize.java,297,"reportCodeChange(""LABEL normalization"");"
True,src/com/google/javascript/jscomp/Normalize.java,src/com/google/javascript/jscomp/Normalize.java,298,return;
True,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,588,} else if (type != null) {
True,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,589,"// Make the type expression optional, if it isn't"
True,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,590,// already.
True,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,591,type = JSTypeExpression.makeOptionalArg(type);
True,src/com/google/javascript/rhino/JSTypeExpression.java,src/com/google/javascript/rhino/JSTypeExpression.java,75,"* Make the given type expression into an optional type expression,"
True,src/com/google/javascript/rhino/JSTypeExpression.java,src/com/google/javascript/rhino/JSTypeExpression.java,76,* if possible.
True,src/com/google/javascript/rhino/JSTypeExpression.java,src/com/google/javascript/rhino/JSTypeExpression.java,78,public static JSTypeExpression makeOptionalArg(JSTypeExpression expr) {
True,src/com/google/javascript/rhino/JSTypeExpression.java,src/com/google/javascript/rhino/JSTypeExpression.java,79,if (expr.isOptionalArg() || expr.isVarArgs()) {
True,src/com/google/javascript/rhino/JSTypeExpression.java,src/com/google/javascript/rhino/JSTypeExpression.java,80,return expr;
True,src/com/google/javascript/rhino/JSTypeExpression.java,src/com/google/javascript/rhino/JSTypeExpression.java,81,} else {
True,src/com/google/javascript/rhino/JSTypeExpression.java,src/com/google/javascript/rhino/JSTypeExpression.java,82,return new JSTypeExpression(
True,src/com/google/javascript/rhino/JSTypeExpression.java,src/com/google/javascript/rhino/JSTypeExpression.java,83,"new Node(Token.EQUALS, expr.root), expr.sourceName, expr.registry);"
True,test/com/google/javascript/jscomp/CollapsePropertiesTest.java,test/com/google/javascript/jscomp/CollapsePropertiesTest.java,1115,public void testPropWithDollarSign() {
True,test/com/google/javascript/jscomp/CollapsePropertiesTest.java,test/com/google/javascript/jscomp/CollapsePropertiesTest.java,1116,"test(""var a = {$: 3}"", ""var a$$0 = 3;"");"
True,test/com/google/javascript/jscomp/CollapsePropertiesTest.java,test/com/google/javascript/jscomp/CollapsePropertiesTest.java,1119,public void testPropWithDollarSign2() {
True,test/com/google/javascript/jscomp/CollapsePropertiesTest.java,test/com/google/javascript/jscomp/CollapsePropertiesTest.java,1120,"test(""var a = {$: function(){}}"", ""var a$$0 = function(){};"");"
True,test/com/google/javascript/jscomp/CollapsePropertiesTest.java,test/com/google/javascript/jscomp/CollapsePropertiesTest.java,1123,public void testPropWithDollarSign3() {
True,test/com/google/javascript/jscomp/CollapsePropertiesTest.java,test/com/google/javascript/jscomp/CollapsePropertiesTest.java,1124,"test(""var a = {b: {c: 3}, b$c: function(){}}"","
True,test/com/google/javascript/jscomp/CollapsePropertiesTest.java,test/com/google/javascript/jscomp/CollapsePropertiesTest.java,1125,"""var a$b$c = 3; var a$b$0c = function(){};"");"
True,test/com/google/javascript/jscomp/CollapsePropertiesTest.java,test/com/google/javascript/jscomp/CollapsePropertiesTest.java,1128,public void testPropWithDollarSign4() {
True,test/com/google/javascript/jscomp/CollapsePropertiesTest.java,test/com/google/javascript/jscomp/CollapsePropertiesTest.java,1129,"test(""var a = {$$: {$$$: 3}};"", ""var a$$0$0$$0$0$0 = 3;"");"
True,test/com/google/javascript/jscomp/CollapsePropertiesTest.java,test/com/google/javascript/jscomp/CollapsePropertiesTest.java,1132,public void testPropWithDollarSign5() {
True,test/com/google/javascript/jscomp/CollapsePropertiesTest.java,test/com/google/javascript/jscomp/CollapsePropertiesTest.java,1133,"test(""var a = {b: {$0c: true}, b$0c: false};"","
True,test/com/google/javascript/jscomp/CollapsePropertiesTest.java,test/com/google/javascript/jscomp/CollapsePropertiesTest.java,1134,"""var a$b$$00c = true; var a$b$00c = false;"");"
True,test/com/google/javascript/jscomp/FoldConstantsTest.java,test/com/google/javascript/jscomp/FoldConstantsTest.java,1048,public void testBugIssue43() {
True,test/com/google/javascript/jscomp/FoldConstantsTest.java,test/com/google/javascript/jscomp/FoldConstantsTest.java,1049,"foldSame(""function foo() {"" +"
True,test/com/google/javascript/jscomp/FoldConstantsTest.java,test/com/google/javascript/jscomp/FoldConstantsTest.java,1050,"""  if (a) { var b = 1; } else { a.b = 1; }"" +"
False,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1005,"function x() { {var JSCompiler_inline_result_0; "" +"
True,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1005,"""function x() { a:{{var JSCompiler_inline_result_0; "" +"
False,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1007,"a:JSCompiler_inline_result_0?0:1 }"","
True,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1007,"""JSCompiler_inline_result_0?0:1 }}"","
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,24,boolean allowGlobalFunctionInlining = true;
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,28,boolean allowLocalFunctionInlining = true;
False,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,43,"ompiler, compiler.getUniqueNameIdSupplier(),"
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,45,"compiler,"
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,46,"compiler.getUniqueNameIdSupplier(),"
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,47,"allowGlobalFunctionInlining,"
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,48,"allowLocalFunctionInlining,"
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,49,"allowAnonymousFunctionExpressionInlining,"
False,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,45,"llowExpressionDecomposition,"
False,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,46,llowAnonymousFunctionExpressionInlining);
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,51,allowExpressionDecomposition);
False,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,931,"estSame(""function _f(){function g(){return 0}}"" +"
False,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,932,"function _h(){return g()}"");"
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,936,"test(""var g;function _f(){function g(){return 0}}"" +"
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,937,"""function _h(){return g()}"","
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,938,"""var g;function _f(){}"" +"
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,939,"""function _h(){return g()}"");"
False,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,936,"estSame(""function _f(){var g=function(){return 0}}"" +"
False,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,937,"function _h(){return g()}"");"
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,943,"test(""var g;function _f(){var g=function(){return 0}}"" +"
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,944,"""function _h(){return g()}"","
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,945,"""var g;function _f(){}"" +"
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,946,"""function _h(){return g()}"");"
False,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,941,"estSame(""var g=3;function _f(){var g=function(){return 0}}"" +"
False,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,942,"function _h(){return g()}"");"
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,950,"test(""var g;function _f(){var g=function(){return 0}}"" +"
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,951,"""function _h(){return g()}"","
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,952,"""var g;function _f(){}"" +"
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,953,"""function _h(){return g()}"");"
False,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,946,"estSame(""var g=3;function _f(){function g(){return 0}}"" +"
False,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,947,"function _h(){return g()}"");"
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,957,"test(""var g;function _f(){function g(){return 0}}"" +"
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,958,"""function _h(){return g()}"","
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,959,"""var g;function _f(){}"" +"
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,960,"""function _h(){return g()}"");"
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,1438,public void testLocalFunctionInlining1() {
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,1439,"test(""function _f(){ function g() {} g() }"","
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,1440,"""function _f(){ void 0 }"");"
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,1443,public void testLocalFunctionInlining2() {
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,1444,"test(""function _f(){ function g() {foo(); bar();} g() }"","
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,1445,"""function _f(){ {foo(); bar();} }"");"
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,1448,public void testLocalFunctionInlining3() {
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,1449,"test(""function _f(){ function g() {foo(); bar();} g() }"","
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,1450,"""function _f(){ {foo(); bar();} }"");"
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,1453,public void testLocalFunctionInlining4() {
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,1454,"test(""function _f(){ function g() {return 1} return g() }"","
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,1455,"""function _f(){ return 1 }"");"
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,1458,public void testLocalFunctionInlining5() {
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,1459,"testSame(""function _f(){ function g() {this;} g() }"");"
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,1462,public void testLocalFunctionInlining6() {
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,1463,"testSame(""function _f(){ function g() {this;} return g; }"");"
True,test/com/google/javascript/jscomp/NormalizeTest.java,test/com/google/javascript/jscomp/NormalizeTest.java,73,"test(""a:var a,b,c;"","
True,test/com/google/javascript/jscomp/NormalizeTest.java,test/com/google/javascript/jscomp/NormalizeTest.java,74,"""a:{ var a;var b; var c; }"");"
True,test/com/google/javascript/jscomp/NormalizeTest.java,test/com/google/javascript/jscomp/NormalizeTest.java,75,"test(""a:for(var a,b,c;;);"","
True,test/com/google/javascript/jscomp/NormalizeTest.java,test/com/google/javascript/jscomp/NormalizeTest.java,76,"""var a;var b; var c;a:for(;;);"");"
True,test/com/google/javascript/jscomp/NormalizeTest.java,test/com/google/javascript/jscomp/NormalizeTest.java,77,"test(""if (true) a:var a,b;"","
True,test/com/google/javascript/jscomp/NormalizeTest.java,test/com/google/javascript/jscomp/NormalizeTest.java,78,"""if (true)a:{ var a; var b; }"");"
False,test/com/google/javascript/jscomp/NormalizeTest.java,test/com/google/javascript/jscomp/NormalizeTest.java,128,"estSame(""function f() { f(); a:function bar() {} }"");"
True,test/com/google/javascript/jscomp/NormalizeTest.java,test/com/google/javascript/jscomp/NormalizeTest.java,134,"test(""function f() { f(); a:function bar() {} }"","
True,test/com/google/javascript/jscomp/NormalizeTest.java,test/com/google/javascript/jscomp/NormalizeTest.java,135,"""function f() { f(); a:{function bar() {}}}"");"
False,test/com/google/javascript/jscomp/NormalizeTest.java,test/com/google/javascript/jscomp/NormalizeTest.java,175,"function f() { var a = 1; lable1:a = 2 }"");"
True,test/com/google/javascript/jscomp/NormalizeTest.java,test/com/google/javascript/jscomp/NormalizeTest.java,182,"""function f() { var a = 1; lable1:{a = 2}}"");"
False,test/com/google/javascript/jscomp/NormalizeTest.java,test/com/google/javascript/jscomp/NormalizeTest.java,177,"function f() { var a = 1; lable1:; }"");"
True,test/com/google/javascript/jscomp/NormalizeTest.java,test/com/google/javascript/jscomp/NormalizeTest.java,184,"""function f() { var a = 1; lable1:{} }"");"
True,test/com/google/javascript/jscomp/TypeCheckFunctionCheckTest.java,test/com/google/javascript/jscomp/TypeCheckFunctionCheckTest.java,142,public void testFunctionsWithJsDoc7() {
True,test/com/google/javascript/jscomp/TypeCheckFunctionCheckTest.java,test/com/google/javascript/jscomp/TypeCheckFunctionCheckTest.java,143,"String fooDfn = ""/** @param {*} [b] */ var foo = function(b) {};"";"
True,test/com/google/javascript/jscomp/TypeCheckFunctionCheckTest.java,test/com/google/javascript/jscomp/TypeCheckFunctionCheckTest.java,144,"testSame(fooDfn + ""foo();"");"
True,test/com/google/javascript/jscomp/TypeCheckFunctionCheckTest.java,test/com/google/javascript/jscomp/TypeCheckFunctionCheckTest.java,145,"testSame(fooDfn + ""foo(1);"");"
True,test/com/google/javascript/jscomp/TypeCheckFunctionCheckTest.java,test/com/google/javascript/jscomp/TypeCheckFunctionCheckTest.java,146,"testSame(fooDfn + ""foo(1, 2);"", WRONG_ARGUMENT_COUNT);"
