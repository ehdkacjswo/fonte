is_addition,old_file_path,new_file_path,line_num,content
True,src/com/google/javascript/jscomp/CheckMissingReturn.java,src/com/google/javascript/jscomp/CheckMissingReturn.java,28,import com.google.javascript.rhino.jstype.TernaryValue;
False,src/com/google/javascript/jscomp/CheckMissingReturn.java,src/com/google/javascript/jscomp/CheckMissingReturn.java,70,f (condition != null && NodeUtil.isLiteralValue(condition) ) {
False,src/com/google/javascript/jscomp/CheckMissingReturn.java,src/com/google/javascript/jscomp/CheckMissingReturn.java,71,eturn NodeUtil.getBooleanValue(condition) ==
False,src/com/google/javascript/jscomp/CheckMissingReturn.java,src/com/google/javascript/jscomp/CheckMissingReturn.java,72,Branch.ON_TRUE == branch);
True,src/com/google/javascript/jscomp/CheckMissingReturn.java,src/com/google/javascript/jscomp/CheckMissingReturn.java,71,if (condition != null) {
True,src/com/google/javascript/jscomp/CheckMissingReturn.java,src/com/google/javascript/jscomp/CheckMissingReturn.java,72,TernaryValue val = NodeUtil.getBooleanValue(condition);
True,src/com/google/javascript/jscomp/CheckMissingReturn.java,src/com/google/javascript/jscomp/CheckMissingReturn.java,73,if (val != TernaryValue.UNKNOWN) {
True,src/com/google/javascript/jscomp/CheckMissingReturn.java,src/com/google/javascript/jscomp/CheckMissingReturn.java,74,return val.toBoolean(true) == (Branch.ON_TRUE == branch);
True,src/com/google/javascript/jscomp/CheckUnreachableCode.java,src/com/google/javascript/jscomp/CheckUnreachableCode.java,27,import com.google.javascript.rhino.jstype.TernaryValue;
False,src/com/google/javascript/jscomp/CheckUnreachableCode.java,src/com/google/javascript/jscomp/CheckUnreachableCode.java,101,f (condition != null && NodeUtil.isImmutableValue(condition)) {
False,src/com/google/javascript/jscomp/CheckUnreachableCode.java,src/com/google/javascript/jscomp/CheckUnreachableCode.java,102,eturn NodeUtil.getBooleanValue(condition) ==
False,src/com/google/javascript/jscomp/CheckUnreachableCode.java,src/com/google/javascript/jscomp/CheckUnreachableCode.java,103,branch == Branch.ON_TRUE);
True,src/com/google/javascript/jscomp/CheckUnreachableCode.java,src/com/google/javascript/jscomp/CheckUnreachableCode.java,102,if (condition != null) {
True,src/com/google/javascript/jscomp/CheckUnreachableCode.java,src/com/google/javascript/jscomp/CheckUnreachableCode.java,103,TernaryValue val = NodeUtil.getBooleanValue(condition);
True,src/com/google/javascript/jscomp/CheckUnreachableCode.java,src/com/google/javascript/jscomp/CheckUnreachableCode.java,104,if (val != TernaryValue.UNKNOWN) {
True,src/com/google/javascript/jscomp/CheckUnreachableCode.java,src/com/google/javascript/jscomp/CheckUnreachableCode.java,105,return val.toBoolean(true) == (branch == Branch.ON_TRUE);
False,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,239,"ddExpr(first.getNext(), p);"
True,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,239,"addExpr(first.getNext(), 1);"
False,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,241,"ddExpr(last, p);"
True,src/com/google/javascript/jscomp/CodeGenerator.java,src/com/google/javascript/jscomp/CodeGenerator.java,241,"addExpr(last, 1);"
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,30,import com.google.javascript.rhino.JSDocInfo;
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1054,/ Check if externs files need to be lifted.
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1055,oolean liftedExterns = false;
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1055,// Check if inputs need to be rebuilt from modules.
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1056,boolean staleInputs = false;
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1067,f (n.getJSDocInfo() != null && n.getJSDocInfo().isExterns()) {
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1068,"/ If the input file is explicitly marked as an externs file, then"
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1069,/ assume the programmer made a mistake and throw it into
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1070,/ the externs pile anyways.
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1071,xternsRoot.addChildToBack(n);
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1072,nput.setIsExtern(true);
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1074,/ TODO(nicksantos): We need a better mechanism to make sure
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1075,/ changes to the inputs array get reflected in JSModules.
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1076,nput.getModule().remove(input);
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1078,xterns.add(input);
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1079,iftedExterns = true;
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1068,if (n.getJSDocInfo() != null) {
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1069,JSDocInfo info = n.getJSDocInfo();
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1070,if (info.isExterns()) {
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1071,"// If the input file is explicitly marked as an externs file, then"
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1072,// assume the programmer made a mistake and throw it into
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1073,// the externs pile anyways.
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1074,externsRoot.addChildToBack(n);
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1075,input.setIsExtern(true);
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1077,input.getModule().remove(input);
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1079,externs.add(input);
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1080,staleInputs = true;
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1081,} else if (info.isNoCompile()) {
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1082,input.getModule().remove(input);
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1083,staleInputs = true;
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1083,f (liftedExterns) {
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1088,if (staleInputs) {
False,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,22,mport com.google.common.collect.ImmutableSet;
False,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,869,rivate static final PassFactory peepholeOptimizations =
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,868,static final PassFactory peepholeOptimizations =
False,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,874,mmutableSet<AbstractPeepholeOptimization> optimizations =
False,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,875,mmutableSet.<AbstractPeepholeOptimization>of(
False,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,876,ew PeepholeSubstituteAlternateSyntax());
False,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,878,inal PeepholeOptimizationsPass peepholePass =
False,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,879,"ew PeepholeOptimizationsPass(compiler, optimizations);"
False,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,881,eturn peepholePass;
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,872,"return new PeepholeOptimizationsPass(compiler,"
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,873,"new PeepholeSubstituteAlternateSyntax(),"
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,874,new PeepholeRemoveDeadCode());
False,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,46, else if(NodeUtil.isFunction(parent) && parent.getFirstChild() == n) {
True,src/com/google/javascript/jscomp/DefinitionsRemover.java,src/com/google/javascript/jscomp/DefinitionsRemover.java,46,} else if (NodeUtil.isFunction(parent) && parent.getFirstChild() == n) {
True,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,21,import com.google.javascript.jscomp.MakeDeclaredNamesUnique.ContextualRenamer;
False,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,548,"rivate String tempNamePrefix = ""JSCompiler_temp_"";"
True,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,549,"private String tempNamePrefix = ""JSCompiler_temp"";"
False,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,562,eturn tempNamePrefix + safeNameIdSupplier.get();
True,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,563,return tempNamePrefix + ContextualRenamer.UNIQUE_ID_SEPARATOR
True,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,564,+ safeNameIdSupplier.get();
False,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,569,"tring sName = tempNamePrefix + ""const_"" + safeNameIdSupplier.get();"
False,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,570,his.knownConstants.add(sName);
False,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,571,eturn sName;
True,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,571,"String name = tempNamePrefix + ""_const"""
True,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,572,+ ContextualRenamer.UNIQUE_ID_SEPARATOR
True,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,573,+ safeNameIdSupplier.get();
True,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,574,this.knownConstants.add(name);
True,src/com/google/javascript/jscomp/ExpressionDecomposer.java,src/com/google/javascript/jscomp/ExpressionDecomposer.java,575,return name;
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,20,import com.google.common.base.Preconditions;
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,24,import com.google.common.collect.Sets;
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,25,import com.google.javascript.rhino.JSDocInfo;
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,28,import com.google.javascript.rhino.jstype.FunctionType;
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,29,import com.google.javascript.rhino.jstype.JSType;
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,42,* @author dcc@google.com (Devin Coughlin)
False,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,39,lass ExternExportsPass extends NodeTraversal.AbstractPostOrderCallback
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,44,final class ExternExportsPass extends NodeTraversal.AbstractPostOrderCallback
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,47,static final DiagnosticType EXPORTED_FUNCTION_UNKNOWN_PARAMETER_TYPE =
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,48,DiagnosticType.warning(
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,49,"""JSC_EXPORTED_FUNCTION_UNKNOWN_PARAMETER_TYPE"","
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,50,"""Unable to determine type of parameter {0} for exported function {1}"");"
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,52,static final DiagnosticType EXPORTED_FUNCTION_UNKNOWN_RETURN_TYPE =
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,53,DiagnosticType.warning(
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,54,"""JSC_EXPORTED_FUNCTION_UNKNOWN_RETURN_TYPE"","
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,55,"""Unable to determine return type for exported function {0}"");"
False,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,51,** The builder which holds the externs generated. */
False,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,52,rivate final StringBuilder sb;
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,66,/** The AST root which holds the externs generated. */
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,67,private final Node externsRoot;
False,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,58,rivate final List<String> paths;
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,73,private final Set<String> alreadyExportedPaths;
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,76,protected final String symbolName;
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,77,protected final Node value;
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,79,"Export(String symbolName, Node value) {"
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,80,this.symbolName = symbolName;
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,81,this.value = value;
False,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,64, it to the parent pass's builder.
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,86,* it to the externsRoot AST.
False,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,66,bstract void generateExterns();
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,88,void generateExterns() {
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,89,"appendExtern(getExportedPath(), getFunctionValue(value));"
False,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,74, Appends all paths necessary for the path to be declared.
False,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,75," For example, for ""a.b.c"", the paths ""a"", ""a.b"" and ""a.b.c"""
False,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,76, will be appended (if they have not already).
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,98,* Appends the exported function and all paths necessary for the path to be
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,99,"* declared. For example, for a property ""a.b.c"", the initializers for"
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,100,"* paths ""a"", ""a.b"" will be appended (if they have not already) and a.b.c"
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,101,* will be initialized with the exported version of the function:
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,102,* <pre>
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,103,* var a = {};
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,104,* a.b = {};
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,105,"* a.b.c = function(x,y) { }"
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,106,* </pre>
False,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,78,rotected void appendInferredPaths(String path) {
False,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,79,/ We wrap in a list here so we have an Iterable for the
False,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,80,/ Iterables lib.
False,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,81,"ist<String> pieces = Lists.newArrayList(path.split(""\\.""));"
False,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,83,"/ For each path prefix, append."
False,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,84,or (int i = 0; i < pieces.size(); ++i) {
False,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,86,"tring cPath = Joiner.on(""."").join(Iterables.limit(pieces, i + 1));"
False,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,88,/ Actually append the path if it is needed (i.e. it is not
False,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,89,/ already present OR it is the path given to the method).
False,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,90,f (i == pieces.size() - 1 || !paths.contains(cPath)) {
False,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,91,f (i == 0) {
False,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,92,"b.append(""var "");"
False,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,95,b.append(cPath);
False,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,97,f (i < pieces.size() - 1) {
False,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,98,"b.append("";\n"");"
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,108,"protected void appendExtern(String path, Node functionToExport) {"
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,109,List<String> pathPrefixes = computePathPrefixes(path);
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,111,for (int i = 0; i < pathPrefixes.size(); ++i) {
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,112,String pathPrefix = pathPrefixes.get(i);
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,114,/* The complete path (the last path prefix) must be emitted and
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,115,* it gets initialized to the externed version of the value.
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,117,boolean isCompletePathPrefix = (i == pathPrefixes.size() - 1);
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,119,"boolean skipPathPrefix = pathPrefix.endsWith("".prototype"")"
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,120,|| (alreadyExportedPaths.contains(pathPrefix)
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,121,&& !isCompletePathPrefix);
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,123,if (!skipPathPrefix) {
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,124,Node initializer;
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,126,"/* Namespaces get initialized to {}, functions to"
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,127,"* externed versions of their value, and if we can't"
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,128,* figure out where the value came from we initialize
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,129,* it to {}.
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,131,"* Since externs are always exported in sorted order,"
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,132,* we know that if we export a.b = function() {} and later
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,133,* a.b.c = function then a.b will always be in alreadyExportedPaths
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,134,* when we emit a.b.c and thus we will never overwrite the function
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,135,* exported for a.b with a namespace.
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,138,if (isCompletePathPrefix && functionToExport != null) {
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,139,initializer = createExternFunction(functionToExport);
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,140,} else {
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,141,initializer = new Node(Token.OBJECTLIT);
False,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,101,aths.add(cPath);
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,144,"appendPathDefinition(pathPrefix, initializer);"
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,150,* Computes a list of the path prefixes constructed from the components
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,151,* of the path.
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,152,* <pre>
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,153,"* E.g., if the path is:"
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,154,"*      ""a.b.c"""
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,155,* then then path prefixes will be
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,156,"*    [""a"",""a.b"",""a.b.c""]:"
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,157,* </pre>
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,159,private List<String> computePathPrefixes(String path) {
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,160,"List<String> pieces = Lists.newArrayList(path.split(""\\.""));"
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,162,List<String> pathPrefixes = Lists.newArrayList();
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,164,for (int i = 0; i < pieces.size(); i++) {
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,165,"pathPrefixes.add(Joiner.on(""."").join(Iterables.limit(pieces, i + 1)));"
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,168,return pathPrefixes;
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,171,"private void appendPathDefinition(String path, Node initializer) {"
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,172,Node pathDefinition;
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,174,"if (!path.contains(""."")) {"
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,175,"pathDefinition = NodeUtil.newVarNode(path, initializer);"
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,176,} else {
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,177,"Node qualifiedPath = NodeUtil.newQualifiedNameNode(path, -1, -1);"
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,178,"pathDefinition = NodeUtil.newExpr(new Node(Token.ASSIGN, qualifiedPath,"
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,179,initializer));
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,182,externsRoot.addChildToBack(pathDefinition);
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,184,alreadyExportedPaths.add(path);
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,188,"* Given a function to export, create the empty function that"
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,189,* will be put in the externs file. This extern function should have
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,190,* the same type as the original function and the same parameter
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,191,* name but no function body.
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,193,* We create a warning here if the the function to export is missing
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,194,* parameter or return types.
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,196,private Node createExternFunction(Node exportedFunction) {
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,197,checkForFunctionsWithUnknownTypes(exportedFunction);
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,199,List<Node> externParameters = Lists.newLinkedList();
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,200,Node actualParameterIterator = NodeUtil.getFnParameters(exportedFunction)
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,201,.getFirstChild();
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,203,while (actualParameterIterator != null) {
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,204,externParameters.add(actualParameterIterator.cloneNode());
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,206,actualParameterIterator = actualParameterIterator.getNext();
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,209,"Node externFunction = NodeUtil.newFunctionNode("""", externParameters,"
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,210,"new Node(Token.BLOCK), -1, -1);"
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,211,externFunction.setJSType(exportedFunction.getJSType());
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,213,return externFunction;
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,217,* Warn the user if there is an exported function for which a parameter
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,218,* or return type is unknown.
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,220,private void checkForFunctionsWithUnknownTypes(Node function) {
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,221,Preconditions.checkArgument(NodeUtil.isFunction(function));
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,223,/* We must get the JSDocInfo from the function's type since the function
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,224,* itself does not have an associated JSDocInfo node.
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,226,JSDocInfo functionJSDocInfo = function.getJSType().getJSDocInfo();
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,228,FunctionType functionType = (FunctionType) function.getJSType();
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,230,JSType returnType = functionType.getReturnType();
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,232,/* It is OK if a constructor doesn't have a return type */
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,233,if (!functionType.isConstructor() &&
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,234,(returnType == null || returnType.isUnknownType())) {
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,235,reportUnknownReturnType(function);
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,238,/* We can't just use the function's type's getParameters() to get the
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,239,* parameter nodes because the nodes returned from that method
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,240,"* do not have names or locations. Similarly, the function's AST parameter"
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,241,* nodes do not have JSTypes(). So we walk both lists of parameter nodes
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,242,* in lock step getting parameter names from the first and types from the
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,243,* second.
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,245,Node astParameterIterator = NodeUtil.getFnParameters(function)
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,246,.getFirstChild();
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,248,Node typeParameterIterator = functionType.getParametersNode()
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,249,.getFirstChild();
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,251,while (astParameterIterator != null) {
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,252,JSType parameterType = typeParameterIterator.getJSType();
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,254,if (parameterType == null || parameterType.isUnknownType()) {
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,255,"reportUnknownParameterType(function, astParameterIterator);"
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,258,astParameterIterator = astParameterIterator.getNext();
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,259,typeParameterIterator = typeParameterIterator.getNext();
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,263,"private void reportUnknownParameterType(Node function, Node parameter) {"
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,264,"compiler.report(JSError.make(NodeUtil.getSourceName(function),"
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,265,"parameter, CheckLevel.WARNING,"
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,266,"EXPORTED_FUNCTION_UNKNOWN_PARAMETER_TYPE,"
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,267,"NodeUtil.getFunctionName(function), parameter.getString()));"
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,270,private void reportUnknownReturnType(Node function) {
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,271,"compiler.report(JSError.make(NodeUtil.getSourceName(function),"
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,272,"function, CheckLevel.WARNING, EXPORTED_FUNCTION_UNKNOWN_RETURN_TYPE,"
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,273,NodeUtil.getFunctionName(function)));
False,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,112,rotected Node getFunctionValue(Node value) {
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,281,protected Node getFunctionValue(Node qualifiedNameNode) {
False,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,124,ode definition = definitionParent.getLastChild();
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,293,Node definition;
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,295,switch(definitionParent.getType()) {
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,296,case Token.ASSIGN:
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,297,definition = definitionParent.getLastChild();
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,298,break;
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,299,case Token.VAR:
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,300,definition = definitionParent.getLastChild().getLastChild();
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,301,break;
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,302,default:
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,303,return null;
False,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,135, Appends the given function definition to the builder.
False,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,137,rotected void appendFunctionValue(Node definition) {
False,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,138,"b.append("" = "");"
False,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,139,"b.append(""function("");"
False,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,141,/ Add the parameters.
False,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,142,ode parameters = definition.getFirstChild().getNext();
False,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,144,nt i = 0;
False,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,145,or (Node current = parameters.getFirstChild();
False,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,146,urrent != null;
False,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,147,urrent = current.getNext()) {
False,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,149,f (i > 0) {
False,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,150,"b.append("", "");"
False,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,153,b.append(current.getString());
False,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,155,+i;
False,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,158,"b.append("") {}"");"
False,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,166,rivate final String symbolName;
False,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,167,rivate final Node value;
False,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,170,his.symbolName = symbolName;
False,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,171,his.value = value;
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,320,"super(symbolName, value);"
False,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,185,Override
False,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,186,oid generateExterns() {
False,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,187,ppendInferredPaths(symbolName);
False,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,189,ode functionValue = getFunctionValue(value);
False,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,191,f (functionValue != null) {
False,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,192,ppendFunctionValue(functionValue);
False,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,195,"b.append("";\n"");"
False,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,204,rivate final String symbolName;
False,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,205,rivate final Node value;
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,342,"super(symbolName, value);"
False,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,209,his.symbolName = symbolName;
False,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,210,his.value = value;
False,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,239,Override
False,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,240,oid generateExterns() {
False,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,241,tring exportedPath = getExportedPath();
False,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,243,ppendInferredPaths(exportedPath);
False,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,245,ode functionValue = getFunctionValue(value);
False,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,247,f (functionValue != null) {
False,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,248,ppendFunctionValue(functionValue);
False,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,251,"b.append("";\n"");"
False,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,262,his.sb = new StringBuilder();
False,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,263,his.paths = Lists.newArrayList();
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,381,this.externsRoot = new Node(Token.BLOCK);
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,382,this.externsRoot.setIsSyntheticBlock(true);
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,383,this.alreadyExportedPaths = Sets.newHashSet();
False,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,293,eturn sb.toString();
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,413,CodePrinter.Builder builder = new CodePrinter.Builder(externsRoot)
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,414,.setPrettyPrint(false).setOutputTypes(true);
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,416,return builder.build();
False,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,302,f (parent.getType() == Token.ASSIGN) {
True,src/com/google/javascript/jscomp/ExternExportsPass.java,src/com/google/javascript/jscomp/ExternExportsPass.java,425,if (parent.getType() == Token.ASSIGN || parent.getType() == Token.VAR) {
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,20,mport com.google.common.base.Predicates;
True,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,25,import com.google.javascript.rhino.jstype.TernaryValue;
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,84,f (type == Token.BLOCK) {
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,85,"ryFoldBlock(t, n, parent);"
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,86,eturn;
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,143,f (!NodeUtil.isLiteralValue(left)) {
True,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,138,TernaryValue leftVal = NodeUtil.getBooleanValue(left);
True,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,139,if (leftVal == TernaryValue.UNKNOWN) {
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,149,nt result = NodeUtil.getBooleanValue(left) ? Token.FALSE :
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,150,oken.TRUE;
True,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,145,int result = leftVal.toBoolean(true) ? Token.FALSE : Token.TRUE;
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,262,f (type == Token.IF || type == Token.HOOK) {
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,263,"ryFoldHookIf(t, n, parent);"
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,264,eturn;
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,267,f (type == Token.DO) {
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,268,"ryFoldDo(t, n, parent);"
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,269,eturn;
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,272,f (type == Token.WHILE) {
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,273,"ryFoldWhile(t, n, parent);"
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,274,eturn;
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,277,f (type == Token.FOR) {
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,278,ode condition = NodeUtil.getConditionExpression(n);
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,279,f (condition != null) {
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,280,"his.tryFoldForCondition(condition, n);"
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,283,"ryFoldFor(t, n, parent);"
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,284,eturn;
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,317,f (type == Token.COMMA) {
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,318,"ryFoldComma(t, n, left, right, parent);"
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,319,eturn;
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,402,rivate void tryFoldComma(
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,403,"odeTraversal t, Node n, Node left, Node right, Node parent) {"
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,404,/ If the left side does nothing replace the comma with the result.
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,405,f (!NodeUtil.mayHaveSideEffects(left)) {
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,406,/ Fold it!
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,407,.removeChild(right);
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,408,"arent.replaceChild(n, right);"
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,409,.getCompiler().reportCodeChange();
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,410, else {
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,411,f (parent.getType() == Token.EXPR_RESULT) {
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,412,/ split comma
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,413,.detachChildren();
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,414,/ Replace the original expression with the left operand.
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,415,"arent.replaceChild(n, left);"
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,416,/ Add the right expression afterward.
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,417,"ode newStatement = new Node(Token.EXPR_RESULT, right);"
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,418,ewStatement.copyInformationFrom(n);
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,419,"arent.getParent().addChildAfter(newStatement, parent);"
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,420,.getCompiler().reportCodeChange();
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,493, Try removing unneeded block nodes and their useless children
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,495,"oid tryFoldBlock(NodeTraversal t, Node n, Node parent) {"
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,496,/ Remove any useless children
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,497,or (Node c = n.getFirstChild(); c != null; ) {
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,498,"ode next = c.getNext();  // save c.next, since 'c' may be removed"
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,499,f (!NodeUtil.mayHaveSideEffects(c)) {
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,500,.removeChild(c);  // lazy kids
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,501,.getCompiler().reportCodeChange();
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,503, = next;
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,506,f (n.isSyntheticBlock() || parent == null) {
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,507,eturn;
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,510,/ Try to remove the block.
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,511,f (NodeUtil.tryMergeBlock(n)) {
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,512,.getCompiler().reportCodeChange();
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,517, Try folding :? (hook) and IF nodes by removing dead branches.
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,518, @return were any changes performed?
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,520,"oolean tryFoldHookIf(NodeTraversal t, Node n, Node parent) {"
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,521,nt type = n.getType();
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,522,ode cond = n.getFirstChild();
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,523,ode thenBody = cond.getNext();
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,524,ode elseBody = thenBody.getNext();
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,526,oolean changes = false;
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,528,f (type == Token.IF) {
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,529,/ if (x) { .. } else { } --> if (x) { ... }
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,530,f (elseBody != null && !NodeUtil.mayHaveSideEffects(elseBody)) {
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,531,.removeChild(elseBody);
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,532,lseBody = null;
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,533,.getCompiler().reportCodeChange();
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,534,hanges = true;
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,537,/ if (x) { } else { ... } --> if (!x) { ... }
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,538,f (!NodeUtil.mayHaveSideEffects(thenBody) && elseBody != null) {
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,539,.removeChild(elseBody);
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,540,".replaceChild(thenBody, elseBody);"
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,541,ode notCond = new Node(Token.NOT);
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,542,".replaceChild(cond, notCond);"
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,543,otCond.addChildToFront(cond);
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,544,ond = notCond;
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,545,henBody = cond.getNext();
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,546,lseBody = null;
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,547,.getCompiler().reportCodeChange();
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,548,hanges = true;
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,551,/ if (x()) { }
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,552,f (!NodeUtil.mayHaveSideEffects(thenBody) && elseBody == null) {
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,553,f (NodeUtil.mayHaveSideEffects(cond)) {
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,554,"/ x() has side effects, just leave the condition on its own."
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,555,.removeChild(cond);
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,556,"arent.replaceChild(n, NodeUtil.newExpr(cond));"
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,557, else {
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,558,"/ x() has no side effects, the whole tree is useless now."
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,559,"odeUtil.removeChild(parent, n);"
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,561,.getCompiler().reportCodeChange();
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,562,eturn true; // The if has been removed. There is nothing to do.
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,564, else {
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,565,reconditions.checkState(type == Token.HOOK);
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,566,f (NodeUtil.isExpressionNode(parent)) {
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,567,/ Try to remove useless nodes.
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,568,f (!NodeUtil.mayHaveSideEffects(thenBody)) {
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,569,/ x?void 0:y --> if(!x)y
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,570,ode ifNode = new Node(Token.IF);
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,571,f (cond.getType() == Token.NOT) {
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,572,ode expr = cond.getFirstChild();
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,573,ond.removeChild(expr);
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,574,fNode.addChildToBack(expr);
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,575, else {
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,576,ode not = new Node(Token.NOT).copyInformationFrom(cond);
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,577,.removeChild(cond);
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,578,ot.addChildToBack(cond);
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,579,fNode.addChildToBack(not);
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,582,.removeChild(elseBody);
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,583,fNode.addChildToBack(
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,584,"ew Node(Token.BLOCK, NodeUtil.newExpr(elseBody))"
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,585,copyInformationFrom(elseBody));
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,586,"arent.getParent().replaceChild(parent, ifNode);"
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,587,.getCompiler().reportCodeChange();
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,588,eturn true;
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,589, else if (!NodeUtil.mayHaveSideEffects(elseBody)) {
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,590,/ x?y:void 0 --> if(x)y
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,591,ode ifNode = new Node(Token.IF);
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,592,.removeChild(cond);
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,593,fNode.addChildToBack(cond);
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,594,.removeChild(thenBody);
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,596,fNode.addChildToBack(
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,597,"ew Node(Token.BLOCK, NodeUtil.newExpr(thenBody))"
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,598,copyInformationFrom(thenBody));
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,599,"arent.getParent().replaceChild(parent, ifNode);"
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,600,.getCompiler().reportCodeChange();
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,601,eturn true;
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,606,/ Try transforms that apply to both IF and HOOK.
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,607,f (!NodeUtil.isLiteralValue(cond)) {
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,608,eturn changes;  // We can't remove branches otherwise!
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,611,oolean condTrue = NodeUtil.getBooleanValue(cond);
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,613,f (n.getChildCount() == 2) {
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,614,reconditions.checkState(type == Token.IF);
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,616,f (condTrue) {
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,617,"/ Replace ""if (true) { X }"" with ""X""."
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,618,ode thenStmt = n.getFirstChild().getNext();
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,619,.removeChild(thenStmt);
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,620,"arent.replaceChild(n, thenStmt);"
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,621,.getCompiler().reportCodeChange();
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,622, else {
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,623,"/ Replace ""if (false) { X }"" with empty node."
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,624,odeUtil.redeclareVarsInsideBranch(n);
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,625,"odeUtil.removeChild(parent, n);"
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,626,.getCompiler().reportCodeChange();
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,628, else {
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,629,"/ Replace ""if (true) { X } else { Y }"" with X, or"
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,630,"/ replace ""if (false) { X } else { Y }"" with Y."
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,631,ode firstBranch = n.getFirstChild().getNext();
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,632,ode secondBranch = firstBranch.getNext();
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,633,ode branch = condTrue ? firstBranch : secondBranch;
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,634,ode notBranch = condTrue ? secondBranch : firstBranch;
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,635,odeUtil.redeclareVarsInsideBranch(notBranch);
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,636,.removeChild(branch);
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,637,"arent.replaceChild(n, branch);"
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,638,.getCompiler().reportCodeChange();
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,640,eturn true;
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,651,f (NodeUtil.isLiteralValue(left)) {
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,652,oolean lval = NodeUtil.getBooleanValue(left);
True,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,444,TernaryValue leftVal = NodeUtil.getBooleanValue(left);
True,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,446,if (leftVal != TernaryValue.UNKNOWN) {
True,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,447,boolean lval = leftVal.toBoolean(true);
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,665, else if (NodeUtil.isLiteralValue(right)) {
True,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,460,} else {
True,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,461,TernaryValue rightVal = NodeUtil.getBooleanValue(right);
True,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,462,if (rightVal != TernaryValue.UNKNOWN) {
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,678,oolean rval = NodeUtil.getBooleanValue(right);
True,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,476,boolean rval = rightVal.toBoolean(true);
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,1369, Removes WHILEs that always evaluate to false.
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,1371,"oid tryFoldWhile(NodeTraversal t, Node n, Node parent) {"
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,1372,reconditions.checkArgument(n.getType() == Token.WHILE);
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,1373,ode cond = NodeUtil.getConditionExpression(n);
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,1374,f (!NodeUtil.isLiteralValue(cond) || NodeUtil.getBooleanValue(cond)) {
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,1375,eturn;
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,1377,odeUtil.redeclareVarsInsideBranch(n);
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,1378,"odeUtil.removeChild(parent, n);"
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,1379,.getCompiler().reportCodeChange();
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,1383, Removes FORs that always evaluate to false.
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,1385,"oid tryFoldFor(NodeTraversal t, Node n, Node parent) {"
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,1386,reconditions.checkArgument(n.getType() == Token.FOR);
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,1387,/ This is not a FOR-IN loop
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,1388,f (n.getChildCount() != 4) return;
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,1389,/ There isn't an initializer
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,1390,f (n.getFirstChild().getType() != Token.EMPTY) return;
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,1392,ode cond = NodeUtil.getConditionExpression(n);
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,1393,f (!NodeUtil.isLiteralValue(cond) || NodeUtil.getBooleanValue(cond)) {
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,1394,eturn;
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,1396,odeUtil.redeclareVarsInsideBranch(n);
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,1397,"odeUtil.removeChild(parent, n);"
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,1398,.getCompiler().reportCodeChange();
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,1402, Removes DOs that always evaluate to false. This leaves the
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,1403, statements that were in the loop in a BLOCK node.
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,1404," The block will be removed in a later pass, if possible."
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,1406,"oid tryFoldDo(NodeTraversal t, Node n, Node parent) {"
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,1407,reconditions.checkArgument(n.getType() == Token.DO);
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,1409,ode cond = NodeUtil.getConditionExpression(n);
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,1410,f (!NodeUtil.isLiteralValue(cond) || NodeUtil.getBooleanValue(cond)) {
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,1411,eturn;
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,1414,/ TODO(johnlenz): The do-while can be turned into a label with
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,1415,/ named breaks and the label optimized away (maybe).
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,1416,f (hasBreakOrContinue(n)) {
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,1417,eturn;
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,1420,reconditions.checkState(
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,1421,"odeUtil.isControlStructureCodeBlock(n, n.getFirstChild()));"
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,1422,ode block = n.removeFirstChild();
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,1424,"arent.replaceChild(n, block);"
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,1425,.getCompiler().reportCodeChange();
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,1431,oolean hasBreakOrContinue(Node n) {
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,1432,/ TODO(johnlenz): This is overkill as named breaks may refer to outer
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,1433,"/ loops or labels, and any break my refer to an inner loop."
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,1434,"/ More generally, this check may be more expensive than we like."
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,1435,eturn NodeUtil.has(
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,1436,","
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,1437,redicates.<Node>or(
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,1438,"ew NodeUtil.MatchNodeType(Token.BREAK),"
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,1439,"ew NodeUtil.MatchNodeType(Token.CONTINUE)),"
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,1440,ew NodeUtil.MatchNotFunction());
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,1444, Remove always true loop conditions.
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,1446,"rivate void tryFoldForCondition(Node n, Node parent) {"
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,1447,f (NodeUtil.isLiteralValue(n)) {
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,1448,oolean result = NodeUtil.getBooleanValue(n);
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,1449,f (result) {
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,1450,"arent.replaceChild(n, new Node(Token.EMPTY));"
False,src/com/google/javascript/jscomp/FoldConstants.java,src/com/google/javascript/jscomp/FoldConstants.java,1451,ompiler.reportCodeChange();
True,src/com/google/javascript/jscomp/FunctionInjector.java,src/com/google/javascript/jscomp/FunctionInjector.java,22,import com.google.javascript.jscomp.MakeDeclaredNamesUnique.ContextualRenamer;
False,src/com/google/javascript/jscomp/FunctionInjector.java,src/com/google/javascript/jscomp/FunctionInjector.java,691,"eturn ""JSCompiler_inline_result_"" + safeNameIdSupplier.get();"
True,src/com/google/javascript/jscomp/FunctionInjector.java,src/com/google/javascript/jscomp/FunctionInjector.java,692,"return ""JSCompiler_inline_result"""
True,src/com/google/javascript/jscomp/FunctionInjector.java,src/com/google/javascript/jscomp/FunctionInjector.java,693,+ ContextualRenamer.UNIQUE_ID_SEPARATOR + safeNameIdSupplier.get();
False,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,283," Rename vars for the current scope, and merge any referenced"
True,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,283,"* Rename vars for the current scope, and merge any referenced"
False,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,315,f (containsSeparator(name)) {
False,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,316,tring newName = getOrginalName(name);
False,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,317,/ Check if the new name is valid and if it would cause conflicts.
False,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,318,f (TokenStream.isJSIdentifier(newName) &&
False,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,319,referencedNames.contains(newName) &&
False,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,320,newName.equals(ARGUMENTS)) {
False,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,321,eferencedNames.remove(name);
False,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,322,/ Adding a reference to the new name to prevent either the parent
False,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,323,/ scopes or the current scope renaming another var to this new name.
False,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,324,eferencedNames.add(newName);
False,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,325,ist<Node> references = nameMap.get(name);
False,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,326,reconditions.checkState(references != null);
False,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,327,or (Node n : references) {
False,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,328,reconditions.checkState(n.getType() == Token.NAME);
False,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,329,.setString(newName);
False,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,331,ompiler.reportCodeChange();
True,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,315,if (containsSeparator(name) && !getOrginalName(name).isEmpty()) {
True,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,316,String newName = findReplacementName(name);
True,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,317,referencedNames.remove(name);
True,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,318,// Adding a reference to the new name to prevent either the parent
True,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,319,// scopes or the current scope renaming another var to this new name.
True,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,320,referencedNames.add(newName);
True,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,321,List<Node> references = nameMap.get(name);
True,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,322,Preconditions.checkState(references != null);
True,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,323,for (Node n : references) {
True,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,324,Preconditions.checkState(n.getType() == Token.NAME);
True,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,325,n.setString(newName);
True,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,327,compiler.reportCodeChange();
True,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,333,* Find a name usable in the local scope.
True,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,335,private String findReplacementName(String name) {
True,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,336,String original = getOrginalName(name);
True,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,337,String newName = original;
True,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,338,int i = 0;
True,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,339,while (!isValidName(newName)) {
True,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,340,newName = original +
True,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,341,ContextualRenamer.UNIQUE_ID_SEPARATOR + String.valueOf(i++);
True,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,343,return newName;
True,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,347,* @return Whether the name is valid to use in the local scope.
True,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,349,private boolean isValidName(String name) {
True,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,350,if (TokenStream.isJSIdentifier(name) &&
True,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,351,!referencedNames.contains(name) &&
True,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,352,!name.equals(ARGUMENTS)) {
True,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,353,return true;
True,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java,355,return false;
False,src/com/google/javascript/jscomp/MethodCompilerPass.java,src/com/google/javascript/jscomp/MethodCompilerPass.java,19,mport com.google.common.collect.HashMultimap;
True,src/com/google/javascript/jscomp/MethodCompilerPass.java,src/com/google/javascript/jscomp/MethodCompilerPass.java,19,import com.google.common.collect.LinkedHashMultimap;
True,src/com/google/javascript/jscomp/MethodCompilerPass.java,src/com/google/javascript/jscomp/MethodCompilerPass.java,48,"// Use a linked map here to keep the output deterministic.  Otherwise,"
True,src/com/google/javascript/jscomp/MethodCompilerPass.java,src/com/google/javascript/jscomp/MethodCompilerPass.java,49,// the choice of method bodies is random when multiple identical definitions
True,src/com/google/javascript/jscomp/MethodCompilerPass.java,src/com/google/javascript/jscomp/MethodCompilerPass.java,50,// are found which causes problems in the source maps.
False,src/com/google/javascript/jscomp/MethodCompilerPass.java,src/com/google/javascript/jscomp/MethodCompilerPass.java,49,ashMultimap.create();
True,src/com/google/javascript/jscomp/MethodCompilerPass.java,src/com/google/javascript/jscomp/MethodCompilerPass.java,52,LinkedHashMultimap.create();
False,src/com/google/javascript/jscomp/MinimizeExitPoints.java,src/com/google/javascript/jscomp/MinimizeExitPoints.java,23,mport com.google.javascript.jscomp.NodeUtil;
True,src/com/google/javascript/jscomp/MinimizeExitPoints.java,src/com/google/javascript/jscomp/MinimizeExitPoints.java,24,import com.google.javascript.jscomp.NodeUtil;
True,src/com/google/javascript/jscomp/MinimizeExitPoints.java,src/com/google/javascript/jscomp/MinimizeExitPoints.java,27,import com.google.javascript.rhino.jstype.TernaryValue;
False,src/com/google/javascript/jscomp/MinimizeExitPoints.java,src/com/google/javascript/jscomp/MinimizeExitPoints.java,68,f (NodeUtil.isLiteralValue(cond) && !NodeUtil.getBooleanValue(cond)) {
True,src/com/google/javascript/jscomp/MinimizeExitPoints.java,src/com/google/javascript/jscomp/MinimizeExitPoints.java,69,if (NodeUtil.getBooleanValue(cond) == TernaryValue.FALSE) {
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,28,import com.google.javascript.rhino.jstype.TernaryValue;
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,69,tatic boolean getBooleanValue(Node n) {
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,70,static TernaryValue getBooleanValue(Node n) {
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,72,eturn n.getString().length() > 0;
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,73,return TernaryValue.forBoolean(n.getString().length() > 0);
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,75,eturn n.getDouble() != 0;
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,76,return TernaryValue.forBoolean(n.getDouble() != 0);
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,80,eturn false;
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,81,return TernaryValue.FALSE;
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,88,eturn false;
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,89,return TernaryValue.FALSE;
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,90,eturn true;
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,91,return TernaryValue.TRUE;
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,98,eturn true;
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,99,return TernaryValue.TRUE;
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,100,"hrow new IllegalArgumentException(""Non-literal value: "" + n);"
True,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,102,return TernaryValue.UNKNOWN;
True,src/com/google/javascript/jscomp/PeepholeOptimizationsPass.java,src/com/google/javascript/jscomp/PeepholeOptimizationsPass.java,42,* Creates a peephole optimization pass that runs the given
True,src/com/google/javascript/jscomp/PeepholeOptimizationsPass.java,src/com/google/javascript/jscomp/PeepholeOptimizationsPass.java,43,* optimizations.
True,src/com/google/javascript/jscomp/PeepholeOptimizationsPass.java,src/com/google/javascript/jscomp/PeepholeOptimizationsPass.java,45,"PeepholeOptimizationsPass(AbstractCompiler compiler,"
True,src/com/google/javascript/jscomp/PeepholeOptimizationsPass.java,src/com/google/javascript/jscomp/PeepholeOptimizationsPass.java,46,AbstractPeepholeOptimization... optimizations) {
True,src/com/google/javascript/jscomp/PeepholeOptimizationsPass.java,src/com/google/javascript/jscomp/PeepholeOptimizationsPass.java,47,"this(compiler, ImmutableSet.copyOf(optimizations));"
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,2,* Copyright 2004 Google Inc.
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,5,* you may not use this file except in compliance with the License.
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,6,* You may obtain a copy of the License at
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,13,* See the License for the specific language governing permissions and
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,14,* limitations under the License.
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,17,package com.google.javascript.jscomp;
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,19,import com.google.common.base.Preconditions;
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,20,import com.google.common.base.Predicates;
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,21,import com.google.javascript.rhino.Node;
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,22,import com.google.javascript.rhino.Token;
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,23,import com.google.javascript.rhino.jstype.TernaryValue;
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,26,* Peephole optimization to remove useless code such as IF's with false
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,27,"* guard conditions, comma operator left hand sides with no side effects, etc."
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,32,public class PeepholeRemoveDeadCode extends AbstractPeepholeOptimization {
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,34,// TODO(dcc): Some (all) of these can probably be better achieved
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,35,// using the control flow graph (like CheckUnreachableCode).
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,36,// There is an existing CFG pass (UnreachableCodeElimination) that
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,37,// could be changed to use code from CheckUnreachableCode to do this.
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,39,@Override
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,40,Node optimizeSubtree(Node subtree) {
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,41,switch(subtree.getType()) {
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,42,case Token.COMMA:
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,43,return tryFoldComma(subtree);
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,44,case Token.BLOCK:
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,45,return tryFoldBlock(subtree);
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,46,case Token.IF:
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,47,case Token.HOOK:
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,48,return tryFoldHookIf(subtree);
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,49,case Token.WHILE:
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,50,return tryFoldWhile(subtree);
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,51,case Token.FOR: {
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,52,Node condition = NodeUtil.getConditionExpression(subtree);
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,53,if (condition != null) {
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,54,tryFoldForCondition(condition);
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,57,return tryFoldFor(subtree);
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,58,case Token.DO:
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,59,return tryFoldDo(subtree);
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,60,default:
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,61,return subtree;
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,65,private Node tryFoldComma(Node n) {
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,66,// If the left side does nothing replace the comma with the result.
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,68,Node parent = n.getParent();
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,69,Node left = n.getFirstChild();
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,70,Node right = left.getNext();
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,72,if (!NodeUtil.mayHaveSideEffects(left)) {
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,73,// Fold it!
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,74,n.removeChild(right);
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,75,"parent.replaceChild(n, right);"
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,76,reportCodeChange();
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,77,return right;
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,78,} else {
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,79,if (parent.getType() == Token.EXPR_RESULT) {
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,80,// split comma
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,81,n.detachChildren();
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,82,// Replace the original expression with the left operand.
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,83,"parent.replaceChild(n, left);"
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,84,// Add the right expression afterward.
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,85,"Node newStatement = new Node(Token.EXPR_RESULT, right);"
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,86,newStatement.copyInformationFrom(n);
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,88,"//This modifies outside the subtree, which is not"
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,89,//desirable in a peephole optimization.
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,90,"parent.getParent().addChildAfter(newStatement, parent);"
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,91,reportCodeChange();
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,92,return left;
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,96,return n;
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,100,* Try removing unneeded block nodes and their useless children
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,102,Node tryFoldBlock(Node n) {
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,103,// TODO(dcc): Make sure this is also applied in the global scope
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,104,// (i.e. with Token.SCRIPT) parents
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,105,// Remove any useless children
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,106,for (Node c = n.getFirstChild(); c != null; ) {
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,107,"Node next = c.getNext();  // save c.next, since 'c' may be removed"
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,108,if (!NodeUtil.mayHaveSideEffects(c)) {
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,109,n.removeChild(c);  // lazy kids
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,110,reportCodeChange();
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,112,c = next;
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,115,if (n.isSyntheticBlock() ||  n.getParent() == null) {
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,116,return n;
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,119,// Try to remove the block.
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,120,if (NodeUtil.tryMergeBlock(n)) {
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,121,reportCodeChange();
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,122,return null;
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,125,return n;
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,129,* Try folding :? (hook) and IF nodes by removing dead branches.
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,130,"* @return the replacement node, if changed, or the original if not"
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,132,private Node tryFoldHookIf(Node n) {
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,133,Node parent = n.getParent();
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,134,int type = n.getType();
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,135,Node cond = n.getFirstChild();
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,136,Node thenBody = cond.getNext();
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,137,Node elseBody = thenBody.getNext();
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,139,boolean changes = false;
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,141,if (type == Token.IF) {
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,142,// if (x) { .. } else { } --> if (x) { ... }
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,143,if (elseBody != null && !NodeUtil.mayHaveSideEffects(elseBody)) {
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,144,n.removeChild(elseBody);
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,145,elseBody = null;
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,146,reportCodeChange();
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,147,changes = true;
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,150,// if (x) { } else { ... } --> if (!x) { ... }
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,151,if (!NodeUtil.mayHaveSideEffects(thenBody) && elseBody != null) {
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,152,n.removeChild(elseBody);
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,153,"n.replaceChild(thenBody, elseBody);"
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,154,Node notCond = new Node(Token.NOT);
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,155,"n.replaceChild(cond, notCond);"
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,156,notCond.addChildToFront(cond);
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,157,cond = notCond;
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,158,thenBody = cond.getNext();
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,159,elseBody = null;
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,160,reportCodeChange();
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,161,changes = true;
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,164,// if (x()) { }
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,165,if (!NodeUtil.mayHaveSideEffects(thenBody) && elseBody == null) {
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,166,if (NodeUtil.mayHaveSideEffects(cond)) {
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,167,"// x() has side effects, just leave the condition on its own."
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,168,n.removeChild(cond);
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,169,Node replacement = NodeUtil.newExpr(cond);
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,170,"parent.replaceChild(n, replacement);"
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,171,reportCodeChange();
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,172,return replacement;
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,173,} else {
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,174,"// x() has no side effects, the whole tree is useless now."
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,175,"NodeUtil.removeChild(parent, n);"
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,176,reportCodeChange();
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,177,return null;
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,180,} else {
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,181,Preconditions.checkState(type == Token.HOOK);
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,182,if (NodeUtil.isExpressionNode(parent)) {
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,183,// Try to remove useless nodes.
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,184,if (!NodeUtil.mayHaveSideEffects(thenBody)) {
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,185,// x?void 0:y --> if(!x)y
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,186,Node ifNode = new Node(Token.IF);
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,187,if (cond.getType() == Token.NOT) {
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,188,Node expr = cond.getFirstChild();
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,189,cond.removeChild(expr);
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,190,ifNode.addChildToBack(expr);
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,191,} else {
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,192,Node not = new Node(Token.NOT).copyInformationFrom(cond);
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,193,n.removeChild(cond);
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,194,not.addChildToBack(cond);
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,195,ifNode.addChildToBack(not);
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,198,n.removeChild(elseBody);
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,199,ifNode.addChildToBack(
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,200,"new Node(Token.BLOCK, NodeUtil.newExpr(elseBody))"
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,201,.copyInformationFrom(elseBody));
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,203,"//This modifies outside the subtree, which is not"
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,204,//desirable in a peephole optimization.
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,205,"parent.getParent().replaceChild(parent, ifNode);"
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,206,reportCodeChange();
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,207,return ifNode;
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,208,} else if (!NodeUtil.mayHaveSideEffects(elseBody)) {
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,209,// x?y:void 0 --> if(x)y
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,210,Node ifNode = new Node(Token.IF);
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,211,n.removeChild(cond);
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,212,ifNode.addChildToBack(cond);
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,213,n.removeChild(thenBody);
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,215,ifNode.addChildToBack(
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,216,"new Node(Token.BLOCK, NodeUtil.newExpr(thenBody))"
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,217,.copyInformationFrom(thenBody));
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,219,"//This modifies outside the subtree, which is not"
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,220,//desirable in a peephole optimization.
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,221,"parent.getParent().replaceChild(parent, ifNode);"
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,222,reportCodeChange();
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,223,return ifNode;
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,228,// Try transforms that apply to both IF and HOOK.
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,229,if (!NodeUtil.isLiteralValue(cond)) {
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,230,return n;  // We can't remove branches otherwise!
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,233,TernaryValue condValue = NodeUtil.getBooleanValue(cond);
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,234,if (condValue == TernaryValue.UNKNOWN) {
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,235,return n;  // We can't remove branches otherwise!
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,238,boolean condTrue = condValue.toBoolean(true);
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,239,if (n.getChildCount() == 2) {
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,240,Preconditions.checkState(type == Token.IF);
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,242,if (condTrue) {
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,243,"// Replace ""if (true) { X }"" with ""X""."
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,244,Node thenStmt = n.getFirstChild().getNext();
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,245,n.removeChild(thenStmt);
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,246,"parent.replaceChild(n, thenStmt);"
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,247,reportCodeChange();
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,248,return thenStmt;
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,249,} else {
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,250,"// Replace ""if (false) { X }"" with empty node."
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,251,NodeUtil.redeclareVarsInsideBranch(n);
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,252,"NodeUtil.removeChild(parent, n);"
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,253,reportCodeChange();
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,254,return null;
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,256,} else {
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,257,"// Replace ""if (true) { X } else { Y }"" with X, or"
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,258,"// replace ""if (false) { X } else { Y }"" with Y."
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,259,Node firstBranch = n.getFirstChild().getNext();
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,260,Node secondBranch = firstBranch.getNext();
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,261,Node branch = condTrue ? firstBranch : secondBranch;
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,262,Node notBranch = condTrue ? secondBranch : firstBranch;
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,263,NodeUtil.redeclareVarsInsideBranch(notBranch);
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,264,n.removeChild(branch);
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,265,"parent.replaceChild(n, branch);"
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,266,reportCodeChange();
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,267,return branch;
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,272,* Removes WHILEs that always evaluate to false.
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,274,Node tryFoldWhile(Node n) {
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,275,Preconditions.checkArgument(n.getType() == Token.WHILE);
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,276,Node cond = NodeUtil.getConditionExpression(n);
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,277,if (NodeUtil.getBooleanValue(cond) != TernaryValue.FALSE) {
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,278,return n;
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,280,NodeUtil.redeclareVarsInsideBranch(n);
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,281,"NodeUtil.removeChild(n.getParent(), n);"
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,282,reportCodeChange();
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,284,return null;
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,288,* Removes FORs that always evaluate to false.
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,290,Node tryFoldFor(Node n) {
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,291,Preconditions.checkArgument(n.getType() == Token.FOR);
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,292,// This is not a FOR-IN loop
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,293,if (n.getChildCount() != 4) {
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,294,return n;
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,296,// There isn't an initializer
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,297,if (n.getFirstChild().getType() != Token.EMPTY) {
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,298,return n;
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,301,Node cond = NodeUtil.getConditionExpression(n);
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,302,if (NodeUtil.getBooleanValue(cond) != TernaryValue.FALSE) {
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,303,return n;
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,306,NodeUtil.redeclareVarsInsideBranch(n);
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,307,"NodeUtil.removeChild(n.getParent(), n);"
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,308,reportCodeChange();
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,309,return null;
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,313,* Removes DOs that always evaluate to false. This leaves the
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,314,* statements that were in the loop in a BLOCK node.
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,315,"* The block will be removed in a later pass, if possible."
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,317,Node tryFoldDo(Node n) {
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,318,Preconditions.checkArgument(n.getType() == Token.DO);
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,320,Node cond = NodeUtil.getConditionExpression(n);
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,321,if (NodeUtil.getBooleanValue(cond) != TernaryValue.FALSE) {
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,322,return n;
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,325,// TODO(johnlenz): The do-while can be turned into a label with
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,326,// named breaks and the label optimized away (maybe).
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,327,if (hasBreakOrContinue(n)) {
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,328,return n;
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,331,Preconditions.checkState(
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,332,"NodeUtil.isControlStructureCodeBlock(n, n.getFirstChild()));"
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,333,Node block = n.removeFirstChild();
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,335,"n.getParent().replaceChild(n, block);"
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,336,reportCodeChange();
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,338,return n;
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,344,boolean hasBreakOrContinue(Node n) {
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,345,// TODO(johnlenz): This is overkill as named breaks may refer to outer
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,346,"// loops or labels, and any break my refer to an inner loop."
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,347,"// More generally, this check may be more expensive than we like."
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,348,return NodeUtil.has(
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,349,"n,"
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,350,Predicates.<Node>or(
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,351,"new NodeUtil.MatchNodeType(Token.BREAK),"
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,352,"new NodeUtil.MatchNodeType(Token.CONTINUE)),"
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,353,new NodeUtil.MatchNotFunction());
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,357,* Remove always true loop conditions.
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,359,private void tryFoldForCondition(Node forCondition) {
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,360,if (NodeUtil.getBooleanValue(forCondition) == TernaryValue.TRUE) {
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,361,"forCondition.getParent().replaceChild(forCondition,"
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,362,new Node(Token.EMPTY));
True,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java,363,reportCodeChange();
True,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,23,import com.google.javascript.rhino.jstype.TernaryValue;
True,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,178,"/* If the condition is a literal, we'll let other"
True,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,179,* optimizations try to remove useless code.
True,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,181,if (NodeUtil.isLiteralValue(cond)) {
True,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,182,return n;
False,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,615,/ if(true) --> if(1)
False,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,616,f (NodeUtil.isLiteralValue(n)) {
False,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,617,oolean result = NodeUtil.getBooleanValue(n);
True,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,624,// while(true) --> while(1)
True,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,625,TernaryValue nVal = NodeUtil.getBooleanValue(n);
True,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,626,if (nVal != TernaryValue.UNKNOWN) {
True,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java,627,boolean result = nVal.toBoolean(true);
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,214,} else if (NodeUtil.isFunctionExpression(name)) {
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,215,// The anonymous function reference is also the definition.
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,216,return Lists.newArrayList(
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,217,(Definition)
True,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,src/com/google/javascript/jscomp/PureFunctionIdentifier.java,218,new DefinitionsRemover.FunctionExpressionDefinition(name));
False,src/com/google/javascript/jscomp/TypedCodeGenerator.java,src/com/google/javascript/jscomp/TypedCodeGenerator.java,107,"b.append("" * @param {"" + n.getJSType() + ""} "");"
True,src/com/google/javascript/jscomp/TypedCodeGenerator.java,src/com/google/javascript/jscomp/TypedCodeGenerator.java,107,"sb.append("" * @param {"" + getParameterNodeJSDocType(n) + ""} "");"
True,src/com/google/javascript/jscomp/TypedCodeGenerator.java,src/com/google/javascript/jscomp/TypedCodeGenerator.java,158,* Creates a JSDoc-suitable String representation the type of a parameter.
True,src/com/google/javascript/jscomp/TypedCodeGenerator.java,src/com/google/javascript/jscomp/TypedCodeGenerator.java,160,* @param parameterNode The parameter node.
True,src/com/google/javascript/jscomp/TypedCodeGenerator.java,src/com/google/javascript/jscomp/TypedCodeGenerator.java,162,private String getParameterNodeJSDocType(Node parameterNode) {
True,src/com/google/javascript/jscomp/TypedCodeGenerator.java,src/com/google/javascript/jscomp/TypedCodeGenerator.java,163,JSType parameterType = parameterNode.getJSType();
True,src/com/google/javascript/jscomp/TypedCodeGenerator.java,src/com/google/javascript/jscomp/TypedCodeGenerator.java,164,String typeString;
True,src/com/google/javascript/jscomp/TypedCodeGenerator.java,src/com/google/javascript/jscomp/TypedCodeGenerator.java,166,// Emit unknown types as '*' (AllType) since '?' (UnknownType) is not
True,src/com/google/javascript/jscomp/TypedCodeGenerator.java,src/com/google/javascript/jscomp/TypedCodeGenerator.java,167,// a valid JSDoc type.
True,src/com/google/javascript/jscomp/TypedCodeGenerator.java,src/com/google/javascript/jscomp/TypedCodeGenerator.java,168,if (parameterType.isUnknownType()) {
True,src/com/google/javascript/jscomp/TypedCodeGenerator.java,src/com/google/javascript/jscomp/TypedCodeGenerator.java,169,"typeString = ""*"";"
True,src/com/google/javascript/jscomp/TypedCodeGenerator.java,src/com/google/javascript/jscomp/TypedCodeGenerator.java,170,} else {
True,src/com/google/javascript/jscomp/TypedCodeGenerator.java,src/com/google/javascript/jscomp/TypedCodeGenerator.java,171,// Fix-up optional and vararg parameters to match JSDoc type language
True,src/com/google/javascript/jscomp/TypedCodeGenerator.java,src/com/google/javascript/jscomp/TypedCodeGenerator.java,172,if (parameterNode.isOptionalArg()) {
True,src/com/google/javascript/jscomp/TypedCodeGenerator.java,src/com/google/javascript/jscomp/TypedCodeGenerator.java,173,"typeString = parameterType.restrictByNotNullOrUndefined() + ""="";"
True,src/com/google/javascript/jscomp/TypedCodeGenerator.java,src/com/google/javascript/jscomp/TypedCodeGenerator.java,174,} else if (parameterNode.isVarArgs()) {
True,src/com/google/javascript/jscomp/TypedCodeGenerator.java,src/com/google/javascript/jscomp/TypedCodeGenerator.java,175,"typeString = ""..."" + parameterType.restrictByNotNullOrUndefined();"
True,src/com/google/javascript/jscomp/TypedCodeGenerator.java,src/com/google/javascript/jscomp/TypedCodeGenerator.java,176,} else {
True,src/com/google/javascript/jscomp/TypedCodeGenerator.java,src/com/google/javascript/jscomp/TypedCodeGenerator.java,177,typeString = parameterType.toString();
True,src/com/google/javascript/jscomp/TypedCodeGenerator.java,src/com/google/javascript/jscomp/TypedCodeGenerator.java,181,return typeString;
True,src/com/google/javascript/jscomp/UnreachableCodeElimination.java,src/com/google/javascript/jscomp/UnreachableCodeElimination.java,97,// TODO(dcc): Move the parts of this that don't require a control flow
True,src/com/google/javascript/jscomp/UnreachableCodeElimination.java,src/com/google/javascript/jscomp/UnreachableCodeElimination.java,98,// graph to PeepholeRemoveDeadCode
True,src/com/google/javascript/jscomp/parsing/Annotation.java,src/com/google/javascript/jscomp/parsing/Annotation.java,47,"NO_COMPILE,"
True,src/com/google/javascript/jscomp/parsing/Annotation.java,src/com/google/javascript/jscomp/parsing/Annotation.java,93,"put(""nocompile"", Annotation.NO_COMPILE)."
True,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,405,case NO_COMPILE:
True,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,406,if (!jsdocBuilder.recordNoCompile()) {
True,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,407,"parser.addWarning(""msg.jsdoc.nocompile"","
True,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,408,"stream.getLineno(), stream.getCharno());"
True,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,410,token = eatTokensUntilEOL();
True,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java,411,continue retry;
True,src/com/google/javascript/rhino/JSDocInfo.java,src/com/google/javascript/rhino/JSDocInfo.java,218,private static final int MASK_NOCOMPILE     = 0x00020000; // @nocompile
True,src/com/google/javascript/rhino/JSDocInfo.java,src/com/google/javascript/rhino/JSDocInfo.java,304,void setNoCompile(boolean value) {
True,src/com/google/javascript/rhino/JSDocInfo.java,src/com/google/javascript/rhino/JSDocInfo.java,305,"setFlag(value, MASK_NOCOMPILE);"
True,src/com/google/javascript/rhino/JSDocInfo.java,src/com/google/javascript/rhino/JSDocInfo.java,446,* Returns whether the {@code @nocompile} annotation is present on this
True,src/com/google/javascript/rhino/JSDocInfo.java,src/com/google/javascript/rhino/JSDocInfo.java,447,* {@link JSDocInfo}.
True,src/com/google/javascript/rhino/JSDocInfo.java,src/com/google/javascript/rhino/JSDocInfo.java,449,public boolean isNoCompile() {
True,src/com/google/javascript/rhino/JSDocInfo.java,src/com/google/javascript/rhino/JSDocInfo.java,450,return getFlag(MASK_NOCOMPILE);
False,src/com/google/javascript/rhino/JSDocInfoBuilder.java,src/com/google/javascript/rhino/JSDocInfoBuilder.java,88,currentInfo.hasFileOverview() || currentInfo.isExterns());
True,src/com/google/javascript/rhino/JSDocInfoBuilder.java,src/com/google/javascript/rhino/JSDocInfoBuilder.java,88,(currentInfo.hasFileOverview() || currentInfo.isExterns() ||
True,src/com/google/javascript/rhino/JSDocInfoBuilder.java,src/com/google/javascript/rhino/JSDocInfoBuilder.java,89,currentInfo.isNoCompile());
True,src/com/google/javascript/rhino/JSDocInfoBuilder.java,src/com/google/javascript/rhino/JSDocInfoBuilder.java,544,* Records that the {@link JSDocInfo} being built should have its
True,src/com/google/javascript/rhino/JSDocInfoBuilder.java,src/com/google/javascript/rhino/JSDocInfoBuilder.java,545,* {@link JSDocInfo#isNoCompilek()} flag set to {@code true}.
True,src/com/google/javascript/rhino/JSDocInfoBuilder.java,src/com/google/javascript/rhino/JSDocInfoBuilder.java,547,* @return {@code true} if the no compile flag was recorded and {@code false}
True,src/com/google/javascript/rhino/JSDocInfoBuilder.java,src/com/google/javascript/rhino/JSDocInfoBuilder.java,548,*     if it was already recorded
True,src/com/google/javascript/rhino/JSDocInfoBuilder.java,src/com/google/javascript/rhino/JSDocInfoBuilder.java,550,public boolean recordNoCompile() {
True,src/com/google/javascript/rhino/JSDocInfoBuilder.java,src/com/google/javascript/rhino/JSDocInfoBuilder.java,551,if (!currentInfo.isNoCompile()) {
True,src/com/google/javascript/rhino/JSDocInfoBuilder.java,src/com/google/javascript/rhino/JSDocInfoBuilder.java,552,currentInfo.setNoCompile(true);
True,src/com/google/javascript/rhino/JSDocInfoBuilder.java,src/com/google/javascript/rhino/JSDocInfoBuilder.java,553,populated = true;
True,src/com/google/javascript/rhino/JSDocInfoBuilder.java,src/com/google/javascript/rhino/JSDocInfoBuilder.java,554,return true;
True,src/com/google/javascript/rhino/JSDocInfoBuilder.java,src/com/google/javascript/rhino/JSDocInfoBuilder.java,555,} else {
True,src/com/google/javascript/rhino/JSDocInfoBuilder.java,src/com/google/javascript/rhino/JSDocInfoBuilder.java,556,return false;
True,src/com/google/javascript/rhino/jstype/TernaryValue.java,src/com/google/javascript/rhino/jstype/TernaryValue.java,200,* Gets the TernaryValue for the given boolean.
True,src/com/google/javascript/rhino/jstype/TernaryValue.java,src/com/google/javascript/rhino/jstype/TernaryValue.java,202,public static TernaryValue forBoolean(boolean val) {
True,src/com/google/javascript/rhino/jstype/TernaryValue.java,src/com/google/javascript/rhino/jstype/TernaryValue.java,203,return val ? TernaryValue.TRUE : TernaryValue.FALSE;
False,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,19,mport com.google.common.collect.ImmutableList;
False,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,25,mport java.util.List;
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,289,public void testHook() {
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,290,"assertPrint(""a ? b = 1 : c = 2"", ""a?b=1:c=2"");"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,291,"assertPrint(""x = a ? b = 1 : c = 2"", ""x=a?b=1:c=2"");"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,292,"assertPrint(""(x = a) ? b = 1 : c = 2"", ""(x=a)?b=1:c=2"");"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,294,"assertPrint(""x, a ? b = 1 : c = 2"", ""x,a?b=1:c=2"");"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,295,"assertPrint(""x, (a ? b = 1 : c = 2)"", ""x,a?b=1:c=2"");"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,296,"assertPrint(""(x, a) ? b = 1 : c = 2"", ""(x,a)?b=1:c=2"");"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,298,"assertPrint(""a ? (x, b) : c = 2"", ""a?(x,b):c=2"");"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,299,"assertPrint(""a ? b = 1 : (x,c)"", ""a?b=1:(x,c)"");"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,301,"assertPrint(""a ? b = 1 : c = 2 + x"", ""a?b=1:c=2+x"");"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,302,"assertPrint(""(a ? b = 1 : c = 2) + x"", ""(a?b=1:c=2)+x"");"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,303,"assertPrint(""a ? b = 1 : (c = 2) + x"", ""a?b=1:(c=2)+x"");"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,305,"assertPrint(""a ? (b?1:2) : 3"", ""a?b?1:2:3"");"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,341,parse(expected); // validate the expected string is valid js
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,723,public void testEmitUnknownParamTypesAsAllType() {
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,724,assertTypeAnnotations(
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,725,"""var a = function(x) {}"","
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,726,"""/**\n"" +"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,727,""" * @param {*} x\n"" +"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,728,""" */\n"" +"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,729,"""var a = function(x) {\n}"");"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,732,public void testOptionalTypesAnnotation() {
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,733,assertTypeAnnotations(
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,734,"""/**\n"" +"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,735,""" * @param {string=} x \n"" +"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,736,""" */\n"" +"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,737,"""var a = function(x) {}"","
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,738,"""/**\n"" +"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,739,""" * @param {string=} x\n"" +"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,740,""" */\n"" +"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,741,"""var a = function(x) {\n}"");"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,744,public void testVariableArgumentsTypesAnnotation() {
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,745,assertTypeAnnotations(
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,746,"""/**\n"" +"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,747,""" * @param {...string} x \n"" +"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,748,""" */\n"" +"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,749,"""var a = function(x) {}"","
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,750,"""/**\n"" +"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,751,""" * @param {...string} x\n"" +"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,752,""" */\n"" +"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,753,"""var a = function(x) {\n}"");"
False,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,792,ist<String> parsePrintParseTestCases = ImmutableList.of(
False,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,793,"3;"","
False,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,794,"var a = b;"","
False,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,795,"var x, y, z;"","
False,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,796,"try { foo() } catch(e) { bar() }"","
False,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,797,"try { foo() } catch(e) { bar() } finally { stuff() }"","
False,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,798,"try { foo() } finally { stuff() }"","
False,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,799,"throw 'me'"","
False,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,800,"function foo(a) { return a + 4; }"","
False,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,801,"function foo() { return; }"","
False,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,802,"var a = function(a, b) { foo(); return a + b; }"","
False,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,803,"b = [3, 4, 'paul', \""Buchhe it\"",,5];"","
False,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,804,"v = (5, 6, 7, 8)"","
False,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,805,"d = 34.0; x = 0; y = .3; z = -22"","
False,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,806,"d = -x; t = !x + ~y;"","
False,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,807,"'hi'; /* just a test */ stuff(a,b) \n foo(); // and another \n bar();"","
False,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,808,"a = b++ + ++c; a = b++-++c; a = - --b; a = - ++b;"","
False,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,809,"a++; b= a++; b = ++a; b = a--; b = --a; a+=2; b-=5"","
False,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,810,"a = (2 + 3) * 4;"","
False,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,811,"a = 1 + (2 + 3) + 4;"","
False,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,812,"x = a ? b : c; x = a ? (b,3,5) : (foo(),bar());"","
False,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,813,"a = b | c || d ^ e && f & !g != h << i <= j < k >>> l > m * n % !o"","
False,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,814,"a == b; a != b; a === b; a == b == a; (a == b) == a; a == (b == a);"","
False,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,815,"if (a > b) a = b; if (b < 3) a = 3; else c = 4;"","
False,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,816,"if (a == b) { a++; } if (a == 0) { a++; } else { a --; }"","
False,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,817,"for (var i in a) b += i;"","
False,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,818,"for (var i = 0; i < 10; i++){ b /= 2; if (b == 2)break;else continue;}"","
False,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,819,"for (x = 0; x < 10; x++) a /= 2;"","
False,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,820,"for (;;) a++;"","
False,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,821,"while(true) { blah(); }while(true) blah();"","
False,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,822,"do stuff(); while(a>b);"","
False,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,823,"[0, null, , true, false, this];"","
False,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,824,"s.replace(/absc/, 'X').replace(/ab/gi, 'Y');"","
False,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,825,"new Foo; new Bar(a, b,c);"","
False,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,826,"with(foo()) { x = z; y = t; } with(bar()) a = z;"","
False,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,827,"delete foo['bar']; delete foo;"","
False,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,828,"var x = { 'a':'paul', 1:'3', 2:(3,4) };"","
False,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,829,"switch(a) { case 2: case 3: { stuff(); break; }"" +"
False,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,830,"case 4: morestuff(); break; default: done();}"","
False,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,831,"x = foo['bar'] + foo['my stuff'] + foo[bar] + f.stuff;"","
False,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,832,"a.v = b.v; x['foo'] = y['zoo'];"","
False,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,833,"'test' in x; 3 in x; a in x;"","
False,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,834,"'foo\""bar' + \""foo'c\"" + 'stuff\\n and \\\\more'"","
False,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,835,"x.__proto__;"");"
False,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,837,or (String testCase : parsePrintParseTestCases) {
False,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,838,ode parse1 = parse(testCase);
False,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,839,ode parse2 = parse(new CodePrinter.Builder(parse1).build());
False,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,840,"ssertTrue(testCase, parse1.checkTreeEqualsSilent(parse2));"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,842,"testReparse(""3;"");"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,843,"testReparse(""var a = b;"");"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,844,"testReparse(""var x, y, z;"");"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,845,"testReparse(""try { foo() } catch(e) { bar() }"");"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,846,"testReparse(""try { foo() } catch(e) { bar() } finally { stuff() }"");"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,847,"testReparse(""try { foo() } finally { stuff() }"");"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,848,"testReparse(""throw 'me'"");"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,849,"testReparse(""function foo(a) { return a + 4; }"");"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,850,"testReparse(""function foo() { return; }"");"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,851,"testReparse(""var a = function(a, b) { foo(); return a + b; }"");"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,852,"testReparse(""b = [3, 4, 'paul', \""Buchhe it\"",,5];"");"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,853,"testReparse(""v = (5, 6, 7, 8)"");"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,854,"testReparse(""d = 34.0; x = 0; y = .3; z = -22"");"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,855,"testReparse(""d = -x; t = !x + ~y;"");"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,856,"testReparse(""'hi'; /* just a test */ stuff(a,b) \n foo(); // and another \n bar();"");"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,857,"testReparse(""a = b++ + ++c; a = b++-++c; a = - --b; a = - ++b;"");"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,858,"testReparse(""a++; b= a++; b = ++a; b = a--; b = --a; a+=2; b-=5"");"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,859,"testReparse(""a = (2 + 3) * 4;"");"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,860,"testReparse(""a = 1 + (2 + 3) + 4;"");"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,861,"testReparse(""x = a ? b : c; x = a ? (b,3,5) : (foo(),bar());"");"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,862,"testReparse(""a = b | c || d ^ e && f & !g != h << i <= j < k >>> l > m * n % !o"");"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,863,"testReparse(""a == b; a != b; a === b; a == b == a; (a == b) == a; a == (b == a);"");"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,864,"testReparse(""if (a > b) a = b; if (b < 3) a = 3; else c = 4;"");"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,865,"testReparse(""if (a == b) { a++; } if (a == 0) { a++; } else { a --; }"");"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,866,"testReparse(""for (var i in a) b += i;"");"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,867,"testReparse(""for (var i = 0; i < 10; i++){ b /= 2; if (b == 2)break;else continue;}"");"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,868,"testReparse(""for (x = 0; x < 10; x++) a /= 2;"");"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,869,"testReparse(""for (;;) a++;"");"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,870,"testReparse(""while(true) { blah(); }while(true) blah();"");"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,871,"testReparse(""do stuff(); while(a>b);"");"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,872,"testReparse(""[0, null, , true, false, this];"");"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,873,"testReparse(""s.replace(/absc/, 'X').replace(/ab/gi, 'Y');"");"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,874,"testReparse(""new Foo; new Bar(a, b,c);"");"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,875,"testReparse(""with(foo()) { x = z; y = t; } with(bar()) a = z;"");"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,876,"testReparse(""delete foo['bar']; delete foo;"");"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,877,"testReparse(""var x = { 'a':'paul', 1:'3', 2:(3,4) };"");"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,878,"testReparse(""switch(a) { case 2: case 3: { stuff(); break; }"" +"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,879,"""case 4: morestuff(); break; default: done();}"");"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,880,"testReparse(""x = foo['bar'] + foo['my stuff'] + foo[bar] + f.stuff;"");"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,881,"testReparse(""a.v = b.v; x['foo'] = y['zoo'];"");"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,882,"testReparse(""'test' in x; 3 in x; a in x;"");"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,883,"testReparse(""'foo\""bar' + \""foo'c\"" + 'stuff\\n and \\\\more'"");"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,884,"testReparse(""x.__proto__;"");"
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,887,private void testReparse(String code) {
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,888,Node parse1 = parse(code);
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,889,Node parse2 = parse(new CodePrinter.Builder(parse1).build());
True,test/com/google/javascript/jscomp/CodePrinterTest.java,test/com/google/javascript/jscomp/CodePrinterTest.java,890,"assertTrue(code, parse1.checkTreeEqualsSilent(parse2));"
True,test/com/google/javascript/jscomp/CreateSyntheticBlocksTest.java,test/com/google/javascript/jscomp/CreateSyntheticBlocksTest.java,49,"new PeepholeOptimizationsPass(compiler, new"
True,test/com/google/javascript/jscomp/CreateSyntheticBlocksTest.java,test/com/google/javascript/jscomp/CreateSyntheticBlocksTest.java,50,"PeepholeRemoveDeadCode()).process(externs, js);"
False,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,152,"elperMoveExpression(""foo()"", ""foo"", ""var temp_0 = foo(); temp_0;"");"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,152,"helperMoveExpression(""foo()"", ""foo"", ""var temp$$0 = foo(); temp$$0;"");"
False,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,159,"var temp_0 = foo(); x = temp_0;"");"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,159,"""var temp$$0 = foo(); x = temp$$0;"");"
False,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,166,"var temp_0 = foo(); var x = temp_0;"");"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,166,"""var temp$$0 = foo(); var x = temp$$0;"");"
False,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,173,"var temp_0 = foo(); if (temp_0);"");"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,173,"""var temp$$0 = foo(); if (temp$$0);"");"
False,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,180,"var temp_0 = foo(); switch(temp_0){}"");"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,180,"""var temp$$0 = foo(); switch(temp$$0){}"");"
False,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,187,"var temp_0 = foo(); switch(1 + temp_0){}"");"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,187,"""var temp$$0 = foo(); switch(1 + temp$$0){}"");"
False,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,194,"function (){ var temp_0 = foo(); return temp_0;}"");"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,194,"""function (){ var temp$$0 = foo(); return temp$$0;}"");"
False,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,201,"var temp_0 = foo(); x = temp_0 && 1"");"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,201,"""var temp$$0 = foo(); x = temp$$0 && 1"");"
False,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,208,"var temp_0 = foo(); x = temp_0 || 1"");"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,208,"""var temp$$0 = foo(); x = temp$$0 || 1"");"
False,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,215,"var temp_0 = foo(); x = temp_0 ? 0 : 1"");"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,215,"""var temp$$0 = foo(); x = temp$$0 ? 0 : 1"");"
False,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,224,"var temp_0; if (temp_0 = 0) temp_0 = foo(); x = temp_0;"");"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,224,"""var temp$$0; if (temp$$0 = 0) temp$$0 = foo(); x = temp$$0;"");"
False,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,231,"var temp_0; if (temp_0 = 1); else temp_0 = foo(); x = temp_0;"");"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,231,"""var temp$$0; if (temp$$0 = 1); else temp$$0 = foo(); x = temp$$0;"");"
False,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,238,"var temp_0; if (1) temp_0 = foo(); else temp_0 = 0;var x = temp_0;"");"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,238,"""var temp$$0;"" +"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,239,""" if (1) temp$$0 = foo(); else temp$$0 = 0;var x = temp$$0;"");"
False,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,252,"var temp_0; if (temp_0 = goo()) temp_0 = foo(); x = temp_0;"");"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,253,"""var temp$$0; if (temp$$0 = goo()) temp$$0 = foo(); x = temp$$0;"");"
False,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,259,"var temp_0; if (temp_0 = goo()) temp_0 = foo();"" +"
False,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,260,"var x = 1 + temp_0;"");"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,260,"""var temp$$0; if (temp$$0 = goo()) temp$$0 = foo();"" +"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,261,"""var x = 1 + temp$$0;"");"
False,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,267,"var temp_0;"" +"
False,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,268,"if (temp_0 = goo()) temp_0 = foo();"" +"
False,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,269,"if(temp_0);"");"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,268,"""var temp$$0;"" +"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,269,"""if (temp$$0 = goo()) temp$$0 = foo();"" +"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,270,"""if(temp$$0);"");"
False,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,276,"var temp_0;"" +"
False,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,277,"if (temp_0 = goo()) temp_0 = foo();"" +"
False,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,278,"switch(temp_0){}"");"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,277,"""var temp$$0;"" +"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,278,"""if (temp$$0 = goo()) temp$$0 = foo();"" +"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,279,"""switch(temp$$0){}"");"
False,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,285,"var temp_const_0 = 1 + goo();"" +"
False,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,286,"switch(temp_const_0 + foo()){}"");"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,286,"""var temp_const$$0 = 1 + goo();"" +"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,287,"""switch(temp_const$$0 + foo()){}"");"
False,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,294,"var temp_0; if (temp_0 = goo()) temp_0 = foo();"" +"
False,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,295,"return temp_0;"" +"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,295,"""var temp$$0; if (temp$$0 = goo()) temp$$0 = foo();"" +"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,296,"""return temp$$0;"" +"
False,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,305,"var temp_const_1 = goo;"" +"
False,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,306,"var temp_const_0 = goo(2);"" +"
False,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,307,"var temp_2;"" +"
False,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,308,"if (1) temp_2 = foo(); else temp_2 = 0;"" +"
False,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,309,"if (temp_const_1(1, temp_const_0, temp_2));"");"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,306,"""var temp_const$$1 = goo;"" +"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,307,"""var temp_const$$0 = goo(2);"" +"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,308,"""var temp$$2;"" +"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,309,"""if (1) temp$$2 = foo(); else temp$$2 = 0;"" +"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,310,"""if (temp_const$$1(1, temp_const$$0, temp$$2));"");"
False,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,317,"var x = 0; var temp_const_0 = x;"" +"
False,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,318,"x = temp_const_0 + (foo() + 1);"");"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,318,"""var x = 0; var temp_const$$0 = x;"" +"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,319,"""x = temp_const$$0 + (foo() + 1);"");"
False,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,323,"var x = 0; var temp_const_0 = x;"" +"
False,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,324,"y = (x = temp_const_0 + foo()) + x"");"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,324,"""var x = 0; var temp_const$$0 = x;"" +"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,325,"""y = (x = temp_const$$0 + foo()) + x"");"
False,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,332,"var x = {}; var temp_const_0 = x; var temp_const_1 = temp_const_0.a;"" +"
False,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,333,"temp_const_0.a = temp_const_1 + (foo() + 1);"");"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,333,"""var x = {}; var temp_const$$0 = x;"" +"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,334,"""var temp_const$$1 = temp_const$$0.a;"" +"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,335,"""temp_const$$0.a = temp_const$$1 + (foo() + 1);"");"
False,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,338,"var x = {}; var temp_const_0 = x; var temp_const_1 = temp_const_0.a;"" +"
False,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,339,"y = (temp_const_0.a = temp_const_1 + foo()) + x.a"");"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,340,"""var x = {}; var temp_const$$0 = x;"" +"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,341,"""var temp_const$$1 = temp_const$$0.a;"" +"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,342,"""y = (temp_const$$0.a = temp_const$$1 + foo()) + x.a"");"
False,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,348,"var XX = {}; var temp_const_0 = XX.a;"" +"
False,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,349,"XX.a = temp_const_0 + (foo() + 1);"");"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,351,"""var XX = {}; var temp_const$$0 = XX.a;"" +"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,352,"""XX.a = temp_const$$0 + (foo() + 1);"");"
False,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,354,"var XX = {}; var temp_const_0 = XX.a;"" +"
False,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,355,"y = (XX.a = temp_const_0 + foo()) + XX.a"");"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,357,"""var XX = {}; var temp_const$$0 = XX.a;"" +"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,358,"""y = (XX.a = temp_const$$0 + foo()) + XX.a"");"
False,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,364,"var temp_const_0 = goo();"" +"
False,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,365,"var temp_const_1 = temp_const_0.a;"" +"
False,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,366,"temp_const_0.a = temp_const_1 + (foo() + 1);"");"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,367,"""var temp_const$$0 = goo();"" +"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,368,"""var temp_const$$1 = temp_const$$0.a;"" +"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,369,"""temp_const$$0.a = temp_const$$1 + (foo() + 1);"");"
False,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,372,"var temp_const_0 = goo();"" +"
False,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,373,"var temp_const_1 = temp_const_0.a;"" +"
False,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,374,"y = (temp_const_0.a = temp_const_1 + foo()) + goo().a"");"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,375,"""var temp_const$$0 = goo();"" +"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,376,"""var temp_const$$1 = temp_const$$0.a;"" +"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,377,"""y = (temp_const$$0.a = temp_const$$1 + foo()) + goo().a"");"
False,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,383,"var temp_const_0 = goo().a;"" +"
False,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,384,"var temp_const_1 = temp_const_0.b;"" +"
False,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,385,"temp_const_0.b = temp_const_1 + (foo() + 1);"");"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,386,"""var temp_const$$0 = goo().a;"" +"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,387,"""var temp_const$$1 = temp_const$$0.b;"" +"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,388,"""temp_const$$0.b = temp_const$$1 + (foo() + 1);"");"
False,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,391,"var temp_const_0 = goo().a;"" +"
False,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,392,"var temp_const_1 = temp_const_0.b;"" +"
False,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,393,"y = (temp_const_0.b = temp_const_1 + foo()) + goo().a"");"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,394,"""var temp_const$$0 = goo().a;"" +"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,395,"""var temp_const$$1 = temp_const$$0.b;"" +"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,396,"""y = (temp_const$$0.b = temp_const$$1 + foo()) + goo().a"");"
False,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,493,"ecomposer.setTempNamePrefix(""temp_"");"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,496,"decomposer.setTempNamePrefix(""temp"");"
False,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,538,"ecomposer.setTempNamePrefix(""temp_"");"
True,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,test/com/google/javascript/jscomp/ExpresssionDecomposerTest.java,541,"decomposer.setTempNamePrefix(""temp"");"
False,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,29,rivate static final JSSourceFile[] EXTERNS = {
False,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,30,"SSourceFile.fromCode(""externs"", """")"
False,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,36,"var foobar = function(d, e, f) {};\n"");"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,33,"""/**\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,34,""" * @param {*} d\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,35,""" * @param {*} e\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,36,""" * @param {*} f\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,37,""" */\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,38,"""var foobar = function(d, e, f) {\n}"");"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,41,public void testExportSymbolDefinedInVar() throws Exception {
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,42,"compileAndCheck(""var a = function(d, e, f) {};"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,43,"""goog.exportSymbol('foobar', a)"","
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,44,"""/**\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,45,""" * @param {*} d\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,46,""" * @param {*} e\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,47,""" * @param {*} f\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,48,""" */\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,49,"""var foobar = function(d, e, f) {\n}"");"
False,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,42,"var a;\na.b;\na.b.cprop = function(d, e, f) {};\n"");"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,55,"""var a = {};\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,56,"""a.b = {};\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,57,"""/**\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,58,""" * @param {*} d\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,59,""" * @param {*} e\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,60,""" * @param {*} f\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,61,""" */\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,62,"""a.b.cprop = function(d, e, f) {\n}"");"
False,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,53,"var a;\n"" +"
False,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,54,"a.b = function(p1) {};\n"" +"
False,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,55,"a.b.c = function(d, e, f) {};\n"" +"
False,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,56,"a.b.prototype;\n"" +"
False,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,57,"a.b.prototype.c = function(g, h, i) {};\n"");"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,73,"""var a = {};\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,74,"""/**\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,75,""" * @param {*} p1\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,76,""" */\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,77,"""a.b = function(p1) {\n};\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,78,"""/**\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,79,""" * @param {*} d\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,80,""" * @param {*} e\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,81,""" * @param {*} f\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,82,""" */\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,83,"""a.b.c = function(d, e, f) {\n};\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,84,"""/**\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,85,""" * @param {*} g\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,86,""" * @param {*} h\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,87,""" * @param {*} i\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,88,""" */\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,89,"""a.b.prototype.c = function(g, h, i) {\n}"");"
False,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,68,"var hello;\n"" +"
False,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,69,"hello.b;\n"" +"
False,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,70,"hello.b.c = function(d, e, f) {};\n"" +"
False,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,71,"hello.b.prototype;\n"" +"
False,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,72,"hello.b.prototype.c = function(g, h, i) {};\n"");"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,100,"""var hello = {};\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,101,"""hello.b = {};\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,102,"""/**\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,103,""" * @param {*} d\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,104,""" * @param {*} e\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,105,""" * @param {*} f\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,106,""" */\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,107,"""hello.b.c = function(d, e, f) {\n};\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,108,"""/**\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,109,""" * @param {*} g\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,110,""" * @param {*} h\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,111,""" * @param {*} i\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,112,""" */\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,113,"""hello.b.prototype.c = function(g, h, i) {\n}"");"
False,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,83,"var prefix = function(p1) {};\n"" +"
False,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,84,"prefix.c = function(d, e, f) {};\n"");"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,123,"""/**\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,124,""" * @param {*} p1\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,125,""" */\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,126,"""var prefix = function(p1) {\n};\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,127,"""/**\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,128,""" * @param {*} d\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,129,""" * @param {*} e\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,130,""" * @param {*} f\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,131,""" */\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,132,"""prefix.c = function(d, e, f) {\n}"");"
False,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,91,"var foobar;\n"");"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,138,"""var foobar = {}"");"
False,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,97,"var foobar;\n"");"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,144,"""var foobar = {}"");"
False,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,100,ublic void testExportNonexistantProperty() throws Exception {
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,147,public void testExportNonexistentProperty() throws Exception {
False,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,103,"var a;\n"" +"
False,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,104,"a.b;\n"" +"
False,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,105,"a.b.none;\n"");"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,150,"""var a = {};\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,151,"""a.b = {};\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,152,"""a.b.none = {}"");"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,155,public void testExportSymbolWithTypeAnnotation() {
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,157,"compileAndCheck(""var internalName;\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,158,"""/**\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,159,""" * @param {string} param1\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,160,""" * @param {number} param2\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,161,""" * @return {string}\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,162,""" */\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,163,"""internalName = function(param1, param2) {"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,164,"""return param1 + param2;"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,166,"""goog.exportSymbol('externalName', internalName)"","
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,167,"""/**\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,168,""" * @param {string} param1\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,169,""" * @param {number} param2\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,170,""" * @return {string}\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,171,""" */\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,172,"""var externalName = function(param1, param2) {\n}"");"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,175,public void testExportSymbolWithConstructor() {
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,176,"compileAndCheck(""var internalName;\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,177,"""/**\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,178,""" * @constructor\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,179,""" */\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,180,"""internalName = function() {"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,182,"""goog.exportSymbol('externalName', internalName)"","
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,183,"""/**\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,184,""" * @constructor\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,185,""" */\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,186,"""var externalName = function() {\n}"");"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,189,public void testExportFunctionWithOptionalArguments() {
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,190,"compileAndCheck(""var internalName;\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,191,"""/**\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,192,""" * @param {number=} a\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,193,""" */\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,194,"""internalName = function(a) {"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,195,"""  return 6;\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,197,"""goog.exportSymbol('externalName', internalName)"","
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,198,"""/**\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,199,""" * @param {number=} a\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,200,""" */\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,201,"""var externalName = function(a) {\n}"");"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,204,public void testExportFunctionWithVariableArguments() {
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,205,"compileAndCheck(""var internalName;\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,206,"""/**\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,207,""" * @param {...number} a\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,208,""" * @return {number}\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,209,""" */\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,210,"""internalName = function(a) {"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,211,"""  return 6;\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,213,"""goog.exportSymbol('externalName', internalName)"","
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,214,"""/**\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,215,""" * @param {...number} a\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,216,""" * @return {number}\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,217,""" */\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,218,"""var externalName = function(a) {\n}"");"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,221,"/** If we export a property with ""prototype"" as a path component, there"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,222,* is no need to emit the initializer for prototype because every namespace
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,223,* has one automatically.
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,225,public void testExportDontEmitPrototypePathPrefix() {
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,226,compileAndCheck(
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,227,"""/**\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,228,""" * @constructor\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,229,""" */\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,230,"""var Foo = function() {};"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,231,"""/**\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,232,""" * @return {number}\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,233,""" */\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,234,"""Foo.prototype.m = function() {return 6;};\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,235,"""goog.exportSymbol('Foo', Foo);\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,236,"""goog.exportProperty(Foo.prototype, 'm', Foo.prototype.m);"","
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,237,"""/**\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,238,""" * @constructor\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,239,""" */\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,240,"""var Foo = function() {\n};\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,241,"""/**\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,242,""" * @return {number}\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,243,""" */\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,244,"""Foo.prototype.m = function() {\n}"""
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,249,* Test the workflow of creating an externs file for a library
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,250,* via the export pass and then using that externs file in a client.
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,252,* There should be no warnings in the client if the library includes
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,253,* type information for the exported functions and the client uses them
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,254,* correctly.
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,256,public void testUseExportsAsExterns() {
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,257,String librarySource =
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,258,"""/**\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,259,""" * @param {number} a\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,260,""" * @constructor\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,261,""" */\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,262,"""var InternalName = function(a) {"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,264,"""goog.exportSymbol('ExternalName', InternalName)"";"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,266,String clientSource =
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,267,"""var a = new ExternalName(6);\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,268,"""/**\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,269,""" * @param {ExternalName} x\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,270,""" */\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,271,"""var b = function(x) {};"";"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,273,Result libraryCompileResult = compileAndExportExterns(librarySource);
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,275,"assertEquals(0, libraryCompileResult.warnings.length);"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,276,"assertEquals(0, libraryCompileResult.errors.length);"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,278,String generatedExterns = libraryCompileResult.externExport;
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,280,"Result clientCompileResult = compileAndExportExterns(clientSource,"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,281,generatedExterns);
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,283,"assertEquals(0, clientCompileResult.warnings.length);"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,284,"assertEquals(0, clientCompileResult.errors.length);"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,287,public void testWarnOnExportFunctionWithUnknownReturnType() {
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,288,String librarySource =
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,289,"""var InternalName = function() {"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,290,"""  return 6;"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,292,"""goog.exportSymbol('ExternalName', InternalName)"";"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,294,Result libraryCompileResult = compileAndExportExterns(librarySource);
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,296,"assertEquals(1, libraryCompileResult.warnings.length);"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,297,"assertEquals(0, libraryCompileResult.errors.length);"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,300,public void testDontWarnOnExportConstructorWithUnknownReturnType() {
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,301,String librarySource =
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,302,"""/**\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,303,""" * @constructor\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,304,""" */\n "" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,305,"""var InternalName = function() {"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,307,"""goog.exportSymbol('ExternalName', InternalName)"";"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,309,Result libraryCompileResult = compileAndExportExterns(librarySource);
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,311,"assertEquals(0, libraryCompileResult.warnings.length);"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,312,"assertEquals(0, libraryCompileResult.errors.length);"
False,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,110,ystem.err.println(compile(js));
False,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,111,"ssertEquals(expected, compile(js));"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,316,Result result = compileAndExportExterns(js);
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,318,"assertEquals(expected, result.externExport);"
False,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,114,rivate String compile(String js) {
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,321,public void testWarnOnExportFunctionWithUnknownParameterTypes() {
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,322,/* This source is missing types for the b and c parameters */
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,323,String librarySource =
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,324,"""/**\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,325,""" * @param {number} a\n"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,326,""" * @return {number}"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,327,""" */\n "" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,328,"""var InternalName = function(a,b,c) {"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,329,"""  return 6;"" +"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,331,"""goog.exportSymbol('ExternalName', InternalName)"";"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,333,Result libraryCompileResult = compileAndExportExterns(librarySource);
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,335,"assertEquals(2, libraryCompileResult.warnings.length);"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,336,"assertEquals(0, libraryCompileResult.errors.length);"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,339,private Result compileAndExportExterns(String js) {
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,340,"return compileAndExportExterns(js, """");"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,344,* Compiles the passed in javascript with the passed in externs and returns
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,345,* the new externs exported by the this pass.
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,347,* @param js the source to be compiled
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,348,* @param externs the externs the {@code js} source needs
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,349,* @return the externs generated from {@code js}
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,351,"private Result compileAndExportExterns(String js, String externs) {"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,359,/* Check types so we can make sure our exported externs have
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,360,* type information.
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,362,options.checkSymbols = true;
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,363,options.checkTypes = true;
False,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,130,"esult result = compiler.compile(EXTERNS, inputs, options);"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,373,JSSourceFile[] externFiles = {
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,374,"JSSourceFile.fromCode(""externs"", externs)"
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,377,"Result result = compiler.compile(externFiles, inputs, options);"
False,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,134,eturn result.externExport;
True,test/com/google/javascript/jscomp/ExternExportsPassTest.java,test/com/google/javascript/jscomp/ExternExportsPassTest.java,381,return result;
False,test/com/google/javascript/jscomp/FoldConstantsTest.java,test/com/google/javascript/jscomp/FoldConstantsTest.java,19,mport com.google.common.collect.ImmutableSet;
True,test/com/google/javascript/jscomp/FoldConstantsTest.java,test/com/google/javascript/jscomp/FoldConstantsTest.java,22,private boolean runFoldConstantsFirst = true;
True,test/com/google/javascript/jscomp/FoldConstantsTest.java,test/com/google/javascript/jscomp/FoldConstantsTest.java,42,if (runFoldConstantsFirst) {
True,test/com/google/javascript/jscomp/FoldConstantsTest.java,test/com/google/javascript/jscomp/FoldConstantsTest.java,43,"runFoldConstants(externs, js);"
True,test/com/google/javascript/jscomp/FoldConstantsTest.java,test/com/google/javascript/jscomp/FoldConstantsTest.java,44,"runPeepholePasses(externs, js);"
True,test/com/google/javascript/jscomp/FoldConstantsTest.java,test/com/google/javascript/jscomp/FoldConstantsTest.java,45,} else {
True,test/com/google/javascript/jscomp/FoldConstantsTest.java,test/com/google/javascript/jscomp/FoldConstantsTest.java,46,"runPeepholePasses(externs, js);"
True,test/com/google/javascript/jscomp/FoldConstantsTest.java,test/com/google/javascript/jscomp/FoldConstantsTest.java,47,"runFoldConstants(externs, js);"
True,test/com/google/javascript/jscomp/FoldConstantsTest.java,test/com/google/javascript/jscomp/FoldConstantsTest.java,51,"private void runFoldConstants(Node externs, Node js) {"
True,test/com/google/javascript/jscomp/FoldConstantsTest.java,test/com/google/javascript/jscomp/FoldConstantsTest.java,55,"private void runPeepholePasses(Node externs, Node js) {"
False,test/com/google/javascript/jscomp/FoldConstantsTest.java,test/com/google/javascript/jscomp/FoldConstantsTest.java,57,mmutableSet<AbstractPeepholeOptimization> peepholeOptimizations =
False,test/com/google/javascript/jscomp/FoldConstantsTest.java,test/com/google/javascript/jscomp/FoldConstantsTest.java,58,mmutableSet.<AbstractPeepholeOptimization>of(
False,test/com/google/javascript/jscomp/FoldConstantsTest.java,test/com/google/javascript/jscomp/FoldConstantsTest.java,59,ew PeepholeSubstituteAlternateSyntax());
False,test/com/google/javascript/jscomp/FoldConstantsTest.java,test/com/google/javascript/jscomp/FoldConstantsTest.java,62,"ew PeepholeOptimizationsPass(compiler, peepholeOptimizations);"
True,test/com/google/javascript/jscomp/FoldConstantsTest.java,test/com/google/javascript/jscomp/FoldConstantsTest.java,69,"new PeepholeOptimizationsPass(compiler,"
True,test/com/google/javascript/jscomp/FoldConstantsTest.java,test/com/google/javascript/jscomp/FoldConstantsTest.java,70,"new PeepholeSubstituteAlternateSyntax(),"
True,test/com/google/javascript/jscomp/FoldConstantsTest.java,test/com/google/javascript/jscomp/FoldConstantsTest.java,71,new PeepholeRemoveDeadCode());
True,test/com/google/javascript/jscomp/FoldConstantsTest.java,test/com/google/javascript/jscomp/FoldConstantsTest.java,85,runFoldConstantsFirst = true;
True,test/com/google/javascript/jscomp/FoldConstantsTest.java,test/com/google/javascript/jscomp/FoldConstantsTest.java,87,runFoldConstantsFirst = false;
True,test/com/google/javascript/jscomp/FoldConstantsTest.java,test/com/google/javascript/jscomp/FoldConstantsTest.java,88,testSame(js);
True,test/com/google/javascript/jscomp/FoldConstantsTest.java,test/com/google/javascript/jscomp/FoldConstantsTest.java,89,runFoldConstantsFirst = true;
True,test/com/google/javascript/jscomp/FoldConstantsTest.java,test/com/google/javascript/jscomp/FoldConstantsTest.java,93,runFoldConstantsFirst = true;
True,test/com/google/javascript/jscomp/FoldConstantsTest.java,test/com/google/javascript/jscomp/FoldConstantsTest.java,94,"test(js, expected);"
True,test/com/google/javascript/jscomp/FoldConstantsTest.java,test/com/google/javascript/jscomp/FoldConstantsTest.java,95,runFoldConstantsFirst = false;
True,test/com/google/javascript/jscomp/FoldConstantsTest.java,test/com/google/javascript/jscomp/FoldConstantsTest.java,97,runFoldConstantsFirst = true;
True,test/com/google/javascript/jscomp/FoldConstantsTest.java,test/com/google/javascript/jscomp/FoldConstantsTest.java,101,runFoldConstantsFirst = true;
True,test/com/google/javascript/jscomp/FoldConstantsTest.java,test/com/google/javascript/jscomp/FoldConstantsTest.java,102,"test(js, expected, warning);"
True,test/com/google/javascript/jscomp/FoldConstantsTest.java,test/com/google/javascript/jscomp/FoldConstantsTest.java,103,runFoldConstantsFirst = false;
True,test/com/google/javascript/jscomp/FoldConstantsTest.java,test/com/google/javascript/jscomp/FoldConstantsTest.java,105,runFoldConstantsFirst = true;
False,test/com/google/javascript/jscomp/FoldConstantsTest.java,test/com/google/javascript/jscomp/FoldConstantsTest.java,469,"old(""if(x && true) z()"", ""x&&z()"");"
False,test/com/google/javascript/jscomp/FoldConstantsTest.java,test/com/google/javascript/jscomp/FoldConstantsTest.java,470,"old(""if(x && false) z()"", """");"
True,test/com/google/javascript/jscomp/FoldConstantsTest.java,test/com/google/javascript/jscomp/FoldConstantsTest.java,490,"test(""if(x && true) z()"", ""x&&z()"");"
True,test/com/google/javascript/jscomp/FoldConstantsTest.java,test/com/google/javascript/jscomp/FoldConstantsTest.java,491,"test(""if(x && false) z()"", """");"
False,test/com/google/javascript/jscomp/FoldConstantsTest.java,test/com/google/javascript/jscomp/FoldConstantsTest.java,473,"old(""if(x==y && false) z()"", """");"
True,test/com/google/javascript/jscomp/FoldConstantsTest.java,test/com/google/javascript/jscomp/FoldConstantsTest.java,494,"test(""if(x==y && false) z()"", """");"
False,test/com/google/javascript/jscomp/FoldConstantsTest.java,test/com/google/javascript/jscomp/FoldConstantsTest.java,1006,"old(""do { foo() } while(!true);"", ""foo()"");"
True,test/com/google/javascript/jscomp/FoldConstantsTest.java,test/com/google/javascript/jscomp/FoldConstantsTest.java,1027,"test(""do { foo() } while(!true);"", ""foo()"");"
False,test/com/google/javascript/jscomp/FoldConstantsTest.java,test/com/google/javascript/jscomp/FoldConstantsTest.java,1019,"old(""if(foo())do {foo()} while(false) else bar()"", ""foo()?foo():bar()"");"
True,test/com/google/javascript/jscomp/FoldConstantsTest.java,test/com/google/javascript/jscomp/FoldConstantsTest.java,1040,"test(""if(foo())do {foo()} while(false) else bar()"", ""foo()?foo():bar()"");"
False,test/com/google/javascript/jscomp/FoldConstantsTest.java,test/com/google/javascript/jscomp/FoldConstantsTest.java,1055,"old(""!!true"", ""0"");"
True,test/com/google/javascript/jscomp/FoldConstantsTest.java,test/com/google/javascript/jscomp/FoldConstantsTest.java,1076,"test(""!!true"", ""0"");"
False,test/com/google/javascript/jscomp/FoldConstantsTest.java,test/com/google/javascript/jscomp/FoldConstantsTest.java,1057,"old(""!(!x&&!y)"", ""!x&&!y"");"
True,test/com/google/javascript/jscomp/FoldConstantsTest.java,test/com/google/javascript/jscomp/FoldConstantsTest.java,1078,"test(""!(!x&&!y)"", ""!x&&!y"");"
False,test/com/google/javascript/jscomp/FoldConstantsTest.java,test/com/google/javascript/jscomp/FoldConstantsTest.java,1070,"neRepetitiontest.fold(""x ? x() : void 0"", ""x&&x();"");"
True,test/com/google/javascript/jscomp/FoldConstantsTest.java,test/com/google/javascript/jscomp/FoldConstantsTest.java,1091,"oneRepetitiontest.test(""x ? x() : void 0"", ""x&&x();"");"
True,test/com/google/javascript/jscomp/FoldConstantsTest.java,test/com/google/javascript/jscomp/FoldConstantsTest.java,1207,public void testFoldNegativeBug() {
True,test/com/google/javascript/jscomp/FoldConstantsTest.java,test/com/google/javascript/jscomp/FoldConstantsTest.java,1208,"fold(""(-3);"", ""1;"");"
False,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,978,"function x() { {var JSCompiler_inline_result_0; "" +"
False,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,979,"JSCompiler_inline_result_0=true;}"" +"
False,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,980,"if (JSCompiler_inline_result_0) throw 'test'; }"","
True,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,978,"""function x() { {var JSCompiler_inline_result$$0; "" +"
True,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,979,"""JSCompiler_inline_result$$0=true;}"" +"
True,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,980,"""if (JSCompiler_inline_result$$0) throw 'test'; }"","
False,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,990,"function x() { {var JSCompiler_inline_result_0; "" +"
False,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,991,"JSCompiler_inline_result_0=true;}"" +"
False,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,992,"return JSCompiler_inline_result_0; }"","
True,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,990,"""function x() { {var JSCompiler_inline_result$$0; "" +"
True,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,991,"""JSCompiler_inline_result$$0=true;}"" +"
True,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,992,"""return JSCompiler_inline_result$$0; }"","
False,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1002,"function x() { {var JSCompiler_inline_result_0; "" +"
False,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1003,"JSCompiler_inline_result_0=true;}"" +"
False,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1004,"switch(JSCompiler_inline_result_0) { default:break; } }"","
True,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1002,"""function x() { {var JSCompiler_inline_result$$0; "" +"
True,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1003,"""JSCompiler_inline_result$$0=true;}"" +"
True,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1004,"""switch(JSCompiler_inline_result$$0) { default:break; } }"","
False,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1014,"function x() { {var JSCompiler_inline_result_0; "" +"
False,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1015,"JSCompiler_inline_result_0=true;}"" +"
False,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1016,"JSCompiler_inline_result_0?0:1 }"","
True,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1014,"""function x() { {var JSCompiler_inline_result$$0; "" +"
True,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1015,"""JSCompiler_inline_result$$0=true;}"" +"
True,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1016,"""JSCompiler_inline_result$$0?0:1 }"","
False,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1026,"function x() { {var JSCompiler_inline_result_0; "" +"
False,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1027,"JSCompiler_inline_result_0=true;}"" +"
False,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1028,"JSCompiler_inline_result_0&&1 }"","
True,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1026,"""function x() { {var JSCompiler_inline_result$$0; "" +"
True,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1027,"""JSCompiler_inline_result$$0=true;}"" +"
True,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1028,"""JSCompiler_inline_result$$0&&1 }"","
False,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1038,"function x() { {var JSCompiler_inline_result_0; "" +"
False,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1039,"JSCompiler_inline_result_0=true;}"" +"
False,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1040,"1 + JSCompiler_inline_result_0 }"","
True,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1038,"""function x() { {var JSCompiler_inline_result$$0; "" +"
True,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1039,"""JSCompiler_inline_result$$0=true;}"" +"
True,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1040,"""1 + JSCompiler_inline_result$$0 }"","
False,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1050,"function x() { {var JSCompiler_inline_result_0; "" +"
False,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1051,"JSCompiler_inline_result_0=true;}"" +"
False,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1052,"JSCompiler_inline_result_0&&1 }"","
True,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1050,"""function x() { {var JSCompiler_inline_result$$0; "" +"
True,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1051,"""JSCompiler_inline_result$$0=true;}"" +"
True,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1052,"""JSCompiler_inline_result$$0&&1 }"","
False,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1062,"function x() { {var JSCompiler_inline_result_0; "" +"
False,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1063,"JSCompiler_inline_result_0=true;}"" +"
False,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1064,"1 + JSCompiler_inline_result_0 }"","
True,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1062,"""function x() { {var JSCompiler_inline_result$$0; "" +"
True,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1063,"""JSCompiler_inline_result$$0=true;}"" +"
True,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1064,"""1 + JSCompiler_inline_result$$0 }"","
False,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1074,"function x() { {var JSCompiler_inline_result_0; "" +"
False,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1075,"JSCompiler_inline_result_0=true;}"" +"
False,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1076,"var b = 1 + JSCompiler_inline_result_0 }"","
True,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1074,"""function x() { {var JSCompiler_inline_result$$0; "" +"
True,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1075,"""JSCompiler_inline_result$$0=true;}"" +"
True,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1076,"""var b = 1 + JSCompiler_inline_result$$0 }"","
False,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1088,"/         ""{var JSCompiler_inline_result_0; "" +"
False,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1089,"/         ""JSCompiler_inline_result_0=true;}"" +"
False,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1090,"/         ""b += 1 + JSCompiler_inline_result_0 }"","
True,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1088,"//         ""{var JSCompiler_inline_result$$0; "" +"
True,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1089,"//         ""JSCompiler_inline_result$$0=true;}"" +"
True,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1090,"//         ""b += 1 + JSCompiler_inline_result$$0 }"","
False,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1100,"function x() { a:{{var JSCompiler_inline_result_0; "" +"
False,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1101,"JSCompiler_inline_result_0=true;}"" +"
False,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1102,"JSCompiler_inline_result_0?0:1 }}"","
True,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1100,"""function x() { a:{{var JSCompiler_inline_result$$0; "" +"
True,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1101,"""JSCompiler_inline_result$$0=true;}"" +"
True,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1102,"""JSCompiler_inline_result$$0?0:1 }}"","
False,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1120,"function x() { var JSCompiler_temp_const_0=goo();"" +"
False,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1121,"var JSCompiler_temp_1;"" +"
True,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1120,"""function x() { var JSCompiler_temp_const$$0=goo();"" +"
True,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1121,"""var JSCompiler_temp$$1;"" +"
False,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1123,"  {JSCompiler_temp_1=true;} "" +"
True,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1123,"""  {JSCompiler_temp$$1=true;} "" +"
False,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1125,"  JSCompiler_temp_1=1;"" +"
True,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1125,"""  JSCompiler_temp$$1=1;"" +"
False,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1127,"JSCompiler_temp_const_0 + JSCompiler_temp_1"" +"
True,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1127,"""JSCompiler_temp_const$$0 + JSCompiler_temp$$1"" +"
False,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1141,"var JSCompiler_temp_const_0=z;"" +"
True,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1141,"""var JSCompiler_temp_const$$0=z;"" +"
False,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1143,"var JSCompiler_inline_result_1;"" +"
True,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1143,"""var JSCompiler_inline_result$$1;"" +"
False,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1145,"JSCompiler_inline_result_1 = true;"" +"
True,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1145,"""JSCompiler_inline_result$$1 = true;"" +"
False,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1147,"JSCompiler_temp_const_0.gack = JSCompiler_inline_result_1;"" +"
True,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1147,"""JSCompiler_temp_const$$0.gack = JSCompiler_inline_result$$1;"" +"
False,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1161,"var JSCompiler_temp_const_0=z;"" +"
True,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1161,"""var JSCompiler_temp_const$$0=z;"" +"
False,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1163,"var JSCompiler_inline_result_1;"" +"
True,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1163,"""var JSCompiler_inline_result$$1;"" +"
False,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1165,"JSCompiler_inline_result_1 = true;"" +"
True,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1165,"""JSCompiler_inline_result$$1 = true;"" +"
False,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1167,"JSCompiler_temp_const_0.gack = JSCompiler_inline_result_1;"" +"
True,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1167,"""JSCompiler_temp_const$$0.gack = JSCompiler_inline_result$$1;"" +"
False,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1181,"var JSCompiler_temp_const_1=z;"" +"
False,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1182,"var JSCompiler_temp_const_0=bar();"" +"
True,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1181,"""var JSCompiler_temp_const$$1=z;"" +"
True,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1182,"""var JSCompiler_temp_const$$0=bar();"" +"
False,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1184,"var JSCompiler_inline_result_2;"" +"
True,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1184,"""var JSCompiler_inline_result$$2;"" +"
False,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1186,"JSCompiler_inline_result_2 = true;"" +"
True,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1186,"""JSCompiler_inline_result$$2 = true;"" +"
False,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1188,"JSCompiler_temp_const_1[JSCompiler_temp_const_0] = "" +"
False,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1189,"JSCompiler_inline_result_2;"" +"
True,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1188,"""JSCompiler_temp_const$$1[JSCompiler_temp_const$$0] = "" +"
True,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1189,"""JSCompiler_inline_result$$2;"" +"
False,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1203,"var JSCompiler_temp_const_0=z.y.x;"" +"
True,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1203,"""var JSCompiler_temp_const$$0=z.y.x;"" +"
False,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1205,"var JSCompiler_inline_result_1;"" +"
True,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1205,"""var JSCompiler_inline_result$$1;"" +"
False,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1207,"JSCompiler_inline_result_1 = true;"" +"
True,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1207,"""JSCompiler_inline_result$$1 = true;"" +"
False,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1209,"JSCompiler_temp_const_0.gack = JSCompiler_inline_result_1;"" +"
True,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1209,"""JSCompiler_temp_const$$0.gack = JSCompiler_inline_result$$1;"" +"
False,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1221,"function x() { {var JSCompiler_inline_result_0; "" +"
False,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1222,"JSCompiler_inline_result_0=_g;}"" +"
False,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1223,"1 + JSCompiler_inline_result_0() }"","
True,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1221,"""function x() { {var JSCompiler_inline_result$$0; "" +"
True,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1222,"""JSCompiler_inline_result$$0=_g;}"" +"
True,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1223,"""1 + JSCompiler_inline_result$$0() }"","
False,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1233,"/         ""function x() { {var JSCompiler_inline_result_0; "" +"
False,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1234,"/         ""JSCompiler_inline_result_0=true;}"" +"
False,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1235,"/         ""1 + _g(JSCompiler_inline_result_0) }"","
True,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1233,"//         ""function x() { {var JSCompiler_inline_result$$0; "" +"
True,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1234,"//         ""JSCompiler_inline_result$$0=true;}"" +"
True,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1235,"//         ""1 + _g(JSCompiler_inline_result$$0) }"","
False,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1247,"  {var JSCompiler_inline_result_0; JSCompiler_inline_result_0=_g;}"" +"
False,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1248,"  var CONSTANT_RESULT = JSCompiler_inline_result_0;"" +"
True,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1247,"""  {var JSCompiler_inline_result$$0; JSCompiler_inline_result$$0=_g;}"" +"
True,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1248,"""  var CONSTANT_RESULT = JSCompiler_inline_result$$0;"" +"
False,test/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallbackTest.java,test/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallbackTest.java,69,"mmutableList.of(""foo?(bar=0):(baz=0)""));"
True,test/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallbackTest.java,test/com/google/javascript/jscomp/GatherSideEffectSubexpressionsCallbackTest.java,69,"ImmutableList.of(""foo?bar=0:baz=0""));"
False,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,1203,"{var JSCompiler_inline_result_0;a();}"" +"
False,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,1204,"c=z=JSCompiler_inline_result_0"");"
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,1203,"""{var JSCompiler_inline_result$$0;a();}"" +"
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,1204,"""c=z=JSCompiler_inline_result$$0"");"
False,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,1209,"{var JSCompiler_inline_result_0;a();}"" +"
False,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,1210,"c=JSCompiler_inline_result_0=z"");"
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,1209,"""{var JSCompiler_inline_result$$0;a();}"" +"
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,1210,"""c=JSCompiler_inline_result$$0=z"");"
False,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,1215,"{var JSCompiler_inline_result_0;a();}"" +"
False,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,1216,"if(z=JSCompiler_inline_result_0);"");"
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,1215,"""{var JSCompiler_inline_result$$0;a();}"" +"
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,1216,"""if(z=JSCompiler_inline_result$$0);"");"
False,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,1221,"var JSCompiler_temp_const_0=z;"" +"
False,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,1222,"{var JSCompiler_inline_result_1;a()}"" +"
False,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,1223,"if(JSCompiler_temp_const_0.y=JSCompiler_inline_result_1);"");"
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,1221,"""var JSCompiler_temp_const$$0=z;"" +"
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,1222,"""{var JSCompiler_inline_result$$1;a()}"" +"
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,1223,"""if(JSCompiler_temp_const$$0.y=JSCompiler_inline_result$$1);"");"
False,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,1359,"var JSCompiler_temp_const_0 = x;"" +"
False,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,1360,"{var JSCompiler_inline_result_1; a=1; JSCompiler_inline_result_1=1}"" +"
False,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,1361,"x = JSCompiler_temp_const_0 + JSCompiler_inline_result_1;"");"
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,1359,"""var JSCompiler_temp_const$$0 = x;"" +"
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,1360,"""{var JSCompiler_inline_result$$1; a=1; JSCompiler_inline_result$$1=1}"" +"
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,1361,"""x = JSCompiler_temp_const$$0 + JSCompiler_inline_result$$1;"");"
False,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,1375,"var JSCompiler_inline_result_0;"" +"
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,1375,"""var JSCompiler_inline_result$$0;"" +"
False,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,1379,"JSCompiler_inline_result_0 = ret$$inline_2;\n"" +"
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,1379,"""JSCompiler_inline_result$$0 = ret$$inline_2;\n"" +"
False,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,1382,"descriptions_=JSCompiler_inline_result_0;"" +"
True,test/com/google/javascript/jscomp/InlineFunctionsTest.java,test/com/google/javascript/jscomp/InlineFunctionsTest.java,1382,"""descriptions_=JSCompiler_inline_result$$0;"" +"
False,test/com/google/javascript/jscomp/MakeDeclaredNamesUniqueTest.java,test/com/google/javascript/jscomp/MakeDeclaredNamesUniqueTest.java,111,"var a;function foo(){var a$$inline_1; a = 1}"");"
True,test/com/google/javascript/jscomp/MakeDeclaredNamesUniqueTest.java,test/com/google/javascript/jscomp/MakeDeclaredNamesUniqueTest.java,111,"""var a;function foo(){var a$$0; a = 1}"");"
False,test/com/google/javascript/jscomp/MakeDeclaredNamesUniqueTest.java,test/com/google/javascript/jscomp/MakeDeclaredNamesUniqueTest.java,194,estSameInFunction(
False,test/com/google/javascript/jscomp/MakeDeclaredNamesUniqueTest.java,test/com/google/javascript/jscomp/MakeDeclaredNamesUniqueTest.java,195,"var e; try { } catch(e$$1) {e$$1;}; try { } catch(e$$2) {e$$2;}"");"
False,test/com/google/javascript/jscomp/MakeDeclaredNamesUniqueTest.java,test/com/google/javascript/jscomp/MakeDeclaredNamesUniqueTest.java,196,estSameInFunction(
False,test/com/google/javascript/jscomp/MakeDeclaredNamesUniqueTest.java,test/com/google/javascript/jscomp/MakeDeclaredNamesUniqueTest.java,197,"var e; try { } catch(e$$1) {e$$1; try { } catch(e$$2) {e$$2;} };"");"
False,test/com/google/javascript/jscomp/MakeDeclaredNamesUniqueTest.java,test/com/google/javascript/jscomp/MakeDeclaredNamesUniqueTest.java,198,estSameInFunction(
False,test/com/google/javascript/jscomp/MakeDeclaredNamesUniqueTest.java,test/com/google/javascript/jscomp/MakeDeclaredNamesUniqueTest.java,199,"try { } catch(e) {e;}; try { } catch(e$$1) {e$$1;};var e$$2;"");"
False,test/com/google/javascript/jscomp/MakeDeclaredNamesUniqueTest.java,test/com/google/javascript/jscomp/MakeDeclaredNamesUniqueTest.java,200,estSameInFunction(
False,test/com/google/javascript/jscomp/MakeDeclaredNamesUniqueTest.java,test/com/google/javascript/jscomp/MakeDeclaredNamesUniqueTest.java,201,"try { } catch(e) {e; try { } catch(e$$1) {e$$1;} };var e$$2"");"
True,test/com/google/javascript/jscomp/MakeDeclaredNamesUniqueTest.java,test/com/google/javascript/jscomp/MakeDeclaredNamesUniqueTest.java,194,testInFunction(
True,test/com/google/javascript/jscomp/MakeDeclaredNamesUniqueTest.java,test/com/google/javascript/jscomp/MakeDeclaredNamesUniqueTest.java,195,"""var e; try { } catch(e$$0) {e$$0;}; try { } catch(e$$1) {e$$1;}"","
True,test/com/google/javascript/jscomp/MakeDeclaredNamesUniqueTest.java,test/com/google/javascript/jscomp/MakeDeclaredNamesUniqueTest.java,196,"""var e; try { } catch(e$$2) {e$$2;}; try { } catch(e$$0) {e$$0;}"");"
True,test/com/google/javascript/jscomp/MakeDeclaredNamesUniqueTest.java,test/com/google/javascript/jscomp/MakeDeclaredNamesUniqueTest.java,197,testInFunction(
True,test/com/google/javascript/jscomp/MakeDeclaredNamesUniqueTest.java,test/com/google/javascript/jscomp/MakeDeclaredNamesUniqueTest.java,198,"""var e; try { } catch(e$$1) {e$$1; try { } catch(e$$2) {e$$2;} };"","
True,test/com/google/javascript/jscomp/MakeDeclaredNamesUniqueTest.java,test/com/google/javascript/jscomp/MakeDeclaredNamesUniqueTest.java,199,"""var e; try { } catch(e$$0) {e$$0; try { } catch(e$$1) {e$$1;} };"");"
True,test/com/google/javascript/jscomp/MakeDeclaredNamesUniqueTest.java,test/com/google/javascript/jscomp/MakeDeclaredNamesUniqueTest.java,200,testInFunction(
True,test/com/google/javascript/jscomp/MakeDeclaredNamesUniqueTest.java,test/com/google/javascript/jscomp/MakeDeclaredNamesUniqueTest.java,201,"""try { } catch(e) {e;}; try { } catch(e$$1) {e$$1;};var e$$2;"","
True,test/com/google/javascript/jscomp/MakeDeclaredNamesUniqueTest.java,test/com/google/javascript/jscomp/MakeDeclaredNamesUniqueTest.java,202,"""try { } catch(e) {e;}; try { } catch(e$$0) {e$$0;};var e$$1;"");"
True,test/com/google/javascript/jscomp/MakeDeclaredNamesUniqueTest.java,test/com/google/javascript/jscomp/MakeDeclaredNamesUniqueTest.java,203,testInFunction(
True,test/com/google/javascript/jscomp/MakeDeclaredNamesUniqueTest.java,test/com/google/javascript/jscomp/MakeDeclaredNamesUniqueTest.java,204,"""try { } catch(e) {e; try { } catch(e$$1) {e$$1;} };var e$$2"","
True,test/com/google/javascript/jscomp/MakeDeclaredNamesUniqueTest.java,test/com/google/javascript/jscomp/MakeDeclaredNamesUniqueTest.java,205,"""try { } catch(e) {e; try { } catch(e$$0) {e$$0;} };var e$$1"");"
False,test/com/google/javascript/jscomp/MakeDeclaredNamesUniqueTest.java,test/com/google/javascript/jscomp/MakeDeclaredNamesUniqueTest.java,208,nvert = true;
True,test/com/google/javascript/jscomp/MakeDeclaredNamesUniqueTest.java,test/com/google/javascript/jscomp/MakeDeclaredNamesUniqueTest.java,216,invert = true;
False,test/com/google/javascript/jscomp/MakeDeclaredNamesUniqueTest.java,test/com/google/javascript/jscomp/MakeDeclaredNamesUniqueTest.java,213,estSameWithInversion(
False,test/com/google/javascript/jscomp/MakeDeclaredNamesUniqueTest.java,test/com/google/javascript/jscomp/MakeDeclaredNamesUniqueTest.java,214,"function foo(){var arguments$$1;}"");"
True,test/com/google/javascript/jscomp/MakeDeclaredNamesUniqueTest.java,test/com/google/javascript/jscomp/MakeDeclaredNamesUniqueTest.java,219,test(
True,test/com/google/javascript/jscomp/MakeDeclaredNamesUniqueTest.java,test/com/google/javascript/jscomp/MakeDeclaredNamesUniqueTest.java,220,"""function foo(){var arguments$$1;}"","
True,test/com/google/javascript/jscomp/MakeDeclaredNamesUniqueTest.java,test/com/google/javascript/jscomp/MakeDeclaredNamesUniqueTest.java,221,"""function foo(){var arguments$$0;}"");"
False,test/com/google/javascript/jscomp/MakeDeclaredNamesUniqueTest.java,test/com/google/javascript/jscomp/MakeDeclaredNamesUniqueTest.java,259,"function f(a, a$$1) {}"");"
True,test/com/google/javascript/jscomp/MakeDeclaredNamesUniqueTest.java,test/com/google/javascript/jscomp/MakeDeclaredNamesUniqueTest.java,266,"""function f(a, a$$0) {}"");"
False,test/com/google/javascript/jscomp/MakeDeclaredNamesUniqueTest.java,test/com/google/javascript/jscomp/MakeDeclaredNamesUniqueTest.java,263,"function f(a, a$$2) {}"");"
True,test/com/google/javascript/jscomp/MakeDeclaredNamesUniqueTest.java,test/com/google/javascript/jscomp/MakeDeclaredNamesUniqueTest.java,270,"""function f(a, a$$0) {}"");"
False,test/com/google/javascript/jscomp/MakeDeclaredNamesUniqueTest.java,test/com/google/javascript/jscomp/MakeDeclaredNamesUniqueTest.java,276,"estSame(""function () {"" +"
False,test/com/google/javascript/jscomp/MakeDeclaredNamesUniqueTest.java,test/com/google/javascript/jscomp/MakeDeclaredNamesUniqueTest.java,277,"try { } catch(e) {e;}; try { } catch(e$$1) {e$$1;}}"");"
True,test/com/google/javascript/jscomp/MakeDeclaredNamesUniqueTest.java,test/com/google/javascript/jscomp/MakeDeclaredNamesUniqueTest.java,283,"test(""function () {try { } catch(e) {e;}; try { } catch(e$$0) {e$$0;}}"","
True,test/com/google/javascript/jscomp/MakeDeclaredNamesUniqueTest.java,test/com/google/javascript/jscomp/MakeDeclaredNamesUniqueTest.java,284,"""function () {try { } catch(e) {e;}; try { } catch(e$$1) {e$$1;}}"");"
False,test/com/google/javascript/jscomp/MakeDeclaredNamesUniqueTest.java,test/com/google/javascript/jscomp/MakeDeclaredNamesUniqueTest.java,293,"  var a$$1;"" +"
True,test/com/google/javascript/jscomp/MakeDeclaredNamesUniqueTest.java,test/com/google/javascript/jscomp/MakeDeclaredNamesUniqueTest.java,300,"""  var a$$0;"" +"
False,test/com/google/javascript/jscomp/MakeDeclaredNamesUniqueTest.java,test/com/google/javascript/jscomp/MakeDeclaredNamesUniqueTest.java,307,"  var a$$1;"" +"
True,test/com/google/javascript/jscomp/MakeDeclaredNamesUniqueTest.java,test/com/google/javascript/jscomp/MakeDeclaredNamesUniqueTest.java,314,"""  var a$$0;"" +"
False,test/com/google/javascript/jscomp/MakeDeclaredNamesUniqueTest.java,test/com/google/javascript/jscomp/MakeDeclaredNamesUniqueTest.java,309,"    var a;a$$1++"" +"
True,test/com/google/javascript/jscomp/MakeDeclaredNamesUniqueTest.java,test/com/google/javascript/jscomp/MakeDeclaredNamesUniqueTest.java,316,"""    var a;a$$0++"" +"
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,24,import com.google.javascript.rhino.jstype.TernaryValue;
False,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,82,"ssertTrue(NodeUtil.getBooleanValue(getNode(""true"")));"
False,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,83,"ssertTrue(NodeUtil.getBooleanValue(getNode(""10"")));"
False,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,84,"ssertTrue(NodeUtil.getBooleanValue(getNode(""'0'"")));"
False,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,85,"ssertTrue(NodeUtil.getBooleanValue(getNode(""/a/"")));"
False,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,86,"ssertTrue(NodeUtil.getBooleanValue(getNode(""{}"")));"
False,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,87,"ssertTrue(NodeUtil.getBooleanValue(getNode(""[]"")));"
False,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,88,"ssertFalse(NodeUtil.getBooleanValue(getNode(""false"")));"
False,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,89,"ssertFalse(NodeUtil.getBooleanValue(getNode(""null"")));"
False,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,90,"ssertFalse(NodeUtil.getBooleanValue(getNode(""0"")));"
False,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,91,"ssertFalse(NodeUtil.getBooleanValue(getNode(""''"")));"
False,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,92,"ssertFalse(NodeUtil.getBooleanValue(getNode(""undefined"")));"
False,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,93,"ssertFalse(NodeUtil.getBooleanValue(getNode(""void 0"")));"
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,83,"assertBooleanTrue(""true"");"
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,84,"assertBooleanTrue(""10"");"
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,85,"assertBooleanTrue(""'0'"");"
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,86,"assertBooleanTrue(""/a/"");"
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,87,"assertBooleanTrue(""{}"");"
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,88,"assertBooleanTrue(""[]"");"
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,89,"assertBooleanFalse(""false"");"
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,90,"assertBooleanFalse(""null"");"
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,91,"assertBooleanFalse(""0"");"
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,92,"assertBooleanFalse(""''"");"
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,93,"assertBooleanFalse(""undefined"");"
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,94,"assertBooleanFalse(""void 0"");"
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,95,"assertBooleanUnknown(""b"");"
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,96,"assertBooleanUnknown(""-'0.0'"");"
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,99,private void assertBooleanTrue(String val) {
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,100,"assertEquals(TernaryValue.TRUE, NodeUtil.getBooleanValue(getNode(val)));"
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,103,private void assertBooleanFalse(String val) {
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,104,"assertEquals(TernaryValue.FALSE, NodeUtil.getBooleanValue(getNode(val)));"
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,107,private void assertBooleanUnknown(String val) {
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,108,"assertEquals(TernaryValue.UNKNOWN, NodeUtil.getBooleanValue(getNode(val)));"
True,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,672,public void testAnonymousFunction1() throws Exception {
True,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,673,"String source = ""(function (){})();"";"
True,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,675,"checkMarkedCalls(source, ImmutableList.<String>of("
True,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,676,"""FUNCTION""));"
True,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,679,public void testAnonymousFunction2() throws Exception {
True,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,680,"String source = ""(Error || function (){})();"";"
True,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,682,"checkMarkedCalls(source, ImmutableList.<String>of("
True,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,683,"""(Error || FUNCTION)""));"
True,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,686,public void testAnonymousFunction3() throws Exception {
True,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,687,"String source = ""var a = (Error || function (){})();"";"
True,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,689,"checkMarkedCalls(source, ImmutableList.<String>of("
True,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,690,"""(Error || FUNCTION)""));"
True,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,693,// Indirect complex function definitions aren't yet supported.
True,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,694,public void testAnonymousFunction4() throws Exception {
True,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,695,"String source = ""var a = (Error || function (){});"" +"
True,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,696,"""a();"";"
True,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,698,"// This should be ""(Error || FUNCTION)"" but isn't."
True,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,699,"checkMarkedCalls(source, ImmutableList.<String>of());"
False,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,760,"esult = node.getFirstChild().toString(false, false, false);"
False,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,761,"esult += "" "" + node.getLastChild().toString(false, false, false);"
True,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,790,if (node.getType() == Token.FUNCTION) {
True,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,791,"result = node.toString(false, false, false).trim();"
True,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,792,} else {
True,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,793,"result = node.getFirstChild().toString(false, false, false);"
True,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java,794,"result += "" "" + node.getLastChild().toString(false, false, false);"
True,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,1271,public void testParseNoCompile1() throws Exception {
True,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,1272,"assertTrue(parseFileOverview(""@nocompile*/"").isNoCompile());"
True,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,1275,public void testParseNoCompile2() throws Exception {
True,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,1276,"parseFileOverview(""@nocompile\n@nocompile*/"", ""extra @nocompile tag"");"
True,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,test/com/google/javascript/jscomp/parsing/JsDocInfoParserTest.java,2143,"""* @nocompile \n"" +"
