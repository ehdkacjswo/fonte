is_addition,old_file_path,new_file_path,line_num,content
False,src/com/google/javascript/jscomp/CheckGlobalThis.java,src/com/google/javascript/jscomp/CheckGlobalThis.java,19,mport com.google.javascript.jscomp.CheckLevel;
False,src/com/google/javascript/jscomp/CheckGlobalThis.java,src/com/google/javascript/jscomp/CheckGlobalThis.java,64,rivate final CheckLevel level;
False,src/com/google/javascript/jscomp/CheckGlobalThis.java,src/com/google/javascript/jscomp/CheckGlobalThis.java,73,"heckGlobalThis(AbstractCompiler compiler, CheckLevel level) {"
True,src/com/google/javascript/jscomp/CheckGlobalThis.java,src/com/google/javascript/jscomp/CheckGlobalThis.java,71,CheckGlobalThis(AbstractCompiler compiler) {
False,src/com/google/javascript/jscomp/CheckGlobalThis.java,src/com/google/javascript/jscomp/CheckGlobalThis.java,75,his.level = level;
False,src/com/google/javascript/jscomp/CheckGlobalThis.java,src/com/google/javascript/jscomp/CheckGlobalThis.java,159,"ompiler.report(t.makeError(n, level, GLOBAL_THIS));"
True,src/com/google/javascript/jscomp/CheckGlobalThis.java,src/com/google/javascript/jscomp/CheckGlobalThis.java,156,"compiler.report(t.makeError(n, GLOBAL_THIS));"
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,235,// DiagnosticGroups override the plain checkTypes option.
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,236,if (options.enables(DiagnosticGroups.CHECK_TYPES)) {
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,237,options.checkTypes = true;
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,238,} else if (options.disables(DiagnosticGroups.CHECK_TYPES)) {
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,239,options.checkTypes = false;
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,240,} else if (!options.checkTypes) {
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,241,// If DiagnosticGroups did not override the plain checkTypes
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,242,"// option, and checkTypes is enabled, then turn off the"
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,243,// parser type warnings.
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,244,options.setWarningLevel(
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,245,DiagnosticGroup.forType(
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,246,"RhinoErrorReporter.TYPE_PARSE_ERROR),"
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,247,CheckLevel.OFF);
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,250,if (options.checkGlobalThisLevel.isOn()) {
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,251,options.setWarningLevel(
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,252,"DiagnosticGroups.GLOBAL_THIS,"
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,253,options.checkGlobalThisLevel);
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,257,/ DiagnosticGroups override the plain checkTypes option.
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,258,f (options.enables(DiagnosticGroups.CHECK_TYPES)) {
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,259,ptions.checkTypes = true;
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,260, else if (options.disables(DiagnosticGroups.CHECK_TYPES)) {
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,261,ptions.checkTypes = false;
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,262, else if (!options.checkTypes) {
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,263,/ If DiagnosticGroups did not override the plain checkTypes
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,264,"/ option, and checkTypes is enabled, then turn off the"
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,265,/ parser type warnings.
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,266,uards.add(
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,267,ew DiagnosticGroupWarningsGuard(
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,268,iagnosticGroup.forType(
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,269,"hinoErrorReporter.TYPE_PARSE_ERROR),"
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,270,heckLevel.OFF));
False,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,184,ptions.checkGlobalThisLevel.isOn()) {
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,184,options.enables(DiagnosticGroups.GLOBAL_THIS)) {
False,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,702,heckLevel checkGlobalThisLevel = options.checkGlobalThisLevel;
False,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,703,f (checkGlobalThisLevel.isOn()) {
False,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,704,haredCallbacks.add(
False,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,705,"ew CheckGlobalThis(compiler, checkGlobalThisLevel));"
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,702,if (options.enables(DiagnosticGroups.GLOBAL_THIS)) {
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,703,sharedCallbacks.add(new CheckGlobalThis(compiler));
True,src/com/google/javascript/jscomp/DiagnosticGroups.java,src/com/google/javascript/jscomp/DiagnosticGroups.java,57,"// If a group is suppressable on a per-file basis, it should be added"
True,src/com/google/javascript/jscomp/DiagnosticGroups.java,src/com/google/javascript/jscomp/DiagnosticGroups.java,58,// to parser/ParserConfig.properties
False,src/com/google/javascript/jscomp/DiagnosticGroups.java,src/com/google/javascript/jscomp/DiagnosticGroups.java,59,"externsValidation, fileoverviewTags, internetExplorerChecks, "" +"
False,src/com/google/javascript/jscomp/DiagnosticGroups.java,src/com/google/javascript/jscomp/DiagnosticGroups.java,60,"invalidCasts, missingProperties, nonStandardJsDocs, "" +"
False,src/com/google/javascript/jscomp/DiagnosticGroups.java,src/com/google/javascript/jscomp/DiagnosticGroups.java,61,"strictModuleDepCheck, typeInvalidation, "" +"
True,src/com/google/javascript/jscomp/DiagnosticGroups.java,src/com/google/javascript/jscomp/DiagnosticGroups.java,62,"""externsValidation, fileoverviewTags, globalThis, "" +"
True,src/com/google/javascript/jscomp/DiagnosticGroups.java,src/com/google/javascript/jscomp/DiagnosticGroups.java,63,"""internetExplorerChecks, nvalidCasts, missingProperties, "" +"
True,src/com/google/javascript/jscomp/DiagnosticGroups.java,src/com/google/javascript/jscomp/DiagnosticGroups.java,64,"""nonStandardJsDocs, strictModuleDepCheck, typeInvalidation, "" +"
True,src/com/google/javascript/jscomp/DiagnosticGroups.java,src/com/google/javascript/jscomp/DiagnosticGroups.java,68,public static DiagnosticGroup GLOBAL_THIS = DiagnosticGroups
True,src/com/google/javascript/jscomp/DiagnosticGroups.java,src/com/google/javascript/jscomp/DiagnosticGroups.java,69,".registerGroup(""globalThis"","
True,src/com/google/javascript/jscomp/DiagnosticGroups.java,src/com/google/javascript/jscomp/DiagnosticGroups.java,70,new DiagnosticGroup(
True,src/com/google/javascript/jscomp/DiagnosticGroups.java,src/com/google/javascript/jscomp/DiagnosticGroups.java,71,CheckGlobalThis.GLOBAL_THIS));
False,src/com/google/javascript/jscomp/TypeValidator.java,src/com/google/javascript/jscomp/TypeValidator.java,509,f (n.getType() == Token.GETPROP) {
True,src/com/google/javascript/jscomp/TypeValidator.java,src/com/google/javascript/jscomp/TypeValidator.java,509,if (n.getType() == Token.GETPROP ||
True,src/com/google/javascript/jscomp/TypeValidator.java,src/com/google/javascript/jscomp/TypeValidator.java,510,"NodeUtil.isObjectLitKey(n, parent)) {"
False,test/com/google/javascript/jscomp/CheckGlobalThisTest.java,test/com/google/javascript/jscomp/CheckGlobalThisTest.java,19,mport com.google.javascript.jscomp.CheckLevel;
False,test/com/google/javascript/jscomp/CheckGlobalThisTest.java,test/com/google/javascript/jscomp/CheckGlobalThisTest.java,32,"ompiler, new CheckGlobalThis(compiler, CheckLevel.ERROR));"
True,test/com/google/javascript/jscomp/CheckGlobalThisTest.java,test/com/google/javascript/jscomp/CheckGlobalThisTest.java,30,"compiler, new CheckGlobalThis(compiler));"
False,test/com/google/javascript/jscomp/CheckGlobalThisTest.java,test/com/google/javascript/jscomp/CheckGlobalThisTest.java,36,"est(js, null, CheckGlobalThis.GLOBAL_THIS);"
True,test/com/google/javascript/jscomp/CheckGlobalThisTest.java,test/com/google/javascript/jscomp/CheckGlobalThisTest.java,34,"testSame(js, CheckGlobalThis.GLOBAL_THIS);"
True,test/com/google/javascript/jscomp/CheckGlobalThisTest.java,test/com/google/javascript/jscomp/CheckGlobalThisTest.java,239,public void testSuppressWarning() {
True,test/com/google/javascript/jscomp/CheckGlobalThisTest.java,test/com/google/javascript/jscomp/CheckGlobalThisTest.java,240,"testFailure(""var x = function() { this.complex = 5; };"");"
True,test/com/google/javascript/jscomp/CheckGlobalThisTest.java,test/com/google/javascript/jscomp/CheckGlobalThisTest.java,241,"testSame(""/** @suppress {globalThis} */"" +"
True,test/com/google/javascript/jscomp/CheckGlobalThisTest.java,test/com/google/javascript/jscomp/CheckGlobalThisTest.java,242,"""var x = function() { this.complex = 5; };"");"
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,117,public void testCheckGlobalThisOffByDefault() {
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,118,"testSame(""function f() { this.a = 3; }"");"
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,121,public void testCheckGlobalThisOnWithAdvancedMode() {
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,122,"args.add(""--compilation_level=ADVANCED_OPTIMIZATIONS"");"
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,123,"test(""function f() { this.a = 3; }"", CheckGlobalThis.GLOBAL_THIS);"
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,126,public void testCheckGlobalThisOnWithErrorFlag() {
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,127,"args.add(""--jscomp_error=globalThis"");"
True,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,128,"test(""function f() { this.a = 3; }"", CheckGlobalThis.GLOBAL_THIS);"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,6882,public void testObjectLiteralDeclaration4() throws Exception {
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,6883,testClosureTypesMultipleWarnings(
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,6884,"""var x = {"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,6885,"""  /** @param {boolean} x */ abc: function(x) {}"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,6887,"""/**\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,6888,""" * @param {string} x\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,6889,""" * @suppress {duplicate}\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,6890,""" */ x.abc = function(x) {};"","
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,6891,Lists.newArrayList(
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,6892,"""variable x.abc redefined with type "" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,6893,"""function (string): undefined, "" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,6894,"""original definition at  [testcode] :1 with type "" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,6895,"""function (boolean): undefined"","
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,6896,"""assignment to property abc of x\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,6897,"""found   : function (string): undefined\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,6898,"""required: function (boolean): undefined""));"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,6901,public void testObjectLiteralDeclaration5() throws Exception {
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,6902,testTypes(
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,6903,"""var x = {"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,6904,"""  /** @param {boolean} x */ abc: function(x) {}"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,6906,"""/**\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,6907,""" * @param {boolean} x\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,6908,""" * @suppress {duplicate}\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,6909,""" */ x.abc = function(x) {};"");"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,6912,public void testObjectLiteralDeclaration6() throws Exception {
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,6913,testTypes(
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,6914,"""var x = {};"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,6915,"""/**\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,6916,""" * @param {boolean} x\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,6917,""" * @suppress {duplicate}\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,6918,""" */ x.abc = function(x) {};"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,6919,"""x = {"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,6920,"""  /**\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,6921,"""   * @param {boolean} x\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,6922,"""   * @suppress {duplicate}\n"" +"
True,test/com/google/javascript/jscomp/TypeCheckTest.java,test/com/google/javascript/jscomp/TypeCheckTest.java,6924,"""  abc: function(x) {}"" +"
