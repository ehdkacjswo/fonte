is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,9,import com.fasterxml.jackson.core.util.ByteArrayBuilder;
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,22,private final static int INT_SPACE = 0x20;
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,345,/* Convenience conversion methods for String to/from bytes
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,346,/* use case.
False,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,352, Convenience method for converting given byte array as base64 encoded
False,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,353," String using this variant's settings, optionally enclosed in"
False,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,354, double-quotes.
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,363,* Convenience method for converting given byte array as base64 encoded String
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,364,"* using this variant's settings,"
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,365,* optionally enclosed in double-quotes.
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,420,"* Convenience method for decoding contents of a Base64-encoded String,"
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,421,* using this variant's settings.
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,423,* @param input
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,425,* @since 2.2.3
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,427,* @throws IllegalArgumentException if input is not valid base64 encoded data
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,429,public byte[] decode(String input) throws IllegalArgumentException
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,431,ByteArrayBuilder b = new ByteArrayBuilder();
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,432,"decode(input, b);"
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,433,return b.toByteArray();
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,437,"* Convenience method for decoding contents of a Base64-encoded String,"
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,438,* using this variant's settings
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,439,* and appending decoded binary data using provided {@link ByteArrayBuilder}.
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,440,*<p>
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,441,* NOTE: builder will NOT be reset before decoding (nor cleared afterwards);
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,442,"* assumption is that caller will ensure it is given in proper state, and"
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,443,* used as appropriate afterwards.
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,445,* @since 2.2.3
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,447,* @throws IllegalArgumentException if input is not valid base64 encoded data
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,449,"public void decode(String str, ByteArrayBuilder builder) throws IllegalArgumentException"
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,451,int ptr = 0;
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,452,int len = str.length();
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,454,main_loop:
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,455,while (ptr < len) {
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,456,"// first, we'll skip preceding white space, if any"
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,457,char ch;
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,458,do {
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,459,ch = str.charAt(ptr++);
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,460,if (ptr >= len) {
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,461,break main_loop;
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,463,} while (ch <= INT_SPACE);
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,464,int bits = decodeBase64Char(ch);
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,465,if (bits < 0) {
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,466,"_reportInvalidBase64(ch, 0, null);"
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,468,int decodedData = bits;
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,469,"// then second base64 char; can't get padding yet, nor ws"
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,470,if (ptr >= len) {
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,471,_reportBase64EOF();
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,473,ch = str.charAt(ptr++);
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,474,bits = decodeBase64Char(ch);
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,475,if (bits < 0) {
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,476,"_reportInvalidBase64(ch, 1, null);"
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,478,decodedData = (decodedData << 6) | bits;
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,479,"// third base64 char; can be padding, but not ws"
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,480,if (ptr >= len) {
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,481,"// but as per [JACKSON-631] can be end-of-input, iff not using padding"
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,482,if (!usesPadding()) {
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,483,decodedData >>= 4;
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,484,builder.append(decodedData);
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,485,break;
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,487,_reportBase64EOF();
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,489,ch = str.charAt(ptr++);
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,490,bits = decodeBase64Char(ch);
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,492,// First branch: can get padding (-> 1 byte)
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,493,if (bits < 0) {
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,494,if (bits != Base64Variant.BASE64_VALUE_PADDING) {
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,495,"_reportInvalidBase64(ch, 2, null);"
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,497,"// Ok, must get padding"
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,498,if (ptr >= len) {
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,499,_reportBase64EOF();
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,501,ch = str.charAt(ptr++);
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,502,if (!usesPaddingChar(ch)) {
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,503,"_reportInvalidBase64(ch, 3, ""expected padding character '""+getPaddingChar()+""'"");"
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,505,"// Got 12 bits, only need 8, need to shift"
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,506,decodedData >>= 4;
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,507,builder.append(decodedData);
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,508,continue;
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,510,"// Nope, 2 or 3 bytes"
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,511,decodedData = (decodedData << 6) | bits;
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,512,"// fourth and last base64 char; can be padding, but not ws"
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,513,if (ptr >= len) {
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,514,"// but as per [JACKSON-631] can be end-of-input, iff not using padding"
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,515,if (!usesPadding()) {
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,516,decodedData >>= 2;
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,517,builder.appendTwoBytes(decodedData);
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,518,break;
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,520,_reportBase64EOF();
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,522,ch = str.charAt(ptr++);
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,523,bits = decodeBase64Char(ch);
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,524,if (bits < 0) {
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,525,if (bits != Base64Variant.BASE64_VALUE_PADDING) {
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,526,"_reportInvalidBase64(ch, 3, null);"
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,528,decodedData >>= 2;
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,529,builder.appendTwoBytes(decodedData);
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,530,} else {
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,531,"// otherwise, our triple is now complete"
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,532,decodedData = (decodedData << 6) | bits;
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,533,builder.appendThreeBytes(decodedData);
False,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,410,* other methods
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,540,/* Overridden standard methods
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,547,@Override
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,548,public boolean equals(Object o) {
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,549,// identity comparison should be dine
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,550,return (o == this);
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,553,@Override
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,554,public int hashCode() {
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,555,return _name.hashCode();
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,560,/* Internal helper methods
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,565,* @param bindex Relative index within base64 character unit; between 0
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,566,*   and 3 (as unit has exactly 4 characters)
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,568,"protected void _reportInvalidBase64(char ch, int bindex, String msg)"
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,569,throws IllegalArgumentException
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,571,String base;
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,572,if (ch <= INT_SPACE) {
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,573,"base = ""Illegal white space character (code 0x""+Integer.toHexString(ch)+"") as character #""+(bindex+1)+"" of 4-char base64 unit: can only used between units"";"
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,574,} else if (usesPaddingChar(ch)) {
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,575,"base = ""Unexpected padding character ('""+getPaddingChar()+""') as character #""+(bindex+1)+"" of 4-char base64 unit: padding only legal as 3rd or 4th character"";"
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,576,} else if (!Character.isDefined(ch) || Character.isISOControl(ch)) {
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,577,// Not sure if we can really get here... ? (most illegal xml chars are caught at lower level)
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,578,"base = ""Illegal character (code 0x""+Integer.toHexString(ch)+"") in base64 content"";"
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,579,} else {
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,580,"base = ""Illegal character '""+ch+""' (code 0x""+Integer.toHexString(ch)+"") in base64 content"";"
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,582,if (msg != null) {
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,583,"base = base + "": "" + msg;"
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,585,throw new IllegalArgumentException(base);
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,588,protected void _reportBase64EOF() throws IllegalArgumentException {
True,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,src/main/java/com/fasterxml/jackson/core/Base64Variant.java,589,"throw new IllegalArgumentException(""Unexpected end-of-String in base64 content"");"
True,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,135,"@SuppressWarnings(""incomplete-switch"")"
True,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,257,"@SuppressWarnings(""incomplete-switch"")"
True,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,288,"@SuppressWarnings(""incomplete-switch"")"
True,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,338,default:
True,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,344,"@SuppressWarnings(""incomplete-switch"")"
False,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,391,nt ptr = 0;
False,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,392,nt len = str.length();
False,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,394,ain_loop:
False,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,395,hile (ptr < len) {
False,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,396,"/ first, we'll skip preceding white space, if any"
False,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,397,har ch;
False,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,398,o {
False,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,399,h = str.charAt(ptr++);
False,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,400,f (ptr >= len) {
False,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,401,reak main_loop;
False,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,403, while (ch <= INT_SPACE);
False,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,404,nt bits = b64variant.decodeBase64Char(ch);
False,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,405,f (bits < 0) {
False,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,406,"reportInvalidBase64(b64variant, ch, 0, null);"
False,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,408,nt decodedData = bits;
False,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,409,"/ then second base64 char; can't get padding yet, nor ws"
False,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,410,f (ptr >= len) {
False,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,411,reportBase64EOF();
False,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,413,h = str.charAt(ptr++);
False,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,414,its = b64variant.decodeBase64Char(ch);
False,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,415,f (bits < 0) {
False,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,416,"reportInvalidBase64(b64variant, ch, 1, null);"
False,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,418,ecodedData = (decodedData << 6) | bits;
False,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,419,"/ third base64 char; can be padding, but not ws"
False,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,420,f (ptr >= len) {
False,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,421,"/ but as per [JACKSON-631] can be end-of-input, iff not using padding"
False,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,422,f (!b64variant.usesPadding()) {
False,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,423,ecodedData >>= 4;
False,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,424,uilder.append(decodedData);
False,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,425,reak;
False,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,427,reportBase64EOF();
False,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,429,h = str.charAt(ptr++);
False,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,430,its = b64variant.decodeBase64Char(ch);
False,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,432,/ First branch: can get padding (-> 1 byte)
False,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,433,f (bits < 0) {
False,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,434,f (bits != Base64Variant.BASE64_VALUE_PADDING) {
False,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,435,"reportInvalidBase64(b64variant, ch, 2, null);"
False,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,437,"/ Ok, must get padding"
False,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,438,f (ptr >= len) {
False,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,439,reportBase64EOF();
False,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,441,h = str.charAt(ptr++);
False,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,442,f (!b64variant.usesPaddingChar(ch)) {
False,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,443,"reportInvalidBase64(b64variant, ch, 3, ""expected padding character '""+b64variant.getPaddingChar()+""'"");"
False,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,445,"/ Got 12 bits, only need 8, need to shift"
False,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,446,ecodedData >>= 4;
False,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,447,uilder.append(decodedData);
False,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,448,ontinue;
False,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,450,"/ Nope, 2 or 3 bytes"
False,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,451,ecodedData = (decodedData << 6) | bits;
False,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,452,"/ fourth and last base64 char; can be padding, but not ws"
False,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,453,f (ptr >= len) {
False,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,454,"/ but as per [JACKSON-631] can be end-of-input, iff not using padding"
False,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,455,f (!b64variant.usesPadding()) {
False,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,456,ecodedData >>= 2;
False,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,457,uilder.appendTwoBytes(decodedData);
False,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,458,reak;
False,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,460,reportBase64EOF();
False,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,462,h = str.charAt(ptr++);
False,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,463,its = b64variant.decodeBase64Char(ch);
False,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,464,f (bits < 0) {
False,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,465,f (bits != Base64Variant.BASE64_VALUE_PADDING) {
False,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,466,"reportInvalidBase64(b64variant, ch, 3, null);"
False,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,468,ecodedData >>= 2;
False,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,469,uilder.appendTwoBytes(decodedData);
False,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,470, else {
False,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,471,"/ otherwise, our triple is now complete"
False,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,472,ecodedData = (decodedData << 6) | bits;
False,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,473,uilder.appendThreeBytes(decodedData);
True,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,396,// just call helper method introduced in 2.2.3
True,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,397,try {
True,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,398,"b64variant.decode(str, builder);"
True,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,399,} catch (IllegalArgumentException e) {
True,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,400,_reportError(e.getMessage());
True,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,408,* @deprecated in 2.2.3; should migrate away
True,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,410,@Deprecated
True,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,433,* @deprecated in 2.2.3; should migrate away
True,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,src/main/java/com/fasterxml/jackson/core/base/ParserMinimalBase.java,435,@Deprecated
