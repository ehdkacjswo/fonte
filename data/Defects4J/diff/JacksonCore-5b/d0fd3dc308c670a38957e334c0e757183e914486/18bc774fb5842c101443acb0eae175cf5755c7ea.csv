is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/com/fasterxml/jackson/core/sym/BytesToNameCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/BytesToNameCanonicalizer.java,51, And to support reduce likelihood of accidental collisions causing
True,src/main/java/com/fasterxml/jackson/core/sym/BytesToNameCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/BytesToNameCanonicalizer.java,51,* And to reduce likelihood of accidental collisions causing
False,src/main/java/com/fasterxml/jackson/core/sym/BytesToNameCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/BytesToNameCanonicalizer.java,66, We will also need to defin
True,src/main/java/com/fasterxml/jackson/core/sym/BytesToNameCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/BytesToNameCanonicalizer.java,66,"* We will also need to define initial size for collision list,"
True,src/main/java/com/fasterxml/jackson/core/sym/BytesToNameCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/BytesToNameCanonicalizer.java,67,* when copying it.
False,src/main/java/com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer.java,87, And to support reduce likelihood of accidental collisons causing
True,src/main/java/com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer.java,src/main/java/com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer.java,87,* And to reduce likelihood of accidental collisions causing
True,src/test/java/com/fasterxml/jackson/core/json/TestWithTonsaSymbols.java,src/test/java/com/fasterxml/jackson/core/json/TestWithTonsaSymbols.java,3,import java.io.*;
False,src/test/java/com/fasterxml/jackson/core/json/TestWithTonsaSymbols.java,src/test/java/com/fasterxml/jackson/core/json/TestWithTonsaSymbols.java,7,mport java.io.*;
False,src/test/java/com/fasterxml/jackson/core/json/TestWithTonsaSymbols.java,src/test/java/com/fasterxml/jackson/core/json/TestWithTonsaSymbols.java,24,ublic void testStreamReaderParser() throws Exception
True,src/test/java/com/fasterxml/jackson/core/json/TestWithTonsaSymbols.java,src/test/java/com/fasterxml/jackson/core/json/TestWithTonsaSymbols.java,23,public void testStreamReaderParser() throws Exception {
False,src/test/java/com/fasterxml/jackson/core/json/TestWithTonsaSymbols.java,src/test/java/com/fasterxml/jackson/core/json/TestWithTonsaSymbols.java,29,ublic void testReaderParser() throws Exception
True,src/test/java/com/fasterxml/jackson/core/json/TestWithTonsaSymbols.java,src/test/java/com/fasterxml/jackson/core/json/TestWithTonsaSymbols.java,27,public void testReaderParser() throws Exception {
True,src/test/java/failing/TestHashCollision.java,src/test/java/failing/TestHashCollision.java,1,package failing;
True,src/test/java/failing/TestHashCollision.java,src/test/java/failing/TestHashCollision.java,3,import java.util.*;
True,src/test/java/failing/TestHashCollision.java,src/test/java/failing/TestHashCollision.java,5,import com.fasterxml.jackson.core.*;
True,src/test/java/failing/TestHashCollision.java,src/test/java/failing/TestHashCollision.java,6,import com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer;
True,src/test/java/failing/TestHashCollision.java,src/test/java/failing/TestHashCollision.java,7,import com.fasterxml.jackson.test.BaseTest;
True,src/test/java/failing/TestHashCollision.java,src/test/java/failing/TestHashCollision.java,10,* Some unit tests to try to exercise part of parser code that
True,src/test/java/failing/TestHashCollision.java,src/test/java/failing/TestHashCollision.java,11,* deals with symbol (table) management.
True,src/test/java/failing/TestHashCollision.java,src/test/java/failing/TestHashCollision.java,13,public class TestHashCollision
True,src/test/java/failing/TestHashCollision.java,src/test/java/failing/TestHashCollision.java,14,extends BaseTest
True,src/test/java/failing/TestHashCollision.java,src/test/java/failing/TestHashCollision.java,16,// // // And then a nastier variant; collisions generated using
True,src/test/java/failing/TestHashCollision.java,src/test/java/failing/TestHashCollision.java,17,// // // CollisionGenerator
True,src/test/java/failing/TestHashCollision.java,src/test/java/failing/TestHashCollision.java,19,final static String[] MULT_33_COLLISION_FRAGMENTS = new String[] {
True,src/test/java/failing/TestHashCollision.java,src/test/java/failing/TestHashCollision.java,20,// Ones generated for 65536...
True,src/test/java/failing/TestHashCollision.java,src/test/java/failing/TestHashCollision.java,21,"""9fa"", ""9g@"", "":Ea"", "":F@"", "";$a"", "";%@"""
True,src/test/java/failing/TestHashCollision.java,src/test/java/failing/TestHashCollision.java,24,public void testReaderCollisions() throws Exception
True,src/test/java/failing/TestHashCollision.java,src/test/java/failing/TestHashCollision.java,26,StringBuilder sb = new StringBuilder();
True,src/test/java/failing/TestHashCollision.java,src/test/java/failing/TestHashCollision.java,27,for (String field : collisions()) {
True,src/test/java/failing/TestHashCollision.java,src/test/java/failing/TestHashCollision.java,28,if (sb.length() == 0) {
True,src/test/java/failing/TestHashCollision.java,src/test/java/failing/TestHashCollision.java,29,"sb.append(""{"");"
True,src/test/java/failing/TestHashCollision.java,src/test/java/failing/TestHashCollision.java,30,} else {
True,src/test/java/failing/TestHashCollision.java,src/test/java/failing/TestHashCollision.java,31,"sb.append("",\n"");"
True,src/test/java/failing/TestHashCollision.java,src/test/java/failing/TestHashCollision.java,33,"sb.append('""');"
True,src/test/java/failing/TestHashCollision.java,src/test/java/failing/TestHashCollision.java,34,sb.append(field);
True,src/test/java/failing/TestHashCollision.java,src/test/java/failing/TestHashCollision.java,35,"sb.append(""\"":3"");"
True,src/test/java/failing/TestHashCollision.java,src/test/java/failing/TestHashCollision.java,37,"sb.append(""}"");"
True,src/test/java/failing/TestHashCollision.java,src/test/java/failing/TestHashCollision.java,39,JsonFactory jf = new JsonFactory();
True,src/test/java/failing/TestHashCollision.java,src/test/java/failing/TestHashCollision.java,40,JsonParser jp = jf.createParser(sb.toString());
True,src/test/java/failing/TestHashCollision.java,src/test/java/failing/TestHashCollision.java,41,while (jp.nextToken() != null) {
True,src/test/java/failing/TestHashCollision.java,src/test/java/failing/TestHashCollision.java,44,"// and if we got here, fine"
True,src/test/java/failing/TestHashCollision.java,src/test/java/failing/TestHashCollision.java,49,/* Helper methods
True,src/test/java/failing/TestHashCollision.java,src/test/java/failing/TestHashCollision.java,53,static List<String> collisions() {
True,src/test/java/failing/TestHashCollision.java,src/test/java/failing/TestHashCollision.java,54,"// we'll get 6^4, which is bit over 1k"
True,src/test/java/failing/TestHashCollision.java,src/test/java/failing/TestHashCollision.java,55,ArrayList<String> result = new ArrayList<String>(36 * 36);
True,src/test/java/failing/TestHashCollision.java,src/test/java/failing/TestHashCollision.java,56,for (String str1 : MULT_33_COLLISION_FRAGMENTS) {
True,src/test/java/failing/TestHashCollision.java,src/test/java/failing/TestHashCollision.java,57,for (String str2 : MULT_33_COLLISION_FRAGMENTS) {
True,src/test/java/failing/TestHashCollision.java,src/test/java/failing/TestHashCollision.java,58,for (String str3 : MULT_33_COLLISION_FRAGMENTS) {
True,src/test/java/failing/TestHashCollision.java,src/test/java/failing/TestHashCollision.java,59,for (String str4 : MULT_33_COLLISION_FRAGMENTS) {
True,src/test/java/failing/TestHashCollision.java,src/test/java/failing/TestHashCollision.java,60,result.add(str1+str2+str3+str4);
True,src/test/java/failing/TestHashCollision.java,src/test/java/failing/TestHashCollision.java,65,return result;
True,src/test/java/failing/TestHashCollision.java,src/test/java/failing/TestHashCollision.java,70,/* Helper class(es)
True,src/test/java/failing/TestHashCollision.java,src/test/java/failing/TestHashCollision.java,75,* Helper class to use for generating substrings to use for substring
True,src/test/java/failing/TestHashCollision.java,src/test/java/failing/TestHashCollision.java,76,* substitution collisions.
True,src/test/java/failing/TestHashCollision.java,src/test/java/failing/TestHashCollision.java,78,public static class CollisionGenerator
True,src/test/java/failing/TestHashCollision.java,src/test/java/failing/TestHashCollision.java,80,"/* JDK uses 31, but Jackson `CharsToNameCanonicalizer.HASH_MULT`,"
True,src/test/java/failing/TestHashCollision.java,src/test/java/failing/TestHashCollision.java,81,* which for 2.3 is 33.
True,src/test/java/failing/TestHashCollision.java,src/test/java/failing/TestHashCollision.java,84,final static int MULT = CharsToNameCanonicalizer.HASH_MULT;
True,src/test/java/failing/TestHashCollision.java,src/test/java/failing/TestHashCollision.java,86,public void generate3(int h0) {
True,src/test/java/failing/TestHashCollision.java,src/test/java/failing/TestHashCollision.java,87,int p1 = MULT;
True,src/test/java/failing/TestHashCollision.java,src/test/java/failing/TestHashCollision.java,88,int p0 = MULT * MULT;
True,src/test/java/failing/TestHashCollision.java,src/test/java/failing/TestHashCollision.java,90,// Generate chars in printable ASCII range
True,src/test/java/failing/TestHashCollision.java,src/test/java/failing/TestHashCollision.java,92,final char minChar = (char) 32;
True,src/test/java/failing/TestHashCollision.java,src/test/java/failing/TestHashCollision.java,93,//        final char maxChar = (char) 127;
True,src/test/java/failing/TestHashCollision.java,src/test/java/failing/TestHashCollision.java,94,final char maxChar = (char) 127;
True,src/test/java/failing/TestHashCollision.java,src/test/java/failing/TestHashCollision.java,96,for (char c0 = minChar; c0 <= maxChar && c0 <= h0 / p0; c0++) {
True,src/test/java/failing/TestHashCollision.java,src/test/java/failing/TestHashCollision.java,97,int h1 = h0 - c0 * p0;
True,src/test/java/failing/TestHashCollision.java,src/test/java/failing/TestHashCollision.java,98,for (char c1 = minChar; c1 <= maxChar && c1 <= h1 / p1; c1++) {
True,src/test/java/failing/TestHashCollision.java,src/test/java/failing/TestHashCollision.java,99,int h2 = h1 - c1 * p1;
True,src/test/java/failing/TestHashCollision.java,src/test/java/failing/TestHashCollision.java,101,if (h2 < minChar || h2 > maxChar) {
True,src/test/java/failing/TestHashCollision.java,src/test/java/failing/TestHashCollision.java,102,continue;
True,src/test/java/failing/TestHashCollision.java,src/test/java/failing/TestHashCollision.java,104,char c2 = (char) h2;
True,src/test/java/failing/TestHashCollision.java,src/test/java/failing/TestHashCollision.java,105,if (h2 != c2) {
True,src/test/java/failing/TestHashCollision.java,src/test/java/failing/TestHashCollision.java,106,continue;
True,src/test/java/failing/TestHashCollision.java,src/test/java/failing/TestHashCollision.java,108,"printString(new String(new char[] { c0, c1, c2 } ));"
True,src/test/java/failing/TestHashCollision.java,src/test/java/failing/TestHashCollision.java,113,void printString(String s) {
True,src/test/java/failing/TestHashCollision.java,src/test/java/failing/TestHashCollision.java,114,"//System.out.println(s.length() + "" "" + s.hashCode() + "" "" + asIntArray(s));"
True,src/test/java/failing/TestHashCollision.java,src/test/java/failing/TestHashCollision.java,115,"System.out.println(s.length() + "" "" + s.hashCode() + "" \"""" + s + ""\"""");"
True,src/test/java/failing/TestHashCollision.java,src/test/java/failing/TestHashCollision.java,118,String asIntArray(String s) {
True,src/test/java/failing/TestHashCollision.java,src/test/java/failing/TestHashCollision.java,119,"StringBuilder result = new StringBuilder().append(""["");"
True,src/test/java/failing/TestHashCollision.java,src/test/java/failing/TestHashCollision.java,120,for (int c = 0; c < s.length(); c++) {
True,src/test/java/failing/TestHashCollision.java,src/test/java/failing/TestHashCollision.java,121,if (c > 0) {
True,src/test/java/failing/TestHashCollision.java,src/test/java/failing/TestHashCollision.java,122,"result.append("", "");"
True,src/test/java/failing/TestHashCollision.java,src/test/java/failing/TestHashCollision.java,124,result.append((int) s.charAt(c));
True,src/test/java/failing/TestHashCollision.java,src/test/java/failing/TestHashCollision.java,126,"result.append(""]"");"
True,src/test/java/failing/TestHashCollision.java,src/test/java/failing/TestHashCollision.java,127,return result.toString();
True,src/test/java/failing/TestHashCollision.java,src/test/java/failing/TestHashCollision.java,130,public static void main(String[] args) {
True,src/test/java/failing/TestHashCollision.java,src/test/java/failing/TestHashCollision.java,131,"System.out.println(""<stuff>"");"
True,src/test/java/failing/TestHashCollision.java,src/test/java/failing/TestHashCollision.java,132,//          new CollisionGenerator().generate3(1 << 20);
True,src/test/java/failing/TestHashCollision.java,src/test/java/failing/TestHashCollision.java,133,new CollisionGenerator().generate3(1 << 16);
True,src/test/java/failing/TestHashCollision.java,src/test/java/failing/TestHashCollision.java,135,System.out.println();
True,src/test/java/failing/TestHashCollision.java,src/test/java/failing/TestHashCollision.java,136,"System.out.println(""</stuff>"");"
True,src/test/java/perf/CollisionGenerator.java,src/test/java/perf/CollisionGenerator.java,1,package perf;
True,src/test/java/perf/CollisionGenerator.java,src/test/java/perf/CollisionGenerator.java,3,import com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer;
True,src/test/java/perf/CollisionGenerator.java,src/test/java/perf/CollisionGenerator.java,5,public class CollisionGenerator
True,src/test/java/perf/CollisionGenerator.java,src/test/java/perf/CollisionGenerator.java,7,"/* JDK uses 31, but Jackson `CharsToNameCanonicalizer.HASH_MULT`,"
True,src/test/java/perf/CollisionGenerator.java,src/test/java/perf/CollisionGenerator.java,8,* which for 2.3 is 33.
True,src/test/java/perf/CollisionGenerator.java,src/test/java/perf/CollisionGenerator.java,11,final static int MULT = CharsToNameCanonicalizer.HASH_MULT;
True,src/test/java/perf/CollisionGenerator.java,src/test/java/perf/CollisionGenerator.java,13,public void generate3(int h0) {
True,src/test/java/perf/CollisionGenerator.java,src/test/java/perf/CollisionGenerator.java,14,int p1 = MULT;
True,src/test/java/perf/CollisionGenerator.java,src/test/java/perf/CollisionGenerator.java,15,int p0 = MULT * MULT;
True,src/test/java/perf/CollisionGenerator.java,src/test/java/perf/CollisionGenerator.java,17,// Generate chars in printable ASCII range
True,src/test/java/perf/CollisionGenerator.java,src/test/java/perf/CollisionGenerator.java,19,final char minChar = (char) 32;
True,src/test/java/perf/CollisionGenerator.java,src/test/java/perf/CollisionGenerator.java,20,//    final char maxChar = (char) 127;
True,src/test/java/perf/CollisionGenerator.java,src/test/java/perf/CollisionGenerator.java,21,final char maxChar = (char) 127;
True,src/test/java/perf/CollisionGenerator.java,src/test/java/perf/CollisionGenerator.java,23,for (char c0 = minChar; c0 <= maxChar && c0 <= h0 / p0; c0++) {
True,src/test/java/perf/CollisionGenerator.java,src/test/java/perf/CollisionGenerator.java,24,int h1 = h0 - c0 * p0;
True,src/test/java/perf/CollisionGenerator.java,src/test/java/perf/CollisionGenerator.java,25,for (char c1 = minChar; c1 <= maxChar && c1 <= h1 / p1; c1++) {
True,src/test/java/perf/CollisionGenerator.java,src/test/java/perf/CollisionGenerator.java,26,int h2 = h1 - c1 * p1;
True,src/test/java/perf/CollisionGenerator.java,src/test/java/perf/CollisionGenerator.java,28,if (h2 < minChar || h2 > maxChar) {
True,src/test/java/perf/CollisionGenerator.java,src/test/java/perf/CollisionGenerator.java,29,continue;
True,src/test/java/perf/CollisionGenerator.java,src/test/java/perf/CollisionGenerator.java,31,char c2 = (char) h2;
True,src/test/java/perf/CollisionGenerator.java,src/test/java/perf/CollisionGenerator.java,32,if (h2 != c2) {
True,src/test/java/perf/CollisionGenerator.java,src/test/java/perf/CollisionGenerator.java,33,continue;
True,src/test/java/perf/CollisionGenerator.java,src/test/java/perf/CollisionGenerator.java,35,"printString(new String(new char[] { c0, c1, c2 } ));"
True,src/test/java/perf/CollisionGenerator.java,src/test/java/perf/CollisionGenerator.java,40,void printString(String s) {
True,src/test/java/perf/CollisionGenerator.java,src/test/java/perf/CollisionGenerator.java,41,"//System.out.println(s.length() + "" "" + s.hashCode() + "" "" + asIntArray(s));"
True,src/test/java/perf/CollisionGenerator.java,src/test/java/perf/CollisionGenerator.java,42,"System.out.println(s.length() + "" "" + s.hashCode() + "" \"""" + s + ""\"""");"
True,src/test/java/perf/CollisionGenerator.java,src/test/java/perf/CollisionGenerator.java,45,String asIntArray(String s) {
True,src/test/java/perf/CollisionGenerator.java,src/test/java/perf/CollisionGenerator.java,46,"StringBuilder result = new StringBuilder().append(""["");"
True,src/test/java/perf/CollisionGenerator.java,src/test/java/perf/CollisionGenerator.java,47,for (int c = 0; c < s.length(); c++) {
True,src/test/java/perf/CollisionGenerator.java,src/test/java/perf/CollisionGenerator.java,48,if (c > 0) {
True,src/test/java/perf/CollisionGenerator.java,src/test/java/perf/CollisionGenerator.java,49,"result.append("", "");"
True,src/test/java/perf/CollisionGenerator.java,src/test/java/perf/CollisionGenerator.java,51,result.append((int) s.charAt(c));
True,src/test/java/perf/CollisionGenerator.java,src/test/java/perf/CollisionGenerator.java,53,"result.append(""]"");"
True,src/test/java/perf/CollisionGenerator.java,src/test/java/perf/CollisionGenerator.java,54,return result.toString();
True,src/test/java/perf/CollisionGenerator.java,src/test/java/perf/CollisionGenerator.java,57,public static void main(String[] args) {
True,src/test/java/perf/CollisionGenerator.java,src/test/java/perf/CollisionGenerator.java,58,"System.out.println(""<stuff>"");"
True,src/test/java/perf/CollisionGenerator.java,src/test/java/perf/CollisionGenerator.java,59,//      new CollisionGenerator().generate3(1 << 20);
True,src/test/java/perf/CollisionGenerator.java,src/test/java/perf/CollisionGenerator.java,60,new CollisionGenerator().generate3(1 << 16);
True,src/test/java/perf/CollisionGenerator.java,src/test/java/perf/CollisionGenerator.java,62,System.out.println();
True,src/test/java/perf/CollisionGenerator.java,src/test/java/perf/CollisionGenerator.java,63,"System.out.println(""</stuff>"");"
