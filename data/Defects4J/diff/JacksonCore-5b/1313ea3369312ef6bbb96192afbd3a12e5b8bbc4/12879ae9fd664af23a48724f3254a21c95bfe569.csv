is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,26," @deprecated Since 2.2, use of version file is deprecated, and generated"
False,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,27,    class should be used instead.
False,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,29,Deprecated
False,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,30,"ublic final static String VERSION_FILE = ""VERSION.txt"";"
False,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,31,"ublic final static String PACKAGE_VERSION_CLASS_NAME = ""PackageVersion"";"
False,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,32,"/    public final static String PACKAGE_VERSION_FIELD = ""VERSION"";"
False,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,40,"* Instance life-cycle, accesso"
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,31,/* Instance life-cycle
False,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,53,"ystem.err.println(""ERROR: Failed to load Version information for bundle (via ""+getClass().getName()+"")."");"
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,44,"System.err.println(""ERROR: Failed to load Version information from ""+getClass());"
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,73,"@SuppressWarnings(""resource"")"
False,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,89,inal InputStream in = cls.getResourceAsStream(VERSION_FILE);
False,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,91,f (in == null)
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,80,"final InputStream in = cls.getResourceAsStream(""VERSION.txt"");"
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,81,if (in == null) {
False,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,96,ry {
False,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,97,eturn doReadVersion(reader);
False,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,98, finally {
False,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,99,ry {
False,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,100,eader.close();
False,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,101, catch (IOException ignored) {
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,86,return doReadVersion(reader);
False,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,107,ry {
False,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,108,n.close();
False,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,109, catch (IOException e) {
False,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,110,hrow new RuntimeException(e);
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,90,_close(in);
False,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,124,lass<?> versionInfoClass = null;
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,103,Class<?> vClass = null;
False,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,126,ackage p = cls.getPackage();
False,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,127,tring versionInfoClassName =
False,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,128,ew StringBuilder(p.getName())
False,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,129,"append(""."")"
False,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,130,append(PACKAGE_VERSION_CLASS_NAME)
False,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,131,toString();
False,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,132,"ersionInfoClass = Class.forName(versionInfoClassName, true, cls.getClassLoader());"
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,105,"String versionInfoClassName = cls.getPackage().getName() + "".PackageVersion"";"
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,106,"vClass = Class.forName(versionInfoClassName, true, cls.getClassLoader());"
False,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,136,f (versionInfoClass == null) {
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,110,if (vClass == null) {
False,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,142, = versionInfoClass.newInstance();
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,116,v = vClass.newInstance();
False,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,146,"hrow new IllegalArgumentException(""Failed to instantiate ""+versionInfoClass.getName()"
False,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,147,""" to find version information, problem: ""+e.getMessage(), e);"
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,120,"throw new IllegalArgumentException(""Failed to create ""+vClass+"": ""+e.getMessage(), e);"
False,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,150,"hrow new IllegalArgumentException(""Bad version class ""+versionInfoClass.getName()"
False,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,151,""": does not implement ""+Versioned.class.getName());"
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,123,"throw new IllegalArgumentException(""""+vClass+"": does not implement Versioned"");"
False,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,163,f (version != null) {
False,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,164,roup = br.readLine();
False,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,165,f (group != null)
False,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,166,rtifact = br.readLine();
False,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,168, catch (IOException ignored) {
False,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,169, finally {
False,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,170,ry {
False,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,171,r.close();
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,135,if (version != null) {
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,136,group = br.readLine();
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,137,if (group != null) {
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,138,artifact = br.readLine();
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,142,} finally {
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,143,_close(br);
False,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,177,f (group != null)
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,147,if (group != null) {
False,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,179,f (artifact != null)
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,150,if (artifact != null) {
False,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,195,"ublic static Version mavenVersionFor(ClassLoader classLoader, String groupId, String artifactId) {"
False,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,196,"nputStream pomPoperties = classLoader.getResourceAsStream(""META-INF/maven/"" + groupId.replaceAll(""\\."", ""/"")"
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,167,"@SuppressWarnings(""resource"")"
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,168,"public static Version mavenVersionFor(ClassLoader classLoader, String groupId, String artifactId)"
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,170,"InputStream pomProperties = classLoader.getResourceAsStream(""META-INF/maven/"" + groupId.replaceAll(""\\."", ""/"")"
False,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,198,f (pomPoperties != null) {
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,172,if (pomProperties != null) {
False,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,201,rops.load(pomPoperties);
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,175,props.load(pomProperties);
False,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,209,ry {
False,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,210,omPoperties.close();
False,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,211, catch (IOException e) {
False,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,212,/ Ignore
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,183,_close(pomProperties);
False,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,220, Use variant that takes three arguments instead
False,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,222, @deprecated
False,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,224,Deprecated
False,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,225,ublic static Version parseVersion(String versionStr) {
False,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,226,"eturn parseVersion(versionStr, null, null);"
False,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,231,f (versionStr == null) {
False,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,232,eturn null;
False,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,234,ersionStr = versionStr.trim();
False,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,235,f (versionStr.length() == 0) {
False,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,236,eturn null;
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,191,if (versionStr != null && (versionStr = versionStr.trim()).length() > 0) {
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,192,String[] parts = VERSION_SEPARATOR.split(versionStr);
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,193,int major = parseVersionPart(parts[0]);
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,194,int minor = (parts.length > 1) ? parseVersionPart(parts[1]) : 0;
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,195,int patch = (parts.length > 2) ? parseVersionPart(parts[2]) : 0;
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,196,String snapshot = (parts.length > 3) ? parts[3] : null;
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,197,"return new Version(major, minor, patch, snapshot, groupId, artifactId);"
False,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,238,tring[] parts = VERSION_SEPARATOR.split(versionStr);
False,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,239,nt major = parseVersionPart(parts[0]);
False,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,240,nt minor = (parts.length > 1) ? parseVersionPart(parts[1]) : 0;
False,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,241,nt patch = (parts.length > 2) ? parseVersionPart(parts[2]) : 0;
False,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,242,tring snapshot = (parts.length > 3) ? parts[3] : null;
False,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,244,"eturn new Version(major, minor, patch, snapshot,"
False,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,245,"roupId, artifactId);"
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,199,return null;
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,215,private final static void _close(Closeable c) {
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,216,try {
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,217,c.close();
True,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,src/main/java/com/fasterxml/jackson/core/util/VersionUtil.java,218,} catch (IOException e) { }
