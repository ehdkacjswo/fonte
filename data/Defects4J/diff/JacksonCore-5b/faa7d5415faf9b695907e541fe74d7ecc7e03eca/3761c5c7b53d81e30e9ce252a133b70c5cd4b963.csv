is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,1,package com.fasterxml.jackson.core.util;
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,3,import java.io.IOException;
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,4,import java.math.BigDecimal;
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,5,import java.math.BigInteger;
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,6,import java.util.concurrent.atomic.AtomicBoolean;
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,7,import java.util.concurrent.atomic.AtomicInteger;
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,8,import java.util.concurrent.atomic.AtomicLong;
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,10,import com.fasterxml.jackson.core.JsonGenerationException;
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,11,import com.fasterxml.jackson.core.JsonGenerator;
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,12,import com.fasterxml.jackson.core.JsonParser;
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,13,import com.fasterxml.jackson.core.JsonProcessingException;
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,14,import com.fasterxml.jackson.core.JsonToken;
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,15,import com.fasterxml.jackson.core.ObjectCodec;
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,16,import com.fasterxml.jackson.core.TreeNode;
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,19,* Delegating JsonGenerator with copies of the base copyCurrentStructure and
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,20,* other methods to enable the creation filtering generators analogous to
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,21,* extending java.io.FilterOutputStream.
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,23,public class FilterJsonGenerator extends JsonGeneratorDelegate {
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,24,public FilterJsonGenerator(JsonGenerator d) {
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,25,super(d);
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,28,@Override
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,29,"public void writeObject(Object value) throws IOException, JsonProcessingException {"
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,30,if (value == null) {
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,31,// important: call method that does check value write:
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,32,writeNull();
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,33,} else {
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,34,"/* 02-Mar-2009, tatu: we are NOT to call _verifyValueWrite here,"
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,35,*   because that will be done when codec actually serializes
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,36,*   contained POJO. If we did call it it would advance state
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,37,*   causing exception later on
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,39,ObjectCodec objectCodec = getCodec();
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,40,if (objectCodec != null) {
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,41,"objectCodec.writeValue(this, value);"
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,42,return;
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,44,writeSimpleObject(value);
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,48,"private void writeSimpleObject(Object value) throws IOException, JsonGenerationException {"
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,49,"/* 31-Dec-2009, tatu: Actually, we could just handle some basic"
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,50,"*    types even without codec. This can improve interoperability,"
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,51,*    and specifically help with TokenBuffer.
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,53,if (value == null) {
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,54,writeNull();
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,55,return;
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,57,if (value instanceof String) {
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,58,writeString((String) value);
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,59,return;
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,61,if (value instanceof Number) {
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,62,Number n = (Number) value;
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,63,if (n instanceof Integer) {
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,64,writeNumber(n.intValue());
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,65,return;
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,66,} else if (n instanceof Long) {
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,67,writeNumber(n.longValue());
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,68,return;
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,69,} else if (n instanceof Double) {
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,70,writeNumber(n.doubleValue());
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,71,return;
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,72,} else if (n instanceof Float) {
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,73,writeNumber(n.floatValue());
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,74,return;
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,75,} else if (n instanceof Short) {
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,76,writeNumber(n.shortValue());
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,77,return;
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,78,} else if (n instanceof Byte) {
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,79,writeNumber(n.byteValue());
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,80,return;
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,81,} else if (n instanceof BigInteger) {
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,82,writeNumber((BigInteger) n);
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,83,return;
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,84,} else if (n instanceof BigDecimal) {
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,85,writeNumber((BigDecimal) n);
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,86,return;
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,88,// then Atomic types
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,90,} else if (n instanceof AtomicInteger) {
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,91,writeNumber(((AtomicInteger) n).get());
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,92,return;
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,93,} else if (n instanceof AtomicLong) {
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,94,writeNumber(((AtomicLong) n).get());
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,95,return;
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,97,} else if (value instanceof byte[]) {
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,98,writeBinary((byte[]) value);
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,99,return;
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,100,} else if (value instanceof Boolean) {
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,101,writeBoolean((Boolean) value);
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,102,return;
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,103,} else if (value instanceof AtomicBoolean) {
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,104,writeBoolean(((AtomicBoolean) value).get());
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,105,return;
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,107,"throw new IllegalStateException(""No ObjectCodec defined for the generator, can only serialize simple wrapper types (type passed """
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,108,"+value.getClass().getName()+"")"");"
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,111,@Override
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,112,"public void writeTree(TreeNode rootNode) throws IOException, JsonProcessingException {"
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,113,"// As with 'writeObject()', we are not check if write would work"
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,114,if (rootNode == null) {
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,115,writeNull();
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,116,} else {
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,117,ObjectCodec objectCodec = getCodec();
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,118,if (objectCodec == null) {
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,119,"throw new IllegalStateException(""No ObjectCodec defined"");"
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,121,"objectCodec.writeValue(this, rootNode);"
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,125,@Override
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,126,"public void copyCurrentEvent(JsonParser jp) throws IOException, JsonProcessingException {"
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,127,JsonToken t = jp.getCurrentToken();
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,128,// sanity check; what to do?
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,129,if (t == null) {
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,130,"throw new JsonGenerationException(""No current event to copy"");"
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,132,switch(t) {
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,133,case START_OBJECT:
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,134,writeStartObject();
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,135,break;
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,136,case END_OBJECT:
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,137,writeEndObject();
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,138,break;
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,139,case START_ARRAY:
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,140,writeStartArray();
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,141,break;
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,142,case END_ARRAY:
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,143,writeEndArray();
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,144,break;
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,145,case FIELD_NAME:
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,146,writeFieldName(jp.getCurrentName());
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,147,break;
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,148,case VALUE_STRING:
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,149,if (jp.hasTextCharacters()) {
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,150,"writeString(jp.getTextCharacters(), jp.getTextOffset(), jp.getTextLength());"
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,151,} else {
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,152,writeString(jp.getText());
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,154,break;
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,155,case VALUE_NUMBER_INT:
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,156,switch (jp.getNumberType()) {
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,157,case INT:
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,158,writeNumber(jp.getIntValue());
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,159,break;
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,160,case BIG_INTEGER:
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,161,writeNumber(jp.getBigIntegerValue());
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,162,break;
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,163,default:
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,164,writeNumber(jp.getLongValue());
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,166,break;
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,167,case VALUE_NUMBER_FLOAT:
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,168,switch (jp.getNumberType()) {
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,169,case BIG_DECIMAL:
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,170,writeNumber(jp.getDecimalValue());
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,171,break;
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,172,case FLOAT:
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,173,writeNumber(jp.getFloatValue());
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,174,break;
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,175,default:
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,176,writeNumber(jp.getDoubleValue());
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,178,break;
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,179,case VALUE_TRUE:
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,180,writeBoolean(true);
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,181,break;
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,182,case VALUE_FALSE:
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,183,writeBoolean(false);
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,184,break;
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,185,case VALUE_NULL:
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,186,writeNull();
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,187,break;
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,188,case VALUE_EMBEDDED_OBJECT:
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,189,writeObject(jp.getEmbeddedObject());
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,190,break;
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,191,default:
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,192,"throw new RuntimeException(""Internal error: this code path should never get executed"");"
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,196,@Override
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,197,"public void copyCurrentStructure(JsonParser jp) throws IOException, JsonProcessingException {"
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,198,JsonToken t = jp.getCurrentToken();
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,200,// Let's handle field-name separately first
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,201,if (t == JsonToken.FIELD_NAME) {
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,202,writeFieldName(jp.getCurrentName());
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,203,t = jp.nextToken();
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,204,// fall-through to copy the associated value
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,207,switch (t) {
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,208,case START_ARRAY:
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,209,writeStartArray();
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,210,while (jp.nextToken() != JsonToken.END_ARRAY) {
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,211,copyCurrentStructure(jp);
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,213,writeEndArray();
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,214,break;
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,215,case START_OBJECT:
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,216,writeStartObject();
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,217,while (jp.nextToken() != JsonToken.END_OBJECT) {
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,218,copyCurrentStructure(jp);
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,220,writeEndObject();
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,221,break;
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,222,default: // others are simple:
True,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,src/main/java/com/fasterxml/jackson/core/util/FilterJsonGenerator.java,223,copyCurrentEvent(jp);
True,src/test/java/com/fasterxml/jackson/core/util/TestFilterJsonGenerator.java,src/test/java/com/fasterxml/jackson/core/util/TestFilterJsonGenerator.java,1,package com.fasterxml.jackson.core.util;
True,src/test/java/com/fasterxml/jackson/core/util/TestFilterJsonGenerator.java,src/test/java/com/fasterxml/jackson/core/util/TestFilterJsonGenerator.java,3,import java.io.IOException;
True,src/test/java/com/fasterxml/jackson/core/util/TestFilterJsonGenerator.java,src/test/java/com/fasterxml/jackson/core/util/TestFilterJsonGenerator.java,4,import java.io.StringWriter;
True,src/test/java/com/fasterxml/jackson/core/util/TestFilterJsonGenerator.java,src/test/java/com/fasterxml/jackson/core/util/TestFilterJsonGenerator.java,6,import com.fasterxml.jackson.core.JsonFactory;
True,src/test/java/com/fasterxml/jackson/core/util/TestFilterJsonGenerator.java,src/test/java/com/fasterxml/jackson/core/util/TestFilterJsonGenerator.java,7,import com.fasterxml.jackson.core.JsonGenerationException;
True,src/test/java/com/fasterxml/jackson/core/util/TestFilterJsonGenerator.java,src/test/java/com/fasterxml/jackson/core/util/TestFilterJsonGenerator.java,8,import com.fasterxml.jackson.core.JsonGenerator;
True,src/test/java/com/fasterxml/jackson/core/util/TestFilterJsonGenerator.java,src/test/java/com/fasterxml/jackson/core/util/TestFilterJsonGenerator.java,9,import com.fasterxml.jackson.core.JsonParser;
True,src/test/java/com/fasterxml/jackson/core/util/TestFilterJsonGenerator.java,src/test/java/com/fasterxml/jackson/core/util/TestFilterJsonGenerator.java,10,import com.fasterxml.jackson.test.BaseTest;
True,src/test/java/com/fasterxml/jackson/core/util/TestFilterJsonGenerator.java,src/test/java/com/fasterxml/jackson/core/util/TestFilterJsonGenerator.java,12,public class TestFilterJsonGenerator extends BaseTest {
True,src/test/java/com/fasterxml/jackson/core/util/TestFilterJsonGenerator.java,src/test/java/com/fasterxml/jackson/core/util/TestFilterJsonGenerator.java,13,public void testFilterJsonGenerator() throws IOException {
True,src/test/java/com/fasterxml/jackson/core/util/TestFilterJsonGenerator.java,src/test/java/com/fasterxml/jackson/core/util/TestFilterJsonGenerator.java,14,"JsonParser jp = new JsonFactory().createParser(""[{\""a\"":[1,2,{\""b\"":3}],\""c\"":\""d\""},{\""e\"":false},null]"");"
True,src/test/java/com/fasterxml/jackson/core/util/TestFilterJsonGenerator.java,src/test/java/com/fasterxml/jackson/core/util/TestFilterJsonGenerator.java,15,StringWriter sw = new StringWriter();
True,src/test/java/com/fasterxml/jackson/core/util/TestFilterJsonGenerator.java,src/test/java/com/fasterxml/jackson/core/util/TestFilterJsonGenerator.java,16,JsonGenerator jg = new FilterJsonGenerator(new JsonFactory().createGenerator(sw)) {
True,src/test/java/com/fasterxml/jackson/core/util/TestFilterJsonGenerator.java,src/test/java/com/fasterxml/jackson/core/util/TestFilterJsonGenerator.java,17,@Override
True,src/test/java/com/fasterxml/jackson/core/util/TestFilterJsonGenerator.java,src/test/java/com/fasterxml/jackson/core/util/TestFilterJsonGenerator.java,18,"public void writeFieldName(String name) throws IOException, JsonGenerationException {"
True,src/test/java/com/fasterxml/jackson/core/util/TestFilterJsonGenerator.java,src/test/java/com/fasterxml/jackson/core/util/TestFilterJsonGenerator.java,19,"super.writeFieldName(name+""-test"");"
True,src/test/java/com/fasterxml/jackson/core/util/TestFilterJsonGenerator.java,src/test/java/com/fasterxml/jackson/core/util/TestFilterJsonGenerator.java,20,super.writeBoolean(true);
True,src/test/java/com/fasterxml/jackson/core/util/TestFilterJsonGenerator.java,src/test/java/com/fasterxml/jackson/core/util/TestFilterJsonGenerator.java,21,super.writeFieldName(name);
True,src/test/java/com/fasterxml/jackson/core/util/TestFilterJsonGenerator.java,src/test/java/com/fasterxml/jackson/core/util/TestFilterJsonGenerator.java,24,jp.nextToken();
True,src/test/java/com/fasterxml/jackson/core/util/TestFilterJsonGenerator.java,src/test/java/com/fasterxml/jackson/core/util/TestFilterJsonGenerator.java,25,jg.copyCurrentStructure(jp);
True,src/test/java/com/fasterxml/jackson/core/util/TestFilterJsonGenerator.java,src/test/java/com/fasterxml/jackson/core/util/TestFilterJsonGenerator.java,26,jg.flush();
True,src/test/java/com/fasterxml/jackson/core/util/TestFilterJsonGenerator.java,src/test/java/com/fasterxml/jackson/core/util/TestFilterJsonGenerator.java,27,"assertEquals(""[{\""a-test\"":true,\""a\"":[1,2,{\""b-test\"":true,\""b\"":3}],\""c-test\"":true,\""c\"":\""d\""},{\""e-test\"":true,\""e\"":false},null]"", sw.toString());"
