is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/lang/util/IdentifierFactory.java,src/java/org/apache/commons/lang/util/IdentifierFactory.java,2," Copyright 2003,2004 The Apache Software Foundation."
False,src/java/org/apache/commons/lang/util/IdentifierFactory.java,src/java/org/apache/commons/lang/util/IdentifierFactory.java,4," Licensed under the Apache License, Version 2.0 (the ""License"");"
False,src/java/org/apache/commons/lang/util/IdentifierFactory.java,src/java/org/apache/commons/lang/util/IdentifierFactory.java,5, you may not use this file except in compliance with the License.
False,src/java/org/apache/commons/lang/util/IdentifierFactory.java,src/java/org/apache/commons/lang/util/IdentifierFactory.java,6, You may obtain a copy of the License at
False,src/java/org/apache/commons/lang/util/IdentifierFactory.java,src/java/org/apache/commons/lang/util/IdentifierFactory.java,8,      http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/lang/util/IdentifierFactory.java,src/java/org/apache/commons/lang/util/IdentifierFactory.java,10," Unless required by applicable law or agreed to in writing, software"
False,src/java/org/apache/commons/lang/util/IdentifierFactory.java,src/java/org/apache/commons/lang/util/IdentifierFactory.java,11," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/java/org/apache/commons/lang/util/IdentifierFactory.java,src/java/org/apache/commons/lang/util/IdentifierFactory.java,12," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/java/org/apache/commons/lang/util/IdentifierFactory.java,src/java/org/apache/commons/lang/util/IdentifierFactory.java,13, See the License for the specific language governing permissions and
False,src/java/org/apache/commons/lang/util/IdentifierFactory.java,src/java/org/apache/commons/lang/util/IdentifierFactory.java,14, limitations under the License.
False,src/java/org/apache/commons/lang/util/IdentifierFactory.java,src/java/org/apache/commons/lang/util/IdentifierFactory.java,16,ackage org.apache.commons.lang.util;
False,src/java/org/apache/commons/lang/util/IdentifierFactory.java,src/java/org/apache/commons/lang/util/IdentifierFactory.java,19, @deprecated WILL BE DELETED SOON. See Commons ID in the sandbox.
False,src/java/org/apache/commons/lang/util/IdentifierFactory.java,src/java/org/apache/commons/lang/util/IdentifierFactory.java,21,ublic interface IdentifierFactory {
False,src/java/org/apache/commons/lang/util/IdentifierFactory.java,src/java/org/apache/commons/lang/util/IdentifierFactory.java,24, <p>Gets the next identifier in the sequence.</p>
False,src/java/org/apache/commons/lang/util/IdentifierFactory.java,src/java/org/apache/commons/lang/util/IdentifierFactory.java,26, @return the next identifier in sequence
False,src/java/org/apache/commons/lang/util/IdentifierFactory.java,src/java/org/apache/commons/lang/util/IdentifierFactory.java,28,bject nextIdentifier();
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,2, Copyright 2002-2004 The Apache Software Foundation.
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,4," Licensed under the Apache License, Version 2.0 (the ""License"");"
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,5, you may not use this file except in compliance with the License.
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,6, You may obtain a copy of the License at
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,8,      http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,10," Unless required by applicable law or agreed to in writing, software"
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,11," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,12," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,13, See the License for the specific language governing permissions and
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,14, limitations under the License.
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,16,ackage org.apache.commons.lang.util;
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,18,mport java.io.Serializable;
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,19,mport java.util.Random;
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,22, @deprecated WILL BE DELETED SOON. See Commons ID in the sandbox.
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,24,ublic class IdentifierUtils {
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,27, <p>Singleton instance of the
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,28, <code>LongIdentifierFactory</code>.</p>
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,30," <p>The singleton instance will wrap, so in a long-lived server, the id"
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,31, may be duplicated.</p>
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,33, <p>The objects returned are:</p>
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,34, <ul>
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,35, <li>new Long(0L)</li>
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,36, <li>new Long(1L)</li>
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,37, <li>new Long(2L)</li>
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,38, <li>...</li>
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,39, </ul>
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,41,"ublic static final LongIdentifierFactory LONG_IDENTIFIER_FACTORY = new LongNumericIdentifierFactory(true, 0L);"
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,43, <p>Singleton instance of the <code>StringNumericIdentifierFactory</code>.
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,44, </p>
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,46," <p>The singleton instance will wrap, so in a long-lived server, the id"
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,47, may be duplicated.</p>
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,49, <p>The objects returned are:</p>
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,50, <ul>
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,51, <li>&quot;0&quot;</li>
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,52, <li>&quot;1&quot;</li>
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,53, <li>&quot;2&quot;</li>
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,54, <li>...</li>
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,55, </ul>
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,57,"ublic static final StringIdentifierFactory STRING_NUMERIC_IDENTIFIER_FACTORY = new StringNumericIdentifierFactory(true, 0L);"
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,59, <p>Singleton instance of the
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,60, <code>StringAlphanumericIdentifierFactory</code>.</p>
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,62," <p>The singleton instance will wrap, so in a long-lived server, the id"
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,63," may be duplicated. However, the length is 15 in base-36, so thats a"
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,64, lot of identifiers.</p>
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,66, <p>The objects returned are:</p>
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,67, <ul>
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,68, <li>&quot;000000000000001&quot;</li>
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,69, <li>&quot;000000000000002&quot;</li>
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,70, <li>&quot;000000000000003&quot;</li>
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,71, <li>...
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,72, <li>&quot;00000000000000y&quot;</li>
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,73, <li>&quot;00000000000000z&quot;</li>
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,74, <li>&quot;000000000000010&quot;</li>
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,75, <li>&quot;000000000000011&quot;</li>
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,76, <li>...
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,77, <li>&quot;00000000000001z&quot;</li>
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,78, <li>&quot;000000000000020&quot;</li>
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,79, <li>...</li>
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,80, </ul>
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,82,"ublic static final StringIdentifierFactory STRING_ALPHANUMERIC_IDENTIFIER_FACTORY = new StringAlphanumericIdentifierFactory(true, 15);"
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,84, <p>Singleton instance of the
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,85, <code>StringSessionIdentifierFactory</code>.</p>
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,87," <p>The singleton instance may produce duplicates in a long-lived server,"
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,88, but its unlikely.</p>
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,90, <p>The objects returned are 10 or more base-36 digits.</p>
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,92,ublic static final StringIdentifierFactory STRING_SESSION_IDENTIFIER_FACTORY = new StringSessionIdentifierFactory();
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,97, <p><code>IdentifierUtils</code> instances should NOT be constructed in
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,98, standard programming.</p>
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,100, <p>This constructor is public to permit tools that require a JavaBean instance
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,101, to operate.</p>
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,103,ublic IdentifierUtils() {
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,104,uper();
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,110, <p>Gets the next identifier using the singleton instance of the
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,111, Long factory.</p>
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,113," <p>The singleton instance will wrap, so in a long-lived server, the id"
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,114, may be duplicated.</p>
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,116, @return a new identifier
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,118,ublic static Long nextLongIdentifier() {
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,119,eturn LONG_IDENTIFIER_FACTORY.nextLongIdentifier();
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,123, <p>Gets a new identifier factory that returns a series of Long objects
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,124, increasing in size.</p>
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,126, <p>The factory will wrap when the maximum <code>long</code> is
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,127, reached and return negative numbers. It will start from zero.</p>
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,129, @return a new identifier factory
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,131,ublic static LongIdentifierFactory longIdentifierFactory() {
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,132,"eturn new LongNumericIdentifierFactory(true, 0L);"
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,136, <p>Gets a new identifier factory that returns a series of Long objects
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,137, increasing in size.</p>
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,139, @param wrap should the factory wrap when it reaches the maximum
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,140,  long value (or throw an IllegalStateException)
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,141, @param initialValue  the initial long value to start at
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,142, @return a new identifier factory
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,144,"ublic static LongIdentifierFactory longIdentifierFactory(boolean wrap, long initialValue) {"
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,145,"eturn new LongNumericIdentifierFactory(wrap, initialValue);"
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,151, <p>Gets the next identifier using the singleton instance of the
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,152, String Numeric factory.</p>
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,154," <p>The singleton instance will wrap, so in a long-lived server, the id"
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,155, may be duplicated.</p>
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,157, @return a new identifier
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,159,ublic static String nextStringNumericIdentifier() {
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,160,eturn STRING_NUMERIC_IDENTIFIER_FACTORY.nextStringIdentifier();
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,164, <p>Gets a new identifier factory that returns a series of String objects
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,165, representing numbers increasing in size.</p>
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,167, <p>The factory will wrap when the maximum <code>long</code> is
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,168, reached and return negative numbers. It will start from zero.</p>
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,170, @return a new identifier factory
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,172,ublic static StringIdentifierFactory stringNumericIdentifierFactory() {
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,173,"eturn new StringNumericIdentifierFactory(true, 0L);"
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,177, <p>Gets a new identifier factory that returns a series of String objects
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,178, representing numbers increasing in size.</p>
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,180, @param wrap should the factory wrap when it reaches the maximum
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,181,  long value (or throw an IllegalStateException)
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,182, @param initialValue  the initial long value to start at
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,183, @return a new identifier factory
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,185,"ublic static StringIdentifierFactory stringNumericIdentifierFactory(boolean wrap, long initialValue) {"
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,186,"eturn new StringNumericIdentifierFactory(wrap, initialValue);"
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,192, <p>Gets the next identifier using the singleton instance of the
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,193, String Alphanumeric factory.</p>
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,195," <p>The singleton instance will wrap, so in a long-lived server, the id"
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,196, may be duplicated.</p>
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,198, @return a new identifier
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,200,ublic static String nextStringAlphanumericIdentifier() {
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,201,eturn STRING_ALPHANUMERIC_IDENTIFIER_FACTORY.nextStringIdentifier();
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,205, <p>Gets a new identifier factory that returns a series of String objects
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,206, representing numbers increasing in size in base-36.</p>
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,208, <p>The factory will wrap when the maximum size (15) is reached.</p>
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,210, @return a new identifier factory
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,212,ublic static StringIdentifierFactory stringAlphanumericIdentifierFactory() {
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,213,"eturn new StringAlphanumericIdentifierFactory(true, 15);"
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,217, <p>Gets a new identifier factory that returns a series of String objects
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,218, representing numbers increasing in size in base-36.</p>
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,220, @param wrap should the factory wrap when it reaches the maximum
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,221,  size (or throw an IllegalStateException)
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,222, @param size  the number of characters the id should fill
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,223, @return a new identifier factory
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,225,"ublic static StringIdentifierFactory stringAlphanumericIdentifierFactory(boolean wrap, int size) {"
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,226,"eturn new StringAlphanumericIdentifierFactory(wrap, size);"
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,232, <p>Gets the next identifier using the singleton instance of the
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,233, String Session factory.</p>
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,235, <p>The generation routine is based on a random number and a counter
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,236, within a 2 second time interval.</p>
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,238, @return a new identifier
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,240,ublic static String nextStringSessionIdentifier() {
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,241,eturn STRING_SESSION_IDENTIFIER_FACTORY.nextStringIdentifier();
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,245, <p>Gets a new identifier factory that returns a series of String objects
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,246, that appear to be random and are suitable for use as session identifiers.</p>
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,248, <p>The generation routine is based on a random number and a counter
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,249, within a 2 second time interval.</p>
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,251, @return a new identifier factory
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,253,ublic static StringIdentifierFactory stringSessionIdentifierFactory() {
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,254,eturn new StringSessionIdentifierFactory();
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,260, <p><code>LongIdentifierFactory</code> is an Identifier Factory
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,261, that generates an incrementing number as a Long object.</p>
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,263, @author Stephen Colebourne
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,265,"rivate static class LongNumericIdentifierFactory implements LongIdentifierFactory, Serializable {"
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,267,** Should the counter wrap. */
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,268,rivate final boolean wrap;
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,269,** The counter. */
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,270,rivate long count = 0;
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,273, <p>Constructor.</p>
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,275, @param wrap should the factory wrap when it reaches the maximum
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,276,  long value (or throw an exception)
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,277, @param initialValue  the initial long value to start at
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,279,"rivate LongNumericIdentifierFactory(boolean wrap, long initialValue) {"
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,280,uper();
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,281,his.wrap = wrap;
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,282,his.count = initialValue;
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,286, <p>Gets the next new identifier.</p>
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,288, @return a new identifier as a Long
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,290,ublic Object nextIdentifier() {
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,291,eturn nextLongIdentifier();
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,295, <p>Gets the next new identifier.</p>
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,297, @return a new identifier as a Long
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,299,ublic Long nextLongIdentifier() {
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,300,ong value = 0;
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,301,f (wrap) {
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,302,ynchronized (this) {
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,303,alue = count++;
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,305, else {
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,306,ynchronized (this) {
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,307,f (count == Long.MAX_VALUE) {
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,308,"hrow new IllegalStateException(""The maximum number of identifiers has been reached"");"
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,310,alue = count++;
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,313,eturn new Long(value);
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,320, <p><code>StringNumericIdentifierFactory</code> is an Identifier Factory
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,321, that generates an incrementing number as a String object.</p>
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,323, @author Stephen Colebourne
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,325,"rivate static class StringNumericIdentifierFactory implements StringIdentifierFactory, Serializable {"
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,327,** Should the counter wrap. */
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,328,rivate final boolean wrap;
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,329,** The counter. */
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,330,rivate long count = 0;
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,333, <p>Constructor.</p>
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,335, @param wrap should the factory wrap when it reaches the maximum
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,336,  long value (or throw an exception)
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,337, @param initialValue  the initial long value to start at
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,339,"rivate StringNumericIdentifierFactory(boolean wrap, long initialValue) {"
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,340,uper();
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,341,his.wrap = wrap;
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,342,his.count = initialValue;
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,346, <p>Gets the next new identifier.</p>
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,348, @return a new identifier as a String
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,350,ublic Object nextIdentifier() {
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,351,eturn nextStringIdentifier();
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,355, <p>Gets the next new identifier.</p>
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,357, @return a new identifier as a String
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,359,ublic String nextStringIdentifier() {
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,360,ong value = 0;
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,361,f (wrap) {
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,362,ynchronized (this) {
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,363,alue = count++;
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,365, else {
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,366,ynchronized (this) {
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,367,f (count == Long.MAX_VALUE) {
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,368,"hrow new IllegalStateException(""The maximum number of identifiers has been reached"");"
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,370,alue = count++;
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,373,eturn Long.toString(value);
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,381, <p><code>StringAlphanumericIdentifierFactory</code> is an Identifier Factory
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,382, that generates an incrementing incrementing number in base 36 as a String
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,383, object.</p>
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,385, @author Stephen Colebourne
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,387,"rivate static class StringAlphanumericIdentifierFactory implements StringIdentifierFactory, Serializable {"
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,389,** Should the counter wrap. */
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,390,rivate final boolean wrap;
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,391,** The counter. */
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,392,rivate char[] count = null;
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,395, <p>Constructor.</p>
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,397, @param wrap should the factory wrap when it reaches the maximum
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,398,  long value (or throw an exception)
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,399, @param size  the size of the identifier
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,401,"rivate StringAlphanumericIdentifierFactory(boolean wrap, int size) {"
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,402,uper();
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,403,his.wrap = wrap;
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,404,f (size < 1) {
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,405,"hrow new IllegalArgumentException(""The size must be at least one"");"
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,407,his.count = new char[size];
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,408,or (int i = 0; i < size; i++) {
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,409,ount[i] = '0';  // zero
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,414, <p>Gets the next new identifier.</p>
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,416, @return a new identifier as a String
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,418,ublic Object nextIdentifier() {
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,419,eturn nextStringIdentifier();
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,423, <p>Gets the next new identifier.</p>
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,425, @return a new identifier as a String
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,427,ublic synchronized String nextStringIdentifier() {
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,428,or (int i = count.length - 1; i >= 0; i--) {
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,429,witch (count[i]) {
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,430,ase 122:  // z
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,431,ount[i] = '0';
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,432,f (i == 0 && wrap == false) {
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,433,"hrow new IllegalStateException(""The maximum number of identifiers has been reached"");"
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,435,reak;
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,437,ase 57:  // 9
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,438,ount[i] = 'a';
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,439, = -1;
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,440,reak;
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,442,efault:
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,443,ount[i]++;
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,444, = -1;
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,445,reak;
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,448,eturn new String(count);
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,456, <p><code>StringSessionIdentifierFactory</code> is an Identifier
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,457, Factory that generates an alphanumeric 10+ character identifier. The
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,458, exact length depends on the number of ids requested per time period.</p>
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,460, <p>Originally designed for JServ sessions. Uses synchronized count and
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,461," time to ensure uniqueness. Not guaranteed unique across JVMs, but"
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,462, fairly safe none the less.</p>
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,464, @author Jon S. Stevens
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,465, @author Neeme Praks
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,466, @author Stephen Colebourne
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,468,"rivate static class StringSessionIdentifierFactory implements StringIdentifierFactory, Serializable {"
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,471, We want to have a random string with a length of 6 characters.
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,472," Since we encode it base-36, we modulo the random number with"
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,473, this value.
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,475,rivate static final long MAX_RANDOM_LEN = 2176782336L; // 36 ** 6
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,477, <p>The identifier must be unique within the typical lifespan of a
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,478, session; the value can roll over after that.</p>3 characters:
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,479," (this means a roll over after over a day, which is much larger"
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,480, than a typical lifespan).
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,482,rivate static final long MAX_TIME_SECTION_LEN = 46656L; // 36 ** 3
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,484, Milliseconds between different tics.  The 3-character time
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,485, string has a new value every 2 seconds.
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,487,rivate static final long TIC_DIFFERENCE = 2000;
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,489,** The incrementing counter. */
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,490,rivate int counter = 0;
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,491,** The last time. */
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,492,rivate long lastTimeValue = 0;
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,493,** The randmonizer. */
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,494,rivate Random randomizer = new Random();
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,497, <p>Constructor.</p>
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,499,rivate StringSessionIdentifierFactory() {
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,500,uper();
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,504, <p>Gets the next identifier.</p>
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,506, @return the next 10 char String identifier
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,508,ublic Object nextIdentifier() {
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,509,eturn nextStringIdentifier();
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,513, <p>Gets the next new identifier.</p>
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,515," <p>Only guaranteed unique within this JVM, but fairly safe"
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,516, for cross JVM usage as well.</p>
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,518, <p>Format of identifier is
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,519, <code>[6 chars random][3 chars time][1+ chars count]</code></p>
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,521, @return the next 10 char String identifier
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,523,ublic String nextStringIdentifier() {
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,524,/ Random value
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,526,ong currentRandom = randomizer.nextLong();
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,527,f (currentRandom < 0) {
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,528,urrentRandom = -currentRandom;
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,530,"/ force value into 6 char range, and add to pad with zeros"
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,531,"/ this gives a length of 7, when converted to base 36, and"
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,532,/ the first character (always 1 from the add) is dropped
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,533,urrentRandom %= MAX_RANDOM_LEN;
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,534,urrentRandom += MAX_RANDOM_LEN;
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,536,ong currentTimeValue = 0;
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,537,nt currentCount = 0;
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,539,ynchronized (this) {
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,540,/ Time
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,542,urrentTimeValue = (System.currentTimeMillis() / TIC_DIFFERENCE);
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,544,"/ force value into 3 char range, and add to pad with zeros"
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,545,"/ this gives a length of 4, when converted to base 36, and"
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,546,/ the first character (always 1 from the add) is dropped
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,547,urrentTimeValue %= MAX_TIME_SECTION_LEN;
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,548,urrentTimeValue += MAX_TIME_SECTION_LEN;
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,550,/ Count
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,552,/ Make the string unique by appending the count since last
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,553,/ time flip.
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,555,/ Count sessions only within tics (so the 'real' counter
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,556,/ isn't exposed to the public).
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,557,f (lastTimeValue != currentTimeValue) {
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,558,astTimeValue = currentTimeValue;
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,559,ounter = 0;
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,561,urrentCount = counter++;
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,564,/ build string
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,566,tringBuffer id = new StringBuffer(15);
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,567,"d.append(Long.toString(currentRandom, 36).substring(1));  // 6 chars"
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,568,"d.append(Long.toString(currentTimeValue, 36).substring(1));  // 3 chars"
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,569,"d.append(Long.toString(currentCount, 36));  // 1+ chars"
False,src/java/org/apache/commons/lang/util/IdentifierUtils.java,src/java/org/apache/commons/lang/util/IdentifierUtils.java,570,eturn id.toString();
False,src/java/org/apache/commons/lang/util/LongIdentifierFactory.java,src/java/org/apache/commons/lang/util/LongIdentifierFactory.java,2," Copyright 2003,2004 The Apache Software Foundation."
False,src/java/org/apache/commons/lang/util/LongIdentifierFactory.java,src/java/org/apache/commons/lang/util/LongIdentifierFactory.java,4," Licensed under the Apache License, Version 2.0 (the ""License"");"
False,src/java/org/apache/commons/lang/util/LongIdentifierFactory.java,src/java/org/apache/commons/lang/util/LongIdentifierFactory.java,5, you may not use this file except in compliance with the License.
False,src/java/org/apache/commons/lang/util/LongIdentifierFactory.java,src/java/org/apache/commons/lang/util/LongIdentifierFactory.java,6, You may obtain a copy of the License at
False,src/java/org/apache/commons/lang/util/LongIdentifierFactory.java,src/java/org/apache/commons/lang/util/LongIdentifierFactory.java,8,      http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/lang/util/LongIdentifierFactory.java,src/java/org/apache/commons/lang/util/LongIdentifierFactory.java,10," Unless required by applicable law or agreed to in writing, software"
False,src/java/org/apache/commons/lang/util/LongIdentifierFactory.java,src/java/org/apache/commons/lang/util/LongIdentifierFactory.java,11," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/java/org/apache/commons/lang/util/LongIdentifierFactory.java,src/java/org/apache/commons/lang/util/LongIdentifierFactory.java,12," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/java/org/apache/commons/lang/util/LongIdentifierFactory.java,src/java/org/apache/commons/lang/util/LongIdentifierFactory.java,13, See the License for the specific language governing permissions and
False,src/java/org/apache/commons/lang/util/LongIdentifierFactory.java,src/java/org/apache/commons/lang/util/LongIdentifierFactory.java,14, limitations under the License.
False,src/java/org/apache/commons/lang/util/LongIdentifierFactory.java,src/java/org/apache/commons/lang/util/LongIdentifierFactory.java,16,ackage org.apache.commons.lang.util;
False,src/java/org/apache/commons/lang/util/LongIdentifierFactory.java,src/java/org/apache/commons/lang/util/LongIdentifierFactory.java,19, @deprecated WILL BE DELETED SOON. See Commons ID in the sandbox.
False,src/java/org/apache/commons/lang/util/LongIdentifierFactory.java,src/java/org/apache/commons/lang/util/LongIdentifierFactory.java,21,ublic interface LongIdentifierFactory extends IdentifierFactory {
False,src/java/org/apache/commons/lang/util/LongIdentifierFactory.java,src/java/org/apache/commons/lang/util/LongIdentifierFactory.java,24, <p>Gets the next identifier in the sequence.</p>
False,src/java/org/apache/commons/lang/util/LongIdentifierFactory.java,src/java/org/apache/commons/lang/util/LongIdentifierFactory.java,26, @return the next Long identifier in sequence
False,src/java/org/apache/commons/lang/util/LongIdentifierFactory.java,src/java/org/apache/commons/lang/util/LongIdentifierFactory.java,28,ong nextLongIdentifier();
False,src/java/org/apache/commons/lang/util/StringIdentifierFactory.java,src/java/org/apache/commons/lang/util/StringIdentifierFactory.java,2," Copyright 2003,2004 The Apache Software Foundation."
False,src/java/org/apache/commons/lang/util/StringIdentifierFactory.java,src/java/org/apache/commons/lang/util/StringIdentifierFactory.java,4," Licensed under the Apache License, Version 2.0 (the ""License"");"
False,src/java/org/apache/commons/lang/util/StringIdentifierFactory.java,src/java/org/apache/commons/lang/util/StringIdentifierFactory.java,5, you may not use this file except in compliance with the License.
False,src/java/org/apache/commons/lang/util/StringIdentifierFactory.java,src/java/org/apache/commons/lang/util/StringIdentifierFactory.java,6, You may obtain a copy of the License at
False,src/java/org/apache/commons/lang/util/StringIdentifierFactory.java,src/java/org/apache/commons/lang/util/StringIdentifierFactory.java,8,      http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/lang/util/StringIdentifierFactory.java,src/java/org/apache/commons/lang/util/StringIdentifierFactory.java,10," Unless required by applicable law or agreed to in writing, software"
False,src/java/org/apache/commons/lang/util/StringIdentifierFactory.java,src/java/org/apache/commons/lang/util/StringIdentifierFactory.java,11," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/java/org/apache/commons/lang/util/StringIdentifierFactory.java,src/java/org/apache/commons/lang/util/StringIdentifierFactory.java,12," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/java/org/apache/commons/lang/util/StringIdentifierFactory.java,src/java/org/apache/commons/lang/util/StringIdentifierFactory.java,13, See the License for the specific language governing permissions and
False,src/java/org/apache/commons/lang/util/StringIdentifierFactory.java,src/java/org/apache/commons/lang/util/StringIdentifierFactory.java,14, limitations under the License.
False,src/java/org/apache/commons/lang/util/StringIdentifierFactory.java,src/java/org/apache/commons/lang/util/StringIdentifierFactory.java,16,ackage org.apache.commons.lang.util;
False,src/java/org/apache/commons/lang/util/StringIdentifierFactory.java,src/java/org/apache/commons/lang/util/StringIdentifierFactory.java,19, @deprecated WILL BE DELETED SOON. See Commons ID in the sandbox.
False,src/java/org/apache/commons/lang/util/StringIdentifierFactory.java,src/java/org/apache/commons/lang/util/StringIdentifierFactory.java,21,ublic interface StringIdentifierFactory extends IdentifierFactory {
False,src/java/org/apache/commons/lang/util/StringIdentifierFactory.java,src/java/org/apache/commons/lang/util/StringIdentifierFactory.java,24, <p>Gets the next identifier in the sequence.</p>
False,src/java/org/apache/commons/lang/util/StringIdentifierFactory.java,src/java/org/apache/commons/lang/util/StringIdentifierFactory.java,26, @return the next String identifier in sequence
False,src/java/org/apache/commons/lang/util/StringIdentifierFactory.java,src/java/org/apache/commons/lang/util/StringIdentifierFactory.java,28,tring nextStringIdentifier();
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,2, Copyright 2002-2004 The Apache Software Foundation
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,4," Licensed under the Apache License, Version 2.0 (the ""License"");"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,5, you may not use this file except in compliance with the License.
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,6, You may obtain a copy of the License at
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,8,      http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,10," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,11," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,12," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,13, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,14, limitations under the License.
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,16,ackage org.apache.commons.lang.util;
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,18,mport java.lang.reflect.Constructor;
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,19,mport java.lang.reflect.Modifier;
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,21,mport junit.framework.AssertionFailedError;
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,22,mport junit.framework.Test;
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,23,mport junit.framework.TestSuite;
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,26, Tests the org.apache.commons.lang.util.IdentifierUtils class.
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,28, @deprecated WILL BE REMOVED SOON
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,29, @author Stephen Colebourne
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,30," @version $Id: IdentifierUtilsTest.java,v 1.6 2004/02/18 23:03:51 ggregory Exp $"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,32,ublic class IdentifierUtilsTest extends junit.framework.TestCase {
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,35, Construct
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,37,ublic IdentifierUtilsTest(String name) {
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,38,uper(name);
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,42, Return class aa a test suite.
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,44,ublic static Test suite() {
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,45,estSuite suite = new TestSuite(IdentifierUtilsTest.class);
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,46,"uite.setName(""IdentifierUtils Tests"");"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,47,eturn suite;
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,51,ublic void testConstructor() {
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,52,ssertNotNull(new IdentifierUtils());
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,53,onstructor[] cons = IdentifierUtils.class.getDeclaredConstructors();
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,54,"ssertEquals(1, cons.length);"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,55,"ssertEquals(true, Modifier.isPublic(cons[0].getModifiers()));"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,56,"ssertEquals(true, Modifier.isPublic(IdentifierUtils.class.getModifiers()));"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,57,"ssertEquals(false, Modifier.isFinal(IdentifierUtils.class.getModifiers()));"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,62,ublic void testLongIncrementing() {
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,63,ongIdentifierFactory f = IdentifierUtils.LONG_IDENTIFIER_FACTORY;
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,64,"ssertEquals(new Long(0), f.nextLongIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,65,"ssertEquals(new Long(1), f.nextLongIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,66,"ssertEquals(new Long(2), f.nextIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,67,"ssertEquals(new Long(3), f.nextLongIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,68,"ssertEquals(new Long(4), IdentifierUtils.nextLongIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,69,"ssertEquals(new Long(5), f.nextLongIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,70,"ssertEquals(new Long(6), IdentifierUtils.nextLongIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,71,"ssertEquals(new Long(7), IdentifierUtils.nextLongIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,74,ublic void testLongIncrementingNoArgs() {
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,75,ongIdentifierFactory f = IdentifierUtils.longIdentifierFactory();
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,76,"ssertEquals(new Long(0), f.nextLongIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,77,"ssertEquals(new Long(1), f.nextLongIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,78,ssertTrue(f != IdentifierUtils.LONG_IDENTIFIER_FACTORY);
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,81,ublic void testLongIncrementingInit() {
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,82,"ongIdentifierFactory f = IdentifierUtils.longIdentifierFactory(true, 100);"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,83,"ssertEquals(new Long(100), f.nextLongIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,84,"ssertEquals(new Long(101), f.nextLongIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,87,ublic void testLongIncrementingWrap() {
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,88,"ongIdentifierFactory f = IdentifierUtils.longIdentifierFactory(true, Long.MAX_VALUE - 1);"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,89,"ssertEquals(new Long(Long.MAX_VALUE - 1), f.nextLongIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,90,"ssertEquals(new Long(Long.MAX_VALUE), f.nextLongIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,91,"ssertEquals(new Long(Long.MIN_VALUE), f.nextLongIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,94,ublic void testLongIncrementingNoWrap() {
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,95,"ongIdentifierFactory f = IdentifierUtils.longIdentifierFactory(false, Long.MAX_VALUE);"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,96,ry {
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,97,.nextLongIdentifier();
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,98,ail();
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,99, catch (IllegalStateException ex) {}
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,104,ublic void testStringNumericLong() {
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,105,tringIdentifierFactory f = IdentifierUtils.STRING_NUMERIC_IDENTIFIER_FACTORY;
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,106,"ssertEquals(""0"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,107,"ssertEquals(""1"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,108,"ssertEquals(""2"", f.nextIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,109,"ssertEquals(""3"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,110,"ssertEquals(""4"", IdentifierUtils.nextStringNumericIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,111,"ssertEquals(""5"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,112,"ssertEquals(""6"", IdentifierUtils.nextStringNumericIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,113,"ssertEquals(""7"", IdentifierUtils.nextStringNumericIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,116,ublic void testStringNumericNoArgs() {
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,117,tringIdentifierFactory f = IdentifierUtils.stringNumericIdentifierFactory();
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,118,"ssertEquals(""0"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,119,"ssertEquals(""1"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,120,ssertTrue(f != IdentifierUtils.STRING_NUMERIC_IDENTIFIER_FACTORY);
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,123,ublic void testStringNumericInit() {
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,124,"tringIdentifierFactory f = IdentifierUtils.stringNumericIdentifierFactory(true, 100);"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,125,"ssertEquals(""100"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,126,"ssertEquals(""101"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,129,ublic void testStringNumericWrap() {
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,130,"tringIdentifierFactory f = IdentifierUtils.stringNumericIdentifierFactory(true, Long.MAX_VALUE - 1);"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,131,"ssertEquals(Long.toString(Long.MAX_VALUE - 1), f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,132,"ssertEquals(Long.toString(Long.MAX_VALUE), f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,133,"ssertEquals(Long.toString(Long.MIN_VALUE), f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,136,ublic void testStringNumericNoWrap() {
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,137,"tringIdentifierFactory f = IdentifierUtils.stringNumericIdentifierFactory(false, Long.MAX_VALUE);"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,138,ry {
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,139,.nextStringIdentifier();
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,140,ail();
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,141, catch (IllegalStateException ex) { }
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,146,ublic void testStringAlphanumeric() {
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,147,tringIdentifierFactory f = IdentifierUtils.STRING_ALPHANUMERIC_IDENTIFIER_FACTORY;
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,148,"ssertEquals(""000000000000001"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,149,"ssertEquals(""000000000000002"", f.nextIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,150,"ssertEquals(""000000000000003"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,151,"ssertEquals(""000000000000004"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,152,"ssertEquals(""000000000000005"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,153,"ssertEquals(""000000000000006"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,154,"ssertEquals(""000000000000007"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,155,"ssertEquals(""000000000000008"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,156,"ssertEquals(""000000000000009"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,157,"ssertEquals(""00000000000000a"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,158,"ssertEquals(""00000000000000b"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,159,"ssertEquals(""00000000000000c"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,160,"ssertEquals(""00000000000000d"", IdentifierUtils.nextStringAlphanumericIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,161,"ssertEquals(""00000000000000e"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,162,"ssertEquals(""00000000000000f"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,163,"ssertEquals(""00000000000000g"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,164,"ssertEquals(""00000000000000h"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,165,"ssertEquals(""00000000000000i"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,166,"ssertEquals(""00000000000000j"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,167,"ssertEquals(""00000000000000k"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,168,"ssertEquals(""00000000000000l"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,169,"ssertEquals(""00000000000000m"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,170,"ssertEquals(""00000000000000n"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,171,"ssertEquals(""00000000000000o"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,172,"ssertEquals(""00000000000000p"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,173,"ssertEquals(""00000000000000q"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,174,"ssertEquals(""00000000000000r"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,175,"ssertEquals(""00000000000000s"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,176,"ssertEquals(""00000000000000t"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,177,"ssertEquals(""00000000000000u"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,178,"ssertEquals(""00000000000000v"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,179,"ssertEquals(""00000000000000w"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,180,"ssertEquals(""00000000000000x"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,181,"ssertEquals(""00000000000000y"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,182,"ssertEquals(""00000000000000z"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,183,"ssertEquals(""000000000000010"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,184,"ssertEquals(""000000000000011"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,185,"ssertEquals(""000000000000012"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,186,"ssertEquals(""000000000000013"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,189,ublic void testLongAlphanumericNoArgs() {
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,190,tringIdentifierFactory f = IdentifierUtils.stringAlphanumericIdentifierFactory();
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,191,"ssertEquals(""000000000000001"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,192,"ssertEquals(""000000000000002"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,193,ssertTrue(f != IdentifierUtils.STRING_ALPHANUMERIC_IDENTIFIER_FACTORY);
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,196,ublic void testStringAlphanumericWrap() {
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,197,ry {
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,198,"dentifierUtils.stringAlphanumericIdentifierFactory(true, -1);"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,199,ail();
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,200, catch (IllegalArgumentException ex) {}
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,202,"tringIdentifierFactory f = IdentifierUtils.stringAlphanumericIdentifierFactory(true, 1);"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,203,"ssertEquals(""1"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,204,"ssertEquals(""2"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,205,"ssertEquals(""3"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,206,"ssertEquals(""4"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,207,"ssertEquals(""5"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,208,"ssertEquals(""6"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,209,"ssertEquals(""7"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,210,"ssertEquals(""8"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,211,"ssertEquals(""9"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,212,"ssertEquals(""a"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,213,"ssertEquals(""b"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,214,"ssertEquals(""c"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,215,"ssertEquals(""d"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,216,"ssertEquals(""e"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,217,"ssertEquals(""f"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,218,"ssertEquals(""g"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,219,"ssertEquals(""h"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,220,"ssertEquals(""i"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,221,"ssertEquals(""j"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,222,"ssertEquals(""k"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,223,"ssertEquals(""l"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,224,"ssertEquals(""m"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,225,"ssertEquals(""n"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,226,"ssertEquals(""o"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,227,"ssertEquals(""p"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,228,"ssertEquals(""q"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,229,"ssertEquals(""r"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,230,"ssertEquals(""s"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,231,"ssertEquals(""t"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,232,"ssertEquals(""u"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,233,"ssertEquals(""v"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,234,"ssertEquals(""w"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,235,"ssertEquals(""x"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,236,"ssertEquals(""y"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,237,"ssertEquals(""z"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,238,"ssertEquals(""0"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,241,ublic void testStringAlphanumericNoWrap() {
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,242,ry {
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,243,"dentifierUtils.stringAlphanumericIdentifierFactory(false, -1);"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,244,ail();
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,245, catch (IllegalArgumentException ex) {}
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,247,"tringIdentifierFactory f = IdentifierUtils.stringAlphanumericIdentifierFactory(false, 1);"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,248,"ssertEquals(""1"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,249,"ssertEquals(""2"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,250,"ssertEquals(""3"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,251,"ssertEquals(""4"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,252,"ssertEquals(""5"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,253,"ssertEquals(""6"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,254,"ssertEquals(""7"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,255,"ssertEquals(""8"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,256,"ssertEquals(""9"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,257,"ssertEquals(""a"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,258,"ssertEquals(""b"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,259,"ssertEquals(""c"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,260,"ssertEquals(""d"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,261,"ssertEquals(""e"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,262,"ssertEquals(""f"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,263,"ssertEquals(""g"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,264,"ssertEquals(""h"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,265,"ssertEquals(""i"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,266,"ssertEquals(""j"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,267,"ssertEquals(""k"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,268,"ssertEquals(""l"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,269,"ssertEquals(""m"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,270,"ssertEquals(""n"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,271,"ssertEquals(""o"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,272,"ssertEquals(""p"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,273,"ssertEquals(""q"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,274,"ssertEquals(""r"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,275,"ssertEquals(""s"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,276,"ssertEquals(""t"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,277,"ssertEquals(""u"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,278,"ssertEquals(""v"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,279,"ssertEquals(""w"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,280,"ssertEquals(""x"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,281,"ssertEquals(""y"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,282,"ssertEquals(""z"", f.nextStringIdentifier());"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,283,ry {
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,284,.nextStringIdentifier();
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,285,ail();
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,286, catch (IllegalStateException ex) {}
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,291,ublic void testStringSession() {
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,292,tringIdentifierFactory f = IdentifierUtils.STRING_SESSION_IDENTIFIER_FACTORY;
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,293,ssertTrue(f != IdentifierUtils.stringSessionIdentifierFactory());
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,295,tring a = (String) f.nextStringIdentifier();
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,296,tring b = (String) IdentifierUtils.nextStringSessionIdentifier();
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,297,tring c = (String) f.nextIdentifier();
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,298,ssertTrue(a.length() >= 10);
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,299,ssertTrue(b.length() >= 10);
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,300,ssertTrue(c.length() >= 10);
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,301,ry {
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,302,"/ could fail, but unlikely"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,303,"ssertTrue(a.substring(6, 9).equals(b.substring(6, 9)));"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,304,"ssertTrue(a.substring(6, 9).equals(c.substring(6, 9)));"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,305, catch (AssertionFailedError ex) {
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,306,/ try again to make test more robust
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,307, = (String) f.nextStringIdentifier();
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,308, = (String) IdentifierUtils.nextStringSessionIdentifier();
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,309, = (String) f.nextIdentifier();
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,310,"ssertTrue(a.substring(6, 9).equals(b.substring(6, 9)));"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,311,"ssertTrue(a.substring(6, 9).equals(c.substring(6, 9)));"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,313,"ssertEquals(""0"", a.substring(9));"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,314,"ssertEquals(""1"", b.substring(9));"
False,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,src/test/org/apache/commons/lang/util/IdentifierUtilsTest.java,315,"ssertEquals(""2"", c.substring(9));"
False,src/test/org/apache/commons/lang/util/UtilTestSuite.java,src/test/org/apache/commons/lang/util/UtilTestSuite.java,2," Copyright 2002,2004 The Apache Software Foundation."
False,src/test/org/apache/commons/lang/util/UtilTestSuite.java,src/test/org/apache/commons/lang/util/UtilTestSuite.java,4," Licensed under the Apache License, Version 2.0 (the ""License"");"
False,src/test/org/apache/commons/lang/util/UtilTestSuite.java,src/test/org/apache/commons/lang/util/UtilTestSuite.java,5, you may not use this file except in compliance with the License.
False,src/test/org/apache/commons/lang/util/UtilTestSuite.java,src/test/org/apache/commons/lang/util/UtilTestSuite.java,6, You may obtain a copy of the License at
False,src/test/org/apache/commons/lang/util/UtilTestSuite.java,src/test/org/apache/commons/lang/util/UtilTestSuite.java,8,      http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/lang/util/UtilTestSuite.java,src/test/org/apache/commons/lang/util/UtilTestSuite.java,10," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/lang/util/UtilTestSuite.java,src/test/org/apache/commons/lang/util/UtilTestSuite.java,11," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/lang/util/UtilTestSuite.java,src/test/org/apache/commons/lang/util/UtilTestSuite.java,12," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/org/apache/commons/lang/util/UtilTestSuite.java,src/test/org/apache/commons/lang/util/UtilTestSuite.java,13, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/lang/util/UtilTestSuite.java,src/test/org/apache/commons/lang/util/UtilTestSuite.java,14, limitations under the License.
False,src/test/org/apache/commons/lang/util/UtilTestSuite.java,src/test/org/apache/commons/lang/util/UtilTestSuite.java,16,ackage org.apache.commons.lang.util;
False,src/test/org/apache/commons/lang/util/UtilTestSuite.java,src/test/org/apache/commons/lang/util/UtilTestSuite.java,18,mport junit.framework.Test;
False,src/test/org/apache/commons/lang/util/UtilTestSuite.java,src/test/org/apache/commons/lang/util/UtilTestSuite.java,19,mport junit.framework.TestCase;
False,src/test/org/apache/commons/lang/util/UtilTestSuite.java,src/test/org/apache/commons/lang/util/UtilTestSuite.java,20,mport junit.framework.TestSuite;
False,src/test/org/apache/commons/lang/util/UtilTestSuite.java,src/test/org/apache/commons/lang/util/UtilTestSuite.java,21,mport junit.textui.TestRunner;
False,src/test/org/apache/commons/lang/util/UtilTestSuite.java,src/test/org/apache/commons/lang/util/UtilTestSuite.java,23, Test suite for the Util package.
False,src/test/org/apache/commons/lang/util/UtilTestSuite.java,src/test/org/apache/commons/lang/util/UtilTestSuite.java,25," @author <a href=""mailto:bayard@apache.org"">Henri Yandell</a>"
False,src/test/org/apache/commons/lang/util/UtilTestSuite.java,src/test/org/apache/commons/lang/util/UtilTestSuite.java,26, @author Stephen Colebourne
False,src/test/org/apache/commons/lang/util/UtilTestSuite.java,src/test/org/apache/commons/lang/util/UtilTestSuite.java,27," @version $Id: UtilTestSuite.java,v 1.6 2004/02/18 23:03:51 ggregory Exp $"
False,src/test/org/apache/commons/lang/util/UtilTestSuite.java,src/test/org/apache/commons/lang/util/UtilTestSuite.java,29,ublic class UtilTestSuite extends TestCase {
False,src/test/org/apache/commons/lang/util/UtilTestSuite.java,src/test/org/apache/commons/lang/util/UtilTestSuite.java,32, Construct a new instance.
False,src/test/org/apache/commons/lang/util/UtilTestSuite.java,src/test/org/apache/commons/lang/util/UtilTestSuite.java,34,ublic UtilTestSuite(String name) {
False,src/test/org/apache/commons/lang/util/UtilTestSuite.java,src/test/org/apache/commons/lang/util/UtilTestSuite.java,35,uper(name);
False,src/test/org/apache/commons/lang/util/UtilTestSuite.java,src/test/org/apache/commons/lang/util/UtilTestSuite.java,39, Command-line interface.
False,src/test/org/apache/commons/lang/util/UtilTestSuite.java,src/test/org/apache/commons/lang/util/UtilTestSuite.java,41,ublic static void main(String[] args) {
False,src/test/org/apache/commons/lang/util/UtilTestSuite.java,src/test/org/apache/commons/lang/util/UtilTestSuite.java,42,estRunner.run(suite());
False,src/test/org/apache/commons/lang/util/UtilTestSuite.java,src/test/org/apache/commons/lang/util/UtilTestSuite.java,46, Get the suite of tests
False,src/test/org/apache/commons/lang/util/UtilTestSuite.java,src/test/org/apache/commons/lang/util/UtilTestSuite.java,48,ublic static Test suite() {
False,src/test/org/apache/commons/lang/util/UtilTestSuite.java,src/test/org/apache/commons/lang/util/UtilTestSuite.java,49,estSuite suite = new TestSuite();
False,src/test/org/apache/commons/lang/util/UtilTestSuite.java,src/test/org/apache/commons/lang/util/UtilTestSuite.java,50,"uite.setName(""Commons-Lang-Util Tests"");"
False,src/test/org/apache/commons/lang/util/UtilTestSuite.java,src/test/org/apache/commons/lang/util/UtilTestSuite.java,51,uite.addTest(IdentifierUtilsTest.suite());
False,src/test/org/apache/commons/lang/util/UtilTestSuite.java,src/test/org/apache/commons/lang/util/UtilTestSuite.java,52,eturn suite;
