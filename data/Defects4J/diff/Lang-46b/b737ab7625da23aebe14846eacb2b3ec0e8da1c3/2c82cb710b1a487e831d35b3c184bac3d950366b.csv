is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/lang/text/MultiFormat.java,src/java/org/apache/commons/lang/text/MultiFormat.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/java/org/apache/commons/lang/text/MultiFormat.java,src/java/org/apache/commons/lang/text/MultiFormat.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/java/org/apache/commons/lang/text/MultiFormat.java,src/java/org/apache/commons/lang/text/MultiFormat.java,4, this work for additional information regarding copyright ownership.
False,src/java/org/apache/commons/lang/text/MultiFormat.java,src/java/org/apache/commons/lang/text/MultiFormat.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/java/org/apache/commons/lang/text/MultiFormat.java,src/java/org/apache/commons/lang/text/MultiFormat.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/java/org/apache/commons/lang/text/MultiFormat.java,src/java/org/apache/commons/lang/text/MultiFormat.java,7, the License.  You may obtain a copy of the License at
False,src/java/org/apache/commons/lang/text/MultiFormat.java,src/java/org/apache/commons/lang/text/MultiFormat.java,9,      http://www.apache.org/licenses/LICENSE-2.0
False,src/java/org/apache/commons/lang/text/MultiFormat.java,src/java/org/apache/commons/lang/text/MultiFormat.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/java/org/apache/commons/lang/text/MultiFormat.java,src/java/org/apache/commons/lang/text/MultiFormat.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/java/org/apache/commons/lang/text/MultiFormat.java,src/java/org/apache/commons/lang/text/MultiFormat.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/java/org/apache/commons/lang/text/MultiFormat.java,src/java/org/apache/commons/lang/text/MultiFormat.java,14, See the License for the specific language governing permissions and
False,src/java/org/apache/commons/lang/text/MultiFormat.java,src/java/org/apache/commons/lang/text/MultiFormat.java,15, limitations under the License.
False,src/java/org/apache/commons/lang/text/MultiFormat.java,src/java/org/apache/commons/lang/text/MultiFormat.java,17,ackage org.apache.commons.lang.text;
False,src/java/org/apache/commons/lang/text/MultiFormat.java,src/java/org/apache/commons/lang/text/MultiFormat.java,19,mport java.text.FieldPosition;
False,src/java/org/apache/commons/lang/text/MultiFormat.java,src/java/org/apache/commons/lang/text/MultiFormat.java,20,mport java.text.Format;
False,src/java/org/apache/commons/lang/text/MultiFormat.java,src/java/org/apache/commons/lang/text/MultiFormat.java,21,mport java.text.ParsePosition;
False,src/java/org/apache/commons/lang/text/MultiFormat.java,src/java/org/apache/commons/lang/text/MultiFormat.java,22,mport java.util.ArrayList;
False,src/java/org/apache/commons/lang/text/MultiFormat.java,src/java/org/apache/commons/lang/text/MultiFormat.java,24,mport org.apache.commons.lang.Validate;
False,src/java/org/apache/commons/lang/text/MultiFormat.java,src/java/org/apache/commons/lang/text/MultiFormat.java,27, Format that tries a number of delegates in turn until one is successful.
False,src/java/org/apache/commons/lang/text/MultiFormat.java,src/java/org/apache/commons/lang/text/MultiFormat.java,28, Contrast to {@link CompositeFormat}.
False,src/java/org/apache/commons/lang/text/MultiFormat.java,src/java/org/apache/commons/lang/text/MultiFormat.java,30, @author Matt Benson
False,src/java/org/apache/commons/lang/text/MultiFormat.java,src/java/org/apache/commons/lang/text/MultiFormat.java,31, @since 2.4
False,src/java/org/apache/commons/lang/text/MultiFormat.java,src/java/org/apache/commons/lang/text/MultiFormat.java,32, @version $Id$
False,src/java/org/apache/commons/lang/text/MultiFormat.java,src/java/org/apache/commons/lang/text/MultiFormat.java,34,ublic class MultiFormat extends Format {
False,src/java/org/apache/commons/lang/text/MultiFormat.java,src/java/org/apache/commons/lang/text/MultiFormat.java,35,rivate static final long serialVersionUID = -6128683973856547540L;
False,src/java/org/apache/commons/lang/text/MultiFormat.java,src/java/org/apache/commons/lang/text/MultiFormat.java,38, Provides a builder with a fluent interface. Example:
False,src/java/org/apache/commons/lang/text/MultiFormat.java,src/java/org/apache/commons/lang/text/MultiFormat.java,39, <p>
False,src/java/org/apache/commons/lang/text/MultiFormat.java,src/java/org/apache/commons/lang/text/MultiFormat.java,40, <code>
False,src/java/org/apache/commons/lang/text/MultiFormat.java,src/java/org/apache/commons/lang/text/MultiFormat.java,41, <pre>
False,src/java/org/apache/commons/lang/text/MultiFormat.java,src/java/org/apache/commons/lang/text/MultiFormat.java,42, MultiFormat mf = new MultiFormat.Builder().add(new FooFormat()).add(
False,src/java/org/apache/commons/lang/text/MultiFormat.java,src/java/org/apache/commons/lang/text/MultiFormat.java,43,         new BarFormat()).add(new BazFormat()).toMultiFormat();
False,src/java/org/apache/commons/lang/text/MultiFormat.java,src/java/org/apache/commons/lang/text/MultiFormat.java,44, </pre></code>
False,src/java/org/apache/commons/lang/text/MultiFormat.java,src/java/org/apache/commons/lang/text/MultiFormat.java,45, </p>
False,src/java/org/apache/commons/lang/text/MultiFormat.java,src/java/org/apache/commons/lang/text/MultiFormat.java,47,ublic static class Builder {
False,src/java/org/apache/commons/lang/text/MultiFormat.java,src/java/org/apache/commons/lang/text/MultiFormat.java,48,rivate ArrayList delegates = new ArrayList();
False,src/java/org/apache/commons/lang/text/MultiFormat.java,src/java/org/apache/commons/lang/text/MultiFormat.java,51, Add a delegate format.
False,src/java/org/apache/commons/lang/text/MultiFormat.java,src/java/org/apache/commons/lang/text/MultiFormat.java,53, @param delegate Format
False,src/java/org/apache/commons/lang/text/MultiFormat.java,src/java/org/apache/commons/lang/text/MultiFormat.java,54, @return the builder
False,src/java/org/apache/commons/lang/text/MultiFormat.java,src/java/org/apache/commons/lang/text/MultiFormat.java,56,ublic Builder add(Format delegate) {
False,src/java/org/apache/commons/lang/text/MultiFormat.java,src/java/org/apache/commons/lang/text/MultiFormat.java,57,"alidate.notNull(delegate, ""delegate format is null"");"
False,src/java/org/apache/commons/lang/text/MultiFormat.java,src/java/org/apache/commons/lang/text/MultiFormat.java,58,elegates.add(delegate);
False,src/java/org/apache/commons/lang/text/MultiFormat.java,src/java/org/apache/commons/lang/text/MultiFormat.java,59,eturn this;
False,src/java/org/apache/commons/lang/text/MultiFormat.java,src/java/org/apache/commons/lang/text/MultiFormat.java,63, Render the {@link MultiFormat} instance from this Builder.
False,src/java/org/apache/commons/lang/text/MultiFormat.java,src/java/org/apache/commons/lang/text/MultiFormat.java,65, @return MultiFormat
False,src/java/org/apache/commons/lang/text/MultiFormat.java,src/java/org/apache/commons/lang/text/MultiFormat.java,67,ublic MultiFormat toMultiFormat() {
False,src/java/org/apache/commons/lang/text/MultiFormat.java,src/java/org/apache/commons/lang/text/MultiFormat.java,68,eturn new MultiFormat((Format[]) delegates
False,src/java/org/apache/commons/lang/text/MultiFormat.java,src/java/org/apache/commons/lang/text/MultiFormat.java,69,toArray(new Format[delegates.size()]));
False,src/java/org/apache/commons/lang/text/MultiFormat.java,src/java/org/apache/commons/lang/text/MultiFormat.java,74,rivate Format[] delegates;
False,src/java/org/apache/commons/lang/text/MultiFormat.java,src/java/org/apache/commons/lang/text/MultiFormat.java,77, Create a new MultiFormat.
False,src/java/org/apache/commons/lang/text/MultiFormat.java,src/java/org/apache/commons/lang/text/MultiFormat.java,79,ublic MultiFormat() {
False,src/java/org/apache/commons/lang/text/MultiFormat.java,src/java/org/apache/commons/lang/text/MultiFormat.java,83, Create a new MultiFormat.
False,src/java/org/apache/commons/lang/text/MultiFormat.java,src/java/org/apache/commons/lang/text/MultiFormat.java,85, @param delegates Formats
False,src/java/org/apache/commons/lang/text/MultiFormat.java,src/java/org/apache/commons/lang/text/MultiFormat.java,87,ublic MultiFormat(Format[] delegates) {
False,src/java/org/apache/commons/lang/text/MultiFormat.java,src/java/org/apache/commons/lang/text/MultiFormat.java,88,etDelegates(delegates);
False,src/java/org/apache/commons/lang/text/MultiFormat.java,src/java/org/apache/commons/lang/text/MultiFormat.java,92, Format <code>obj</code>; append to <code>toAppendTo</code>.
False,src/java/org/apache/commons/lang/text/MultiFormat.java,src/java/org/apache/commons/lang/text/MultiFormat.java,94, @param obj Object to format
False,src/java/org/apache/commons/lang/text/MultiFormat.java,src/java/org/apache/commons/lang/text/MultiFormat.java,95, @param toAppendTo StringBuffer to append to
False,src/java/org/apache/commons/lang/text/MultiFormat.java,src/java/org/apache/commons/lang/text/MultiFormat.java,96, @param pos FieldPosition
False,src/java/org/apache/commons/lang/text/MultiFormat.java,src/java/org/apache/commons/lang/text/MultiFormat.java,97, @return <code>toAppendTo</code>
False,src/java/org/apache/commons/lang/text/MultiFormat.java,src/java/org/apache/commons/lang/text/MultiFormat.java,99,"ublic StringBuffer format(Object obj, StringBuffer toAppendTo,"
False,src/java/org/apache/commons/lang/text/MultiFormat.java,src/java/org/apache/commons/lang/text/MultiFormat.java,100,ieldPosition pos) {
False,src/java/org/apache/commons/lang/text/MultiFormat.java,src/java/org/apache/commons/lang/text/MultiFormat.java,101,ormat[] d = getValidDelegates();
False,src/java/org/apache/commons/lang/text/MultiFormat.java,src/java/org/apache/commons/lang/text/MultiFormat.java,102,or (int i = 0; i < d.length; i++) {
False,src/java/org/apache/commons/lang/text/MultiFormat.java,src/java/org/apache/commons/lang/text/MultiFormat.java,103,ry {
False,src/java/org/apache/commons/lang/text/MultiFormat.java,src/java/org/apache/commons/lang/text/MultiFormat.java,104,"eturn d[i].format(obj, toAppendTo, pos);"
False,src/java/org/apache/commons/lang/text/MultiFormat.java,src/java/org/apache/commons/lang/text/MultiFormat.java,105, catch (IllegalArgumentException e) {
False,src/java/org/apache/commons/lang/text/MultiFormat.java,src/java/org/apache/commons/lang/text/MultiFormat.java,106,ontinue;
False,src/java/org/apache/commons/lang/text/MultiFormat.java,src/java/org/apache/commons/lang/text/MultiFormat.java,109,"hrow new IllegalArgumentException(""No delegate Format can parse """
False,src/java/org/apache/commons/lang/text/MultiFormat.java,src/java/org/apache/commons/lang/text/MultiFormat.java,110, obj);
False,src/java/org/apache/commons/lang/text/MultiFormat.java,src/java/org/apache/commons/lang/text/MultiFormat.java,114, Parse an object by trying each delegate.
False,src/java/org/apache/commons/lang/text/MultiFormat.java,src/java/org/apache/commons/lang/text/MultiFormat.java,116, @param source string
False,src/java/org/apache/commons/lang/text/MultiFormat.java,src/java/org/apache/commons/lang/text/MultiFormat.java,117, @param pos current parse position
False,src/java/org/apache/commons/lang/text/MultiFormat.java,src/java/org/apache/commons/lang/text/MultiFormat.java,118, @return value returned from first delegate that does not encounter an
False,src/java/org/apache/commons/lang/text/MultiFormat.java,src/java/org/apache/commons/lang/text/MultiFormat.java,119,         error.
False,src/java/org/apache/commons/lang/text/MultiFormat.java,src/java/org/apache/commons/lang/text/MultiFormat.java,121,"ublic Object parseObject(String source, ParsePosition pos) {"
False,src/java/org/apache/commons/lang/text/MultiFormat.java,src/java/org/apache/commons/lang/text/MultiFormat.java,122,nt start = pos.getIndex();
False,src/java/org/apache/commons/lang/text/MultiFormat.java,src/java/org/apache/commons/lang/text/MultiFormat.java,123,ormat[] d = getDelegates();
False,src/java/org/apache/commons/lang/text/MultiFormat.java,src/java/org/apache/commons/lang/text/MultiFormat.java,124,or (int i = 0; i < d.length; i++) {
False,src/java/org/apache/commons/lang/text/MultiFormat.java,src/java/org/apache/commons/lang/text/MultiFormat.java,125,"bject o = d[i].parseObject(source, pos);"
False,src/java/org/apache/commons/lang/text/MultiFormat.java,src/java/org/apache/commons/lang/text/MultiFormat.java,126,f (pos.getErrorIndex() < 0) {
False,src/java/org/apache/commons/lang/text/MultiFormat.java,src/java/org/apache/commons/lang/text/MultiFormat.java,127,eturn o;
False,src/java/org/apache/commons/lang/text/MultiFormat.java,src/java/org/apache/commons/lang/text/MultiFormat.java,129,/ set up for next attempt:
False,src/java/org/apache/commons/lang/text/MultiFormat.java,src/java/org/apache/commons/lang/text/MultiFormat.java,130,os.setIndex(start);
False,src/java/org/apache/commons/lang/text/MultiFormat.java,src/java/org/apache/commons/lang/text/MultiFormat.java,131,os.setErrorIndex(-1);
False,src/java/org/apache/commons/lang/text/MultiFormat.java,src/java/org/apache/commons/lang/text/MultiFormat.java,133,os.setErrorIndex(start);
False,src/java/org/apache/commons/lang/text/MultiFormat.java,src/java/org/apache/commons/lang/text/MultiFormat.java,134,eturn null;
False,src/java/org/apache/commons/lang/text/MultiFormat.java,src/java/org/apache/commons/lang/text/MultiFormat.java,138, Set the delegates.
False,src/java/org/apache/commons/lang/text/MultiFormat.java,src/java/org/apache/commons/lang/text/MultiFormat.java,140, @param delegates the Format[] delegates to set.
False,src/java/org/apache/commons/lang/text/MultiFormat.java,src/java/org/apache/commons/lang/text/MultiFormat.java,142,ublic void setDelegates(Format[] delegates) {
False,src/java/org/apache/commons/lang/text/MultiFormat.java,src/java/org/apache/commons/lang/text/MultiFormat.java,143,"alidate.noNullElements(delegates,"
False,src/java/org/apache/commons/lang/text/MultiFormat.java,src/java/org/apache/commons/lang/text/MultiFormat.java,144,"Null elements present in delegates Format[]"");"
False,src/java/org/apache/commons/lang/text/MultiFormat.java,src/java/org/apache/commons/lang/text/MultiFormat.java,145,his.delegates = delegates;
False,src/java/org/apache/commons/lang/text/MultiFormat.java,src/java/org/apache/commons/lang/text/MultiFormat.java,149, Get the delegates.
False,src/java/org/apache/commons/lang/text/MultiFormat.java,src/java/org/apache/commons/lang/text/MultiFormat.java,151, @return Format[].
False,src/java/org/apache/commons/lang/text/MultiFormat.java,src/java/org/apache/commons/lang/text/MultiFormat.java,153,ublic Format[] getDelegates() {
False,src/java/org/apache/commons/lang/text/MultiFormat.java,src/java/org/apache/commons/lang/text/MultiFormat.java,154,eturn delegates;
False,src/java/org/apache/commons/lang/text/MultiFormat.java,src/java/org/apache/commons/lang/text/MultiFormat.java,158, Validate and return our delegates.
False,src/java/org/apache/commons/lang/text/MultiFormat.java,src/java/org/apache/commons/lang/text/MultiFormat.java,160," @return delegate Formats, not null"
False,src/java/org/apache/commons/lang/text/MultiFormat.java,src/java/org/apache/commons/lang/text/MultiFormat.java,162,rivate Format[] getValidDelegates() {
False,src/java/org/apache/commons/lang/text/MultiFormat.java,src/java/org/apache/commons/lang/text/MultiFormat.java,163,ormat[] result = getDelegates();
False,src/java/org/apache/commons/lang/text/MultiFormat.java,src/java/org/apache/commons/lang/text/MultiFormat.java,164,"alidate.notEmpty(result, ""No delegate Formats configured"");"
False,src/java/org/apache/commons/lang/text/MultiFormat.java,src/java/org/apache/commons/lang/text/MultiFormat.java,165,eturn result;
False,src/test/org/apache/commons/lang/text/MultiFormatTest.java,src/test/org/apache/commons/lang/text/MultiFormatTest.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/org/apache/commons/lang/text/MultiFormatTest.java,src/test/org/apache/commons/lang/text/MultiFormatTest.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/org/apache/commons/lang/text/MultiFormatTest.java,src/test/org/apache/commons/lang/text/MultiFormatTest.java,4, this work for additional information regarding copyright ownership.
False,src/test/org/apache/commons/lang/text/MultiFormatTest.java,src/test/org/apache/commons/lang/text/MultiFormatTest.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/org/apache/commons/lang/text/MultiFormatTest.java,src/test/org/apache/commons/lang/text/MultiFormatTest.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/org/apache/commons/lang/text/MultiFormatTest.java,src/test/org/apache/commons/lang/text/MultiFormatTest.java,7, the License.  You may obtain a copy of the License at
False,src/test/org/apache/commons/lang/text/MultiFormatTest.java,src/test/org/apache/commons/lang/text/MultiFormatTest.java,9,      http://www.apache.org/licenses/LICENSE-2.0
False,src/test/org/apache/commons/lang/text/MultiFormatTest.java,src/test/org/apache/commons/lang/text/MultiFormatTest.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/org/apache/commons/lang/text/MultiFormatTest.java,src/test/org/apache/commons/lang/text/MultiFormatTest.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/org/apache/commons/lang/text/MultiFormatTest.java,src/test/org/apache/commons/lang/text/MultiFormatTest.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/org/apache/commons/lang/text/MultiFormatTest.java,src/test/org/apache/commons/lang/text/MultiFormatTest.java,14, See the License for the specific language governing permissions and
False,src/test/org/apache/commons/lang/text/MultiFormatTest.java,src/test/org/apache/commons/lang/text/MultiFormatTest.java,15, limitations under the License.
False,src/test/org/apache/commons/lang/text/MultiFormatTest.java,src/test/org/apache/commons/lang/text/MultiFormatTest.java,17,ackage org.apache.commons.lang.text;
False,src/test/org/apache/commons/lang/text/MultiFormatTest.java,src/test/org/apache/commons/lang/text/MultiFormatTest.java,19,mport java.text.DateFormat;
False,src/test/org/apache/commons/lang/text/MultiFormatTest.java,src/test/org/apache/commons/lang/text/MultiFormatTest.java,20,mport java.text.FieldPosition;
False,src/test/org/apache/commons/lang/text/MultiFormatTest.java,src/test/org/apache/commons/lang/text/MultiFormatTest.java,21,mport java.text.Format;
False,src/test/org/apache/commons/lang/text/MultiFormatTest.java,src/test/org/apache/commons/lang/text/MultiFormatTest.java,22,mport java.text.NumberFormat;
False,src/test/org/apache/commons/lang/text/MultiFormatTest.java,src/test/org/apache/commons/lang/text/MultiFormatTest.java,23,mport java.text.ParseException;
False,src/test/org/apache/commons/lang/text/MultiFormatTest.java,src/test/org/apache/commons/lang/text/MultiFormatTest.java,24,mport java.text.ParsePosition;
False,src/test/org/apache/commons/lang/text/MultiFormatTest.java,src/test/org/apache/commons/lang/text/MultiFormatTest.java,25,mport java.util.Calendar;
False,src/test/org/apache/commons/lang/text/MultiFormatTest.java,src/test/org/apache/commons/lang/text/MultiFormatTest.java,26,mport java.util.Date;
False,src/test/org/apache/commons/lang/text/MultiFormatTest.java,src/test/org/apache/commons/lang/text/MultiFormatTest.java,27,mport java.util.GregorianCalendar;
False,src/test/org/apache/commons/lang/text/MultiFormatTest.java,src/test/org/apache/commons/lang/text/MultiFormatTest.java,28,mport java.util.Locale;
False,src/test/org/apache/commons/lang/text/MultiFormatTest.java,src/test/org/apache/commons/lang/text/MultiFormatTest.java,30,mport org.apache.commons.lang.ClassUtils;
False,src/test/org/apache/commons/lang/text/MultiFormatTest.java,src/test/org/apache/commons/lang/text/MultiFormatTest.java,31,mport org.apache.commons.lang.Validate;
False,src/test/org/apache/commons/lang/text/MultiFormatTest.java,src/test/org/apache/commons/lang/text/MultiFormatTest.java,33,mport junit.framework.TestCase;
False,src/test/org/apache/commons/lang/text/MultiFormatTest.java,src/test/org/apache/commons/lang/text/MultiFormatTest.java,36, Test MultiFormat
False,src/test/org/apache/commons/lang/text/MultiFormatTest.java,src/test/org/apache/commons/lang/text/MultiFormatTest.java,38, @author Matt Benson
False,src/test/org/apache/commons/lang/text/MultiFormatTest.java,src/test/org/apache/commons/lang/text/MultiFormatTest.java,39, @since 2.4
False,src/test/org/apache/commons/lang/text/MultiFormatTest.java,src/test/org/apache/commons/lang/text/MultiFormatTest.java,40, @version $Id$
False,src/test/org/apache/commons/lang/text/MultiFormatTest.java,src/test/org/apache/commons/lang/text/MultiFormatTest.java,42,ublic class MultiFormatTest extends TestCase {
False,src/test/org/apache/commons/lang/text/MultiFormatTest.java,src/test/org/apache/commons/lang/text/MultiFormatTest.java,43,rivate class GuardedFormat extends Format {
False,src/test/org/apache/commons/lang/text/MultiFormatTest.java,src/test/org/apache/commons/lang/text/MultiFormatTest.java,44,rivate static final long serialVersionUID = 1L;
False,src/test/org/apache/commons/lang/text/MultiFormatTest.java,src/test/org/apache/commons/lang/text/MultiFormatTest.java,46,ormat delegate;
False,src/test/org/apache/commons/lang/text/MultiFormatTest.java,src/test/org/apache/commons/lang/text/MultiFormatTest.java,47,lass[] allowableTypes;
False,src/test/org/apache/commons/lang/text/MultiFormatTest.java,src/test/org/apache/commons/lang/text/MultiFormatTest.java,50, Create a new MultiFormatTest.GuardedFormat.
False,src/test/org/apache/commons/lang/text/MultiFormatTest.java,src/test/org/apache/commons/lang/text/MultiFormatTest.java,52,"ublic GuardedFormat(Format delegate, Class[] allowableTypes) {"
False,src/test/org/apache/commons/lang/text/MultiFormatTest.java,src/test/org/apache/commons/lang/text/MultiFormatTest.java,53,alidate.notNull(delegate);
False,src/test/org/apache/commons/lang/text/MultiFormatTest.java,src/test/org/apache/commons/lang/text/MultiFormatTest.java,54,his.delegate = delegate;
False,src/test/org/apache/commons/lang/text/MultiFormatTest.java,src/test/org/apache/commons/lang/text/MultiFormatTest.java,55,alidate.notNull(allowableTypes);
False,src/test/org/apache/commons/lang/text/MultiFormatTest.java,src/test/org/apache/commons/lang/text/MultiFormatTest.java,56,his.allowableTypes = allowableTypes;
False,src/test/org/apache/commons/lang/text/MultiFormatTest.java,src/test/org/apache/commons/lang/text/MultiFormatTest.java,59,"ublic StringBuffer format(Object obj, StringBuffer toAppendTo,"
False,src/test/org/apache/commons/lang/text/MultiFormatTest.java,src/test/org/apache/commons/lang/text/MultiFormatTest.java,60,ieldPosition pos) {
False,src/test/org/apache/commons/lang/text/MultiFormatTest.java,src/test/org/apache/commons/lang/text/MultiFormatTest.java,61,lass c = obj == null ? null : obj.getClass();
False,src/test/org/apache/commons/lang/text/MultiFormatTest.java,src/test/org/apache/commons/lang/text/MultiFormatTest.java,62,or (int i = 0; i < allowableTypes.length; i++) {
False,src/test/org/apache/commons/lang/text/MultiFormatTest.java,src/test/org/apache/commons/lang/text/MultiFormatTest.java,63,"f (ClassUtils.isAssignable(c, allowableTypes[i])) {"
False,src/test/org/apache/commons/lang/text/MultiFormatTest.java,src/test/org/apache/commons/lang/text/MultiFormatTest.java,64,"eturn delegate.format(obj, toAppendTo, pos);"
False,src/test/org/apache/commons/lang/text/MultiFormatTest.java,src/test/org/apache/commons/lang/text/MultiFormatTest.java,67,hrow new IllegalArgumentException();
False,src/test/org/apache/commons/lang/text/MultiFormatTest.java,src/test/org/apache/commons/lang/text/MultiFormatTest.java,70,"ublic Object parseObject(String source, ParsePosition pos) {"
False,src/test/org/apache/commons/lang/text/MultiFormatTest.java,src/test/org/apache/commons/lang/text/MultiFormatTest.java,71,"eturn delegate.parseObject(source, pos);"
False,src/test/org/apache/commons/lang/text/MultiFormatTest.java,src/test/org/apache/commons/lang/text/MultiFormatTest.java,75,rivate Format format;
False,src/test/org/apache/commons/lang/text/MultiFormatTest.java,src/test/org/apache/commons/lang/text/MultiFormatTest.java,78, (non-Javadoc)
False,src/test/org/apache/commons/lang/text/MultiFormatTest.java,src/test/org/apache/commons/lang/text/MultiFormatTest.java,80, @see junit.framework.TestCase#setUp()
False,src/test/org/apache/commons/lang/text/MultiFormatTest.java,src/test/org/apache/commons/lang/text/MultiFormatTest.java,82,rotected void setUp() throws Exception {
False,src/test/org/apache/commons/lang/text/MultiFormatTest.java,src/test/org/apache/commons/lang/text/MultiFormatTest.java,83,uper.setUp();
False,src/test/org/apache/commons/lang/text/MultiFormatTest.java,src/test/org/apache/commons/lang/text/MultiFormatTest.java,84,"/ silliness to avoid the DateFormat grabbing the Integer, or the"
False,src/test/org/apache/commons/lang/text/MultiFormatTest.java,src/test/org/apache/commons/lang/text/MultiFormatTest.java,85,/ integer parsing the first (month) date component:
False,src/test/org/apache/commons/lang/text/MultiFormatTest.java,src/test/org/apache/commons/lang/text/MultiFormatTest.java,86,ormat = new MultiFormat.Builder().add(
False,src/test/org/apache/commons/lang/text/MultiFormatTest.java,src/test/org/apache/commons/lang/text/MultiFormatTest.java,87,"ew GuardedFormat(DateFormat.getDateInstance(DateFormat.SHORT,"
False,src/test/org/apache/commons/lang/text/MultiFormatTest.java,src/test/org/apache/commons/lang/text/MultiFormatTest.java,88,"ocale.US), new Class[] { Date.class })).add("
False,src/test/org/apache/commons/lang/text/MultiFormatTest.java,src/test/org/apache/commons/lang/text/MultiFormatTest.java,89,etIntegerNumberFormat(Locale.US)).toMultiFormat();
False,src/test/org/apache/commons/lang/text/MultiFormatTest.java,src/test/org/apache/commons/lang/text/MultiFormatTest.java,92,rivate NumberFormat getIntegerNumberFormat(Locale locale) {
False,src/test/org/apache/commons/lang/text/MultiFormatTest.java,src/test/org/apache/commons/lang/text/MultiFormatTest.java,93,umberFormat result = NumberFormat.getInstance(locale);
False,src/test/org/apache/commons/lang/text/MultiFormatTest.java,src/test/org/apache/commons/lang/text/MultiFormatTest.java,94,esult.setMaximumFractionDigits(0);
False,src/test/org/apache/commons/lang/text/MultiFormatTest.java,src/test/org/apache/commons/lang/text/MultiFormatTest.java,95,esult.setParseIntegerOnly(true);
False,src/test/org/apache/commons/lang/text/MultiFormatTest.java,src/test/org/apache/commons/lang/text/MultiFormatTest.java,96,eturn result;
False,src/test/org/apache/commons/lang/text/MultiFormatTest.java,src/test/org/apache/commons/lang/text/MultiFormatTest.java,99,ublic void testFormatNumber() {
False,src/test/org/apache/commons/lang/text/MultiFormatTest.java,src/test/org/apache/commons/lang/text/MultiFormatTest.java,100,"ssertEquals(""1,000"", format.format(new Integer(1000)));"
False,src/test/org/apache/commons/lang/text/MultiFormatTest.java,src/test/org/apache/commons/lang/text/MultiFormatTest.java,103,ublic void testParseNumber() throws ParseException {
False,src/test/org/apache/commons/lang/text/MultiFormatTest.java,src/test/org/apache/commons/lang/text/MultiFormatTest.java,104,"ssertEquals(new Integer(-1000).intValue(), ((Number) format"
False,src/test/org/apache/commons/lang/text/MultiFormatTest.java,src/test/org/apache/commons/lang/text/MultiFormatTest.java,105,"parseObject(""-1,000"")).intValue());"
False,src/test/org/apache/commons/lang/text/MultiFormatTest.java,src/test/org/apache/commons/lang/text/MultiFormatTest.java,108,ublic void testFormatDate() {
False,src/test/org/apache/commons/lang/text/MultiFormatTest.java,src/test/org/apache/commons/lang/text/MultiFormatTest.java,109,"ssertEquals(""1/1/70"", format.format(new GregorianCalendar(1970,"
False,src/test/org/apache/commons/lang/text/MultiFormatTest.java,src/test/org/apache/commons/lang/text/MultiFormatTest.java,110,"alendar.JANUARY, 01).getTime()));"
False,src/test/org/apache/commons/lang/text/MultiFormatTest.java,src/test/org/apache/commons/lang/text/MultiFormatTest.java,113,ublic void testParseDate() throws ParseException {
False,src/test/org/apache/commons/lang/text/MultiFormatTest.java,src/test/org/apache/commons/lang/text/MultiFormatTest.java,114,"ssertEquals(new GregorianCalendar(1970, Calendar.JANUARY, 01)"
False,src/test/org/apache/commons/lang/text/MultiFormatTest.java,src/test/org/apache/commons/lang/text/MultiFormatTest.java,115,"getTime(), format.parseObject(""1/1/70""));"
False,src/test/org/apache/commons/lang/text/MultiFormatTest.java,src/test/org/apache/commons/lang/text/MultiFormatTest.java,118,ublic void testFormatObject() {
False,src/test/org/apache/commons/lang/text/MultiFormatTest.java,src/test/org/apache/commons/lang/text/MultiFormatTest.java,119,ry {
False,src/test/org/apache/commons/lang/text/MultiFormatTest.java,src/test/org/apache/commons/lang/text/MultiFormatTest.java,120,ormat.format(new Object());
False,src/test/org/apache/commons/lang/text/MultiFormatTest.java,src/test/org/apache/commons/lang/text/MultiFormatTest.java,121,"ail(""expected IllegalArgumentException"");"
False,src/test/org/apache/commons/lang/text/MultiFormatTest.java,src/test/org/apache/commons/lang/text/MultiFormatTest.java,122, catch (IllegalArgumentException e) {
False,src/test/org/apache/commons/lang/text/MultiFormatTest.java,src/test/org/apache/commons/lang/text/MultiFormatTest.java,123,/ okay
False,src/test/org/apache/commons/lang/text/MultiFormatTest.java,src/test/org/apache/commons/lang/text/MultiFormatTest.java,127,ublic void testParseGarbage() {
False,src/test/org/apache/commons/lang/text/MultiFormatTest.java,src/test/org/apache/commons/lang/text/MultiFormatTest.java,128,ry {
False,src/test/org/apache/commons/lang/text/MultiFormatTest.java,src/test/org/apache/commons/lang/text/MultiFormatTest.java,129,"ormat.parseObject(""garbage"");"
False,src/test/org/apache/commons/lang/text/MultiFormatTest.java,src/test/org/apache/commons/lang/text/MultiFormatTest.java,130,"ail(""expected ParseException"");"
False,src/test/org/apache/commons/lang/text/MultiFormatTest.java,src/test/org/apache/commons/lang/text/MultiFormatTest.java,131, catch (ParseException e) {
False,src/test/org/apache/commons/lang/text/MultiFormatTest.java,src/test/org/apache/commons/lang/text/MultiFormatTest.java,132,/okay
False,src/test/org/apache/commons/lang/text/TextTestSuite.java,src/test/org/apache/commons/lang/text/TextTestSuite.java,59,uite.addTestSuite(MultiFormatTest.class);
