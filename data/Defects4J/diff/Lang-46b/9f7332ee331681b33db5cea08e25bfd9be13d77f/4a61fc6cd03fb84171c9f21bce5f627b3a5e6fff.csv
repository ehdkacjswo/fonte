is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,18,import java.lang.reflect.Method;
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,19,import java.lang.reflect.Modifier;
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,597,"* <p>Returns the desired Method much like <code>Class.getMethod</code>, however"
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,598,* it ensures that the returned Method is from a public class or interface and not
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,599,* from an anonymous inner class. This means that the Method is invokable and
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,600,* doesn't fall foul of Java bug
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,601,"* <a href=""http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=4071957"">4071957</a>)."
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,603,*  <code><pre>Set set = Collections.unmodifiableSet(...);
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,604,"*  Method method = ClassUtils.getPublicMethod(set.getClass(), ""isEmpty"",  new Class[0]);"
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,605,"*  Object result = method.invoke(set, new Object[]);</pre></code>"
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,606,* </p>
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,608,"public static Method getPublicMethod(Class cls, String methodName, Class parameterTypes[])"
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,609,"throws SecurityException, NoSuchMethodException"
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,612,"Method declaredMethod = cls.getMethod(methodName, parameterTypes);"
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,614,if (Modifier.isPublic(declaredMethod.getDeclaringClass().getModifiers())) {
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,615,return declaredMethod;
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,618,List candidateClasses = new ArrayList();
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,619,candidateClasses.addAll(getAllInterfaces(cls));
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,620,candidateClasses.addAll(getAllSuperclasses(cls));
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,622,for (Iterator iter=candidateClasses.iterator(); iter.hasNext(); ) {
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,623,Class candidateClass = (Class) iter.next();
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,624,if (!Modifier.isPublic(candidateClass.getModifiers())) {
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,625,continue;
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,627,Method candidateMethod;
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,628,try {
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,629,"candidateMethod = candidateClass.getMethod(methodName, parameterTypes);"
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,630,} catch (NoSuchMethodException e) {
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,631,continue;
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,633,if (Modifier.isPublic(candidateMethod.getDeclaringClass().getModifiers())) {
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,634,return candidateMethod;
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,638,"String message = ""Can't find an public method for "" + methodName + "" "" + ArrayUtils.toString(parameterTypes);"
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,639,throw new NoSuchMethodException(message);
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,19,import java.lang.reflect.Method;
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,26,import java.util.Set;
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,27,import java.util.HashSet;
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,28,import java.util.Collections;
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,527,// Show the Java bug: http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=4071957
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,528,// We may have to delete this if a JDK fixes the bug.
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,529,public void testShowJavaBug() throws Exception {
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,530,// Tests with Collections$UnmodifiableSet
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,531,Set set = Collections.unmodifiableSet(new HashSet());
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,532,"Method isEmptyMethod = set.getClass().getMethod(""isEmpty"",  new Class[0]);"
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,533,try {
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,534,"isEmptyMethod.invoke(set, new Object[0]);"
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,535,"fail(""Failed to throw IllegalAccessException as expected"");"
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,536,} catch(IllegalAccessException iae) {
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,537,// expected
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,541,public void testGetPublicMethod() throws Exception {
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,542,// Tests with Collections$UnmodifiableSet
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,543,Set set = Collections.unmodifiableSet(new HashSet());
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,544,"Method isEmptyMethod = ClassUtils.getPublicMethod(set.getClass(), ""isEmpty"",  new Class[0]);"
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,545,assertTrue(Modifier.isPublic(isEmptyMethod.getDeclaringClass().getModifiers()));
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,547,try {
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,548,"isEmptyMethod.invoke(set, new Object[0]);"
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,549,} catch(java.lang.IllegalAccessException iae) {
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,550,"fail(""Should not have thrown IllegalAccessException"");"
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,553,// Tests with a public Class
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,554,"Method toStringMethod = ClassUtils.getPublicMethod(Object.class, ""toString"",  new Class[0]);"
True,src/test/org/apache/commons/lang/ClassUtilsTest.java,src/test/org/apache/commons/lang/ClassUtilsTest.java,555,"assertEquals(Object.class.getMethod(""toString"", new Class[0]), toStringMethod);"
