is_addition,old_file_path,new_file_path,line_num,content
True,src/com/google/javascript/jscomp/CheckGlobalThis.java,src/com/google/javascript/jscomp/CheckGlobalThis.java,19,import com.google.javascript.jscomp.CheckLevel;
True,src/com/google/javascript/jscomp/CheckGlobalThis.java,src/com/google/javascript/jscomp/CheckGlobalThis.java,64,private final CheckLevel level;
False,src/com/google/javascript/jscomp/CheckGlobalThis.java,src/com/google/javascript/jscomp/CheckGlobalThis.java,71,heckGlobalThis(AbstractCompiler compiler) {
True,src/com/google/javascript/jscomp/CheckGlobalThis.java,src/com/google/javascript/jscomp/CheckGlobalThis.java,73,"CheckGlobalThis(AbstractCompiler compiler, CheckLevel level) {"
True,src/com/google/javascript/jscomp/CheckGlobalThis.java,src/com/google/javascript/jscomp/CheckGlobalThis.java,75,this.level = level;
False,src/com/google/javascript/jscomp/CheckGlobalThis.java,src/com/google/javascript/jscomp/CheckGlobalThis.java,156,"ompiler.report(t.makeError(n, GLOBAL_THIS));"
True,src/com/google/javascript/jscomp/CheckGlobalThis.java,src/com/google/javascript/jscomp/CheckGlobalThis.java,159,"compiler.report(t.makeError(n, level, GLOBAL_THIS));"
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,235,/ DiagnosticGroups override the plain checkTypes option.
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,236,f (options.enables(DiagnosticGroups.CHECK_TYPES)) {
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,237,ptions.checkTypes = true;
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,238, else if (options.disables(DiagnosticGroups.CHECK_TYPES)) {
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,239,ptions.checkTypes = false;
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,240, else if (!options.checkTypes) {
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,241,/ If DiagnosticGroups did not override the plain checkTypes
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,242,"/ option, and checkTypes is enabled, then turn off the"
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,243,/ parser type warnings.
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,244,ptions.setWarningLevel(
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,245,iagnosticGroup.forType(
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,246,"hinoErrorReporter.TYPE_PARSE_ERROR),"
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,247,heckLevel.OFF);
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,250,f (options.checkGlobalThisLevel.isOn()) {
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,251,ptions.setWarningLevel(
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,252,"iagnosticGroups.GLOBAL_THIS,"
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,253,ptions.checkGlobalThisLevel);
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,257,// DiagnosticGroups override the plain checkTypes option.
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,258,if (options.enables(DiagnosticGroups.CHECK_TYPES)) {
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,259,options.checkTypes = true;
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,260,} else if (options.disables(DiagnosticGroups.CHECK_TYPES)) {
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,261,options.checkTypes = false;
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,262,} else if (!options.checkTypes) {
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,263,// If DiagnosticGroups did not override the plain checkTypes
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,264,"// option, and checkTypes is enabled, then turn off the"
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,265,// parser type warnings.
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,266,guards.add(
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,267,new DiagnosticGroupWarningsGuard(
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,268,DiagnosticGroup.forType(
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,269,"RhinoErrorReporter.TYPE_PARSE_ERROR),"
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,270,CheckLevel.OFF));
False,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,184,ptions.enables(DiagnosticGroups.GLOBAL_THIS)) {
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,184,options.checkGlobalThisLevel.isOn()) {
False,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,702,f (options.enables(DiagnosticGroups.GLOBAL_THIS)) {
False,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,703,haredCallbacks.add(new CheckGlobalThis(compiler));
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,702,CheckLevel checkGlobalThisLevel = options.checkGlobalThisLevel;
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,703,if (checkGlobalThisLevel.isOn()) {
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,704,sharedCallbacks.add(
True,src/com/google/javascript/jscomp/DefaultPassConfig.java,src/com/google/javascript/jscomp/DefaultPassConfig.java,705,"new CheckGlobalThis(compiler, checkGlobalThisLevel));"
False,src/com/google/javascript/jscomp/DiagnosticGroups.java,src/com/google/javascript/jscomp/DiagnosticGroups.java,57,"/ If a group is suppressable on a per-file basis, it should be added"
False,src/com/google/javascript/jscomp/DiagnosticGroups.java,src/com/google/javascript/jscomp/DiagnosticGroups.java,58,/ to parser/ParserConfig.properties
False,src/com/google/javascript/jscomp/DiagnosticGroups.java,src/com/google/javascript/jscomp/DiagnosticGroups.java,62,"externsValidation, fileoverviewTags, globalThis, "" +"
False,src/com/google/javascript/jscomp/DiagnosticGroups.java,src/com/google/javascript/jscomp/DiagnosticGroups.java,63,"internetExplorerChecks, nvalidCasts, missingProperties, "" +"
False,src/com/google/javascript/jscomp/DiagnosticGroups.java,src/com/google/javascript/jscomp/DiagnosticGroups.java,64,"nonStandardJsDocs, strictModuleDepCheck, typeInvalidation, "" +"
True,src/com/google/javascript/jscomp/DiagnosticGroups.java,src/com/google/javascript/jscomp/DiagnosticGroups.java,59,"""externsValidation, fileoverviewTags, internetExplorerChecks, "" +"
True,src/com/google/javascript/jscomp/DiagnosticGroups.java,src/com/google/javascript/jscomp/DiagnosticGroups.java,60,"""invalidCasts, missingProperties, nonStandardJsDocs, "" +"
True,src/com/google/javascript/jscomp/DiagnosticGroups.java,src/com/google/javascript/jscomp/DiagnosticGroups.java,61,"""strictModuleDepCheck, typeInvalidation, "" +"
False,src/com/google/javascript/jscomp/DiagnosticGroups.java,src/com/google/javascript/jscomp/DiagnosticGroups.java,68,ublic static DiagnosticGroup GLOBAL_THIS = DiagnosticGroups
False,src/com/google/javascript/jscomp/DiagnosticGroups.java,src/com/google/javascript/jscomp/DiagnosticGroups.java,69,"registerGroup(""globalThis"","
False,src/com/google/javascript/jscomp/DiagnosticGroups.java,src/com/google/javascript/jscomp/DiagnosticGroups.java,70,ew DiagnosticGroup(
False,src/com/google/javascript/jscomp/DiagnosticGroups.java,src/com/google/javascript/jscomp/DiagnosticGroups.java,71,heckGlobalThis.GLOBAL_THIS));
True,test/com/google/javascript/jscomp/CheckGlobalThisTest.java,test/com/google/javascript/jscomp/CheckGlobalThisTest.java,19,import com.google.javascript.jscomp.CheckLevel;
False,test/com/google/javascript/jscomp/CheckGlobalThisTest.java,test/com/google/javascript/jscomp/CheckGlobalThisTest.java,30,"ompiler, new CheckGlobalThis(compiler));"
True,test/com/google/javascript/jscomp/CheckGlobalThisTest.java,test/com/google/javascript/jscomp/CheckGlobalThisTest.java,32,"compiler, new CheckGlobalThis(compiler, CheckLevel.ERROR));"
False,test/com/google/javascript/jscomp/CheckGlobalThisTest.java,test/com/google/javascript/jscomp/CheckGlobalThisTest.java,34,"estSame(js, CheckGlobalThis.GLOBAL_THIS);"
True,test/com/google/javascript/jscomp/CheckGlobalThisTest.java,test/com/google/javascript/jscomp/CheckGlobalThisTest.java,36,"test(js, null, CheckGlobalThis.GLOBAL_THIS);"
False,test/com/google/javascript/jscomp/CheckGlobalThisTest.java,test/com/google/javascript/jscomp/CheckGlobalThisTest.java,239,ublic void testSuppressWarning() {
False,test/com/google/javascript/jscomp/CheckGlobalThisTest.java,test/com/google/javascript/jscomp/CheckGlobalThisTest.java,240,"estFailure(""var x = function() { this.complex = 5; };"");"
False,test/com/google/javascript/jscomp/CheckGlobalThisTest.java,test/com/google/javascript/jscomp/CheckGlobalThisTest.java,241,"estSame(""/** @suppress {globalThis} */"" +"
False,test/com/google/javascript/jscomp/CheckGlobalThisTest.java,test/com/google/javascript/jscomp/CheckGlobalThisTest.java,242,"var x = function() { this.complex = 5; };"");"
False,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,117,ublic void testCheckGlobalThisOffByDefault() {
False,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,118,"estSame(""function f() { this.a = 3; }"");"
False,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,121,ublic void testCheckGlobalThisOnWithAdvancedMode() {
False,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,122,"rgs.add(""--compilation_level=ADVANCED_OPTIMIZATIONS"");"
False,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,123,"est(""function f() { this.a = 3; }"", CheckGlobalThis.GLOBAL_THIS);"
False,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,126,ublic void testCheckGlobalThisOnWithErrorFlag() {
False,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,127,"rgs.add(""--jscomp_error=globalThis"");"
False,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,test/com/google/javascript/jscomp/CommandLineRunnerTest.java,128,"est(""function f() { this.a = 3; }"", CheckGlobalThis.GLOBAL_THIS);"
