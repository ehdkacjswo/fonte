is_addition,old_file_path,new_file_path,line_num,content
True,src/com/google/javascript/jscomp/ant/AntErrorManager.java,src/com/google/javascript/jscomp/ant/AntErrorManager.java,2,* Copyright 2010 Google Inc.
True,src/com/google/javascript/jscomp/ant/AntErrorManager.java,src/com/google/javascript/jscomp/ant/AntErrorManager.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/com/google/javascript/jscomp/ant/AntErrorManager.java,src/com/google/javascript/jscomp/ant/AntErrorManager.java,5,* you may not use this file except in compliance with the License.
True,src/com/google/javascript/jscomp/ant/AntErrorManager.java,src/com/google/javascript/jscomp/ant/AntErrorManager.java,6,* You may obtain a copy of the License at
True,src/com/google/javascript/jscomp/ant/AntErrorManager.java,src/com/google/javascript/jscomp/ant/AntErrorManager.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/com/google/javascript/jscomp/ant/AntErrorManager.java,src/com/google/javascript/jscomp/ant/AntErrorManager.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/com/google/javascript/jscomp/ant/AntErrorManager.java,src/com/google/javascript/jscomp/ant/AntErrorManager.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/com/google/javascript/jscomp/ant/AntErrorManager.java,src/com/google/javascript/jscomp/ant/AntErrorManager.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/com/google/javascript/jscomp/ant/AntErrorManager.java,src/com/google/javascript/jscomp/ant/AntErrorManager.java,13,* See the License for the specific language governing permissions and
True,src/com/google/javascript/jscomp/ant/AntErrorManager.java,src/com/google/javascript/jscomp/ant/AntErrorManager.java,14,* limitations under the License.
True,src/com/google/javascript/jscomp/ant/AntErrorManager.java,src/com/google/javascript/jscomp/ant/AntErrorManager.java,17,package com.google.javascript.jscomp.ant;
True,src/com/google/javascript/jscomp/ant/AntErrorManager.java,src/com/google/javascript/jscomp/ant/AntErrorManager.java,19,import com.google.javascript.jscomp.BasicErrorManager;
True,src/com/google/javascript/jscomp/ant/AntErrorManager.java,src/com/google/javascript/jscomp/ant/AntErrorManager.java,20,import com.google.javascript.jscomp.CheckLevel;
True,src/com/google/javascript/jscomp/ant/AntErrorManager.java,src/com/google/javascript/jscomp/ant/AntErrorManager.java,21,import com.google.javascript.jscomp.JSError;
True,src/com/google/javascript/jscomp/ant/AntErrorManager.java,src/com/google/javascript/jscomp/ant/AntErrorManager.java,22,import com.google.javascript.jscomp.MessageFormatter;
True,src/com/google/javascript/jscomp/ant/AntErrorManager.java,src/com/google/javascript/jscomp/ant/AntErrorManager.java,24,import org.apache.tools.ant.Project;
True,src/com/google/javascript/jscomp/ant/AntErrorManager.java,src/com/google/javascript/jscomp/ant/AntErrorManager.java,25,import org.apache.tools.ant.Task;
True,src/com/google/javascript/jscomp/ant/AntErrorManager.java,src/com/google/javascript/jscomp/ant/AntErrorManager.java,28,* An error manager that pipes warnings and errors properly into the Ant
True,src/com/google/javascript/jscomp/ant/AntErrorManager.java,src/com/google/javascript/jscomp/ant/AntErrorManager.java,29,* task infrastructure.
True,src/com/google/javascript/jscomp/ant/AntErrorManager.java,src/com/google/javascript/jscomp/ant/AntErrorManager.java,32,public final class AntErrorManager
True,src/com/google/javascript/jscomp/ant/AntErrorManager.java,src/com/google/javascript/jscomp/ant/AntErrorManager.java,33,extends BasicErrorManager {
True,src/com/google/javascript/jscomp/ant/AntErrorManager.java,src/com/google/javascript/jscomp/ant/AntErrorManager.java,34,private final MessageFormatter formatter;
True,src/com/google/javascript/jscomp/ant/AntErrorManager.java,src/com/google/javascript/jscomp/ant/AntErrorManager.java,35,private final Task task;
True,src/com/google/javascript/jscomp/ant/AntErrorManager.java,src/com/google/javascript/jscomp/ant/AntErrorManager.java,37,"public AntErrorManager(MessageFormatter formatter, Task task) {"
True,src/com/google/javascript/jscomp/ant/AntErrorManager.java,src/com/google/javascript/jscomp/ant/AntErrorManager.java,38,this.formatter = formatter;
True,src/com/google/javascript/jscomp/ant/AntErrorManager.java,src/com/google/javascript/jscomp/ant/AntErrorManager.java,39,this.task = task;
True,src/com/google/javascript/jscomp/ant/AntErrorManager.java,src/com/google/javascript/jscomp/ant/AntErrorManager.java,42,@Override
True,src/com/google/javascript/jscomp/ant/AntErrorManager.java,src/com/google/javascript/jscomp/ant/AntErrorManager.java,43,"public void println(CheckLevel level, JSError error) {"
True,src/com/google/javascript/jscomp/ant/AntErrorManager.java,src/com/google/javascript/jscomp/ant/AntErrorManager.java,44,switch (level) {
True,src/com/google/javascript/jscomp/ant/AntErrorManager.java,src/com/google/javascript/jscomp/ant/AntErrorManager.java,45,case ERROR:
True,src/com/google/javascript/jscomp/ant/AntErrorManager.java,src/com/google/javascript/jscomp/ant/AntErrorManager.java,46,"this.task.log(error.format(level, this.formatter), Project.MSG_ERR);"
True,src/com/google/javascript/jscomp/ant/AntErrorManager.java,src/com/google/javascript/jscomp/ant/AntErrorManager.java,47,break;
True,src/com/google/javascript/jscomp/ant/AntErrorManager.java,src/com/google/javascript/jscomp/ant/AntErrorManager.java,48,case WARNING:
True,src/com/google/javascript/jscomp/ant/AntErrorManager.java,src/com/google/javascript/jscomp/ant/AntErrorManager.java,49,"this.task.log(error.format(level, this.formatter), Project.MSG_WARN);"
True,src/com/google/javascript/jscomp/ant/AntErrorManager.java,src/com/google/javascript/jscomp/ant/AntErrorManager.java,50,break;
True,src/com/google/javascript/jscomp/ant/AntErrorManager.java,src/com/google/javascript/jscomp/ant/AntErrorManager.java,54,@Override
True,src/com/google/javascript/jscomp/ant/AntErrorManager.java,src/com/google/javascript/jscomp/ant/AntErrorManager.java,55,protected void printSummary() {
True,src/com/google/javascript/jscomp/ant/AntErrorManager.java,src/com/google/javascript/jscomp/ant/AntErrorManager.java,56,String message =
True,src/com/google/javascript/jscomp/ant/AntErrorManager.java,src/com/google/javascript/jscomp/ant/AntErrorManager.java,57,"getErrorCount() + "" error(s), "" + getWarningCount() + "" warning(s)"";"
True,src/com/google/javascript/jscomp/ant/AntErrorManager.java,src/com/google/javascript/jscomp/ant/AntErrorManager.java,59,if (getTypedPercent() > 0.0) {
True,src/com/google/javascript/jscomp/ant/AntErrorManager.java,src/com/google/javascript/jscomp/ant/AntErrorManager.java,60,"message += "", "" + getTypedPercent() + "" typed"";"
True,src/com/google/javascript/jscomp/ant/AntErrorManager.java,src/com/google/javascript/jscomp/ant/AntErrorManager.java,63,int level = (getErrorCount() + getWarningCount() == 0) ?
True,src/com/google/javascript/jscomp/ant/AntErrorManager.java,src/com/google/javascript/jscomp/ant/AntErrorManager.java,64,Project.MSG_INFO : Project.MSG_WARN;
True,src/com/google/javascript/jscomp/ant/AntErrorManager.java,src/com/google/javascript/jscomp/ant/AntErrorManager.java,65,"this.task.log(message, level);"
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,2,* Copyright 2010 Google Inc.
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,5,* you may not use this file except in compliance with the License.
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,6,* You may obtain a copy of the License at
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,8,*     http://www.apache.org/licenses/LICENSE-2.0
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,13,* See the License for the specific language governing permissions and
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,14,* limitations under the License.
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,17,package com.google.javascript.jscomp.ant;
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,19,import com.google.common.collect.Lists;
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,20,import com.google.common.io.LimitInputStream;
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,21,import com.google.javascript.jscomp.CompilationLevel;
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,22,import com.google.javascript.jscomp.Compiler;
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,23,import com.google.javascript.jscomp.CompilerOptions;
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,24,import com.google.javascript.jscomp.CompilerRunner;
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,25,import com.google.javascript.jscomp.JSSourceFile;
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,26,import com.google.javascript.jscomp.MessageFormatter;
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,27,import com.google.javascript.jscomp.Result;
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,28,import com.google.javascript.jscomp.WarningLevel;
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,30,import org.apache.tools.ant.BuildException;
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,31,import org.apache.tools.ant.Project;
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,32,import org.apache.tools.ant.Task;
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,33,import org.apache.tools.ant.types.FileList;
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,35,import java.io.File;
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,36,import java.io.FileWriter;
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,37,import java.io.IOException;
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,38,import java.io.InputStream;
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,39,import java.util.List;
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,40,import java.util.logging.Level;
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,41,import java.util.zip.ZipEntry;
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,42,import java.util.zip.ZipInputStream;
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,45,* This class implements a simple Ant task to do almost the same as
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,46,* CompilerRunner.
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,48,* Most of the public methods of this class are entry points for the
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,49,* Ant code to hook into.
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,53,public final class CompileTask
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,54,extends Task {
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,55,private WarningLevel warningLevel;
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,56,private boolean debugOptions;
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,57,private CompilationLevel compilationLevel;
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,58,private boolean customExternsOnly;
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,59,private File outputFile;
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,60,private final List<FileList> externFileLists;
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,61,private final List<FileList> sourceFileLists;
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,63,public CompileTask() {
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,64,this.warningLevel = WarningLevel.DEFAULT;
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,65,this.debugOptions = false;
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,66,this.compilationLevel = CompilationLevel.SIMPLE_OPTIMIZATIONS;
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,67,this.customExternsOnly = false;
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,68,this.externFileLists = Lists.newLinkedList();
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,69,this.sourceFileLists = Lists.newLinkedList();
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,73,* Set the warning level.
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,74,"* @param value The warning level by string name. (default, quiet, verbose)."
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,76,public void setWarning(String value) {
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,77,"if (""default"".equalsIgnoreCase(value)) {"
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,78,this.warningLevel = WarningLevel.DEFAULT;
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,79,"} else if (""quiet"".equalsIgnoreCase(value)) {"
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,80,this.warningLevel = WarningLevel.QUIET;
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,81,"} else if (""verbose"".equalsIgnoreCase(value)) {"
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,82,this.warningLevel = WarningLevel.VERBOSE;
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,83,} else {
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,84,throw new BuildException(
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,85,"""Unrecognized 'warning' option value ("" + value + "")"");"
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,90,* Enable debugging options.
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,91,* @param value True if debug mode is enabled.
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,93,public void setDebug(boolean value) {
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,94,this.debugOptions = value;
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,98,* Set the compilation level.
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,99,* @param value The optimization level by string name.
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,100,"*     (whitespace, simple, advanced)."
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,102,public void setCompilationLevel(String value) {
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,103,"if (""simple"".equalsIgnoreCase(value)) {"
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,104,this.compilationLevel = CompilationLevel.SIMPLE_OPTIMIZATIONS;
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,105,"} else if (""advanced"".equalsIgnoreCase(value)) {"
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,106,this.compilationLevel = CompilationLevel.ADVANCED_OPTIMIZATIONS;
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,107,"} else if (""whitespace"".equalsIgnoreCase(value)) {"
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,108,this.compilationLevel = CompilationLevel.WHITESPACE_ONLY;
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,109,} else {
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,110,throw new BuildException(
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,111,"""Unrecognized 'compilation' option value ("" + value + "")"");"
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,116,* Use only custom externs.
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,118,public void setCustomExternsOnly(boolean value) {
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,119,this.customExternsOnly = value;
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,123,* Set output file.
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,125,public void setOutput(File value) {
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,126,this.outputFile = value;
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,130,* Sets the externs file.
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,132,public void addExterns(FileList list) {
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,133,this.externFileLists.add(list);
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,137,* Sets the source files.
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,139,public void addSources(FileList list) {
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,140,this.sourceFileLists.add(list);
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,143,public void execute() {
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,144,if (this.outputFile == null) {
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,145,"throw new BuildException(""outputFile attribute must be set"");"
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,148,Compiler.setLoggingLevel(Level.OFF);
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,150,CompilerOptions options = createCompilerOptions();
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,151,Compiler compiler = createCompiler(options);
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,153,JSSourceFile[] externs = findExternFiles();
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,154,JSSourceFile[] sources = findSourceFiles();
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,156,"log(""Compiling "" + sources.length + "" file(s) with "" +"
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,157,"externs.length + "" extern(s)"");"
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,159,"Result result = compiler.compile(externs, sources, options);"
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,160,if (result.success) {
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,161,writeResult(compiler.toSource());
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,165,private CompilerOptions createCompilerOptions() {
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,166,CompilerOptions options = new CompilerOptions();
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,168,if (this.debugOptions) {
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,169,this.compilationLevel.setDebugOptionsForCompilationLevel(options);
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,170,} else {
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,171,this.compilationLevel.setOptionsForCompilationLevel(options);
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,174,this.warningLevel.setOptionsForWarningLevel(options);
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,175,return options;
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,178,private Compiler createCompiler(CompilerOptions options) {
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,179,Compiler compiler = new Compiler();
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,180,MessageFormatter formatter =
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,181,"options.errorFormat.toFormatter(compiler, false);"
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,182,"AntErrorManager errorManager = new AntErrorManager(formatter, this);"
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,183,compiler.setErrorManager(errorManager);
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,184,return compiler;
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,187,private JSSourceFile[] findExternFiles() {
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,188,List<JSSourceFile> files = Lists.newLinkedList();
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,189,if (!this.customExternsOnly) {
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,190,files.addAll(getDefaultExterns());
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,193,for (FileList list : this.externFileLists) {
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,194,files.addAll(findJavaScriptFiles(list));
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,197,return files.toArray(new JSSourceFile[files.size()]);
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,200,private JSSourceFile[] findSourceFiles() {
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,201,List<JSSourceFile> files = Lists.newLinkedList();
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,203,for (FileList list : this.sourceFileLists) {
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,204,files.addAll(findJavaScriptFiles(list));
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,207,return files.toArray(new JSSourceFile[files.size()]);
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,211,* Translates an Ant file list into the file format that the compiler
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,212,* expects.
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,214,private List<JSSourceFile> findJavaScriptFiles(FileList fileList) {
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,215,List<JSSourceFile> files = Lists.newLinkedList();
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,216,File baseDir = fileList.getDir(getProject());
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,218,for (String included : fileList.getFiles(getProject())) {
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,219,"files.add(JSSourceFile.fromFile(new File(baseDir, included)));"
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,222,return files;
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,226,* Gets the default externs set.
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,228,* Adapted from {@link CompilerRunner}.
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,230,private List<JSSourceFile> getDefaultExterns() {
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,231,try {
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,232,InputStream input = CompilerRunner.class.getResourceAsStream(
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,233,"""/externs.zip"");"
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,234,ZipInputStream zip = new ZipInputStream(input);
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,235,List<JSSourceFile> externs = Lists.newLinkedList();
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,237,for (ZipEntry entry; (entry = zip.getNextEntry()) != null; ) {
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,238,LimitInputStream entryStream =
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,239,"new LimitInputStream(zip, entry.getSize());"
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,240,externs.add(
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,241,"JSSourceFile.fromInputStream(entry.getName(), entryStream));"
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,244,return externs;
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,245,} catch (IOException e) {
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,246,throw new BuildException(e);
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,250,private void writeResult(String source) {
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,251,if (this.outputFile.getParentFile().mkdirs()) {
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,252,"log(""Created missing parent directory "" +"
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,253,"this.outputFile.getParentFile(), Project.MSG_DEBUG);"
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,256,try {
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,257,FileWriter out = new FileWriter(this.outputFile);
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,258,out.append(source);
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,259,out.close();
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,260,} catch (IOException e) {
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,261,throw new BuildException(e);
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,264,"log(""Compiled javascript written to "" + this.outputFile.getAbsolutePath(),"
True,src/com/google/javascript/jscomp/ant/CompileTask.java,src/com/google/javascript/jscomp/ant/CompileTask.java,265,Project.MSG_DEBUG);
