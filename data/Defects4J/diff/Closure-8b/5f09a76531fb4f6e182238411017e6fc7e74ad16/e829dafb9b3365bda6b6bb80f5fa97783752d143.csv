is_addition,old_file_path,new_file_path,line_num,content
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1147, else if (parent.getType() == Token.LABEL && block.hasOneChild()) {
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1148,"arent.replaceChild(block, block.removeFirstChild());"
False,src/com/google/javascript/jscomp/NodeUtil.java,src/com/google/javascript/jscomp/NodeUtil.java,1149,eturn true;
False,test/com/google/javascript/jscomp/FoldConstantsTest.java,test/com/google/javascript/jscomp/FoldConstantsTest.java,35,uper.enableLineNumberCheck(true);
True,test/com/google/javascript/jscomp/FoldConstantsTest.java,test/com/google/javascript/jscomp/FoldConstantsTest.java,35,enableLineNumberCheck(true);
True,test/com/google/javascript/jscomp/FoldConstantsTest.java,test/com/google/javascript/jscomp/FoldConstantsTest.java,37,// TODO(nicksantos): Turn this on. There are some normalizations
True,test/com/google/javascript/jscomp/FoldConstantsTest.java,test/com/google/javascript/jscomp/FoldConstantsTest.java,38,// that cause weirdness here.
True,test/com/google/javascript/jscomp/FoldConstantsTest.java,test/com/google/javascript/jscomp/FoldConstantsTest.java,39,disableNormalize();
True,test/com/google/javascript/jscomp/FoldConstantsTest.java,test/com/google/javascript/jscomp/FoldConstantsTest.java,1215,public void testNoNormalizeLabeledExpr() {
True,test/com/google/javascript/jscomp/FoldConstantsTest.java,test/com/google/javascript/jscomp/FoldConstantsTest.java,1216,enableNormalize(true);
True,test/com/google/javascript/jscomp/FoldConstantsTest.java,test/com/google/javascript/jscomp/FoldConstantsTest.java,1217,"foldSame(""var x; foo:{x = 3;}"");"
True,test/com/google/javascript/jscomp/FoldConstantsTest.java,test/com/google/javascript/jscomp/FoldConstantsTest.java,1218,"foldSame(""var x; foo:x = 3;"");"
False,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,810,ssertTrue(NodeUtil.tryMergeBlock(childBlock));
False,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,811,"tring expected = ""foo:a();"";"
False,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,812,tring difference = parse(expected).checkTreeEquals(actual);
False,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,813,"ssertNull(""Nodes do not match:\n"" + difference, difference);"
True,test/com/google/javascript/jscomp/NodeUtilTest.java,test/com/google/javascript/jscomp/NodeUtilTest.java,810,assertFalse(NodeUtil.tryMergeBlock(childBlock));
False,test/com/google/javascript/jscomp/RenameLabelsTest.java,test/com/google/javascript/jscomp/RenameLabelsTest.java,74,"a:break a;"");"
True,test/com/google/javascript/jscomp/RenameLabelsTest.java,test/com/google/javascript/jscomp/RenameLabelsTest.java,74,"""a:{ break a; }"");"
