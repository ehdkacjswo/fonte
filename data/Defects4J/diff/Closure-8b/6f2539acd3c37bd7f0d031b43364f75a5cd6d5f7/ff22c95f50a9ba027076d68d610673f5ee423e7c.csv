is_addition,old_file_path,new_file_path,line_num,content
True,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,169,options.setSummaryDetailLevel(config.summaryDetailLevel);
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,503,(PrintStreamErrorManager) compiler.getErrorManager())
False,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,src/com/google/javascript/jscomp/AbstractCommandLineRunner.java,504,setSummaryDetailLevel(config.summaryDetailLevel);
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,63,ompilerOptions options_ = createDefaultOptions();
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,63,CompilerOptions options_ = null;
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,157,private final PrintStream outStream;
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,161,ddChangeHandler(recentChange);
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,162,his.typeValidator = new TypeValidator(this);
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,163,"etErrorManager(new LoggerErrorManager(createMessageFormatter(), logger_));"
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,163,this((PrintStream) null);
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,171,his();
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,172,etErrorManager(
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,173,"ew PrintStreamErrorManager(createMessageFormatter(), stream));"
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,171,addChangeHandler(recentChange);
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,172,this.typeValidator = new TypeValidator(this);
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,173,outStream = stream;
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,184,ompilerOptions createDefaultOptions() {
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,185,eturn new CompilerOptions();
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,217,* Initialize the compiler options. Only necessary if you're not doing
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,218,* a normal compile() job.
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,220,public void initOptions(CompilerOptions options) {
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,221,options_ = options;
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,222,if (errorManager == null) {
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,223,if (outStream == null) {
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,224,setErrorManager(
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,225,"new LoggerErrorManager(createMessageFormatter(), logger_));"
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,226,} else {
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,227,PrintStreamErrorManager printer =
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,228,"new PrintStreamErrorManager(createMessageFormatter(), outStream);"
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,229,printer.setSummaryDetailLevel(options_.summaryDetailLevel);
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,230,setErrorManager(printer);
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,240,initOptions(options);
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,229,ptions_ = options;
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,261,initOptions(options);
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,262,ptions_ = options;
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1039,initCompilerOptionsIfTesting();
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1052,void initCompilerOptionsIfTesting() {
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1053,if (options_ == null) {
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1054,// initialization for tests that don't initialize the compiler
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1055,// by the normal mechanisms.
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1056,initOptions(new CompilerOptions());
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1062,initCompilerOptionsIfTesting();
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1067,initCompilerOptionsIfTesting();
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1253,initCompilerOptionsIfTesting();
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1626,if (options_ == null) {
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,1627,initOptions(new CompilerOptions());
True,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,530,int summaryDetailLevel = 1;
True,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,879,* Controls how detailed the compilation summary is. Values:
True,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,880,"*  0 (never print summary), 1 (print summary only if there are"
True,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,881,"* errors or warnings), 2 (print summary if type checking is on,"
True,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,882,"* see --check_types), 3 (always print summary). The default level"
True,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,883,* is 1
True,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,885,public void setSummaryDetailLevel(int summaryDetailLevel) {
True,src/com/google/javascript/jscomp/CompilerOptions.java,src/com/google/javascript/jscomp/CompilerOptions.java,886,this.summaryDetailLevel = summaryDetailLevel;
True,test/com/google/javascript/jscomp/CompilerTypeTestCase.java,test/com/google/javascript/jscomp/CompilerTypeTestCase.java,54,compiler.initCompilerOptionsIfTesting();
False,test/com/google/javascript/jscomp/JSModuleTest.java,test/com/google/javascript/jscomp/JSModuleTest.java,87,od.sortInputsByDeps(new Compiler(System.err));
True,test/com/google/javascript/jscomp/JSModuleTest.java,test/com/google/javascript/jscomp/JSModuleTest.java,87,Compiler compiler = new Compiler(System.err);
True,test/com/google/javascript/jscomp/JSModuleTest.java,test/com/google/javascript/jscomp/JSModuleTest.java,88,compiler.initCompilerOptionsIfTesting();
True,test/com/google/javascript/jscomp/JSModuleTest.java,test/com/google/javascript/jscomp/JSModuleTest.java,89,mod.sortInputsByDeps(compiler);
True,test/com/google/javascript/jscomp/NodeTraversalTest.java,test/com/google/javascript/jscomp/NodeTraversalTest.java,84,compiler.initCompilerOptionsIfTesting();
True,test/com/google/javascript/jscomp/PhaseOptimizerTest.java,test/com/google/javascript/jscomp/PhaseOptimizerTest.java,43,compiler.initCompilerOptionsIfTesting();
