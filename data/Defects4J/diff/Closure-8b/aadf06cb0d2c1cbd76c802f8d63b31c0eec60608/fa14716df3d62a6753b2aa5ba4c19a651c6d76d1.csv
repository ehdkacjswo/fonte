is_addition,old_file_path,new_file_path,line_num,content
True,src/com/google/javascript/jscomp/GenerateExports.java,src/com/google/javascript/jscomp/GenerateExports.java,63,CodingConvention convention = compiler.getCodingConvention();
False,src/com/google/javascript/jscomp/GenerateExports.java,src/com/google/javascript/jscomp/GenerateExports.java,96,"ompiler.getCodingConvention(), exportSymbolFunction,"
True,src/com/google/javascript/jscomp/GenerateExports.java,src/com/google/javascript/jscomp/GenerateExports.java,97,"convention, exportSymbolFunction,"
False,src/com/google/javascript/jscomp/GenerateExports.java,src/com/google/javascript/jscomp/GenerateExports.java,100,"ompiler.getCodingConvention(), export,"
True,src/com/google/javascript/jscomp/GenerateExports.java,src/com/google/javascript/jscomp/GenerateExports.java,101,"convention, export,"
False,src/com/google/javascript/jscomp/GenerateExports.java,src/com/google/javascript/jscomp/GenerateExports.java,107,"ompiler.getCodingConvention(), exportPropertyFunction,"
True,src/com/google/javascript/jscomp/GenerateExports.java,src/com/google/javascript/jscomp/GenerateExports.java,108,"convention, exportPropertyFunction,"
False,src/com/google/javascript/jscomp/GenerateExports.java,src/com/google/javascript/jscomp/GenerateExports.java,110,"ompiler.getCodingConvention(), parent,"
True,src/com/google/javascript/jscomp/GenerateExports.java,src/com/google/javascript/jscomp/GenerateExports.java,111,"convention, parent,"
False,src/com/google/javascript/jscomp/GenerateExports.java,src/com/google/javascript/jscomp/GenerateExports.java,114,"ompiler.getCodingConvention(), export,"
True,src/com/google/javascript/jscomp/GenerateExports.java,src/com/google/javascript/jscomp/GenerateExports.java,115,"convention, export,"
False,src/com/google/javascript/jscomp/GenerateExports.java,src/com/google/javascript/jscomp/GenerateExports.java,124,odingConvention convention = compiler.getCodingConvention();
False,src/com/google/javascript/jscomp/GenerateExports.java,src/com/google/javascript/jscomp/GenerateExports.java,143,"ompiler, node, new PrepareAst.PrepareAnnotations(compiler));"
True,src/com/google/javascript/jscomp/GenerateExports.java,src/com/google/javascript/jscomp/GenerateExports.java,143,"compiler, node, new PrepareAst.PrepareAnnotations());"
False,src/com/google/javascript/jscomp/PrepareAst.java,src/com/google/javascript/jscomp/PrepareAst.java,21,mport com.google.javascript.rhino.JSDocInfo;
False,src/com/google/javascript/jscomp/PrepareAst.java,src/com/google/javascript/jscomp/PrepareAst.java,22,mport com.google.javascript.rhino.JSTypeExpression;
False,src/com/google/javascript/jscomp/PrepareAst.java,src/com/google/javascript/jscomp/PrepareAst.java,67,"ompiler, externs, new PrepareAnnotations(compiler));"
True,src/com/google/javascript/jscomp/PrepareAst.java,src/com/google/javascript/jscomp/PrepareAst.java,65,"compiler, externs, new PrepareAnnotations());"
False,src/com/google/javascript/jscomp/PrepareAst.java,src/com/google/javascript/jscomp/PrepareAst.java,71,"ompiler, root, new PrepareAnnotations(compiler));"
True,src/com/google/javascript/jscomp/PrepareAst.java,src/com/google/javascript/jscomp/PrepareAst.java,69,"compiler, root, new PrepareAnnotations());"
False,src/com/google/javascript/jscomp/PrepareAst.java,src/com/google/javascript/jscomp/PrepareAst.java,123,rivate final CodingConvention convention;
False,src/com/google/javascript/jscomp/PrepareAst.java,src/com/google/javascript/jscomp/PrepareAst.java,125,repareAnnotations(AbstractCompiler compiler) {
False,src/com/google/javascript/jscomp/PrepareAst.java,src/com/google/javascript/jscomp/PrepareAst.java,126,his.convention = compiler.getCodingConvention();
True,src/com/google/javascript/jscomp/PrepareAst.java,src/com/google/javascript/jscomp/PrepareAst.java,121,PrepareAnnotations() {
False,src/com/google/javascript/jscomp/PrepareAst.java,src/com/google/javascript/jscomp/PrepareAst.java,145,"nnotateFunctions(n, parent);"
False,src/com/google/javascript/jscomp/PrepareAst.java,src/com/google/javascript/jscomp/PrepareAst.java,221, Annotate optional and var_arg function parameters.
False,src/com/google/javascript/jscomp/PrepareAst.java,src/com/google/javascript/jscomp/PrepareAst.java,223,"rivate void annotateFunctions(Node n, Node parent) {"
False,src/com/google/javascript/jscomp/PrepareAst.java,src/com/google/javascript/jscomp/PrepareAst.java,224,SDocInfo fnInfo = NodeUtil.getFunctionJSDocInfo(n);
False,src/com/google/javascript/jscomp/PrepareAst.java,src/com/google/javascript/jscomp/PrepareAst.java,226,/ Compute which function parameters are optional and
False,src/com/google/javascript/jscomp/PrepareAst.java,src/com/google/javascript/jscomp/PrepareAst.java,227,/ which are var_args.
False,src/com/google/javascript/jscomp/PrepareAst.java,src/com/google/javascript/jscomp/PrepareAst.java,228,ode args = n.getFirstChild().getNext();
False,src/com/google/javascript/jscomp/PrepareAst.java,src/com/google/javascript/jscomp/PrepareAst.java,229,or (Node arg = args.getFirstChild();
False,src/com/google/javascript/jscomp/PrepareAst.java,src/com/google/javascript/jscomp/PrepareAst.java,230,rg != null;
False,src/com/google/javascript/jscomp/PrepareAst.java,src/com/google/javascript/jscomp/PrepareAst.java,231,rg = arg.getNext()) {
False,src/com/google/javascript/jscomp/PrepareAst.java,src/com/google/javascript/jscomp/PrepareAst.java,232,tring argName = arg.getString();
False,src/com/google/javascript/jscomp/PrepareAst.java,src/com/google/javascript/jscomp/PrepareAst.java,233,STypeExpression typeExpr = fnInfo == null ?
False,src/com/google/javascript/jscomp/PrepareAst.java,src/com/google/javascript/jscomp/PrepareAst.java,234,ull : fnInfo.getParameterType(argName);
False,src/com/google/javascript/jscomp/PrepareAst.java,src/com/google/javascript/jscomp/PrepareAst.java,236,f (convention.isOptionalParameter(arg) ||
False,src/com/google/javascript/jscomp/PrepareAst.java,src/com/google/javascript/jscomp/PrepareAst.java,237,ypeExpr != null && typeExpr.isOptionalArg()) {
False,src/com/google/javascript/jscomp/PrepareAst.java,src/com/google/javascript/jscomp/PrepareAst.java,238,"rg.putBooleanProp(Node.IS_OPTIONAL_PARAM, true);"
False,src/com/google/javascript/jscomp/PrepareAst.java,src/com/google/javascript/jscomp/PrepareAst.java,240,f (convention.isVarArgsParameter(arg) ||
False,src/com/google/javascript/jscomp/PrepareAst.java,src/com/google/javascript/jscomp/PrepareAst.java,241,ypeExpr != null && typeExpr.isVarArgs()) {
False,src/com/google/javascript/jscomp/PrepareAst.java,src/com/google/javascript/jscomp/PrepareAst.java,242,"rg.putBooleanProp(Node.IS_VAR_ARGS_PARAM, true);"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,85,"S_OPTIONAL_PARAM  = 44,    // The parameter is optional."
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,86,"S_VAR_ARGS_PARAM  = 45,    // The parameter is a var_args."
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,129,"ase IS_OPTIONAL_PARAM:  return ""is_optional_param"";"
False,src/com/google/javascript/rhino/Node.java,src/com/google/javascript/rhino/Node.java,130,"ase IS_VAR_ARGS_PARAM:  return ""is_var_args_param"";"
