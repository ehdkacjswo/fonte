is_addition,old_file_path,new_file_path,line_num,content
False,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,134,odingConvention defaultCodingConvention = new GoogleCodingConvention();
True,src/com/google/javascript/jscomp/Compiler.java,src/com/google/javascript/jscomp/Compiler.java,134,CodingConvention defaultCodingConvention = new ClosureCodingConvention();
True,test/com/google/javascript/jscomp/CompilerTypeTestCase.java,test/com/google/javascript/jscomp/CompilerTypeTestCase.java,64,options.setCodingConvention(getCodingConvention());
True,test/com/google/javascript/jscomp/CompilerTypeTestCase.java,test/com/google/javascript/jscomp/CompilerTypeTestCase.java,68,protected CodingConvention getCodingConvention() {
True,test/com/google/javascript/jscomp/CompilerTypeTestCase.java,test/com/google/javascript/jscomp/CompilerTypeTestCase.java,69,return new GoogleCodingConvention();
False,test/com/google/javascript/jscomp/ExpressionDecomposerTest.java,test/com/google/javascript/jscomp/ExpressionDecomposerTest.java,349,"var XX = {};\n"" +"
True,test/com/google/javascript/jscomp/ExpressionDecomposerTest.java,test/com/google/javascript/jscomp/ExpressionDecomposerTest.java,349,"""/** @const */ var XX = {};\n"" +"
False,test/com/google/javascript/jscomp/ExpressionDecomposerTest.java,test/com/google/javascript/jscomp/ExpressionDecomposerTest.java,402,/ free and that values can move past them.  We don't need to be
True,test/com/google/javascript/jscomp/ExpressionDecomposerTest.java,test/com/google/javascript/jscomp/ExpressionDecomposerTest.java,402,// free and that values can move past them.  We don't need to be
True,test/com/google/javascript/jscomp/ExpressionDecomposerTest.java,test/com/google/javascript/jscomp/ExpressionDecomposerTest.java,582,options.setCodingConvention(new GoogleCodingConvention());
True,test/com/google/javascript/jscomp/FunctionInjectorTest.java,test/com/google/javascript/jscomp/FunctionInjectorTest.java,1360,options.setCodingConvention(new GoogleCodingConvention());
True,test/com/google/javascript/jscomp/LiveVariableAnalysisTest.java,test/com/google/javascript/jscomp/LiveVariableAnalysisTest.java,346,CompilerOptions options = new CompilerOptions();
True,test/com/google/javascript/jscomp/LiveVariableAnalysisTest.java,test/com/google/javascript/jscomp/LiveVariableAnalysisTest.java,347,options.setCodingConvention(new GoogleCodingConvention());
True,test/com/google/javascript/jscomp/LiveVariableAnalysisTest.java,test/com/google/javascript/jscomp/LiveVariableAnalysisTest.java,348,compiler.initOptions(options);
