is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/lang/functor/Executor.java,src/java/org/apache/commons/lang/functor/Executor.java,2," The Apache Software License, Version 1.1"
False,src/java/org/apache/commons/lang/functor/Executor.java,src/java/org/apache/commons/lang/functor/Executor.java,4, Copyright (c) 2002-2003 The Apache Software Foundation.  All rights
False,src/java/org/apache/commons/lang/functor/Executor.java,src/java/org/apache/commons/lang/functor/Executor.java,5, reserved.
False,src/java/org/apache/commons/lang/functor/Executor.java,src/java/org/apache/commons/lang/functor/Executor.java,7," Redistribution and use in source and binary forms, with or without"
False,src/java/org/apache/commons/lang/functor/Executor.java,src/java/org/apache/commons/lang/functor/Executor.java,8," modification, are permitted provided that the following conditions"
False,src/java/org/apache/commons/lang/functor/Executor.java,src/java/org/apache/commons/lang/functor/Executor.java,9, are met:
False,src/java/org/apache/commons/lang/functor/Executor.java,src/java/org/apache/commons/lang/functor/Executor.java,11, 1. Redistributions of source code must retain the above copyright
False,src/java/org/apache/commons/lang/functor/Executor.java,src/java/org/apache/commons/lang/functor/Executor.java,12,"    notice, this list of conditions and the following disclaimer."
False,src/java/org/apache/commons/lang/functor/Executor.java,src/java/org/apache/commons/lang/functor/Executor.java,14, 2. Redistributions in binary form must reproduce the above copyright
False,src/java/org/apache/commons/lang/functor/Executor.java,src/java/org/apache/commons/lang/functor/Executor.java,15,"    notice, this list of conditions and the following disclaimer in"
False,src/java/org/apache/commons/lang/functor/Executor.java,src/java/org/apache/commons/lang/functor/Executor.java,16,    the documentation and/or other materials provided with the
False,src/java/org/apache/commons/lang/functor/Executor.java,src/java/org/apache/commons/lang/functor/Executor.java,17,    distribution.
False,src/java/org/apache/commons/lang/functor/Executor.java,src/java/org/apache/commons/lang/functor/Executor.java,19," 3. The end-user documentation included with the redistribution, if"
False,src/java/org/apache/commons/lang/functor/Executor.java,src/java/org/apache/commons/lang/functor/Executor.java,20,"    any, must include the following acknowlegement:"
False,src/java/org/apache/commons/lang/functor/Executor.java,src/java/org/apache/commons/lang/functor/Executor.java,21,"       ""This product includes software developed by the"
False,src/java/org/apache/commons/lang/functor/Executor.java,src/java/org/apache/commons/lang/functor/Executor.java,22,"        Apache Software Foundation (http://www.apache.org/)."""
False,src/java/org/apache/commons/lang/functor/Executor.java,src/java/org/apache/commons/lang/functor/Executor.java,23,"    Alternately, this acknowlegement may appear in the software itself,"
False,src/java/org/apache/commons/lang/functor/Executor.java,src/java/org/apache/commons/lang/functor/Executor.java,24,    if and wherever such third-party acknowlegements normally appear.
False,src/java/org/apache/commons/lang/functor/Executor.java,src/java/org/apache/commons/lang/functor/Executor.java,26," 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
False,src/java/org/apache/commons/lang/functor/Executor.java,src/java/org/apache/commons/lang/functor/Executor.java,27,"    Foundation"" must not be used to endorse or promote products derived"
False,src/java/org/apache/commons/lang/functor/Executor.java,src/java/org/apache/commons/lang/functor/Executor.java,28,    from this software without prior written permission. For written
False,src/java/org/apache/commons/lang/functor/Executor.java,src/java/org/apache/commons/lang/functor/Executor.java,29,"    permission, please contact apache@apache.org."
False,src/java/org/apache/commons/lang/functor/Executor.java,src/java/org/apache/commons/lang/functor/Executor.java,31," 5. Products derived from this software may not be called ""Apache"""
False,src/java/org/apache/commons/lang/functor/Executor.java,src/java/org/apache/commons/lang/functor/Executor.java,32,"    nor may ""Apache"" appear in their names without prior written"
False,src/java/org/apache/commons/lang/functor/Executor.java,src/java/org/apache/commons/lang/functor/Executor.java,33,    permission of the Apache Software Foundation.
False,src/java/org/apache/commons/lang/functor/Executor.java,src/java/org/apache/commons/lang/functor/Executor.java,35, THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
False,src/java/org/apache/commons/lang/functor/Executor.java,src/java/org/apache/commons/lang/functor/Executor.java,36," WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
False,src/java/org/apache/commons/lang/functor/Executor.java,src/java/org/apache/commons/lang/functor/Executor.java,37, OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
False,src/java/org/apache/commons/lang/functor/Executor.java,src/java/org/apache/commons/lang/functor/Executor.java,38, DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
False,src/java/org/apache/commons/lang/functor/Executor.java,src/java/org/apache/commons/lang/functor/Executor.java,39," ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
False,src/java/org/apache/commons/lang/functor/Executor.java,src/java/org/apache/commons/lang/functor/Executor.java,40," SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
False,src/java/org/apache/commons/lang/functor/Executor.java,src/java/org/apache/commons/lang/functor/Executor.java,41," LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
False,src/java/org/apache/commons/lang/functor/Executor.java,src/java/org/apache/commons/lang/functor/Executor.java,42," USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
False,src/java/org/apache/commons/lang/functor/Executor.java,src/java/org/apache/commons/lang/functor/Executor.java,43," ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
False,src/java/org/apache/commons/lang/functor/Executor.java,src/java/org/apache/commons/lang/functor/Executor.java,44, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
False,src/java/org/apache/commons/lang/functor/Executor.java,src/java/org/apache/commons/lang/functor/Executor.java,45," OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
False,src/java/org/apache/commons/lang/functor/Executor.java,src/java/org/apache/commons/lang/functor/Executor.java,46, SUCH DAMAGE.
False,src/java/org/apache/commons/lang/functor/Executor.java,src/java/org/apache/commons/lang/functor/Executor.java,49, This software consists of voluntary contributions made by many
False,src/java/org/apache/commons/lang/functor/Executor.java,src/java/org/apache/commons/lang/functor/Executor.java,50, individuals on behalf of the Apache Software Foundation.  For more
False,src/java/org/apache/commons/lang/functor/Executor.java,src/java/org/apache/commons/lang/functor/Executor.java,51," information on the Apache Software Foundation, please see"
False,src/java/org/apache/commons/lang/functor/Executor.java,src/java/org/apache/commons/lang/functor/Executor.java,52, <http://www.apache.org/>.
False,src/java/org/apache/commons/lang/functor/Executor.java,src/java/org/apache/commons/lang/functor/Executor.java,54,ackage org.apache.commons.lang.functor;
False,src/java/org/apache/commons/lang/functor/Executor.java,src/java/org/apache/commons/lang/functor/Executor.java,57, <code>Executor</code> defines an interface implemented by classes that
False,src/java/org/apache/commons/lang/functor/Executor.java,src/java/org/apache/commons/lang/functor/Executor.java,58, do something.
False,src/java/org/apache/commons/lang/functor/Executor.java,src/java/org/apache/commons/lang/functor/Executor.java,60," @author <a href=""mailto:nicolaken@apache.org"">Nicola Ken Barozzi</a>"
False,src/java/org/apache/commons/lang/functor/Executor.java,src/java/org/apache/commons/lang/functor/Executor.java,61," @version $Id: Executor.java,v 1.2 2003/03/23 17:50:02 scolebourne Exp $"
False,src/java/org/apache/commons/lang/functor/Executor.java,src/java/org/apache/commons/lang/functor/Executor.java,63,ublic interface Executor {
False,src/java/org/apache/commons/lang/functor/Executor.java,src/java/org/apache/commons/lang/functor/Executor.java,66, Does what it has to.
False,src/java/org/apache/commons/lang/functor/Executor.java,src/java/org/apache/commons/lang/functor/Executor.java,68, @param description  the extra information needed to execute the
False,src/java/org/apache/commons/lang/functor/Executor.java,src/java/org/apache/commons/lang/functor/Executor.java,69,                     command
False,src/java/org/apache/commons/lang/functor/Executor.java,src/java/org/apache/commons/lang/functor/Executor.java,71, @throws ExecutorException (runtime) if the execution fails
False,src/java/org/apache/commons/lang/functor/Executor.java,src/java/org/apache/commons/lang/functor/Executor.java,73,ublic void execute(Object description);
False,src/java/org/apache/commons/lang/functor/ExecutorException.java,src/java/org/apache/commons/lang/functor/ExecutorException.java,2," The Apache Software License, Version 1.1"
False,src/java/org/apache/commons/lang/functor/ExecutorException.java,src/java/org/apache/commons/lang/functor/ExecutorException.java,4, Copyright (c) 2002-2003 The Apache Software Foundation.  All rights
False,src/java/org/apache/commons/lang/functor/ExecutorException.java,src/java/org/apache/commons/lang/functor/ExecutorException.java,5, reserved.
False,src/java/org/apache/commons/lang/functor/ExecutorException.java,src/java/org/apache/commons/lang/functor/ExecutorException.java,7," Redistribution and use in source and binary forms, with or without"
False,src/java/org/apache/commons/lang/functor/ExecutorException.java,src/java/org/apache/commons/lang/functor/ExecutorException.java,8," modification, are permitted provided that the following conditions"
False,src/java/org/apache/commons/lang/functor/ExecutorException.java,src/java/org/apache/commons/lang/functor/ExecutorException.java,9, are met:
False,src/java/org/apache/commons/lang/functor/ExecutorException.java,src/java/org/apache/commons/lang/functor/ExecutorException.java,11, 1. Redistributions of source code must retain the above copyright
False,src/java/org/apache/commons/lang/functor/ExecutorException.java,src/java/org/apache/commons/lang/functor/ExecutorException.java,12,"    notice, this list of conditions and the following disclaimer."
False,src/java/org/apache/commons/lang/functor/ExecutorException.java,src/java/org/apache/commons/lang/functor/ExecutorException.java,14, 2. Redistributions in binary form must reproduce the above copyright
False,src/java/org/apache/commons/lang/functor/ExecutorException.java,src/java/org/apache/commons/lang/functor/ExecutorException.java,15,"    notice, this list of conditions and the following disclaimer in"
False,src/java/org/apache/commons/lang/functor/ExecutorException.java,src/java/org/apache/commons/lang/functor/ExecutorException.java,16,    the documentation and/or other materials provided with the
False,src/java/org/apache/commons/lang/functor/ExecutorException.java,src/java/org/apache/commons/lang/functor/ExecutorException.java,17,    distribution.
False,src/java/org/apache/commons/lang/functor/ExecutorException.java,src/java/org/apache/commons/lang/functor/ExecutorException.java,19," 3. The end-user documentation included with the redistribution, if"
False,src/java/org/apache/commons/lang/functor/ExecutorException.java,src/java/org/apache/commons/lang/functor/ExecutorException.java,20,"    any, must include the following acknowlegement:"
False,src/java/org/apache/commons/lang/functor/ExecutorException.java,src/java/org/apache/commons/lang/functor/ExecutorException.java,21,"       ""This product includes software developed by the"
False,src/java/org/apache/commons/lang/functor/ExecutorException.java,src/java/org/apache/commons/lang/functor/ExecutorException.java,22,"        Apache Software Foundation (http://www.apache.org/)."""
False,src/java/org/apache/commons/lang/functor/ExecutorException.java,src/java/org/apache/commons/lang/functor/ExecutorException.java,23,"    Alternately, this acknowlegement may appear in the software itself,"
False,src/java/org/apache/commons/lang/functor/ExecutorException.java,src/java/org/apache/commons/lang/functor/ExecutorException.java,24,    if and wherever such third-party acknowlegements normally appear.
False,src/java/org/apache/commons/lang/functor/ExecutorException.java,src/java/org/apache/commons/lang/functor/ExecutorException.java,26," 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
False,src/java/org/apache/commons/lang/functor/ExecutorException.java,src/java/org/apache/commons/lang/functor/ExecutorException.java,27,"    Foundation"" must not be used to endorse or promote products derived"
False,src/java/org/apache/commons/lang/functor/ExecutorException.java,src/java/org/apache/commons/lang/functor/ExecutorException.java,28,    from this software without prior written permission. For written
False,src/java/org/apache/commons/lang/functor/ExecutorException.java,src/java/org/apache/commons/lang/functor/ExecutorException.java,29,"    permission, please contact apache@apache.org."
False,src/java/org/apache/commons/lang/functor/ExecutorException.java,src/java/org/apache/commons/lang/functor/ExecutorException.java,31," 5. Products derived from this software may not be called ""Apache"""
False,src/java/org/apache/commons/lang/functor/ExecutorException.java,src/java/org/apache/commons/lang/functor/ExecutorException.java,32,"    nor may ""Apache"" appear in their names without prior written"
False,src/java/org/apache/commons/lang/functor/ExecutorException.java,src/java/org/apache/commons/lang/functor/ExecutorException.java,33,    permission of the Apache Software Foundation.
False,src/java/org/apache/commons/lang/functor/ExecutorException.java,src/java/org/apache/commons/lang/functor/ExecutorException.java,35, THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
False,src/java/org/apache/commons/lang/functor/ExecutorException.java,src/java/org/apache/commons/lang/functor/ExecutorException.java,36," WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
False,src/java/org/apache/commons/lang/functor/ExecutorException.java,src/java/org/apache/commons/lang/functor/ExecutorException.java,37, OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
False,src/java/org/apache/commons/lang/functor/ExecutorException.java,src/java/org/apache/commons/lang/functor/ExecutorException.java,38, DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
False,src/java/org/apache/commons/lang/functor/ExecutorException.java,src/java/org/apache/commons/lang/functor/ExecutorException.java,39," ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
False,src/java/org/apache/commons/lang/functor/ExecutorException.java,src/java/org/apache/commons/lang/functor/ExecutorException.java,40," SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
False,src/java/org/apache/commons/lang/functor/ExecutorException.java,src/java/org/apache/commons/lang/functor/ExecutorException.java,41," LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
False,src/java/org/apache/commons/lang/functor/ExecutorException.java,src/java/org/apache/commons/lang/functor/ExecutorException.java,42," USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
False,src/java/org/apache/commons/lang/functor/ExecutorException.java,src/java/org/apache/commons/lang/functor/ExecutorException.java,43," ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
False,src/java/org/apache/commons/lang/functor/ExecutorException.java,src/java/org/apache/commons/lang/functor/ExecutorException.java,44, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
False,src/java/org/apache/commons/lang/functor/ExecutorException.java,src/java/org/apache/commons/lang/functor/ExecutorException.java,45," OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
False,src/java/org/apache/commons/lang/functor/ExecutorException.java,src/java/org/apache/commons/lang/functor/ExecutorException.java,46, SUCH DAMAGE.
False,src/java/org/apache/commons/lang/functor/ExecutorException.java,src/java/org/apache/commons/lang/functor/ExecutorException.java,49, This software consists of voluntary contributions made by many
False,src/java/org/apache/commons/lang/functor/ExecutorException.java,src/java/org/apache/commons/lang/functor/ExecutorException.java,50, individuals on behalf of the Apache Software Foundation.  For more
False,src/java/org/apache/commons/lang/functor/ExecutorException.java,src/java/org/apache/commons/lang/functor/ExecutorException.java,51," information on the Apache Software Foundation, please see"
False,src/java/org/apache/commons/lang/functor/ExecutorException.java,src/java/org/apache/commons/lang/functor/ExecutorException.java,52, <http://www.apache.org/>.
False,src/java/org/apache/commons/lang/functor/ExecutorException.java,src/java/org/apache/commons/lang/functor/ExecutorException.java,54,ackage org.apache.commons.lang.functor;
False,src/java/org/apache/commons/lang/functor/ExecutorException.java,src/java/org/apache/commons/lang/functor/ExecutorException.java,56,mport org.apache.commons.lang.exception.NestableRuntimeException;
False,src/java/org/apache/commons/lang/functor/ExecutorException.java,src/java/org/apache/commons/lang/functor/ExecutorException.java,58, Exception thrown when the Comand fails to execute.
False,src/java/org/apache/commons/lang/functor/ExecutorException.java,src/java/org/apache/commons/lang/functor/ExecutorException.java,59," If required, a root cause error can be wrapped within this one."
False,src/java/org/apache/commons/lang/functor/ExecutorException.java,src/java/org/apache/commons/lang/functor/ExecutorException.java,61," @author <a href=""mailto:nicolaken@apache.org"">Nicola Ken Barozzi</a>"
False,src/java/org/apache/commons/lang/functor/ExecutorException.java,src/java/org/apache/commons/lang/functor/ExecutorException.java,62," @version $Id: ExecutorException.java,v 1.2 2003/03/23 17:50:02 scolebourne Exp $"
False,src/java/org/apache/commons/lang/functor/ExecutorException.java,src/java/org/apache/commons/lang/functor/ExecutorException.java,64,ublic class ExecutorException extends NestableRuntimeException {
False,src/java/org/apache/commons/lang/functor/ExecutorException.java,src/java/org/apache/commons/lang/functor/ExecutorException.java,67, Constructs a new <code>ExecutorException</code> without specified
False,src/java/org/apache/commons/lang/functor/ExecutorException.java,src/java/org/apache/commons/lang/functor/ExecutorException.java,68, detail message.
False,src/java/org/apache/commons/lang/functor/ExecutorException.java,src/java/org/apache/commons/lang/functor/ExecutorException.java,70,ublic ExecutorException() {
False,src/java/org/apache/commons/lang/functor/ExecutorException.java,src/java/org/apache/commons/lang/functor/ExecutorException.java,71,uper();
False,src/java/org/apache/commons/lang/functor/ExecutorException.java,src/java/org/apache/commons/lang/functor/ExecutorException.java,75, Constructs a new <code>ExecutorException</code> with specified
False,src/java/org/apache/commons/lang/functor/ExecutorException.java,src/java/org/apache/commons/lang/functor/ExecutorException.java,76, detail message.
False,src/java/org/apache/commons/lang/functor/ExecutorException.java,src/java/org/apache/commons/lang/functor/ExecutorException.java,78, @param msg  the error message.
False,src/java/org/apache/commons/lang/functor/ExecutorException.java,src/java/org/apache/commons/lang/functor/ExecutorException.java,80,ublic ExecutorException(String msg) {
False,src/java/org/apache/commons/lang/functor/ExecutorException.java,src/java/org/apache/commons/lang/functor/ExecutorException.java,81,uper(msg);
False,src/java/org/apache/commons/lang/functor/ExecutorException.java,src/java/org/apache/commons/lang/functor/ExecutorException.java,85, Constructs a new <code>ExecutorException</code> with specified
False,src/java/org/apache/commons/lang/functor/ExecutorException.java,src/java/org/apache/commons/lang/functor/ExecutorException.java,86, nested <code>Throwable</code> root cause.
False,src/java/org/apache/commons/lang/functor/ExecutorException.java,src/java/org/apache/commons/lang/functor/ExecutorException.java,88, @param rootCause  the exception or error that caused this exception
False,src/java/org/apache/commons/lang/functor/ExecutorException.java,src/java/org/apache/commons/lang/functor/ExecutorException.java,89,                   to be thrown.
False,src/java/org/apache/commons/lang/functor/ExecutorException.java,src/java/org/apache/commons/lang/functor/ExecutorException.java,91,ublic ExecutorException(Throwable rootCause) {
False,src/java/org/apache/commons/lang/functor/ExecutorException.java,src/java/org/apache/commons/lang/functor/ExecutorException.java,92,uper(rootCause);
False,src/java/org/apache/commons/lang/functor/ExecutorException.java,src/java/org/apache/commons/lang/functor/ExecutorException.java,96, Constructs a new <code>ExecutorException</code> with specified
False,src/java/org/apache/commons/lang/functor/ExecutorException.java,src/java/org/apache/commons/lang/functor/ExecutorException.java,97, detail message and nested <code>Throwable</code> root cause.
False,src/java/org/apache/commons/lang/functor/ExecutorException.java,src/java/org/apache/commons/lang/functor/ExecutorException.java,99, @param msg        the error message.
False,src/java/org/apache/commons/lang/functor/ExecutorException.java,src/java/org/apache/commons/lang/functor/ExecutorException.java,100, @param rootCause  the exception or error that caused this exception
False,src/java/org/apache/commons/lang/functor/ExecutorException.java,src/java/org/apache/commons/lang/functor/ExecutorException.java,101,                   to be thrown.
False,src/java/org/apache/commons/lang/functor/ExecutorException.java,src/java/org/apache/commons/lang/functor/ExecutorException.java,103,"ublic ExecutorException(String msg, Throwable rootCause) {"
False,src/java/org/apache/commons/lang/functor/ExecutorException.java,src/java/org/apache/commons/lang/functor/ExecutorException.java,104,"uper(msg, rootCause);"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,2," The Apache Software License, Version 1.1"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,4, Copyright (c) 2002-2003 The Apache Software Foundation.  All rights
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,5, reserved.
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,7," Redistribution and use in source and binary forms, with or without"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,8," modification, are permitted provided that the following conditions"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,9, are met:
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,11, 1. Redistributions of source code must retain the above copyright
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,12,"    notice, this list of conditions and the following disclaimer."
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,14, 2. Redistributions in binary form must reproduce the above copyright
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,15,"    notice, this list of conditions and the following disclaimer in"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,16,    the documentation and/or other materials provided with the
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,17,    distribution.
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,19," 3. The end-user documentation included with the redistribution, if"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,20,"    any, must include the following acknowlegement:"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,21,"       ""This product includes software developed by the"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,22,"        Apache Software Foundation (http://www.apache.org/)."""
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,23,"    Alternately, this acknowlegement may appear in the software itself,"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,24,    if and wherever such third-party acknowlegements normally appear.
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,26," 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,27,"    Foundation"" must not be used to endorse or promote products derived"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,28,    from this software without prior written permission. For written
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,29,"    permission, please contact apache@apache.org."
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,31," 5. Products derived from this software may not be called ""Apache"""
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,32,"    nor may ""Apache"" appear in their names without prior written"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,33,    permission of the Apache Software Foundation.
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,35, THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,36," WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,37, OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,38, DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,39," ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,40," SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,41," LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,42," USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,43," ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,44, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,45," OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,46, SUCH DAMAGE.
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,49, This software consists of voluntary contributions made by many
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,50, individuals on behalf of the Apache Software Foundation.  For more
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,51," information on the Apache Software Foundation, please see"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,52, <http://www.apache.org/>.
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,54,ackage org.apache.commons.lang.functor;
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,56,mport java.io.Serializable;
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,57,mport java.util.Collection;
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,58,mport java.util.Iterator;
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,59,mport java.util.Map;
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,61,mport org.apache.commons.lang.functor.Predicate;
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,62,mport org.apache.commons.lang.functor.PredicateUtils;
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,63,mport org.apache.commons.lang.functor.Transformer;
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,64,mport org.apache.commons.lang.functor.TransformerException;
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,65,mport org.apache.commons.lang.functor.TransformerUtils;
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,67, <code>ExecutorUtils</code> provides reference implementations and utilities
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,68, for the Executor functor interface. The supplied executors are:
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,69, <ul>
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,70, <li>Invoker - invokes a method on the input object
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,71, <li>For - repeatedly calls an executor for a fixed number of times
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,72, <li>While - repeatedly calls an executor while a predicate is true
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,73, <li>DoWhile - repeatedly calls an executor while a predicate is true
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,74, <li>Chained - chains two or more executors together
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,75, <li>Switch - calls one executor based on one or more predicates
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,76, <li>SwitchMap - calls one executor looked up from a Map
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,77, <li>Transformer - wraps a Transformer as an Executor
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,78, <li>NOP - does nothing
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,79, <li>Exception - always throws an exception
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,80, </ul>
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,81, All the supplied executors are Serializable.
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,83," @author <a href=""mailto:scolebourne@joda.org"">Stephen Colebourne</a>"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,84," @version $Id: ExecutorUtils.java,v 1.3 2003/03/23 17:50:02 scolebourne Exp $"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,86,ublic class ExecutorUtils {
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,89, A Executor that always throws an exception
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,91,rivate static final Executor EXCEPTION_EXECUTOR = new ExceptionExecutor();
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,93, A Executor that does nothing
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,95,rivate static final Executor NOP_EXECUTOR = new NOPExecutor();
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,98, Restrictive constructor
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,100,rotected ExecutorUtils() {
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,101,uper();
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,105, Gets a Executor that always throws an exception.
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,106, This could be useful during testing as a placeholder.
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,108, @return the executor
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,110,ublic static Executor exceptionExecutor() {
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,111,eturn EXCEPTION_EXECUTOR;
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,115, Gets a Executor that will do nothing.
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,116, This could be useful during testing as a placeholder.
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,118, @return the executor
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,120,ublic static Executor nopExecutor() {
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,121,eturn NOP_EXECUTOR;
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,125, Creates a Executor that calls a Transformer each time it is called.
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,126, The transformer will be called using the executor's input object.
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,127, The transformer's result will be ignored.
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,129, @param transformer  the transformer to run each time in the executor
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,130, @return the executor.
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,132,ublic static Executor asExecutor(Transformer transformer) {
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,133,f (transformer == null) {
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,134,"hrow new IllegalArgumentException(""The transformer must not be null"");"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,136,eturn new TransformerExecutor(transformer);
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,140, Creates a Executor that will call the executor <code>count</code> times.
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,142, @param count  the number of times to loop
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,143, @param executor  the executor to call repeatedly
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,144, @return the <code>for</code> executor
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,145, @throws IllegalArgumentException if either argument is null
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,147,"ublic static Executor forExecutor(int count, Executor executor) {"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,148,f (count < 0) {
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,149,"hrow new IllegalArgumentException(""The loop count must not be less than zero, it was "" + count);"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,151,f (executor == null) {
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,152,"hrow new IllegalArgumentException(""The executor must not be null"");"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,154,"eturn new ForExecutor(count, executor);"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,158, Creates a Executor that will call the executor repeatedly until the
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,159, predicate returns false.
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,161, @param predicate  the predicate to use as an end of loop test
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,162, @param executor  the executor to call repeatedly
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,163, @return the <code>while</code> executor
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,164, @throws IllegalArgumentException if either argument is null
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,166,"ublic static Executor whileExecutor(Predicate predicate, Executor executor) {"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,167,f (predicate == null) {
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,168,"hrow new IllegalArgumentException(""The predicate must not be null"");"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,170,f (executor == null) {
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,171,"hrow new IllegalArgumentException(""The executor must not be null"");"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,173,"eturn new WhileExecutor(predicate, executor, false);"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,177, Creates a Executor that will call the executor once and then repeatedly
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,178, until the predicate returns false.
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,180, @param executor  the executor to call repeatedly
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,181, @param predicate  the predicate to use as an end of loop test
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,182, @return the <code>do-while</code> executor
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,183, @throws IllegalArgumentException if either argument is null
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,185,"ublic static Executor doWhileExecutor(Executor executor, Predicate predicate) {"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,186,f (executor == null) {
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,187,"hrow new IllegalArgumentException(""The executor must not be null"");"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,189,f (predicate == null) {
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,190,"hrow new IllegalArgumentException(""The predicate must not be null"");"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,192,"eturn new WhileExecutor(predicate, executor, true);"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,196, Creates a Executor that will invoke a specific method on the executor's
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,197, input object by reflection.
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,199, @param methodName  the name of the method
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,200, @return the <code>invoker</code> executor
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,201, @throws IllegalArgumentException if the method name is null
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,203,ublic static Executor invokerExecutor(String methodName) {
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,204,"/ reuse transformer as it has caching - this is lazy really, should have inner class here"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,205,"eturn asExecutor(TransformerUtils.invokerTransformer(methodName, null, null));"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,209, Creates a Executor that will invoke a specific method on the executor's
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,210, input object by reflection.
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,212, @param methodName  the name of the method
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,213, @param paramTypes  the parameter types
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,214, @param args  the arguments
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,215, @return the <code>invoker</code> executor
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,216, @throws IllegalArgumentException if the method name is null
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,217, @throws IllegalArgumentException if the paramTypes and args don't match
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,219,"ublic static Executor invokerExecutor(String methodName, Class[] paramTypes, Object[] args) {"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,220,"/ reuse transformer as it has caching - this is lazy really, should have inner class here"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,221,"eturn asExecutor(TransformerUtils.invokerTransformer(methodName, paramTypes, args));"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,225," Create a new Executor that calls two Executors, passing the result of"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,226, the first into the second.
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,228, @param executor1  the first executor
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,229, @param executor2  the second executor
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,230, @return the <code>chained</code> executor
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,231, @throws IllegalArgumentException if either executor is null
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,233,"ublic static Executor chainedExecutor(Executor executor1, Executor executor2) {"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,234,"xecutor[] executors = new Executor[] { executor1, executor2 };"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,235,alidate(executors);
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,236,eturn new ChainedExecutor(executors);
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,240," Create a new Executor that calls each executor in turn, passing the"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,241, result into the next executor.
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,243, @param executors  an array of executors to chain
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,244, @return the <code>chained</code> executor
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,245, @throws IllegalArgumentException if the executors array is null
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,246, @throws IllegalArgumentException if the executors array has 0 elements
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,247, @throws IllegalArgumentException if any executor in the array is null
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,249,ublic static Executor chainedExecutor(Executor[] executors) {
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,250,xecutors = copy(executors);
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,251,alidate(executors);
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,252,eturn new ChainedExecutor(executors);
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,256," Create a new Executor that calls each executor in turn, passing the"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,257, result into the next executor. The ordering is that of the iterator()
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,258, method on the collection.
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,260, @param executors  a collection of executors to chain
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,261, @return the <code>chained</code> executor
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,262, @throws IllegalArgumentException if the executors collection is null
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,263, @throws IllegalArgumentException if the executors collection is empty
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,264, @throws IllegalArgumentException if any executor in the collection is null
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,266,ublic static Executor chainedExecutor(Collection executors) {
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,267,f (executors == null) {
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,268,"hrow new IllegalArgumentException(""The executor collection must not be null"");"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,270,/ convert to array like this to guarantee iterator() ordering
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,271,xecutor[] cmds = new Executor[executors.size()];
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,272,nt i = 0;
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,273,or (Iterator it = executors.iterator(); it.hasNext();) {
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,274,mds[i++] = (Executor) it.next();
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,276,alidate(cmds);
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,277,eturn new ChainedExecutor(cmds);
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,281, Create a new Executor that calls one of two executors depending
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,282, on the specified predicate.
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,284, @param predicate  the predicate to switch on
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,285, @param trueExecutor  the executor called if the predicate is true
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,286, @param falseExecutor  the executor called if the predicate is false
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,287, @return the <code>switch</code> executor
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,288, @throws IllegalArgumentException if the predicate is null
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,289, @throws IllegalArgumentException if either executor is null
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,291,"ublic static Executor switchExecutor(Predicate predicate, Executor trueExecutor, Executor falseExecutor) {"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,292,"eturn switchExecutorInternal(new Predicate[] { predicate }, new Executor[] { trueExecutor }, falseExecutor);"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,296, Create a new Executor that calls one of the executors depending
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,297, on the predicates.
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,298, <p>
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,299, The executor at array location 0 is called if the predicate at array
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,300, location 0 returned true. Each predicate is evaluated
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,301, until one returns true.
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,303, @param predicates  an array of predicates to check
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,304, @param executors  an array of executors to call
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,305, @return the <code>switch</code> executor
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,306, @throws IllegalArgumentException if the either array is null
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,307, @throws IllegalArgumentException if the either array has 0 elements
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,308, @throws IllegalArgumentException if any element in the arrays is null
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,309, @throws IllegalArgumentException if the arrays are different sizes
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,311,"ublic static Executor switchExecutor(Predicate[] predicates, Executor[] executors) {"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,312,"eturn switchExecutorInternal(copy(predicates), copy(executors), null);"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,316, Create a new Executor that calls one of the executors depending
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,317, on the predicates.
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,318, <p>
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,319, The executor at array location 0 is called if the predicate at array
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,320, location 0 returned true. Each predicate is evaluated
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,321," until one returns true. If no predicates evaluate to true, the default"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,322, executor is called.
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,324, @param predicates  an array of predicates to check
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,325, @param executors  an array of executors to call
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,326, @param defaultExecutor  the default to call if no predicate matches
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,327, @return the <code>switch</code> executor
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,328, @throws IllegalArgumentException if the either array is null
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,329, @throws IllegalArgumentException if the either array has 0 elements
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,330, @throws IllegalArgumentException if any element in the arrays is null
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,331, @throws IllegalArgumentException if the arrays are different sizes
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,333,"ublic static Executor switchExecutor(Predicate[] predicates, Executor[] executors, Executor defaultExecutor) {"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,334,"eturn switchExecutorInternal(copy(predicates), copy(executors), defaultExecutor);"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,338, Create a new Executor that calls one of the executors depending
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,339, on the predicates.
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,340, <p>
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,341, The Map consists of Predicate keys and Executor values. A executor
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,342, is called if its matching predicate returns true. Each predicate is evaluated
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,343," until one returns true. If no predicates evaluate to true, the default"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,344, executor is called. The default executor is set in the map with a
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,345, null key. The ordering is that of the iterator() method on the entryset
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,346, collection of the map.
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,348, @param predicatesAndExecutors  a map of predicates to executors
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,349, @return the <code>switch</code> executor
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,350, @throws IllegalArgumentException if the map is null
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,351, @throws IllegalArgumentException if the map is empty
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,352, @throws IllegalArgumentException if any executor in the map is null
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,353, @throws ClassCastException  if the map elements are of the wrong type
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,355,ublic static Executor switchExecutor(Map predicatesAndExecutors) {
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,356,xecutor[] trs = null;
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,357,redicate[] preds = null;
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,358,f (predicatesAndExecutors == null) {
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,359,"hrow new IllegalArgumentException(""The predicate and executor map must not be null"");"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,361,/ convert to array like this to guarantee iterator() ordering
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,362,xecutor def = (Executor) predicatesAndExecutors.remove(null);
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,363,nt size = predicatesAndExecutors.size();
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,364,rs = new Executor[size];
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,365,reds = new Predicate[size];
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,366,nt i = 0;
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,367,or (Iterator it = predicatesAndExecutors.entrySet().iterator(); it.hasNext();) {
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,368,ap.Entry entry = (Map.Entry) it.next();
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,369,reds[i] = (Predicate) entry.getKey();
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,370,rs[i] = (Executor) entry.getValue();
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,371,++;
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,373,"eturn switchExecutorInternal(preds, trs, def);"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,377, Validate input and create executor.
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,379, @param predicates  an array of predicates to check
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,380, @param executors  an array of executors to call
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,381, @param defaultExecutor  the default to call if no predicate matches
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,382, @return the <code>switch</code> executor
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,383, @throws IllegalArgumentException if the either array is null
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,384, @throws IllegalArgumentException if the either array has 0 elements
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,385, @throws IllegalArgumentException if any element in the arrays is null
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,386, @throws IllegalArgumentException if the arrays are different sizes
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,388,"rivate static Executor switchExecutorInternal(Predicate[] predicates, Executor[] executors, Executor defaultExecutor) {"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,389,alidate(predicates);
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,390,alidate(executors);
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,391,f (predicates.length != executors.length) {
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,392,"hrow new IllegalArgumentException(""The predicate and executor arrays must be the same size"");"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,394,f (defaultExecutor == null) {
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,395,efaultExecutor = nopExecutor();
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,397,"eturn new SwitchExecutor(predicates, executors, defaultExecutor);"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,401, Create a new Executor that uses the input object as a key to find the
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,402, executor to call.
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,403, <p>
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,404, The Map consists of object keys and Executor values. A executor
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,405," is called if the input object equals the key. If there is no match, the"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,406, default executor is called. The default executor is set in the map
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,407, using a null key.
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,409, @param objectsAndExecutors  a map of objects to executors
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,410, @return the executor
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,411, @throws IllegalArgumentException if the map is null
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,412, @throws IllegalArgumentException if the map is empty
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,413, @throws IllegalArgumentException if any executor in the map is null
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,415,ublic static Executor switchMapExecutor(Map objectsAndExecutors) {
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,416,xecutor[] trs = null;
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,417,redicate[] preds = null;
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,418,f (objectsAndExecutors == null) {
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,419,"hrow new IllegalArgumentException(""The obejct and executor map must not be null"");"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,421,xecutor def = (Executor) objectsAndExecutors.remove(null);
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,422,nt size = objectsAndExecutors.size();
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,423,rs = new Executor[size];
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,424,reds = new Predicate[size];
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,425,nt i = 0;
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,426,or (Iterator it = objectsAndExecutors.entrySet().iterator(); it.hasNext();) {
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,427,ap.Entry entry = (Map.Entry) it.next();
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,428,reds[i] = PredicateUtils.equalPredicate(entry.getKey());
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,429,rs[i] = (Executor) entry.getValue();
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,430,++;
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,432,"eturn switchExecutor(preds, trs, def);"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,436, Clone the predicates to ensure that the internal reference can't be messed with.
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,438, @param predicates  the predicates to copy
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,439, @return the cloned predicates
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,441,rivate static Predicate[] copy(Predicate[] predicates) {
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,442,f (predicates == null) {
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,443,eturn null;
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,445,eturn (Predicate[]) predicates.clone();
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,449, Validate the predicates to ensure that all is well.
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,451, @param predicates  the predicates to validate
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,452, @return the validated predicates
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,454,rivate static void validate(Predicate[] predicates) {
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,455,f (predicates == null) {
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,456,"hrow new IllegalArgumentException(""The predicate array must not be null"");"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,458,f (predicates.length < 1) {
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,459,hrow new IllegalArgumentException(
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,460,"At least 1 predicate must be specified in the predicate array, size was "" + predicates.length);"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,462,or (int i = 0; i < predicates.length; i++) {
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,463,f (predicates[i] == null) {
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,464,"hrow new IllegalArgumentException(""The predicate array must not contain a null predicate, index "" + i + "" was null"");"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,470, Clone the executors to ensure that the internal reference can't be messed with.
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,472, @param executors  the executors to copy
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,473, @return the cloned executors
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,475,rivate static Executor[] copy(Executor[] executors) {
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,476,f (executors == null) {
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,477,eturn null;
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,479,eturn (Executor[]) executors.clone();
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,483, Validate the executors to ensure that all is well.
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,485, @param executors  the executors to validate
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,486, @return the validated executors
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,488,rivate static void validate(Executor[] executors) {
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,489,f (executors == null) {
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,490,"hrow new IllegalArgumentException(""The executor array must not be null"");"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,492,f (executors.length < 1) {
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,493,hrow new IllegalArgumentException(
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,494,"At least 1 executor must be specified in the executor array, size was "" + executors.length);"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,496,or (int i = 0; i < executors.length; i++) {
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,497,f (executors[i] == null) {
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,498,"hrow new IllegalArgumentException(""The executor array must not contain a null executor, index "" + i + "" was null"");"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,503,/ ExceptionExecutor
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,507, ExceptionExecutor always throws an exception
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,509,"rivate static class ExceptionExecutor implements Executor, Serializable {"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,512, Constructor
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,514,rivate ExceptionExecutor() {
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,515,uper();
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,519, Always throw an exception
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,521,ublic void execute(Object input) {
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,522,"hrow new ExecutorException(""ExceptionExecutor invoked"");"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,526,/ NOPExecutor
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,530, NOPExecutor does nothing
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,532,"rivate static class NOPExecutor implements Executor, Serializable {"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,535, Constructor
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,537,rivate NOPExecutor() {
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,538,uper();
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,542, Do nothing
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,544,ublic void execute(Object input) {
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,545,/ do nothing
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,549,/ TransformerExecutor
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,553, TransformerExecutor calls a Transformer using the input object and ignore the result.
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,555,"rivate static class TransformerExecutor implements Executor, Serializable {"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,556,** The transformer to wrap */
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,557,rivate final Transformer iTransformer;
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,560, Constructor to store transformer
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,562,rivate TransformerExecutor(Transformer transformer) {
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,563,uper();
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,564,Transformer = transformer;
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,568, Call the transformer
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,570,ublic void execute(Object input) {
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,571,ry {
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,572,Transformer.transform(input);
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,574, catch (TransformerException ex) {
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,575,"hrow new ExecutorException(""TransformerExecutor: "" + ex.getMessage(), ex);"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,580,/ ChainedExecutor
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,584, ChainedExecutor calls a list of executors.
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,586,"rivate static class ChainedExecutor implements Executor, Serializable {"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,587,** The executors to call in turn */
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,588,rivate final Executor[] iExecutors;
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,591, Constructor to store params
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,593,rivate ChainedExecutor(Executor[] executors) {
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,594,uper();
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,595,Executors = executors;
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,599, Execute a list of executors
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,601,ublic void execute(Object input) {
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,602,or (int i = 0; i < iExecutors.length; i++) {
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,603,Executors[i].execute(input);
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,608,/ SwitchExecutor
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,612, SwitchExecutor calls the executor whose predicate returns true.
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,614,"rivate static class SwitchExecutor implements Executor, Serializable {"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,615,** The tests to consider */
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,616,rivate final Predicate[] iPredicates;
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,617,** The matching executors to call */
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,618,rivate final Executor[] iExecutors;
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,619,** The default executor to call if no tests match */
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,620,rivate final Executor iDefault;
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,623, Constructor to store params
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,625,"rivate SwitchExecutor(Predicate[] predicates, Executor[] executors, Executor defaultExecutor) {"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,626,uper();
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,627,Predicates = predicates;
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,628,Executors = executors;
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,629,Default = defaultExecutor;
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,633, Execute the executor whose predicate returns true
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,635,ublic void execute(Object input) {
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,636,or (int i = 0; i < iPredicates.length; i++) {
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,637,f (iPredicates[i].evaluate(input) == true) {
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,638,Executors[i].execute(input);
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,639,eturn;
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,642,Default.execute(input);
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,646,/ ForExecutor
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,650, ForExecutor calls the executor a fixed nunmber of times.
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,652,"rivate static class ForExecutor implements Executor, Serializable {"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,653,** The number of times to loop */
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,654,rivate final int iCount;
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,655,** The executor to call */
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,656,rivate final Executor iExecutor;
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,659, Constructor to store params
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,661,"rivate ForExecutor(int count, Executor executor) {"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,662,uper();
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,663,Count = count;
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,664,Executor = executor;
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,668, Execute the executor count times
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,670,ublic void execute(Object input) {
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,671,or (int i = 0; i < iCount; i++) {
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,672,Executor.execute(input);
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,677,/ WhileExecutor
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,681, WhileExecutor calls the executor until the predicate is false.
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,683,"rivate static class WhileExecutor implements Executor, Serializable {"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,684,** The test condition */
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,685,rivate final Predicate iPredicate;
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,686,** The executor to call */
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,687,rivate final Executor iExecutor;
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,688,"** The flag, true is a do loop, false is a while */"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,689,rivate final boolean iDoLoop;
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,692, Constructor to store params
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,694,"rivate WhileExecutor(Predicate predicate, Executor executor, boolean doLoop) {"
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,695,uper();
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,696,Predicate = predicate;
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,697,Executor = executor;
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,698,DoLoop = doLoop;
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,702, Execute the executor until the predicate is false
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,704,ublic void execute(Object input) {
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,705,f (iDoLoop) {
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,706,Executor.execute(input);
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,708,hile (iPredicate.evaluate(input)) {
False,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,src/java/org/apache/commons/lang/functor/ExecutorUtils.java,709,Executor.execute(input);
False,src/java/org/apache/commons/lang/functor/Factory.java,src/java/org/apache/commons/lang/functor/Factory.java,2," The Apache Software License, Version 1.1"
False,src/java/org/apache/commons/lang/functor/Factory.java,src/java/org/apache/commons/lang/functor/Factory.java,4, Copyright (c) 2002-2003 The Apache Software Foundation.  All rights
False,src/java/org/apache/commons/lang/functor/Factory.java,src/java/org/apache/commons/lang/functor/Factory.java,5, reserved.
False,src/java/org/apache/commons/lang/functor/Factory.java,src/java/org/apache/commons/lang/functor/Factory.java,7," Redistribution and use in source and binary forms, with or without"
False,src/java/org/apache/commons/lang/functor/Factory.java,src/java/org/apache/commons/lang/functor/Factory.java,8," modification, are permitted provided that the following conditions"
False,src/java/org/apache/commons/lang/functor/Factory.java,src/java/org/apache/commons/lang/functor/Factory.java,9, are met:
False,src/java/org/apache/commons/lang/functor/Factory.java,src/java/org/apache/commons/lang/functor/Factory.java,11, 1. Redistributions of source code must retain the above copyright
False,src/java/org/apache/commons/lang/functor/Factory.java,src/java/org/apache/commons/lang/functor/Factory.java,12,"    notice, this list of conditions and the following disclaimer."
False,src/java/org/apache/commons/lang/functor/Factory.java,src/java/org/apache/commons/lang/functor/Factory.java,14, 2. Redistributions in binary form must reproduce the above copyright
False,src/java/org/apache/commons/lang/functor/Factory.java,src/java/org/apache/commons/lang/functor/Factory.java,15,"    notice, this list of conditions and the following disclaimer in"
False,src/java/org/apache/commons/lang/functor/Factory.java,src/java/org/apache/commons/lang/functor/Factory.java,16,    the documentation and/or other materials provided with the
False,src/java/org/apache/commons/lang/functor/Factory.java,src/java/org/apache/commons/lang/functor/Factory.java,17,    distribution.
False,src/java/org/apache/commons/lang/functor/Factory.java,src/java/org/apache/commons/lang/functor/Factory.java,19," 3. The end-user documentation included with the redistribution, if"
False,src/java/org/apache/commons/lang/functor/Factory.java,src/java/org/apache/commons/lang/functor/Factory.java,20,"    any, must include the following acknowlegement:"
False,src/java/org/apache/commons/lang/functor/Factory.java,src/java/org/apache/commons/lang/functor/Factory.java,21,"       ""This product includes software developed by the"
False,src/java/org/apache/commons/lang/functor/Factory.java,src/java/org/apache/commons/lang/functor/Factory.java,22,"        Apache Software Foundation (http://www.apache.org/)."""
False,src/java/org/apache/commons/lang/functor/Factory.java,src/java/org/apache/commons/lang/functor/Factory.java,23,"    Alternately, this acknowlegement may appear in the software itself,"
False,src/java/org/apache/commons/lang/functor/Factory.java,src/java/org/apache/commons/lang/functor/Factory.java,24,    if and wherever such third-party acknowlegements normally appear.
False,src/java/org/apache/commons/lang/functor/Factory.java,src/java/org/apache/commons/lang/functor/Factory.java,26," 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
False,src/java/org/apache/commons/lang/functor/Factory.java,src/java/org/apache/commons/lang/functor/Factory.java,27,"    Foundation"" must not be used to endorse or promote products derived"
False,src/java/org/apache/commons/lang/functor/Factory.java,src/java/org/apache/commons/lang/functor/Factory.java,28,    from this software without prior written permission. For written
False,src/java/org/apache/commons/lang/functor/Factory.java,src/java/org/apache/commons/lang/functor/Factory.java,29,"    permission, please contact apache@apache.org."
False,src/java/org/apache/commons/lang/functor/Factory.java,src/java/org/apache/commons/lang/functor/Factory.java,31," 5. Products derived from this software may not be called ""Apache"""
False,src/java/org/apache/commons/lang/functor/Factory.java,src/java/org/apache/commons/lang/functor/Factory.java,32,"    nor may ""Apache"" appear in their names without prior written"
False,src/java/org/apache/commons/lang/functor/Factory.java,src/java/org/apache/commons/lang/functor/Factory.java,33,    permission of the Apache Software Foundation.
False,src/java/org/apache/commons/lang/functor/Factory.java,src/java/org/apache/commons/lang/functor/Factory.java,35, THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
False,src/java/org/apache/commons/lang/functor/Factory.java,src/java/org/apache/commons/lang/functor/Factory.java,36," WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
False,src/java/org/apache/commons/lang/functor/Factory.java,src/java/org/apache/commons/lang/functor/Factory.java,37, OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
False,src/java/org/apache/commons/lang/functor/Factory.java,src/java/org/apache/commons/lang/functor/Factory.java,38, DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
False,src/java/org/apache/commons/lang/functor/Factory.java,src/java/org/apache/commons/lang/functor/Factory.java,39," ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
False,src/java/org/apache/commons/lang/functor/Factory.java,src/java/org/apache/commons/lang/functor/Factory.java,40," SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
False,src/java/org/apache/commons/lang/functor/Factory.java,src/java/org/apache/commons/lang/functor/Factory.java,41," LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
False,src/java/org/apache/commons/lang/functor/Factory.java,src/java/org/apache/commons/lang/functor/Factory.java,42," USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
False,src/java/org/apache/commons/lang/functor/Factory.java,src/java/org/apache/commons/lang/functor/Factory.java,43," ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
False,src/java/org/apache/commons/lang/functor/Factory.java,src/java/org/apache/commons/lang/functor/Factory.java,44, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
False,src/java/org/apache/commons/lang/functor/Factory.java,src/java/org/apache/commons/lang/functor/Factory.java,45," OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
False,src/java/org/apache/commons/lang/functor/Factory.java,src/java/org/apache/commons/lang/functor/Factory.java,46, SUCH DAMAGE.
False,src/java/org/apache/commons/lang/functor/Factory.java,src/java/org/apache/commons/lang/functor/Factory.java,49, This software consists of voluntary contributions made by many
False,src/java/org/apache/commons/lang/functor/Factory.java,src/java/org/apache/commons/lang/functor/Factory.java,50, individuals on behalf of the Apache Software Foundation.  For more
False,src/java/org/apache/commons/lang/functor/Factory.java,src/java/org/apache/commons/lang/functor/Factory.java,51," information on the Apache Software Foundation, please see"
False,src/java/org/apache/commons/lang/functor/Factory.java,src/java/org/apache/commons/lang/functor/Factory.java,52, <http://www.apache.org/>.
False,src/java/org/apache/commons/lang/functor/Factory.java,src/java/org/apache/commons/lang/functor/Factory.java,54,ackage org.apache.commons.lang.functor;
False,src/java/org/apache/commons/lang/functor/Factory.java,src/java/org/apache/commons/lang/functor/Factory.java,57, <code>Factory</code> defines an interface implemented by classes that
False,src/java/org/apache/commons/lang/functor/Factory.java,src/java/org/apache/commons/lang/functor/Factory.java,58, create objects.
False,src/java/org/apache/commons/lang/functor/Factory.java,src/java/org/apache/commons/lang/functor/Factory.java,60," @author <a href=""mailto:scolebourne@joda.org"">Stephen Colebourne</a>"
False,src/java/org/apache/commons/lang/functor/Factory.java,src/java/org/apache/commons/lang/functor/Factory.java,61," @version $Id: Factory.java,v 1.2 2003/03/23 17:50:02 scolebourne Exp $"
False,src/java/org/apache/commons/lang/functor/Factory.java,src/java/org/apache/commons/lang/functor/Factory.java,63,ublic interface Factory {
False,src/java/org/apache/commons/lang/functor/Factory.java,src/java/org/apache/commons/lang/functor/Factory.java,66, Create a new object.
False,src/java/org/apache/commons/lang/functor/Factory.java,src/java/org/apache/commons/lang/functor/Factory.java,68, @return an new object
False,src/java/org/apache/commons/lang/functor/Factory.java,src/java/org/apache/commons/lang/functor/Factory.java,69, @throws FactoryException (runtime) if the factory cannot create an object
False,src/java/org/apache/commons/lang/functor/Factory.java,src/java/org/apache/commons/lang/functor/Factory.java,71,ublic Object create();
False,src/java/org/apache/commons/lang/functor/FactoryException.java,src/java/org/apache/commons/lang/functor/FactoryException.java,2," The Apache Software License, Version 1.1"
False,src/java/org/apache/commons/lang/functor/FactoryException.java,src/java/org/apache/commons/lang/functor/FactoryException.java,4, Copyright (c) 2002-2003 The Apache Software Foundation.  All rights
False,src/java/org/apache/commons/lang/functor/FactoryException.java,src/java/org/apache/commons/lang/functor/FactoryException.java,5, reserved.
False,src/java/org/apache/commons/lang/functor/FactoryException.java,src/java/org/apache/commons/lang/functor/FactoryException.java,7," Redistribution and use in source and binary forms, with or without"
False,src/java/org/apache/commons/lang/functor/FactoryException.java,src/java/org/apache/commons/lang/functor/FactoryException.java,8," modification, are permitted provided that the following conditions"
False,src/java/org/apache/commons/lang/functor/FactoryException.java,src/java/org/apache/commons/lang/functor/FactoryException.java,9, are met:
False,src/java/org/apache/commons/lang/functor/FactoryException.java,src/java/org/apache/commons/lang/functor/FactoryException.java,11, 1. Redistributions of source code must retain the above copyright
False,src/java/org/apache/commons/lang/functor/FactoryException.java,src/java/org/apache/commons/lang/functor/FactoryException.java,12,"    notice, this list of conditions and the following disclaimer."
False,src/java/org/apache/commons/lang/functor/FactoryException.java,src/java/org/apache/commons/lang/functor/FactoryException.java,14, 2. Redistributions in binary form must reproduce the above copyright
False,src/java/org/apache/commons/lang/functor/FactoryException.java,src/java/org/apache/commons/lang/functor/FactoryException.java,15,"    notice, this list of conditions and the following disclaimer in"
False,src/java/org/apache/commons/lang/functor/FactoryException.java,src/java/org/apache/commons/lang/functor/FactoryException.java,16,    the documentation and/or other materials provided with the
False,src/java/org/apache/commons/lang/functor/FactoryException.java,src/java/org/apache/commons/lang/functor/FactoryException.java,17,    distribution.
False,src/java/org/apache/commons/lang/functor/FactoryException.java,src/java/org/apache/commons/lang/functor/FactoryException.java,19," 3. The end-user documentation included with the redistribution, if"
False,src/java/org/apache/commons/lang/functor/FactoryException.java,src/java/org/apache/commons/lang/functor/FactoryException.java,20,"    any, must include the following acknowlegement:"
False,src/java/org/apache/commons/lang/functor/FactoryException.java,src/java/org/apache/commons/lang/functor/FactoryException.java,21,"       ""This product includes software developed by the"
False,src/java/org/apache/commons/lang/functor/FactoryException.java,src/java/org/apache/commons/lang/functor/FactoryException.java,22,"        Apache Software Foundation (http://www.apache.org/)."""
False,src/java/org/apache/commons/lang/functor/FactoryException.java,src/java/org/apache/commons/lang/functor/FactoryException.java,23,"    Alternately, this acknowlegement may appear in the software itself,"
False,src/java/org/apache/commons/lang/functor/FactoryException.java,src/java/org/apache/commons/lang/functor/FactoryException.java,24,    if and wherever such third-party acknowlegements normally appear.
False,src/java/org/apache/commons/lang/functor/FactoryException.java,src/java/org/apache/commons/lang/functor/FactoryException.java,26," 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
False,src/java/org/apache/commons/lang/functor/FactoryException.java,src/java/org/apache/commons/lang/functor/FactoryException.java,27,"    Foundation"" must not be used to endorse or promote products derived"
False,src/java/org/apache/commons/lang/functor/FactoryException.java,src/java/org/apache/commons/lang/functor/FactoryException.java,28,    from this software without prior written permission. For written
False,src/java/org/apache/commons/lang/functor/FactoryException.java,src/java/org/apache/commons/lang/functor/FactoryException.java,29,"    permission, please contact apache@apache.org."
False,src/java/org/apache/commons/lang/functor/FactoryException.java,src/java/org/apache/commons/lang/functor/FactoryException.java,31," 5. Products derived from this software may not be called ""Apache"""
False,src/java/org/apache/commons/lang/functor/FactoryException.java,src/java/org/apache/commons/lang/functor/FactoryException.java,32,"    nor may ""Apache"" appear in their names without prior written"
False,src/java/org/apache/commons/lang/functor/FactoryException.java,src/java/org/apache/commons/lang/functor/FactoryException.java,33,    permission of the Apache Software Foundation.
False,src/java/org/apache/commons/lang/functor/FactoryException.java,src/java/org/apache/commons/lang/functor/FactoryException.java,35, THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
False,src/java/org/apache/commons/lang/functor/FactoryException.java,src/java/org/apache/commons/lang/functor/FactoryException.java,36," WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
False,src/java/org/apache/commons/lang/functor/FactoryException.java,src/java/org/apache/commons/lang/functor/FactoryException.java,37, OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
False,src/java/org/apache/commons/lang/functor/FactoryException.java,src/java/org/apache/commons/lang/functor/FactoryException.java,38, DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
False,src/java/org/apache/commons/lang/functor/FactoryException.java,src/java/org/apache/commons/lang/functor/FactoryException.java,39," ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
False,src/java/org/apache/commons/lang/functor/FactoryException.java,src/java/org/apache/commons/lang/functor/FactoryException.java,40," SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
False,src/java/org/apache/commons/lang/functor/FactoryException.java,src/java/org/apache/commons/lang/functor/FactoryException.java,41," LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
False,src/java/org/apache/commons/lang/functor/FactoryException.java,src/java/org/apache/commons/lang/functor/FactoryException.java,42," USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
False,src/java/org/apache/commons/lang/functor/FactoryException.java,src/java/org/apache/commons/lang/functor/FactoryException.java,43," ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
False,src/java/org/apache/commons/lang/functor/FactoryException.java,src/java/org/apache/commons/lang/functor/FactoryException.java,44, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
False,src/java/org/apache/commons/lang/functor/FactoryException.java,src/java/org/apache/commons/lang/functor/FactoryException.java,45," OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
False,src/java/org/apache/commons/lang/functor/FactoryException.java,src/java/org/apache/commons/lang/functor/FactoryException.java,46, SUCH DAMAGE.
False,src/java/org/apache/commons/lang/functor/FactoryException.java,src/java/org/apache/commons/lang/functor/FactoryException.java,49, This software consists of voluntary contributions made by many
False,src/java/org/apache/commons/lang/functor/FactoryException.java,src/java/org/apache/commons/lang/functor/FactoryException.java,50, individuals on behalf of the Apache Software Foundation.  For more
False,src/java/org/apache/commons/lang/functor/FactoryException.java,src/java/org/apache/commons/lang/functor/FactoryException.java,51," information on the Apache Software Foundation, please see"
False,src/java/org/apache/commons/lang/functor/FactoryException.java,src/java/org/apache/commons/lang/functor/FactoryException.java,52, <http://www.apache.org/>.
False,src/java/org/apache/commons/lang/functor/FactoryException.java,src/java/org/apache/commons/lang/functor/FactoryException.java,54,ackage org.apache.commons.lang.functor;
False,src/java/org/apache/commons/lang/functor/FactoryException.java,src/java/org/apache/commons/lang/functor/FactoryException.java,56,mport org.apache.commons.lang.exception.NestableRuntimeException;
False,src/java/org/apache/commons/lang/functor/FactoryException.java,src/java/org/apache/commons/lang/functor/FactoryException.java,58, Exception thrown when the a Factory cannot create the object as requested.
False,src/java/org/apache/commons/lang/functor/FactoryException.java,src/java/org/apache/commons/lang/functor/FactoryException.java,59," If required, a root cause error can be wrapped within this one."
False,src/java/org/apache/commons/lang/functor/FactoryException.java,src/java/org/apache/commons/lang/functor/FactoryException.java,61," @author <a href=""mailto:scolebourne@joda.org"">Stephen Colebourne</a>"
False,src/java/org/apache/commons/lang/functor/FactoryException.java,src/java/org/apache/commons/lang/functor/FactoryException.java,62," @version $Id: FactoryException.java,v 1.2 2003/03/23 17:50:02 scolebourne Exp $"
False,src/java/org/apache/commons/lang/functor/FactoryException.java,src/java/org/apache/commons/lang/functor/FactoryException.java,64,ublic class FactoryException extends NestableRuntimeException {
False,src/java/org/apache/commons/lang/functor/FactoryException.java,src/java/org/apache/commons/lang/functor/FactoryException.java,67, Constructs a new <code>FactoryException</code> without specified
False,src/java/org/apache/commons/lang/functor/FactoryException.java,src/java/org/apache/commons/lang/functor/FactoryException.java,68, detail message.
False,src/java/org/apache/commons/lang/functor/FactoryException.java,src/java/org/apache/commons/lang/functor/FactoryException.java,70,ublic FactoryException() {
False,src/java/org/apache/commons/lang/functor/FactoryException.java,src/java/org/apache/commons/lang/functor/FactoryException.java,71,uper();
False,src/java/org/apache/commons/lang/functor/FactoryException.java,src/java/org/apache/commons/lang/functor/FactoryException.java,75, Constructs a new <code>FactoryException</code> with specified
False,src/java/org/apache/commons/lang/functor/FactoryException.java,src/java/org/apache/commons/lang/functor/FactoryException.java,76, detail message.
False,src/java/org/apache/commons/lang/functor/FactoryException.java,src/java/org/apache/commons/lang/functor/FactoryException.java,78, @param msg  the error message.
False,src/java/org/apache/commons/lang/functor/FactoryException.java,src/java/org/apache/commons/lang/functor/FactoryException.java,80,ublic FactoryException(String msg) {
False,src/java/org/apache/commons/lang/functor/FactoryException.java,src/java/org/apache/commons/lang/functor/FactoryException.java,81,uper(msg);
False,src/java/org/apache/commons/lang/functor/FactoryException.java,src/java/org/apache/commons/lang/functor/FactoryException.java,85, Constructs a new <code>FactoryException</code> with specified
False,src/java/org/apache/commons/lang/functor/FactoryException.java,src/java/org/apache/commons/lang/functor/FactoryException.java,86, nested <code>Throwable</code> root cause.
False,src/java/org/apache/commons/lang/functor/FactoryException.java,src/java/org/apache/commons/lang/functor/FactoryException.java,88, @param rootCause  the exception or error that caused this exception
False,src/java/org/apache/commons/lang/functor/FactoryException.java,src/java/org/apache/commons/lang/functor/FactoryException.java,89,                   to be thrown.
False,src/java/org/apache/commons/lang/functor/FactoryException.java,src/java/org/apache/commons/lang/functor/FactoryException.java,91,ublic FactoryException(Throwable rootCause) {
False,src/java/org/apache/commons/lang/functor/FactoryException.java,src/java/org/apache/commons/lang/functor/FactoryException.java,92,uper(rootCause);
False,src/java/org/apache/commons/lang/functor/FactoryException.java,src/java/org/apache/commons/lang/functor/FactoryException.java,96, Constructs a new <code>FactoryException</code> with specified
False,src/java/org/apache/commons/lang/functor/FactoryException.java,src/java/org/apache/commons/lang/functor/FactoryException.java,97, detail message and nested <code>Throwable</code> root cause.
False,src/java/org/apache/commons/lang/functor/FactoryException.java,src/java/org/apache/commons/lang/functor/FactoryException.java,99, @param msg        the error message.
False,src/java/org/apache/commons/lang/functor/FactoryException.java,src/java/org/apache/commons/lang/functor/FactoryException.java,100, @param rootCause  the exception or error that caused this exception
False,src/java/org/apache/commons/lang/functor/FactoryException.java,src/java/org/apache/commons/lang/functor/FactoryException.java,101,                   to be thrown.
False,src/java/org/apache/commons/lang/functor/FactoryException.java,src/java/org/apache/commons/lang/functor/FactoryException.java,103,"ublic FactoryException(String msg, Throwable rootCause) {"
False,src/java/org/apache/commons/lang/functor/FactoryException.java,src/java/org/apache/commons/lang/functor/FactoryException.java,104,"uper(msg, rootCause);"
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,2," The Apache Software License, Version 1.1"
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,4, Copyright (c) 2002-2003 The Apache Software Foundation.  All rights
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,5, reserved.
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,7," Redistribution and use in source and binary forms, with or without"
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,8," modification, are permitted provided that the following conditions"
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,9, are met:
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,11, 1. Redistributions of source code must retain the above copyright
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,12,"    notice, this list of conditions and the following disclaimer."
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,14, 2. Redistributions in binary form must reproduce the above copyright
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,15,"    notice, this list of conditions and the following disclaimer in"
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,16,    the documentation and/or other materials provided with the
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,17,    distribution.
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,19," 3. The end-user documentation included with the redistribution, if"
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,20,"    any, must include the following acknowlegement:"
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,21,"       ""This product includes software developed by the"
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,22,"        Apache Software Foundation (http://www.apache.org/)."""
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,23,"    Alternately, this acknowlegement may appear in the software itself,"
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,24,    if and wherever such third-party acknowlegements normally appear.
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,26," 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,27,"    Foundation"" must not be used to endorse or promote products derived"
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,28,    from this software without prior written permission. For written
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,29,"    permission, please contact apache@apache.org."
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,31," 5. Products derived from this software may not be called ""Apache"""
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,32,"    nor may ""Apache"" appear in their names without prior written"
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,33,    permission of the Apache Software Foundation.
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,35, THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,36," WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,37, OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,38, DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,39," ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,40," SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,41," LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,42," USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,43," ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,44, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,45," OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,46, SUCH DAMAGE.
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,49, This software consists of voluntary contributions made by many
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,50, individuals on behalf of the Apache Software Foundation.  For more
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,51," information on the Apache Software Foundation, please see"
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,52, <http://www.apache.org/>.
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,54,ackage org.apache.commons.lang.functor;
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,56,mport java.io.Serializable;
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,57,mport java.lang.reflect.Constructor;
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,58,mport java.lang.reflect.InvocationTargetException;
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,59,mport java.lang.reflect.Method;
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,61,mport org.apache.commons.lang.SerializationException;
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,62,mport org.apache.commons.lang.SerializationUtils;
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,64, <code>FactoryUtils</code> provides reference implementations and utilities
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,65, for the Factory functor interface. The supplied factories are:
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,66, <ul>
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,67, <li>Prototype - clones a specified object
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,68, <li>Reflection - creates objects using reflection
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,69, <li>Constant - always returns the same object
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,70, <li>Null - always returns null
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,71, <li>Exception - always throws an exception
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,72, </ul>
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,73, All the supplied factories are Serializable.
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,75," @author <a href=""mailto:scolebourne@joda.org"">Stephen Colebourne</a>"
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,76," @version $Id: FactoryUtils.java,v 1.3 2003/03/23 17:50:02 scolebourne Exp $"
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,78,ublic class FactoryUtils {
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,81, A factory that always throws an exception
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,83,rivate static final Factory EXCEPTION_FACTORY = new ExceptionFactory();
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,85, A factory that always returns null
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,87,rivate static final Factory NULL_FACTORY = new ConstantFactory(null);
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,90, Restrictive constructor
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,92,rotected FactoryUtils() {
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,93,uper();
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,97, Gets a Factory that always throws an exception.
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,98, This could be useful during testing as a placeholder.
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,100, @return the factory
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,102,ublic static Factory exceptionFactory() {
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,103,eturn EXCEPTION_FACTORY;
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,107, Gets a Factory that will return null each time the factory is used.
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,108, This could be useful during testing as a placeholder.
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,110, @return the factory
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,112,ublic static Factory nullFactory() {
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,113,eturn NULL_FACTORY;
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,117, Creates a Factory that will return the same object each time the factory
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,118," is used. No check is made that the object is immutable. In general, only"
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,119, immutable objects should use the constant factory. Mutable objects should
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,120, use the prototype factory.
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,122, @param constantToReturn  the constant object to return each time in the factory
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,123, @return the <code>constant</code> factory.
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,125,ublic static Factory constantFactory(Object constantToReturn) {
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,126,eturn new ConstantFactory(constantToReturn);
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,130, Creates a Factory that will return a clone of the same prototype object
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,131, each time the factory is used. The prototype will be cloned using one of these
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,132, techniques (in order):
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,133, <ul>
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,134, <li>public clone method
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,135, <li>public copy constructor
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,136, <li>serialization clone
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,137, <ul>
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,139, @param prototype  the object to clone each time in the factory
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,140, @return the <code>prototype</code> factory
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,141, @throws IllegalArgumentException if the prototype is null
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,142, @throws IllegalArgumentException if the prototype cannot be cloned
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,144,ublic static Factory prototypeFactory(Object prototype) {
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,145,f (prototype == null) {
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,146,"hrow new IllegalArgumentException(""The prototype must not be null"");"
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,148,ry {
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,149,"rototype.getClass().getMethod(""clone"", null);"
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,150,eturn new PrototypeCloneFactory(prototype);
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,152, catch (NoSuchMethodException ex) {
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,153,ry {
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,154,rototype.getClass().getConstructor(new Class[] { prototype.getClass()});
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,155,"eturn new ReflectionFactory(prototype.getClass(), new Class[] { prototype.getClass()}, new Object[] { prototype });"
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,157, catch (NoSuchMethodException ex2) {
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,158,f (prototype instanceof Serializable) {
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,159,eturn new PrototypeSerializationFactory((Serializable) prototype);
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,163,"hrow new IllegalArgumentException(""The prototype must be cloneable via a public clone method"");"
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,167, Creates a Factory that can create objects of a specific type using
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,168, a no-args constructor.
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,170, @param classToInstantiate  the Class to instantiate each time in the factory
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,171, @return the <code>reflection</code> factory
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,172, @throws IllegalArgumentException if the classToInstantiate is null
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,174,ublic static Factory reflectionFactory(Class classToInstantiate) {
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,175,eturn new ReflectionFactory(classToInstantiate);
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,179, Creates a Factory that can create objects of a specific type using
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,180, the arguments specified to this method.
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,182, @param classToInstantiate  the Class to instantiate each time in the factory
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,183," @param paramTypes  parameter types for the constructor, can be null"
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,184," @param args  the arguments to pass to the constructor, can be null"
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,185, @return the <code>reflection</code> factory
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,186, @throws IllegalArgumentException if the classToInstantiate is null
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,187, @throws IllegalArgumentException if the paramTypes and args don't match
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,188, @throws IllegalArgumentException if the constructor doesn't exist
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,190,"ublic static Factory reflectionFactory(Class classToInstantiate, Class[] paramTypes, Object[] args) {"
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,191,"eturn new ReflectionFactory(classToInstantiate, paramTypes, args);"
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,194,/ ExceptionFactory
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,198, ExceptionFactory always throws an exception
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,200,"rivate static class ExceptionFactory implements Factory, Serializable {"
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,203, Constructor
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,205,rivate ExceptionFactory() {
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,206,uper();
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,210, Always throw an exception
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,212,ublic Object create() {
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,213,"hrow new FactoryException(""ExceptionFactory invoked"");"
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,217,/ ConstantFactory
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,221, ConstantFactory returns the same instance each time.
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,223,"rivate static class ConstantFactory implements Factory, Serializable {"
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,224,** The constant to return each time */
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,225,rivate final Object iConstant;
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,228, Constructor to store constant
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,230,rivate ConstantFactory(Object constant) {
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,231,uper();
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,232,Constant = constant;
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,236, Always return constant
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,238,ublic Object create() {
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,239,eturn iConstant;
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,243,/ PrototypeCloneFactory
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,247, PrototypeCloneFactory creates objects by copying a prototype using the clone method.
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,249,"rivate static class PrototypeCloneFactory implements Factory, Serializable {"
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,250,** The object to clone each time */
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,251,rivate final Object iPrototype;
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,252,** The method used to clone */
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,253,rivate transient Method iCloneMethod;
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,256, Constructor to store prototype
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,258,rivate PrototypeCloneFactory(Object prototype) {
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,259,uper();
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,260,f (prototype == null) {
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,261,"hrow new IllegalArgumentException(""PrototypeCloneFactory: The prototype must not be null"");"
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,263,Prototype = prototype;
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,265,indCloneMethod();
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,269, Find the Clone method for the class specified.
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,271,rivate void findCloneMethod() {
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,272,ry {
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,273,"CloneMethod = iPrototype.getClass().getMethod(""clone"", null);"
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,275, catch (NoSuchMethodException ex) {
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,276,"hrow new IllegalArgumentException(""PrototypeCloneFactory: The clone method must exist and be public "");"
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,281, Return clone of prototype
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,283,ublic Object create() {
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,284,/ needed for post-serialization
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,285,f (iCloneMethod == null) {
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,286,indCloneMethod();
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,289,ry {
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,290,"eturn iCloneMethod.invoke(iPrototype, null);"
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,292, catch (IllegalAccessException ex) {
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,293,"hrow new FactoryException(""ReflectionFactory: Clone method must be public"", ex);"
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,294, catch (InvocationTargetException ex) {
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,295,"hrow new FactoryException(""ReflectionFactory: Clone method threw an exception"", ex);"
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,300,/ PrototypeSerializationFactory
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,304, PrototypeSerializationFactory creates objects by cloning a prototype using serialization.
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,306,"rivate static class PrototypeSerializationFactory implements Factory, Serializable {"
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,307,** The object to clone via serialization each time */
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,308,rivate final Serializable iPrototype;
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,311, Constructor to store prototype
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,313,rivate PrototypeSerializationFactory(Serializable prototype) {
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,314,uper();
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,315,f (prototype == null) {
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,316,"hrow new IllegalArgumentException(""PrototypeSerializationFactory: The prototype must not be null"");"
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,318,Prototype = prototype;
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,322, Return clone of prototype by serialization
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,324,ublic Object create() {
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,325,ry {
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,326,eturn SerializationUtils.clone(iPrototype);
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,328, catch (SerializationException ex) {
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,329,"hrow new FactoryException(""PrototypeSerializationFactory: Unable to clone by serialization"", ex);"
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,334,/ ReflectionFactory
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,338, ReflectionFactory creates objects using reflection.
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,340,"rivate static class ReflectionFactory implements Factory, Serializable {"
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,341,** The class to create */
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,342,rivate final Class iClassToInstantiate;
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,343,** The constructor parameter types */
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,344,rivate final Class[] iParamTypes;
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,345,** The constructor arguments */
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,346,rivate final Object[] iArgs;
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,347,** The constructor */
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,348,rivate transient Constructor iConstructor = null;
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,351, Constructor
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,353,ublic ReflectionFactory(Class classToInstantiate) {
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,354,"his(classToInstantiate, null, null);"
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,357,* builds the object factory taking all the options needed to provide
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,358, arguments to a constructor.
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,360,"ublic ReflectionFactory(Class classToInstantiate, Class[] paramTypes, Object[] args) {"
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,361,uper();
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,362,f (classToInstantiate == null) {
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,363,"hrow new IllegalArgumentException(""ReflectionFactory: The class to instantiate must not be null"");"
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,365,f (((paramTypes == null) && (args != null))
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,366,| ((paramTypes != null) && (args == null))
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,367,| ((paramTypes != null) && (args != null) && (paramTypes.length != args.length))) {
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,368,"hrow new IllegalArgumentException(""ReflectionFactory: The parameter types must match the arguments"");"
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,371,ClassToInstantiate = classToInstantiate;
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,372,f ((paramTypes == null) && (args == null)) {
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,373,ParamTypes = null;
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,374,Args = null;
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,375, else {
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,376,ParamTypes = (Class[]) paramTypes.clone();
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,377,Args = (Object[]) args.clone();
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,380,indConstructor();
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,384, Find the Constructor for the class specified.
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,386,rivate void findConstructor() {
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,387,ry {
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,388,Constructor = iClassToInstantiate.getConstructor(iParamTypes);
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,390, catch (NoSuchMethodException ex) {
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,391,"hrow new IllegalArgumentException(""ReflectionFactory: The constructor must exist and be public "");"
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,396, Create the object using a constructor
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,398,ublic Object create() {
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,399,/ needed for post-serialization
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,400,f (iConstructor == null) {
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,401,indConstructor();
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,404,ry {
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,405,eturn iConstructor.newInstance(iArgs);
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,407, catch (InstantiationException ex) {
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,408,"hrow new FactoryException(""ReflectionFactory: InstantiationException"", ex);"
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,409, catch (IllegalAccessException ex) {
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,410,"hrow new FactoryException(""ReflectionFactory: Constructor must be public"", ex);"
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,411, catch (InvocationTargetException ex) {
False,src/java/org/apache/commons/lang/functor/FactoryUtils.java,src/java/org/apache/commons/lang/functor/FactoryUtils.java,412,"hrow new FactoryException(""ReflectionFactory: Constructor threw an exception"", ex);"
False,src/java/org/apache/commons/lang/functor/Predicate.java,src/java/org/apache/commons/lang/functor/Predicate.java,2," The Apache Software License, Version 1.1"
False,src/java/org/apache/commons/lang/functor/Predicate.java,src/java/org/apache/commons/lang/functor/Predicate.java,4, Copyright (c) 2002-2003 The Apache Software Foundation.  All rights
False,src/java/org/apache/commons/lang/functor/Predicate.java,src/java/org/apache/commons/lang/functor/Predicate.java,5, reserved.
False,src/java/org/apache/commons/lang/functor/Predicate.java,src/java/org/apache/commons/lang/functor/Predicate.java,7," Redistribution and use in source and binary forms, with or without"
False,src/java/org/apache/commons/lang/functor/Predicate.java,src/java/org/apache/commons/lang/functor/Predicate.java,8," modification, are permitted provided that the following conditions"
False,src/java/org/apache/commons/lang/functor/Predicate.java,src/java/org/apache/commons/lang/functor/Predicate.java,9, are met:
False,src/java/org/apache/commons/lang/functor/Predicate.java,src/java/org/apache/commons/lang/functor/Predicate.java,11, 1. Redistributions of source code must retain the above copyright
False,src/java/org/apache/commons/lang/functor/Predicate.java,src/java/org/apache/commons/lang/functor/Predicate.java,12,"    notice, this list of conditions and the following disclaimer."
False,src/java/org/apache/commons/lang/functor/Predicate.java,src/java/org/apache/commons/lang/functor/Predicate.java,14, 2. Redistributions in binary form must reproduce the above copyright
False,src/java/org/apache/commons/lang/functor/Predicate.java,src/java/org/apache/commons/lang/functor/Predicate.java,15,"    notice, this list of conditions and the following disclaimer in"
False,src/java/org/apache/commons/lang/functor/Predicate.java,src/java/org/apache/commons/lang/functor/Predicate.java,16,    the documentation and/or other materials provided with the
False,src/java/org/apache/commons/lang/functor/Predicate.java,src/java/org/apache/commons/lang/functor/Predicate.java,17,    distribution.
False,src/java/org/apache/commons/lang/functor/Predicate.java,src/java/org/apache/commons/lang/functor/Predicate.java,19," 3. The end-user documentation included with the redistribution, if"
False,src/java/org/apache/commons/lang/functor/Predicate.java,src/java/org/apache/commons/lang/functor/Predicate.java,20,"    any, must include the following acknowlegement:"
False,src/java/org/apache/commons/lang/functor/Predicate.java,src/java/org/apache/commons/lang/functor/Predicate.java,21,"       ""This product includes software developed by the"
False,src/java/org/apache/commons/lang/functor/Predicate.java,src/java/org/apache/commons/lang/functor/Predicate.java,22,"        Apache Software Foundation (http://www.apache.org/)."""
False,src/java/org/apache/commons/lang/functor/Predicate.java,src/java/org/apache/commons/lang/functor/Predicate.java,23,"    Alternately, this acknowlegement may appear in the software itself,"
False,src/java/org/apache/commons/lang/functor/Predicate.java,src/java/org/apache/commons/lang/functor/Predicate.java,24,    if and wherever such third-party acknowlegements normally appear.
False,src/java/org/apache/commons/lang/functor/Predicate.java,src/java/org/apache/commons/lang/functor/Predicate.java,26," 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
False,src/java/org/apache/commons/lang/functor/Predicate.java,src/java/org/apache/commons/lang/functor/Predicate.java,27,"    Foundation"" must not be used to endorse or promote products derived"
False,src/java/org/apache/commons/lang/functor/Predicate.java,src/java/org/apache/commons/lang/functor/Predicate.java,28,    from this software without prior written permission. For written
False,src/java/org/apache/commons/lang/functor/Predicate.java,src/java/org/apache/commons/lang/functor/Predicate.java,29,"    permission, please contact apache@apache.org."
False,src/java/org/apache/commons/lang/functor/Predicate.java,src/java/org/apache/commons/lang/functor/Predicate.java,31," 5. Products derived from this software may not be called ""Apache"""
False,src/java/org/apache/commons/lang/functor/Predicate.java,src/java/org/apache/commons/lang/functor/Predicate.java,32,"    nor may ""Apache"" appear in their names without prior written"
False,src/java/org/apache/commons/lang/functor/Predicate.java,src/java/org/apache/commons/lang/functor/Predicate.java,33,    permission of the Apache Software Foundation.
False,src/java/org/apache/commons/lang/functor/Predicate.java,src/java/org/apache/commons/lang/functor/Predicate.java,35, THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
False,src/java/org/apache/commons/lang/functor/Predicate.java,src/java/org/apache/commons/lang/functor/Predicate.java,36," WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
False,src/java/org/apache/commons/lang/functor/Predicate.java,src/java/org/apache/commons/lang/functor/Predicate.java,37, OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
False,src/java/org/apache/commons/lang/functor/Predicate.java,src/java/org/apache/commons/lang/functor/Predicate.java,38, DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
False,src/java/org/apache/commons/lang/functor/Predicate.java,src/java/org/apache/commons/lang/functor/Predicate.java,39," ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
False,src/java/org/apache/commons/lang/functor/Predicate.java,src/java/org/apache/commons/lang/functor/Predicate.java,40," SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
False,src/java/org/apache/commons/lang/functor/Predicate.java,src/java/org/apache/commons/lang/functor/Predicate.java,41," LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
False,src/java/org/apache/commons/lang/functor/Predicate.java,src/java/org/apache/commons/lang/functor/Predicate.java,42," USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
False,src/java/org/apache/commons/lang/functor/Predicate.java,src/java/org/apache/commons/lang/functor/Predicate.java,43," ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
False,src/java/org/apache/commons/lang/functor/Predicate.java,src/java/org/apache/commons/lang/functor/Predicate.java,44, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
False,src/java/org/apache/commons/lang/functor/Predicate.java,src/java/org/apache/commons/lang/functor/Predicate.java,45," OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
False,src/java/org/apache/commons/lang/functor/Predicate.java,src/java/org/apache/commons/lang/functor/Predicate.java,46, SUCH DAMAGE.
False,src/java/org/apache/commons/lang/functor/Predicate.java,src/java/org/apache/commons/lang/functor/Predicate.java,49, This software consists of voluntary contributions made by many
False,src/java/org/apache/commons/lang/functor/Predicate.java,src/java/org/apache/commons/lang/functor/Predicate.java,50, individuals on behalf of the Apache Software Foundation.  For more
False,src/java/org/apache/commons/lang/functor/Predicate.java,src/java/org/apache/commons/lang/functor/Predicate.java,51," information on the Apache Software Foundation, please see"
False,src/java/org/apache/commons/lang/functor/Predicate.java,src/java/org/apache/commons/lang/functor/Predicate.java,52, <http://www.apache.org/>.
False,src/java/org/apache/commons/lang/functor/Predicate.java,src/java/org/apache/commons/lang/functor/Predicate.java,54,ackage org.apache.commons.lang.functor;
False,src/java/org/apache/commons/lang/functor/Predicate.java,src/java/org/apache/commons/lang/functor/Predicate.java,57, <code>Predicate</code> defines an interface implemented by classes that
False,src/java/org/apache/commons/lang/functor/Predicate.java,src/java/org/apache/commons/lang/functor/Predicate.java,58, perform a predicate test on an object. Predicate instances can be used
False,src/java/org/apache/commons/lang/functor/Predicate.java,src/java/org/apache/commons/lang/functor/Predicate.java,59, to implement queries or to do filtering.
False,src/java/org/apache/commons/lang/functor/Predicate.java,src/java/org/apache/commons/lang/functor/Predicate.java,61," @author <a href=""mailto:jstrachan@apache.org"">James Strachan</a>"
False,src/java/org/apache/commons/lang/functor/Predicate.java,src/java/org/apache/commons/lang/functor/Predicate.java,62," @author <a href=""mailto:scolebourne@joda.org"">Stephen Colebourne</a>"
False,src/java/org/apache/commons/lang/functor/Predicate.java,src/java/org/apache/commons/lang/functor/Predicate.java,63," @version $Id: Predicate.java,v 1.2 2003/03/23 17:50:02 scolebourne Exp $"
False,src/java/org/apache/commons/lang/functor/Predicate.java,src/java/org/apache/commons/lang/functor/Predicate.java,65,ublic interface Predicate {
False,src/java/org/apache/commons/lang/functor/Predicate.java,src/java/org/apache/commons/lang/functor/Predicate.java,68, Use the specified parameter to perform a test that returns true or false.
False,src/java/org/apache/commons/lang/functor/Predicate.java,src/java/org/apache/commons/lang/functor/Predicate.java,70, @param object  the object to evaluate
False,src/java/org/apache/commons/lang/functor/Predicate.java,src/java/org/apache/commons/lang/functor/Predicate.java,71, @return true or false
False,src/java/org/apache/commons/lang/functor/Predicate.java,src/java/org/apache/commons/lang/functor/Predicate.java,72, @throws PredicateException (runtime) if the predicate encounters a problem
False,src/java/org/apache/commons/lang/functor/Predicate.java,src/java/org/apache/commons/lang/functor/Predicate.java,74,ublic boolean evaluate(Object object);
False,src/java/org/apache/commons/lang/functor/PredicateException.java,src/java/org/apache/commons/lang/functor/PredicateException.java,2," The Apache Software License, Version 1.1"
False,src/java/org/apache/commons/lang/functor/PredicateException.java,src/java/org/apache/commons/lang/functor/PredicateException.java,4, Copyright (c) 2002-2003 The Apache Software Foundation.  All rights
False,src/java/org/apache/commons/lang/functor/PredicateException.java,src/java/org/apache/commons/lang/functor/PredicateException.java,5, reserved.
False,src/java/org/apache/commons/lang/functor/PredicateException.java,src/java/org/apache/commons/lang/functor/PredicateException.java,7," Redistribution and use in source and binary forms, with or without"
False,src/java/org/apache/commons/lang/functor/PredicateException.java,src/java/org/apache/commons/lang/functor/PredicateException.java,8," modification, are permitted provided that the following conditions"
False,src/java/org/apache/commons/lang/functor/PredicateException.java,src/java/org/apache/commons/lang/functor/PredicateException.java,9, are met:
False,src/java/org/apache/commons/lang/functor/PredicateException.java,src/java/org/apache/commons/lang/functor/PredicateException.java,11, 1. Redistributions of source code must retain the above copyright
False,src/java/org/apache/commons/lang/functor/PredicateException.java,src/java/org/apache/commons/lang/functor/PredicateException.java,12,"    notice, this list of conditions and the following disclaimer."
False,src/java/org/apache/commons/lang/functor/PredicateException.java,src/java/org/apache/commons/lang/functor/PredicateException.java,14, 2. Redistributions in binary form must reproduce the above copyright
False,src/java/org/apache/commons/lang/functor/PredicateException.java,src/java/org/apache/commons/lang/functor/PredicateException.java,15,"    notice, this list of conditions and the following disclaimer in"
False,src/java/org/apache/commons/lang/functor/PredicateException.java,src/java/org/apache/commons/lang/functor/PredicateException.java,16,    the documentation and/or other materials provided with the
False,src/java/org/apache/commons/lang/functor/PredicateException.java,src/java/org/apache/commons/lang/functor/PredicateException.java,17,    distribution.
False,src/java/org/apache/commons/lang/functor/PredicateException.java,src/java/org/apache/commons/lang/functor/PredicateException.java,19," 3. The end-user documentation included with the redistribution, if"
False,src/java/org/apache/commons/lang/functor/PredicateException.java,src/java/org/apache/commons/lang/functor/PredicateException.java,20,"    any, must include the following acknowlegement:"
False,src/java/org/apache/commons/lang/functor/PredicateException.java,src/java/org/apache/commons/lang/functor/PredicateException.java,21,"       ""This product includes software developed by the"
False,src/java/org/apache/commons/lang/functor/PredicateException.java,src/java/org/apache/commons/lang/functor/PredicateException.java,22,"        Apache Software Foundation (http://www.apache.org/)."""
False,src/java/org/apache/commons/lang/functor/PredicateException.java,src/java/org/apache/commons/lang/functor/PredicateException.java,23,"    Alternately, this acknowlegement may appear in the software itself,"
False,src/java/org/apache/commons/lang/functor/PredicateException.java,src/java/org/apache/commons/lang/functor/PredicateException.java,24,    if and wherever such third-party acknowlegements normally appear.
False,src/java/org/apache/commons/lang/functor/PredicateException.java,src/java/org/apache/commons/lang/functor/PredicateException.java,26," 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
False,src/java/org/apache/commons/lang/functor/PredicateException.java,src/java/org/apache/commons/lang/functor/PredicateException.java,27,"    Foundation"" must not be used to endorse or promote products derived"
False,src/java/org/apache/commons/lang/functor/PredicateException.java,src/java/org/apache/commons/lang/functor/PredicateException.java,28,    from this software without prior written permission. For written
False,src/java/org/apache/commons/lang/functor/PredicateException.java,src/java/org/apache/commons/lang/functor/PredicateException.java,29,"    permission, please contact apache@apache.org."
False,src/java/org/apache/commons/lang/functor/PredicateException.java,src/java/org/apache/commons/lang/functor/PredicateException.java,31," 5. Products derived from this software may not be called ""Apache"""
False,src/java/org/apache/commons/lang/functor/PredicateException.java,src/java/org/apache/commons/lang/functor/PredicateException.java,32,"    nor may ""Apache"" appear in their names without prior written"
False,src/java/org/apache/commons/lang/functor/PredicateException.java,src/java/org/apache/commons/lang/functor/PredicateException.java,33,    permission of the Apache Software Foundation.
False,src/java/org/apache/commons/lang/functor/PredicateException.java,src/java/org/apache/commons/lang/functor/PredicateException.java,35, THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
False,src/java/org/apache/commons/lang/functor/PredicateException.java,src/java/org/apache/commons/lang/functor/PredicateException.java,36," WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
False,src/java/org/apache/commons/lang/functor/PredicateException.java,src/java/org/apache/commons/lang/functor/PredicateException.java,37, OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
False,src/java/org/apache/commons/lang/functor/PredicateException.java,src/java/org/apache/commons/lang/functor/PredicateException.java,38, DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
False,src/java/org/apache/commons/lang/functor/PredicateException.java,src/java/org/apache/commons/lang/functor/PredicateException.java,39," ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
False,src/java/org/apache/commons/lang/functor/PredicateException.java,src/java/org/apache/commons/lang/functor/PredicateException.java,40," SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
False,src/java/org/apache/commons/lang/functor/PredicateException.java,src/java/org/apache/commons/lang/functor/PredicateException.java,41," LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
False,src/java/org/apache/commons/lang/functor/PredicateException.java,src/java/org/apache/commons/lang/functor/PredicateException.java,42," USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
False,src/java/org/apache/commons/lang/functor/PredicateException.java,src/java/org/apache/commons/lang/functor/PredicateException.java,43," ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
False,src/java/org/apache/commons/lang/functor/PredicateException.java,src/java/org/apache/commons/lang/functor/PredicateException.java,44, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
False,src/java/org/apache/commons/lang/functor/PredicateException.java,src/java/org/apache/commons/lang/functor/PredicateException.java,45," OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
False,src/java/org/apache/commons/lang/functor/PredicateException.java,src/java/org/apache/commons/lang/functor/PredicateException.java,46, SUCH DAMAGE.
False,src/java/org/apache/commons/lang/functor/PredicateException.java,src/java/org/apache/commons/lang/functor/PredicateException.java,49, This software consists of voluntary contributions made by many
False,src/java/org/apache/commons/lang/functor/PredicateException.java,src/java/org/apache/commons/lang/functor/PredicateException.java,50, individuals on behalf of the Apache Software Foundation.  For more
False,src/java/org/apache/commons/lang/functor/PredicateException.java,src/java/org/apache/commons/lang/functor/PredicateException.java,51," information on the Apache Software Foundation, please see"
False,src/java/org/apache/commons/lang/functor/PredicateException.java,src/java/org/apache/commons/lang/functor/PredicateException.java,52, <http://www.apache.org/>.
False,src/java/org/apache/commons/lang/functor/PredicateException.java,src/java/org/apache/commons/lang/functor/PredicateException.java,54,ackage org.apache.commons.lang.functor;
False,src/java/org/apache/commons/lang/functor/PredicateException.java,src/java/org/apache/commons/lang/functor/PredicateException.java,56,mport org.apache.commons.lang.exception.NestableRuntimeException;
False,src/java/org/apache/commons/lang/functor/PredicateException.java,src/java/org/apache/commons/lang/functor/PredicateException.java,58, Exception thrown when the a Predicate encounters a problem.
False,src/java/org/apache/commons/lang/functor/PredicateException.java,src/java/org/apache/commons/lang/functor/PredicateException.java,59," If required, a root cause error can be wrapped within this one."
False,src/java/org/apache/commons/lang/functor/PredicateException.java,src/java/org/apache/commons/lang/functor/PredicateException.java,61," @author <a href=""mailto:scolebourne@joda.org"">Stephen Colebourne</a>"
False,src/java/org/apache/commons/lang/functor/PredicateException.java,src/java/org/apache/commons/lang/functor/PredicateException.java,62," @version $Id: PredicateException.java,v 1.2 2003/03/23 17:50:02 scolebourne Exp $"
False,src/java/org/apache/commons/lang/functor/PredicateException.java,src/java/org/apache/commons/lang/functor/PredicateException.java,64,ublic class PredicateException extends NestableRuntimeException {
False,src/java/org/apache/commons/lang/functor/PredicateException.java,src/java/org/apache/commons/lang/functor/PredicateException.java,67, Constructs a new <code>PredicateException</code> without specified
False,src/java/org/apache/commons/lang/functor/PredicateException.java,src/java/org/apache/commons/lang/functor/PredicateException.java,68, detail message.
False,src/java/org/apache/commons/lang/functor/PredicateException.java,src/java/org/apache/commons/lang/functor/PredicateException.java,70,ublic PredicateException() {
False,src/java/org/apache/commons/lang/functor/PredicateException.java,src/java/org/apache/commons/lang/functor/PredicateException.java,71,uper();
False,src/java/org/apache/commons/lang/functor/PredicateException.java,src/java/org/apache/commons/lang/functor/PredicateException.java,75, Constructs a new <code>PredicateException</code> with specified
False,src/java/org/apache/commons/lang/functor/PredicateException.java,src/java/org/apache/commons/lang/functor/PredicateException.java,76, detail message.
False,src/java/org/apache/commons/lang/functor/PredicateException.java,src/java/org/apache/commons/lang/functor/PredicateException.java,78, @param msg  the error message.
False,src/java/org/apache/commons/lang/functor/PredicateException.java,src/java/org/apache/commons/lang/functor/PredicateException.java,80,ublic PredicateException(String msg) {
False,src/java/org/apache/commons/lang/functor/PredicateException.java,src/java/org/apache/commons/lang/functor/PredicateException.java,81,uper(msg);
False,src/java/org/apache/commons/lang/functor/PredicateException.java,src/java/org/apache/commons/lang/functor/PredicateException.java,85, Constructs a new <code>PredicateException</code> with specified
False,src/java/org/apache/commons/lang/functor/PredicateException.java,src/java/org/apache/commons/lang/functor/PredicateException.java,86, nested <code>Throwable</code> root cause.
False,src/java/org/apache/commons/lang/functor/PredicateException.java,src/java/org/apache/commons/lang/functor/PredicateException.java,88, @param rootCause  the exception or error that caused this exception
False,src/java/org/apache/commons/lang/functor/PredicateException.java,src/java/org/apache/commons/lang/functor/PredicateException.java,89,                   to be thrown.
False,src/java/org/apache/commons/lang/functor/PredicateException.java,src/java/org/apache/commons/lang/functor/PredicateException.java,91,ublic PredicateException(Throwable rootCause) {
False,src/java/org/apache/commons/lang/functor/PredicateException.java,src/java/org/apache/commons/lang/functor/PredicateException.java,92,uper(rootCause);
False,src/java/org/apache/commons/lang/functor/PredicateException.java,src/java/org/apache/commons/lang/functor/PredicateException.java,96, Constructs a new <code>PredicateException</code> with specified
False,src/java/org/apache/commons/lang/functor/PredicateException.java,src/java/org/apache/commons/lang/functor/PredicateException.java,97, detail message and nested <code>Throwable</code> root cause.
False,src/java/org/apache/commons/lang/functor/PredicateException.java,src/java/org/apache/commons/lang/functor/PredicateException.java,99, @param msg        the error message.
False,src/java/org/apache/commons/lang/functor/PredicateException.java,src/java/org/apache/commons/lang/functor/PredicateException.java,100, @param rootCause  the exception or error that caused this exception
False,src/java/org/apache/commons/lang/functor/PredicateException.java,src/java/org/apache/commons/lang/functor/PredicateException.java,101,                   to be thrown.
False,src/java/org/apache/commons/lang/functor/PredicateException.java,src/java/org/apache/commons/lang/functor/PredicateException.java,103,"ublic PredicateException(String msg, Throwable rootCause) {"
False,src/java/org/apache/commons/lang/functor/PredicateException.java,src/java/org/apache/commons/lang/functor/PredicateException.java,104,"uper(msg, rootCause);"
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,2," The Apache Software License, Version 1.1"
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,4, Copyright (c) 2002-2003 The Apache Software Foundation.  All rights
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,5, reserved.
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,7," Redistribution and use in source and binary forms, with or without"
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,8," modification, are permitted provided that the following conditions"
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,9, are met:
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,11, 1. Redistributions of source code must retain the above copyright
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,12,"    notice, this list of conditions and the following disclaimer."
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,14, 2. Redistributions in binary form must reproduce the above copyright
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,15,"    notice, this list of conditions and the following disclaimer in"
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,16,    the documentation and/or other materials provided with the
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,17,    distribution.
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,19," 3. The end-user documentation included with the redistribution, if"
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,20,"    any, must include the following acknowlegement:"
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,21,"       ""This product includes software developed by the"
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,22,"        Apache Software Foundation (http://www.apache.org/)."""
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,23,"    Alternately, this acknowlegement may appear in the software itself,"
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,24,    if and wherever such third-party acknowlegements normally appear.
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,26," 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,27,"    Foundation"" must not be used to endorse or promote products derived"
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,28,    from this software without prior written permission. For written
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,29,"    permission, please contact apache@apache.org."
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,31," 5. Products derived from this software may not be called ""Apache"""
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,32,"    nor may ""Apache"" appear in their names without prior written"
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,33,    permission of the Apache Software Foundation.
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,35, THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,36," WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,37, OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,38, DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,39," ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,40," SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,41," LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,42," USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,43," ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,44, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,45," OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,46, SUCH DAMAGE.
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,49, This software consists of voluntary contributions made by many
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,50, individuals on behalf of the Apache Software Foundation.  For more
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,51," information on the Apache Software Foundation, please see"
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,52, <http://www.apache.org/>.
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,54,ackage org.apache.commons.lang.functor;
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,56,mport java.io.Serializable;
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,57,mport java.util.Collection;
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,58,mport java.util.HashSet;
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,59,mport java.util.Iterator;
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,60,mport java.util.Set;
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,62,mport org.apache.commons.lang.functor.Transformer;
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,63,mport org.apache.commons.lang.functor.TransformerException;
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,64,mport org.apache.commons.lang.functor.TransformerUtils;
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,66, <code>PredicateUtils</code> provides reference implementations and utilities
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,67, for the Predicate functor interface. The supplied predicates are:
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,68, <ul>
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,69, <li>Invoker - returns the result of a method call on the input object
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,70, <li>InstanceOf - true if the object is an instanceof a class
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,71, <li>Equal - true if the object equals() a specified object
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,72, <li>Identity - true if the object == a specified object
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,73, <li>Null - true if the object is null
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,74, <li>NotNull - true if the object is not null
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,75, <li>Unique - true if the object has not already been evaluated
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,76, <li>And/All - true if all of the predicates are true
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,77, <li>Or/Any - true if any of the predicates is true
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,78, <li>Either/One - true if only one of the predicate is true
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,79, <li>Neither/None - true if none of the predicates are true
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,80," <li>Not - true if the predicate is false, and vice versa"
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,81, <li>Transformer - wraps a Transformer as a Predicate
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,82, <li>True - always return true
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,83, <li>False - always return false
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,84, <li>Exception - always throws an exception
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,85, <li>NullIsException/NullIsFalse/NullIsTrue - check for null input
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,86, </ul>
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,87, All the supplied predicates are Serializable.
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,89," @author <a href=""mailto:scolebourne@joda.org"">Stephen Colebourne</a>"
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,90, @author Ola Berg
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,91," @version $Id: PredicateUtils.java,v 1.3 2003/03/23 17:50:02 scolebourne Exp $"
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,93,ublic class PredicateUtils {
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,96, A predicate that always throws an exception
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,98,rivate static final Predicate EXCEPTION_PREDICATE = new ExceptionPredicate();
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,100, A predicate that always returns true
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,102,rivate static final Predicate TRUE_PREDICATE = new ConstantPredicate(true);
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,104, A predicate that always returns false
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,106,rivate static final Predicate FALSE_PREDICATE = new ConstantPredicate(false);
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,108, A predicate that returns true if the object is null
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,110,rivate static final Predicate NULL_PREDICATE = new IdentityPredicate(null);
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,112, A predicate that returns true if the object is not null
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,114,rivate static final Predicate NOT_NULL_PREDICATE = new NotPredicate(NULL_PREDICATE);
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,117, Restrictive constructor
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,119,rotected PredicateUtils() {
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,120,uper();
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,123,/ Simple predicates
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,127, Gets a Predicate that always throws an exception.
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,128, This could be useful during testing as a placeholder.
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,130, @return the predicate
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,132,ublic static Predicate exceptionPredicate() {
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,133,eturn EXCEPTION_PREDICATE;
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,137, Gets a Predicate that always returns true.
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,139, @return the predicate
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,141,ublic static Predicate truePredicate() {
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,142,eturn TRUE_PREDICATE;
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,146, Gets a Predicate that always returns false.
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,148, @return the predicate
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,150,ublic static Predicate falsePredicate() {
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,151,eturn FALSE_PREDICATE;
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,155, Gets a Predicate that checks if the input object passed in is null.
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,157, @return the predicate
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,159,ublic static Predicate nullPredicate() {
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,160,eturn NULL_PREDICATE;
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,164, Gets a Predicate that checks if the input object passed in is not null.
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,166, @return the predicate
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,168,ublic static Predicate notNullPredicate() {
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,169,eturn NOT_NULL_PREDICATE;
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,173, Creates a Predicate that checks if the input object is equal to the
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,174, specified object using equals().
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,176, @param value  the value to compare against
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,177, @return the predicate
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,179,ublic static Predicate equalPredicate(Object value) {
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,180,f (value == null) {
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,181,eturn NULL_PREDICATE;
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,183,eturn new EqualPredicate(value);
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,187, Creates a Predicate that checks if the input object is equal to the
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,188, specified object by identity.
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,190, @param value  the value to compare against
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,191, @return the predicate
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,193,ublic static Predicate identityPredicate(Object value) {
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,194,f (value == null) {
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,195,eturn NULL_PREDICATE;
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,197,eturn new IdentityPredicate(value);
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,201, Creates a Predicate that checks if the object passed in is of
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,202," a particular type, using instanceof. A <code>null</code> input"
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,203, object will return <code>false</code>.
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,205," @param type  the type to check for, may not be null"
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,206, @return the predicate
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,207, @throws IllegalArgumentException if the class is null
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,209,ublic static Predicate instanceofPredicate(Class type) {
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,210,f (type == null) {
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,211,"hrow new IllegalArgumentException(""The type to check instanceof must not be null"");"
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,213,eturn new InstanceofPredicate(type);
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,217, Creates a Predicate that returns true the first time an object is
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,218," encoutered, and false if the same object is received"
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,219, again. The comparison is by equals(). A <code>null</code> input object
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,220," is accepted and will return true the first time, and false subsequently"
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,221, as well.
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,223, @return the predicate
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,225,ublic static Predicate uniquePredicate() {
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,226,/ must return new instance each time
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,227,eturn new UniquePredicate();
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,231, Creates a Predicate that invokes a method on the input object.
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,232," The method must return either a boolean or a non-null Boolean,"
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,233," and have no parameters. If the input object is null, a"
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,234, PredicateException is thrown.
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,235, <p>
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,236," For example, <code>PredicateUtils.invokerPredicate(""isEmpty"");</code>"
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,237, will call the <code>isEmpty</code> method on the input object to
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,238, determine the predicate result.
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,240," @param methodName  the method name to call on the input object, may not be null"
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,241, @return the predicate
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,242, @throws IllegalArgumentException if the methodName is null.
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,244,ublic static Predicate invokerPredicate(String methodName){
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,245,"/ reuse transformer as it has caching - this is lazy really, should have inner class here"
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,246,eturn asPredicate(TransformerUtils.invokerTransformer(methodName));
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,250, Creates a Predicate that invokes a method on the input object.
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,251," The method must return either a boolean or a non-null Boolean,"
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,252," and have no parameters. If the input object is null, a"
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,253, PredicateException is thrown.
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,254, <p>
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,255," For example, <code>PredicateUtils.invokerPredicate(""isEmpty"");</code>"
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,256, will call the <code>isEmpty</code> method on the input object to
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,257, determine the predicate result.
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,259," @param methodName  the method name to call on the input object, may not be null"
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,260, @param paramTypes  the parameter types
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,261, @param args  the arguments
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,262, @return the predicate
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,263, @throws IllegalArgumentException if the method name is null
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,264, @throws IllegalArgumentException if the paramTypes and args don't match
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,266,"ublic static Predicate invokerPredicate(String methodName, Class[] paramTypes, Object[] args){"
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,267,"/ reuse transformer as it has caching - this is lazy really, should have inner class here"
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,268,"eturn asPredicate(TransformerUtils.invokerTransformer(methodName, paramTypes, args));"
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,271,/ Boolean combinations
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,275, Create a new Predicate that returns true only if both of the specified
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,276, predicates are true.
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,278," @param predicate1  the first predicate, may not be null"
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,279," @param predicate2  the second predicate, may not be null"
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,280, @return the <code>and</code> predicate
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,281, @throws IllegalArgumentException if either predicate is null
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,283,"ublic static Predicate andPredicate(Predicate predicate1, Predicate predicate2) {"
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,284,"eturn allPredicate(new Predicate[] { predicate1, predicate2 });"
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,288, Create a new Predicate that returns true only if all of the specified
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,289, predicates are true.
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,291," @param predicates  an array of predicates to check, may not be null"
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,292, @return the <code>all</code> predicate
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,293, @throws IllegalArgumentException if the predicates array is null
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,294, @throws IllegalArgumentException if the predicates array has less than 2 elements
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,295, @throws IllegalArgumentException if any predicate in the array is null
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,297,ublic static Predicate allPredicate(Predicate[] predicates) {
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,298,eturn new AllPredicate(validate(predicates));
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,302, Create a new Predicate that returns true only if all of the specified
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,303, predicates are true. The predicates are checked in iterator order.
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,305," @param predicates  a collection of predicates to check, may not be null"
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,306, @return the <code>all</code> predicate
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,307, @throws IllegalArgumentException if the predicates collection is null
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,308, @throws IllegalArgumentException if the predicates collection has less than 2 elements
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,309, @throws IllegalArgumentException if any predicate in the collection is null
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,311,ublic static Predicate allPredicate(Collection predicates) {
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,312,eturn new AllPredicate(validate(predicates));
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,316, Create a new Predicate that returns true if either of the specified
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,317, predicates are true.
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,319," @param predicate1  the first predicate, may not be null"
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,320," @param predicate2  the second predicate, may not be null"
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,321, @return the <code>or</code> predicate
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,322, @throws IllegalArgumentException if either predicate is null
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,324,"ublic static Predicate orPredicate(Predicate predicate1, Predicate predicate2) {"
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,325,"eturn anyPredicate(new Predicate[] { predicate1, predicate2 });"
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,329, Create a new Predicate that returns true if any of the specified
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,330, predicates are true.
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,332," @param predicates  an array of predicates to check, may not be null"
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,333, @return the <code>any</code> predicate
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,334, @throws IllegalArgumentException if the predicates array is null
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,335, @throws IllegalArgumentException if the predicates array has less than 2 elements
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,336, @throws IllegalArgumentException if any predicate in the array is null
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,338,ublic static Predicate anyPredicate(Predicate[] predicates) {
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,339,eturn new AnyPredicate(validate(predicates));
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,343, Create a new Predicate that returns true if any of the specified
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,344, predicates are true. The predicates are checked in iterator order.
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,346," @param predicates  a collection of predicates to check, may not be null"
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,347, @return the <code>any</code> predicate
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,348, @throws IllegalArgumentException if the predicates collection is null
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,349, @throws IllegalArgumentException if the predicates collection has less than 2 elements
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,350, @throws IllegalArgumentException if any predicate in the collection is null
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,352,ublic static Predicate anyPredicate(Collection predicates) {
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,353,eturn new AnyPredicate(validate(predicates));
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,357," Create a new Predicate that returns true if one, but not both, of the"
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,358, specified predicates are true.
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,360," @param predicate1  the first predicate, may not be null"
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,361," @param predicate2  the second predicate, may not be null"
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,362, @return the <code>either</code> predicate
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,363, @throws IllegalArgumentException if either predicate is null
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,365,"ublic static Predicate eitherPredicate(Predicate predicate1, Predicate predicate2) {"
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,366,"eturn onePredicate(new Predicate[] { predicate1, predicate2 });"
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,370, Create a new Predicate that returns true if only one of the specified
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,371, predicates are true.
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,373," @param predicates  an array of predicates to check, may not be null"
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,374, @return the <code>one</code> predicate
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,375, @throws IllegalArgumentException if the predicates array is null
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,376, @throws IllegalArgumentException if the predicates array has less than 2 elements
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,377, @throws IllegalArgumentException if any predicate in the array is null
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,379,ublic static Predicate onePredicate(Predicate[] predicates) {
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,380,eturn new OnePredicate(validate(predicates));
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,384, Create a new Predicate that returns true if only one of the specified
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,385, predicates are true. The predicates are checked in iterator order.
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,387," @param predicates  a collection of predicates to check, may not be null"
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,388, @return the <code>one</code> predicate
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,389, @throws IllegalArgumentException if the predicates collection is null
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,390, @throws IllegalArgumentException if the predicates collection has less than 2 elements
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,391, @throws IllegalArgumentException if any predicate in the collection is null
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,393,ublic static Predicate onePredicate(Collection predicates) {
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,394,eturn new OnePredicate(validate(predicates));
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,398, Create a new Predicate that returns true if neither of the specified
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,399, predicates are true.
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,401," @param predicate1  the first predicate, may not be null"
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,402," @param predicate2  the second predicate, may not be null"
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,403, @return the <code>neither</code> predicate
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,404, @throws IllegalArgumentException if either predicate is null
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,406,"ublic static Predicate neitherPredicate(Predicate predicate1, Predicate predicate2) {"
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,407,"eturn nonePredicate(new Predicate[] { predicate1, predicate2 });"
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,411, Create a new Predicate that returns true if none of the specified
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,412, predicates are true.
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,414," @param predicates  an array of predicates to check, may not be null"
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,415, @return the <code>none</code> predicate
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,416, @throws IllegalArgumentException if the predicates array is null
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,417, @throws IllegalArgumentException if the predicates array has less than 2 elements
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,418, @throws IllegalArgumentException if any predicate in the array is null
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,420,ublic static Predicate nonePredicate(Predicate[] predicates) {
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,421,redicate[] preds = validate(predicates);
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,422,or (int i = 0; i < preds.length; i++) {
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,423,reds[i] = notPredicate(preds[i]);
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,425,eturn new AllPredicate(preds);
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,429, Create a new Predicate that returns true if none of the specified
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,430, predicates are true. The predicates are checked in iterator order.
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,432," @param predicates  a collection of predicates to check, may not be null"
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,433, @return the <code>none</code> predicate
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,434, @throws IllegalArgumentException if the predicates collection is null
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,435, @throws IllegalArgumentException if the predicates collection has less than 2 elements
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,436, @throws IllegalArgumentException if any predicate in the collection is null
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,438,ublic static Predicate nonePredicate(Collection predicates) {
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,439,redicate[] preds = validate(predicates);
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,440,or (int i = 0; i < preds.length; i++) {
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,441,reds[i] = notPredicate(preds[i]);
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,443,eturn new AllPredicate(preds);
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,447, Create a new Predicate that returns true if the specified predicate
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,448, returns false and vice versa.
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,450, @param predicate  the predicate to not
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,451, @return the <code>not</code> predicate
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,452, @throws IllegalArgumentException if the predicate is null
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,454,ublic static Predicate notPredicate(Predicate predicate) {
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,455,f (predicate == null) {
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,456,"hrow new IllegalArgumentException(""The predicate must not be null"");"
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,458,eturn new NotPredicate(predicate);
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,461,/ Adaptors
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,465, Create a new Predicate that wraps a Transformer. The Transformer must
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,466, return either Boolean.TRUE or Boolean.FALSE otherwise a PredicateException
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,467, will be thrown.
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,469," @param transformer  the transformer to wrap, may not be null"
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,470, @return the transformer wrapping predicate
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,471, @throws IllegalArgumentException if the transformer is null
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,473,ublic static Predicate asPredicate(Transformer transformer) {
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,474,f (transformer == null) {
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,475,"hrow new IllegalArgumentException(""The transformer to call must not be null"");"
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,477,eturn new TransformerPredicate(transformer);
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,480,/ Null handlers
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,484," Gets a Predicate that throws an exception if the input object is null,"
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,485, otherwise it calls the specified Predicate. This allows null handling
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,486, behaviour to be added to Predicates that don't support nulls.
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,488," @param predicate  the predicate to wrap, may not be null"
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,489, @return the predicate
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,490, @throws IllegalArgumentException if the predicate is null.
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,492,ublic static Predicate nullIsExceptionPredicate(Predicate predicate){
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,493,f (predicate == null) {
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,494,"hrow new IllegalArgumentException(""The predicate must not be null"");"
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,496,eturn new NullIsExceptionPredicate( predicate);
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,500," Gets a Predicate that returns false if the input object is null, otherwise"
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,501, it calls the specified Predicate. This allows null handling behaviour to
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,502, be added to Predicates that don't support nulls.
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,504," @param predicate  the predicate to wrap, may not be null"
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,505, @return the predicate
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,506, @throws IllegalArgumentException if the predicate is null.
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,508,ublic static Predicate nullIsFalsePredicate(Predicate predicate){
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,509,f (predicate == null) {
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,510,"hrow new IllegalArgumentException(""The predicate must not be null"");"
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,512,eturn new NullIsFalsePredicate(predicate);
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,516," Gets a Predicate that returns true if the input object is null, otherwise"
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,517, it calls the specified Predicate. This allows null handling behaviour to
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,518, be added to Predicates that don't support nulls.
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,520," @param predicate  the predicate to wrap, may not be null"
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,521, @return the predicate
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,522, @throws IllegalArgumentException if the predicate is null.
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,524,ublic static Predicate nullIsTruePredicate(Predicate predicate){
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,525,f (predicate == null) {
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,526,"hrow new IllegalArgumentException(""The predicate must not be null"");"
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,528,eturn new NullIsTruePredicate(predicate);
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,532, Convert a collection to an array using the iterator.
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,534, @param predicates  the predicates to validate
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,535, @return predicate array
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,537,rivate static Predicate[] validate(Collection predicates) {
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,538,f (predicates == null) {
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,539,"hrow new IllegalArgumentException(""The predicate collection must not be null"");"
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,541,f (predicates.size() < 2) {
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,542,hrow new IllegalArgumentException(
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,543,"At least 2 predicates must be specified in the predicate collection, size was "" + predicates.size());"
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,545,/ convert to array like this to guarantee iterator() ordering
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,546,redicate[] preds = new Predicate[predicates.size()];
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,547,nt i = 0;
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,548,or (Iterator it = predicates.iterator(); it.hasNext();) {
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,549,reds[i] = (Predicate) it.next();
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,550,f (preds[i] == null) {
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,551,"hrow new IllegalArgumentException(""The predicate collection must not contain a null predicate, index "" + i + "" was null"");"
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,553,++;
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,555,eturn preds;
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,559, Validate method shared amongst predicate implementations.
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,561, @param predicates  the predicates to validate
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,562, @return predicate array (copy)
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,564,rivate static Predicate[] validate(Predicate[] predicates) {
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,565,f (predicates == null) {
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,566,"hrow new IllegalArgumentException(""The predicate array must not be null"");"
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,568,f (predicates.length < 2) {
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,569,hrow new IllegalArgumentException(
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,570,"At least 2 predicates must be specified in the predicate array, size was "" + predicates.length);"
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,572,redicate[] preds = new Predicate[predicates.length];
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,573,or (int i = 0; i < predicates.length; i++) {
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,574,f (predicates[i] == null) {
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,575,"hrow new IllegalArgumentException(""The predicate array must not contain a null predicate, index "" + i + "" was null"");"
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,577,reds[i] = predicates[i];
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,579,eturn preds;
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,582,/ ExceptionPredicate
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,586, ExceptionPredicate always throws an exception
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,588,"rivate static class ExceptionPredicate implements Predicate, Serializable {"
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,591, Constructor
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,593,rivate ExceptionPredicate() {
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,594,uper();
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,598, Always throw an exception
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,600,ublic boolean evaluate(Object object) {
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,601,"hrow new PredicateException(""ExceptionPredicate invoked"");"
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,605,/ ConstantPredicate
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,609, ConstantPredicate returns the same instance each time.
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,611,"rivate static class ConstantPredicate implements Predicate, Serializable {"
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,612,** The constant value to return each time */
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,613,rivate final boolean iConstant;
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,616, Constructor to store constant
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,618,rivate ConstantPredicate(boolean constant) {
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,619,uper();
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,620,Constant = constant;
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,624, Always return constant
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,626,ublic boolean evaluate(Object object) {
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,627,eturn iConstant;
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,631,/ AllPredicate
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,635, AllPredicate returns true if all predicates return true
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,637,"rivate static class AllPredicate implements Predicate, Serializable {"
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,638,** The array of predicates to call */
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,639,rivate final Predicate[] iPredicates;
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,642, Constructor
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,644,rivate AllPredicate(Predicate[] predicates) {
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,645,uper();
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,646,Predicates = predicates;
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,650, Return true if all predicates return true
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,652,ublic boolean evaluate(Object object) {
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,653,or (int i = 0; i < iPredicates.length; i++) {
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,654,f (iPredicates[i].evaluate(object) == false) {
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,655,eturn false;
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,658,eturn true;
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,662,/ AnyPredicate
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,666, AnyPredicate returns true if one of the predicates return true
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,668,"rivate static class AnyPredicate implements Predicate, Serializable {"
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,669,** The array of predicates to call */
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,670,rivate final Predicate[] iPredicates;
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,673, Constructor
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,675,rivate AnyPredicate(Predicate[] predicates) {
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,676,uper();
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,677,Predicates = predicates;
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,681, Return true if one of the predicates returns true
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,683,ublic boolean evaluate(Object object) {
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,684,or (int i = 0; i < iPredicates.length; i++) {
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,685,f (iPredicates[i].evaluate(object)) {
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,686,eturn true;
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,689,eturn false;
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,693,/ OnePredicate
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,697, OnePredicate returns true if only one of the predicates return true
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,699,"rivate static class OnePredicate implements Predicate, Serializable {"
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,700,** The array of predicates to call */
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,701,rivate final Predicate[] iPredicates;
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,704, Constructor
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,706,rivate OnePredicate(Predicate[] predicates) {
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,707,uper();
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,708,Predicates = predicates;
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,712, Return true if only one of the predicates returns true
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,714,ublic boolean evaluate(Object object) {
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,715,oolean match = false;
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,716,or (int i = 0; i < iPredicates.length; i++) {
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,717,f (iPredicates[i].evaluate(object)) {
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,718,f (match) {
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,719,eturn false;
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,721,atch = true;
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,724,eturn match;
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,728,/ NotPredicate
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,732, NotPredicate returns the opposite of the wrapped predicate
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,734,"rivate static class NotPredicate implements Predicate, Serializable {"
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,735,** The predicate to call */
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,736,rivate final Predicate iPredicate;
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,739, Constructor
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,741,rivate NotPredicate(Predicate predicate) {
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,742,uper();
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,743,Predicate = predicate;
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,747," Return true if the wrapped predicate returns false, and vice versa"
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,749,ublic boolean evaluate(Object object) {
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,750,eturn !iPredicate.evaluate(object);
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,754,/ InstanceofPredicate
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,758, InstanceofPredicate checks the type of an object
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,760,"rivate static class InstanceofPredicate implements Predicate, Serializable {"
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,761,** The type to check for */
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,762,rivate final Class iType;
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,765, Constructor
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,767,ublic InstanceofPredicate(Class type) {
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,768,uper();
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,769,Type = type;
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,773, Return true if the object is an instanceof the type of the predicate.
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,775,ublic boolean evaluate(Object object) {
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,776,eturn iType.isInstance(object);
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,780,/ EqualPredicate
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,784, EqualPredicate that checks if the object is a particular value by equals().
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,786,"rivate static class EqualPredicate implements Predicate, Serializable {"
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,787,** The object to compare to */
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,788,rivate final Object iValue;
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,791, Constructor
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,793,ublic EqualPredicate(Object value) {
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,794,uper();
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,795,Value = value;
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,799, Return true if the object is equals() to the value stored in the predicate.
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,801,ublic boolean evaluate(Object object) {
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,802,eturn iValue.equals(object);
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,806,/ IdentityPredicate
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,810, IdentityPredicate that checks if the object is a particular value by identity.
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,812,"rivate static class IdentityPredicate implements Predicate, Serializable {"
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,813,** The object to compare identity to */
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,814,rivate final Object iValue;
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,817, Constructor
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,819,ublic IdentityPredicate(Object value) {
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,820,uper();
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,821,Value = value;
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,825, Return true if the object is equals() to the value stored in the predicate.
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,827,ublic boolean evaluate(Object object) {
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,828,eturn iValue == object;
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,832,/ UniquePredicate
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,836, UniquePredicate returns true the first time an object is
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,837," encoutered, and false if the same object is received"
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,838, again using equals().
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,840,"rivate static class UniquePredicate implements Predicate, Serializable {"
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,841,** The set of previously seen objects */
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,842,rivate final Set iSet = new HashSet();
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,845, Constructor
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,847,ublic UniquePredicate() {
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,848,uper();
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,852," Return true the first time, and false subsequant times"
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,853," that an object is encountered, using equals()."
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,855,ublic boolean evaluate(Object object) {
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,856,eturn iSet.add(object);
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,860,/ TransformerPredicate
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,864, TransformerPredicate returns the result of the Transformer as a boolean.
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,866,"rivate static class TransformerPredicate implements Predicate, Serializable {"
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,867,** The transformer to call */
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,868,rivate final Transformer iTransformer;
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,871, Constructor
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,873,ublic TransformerPredicate(Transformer transformer) {
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,874,uper();
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,875,Transformer = transformer;
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,879, Return the boolean result of a Transformer
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,881,ublic boolean evaluate(Object object) {
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,882,bject result = null;
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,883,ry {
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,884,esult = iTransformer.transform(object);
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,886, catch (TransformerException ex) {
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,887,"hrow new PredicateException(""TransformerPredicate: "" + ex.getMessage(), ex);"
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,889,f (result instanceof Boolean == false) {
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,890,hrow new PredicateException(
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,891,"TransformerPredicate: Transformer must return an instanceof Boolean, it was a """
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,892," (result == null ? ""null object"" : result.getClass().getName()));"
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,894,eturn ((Boolean) result).booleanValue();
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,898,/ NullIsExceptionPredicate
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,902, NullIsExceptionPredicate returns an exception if null is passed in.
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,904,"rivate static class NullIsExceptionPredicate implements Predicate, Serializable {"
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,905,** The predicate to call */
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,906,rivate final Predicate iPredicate;
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,909, Constructor
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,911,rivate NullIsExceptionPredicate(Predicate predicate){
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,912,uper();
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,913,Predicate = predicate;
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,917, Return an exception if null
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,919,ublic boolean evaluate(Object object){
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,920,f (object == null) {
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,921,"hrow new PredicateException(""NullIsExceptionPredicate: Input Object must not be null"");"
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,923,eturn iPredicate.evaluate(object);
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,927,/ NullIsFalsePredicate
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,931, NullIsFalsePredicate returns false if null is passed in.
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,933,"rivate static class NullIsFalsePredicate implements Predicate, Serializable {"
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,934,** The predicate to call */
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,935,rivate final Predicate iPredicate;
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,938, Constructor
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,940,rivate NullIsFalsePredicate(Predicate predicate){
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,941,uper();
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,942,Predicate = predicate;
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,946, Return false if null
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,948,ublic boolean evaluate(Object object){
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,949,f (object == null) {
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,950,eturn false;
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,952,eturn iPredicate.evaluate(object);
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,956,/ NullIsTruePredicate
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,960, NullIsTruePredicate returns true if null is passed in.
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,962,"rivate static class NullIsTruePredicate implements Predicate, Serializable {"
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,963,** The predicate to call */
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,964,rivate final Predicate iPredicate;
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,967, Constructor
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,969,rivate NullIsTruePredicate(Predicate predicate){
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,970,uper();
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,971,Predicate = predicate;
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,975, Return true if null
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,977,ublic boolean evaluate(Object object){
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,978,f (object == null) {
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,979,eturn true;
False,src/java/org/apache/commons/lang/functor/PredicateUtils.java,src/java/org/apache/commons/lang/functor/PredicateUtils.java,981,eturn iPredicate.evaluate(object);
False,src/java/org/apache/commons/lang/functor/Transformer.java,src/java/org/apache/commons/lang/functor/Transformer.java,2," The Apache Software License, Version 1.1"
False,src/java/org/apache/commons/lang/functor/Transformer.java,src/java/org/apache/commons/lang/functor/Transformer.java,4, Copyright (c) 2002-2003 The Apache Software Foundation.  All rights
False,src/java/org/apache/commons/lang/functor/Transformer.java,src/java/org/apache/commons/lang/functor/Transformer.java,5, reserved.
False,src/java/org/apache/commons/lang/functor/Transformer.java,src/java/org/apache/commons/lang/functor/Transformer.java,7," Redistribution and use in source and binary forms, with or without"
False,src/java/org/apache/commons/lang/functor/Transformer.java,src/java/org/apache/commons/lang/functor/Transformer.java,8," modification, are permitted provided that the following conditions"
False,src/java/org/apache/commons/lang/functor/Transformer.java,src/java/org/apache/commons/lang/functor/Transformer.java,9, are met:
False,src/java/org/apache/commons/lang/functor/Transformer.java,src/java/org/apache/commons/lang/functor/Transformer.java,11, 1. Redistributions of source code must retain the above copyright
False,src/java/org/apache/commons/lang/functor/Transformer.java,src/java/org/apache/commons/lang/functor/Transformer.java,12,"    notice, this list of conditions and the following disclaimer."
False,src/java/org/apache/commons/lang/functor/Transformer.java,src/java/org/apache/commons/lang/functor/Transformer.java,14, 2. Redistributions in binary form must reproduce the above copyright
False,src/java/org/apache/commons/lang/functor/Transformer.java,src/java/org/apache/commons/lang/functor/Transformer.java,15,"    notice, this list of conditions and the following disclaimer in"
False,src/java/org/apache/commons/lang/functor/Transformer.java,src/java/org/apache/commons/lang/functor/Transformer.java,16,    the documentation and/or other materials provided with the
False,src/java/org/apache/commons/lang/functor/Transformer.java,src/java/org/apache/commons/lang/functor/Transformer.java,17,    distribution.
False,src/java/org/apache/commons/lang/functor/Transformer.java,src/java/org/apache/commons/lang/functor/Transformer.java,19," 3. The end-user documentation included with the redistribution, if"
False,src/java/org/apache/commons/lang/functor/Transformer.java,src/java/org/apache/commons/lang/functor/Transformer.java,20,"    any, must include the following acknowlegement:"
False,src/java/org/apache/commons/lang/functor/Transformer.java,src/java/org/apache/commons/lang/functor/Transformer.java,21,"       ""This product includes software developed by the"
False,src/java/org/apache/commons/lang/functor/Transformer.java,src/java/org/apache/commons/lang/functor/Transformer.java,22,"        Apache Software Foundation (http://www.apache.org/)."""
False,src/java/org/apache/commons/lang/functor/Transformer.java,src/java/org/apache/commons/lang/functor/Transformer.java,23,"    Alternately, this acknowlegement may appear in the software itself,"
False,src/java/org/apache/commons/lang/functor/Transformer.java,src/java/org/apache/commons/lang/functor/Transformer.java,24,    if and wherever such third-party acknowlegements normally appear.
False,src/java/org/apache/commons/lang/functor/Transformer.java,src/java/org/apache/commons/lang/functor/Transformer.java,26," 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
False,src/java/org/apache/commons/lang/functor/Transformer.java,src/java/org/apache/commons/lang/functor/Transformer.java,27,"    Foundation"" must not be used to endorse or promote products derived"
False,src/java/org/apache/commons/lang/functor/Transformer.java,src/java/org/apache/commons/lang/functor/Transformer.java,28,    from this software without prior written permission. For written
False,src/java/org/apache/commons/lang/functor/Transformer.java,src/java/org/apache/commons/lang/functor/Transformer.java,29,"    permission, please contact apache@apache.org."
False,src/java/org/apache/commons/lang/functor/Transformer.java,src/java/org/apache/commons/lang/functor/Transformer.java,31," 5. Products derived from this software may not be called ""Apache"""
False,src/java/org/apache/commons/lang/functor/Transformer.java,src/java/org/apache/commons/lang/functor/Transformer.java,32,"    nor may ""Apache"" appear in their names without prior written"
False,src/java/org/apache/commons/lang/functor/Transformer.java,src/java/org/apache/commons/lang/functor/Transformer.java,33,    permission of the Apache Software Foundation.
False,src/java/org/apache/commons/lang/functor/Transformer.java,src/java/org/apache/commons/lang/functor/Transformer.java,35, THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
False,src/java/org/apache/commons/lang/functor/Transformer.java,src/java/org/apache/commons/lang/functor/Transformer.java,36," WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
False,src/java/org/apache/commons/lang/functor/Transformer.java,src/java/org/apache/commons/lang/functor/Transformer.java,37, OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
False,src/java/org/apache/commons/lang/functor/Transformer.java,src/java/org/apache/commons/lang/functor/Transformer.java,38, DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
False,src/java/org/apache/commons/lang/functor/Transformer.java,src/java/org/apache/commons/lang/functor/Transformer.java,39," ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
False,src/java/org/apache/commons/lang/functor/Transformer.java,src/java/org/apache/commons/lang/functor/Transformer.java,40," SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
False,src/java/org/apache/commons/lang/functor/Transformer.java,src/java/org/apache/commons/lang/functor/Transformer.java,41," LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
False,src/java/org/apache/commons/lang/functor/Transformer.java,src/java/org/apache/commons/lang/functor/Transformer.java,42," USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
False,src/java/org/apache/commons/lang/functor/Transformer.java,src/java/org/apache/commons/lang/functor/Transformer.java,43," ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
False,src/java/org/apache/commons/lang/functor/Transformer.java,src/java/org/apache/commons/lang/functor/Transformer.java,44, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
False,src/java/org/apache/commons/lang/functor/Transformer.java,src/java/org/apache/commons/lang/functor/Transformer.java,45," OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
False,src/java/org/apache/commons/lang/functor/Transformer.java,src/java/org/apache/commons/lang/functor/Transformer.java,46, SUCH DAMAGE.
False,src/java/org/apache/commons/lang/functor/Transformer.java,src/java/org/apache/commons/lang/functor/Transformer.java,49, This software consists of voluntary contributions made by many
False,src/java/org/apache/commons/lang/functor/Transformer.java,src/java/org/apache/commons/lang/functor/Transformer.java,50, individuals on behalf of the Apache Software Foundation.  For more
False,src/java/org/apache/commons/lang/functor/Transformer.java,src/java/org/apache/commons/lang/functor/Transformer.java,51," information on the Apache Software Foundation, please see"
False,src/java/org/apache/commons/lang/functor/Transformer.java,src/java/org/apache/commons/lang/functor/Transformer.java,52, <http://www.apache.org/>.
False,src/java/org/apache/commons/lang/functor/Transformer.java,src/java/org/apache/commons/lang/functor/Transformer.java,54,ackage org.apache.commons.lang.functor;
False,src/java/org/apache/commons/lang/functor/Transformer.java,src/java/org/apache/commons/lang/functor/Transformer.java,57, <code>Transformer</code> defines an interface implemented by classes that
False,src/java/org/apache/commons/lang/functor/Transformer.java,src/java/org/apache/commons/lang/functor/Transformer.java,58, transform one object into another. The original object is left unchanged.
False,src/java/org/apache/commons/lang/functor/Transformer.java,src/java/org/apache/commons/lang/functor/Transformer.java,59," Transformers are typically used for type conversions, or extracting data"
False,src/java/org/apache/commons/lang/functor/Transformer.java,src/java/org/apache/commons/lang/functor/Transformer.java,60, from an object.
False,src/java/org/apache/commons/lang/functor/Transformer.java,src/java/org/apache/commons/lang/functor/Transformer.java,62," @author <a href=""mailto:jstrachan@apache.org"">James Strachan</a>"
False,src/java/org/apache/commons/lang/functor/Transformer.java,src/java/org/apache/commons/lang/functor/Transformer.java,63," @author <a href=""mailto:scolebourne@joda.org"">Stephen Colebourne</a>"
False,src/java/org/apache/commons/lang/functor/Transformer.java,src/java/org/apache/commons/lang/functor/Transformer.java,64," @version $Id: Transformer.java,v 1.2 2003/03/23 17:50:02 scolebourne Exp $"
False,src/java/org/apache/commons/lang/functor/Transformer.java,src/java/org/apache/commons/lang/functor/Transformer.java,66,ublic interface Transformer {
False,src/java/org/apache/commons/lang/functor/Transformer.java,src/java/org/apache/commons/lang/functor/Transformer.java,69, Transforms the input object (leaving it unchanged) into some output object.
False,src/java/org/apache/commons/lang/functor/Transformer.java,src/java/org/apache/commons/lang/functor/Transformer.java,71, @param input  the object to be transformed
False,src/java/org/apache/commons/lang/functor/Transformer.java,src/java/org/apache/commons/lang/functor/Transformer.java,72, @return a transformed object
False,src/java/org/apache/commons/lang/functor/Transformer.java,src/java/org/apache/commons/lang/functor/Transformer.java,73, @throws TransformException (runtime) if the transform cannot be completed
False,src/java/org/apache/commons/lang/functor/Transformer.java,src/java/org/apache/commons/lang/functor/Transformer.java,75,ublic Object transform(Object input);
False,src/java/org/apache/commons/lang/functor/TransformerException.java,src/java/org/apache/commons/lang/functor/TransformerException.java,2," The Apache Software License, Version 1.1"
False,src/java/org/apache/commons/lang/functor/TransformerException.java,src/java/org/apache/commons/lang/functor/TransformerException.java,4, Copyright (c) 2002-2003 The Apache Software Foundation.  All rights
False,src/java/org/apache/commons/lang/functor/TransformerException.java,src/java/org/apache/commons/lang/functor/TransformerException.java,5, reserved.
False,src/java/org/apache/commons/lang/functor/TransformerException.java,src/java/org/apache/commons/lang/functor/TransformerException.java,7," Redistribution and use in source and binary forms, with or without"
False,src/java/org/apache/commons/lang/functor/TransformerException.java,src/java/org/apache/commons/lang/functor/TransformerException.java,8," modification, are permitted provided that the following conditions"
False,src/java/org/apache/commons/lang/functor/TransformerException.java,src/java/org/apache/commons/lang/functor/TransformerException.java,9, are met:
False,src/java/org/apache/commons/lang/functor/TransformerException.java,src/java/org/apache/commons/lang/functor/TransformerException.java,11, 1. Redistributions of source code must retain the above copyright
False,src/java/org/apache/commons/lang/functor/TransformerException.java,src/java/org/apache/commons/lang/functor/TransformerException.java,12,"    notice, this list of conditions and the following disclaimer."
False,src/java/org/apache/commons/lang/functor/TransformerException.java,src/java/org/apache/commons/lang/functor/TransformerException.java,14, 2. Redistributions in binary form must reproduce the above copyright
False,src/java/org/apache/commons/lang/functor/TransformerException.java,src/java/org/apache/commons/lang/functor/TransformerException.java,15,"    notice, this list of conditions and the following disclaimer in"
False,src/java/org/apache/commons/lang/functor/TransformerException.java,src/java/org/apache/commons/lang/functor/TransformerException.java,16,    the documentation and/or other materials provided with the
False,src/java/org/apache/commons/lang/functor/TransformerException.java,src/java/org/apache/commons/lang/functor/TransformerException.java,17,    distribution.
False,src/java/org/apache/commons/lang/functor/TransformerException.java,src/java/org/apache/commons/lang/functor/TransformerException.java,19," 3. The end-user documentation included with the redistribution, if"
False,src/java/org/apache/commons/lang/functor/TransformerException.java,src/java/org/apache/commons/lang/functor/TransformerException.java,20,"    any, must include the following acknowlegement:"
False,src/java/org/apache/commons/lang/functor/TransformerException.java,src/java/org/apache/commons/lang/functor/TransformerException.java,21,"       ""This product includes software developed by the"
False,src/java/org/apache/commons/lang/functor/TransformerException.java,src/java/org/apache/commons/lang/functor/TransformerException.java,22,"        Apache Software Foundation (http://www.apache.org/)."""
False,src/java/org/apache/commons/lang/functor/TransformerException.java,src/java/org/apache/commons/lang/functor/TransformerException.java,23,"    Alternately, this acknowlegement may appear in the software itself,"
False,src/java/org/apache/commons/lang/functor/TransformerException.java,src/java/org/apache/commons/lang/functor/TransformerException.java,24,    if and wherever such third-party acknowlegements normally appear.
False,src/java/org/apache/commons/lang/functor/TransformerException.java,src/java/org/apache/commons/lang/functor/TransformerException.java,26," 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
False,src/java/org/apache/commons/lang/functor/TransformerException.java,src/java/org/apache/commons/lang/functor/TransformerException.java,27,"    Foundation"" must not be used to endorse or promote products derived"
False,src/java/org/apache/commons/lang/functor/TransformerException.java,src/java/org/apache/commons/lang/functor/TransformerException.java,28,    from this software without prior written permission. For written
False,src/java/org/apache/commons/lang/functor/TransformerException.java,src/java/org/apache/commons/lang/functor/TransformerException.java,29,"    permission, please contact apache@apache.org."
False,src/java/org/apache/commons/lang/functor/TransformerException.java,src/java/org/apache/commons/lang/functor/TransformerException.java,31," 5. Products derived from this software may not be called ""Apache"""
False,src/java/org/apache/commons/lang/functor/TransformerException.java,src/java/org/apache/commons/lang/functor/TransformerException.java,32,"    nor may ""Apache"" appear in their names without prior written"
False,src/java/org/apache/commons/lang/functor/TransformerException.java,src/java/org/apache/commons/lang/functor/TransformerException.java,33,    permission of the Apache Software Foundation.
False,src/java/org/apache/commons/lang/functor/TransformerException.java,src/java/org/apache/commons/lang/functor/TransformerException.java,35, THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
False,src/java/org/apache/commons/lang/functor/TransformerException.java,src/java/org/apache/commons/lang/functor/TransformerException.java,36," WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
False,src/java/org/apache/commons/lang/functor/TransformerException.java,src/java/org/apache/commons/lang/functor/TransformerException.java,37, OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
False,src/java/org/apache/commons/lang/functor/TransformerException.java,src/java/org/apache/commons/lang/functor/TransformerException.java,38, DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
False,src/java/org/apache/commons/lang/functor/TransformerException.java,src/java/org/apache/commons/lang/functor/TransformerException.java,39," ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
False,src/java/org/apache/commons/lang/functor/TransformerException.java,src/java/org/apache/commons/lang/functor/TransformerException.java,40," SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
False,src/java/org/apache/commons/lang/functor/TransformerException.java,src/java/org/apache/commons/lang/functor/TransformerException.java,41," LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
False,src/java/org/apache/commons/lang/functor/TransformerException.java,src/java/org/apache/commons/lang/functor/TransformerException.java,42," USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
False,src/java/org/apache/commons/lang/functor/TransformerException.java,src/java/org/apache/commons/lang/functor/TransformerException.java,43," ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
False,src/java/org/apache/commons/lang/functor/TransformerException.java,src/java/org/apache/commons/lang/functor/TransformerException.java,44, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
False,src/java/org/apache/commons/lang/functor/TransformerException.java,src/java/org/apache/commons/lang/functor/TransformerException.java,45," OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
False,src/java/org/apache/commons/lang/functor/TransformerException.java,src/java/org/apache/commons/lang/functor/TransformerException.java,46, SUCH DAMAGE.
False,src/java/org/apache/commons/lang/functor/TransformerException.java,src/java/org/apache/commons/lang/functor/TransformerException.java,49, This software consists of voluntary contributions made by many
False,src/java/org/apache/commons/lang/functor/TransformerException.java,src/java/org/apache/commons/lang/functor/TransformerException.java,50, individuals on behalf of the Apache Software Foundation.  For more
False,src/java/org/apache/commons/lang/functor/TransformerException.java,src/java/org/apache/commons/lang/functor/TransformerException.java,51," information on the Apache Software Foundation, please see"
False,src/java/org/apache/commons/lang/functor/TransformerException.java,src/java/org/apache/commons/lang/functor/TransformerException.java,52, <http://www.apache.org/>.
False,src/java/org/apache/commons/lang/functor/TransformerException.java,src/java/org/apache/commons/lang/functor/TransformerException.java,54,ackage org.apache.commons.lang.functor;
False,src/java/org/apache/commons/lang/functor/TransformerException.java,src/java/org/apache/commons/lang/functor/TransformerException.java,56,mport org.apache.commons.lang.exception.NestableRuntimeException;
False,src/java/org/apache/commons/lang/functor/TransformerException.java,src/java/org/apache/commons/lang/functor/TransformerException.java,58, Exception thrown when the a Transformer encounters a problem.
False,src/java/org/apache/commons/lang/functor/TransformerException.java,src/java/org/apache/commons/lang/functor/TransformerException.java,59," If required, a root cause error can be wrapped within this one."
False,src/java/org/apache/commons/lang/functor/TransformerException.java,src/java/org/apache/commons/lang/functor/TransformerException.java,61," @author <a href=""mailto:scolebourne@joda.org"">Stephen Colebourne</a>"
False,src/java/org/apache/commons/lang/functor/TransformerException.java,src/java/org/apache/commons/lang/functor/TransformerException.java,62," @version $Id: TransformerException.java,v 1.2 2003/03/23 17:50:02 scolebourne Exp $"
False,src/java/org/apache/commons/lang/functor/TransformerException.java,src/java/org/apache/commons/lang/functor/TransformerException.java,64,ublic class TransformerException extends NestableRuntimeException {
False,src/java/org/apache/commons/lang/functor/TransformerException.java,src/java/org/apache/commons/lang/functor/TransformerException.java,67, Constructs a new <code>TransformerException</code> without specified
False,src/java/org/apache/commons/lang/functor/TransformerException.java,src/java/org/apache/commons/lang/functor/TransformerException.java,68, detail message.
False,src/java/org/apache/commons/lang/functor/TransformerException.java,src/java/org/apache/commons/lang/functor/TransformerException.java,70,ublic TransformerException() {
False,src/java/org/apache/commons/lang/functor/TransformerException.java,src/java/org/apache/commons/lang/functor/TransformerException.java,71,uper();
False,src/java/org/apache/commons/lang/functor/TransformerException.java,src/java/org/apache/commons/lang/functor/TransformerException.java,75, Constructs a new <code>TransformerException</code> with specified
False,src/java/org/apache/commons/lang/functor/TransformerException.java,src/java/org/apache/commons/lang/functor/TransformerException.java,76, detail message.
False,src/java/org/apache/commons/lang/functor/TransformerException.java,src/java/org/apache/commons/lang/functor/TransformerException.java,78, @param msg  the error message.
False,src/java/org/apache/commons/lang/functor/TransformerException.java,src/java/org/apache/commons/lang/functor/TransformerException.java,80,ublic TransformerException(String msg) {
False,src/java/org/apache/commons/lang/functor/TransformerException.java,src/java/org/apache/commons/lang/functor/TransformerException.java,81,uper(msg);
False,src/java/org/apache/commons/lang/functor/TransformerException.java,src/java/org/apache/commons/lang/functor/TransformerException.java,85, Constructs a new <code>TransformerException</code> with specified
False,src/java/org/apache/commons/lang/functor/TransformerException.java,src/java/org/apache/commons/lang/functor/TransformerException.java,86, nested <code>Throwable</code> root cause.
False,src/java/org/apache/commons/lang/functor/TransformerException.java,src/java/org/apache/commons/lang/functor/TransformerException.java,88, @param rootCause  the exception or error that caused this exception
False,src/java/org/apache/commons/lang/functor/TransformerException.java,src/java/org/apache/commons/lang/functor/TransformerException.java,89,                   to be thrown.
False,src/java/org/apache/commons/lang/functor/TransformerException.java,src/java/org/apache/commons/lang/functor/TransformerException.java,91,ublic TransformerException(Throwable rootCause) {
False,src/java/org/apache/commons/lang/functor/TransformerException.java,src/java/org/apache/commons/lang/functor/TransformerException.java,92,uper(rootCause);
False,src/java/org/apache/commons/lang/functor/TransformerException.java,src/java/org/apache/commons/lang/functor/TransformerException.java,96, Constructs a new <code>TransformerException</code> with specified
False,src/java/org/apache/commons/lang/functor/TransformerException.java,src/java/org/apache/commons/lang/functor/TransformerException.java,97, detail message and nested <code>Throwable</code> root cause.
False,src/java/org/apache/commons/lang/functor/TransformerException.java,src/java/org/apache/commons/lang/functor/TransformerException.java,99, @param msg        the error message.
False,src/java/org/apache/commons/lang/functor/TransformerException.java,src/java/org/apache/commons/lang/functor/TransformerException.java,100, @param rootCause  the exception or error that caused this exception
False,src/java/org/apache/commons/lang/functor/TransformerException.java,src/java/org/apache/commons/lang/functor/TransformerException.java,101,                   to be thrown.
False,src/java/org/apache/commons/lang/functor/TransformerException.java,src/java/org/apache/commons/lang/functor/TransformerException.java,103,"ublic TransformerException(String msg, Throwable rootCause) {"
False,src/java/org/apache/commons/lang/functor/TransformerException.java,src/java/org/apache/commons/lang/functor/TransformerException.java,104,"uper(msg, rootCause);"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,2," The Apache Software License, Version 1.1"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,4, Copyright (c) 2002-2003 The Apache Software Foundation.  All rights
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,5, reserved.
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,7," Redistribution and use in source and binary forms, with or without"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,8," modification, are permitted provided that the following conditions"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,9, are met:
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,11, 1. Redistributions of source code must retain the above copyright
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,12,"    notice, this list of conditions and the following disclaimer."
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,14, 2. Redistributions in binary form must reproduce the above copyright
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,15,"    notice, this list of conditions and the following disclaimer in"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,16,    the documentation and/or other materials provided with the
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,17,    distribution.
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,19," 3. The end-user documentation included with the redistribution, if"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,20,"    any, must include the following acknowlegement:"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,21,"       ""This product includes software developed by the"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,22,"        Apache Software Foundation (http://www.apache.org/)."""
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,23,"    Alternately, this acknowlegement may appear in the software itself,"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,24,    if and wherever such third-party acknowlegements normally appear.
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,26," 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,27,"    Foundation"" must not be used to endorse or promote products derived"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,28,    from this software without prior written permission. For written
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,29,"    permission, please contact apache@apache.org."
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,31," 5. Products derived from this software may not be called ""Apache"""
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,32,"    nor may ""Apache"" appear in their names without prior written"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,33,    permission of the Apache Software Foundation.
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,35, THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,36," WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,37, OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,38, DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,39," ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,40," SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,41," LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,42," USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,43," ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,44, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,45," OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,46, SUCH DAMAGE.
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,49, This software consists of voluntary contributions made by many
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,50, individuals on behalf of the Apache Software Foundation.  For more
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,51," information on the Apache Software Foundation, please see"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,52, <http://www.apache.org/>.
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,54,ackage org.apache.commons.lang.functor;
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,56,mport java.io.Serializable;
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,57,mport java.lang.reflect.InvocationTargetException;
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,58,mport java.lang.reflect.Method;
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,59,mport java.util.Collection;
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,60,mport java.util.Iterator;
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,61,mport java.util.Map;
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,63, <code>TransformerUtils</code> provides reference implementations and
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,64, utilities for the Transformer functor interface. The supplied transformers are:
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,65, <ul>
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,66, <li>Invoker - returns the result of a method call on the input object
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,67, <li>Clone - returns a clone of the input object
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,68, <li>Constant - always returns the same object
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,69, <li>Executor - performs a Executor and returns the input object
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,70, <li>Predicate - returns the result of the predicate as a Boolean
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,71, <li>Factory - returns a new object from a factory
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,72, <li>Chained - chains two or more transformers together
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,73, <li>Switch - calls one transformer based on one or more predicates
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,74, <li>SwitchMap - calls one transformer looked up from a Map
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,75, <li>Instantiate - the Class input object is instantiated
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,76, <li>Map - returns an object from a supplied Map
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,77, <li>Null - always returns null
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,78," <li>NOP - returns the input object, which should be immutable"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,79, <li>Exception - always throws an exception
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,80, </ul>
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,81, All the supplied transformers are Serializable.
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,83," @author <a href=""mailto:scolebourne@joda.org"">Stephen Colebourne</a>"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,84," @version $Id: TransformerUtils.java,v 1.4 2003/03/23 17:50:02 scolebourne Exp $"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,86,ublic class TransformerUtils {
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,89, A transformer that always throws an exception
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,91,rivate static final Transformer EXCEPTION_TRANSFORMER = new ExceptionTransformer();
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,93, A transformer that always returns null
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,95,rivate static final Transformer NULL_TRANSFORMER = new ConstantTransformer(null);
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,97, A transformer that returns the input object
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,99,rivate static final Transformer NOP_TRANSFORMER = new NOPTransformer();
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,101, A transformer that clones the input object
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,103,rivate static final Transformer CLONE_TRANSFORMER = new CloneTransformer();
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,105, A transformer that creates an object from a Class
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,107,"rivate static final Transformer INSTANTIATE_TRANSFORMER = new InstantiateTransformer(null, null);"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,110, Restrictive constructor
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,112,rotected TransformerUtils() {
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,113,uper();
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,117, Gets a transformer that always throws an exception.
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,118, This could be useful during testing as a placeholder.
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,120, @return the transformer
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,122,ublic static Transformer exceptionTransformer() {
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,123,eturn EXCEPTION_TRANSFORMER;
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,127, Gets a transformer that always returns null.
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,129, @return the transformer
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,131,ublic static Transformer nullTransformer() {
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,132,eturn NULL_TRANSFORMER;
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,136, Gets a transformer that returns the input object.
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,137, The input object should be immutable to maintain the
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,138, contract of Transformer (although this is not checked).
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,140, @return the transformer
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,142,ublic static Transformer nopTransformer() {
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,143,eturn NOP_TRANSFORMER;
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,147, Gets a transformer that returns a clone of the input
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,148, object. The input object will be cloned using one of these
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,149, techniques (in order):
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,150, <ul>
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,151, <li>public clone method
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,152, <li>public copy constructor
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,153, <li>serialization clone
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,154, <ul>
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,156, @return the transformer
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,158,ublic static Transformer cloneTransformer() {
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,159,eturn CLONE_TRANSFORMER;
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,163, Creates a Transformer that will return the same object each time the
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,164, transformer is used.
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,166, @param constantToReturn  the constant object to return each time in the transformer
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,167, @return the transformer.
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,169,ublic static Transformer constantTransformer(Object constantToReturn) {
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,170,eturn new ConstantTransformer(constantToReturn);
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,174, Creates a Transformer that calls a Executor each time the transformer is used.
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,175, The transformer returns the input object.
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,177, @param command  the command to run each time in the transformer
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,178, @return the transformer.
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,180,ublic static Transformer asTransformer(Executor executor) {
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,181,f (executor == null) {
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,182,"hrow new IllegalArgumentException(""The executor must not be null"");"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,184,eturn new ExecutorTransformer(executor);
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,188, Creates a Transformer that calls a Predicate each time the transformer is used.
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,189, The transformer will return either Boolean.TRUE or Boolean.FALSE.
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,191, @param predicate  the predicate to run each time in the transformer
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,192, @return the transformer.
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,194,ublic static Transformer asTransformer(Predicate predicate) {
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,195,f (predicate == null) {
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,196,"hrow new IllegalArgumentException(""The predicate must not be null"");"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,198,eturn new PredicateTransformer(predicate);
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,202, Creates a Transformer that calls a Factory each time the transformer is used.
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,203, The transformer will return the value returned by the factory.
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,205, @param factory  the factory to run each time in the transformer
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,206, @return the transformer.
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,208,ublic static Transformer asTransformer(Factory factory) {
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,209,f (factory == null) {
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,210,"hrow new IllegalArgumentException(""The factory must not be null"");"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,212,eturn new FactoryTransformer(factory);
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,216," Create a new Transformer that calls two transformers, passing the result of"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,217, the first into the second.
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,219, @param transformer1  the first transformer
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,220, @param transformer2  the second transformer
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,221, @return the transformer
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,222, @throws IllegalArgumentException if either transformer is null
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,224,"ublic static Transformer chainedTransformer(Transformer transformer1, Transformer transformer2) {"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,225,"ransformer[] trs = new Transformer[] {transformer1, transformer2};"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,226,alidate(trs);
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,227,eturn new ChainedTransformer(trs);
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,231," Create a new Transformer that calls each transformer in turn, passing the"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,232, result into the next transformer.
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,234, @param transformers  an array of transformers to chain
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,235, @return the transformer
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,236, @throws IllegalArgumentException if the transformers array is null
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,237, @throws IllegalArgumentException if the transformers array has 0 elements
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,238, @throws IllegalArgumentException if any transformer in the array is null
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,240,ublic static Transformer chainedTransformer(Transformer[] transformers) {
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,241,ransformer[] trs = copy(transformers);
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,242,alidate(trs);
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,243,eturn new ChainedTransformer(trs);
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,247," Create a new Transformer that calls each transformer in turn, passing the"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,248, result into the next transformer. The ordering is that of the iterator()
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,249, method on the collection.
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,251, @param transformers  a collection of transformers to chain
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,252, @return the transformer
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,253, @throws IllegalArgumentException if the transformers collection is null
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,254, @throws IllegalArgumentException if the transformers collection is empty
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,255, @throws IllegalArgumentException if any transformer in the collection is null
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,257,ublic static Transformer chainedTransformer(Collection transformers) {
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,258,ransformer[] trs = null;
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,259,f (transformers == null) {
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,260,"hrow new IllegalArgumentException(""The transformer collection must not be null"");"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,262,/ convert to array like this to guarantee iterator() ordering
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,263,rs = new Transformer[transformers.size()];
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,264,nt i = 0;
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,265,or (Iterator it = transformers.iterator(); it.hasNext();) {
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,266,rs[i++] = (Transformer) it.next();
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,268,alidate(trs);
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,269,eturn new ChainedTransformer(trs);
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,273, Create a new Transformer that calls one of two transformers depending
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,274, on the specified predicate.
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,276, @param predicate  the predicate to switch on
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,277, @param trueTransformer  the transformer called if the predicate is true
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,278, @param falseTransformer  the transformer called if the predicate is false
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,279, @return the transformer
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,280, @throws IllegalArgumentException if the predicate is null
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,281, @throws IllegalArgumentException if either transformer is null
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,283,"ublic static Transformer switchTransformer(Predicate predicate, Transformer trueTransformer, Transformer falseTransformer) {"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,284,"eturn switchTransformerInternal(new Predicate[] { predicate }, new Transformer[] { trueTransformer }, falseTransformer);"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,288, Create a new Transformer that calls one of the transformers depending
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,289, on the predicates. The transformer at array location 0 is called if the
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,290, predicate at array location 0 returned true. Each predicate is evaluated
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,291," until one returns true. If no predicates evaluate to true, null is returned."
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,293, @param predicates  an array of predicates to check
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,294, @param transformers  an array of transformers to call
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,295, @return the transformer
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,296, @throws IllegalArgumentException if the either array is null
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,297, @throws IllegalArgumentException if the either array has 0 elements
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,298, @throws IllegalArgumentException if any element in the arrays is null
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,299, @throws IllegalArgumentException if the arrays are different sizes
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,301,"ublic static Transformer switchTransformer(Predicate[] predicates, Transformer[] transformers) {"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,302,"eturn switchTransformerInternal(copy(predicates), copy(transformers), null);"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,306, Create a new Transformer that calls one of the transformers depending
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,307, on the predicates. The transformer at array location 0 is called if the
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,308, predicate at array location 0 returned true. Each predicate is evaluated
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,309," until one returns true. If no predicates evaluate to true, the default"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,310, transformer is called.
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,312, @param predicates  an array of predicates to check
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,313, @param transformers  an array of transformers to call
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,314, @param defaultTransformer  the default to call if no predicate matches
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,315, @return the transformer
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,316, @throws IllegalArgumentException if the either array is null
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,317, @throws IllegalArgumentException if the either array has 0 elements
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,318, @throws IllegalArgumentException if any element in the arrays is null
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,319, @throws IllegalArgumentException if the arrays are different sizes
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,321,"ublic static Transformer switchTransformer(Predicate[] predicates, Transformer[] transformers, Transformer defaultTransformer) {"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,322,"eturn switchTransformerInternal(copy(predicates), copy(transformers), defaultTransformer);"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,326, Create a new Transformer that calls one of the transformers depending
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,327, on the predicates.
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,328, <p>
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,329, The Map consists of Predicate keys and Transformer values. A transformer
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,330, is called if its matching predicate returns true. Each predicate is evaluated
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,331," until one returns true. If no predicates evaluate to true, the default"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,332, transformer is called. The default transformer is set in the map with a
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,333," null key. If no default transformer is set, null will be returned in a default"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,334, case. The ordering is that of the iterator() method on the entryset collection
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,335, of the map.
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,337, @param predicatesAndTransformers  a map of predicates to transformers
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,338, @return the transformer
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,339, @throws IllegalArgumentException if the map is null
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,340, @throws IllegalArgumentException if the map is empty
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,341, @throws IllegalArgumentException if any transformer in the map is null
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,342, @throws ClassCastException  if the map elements are of the wrong type
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,344,ublic static Transformer switchTransformer(Map predicatesAndTransformers) {
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,345,ransformer[] trs = null;
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,346,redicate[] preds = null;
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,347,f (predicatesAndTransformers == null) {
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,348,"hrow new IllegalArgumentException(""The predicate and transformer map must not be null"");"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,350,/ convert to array like this to guarantee iterator() ordering
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,351,ransformer def = (Transformer) predicatesAndTransformers.remove(null);
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,352,nt size = predicatesAndTransformers.size();
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,353,rs = new Transformer[size];
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,354,reds = new Predicate[size];
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,355,nt i = 0;
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,356,or (Iterator it = predicatesAndTransformers.entrySet().iterator(); it.hasNext();) {
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,357,ap.Entry entry = (Map.Entry) it.next();
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,358,reds[i] = (Predicate) entry.getKey();
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,359,rs[i] = (Transformer) entry.getValue();
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,360,++;
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,362,"eturn switchTransformerInternal(preds, trs, def);"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,366, Validate input and create transformer
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,368,"rivate static Transformer switchTransformerInternal(Predicate[] predicates, Transformer[] transformers, Transformer defaultTransformer) {"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,369,alidate(predicates);
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,370,alidate(transformers);
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,371,f (predicates.length != transformers.length) {
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,372,"hrow new IllegalArgumentException(""The predicate and transformer arrays must be the same size"");"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,374,f (defaultTransformer == null) {
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,375,efaultTransformer = nullTransformer();
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,377,"eturn new SwitchTransformer(predicates, transformers, defaultTransformer);"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,381, Create a new Transformer that uses the input object as a key to find the
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,382, transformer to call.
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,383, <p>
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,384, The Map consists of object keys and Transformer values. A transformer
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,385," is called if the input object equals the key. If there is no match, the"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,386, default transformer is called. The default transformer is set in the map
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,387," using a null key. If no default is set, null will be returned in a default case."
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,389, @param objectsAndTransformers  a map of objects to transformers
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,390, @return the transformer
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,391, @throws IllegalArgumentException if the map is null
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,392, @throws IllegalArgumentException if the map is empty
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,393, @throws IllegalArgumentException if any transformer in the map is null
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,395,ublic static Transformer switchMapTransformer(Map objectsAndTransformers) {
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,396,ransformer[] trs = null;
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,397,redicate[] preds = null;
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,398,f (objectsAndTransformers == null) {
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,399,"hrow new IllegalArgumentException(""The obejct and transformer map must not be null"");"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,401,ransformer def = (Transformer) objectsAndTransformers.remove(null);
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,402,nt size = objectsAndTransformers.size();
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,403,rs = new Transformer[size];
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,404,reds = new Predicate[size];
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,405,nt i = 0;
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,406,or (Iterator it = objectsAndTransformers.entrySet().iterator(); it.hasNext();) {
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,407,ap.Entry entry = (Map.Entry) it.next();
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,408,reds[i] = PredicateUtils.equalPredicate(entry.getKey());
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,409,rs[i] = (Transformer) entry.getValue();
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,410,++;
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,412,"eturn switchTransformer(preds, trs, def);"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,416, Gets a Transformer that expects an input Class object that it will instantiate.
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,418, @return the transformer
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,420,ublic static Transformer instantiateTransformer() {
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,421,eturn INSTANTIATE_TRANSFORMER;
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,425, Creates a Transformer that expects an input Class object that it will
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,426, instantiate. The constructor used is determined by the arguments specified
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,427, to this method.
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,429," @param paramTypes  parameter types for the constructor, can be null"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,430," @param args  the arguments to pass to the constructor, can be null"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,431, @return the transformer
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,432, @throws IllegalArgumentException if the paramTypes and args don't match
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,434,"ublic static Transformer instantiateTransformer(Class[] paramTypes, Object[] args) {"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,435,"eturn new InstantiateTransformer(paramTypes, args);"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,439, Creates a Transformer that uses the passed in Map to transform the input
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,440, object (as a simple lookup).
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,442, @param map  the map to use to transform the objects
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,443, @return the transformer
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,444, @throws IllegalArgumentException if the map is null
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,446,ublic static Transformer mapTransformer(Map map) {
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,447,f (map == null) {
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,448,"hrow new IllegalArgumentException(""The map must not be null"");"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,450,eturn new MapTransformer(map);
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,454, Gets a Transformer that invokes a method on the input object.
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,455," The method must have no parameters. If the input object is null,"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,456, null is returned.
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,457, <p>
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,458," For example, <code>TransformerUtils.invokerTransformer(""getName"");</code>"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,459, will call the <code>getName/code> method on the input object to
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,460, determine the transformer result.
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,462," @param methodName  the method name to call on the input object, may not be null"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,463, @return the transformer
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,464, @throws IllegalArgumentException if the methodName is null.
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,466,ublic static Transformer invokerTransformer(String methodName){
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,467,"eturn new InvokerTransformer(methodName, null, null);"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,471, Gets a Transformer that invokes a method on the input object.
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,472," The method parameters are specified. If the input object is null,"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,473, null is returned.
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,475, @param methodName  the name of the method
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,476, @param paramTypes  the parameter types
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,477, @param args  the arguments
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,478, @return the transformer
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,479, @throws IllegalArgumentException if the method name is null
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,480, @throws IllegalArgumentException if the paramTypes and args don't match
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,482,"ublic static Transformer invokerTransformer(String methodName, Class[] paramTypes, Object[] args){"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,483,"eturn new InvokerTransformer(methodName, paramTypes, args);"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,487, Copy method
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,489, @param predicates  the predicates to copy
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,491,rivate static Predicate[] copy(Predicate[] predicates) {
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,492,f (predicates == null) {
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,493,eturn null;
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,495,eturn (Predicate[]) predicates.clone();
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,499, Validate method
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,501, @param predicates  the predicates to validate
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,503,rivate static void validate(Predicate[] predicates) {
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,504,f (predicates == null) {
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,505,"hrow new IllegalArgumentException(""The predicate array must not be null"");"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,507,f (predicates.length < 1) {
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,508,hrow new IllegalArgumentException(
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,509,"At least 1 predicate must be specified in the predicate array, size was "" + predicates.length);"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,511,or (int i = 0; i < predicates.length; i++) {
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,512,f (predicates[i] == null) {
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,513,hrow new IllegalArgumentException(
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,514,"The predicate array must not contain a null predicate, index "" + i + "" was null"");"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,520, Copy method
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,522, @param transformers  the transformers to copy
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,524,rivate static Transformer[] copy(Transformer[] transformers) {
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,525,f (transformers == null) {
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,526,eturn null;
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,528,eturn (Transformer[]) transformers.clone();
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,532, Validate method
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,534, @param transformers  the transformers to validate
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,536,rivate static void validate(Transformer[] transformers) {
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,537,f (transformers == null) {
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,538,"hrow new IllegalArgumentException(""The transformer array must not be null"");"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,540,f (transformers.length < 1) {
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,541,hrow new IllegalArgumentException(
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,542,"At least 1 transformer must be specified in the transformer array, size was "" + transformers.length);"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,544,or (int i = 0; i < transformers.length; i++) {
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,545,f (transformers[i] == null) {
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,546,hrow new IllegalArgumentException(
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,547,"The transformer array must not contain a null transformer, index "" + i + "" was null"");"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,552,/ ExceptionTransformer
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,556, ExceptionTransformer always throws an exception.
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,558,"rivate static class ExceptionTransformer implements Transformer, Serializable {"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,561, Constructor
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,563,rivate ExceptionTransformer() {
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,564,uper();
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,568, Always throw exception
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,570,ublic Object transform(Object input) {
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,571,"hrow new TransformerException(""ExceptionTransformer invoked"");"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,575,/ NOPTransformer
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,579, NOPTransformer returns the input object.
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,581,"rivate static class NOPTransformer implements Transformer, Serializable {"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,584, Constructor
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,586,rivate NOPTransformer() {
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,587,uper();
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,591, Return the input object
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,593,ublic Object transform(Object input) {
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,594,eturn input;
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,598,/ CloneTransformer
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,602, CloneTransformer returns a clone of the input object.
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,604,"rivate static class CloneTransformer implements Transformer, Serializable {"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,607, Constructor
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,609,rivate CloneTransformer() {
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,610,uper();
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,614, Returns a clone of the input object
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,616,ublic Object transform(Object input) {
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,617,f (input == null) {
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,618,eturn null;
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,620,ry {
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,621,eturn FactoryUtils.prototypeFactory(input).create();
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,623, catch (IllegalArgumentException ex) {
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,624,"hrow new TransformerException(""CloneTransformer"", ex);"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,625, catch (FactoryException ex) {
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,626,"hrow new TransformerException(""CloneTransformer"", ex);"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,631,/ ConstantTransformer
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,635, ConstantTransformer returns the same instance each time.
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,637,"rivate static class ConstantTransformer implements Transformer, Serializable {"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,638,** The constant to return each time */
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,639,rivate final Object iConstant;
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,642, Constructor to store constant.
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,644,rivate ConstantTransformer(Object constant) {
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,645,uper();
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,646,Constant = constant;
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,650, Always return constant.
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,652,ublic Object transform(Object input) {
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,653,eturn iConstant;
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,657,/ ExecutorTransformer
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,661, ExecutorTransformer executes a Executor object.
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,663,"rivate static class ExecutorTransformer implements Transformer, Serializable {"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,664,** The executor to call each time */
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,665,rivate final Executor iExecutor;
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,668, Constructor to store executor.
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,670,rivate ExecutorTransformer(Executor executor) {
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,671,uper();
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,672,Executor = executor;
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,676, Exceute the executor and return the input.
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,678,ublic Object transform(Object input) {
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,679,ry {
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,680,Executor.execute(input);
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,681,eturn input;
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,683, catch (ExecutorException ex) {
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,684,"hrow new TransformerException(""ExecutorTransformer: "" + ex.getMessage(), ex);"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,689,/ PredicateTransformer
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,693, PredicateTransformer evaluates a Predicate object.
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,695,"rivate static class PredicateTransformer implements Transformer, Serializable {"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,696,** The predicate to call each time */
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,697,rivate final Predicate iPredicate;
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,700, Constructor to store predicate.
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,702,rivate PredicateTransformer(Predicate predicate) {
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,703,uper();
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,704,Predicate = predicate;
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,708, Evaluate the predicate and return the result as a Boolean.
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,710,ublic Object transform(Object input) {
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,711,ry {
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,712,eturn new Boolean(iPredicate.evaluate(input));
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,714, catch (PredicateException ex) {
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,715,"hrow new TransformerException(""PredicateTransformer: "" + ex.getMessage(), ex);"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,720,/ FactoryTransformer
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,724, FactoryTransformer returns the result of calling a Factory.
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,726,"rivate static class FactoryTransformer implements Transformer, Serializable {"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,727,** The factory to call each time */
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,728,rivate final Factory iFactory;
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,731, Constructor to store factory.
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,733,rivate FactoryTransformer(Factory factory) {
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,734,uper();
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,735,Factory = factory;
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,739, Return the result of calling the factory.
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,741,ublic Object transform(Object input) {
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,742,ry {
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,743,eturn iFactory.create();
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,745, catch (FactoryException ex) {
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,746,"hrow new TransformerException(""FactoryTransformer: "" + ex.getMessage(), ex);"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,751,/ ChainedTransformer
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,755, ChainedTransformer returns the result of calling a list of transformers.
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,757,"rivate static class ChainedTransformer implements Transformer, Serializable {"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,758,** The array of transformers to call */
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,759,rivate final Transformer[] iTransformers;
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,762, Constructor to store params.
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,764,rivate ChainedTransformer(Transformer[] transformers) {
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,765,uper();
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,766,Transformers = transformers;
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,770, Returns the result of calling a list of transformers.
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,772,ublic Object transform(Object object) {
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,773,or (int i = 0; i < iTransformers.length; i++) {
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,774,bject = iTransformers[i].transform(object);
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,776,eturn object;
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,780,/ SwitchTransformer
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,784, SwitchTransformer returns the result of the transformer whose predicate returns true.
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,786,"rivate static class SwitchTransformer implements Transformer, Serializable {"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,787,** The array of predicates to switch on */
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,788,rivate final Predicate[] iPredicates;
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,789,** The array of transformers to call */
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,790,rivate final Transformer[] iTransformers;
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,791,** The default transformer called if no predicate matches */
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,792,rivate final Transformer iDefault;
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,795, Constructor to store params.
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,797,"rivate SwitchTransformer(Predicate[] predicates, Transformer[] transformers, Transformer defaultTransformer) {"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,798,uper();
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,799,Predicates = predicates;
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,800,Transformers = transformers;
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,801,Default = defaultTransformer;
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,805, Returns the result of the transformer whose predicate returns true.
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,807,ublic Object transform(Object input) {
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,808,or (int i = 0; i < iPredicates.length; i++) {
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,809,f (iPredicates[i].evaluate(input) == true) {
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,810,eturn iTransformers[i].transform(input);
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,813,eturn iDefault.transform(input);
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,817,/ InstantiateTransformer
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,821, InstantiateTransformer returns the result of instantiating the input Class object.
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,823,"rivate static class InstantiateTransformer implements Transformer, Serializable {"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,824,** The array of reflection parameter types */
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,825,rivate final Class[] iParamTypes;
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,826,** The array of reflection arguments */
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,827,rivate final Object[] iArgs;
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,830, Constructor to store params.
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,832,"rivate InstantiateTransformer(Class[] paramTypes, Object[] args) {"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,833,uper();
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,834,f (((paramTypes == null) && (args != null))
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,835,| ((paramTypes != null) && (args == null))
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,836,| ((paramTypes != null) && (args != null) && (paramTypes.length != args.length))) {
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,837,"hrow new IllegalArgumentException(""InstantiateTransformer: The parameter types must match the arguments"");"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,839,f ((paramTypes == null) && (args == null)) {
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,840,ParamTypes = null;
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,841,Args = null;
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,842, else {
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,843,ParamTypes = (Class[]) paramTypes.clone();
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,844,Args = (Object[]) args.clone();
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,849, Return the result of instantiating the input Class object.
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,851,ublic Object transform(Object input) {
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,852,ry {
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,853,f (input instanceof Class == false) {
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,854,hrow new TransformerException(
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,855,"InstantiateTransformer: Input object was not an instanceof Class, it was a """
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,856," (input == null ? ""null object"" : input.getClass().getName()));"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,858,"eturn FactoryUtils.reflectionFactory((Class) input, iParamTypes, iArgs).create();"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,860, catch (IllegalArgumentException ex) {
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,861,"hrow new TransformerException(""InstantiateTransformer"", ex);"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,862, catch (FactoryException ex) {
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,863,"hrow new TransformerException(""InstantiateTransformer"", ex);"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,868,/ MapTransformer
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,872, MapTransformer returns the result by looking up in the map.
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,874,"rivate static class MapTransformer implements Transformer, Serializable {"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,875,** The map of data to lookup in */
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,876,rivate final Map iMap;
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,879, Constructor to store map.
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,881,rivate MapTransformer(Map map) {
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,882,uper();
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,883,Map = map;
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,887, Returns the result by looking up in the map.
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,889,ublic Object transform(Object input) {
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,890,eturn iMap.get(input);
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,894,/ InvokerTransformer
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,898, InvokerTransformer returns the result of invoking the specified method on
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,899, the input object.
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,901,"rivate static class InvokerTransformer implements Transformer, Serializable {"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,902,** The method name to call */
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,903,rivate final String iMethodName;
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,904,** The array of reflection parameter types */
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,905,rivate final Class[] iParamTypes;
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,906,** The array of reflection arguments */
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,907,rivate final Object[] iArgs;
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,910, Constructor.
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,912,"ublic InvokerTransformer(String methodName, Class[] paramTypes, Object[] args) {"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,913,uper();
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,914,f (methodName == null) {
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,915,"hrow new IllegalArgumentException(""InvokerTransformer: The method to invoke must not be null"");"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,917,f (((paramTypes == null) && (args != null))
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,918,| ((paramTypes != null) && (args == null))
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,919,| ((paramTypes != null) && (args != null) && (paramTypes.length != args.length))) {
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,920,"hrow new IllegalArgumentException(""InvokerTransformer: The parameter types must match the arguments"");"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,923,MethodName = methodName;
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,924,f ((paramTypes == null) && (args == null)) {
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,925,ParamTypes = null;
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,926,Args = null;
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,927, else {
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,928,ParamTypes = (Class[]) paramTypes.clone();
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,929,Args = (Object[]) args.clone();
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,934, Invoke the specified method on the input object.
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,936,ublic Object transform(Object input) {
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,937,f (input == null) {
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,938,eturn null;
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,940,ry {
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,941,lass cls = input.getClass();
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,942,"ethod method = cls.getMethod(iMethodName, iParamTypes);"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,943,"eturn method.invoke(input, iArgs);"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,945, catch (NoSuchMethodException ex) {
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,946,"hrow new TransformerException(""InvokerTransformer: The method '"" + iMethodName + ""' on '"" + input.getClass() + ""' does not exist"");"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,947, catch (IllegalAccessException ex) {
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,948,"hrow new TransformerException(""InvokerTransformer: The method '"" + iMethodName + ""' on '"" + input.getClass() + ""' cannot be accessed"");"
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,949, catch (InvocationTargetException ex) {
False,src/java/org/apache/commons/lang/functor/TransformerUtils.java,src/java/org/apache/commons/lang/functor/TransformerUtils.java,950,"hrow new TransformerException(""InvokerTransformer: The method '"" + iMethodName + ""' on '"" + input.getClass() + ""' threw an exception"", ex);"
False,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,2," The Apache Software License, Version 1.1"
False,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,4, Copyright (c) 2002 The Apache Software Foundation.  All rights
False,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,5, reserved.
False,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,7," Redistribution and use in source and binary forms, with or without"
False,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,8," modification, are permitted provided that the following conditions"
False,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,9, are met:
False,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,11, 1. Redistributions of source code must retain the above copyright
False,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,12,"    notice, this list of conditions and the following disclaimer."
False,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,14, 2. Redistributions in binary form must reproduce the above copyright
False,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,15,"    notice, this list of conditions and the following disclaimer in"
False,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,16,    the documentation and/or other materials provided with the
False,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,17,    distribution.
False,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,19," 3. The end-user documentation included with the redistribution, if"
False,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,20,"    any, must include the following acknowlegement:"
False,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,21,"       ""This product includes software developed by the"
False,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,22,"        Apache Software Foundation (http://www.apache.org/)."""
False,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,23,"    Alternately, this acknowlegement may appear in the software itself,"
False,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,24,    if and wherever such third-party acknowlegements normally appear.
False,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,26," 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
False,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,27,"    Foundation"" must not be used to endorse or promote products derived"
False,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,28,    from this software without prior written permission. For written
False,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,29,"    permission, please contact apache@apache.org."
False,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,31," 5. Products derived from this software may not be called ""Apache"""
False,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,32,"    nor may ""Apache"" appear in their names without prior written"
False,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,33,    permission of the Apache Software Foundation.
False,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,35, THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
False,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,36," WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
False,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,37, OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
False,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,38, DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
False,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,39," ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
False,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,40," SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
False,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,41," LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
False,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,42," USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
False,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,43," ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
False,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,44, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
False,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,45," OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
False,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,46, SUCH DAMAGE.
False,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,49, This software consists of voluntary contributions made by many
False,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,50, individuals on behalf of the Apache Software Foundation.  For more
False,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,51," information on the Apache Software Foundation, please see"
False,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,52, <http://www.apache.org/>.
False,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,54,ackage org.apache.commons.lang.functor;
False,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,56,mport junit.framework.Test;
False,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,57,mport junit.framework.TestCase;
False,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,58,mport junit.framework.TestSuite;
False,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,59,mport junit.textui.TestRunner;
False,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,62, Test suite for the Pattern packages.
False,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,64," @author <a href=""mailto:scolebourne@joda.org"">Stephen Colebourne</a>"
False,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,65," @version $Id: FunctorTestSuite.java,v 1.2 2002/11/06 19:16:15 bayard Exp $"
False,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,67,ublic class FunctorTestSuite extends TestCase {
False,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,70, Construct a new instance.
False,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,72,ublic FunctorTestSuite(String name) {
False,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,73,uper(name);
False,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,77, Executor-line interface.
False,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,79,ublic static void main(String[] args) {
False,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,80,estRunner.run(suite());
False,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,84, Get the suite of tests
False,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,86,ublic static Test suite() {
False,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,87,estSuite suite = new TestSuite();
False,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,88,uite.addTest(TestExecutorUtils.suite());
False,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,89,uite.addTest(TestFactoryUtils.suite());
False,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,90,uite.addTest(TestPredicateUtils.suite());
False,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,91,uite.addTest(TestTransformerUtils.suite());
False,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,src/test/org/apache/commons/lang/functor/FunctorTestSuite.java,92,eturn suite;
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,2," The Apache Software License, Version 1.1"
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,4, Copyright (c) 2002 The Apache Software Foundation.  All rights
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,5, reserved.
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,7," Redistribution and use in source and binary forms, with or without"
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,8," modification, are permitted provided that the following conditions"
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,9, are met:
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,11, 1. Redistributions of source code must retain the above copyright
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,12,"    notice, this list of conditions and the following disclaimer."
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,14, 2. Redistributions in binary form must reproduce the above copyright
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,15,"    notice, this list of conditions and the following disclaimer in"
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,16,    the documentation and/or other materials provided with the
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,17,    distribution.
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,19," 3. The end-user documentation included with the redistribution, if"
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,20,"    any, must include the following acknowlegement:"
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,21,"       ""This product includes software developed by the"
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,22,"        Apache Software Foundation (http://www.apache.org/)."""
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,23,"    Alternately, this acknowlegement may appear in the software itself,"
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,24,    if and wherever such third-party acknowlegements normally appear.
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,26," 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,27,"    Foundation"" must not be used to endorse or promote products derived"
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,28,    from this software without prior written permission. For written
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,29,"    permission, please contact apache@apache.org."
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,31," 5. Products derived from this software may not be called ""Apache"""
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,32,"    nor may ""Apache"" appear in their names without prior written"
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,33,    permission of the Apache Software Foundation.
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,35, THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,36," WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,37, OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,38, DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,39," ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,40," SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,41," LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,42," USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,43," ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,44, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,45," OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,46, SUCH DAMAGE.
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,49, This software consists of voluntary contributions made by many
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,50, individuals on behalf of the Apache Software Foundation.  For more
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,51," information on the Apache Software Foundation, please see"
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,52, <http://www.apache.org/>.
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,54,ackage org.apache.commons.lang.functor;
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,56,mport java.util.ArrayList;
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,57,mport java.util.Collection;
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,58,mport java.util.Collections;
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,59,mport java.util.HashMap;
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,60,mport java.util.Map;
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,62,mport junit.framework.Test;
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,63,mport junit.framework.TestSuite;
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,65,mport org.apache.commons.lang.functor.Predicate;
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,66,mport org.apache.commons.lang.functor.PredicateUtils;
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,68, Tests the org.apache.commons.lang.functor.ExecutorUtils class.
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,70," @author <a href=""mailto:scolebourne@joda.org"">Stephen Colebourne</a>"
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,71," @version $Id: TestExecutorUtils.java,v 1.4 2002/12/15 12:30:44 scolebourne Exp $"
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,73,ublic class TestExecutorUtils extends junit.framework.TestCase {
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,75,rivate static final Object cObject = new Object();
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,76,"rivate static final Object cString = ""Hello"";"
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,77,rivate static final Object cInteger = new Integer(6);
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,80, Construct
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,82,ublic TestExecutorUtils(String name) {
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,83,uper(name);
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,87, Return class aa a test suite.
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,89,ublic static Test suite() {
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,90,eturn new TestSuite(TestExecutorUtils.class);
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,94, Set up instance variables required by this test case.
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,96,ublic void setUp() {
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,100, Tear down instance variables required by this test case.
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,102,ublic void tearDown() {
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,105,tatic class MockExecutor implements Executor {
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,106,nt count = 0;
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,109, @see org.apache.commons.lang.functor.Executor#execute(Object)
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,111,ublic void execute(Object object) {
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,112,ount++;
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,117,/ exceptionExecutor
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,120,ublic void testExceptionExecutor() {
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,121,ssertNotNull(ExecutorUtils.exceptionExecutor());
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,122,"ssertSame(ExecutorUtils.exceptionExecutor(), ExecutorUtils.exceptionExecutor());"
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,123,ry {
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,124,xecutorUtils.exceptionExecutor().execute(null);
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,125, catch (ExecutorException ex) {
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,126,ry {
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,127,xecutorUtils.exceptionExecutor().execute(cString);
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,128, catch (ExecutorException ex2) {
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,129,eturn;
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,132,ail();
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,135,/ nopExecutor
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,138,ublic void testNopExecutor() {
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,139,"tringBuffer buf = new StringBuffer(""Hello"");"
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,140,xecutorUtils.nopExecutor().execute(null);
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,141,"ssertEquals(""Hello"", buf.toString());"
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,142,"xecutorUtils.nopExecutor().execute(""Hello"");"
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,143,"ssertEquals(""Hello"", buf.toString());"
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,146,/ invokeExecutor
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,149,ublic void testInvokeExecutor() {
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,150,"tringBuffer buf = new StringBuffer(""Hello"");"
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,151,"xecutorUtils.invokerExecutor(""reverse"").execute(buf);"
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,152,"ssertEquals(""olleH"", buf.toString());"
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,153,"uf = new StringBuffer(""Hello"");"
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,154,"xecutorUtils.invokerExecutor(""setLength"", new Class[] {Integer.TYPE}, new Object[] {new Integer(2)}).execute(buf);"
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,155,"ssertEquals(""He"", buf.toString());"
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,158,/ forExecutor
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,161,ublic void testForExecutor() {
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,162,ockExecutor cmd = new MockExecutor();
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,163,"xecutorUtils.forExecutor(5, cmd).execute(null);"
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,164,"ssertEquals(5, cmd.count);"
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,165,ry {
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,166,"xecutorUtils.forExecutor(-1, new MockExecutor());"
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,167, catch (IllegalArgumentException ex) {
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,168,eturn;
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,170,ail();
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,173,/ whileExecutor
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,176,ublic void testWhileExecutor() {
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,177,ockExecutor cmd = new MockExecutor();
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,178,"xecutorUtils.whileExecutor(PredicateUtils.falsePredicate(), cmd).execute(null);"
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,179,"ssertEquals(0, cmd.count);"
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,180,ry {
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,181,"xecutorUtils.whileExecutor(null, null);"
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,182, catch (IllegalArgumentException ex) {
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,183,eturn;
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,185,ail();
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,188,/ doWhileExecutor
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,191,ublic void testDoWhileExecutor() {
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,192,ockExecutor cmd = new MockExecutor();
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,193,"xecutorUtils.doWhileExecutor(cmd, PredicateUtils.falsePredicate()).execute(null);"
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,194,"ssertEquals(1, cmd.count);"
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,195,ry {
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,196,"xecutorUtils.doWhileExecutor(null, null);"
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,197, catch (IllegalArgumentException ex) {
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,198,eturn;
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,200,ail();
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,203,/ chainedExecutor
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,206,ublic void testChainedExecutor() {
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,207,ockExecutor a = new MockExecutor();
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,208,ockExecutor b = new MockExecutor();
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,209,"xecutorUtils.chainedExecutor(a, b).execute(null);"
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,210,"ssertEquals(1, a.count);"
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,211,"ssertEquals(1, b.count);"
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,213, = new MockExecutor();
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,214, = new MockExecutor();
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,215,"xecutorUtils.chainedExecutor(new Executor[] {a, b, a}).execute(null);"
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,216,"ssertEquals(2, a.count);"
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,217,"ssertEquals(1, b.count);"
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,219, = new MockExecutor();
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,220, = new MockExecutor();
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,221,ollection coll = new ArrayList();
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,222,oll.add(b);
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,223,oll.add(a);
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,224,oll.add(b);
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,225,xecutorUtils.chainedExecutor(coll).execute(null);
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,226,"ssertEquals(1, a.count);"
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,227,"ssertEquals(2, b.count);"
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,230,ublic void testChainedExecutorEx1a() {
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,231,ry {
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,232,"xecutorUtils.chainedExecutor(null, null);"
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,233, catch (IllegalArgumentException ex) {
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,234,eturn;
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,236,ail();
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,239,ublic void testChainedExecutorEx1b() {
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,240,ry {
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,241,xecutorUtils.chainedExecutor((Executor[]) null);
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,242, catch (IllegalArgumentException ex) {
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,243,eturn;
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,245,ail();
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,248,ublic void testChainedExecutorEx1c() {
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,249,ry {
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,250,xecutorUtils.chainedExecutor((Collection) null);
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,251, catch (IllegalArgumentException ex) {
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,252,eturn;
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,254,ail();
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,257,ublic void testChainedExecutorEx2() {
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,258,ry {
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,259,xecutorUtils.chainedExecutor(new Executor[0]);
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,260, catch (IllegalArgumentException ex) {
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,261,eturn;
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,263,ail();
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,266,ublic void testChainedExecutorEx3() {
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,267,ry {
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,268,"xecutorUtils.chainedExecutor(new Executor[] {null, null});"
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,269, catch (IllegalArgumentException ex) {
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,270,eturn;
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,272,ail();
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,275,ublic void testChainedExecutorEx4() {
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,276,ry {
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,277,xecutorUtils.chainedExecutor(Collections.EMPTY_LIST);
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,278, catch (IllegalArgumentException ex) {
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,279,eturn;
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,281,ail();
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,284,ublic void testChainedExecutorEx5() {
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,285,ry {
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,286,ollection coll = new ArrayList();
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,287,oll.add(null);
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,288,oll.add(null);
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,289,xecutorUtils.chainedExecutor(coll);
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,290, catch (IllegalArgumentException ex) {
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,291,eturn;
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,293,ail();
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,296,/ switchExecutor
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,299,ublic void testSwitchExecutor() {
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,300,ockExecutor a = new MockExecutor();
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,301,ockExecutor b = new MockExecutor();
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,302,"xecutorUtils.switchExecutor(PredicateUtils.truePredicate(), a, b).execute(null);"
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,303,"ssertEquals(1, a.count);"
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,304,"ssertEquals(0, b.count);"
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,306, = new MockExecutor();
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,307, = new MockExecutor();
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,308,"xecutorUtils.switchExecutor(PredicateUtils.falsePredicate(), a, b).execute(null);"
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,309,"ssertEquals(0, a.count);"
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,310,"ssertEquals(1, b.count);"
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,312, = new MockExecutor();
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,313, = new MockExecutor();
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,314,xecutorUtils.switchExecutor(
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,315,"ew Predicate[] {PredicateUtils.equalPredicate(""HELLO""), PredicateUtils.equalPredicate(""THERE"")},"
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,316,"ew Executor[] {a, b}).execute(""WELL"");"
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,317,"ssertEquals(0, a.count);"
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,318,"ssertEquals(0, b.count);"
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,320, = new MockExecutor();
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,321, = new MockExecutor();
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,322,xecutorUtils.switchExecutor(
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,323,"ew Predicate[] {PredicateUtils.equalPredicate(""HELLO""), PredicateUtils.equalPredicate(""THERE"")},"
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,324,"ew Executor[] {a, b}).execute(""HELLO"");"
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,325,"ssertEquals(1, a.count);"
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,326,"ssertEquals(0, b.count);"
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,328, = new MockExecutor();
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,329, = new MockExecutor();
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,330,ockExecutor c = new MockExecutor();
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,331,xecutorUtils.switchExecutor(
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,332,"ew Predicate[] {PredicateUtils.equalPredicate(""HELLO""), PredicateUtils.equalPredicate(""THERE"")},"
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,333,"ew Executor[] {a, b}, c).execute(""WELL"");"
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,334,"ssertEquals(0, a.count);"
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,335,"ssertEquals(0, b.count);"
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,336,"ssertEquals(1, c.count);"
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,338, = new MockExecutor();
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,339, = new MockExecutor();
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,340,ap map = new HashMap();
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,341,"ap.put(PredicateUtils.equalPredicate(""HELLO""), a);"
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,342,"ap.put(PredicateUtils.equalPredicate(""THERE""), b);"
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,343,xecutorUtils.switchExecutor(map).execute(null);
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,344,"ssertEquals(0, a.count);"
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,345,"ssertEquals(0, b.count);"
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,347, = new MockExecutor();
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,348, = new MockExecutor();
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,349,ap = new HashMap();
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,350,"ap.put(PredicateUtils.equalPredicate(""HELLO""), a);"
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,351,"ap.put(PredicateUtils.equalPredicate(""THERE""), b);"
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,352,"xecutorUtils.switchExecutor(map).execute(""THERE"");"
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,353,"ssertEquals(0, a.count);"
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,354,"ssertEquals(1, b.count);"
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,356, = new MockExecutor();
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,357, = new MockExecutor();
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,358, = new MockExecutor();
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,359,ap = new HashMap();
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,360,"ap.put(PredicateUtils.equalPredicate(""HELLO""), a);"
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,361,"ap.put(PredicateUtils.equalPredicate(""THERE""), b);"
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,362,"ap.put(null, c);"
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,363,"xecutorUtils.switchExecutor(map).execute(""WELL"");"
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,364,"ssertEquals(0, a.count);"
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,365,"ssertEquals(0, b.count);"
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,366,"ssertEquals(1, c.count);"
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,369,ublic void testSwitchExecutorEx1a() {
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,370,ry {
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,371,"xecutorUtils.switchExecutor(null, null);"
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,372, catch (IllegalArgumentException ex) {
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,373,eturn;
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,375,ail();
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,378,ublic void testSwitchExecutorEx1b() {
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,379,ry {
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,380,"xecutorUtils.switchExecutor((Predicate[]) null, (Executor[]) null);"
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,381, catch (IllegalArgumentException ex) {
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,382,eturn;
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,384,ail();
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,387,ublic void testSwitchExecutorEx1c() {
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,388,ry {
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,389,xecutorUtils.switchExecutor((Map) null);
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,390, catch (IllegalArgumentException ex) {
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,391,eturn;
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,393,ail();
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,396,ublic void testSwitchExecutorEx2() {
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,397,ry {
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,398,"xecutorUtils.switchExecutor(new Predicate[0], new Executor[0]);"
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,399, catch (IllegalArgumentException ex) {
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,400,eturn;
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,402,ail();
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,405,ublic void testSwitchExecutorEx3() {
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,406,ry {
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,407,"xecutorUtils.switchExecutor(new Predicate[2], new Executor[2]);"
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,408, catch (IllegalArgumentException ex) {
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,409,eturn;
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,411,ail();
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,414,ublic void testSwitchExecutorEx4() {
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,415,ry {
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,416,xecutorUtils.switchExecutor(new HashMap());
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,417, catch (IllegalArgumentException ex) {
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,418,eturn;
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,420,ail();
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,423,ublic void testSwitchExecutorEx5() {
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,424,ry {
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,425,ap map = new HashMap();
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,426,"ap.put(null, null);"
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,427,"ap.put(null, null);"
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,428,xecutorUtils.switchExecutor(map);
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,429, catch (IllegalArgumentException ex) {
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,430,eturn;
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,432,ail();
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,435,ublic void testSwitchExecutorEx6() {
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,436,ry {
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,437,"xecutorUtils.switchExecutor(new Predicate[2], new Executor[1]);"
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,438, catch (IllegalArgumentException ex) {
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,439,eturn;
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,441,ail();
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,444,/ switchMapExecutor
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,447,ublic void testSwitchMapExecutor() {
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,448,ockExecutor a = new MockExecutor();
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,449,ockExecutor b = new MockExecutor();
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,450,ap map = new HashMap();
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,451,"ap.put(""HELLO"", a);"
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,452,"ap.put(""THERE"", b);"
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,453,xecutorUtils.switchMapExecutor(map).execute(null);
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,454,"ssertEquals(0, a.count);"
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,455,"ssertEquals(0, b.count);"
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,457, = new MockExecutor();
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,458, = new MockExecutor();
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,459,ap = new HashMap();
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,460,"ap.put(""HELLO"", a);"
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,461,"ap.put(""THERE"", b);"
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,462,"xecutorUtils.switchMapExecutor(map).execute(""THERE"");"
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,463,"ssertEquals(0, a.count);"
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,464,"ssertEquals(1, b.count);"
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,466, = new MockExecutor();
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,467, = new MockExecutor();
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,468,ockExecutor c = new MockExecutor();
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,469,ap = new HashMap();
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,470,"ap.put(""HELLO"", a);"
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,471,"ap.put(""THERE"", b);"
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,472,"ap.put(null, c);"
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,473,"xecutorUtils.switchMapExecutor(map).execute(""WELL"");"
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,474,"ssertEquals(0, a.count);"
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,475,"ssertEquals(0, b.count);"
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,476,"ssertEquals(1, c.count);"
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,479,ublic void testSwitchMapExecutorEx1() {
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,480,ry {
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,481,xecutorUtils.switchMapExecutor(null);
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,482, catch (IllegalArgumentException ex) {
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,483,eturn;
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,485,ail();
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,488,ublic void testSwitchMapExecutorEx2() {
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,489,ry {
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,490,xecutorUtils.switchMapExecutor(new HashMap());
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,491, catch (IllegalArgumentException ex) {
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,492,eturn;
False,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,src/test/org/apache/commons/lang/functor/TestExecutorUtils.java,494,ail();
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,2," The Apache Software License, Version 1.1"
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,4, Copyright (c) 2002 The Apache Software Foundation.  All rights
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,5, reserved.
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,7," Redistribution and use in source and binary forms, with or without"
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,8," modification, are permitted provided that the following conditions"
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,9, are met:
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,11, 1. Redistributions of source code must retain the above copyright
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,12,"    notice, this list of conditions and the following disclaimer."
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,14, 2. Redistributions in binary form must reproduce the above copyright
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,15,"    notice, this list of conditions and the following disclaimer in"
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,16,    the documentation and/or other materials provided with the
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,17,    distribution.
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,19," 3. The end-user documentation included with the redistribution, if"
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,20,"    any, must include the following acknowlegement:"
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,21,"       ""This product includes software developed by the"
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,22,"        Apache Software Foundation (http://www.apache.org/)."""
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,23,"    Alternately, this acknowlegement may appear in the software itself,"
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,24,    if and wherever such third-party acknowlegements normally appear.
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,26," 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,27,"    Foundation"" must not be used to endorse or promote products derived"
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,28,    from this software without prior written permission. For written
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,29,"    permission, please contact apache@apache.org."
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,31," 5. Products derived from this software may not be called ""Apache"""
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,32,"    nor may ""Apache"" appear in their names without prior written"
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,33,    permission of the Apache Software Foundation.
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,35, THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,36," WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,37, OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,38, DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,39," ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,40," SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,41," LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,42," USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,43," ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,44, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,45," OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,46, SUCH DAMAGE.
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,49, This software consists of voluntary contributions made by many
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,50, individuals on behalf of the Apache Software Foundation.  For more
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,51," information on the Apache Software Foundation, please see"
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,52, <http://www.apache.org/>.
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,54,ackage org.apache.commons.lang.functor;
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,56,mport java.io.Serializable;
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,57,mport java.util.Date;
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,58,mport java.util.TimeZone;
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,60,mport junit.framework.Test;
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,61,mport junit.framework.TestSuite;
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,63,mport org.apache.commons.lang.SerializationException;
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,65, Tests the org.apache.commons.lang.functor.FactoryUtils class.
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,67," @author <a href=""mailto:scolebourne@joda.org"">Stephen Colebourne</a>"
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,68," @version $Id: TestFactoryUtils.java,v 1.2 2002/12/15 17:03:41 scolebourne Exp $"
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,70,ublic class TestFactoryUtils extends junit.framework.TestCase {
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,73, Construct
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,75,ublic TestFactoryUtils(String name) {
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,76,uper(name);
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,80, Return class aa a test suite.
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,82,ublic static Test suite() {
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,83,eturn new TestSuite(TestFactoryUtils.class);
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,87, Set up instance variables required by this test case.
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,89,ublic void setUp() {
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,93, Tear down instance variables required by this test case.
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,95,ublic void tearDown() {
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,98,/ exceptionFactory
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,101,ublic void testExceptionFactory() {
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,102,ssertNotNull(FactoryUtils.exceptionFactory());
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,103,"ssertSame(FactoryUtils.exceptionFactory(), FactoryUtils.exceptionFactory());"
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,104,ry {
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,105,actoryUtils.exceptionFactory().create();
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,106, catch (FactoryException ex) {
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,107,ry {
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,108,actoryUtils.exceptionFactory().create();
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,109, catch (FactoryException ex2) {
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,110,eturn;
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,113,ail();
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,116,/ nullFactory
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,119,ublic void testNullFactory() {
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,120,actory factory = FactoryUtils.nullFactory();
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,121,ssertNotNull(factory);
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,122,bject created = factory.create();
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,123,ssertNull(created);
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,126,/ constantFactory
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,129,ublic void testConstantFactoryNull() {
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,130,actory factory = FactoryUtils.constantFactory(null);
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,131,ssertNotNull(factory);
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,132,bject created = factory.create();
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,133,ssertNull(created);
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,136,ublic void testConstantFactoryConstant() {
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,137,nteger constant = new Integer(9);
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,138,actory factory = FactoryUtils.constantFactory(constant);
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,139,ssertNotNull(factory);
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,140,bject created = factory.create();
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,141,"ssertSame(constant, created);"
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,144,/ prototypeFactory
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,147,ublic void testPrototypeFactoryNull() {
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,148,ry {
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,149,actory factory = FactoryUtils.prototypeFactory(null);
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,151, catch (IllegalArgumentException ex) {
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,152,eturn;
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,154,ail();
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,157,ublic void testPrototypeFactoryPublicCloneMethod() {
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,158,ate proto = new Date();
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,159,actory factory = FactoryUtils.prototypeFactory(proto);
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,160,ssertNotNull(factory);
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,161,bject created = factory.create();
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,162,ssertTrue(proto != created);
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,163,"ssertEquals(proto, created);"
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,166,ublic void testPrototypeFactoryPublicCopyConstructor() {
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,167,ock1 proto = new Mock1(6);
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,168,actory factory = FactoryUtils.prototypeFactory(proto);
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,169,ssertNotNull(factory);
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,170,bject created = factory.create();
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,171,ssertTrue(proto != created);
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,172,"ssertEquals(proto, created);"
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,175,ublic void testPrototypeFactoryPublicSerialization() {
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,176,nteger proto = new Integer(9);
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,177,actory factory = FactoryUtils.prototypeFactory(proto);
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,178,ssertNotNull(factory);
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,179,bject created = factory.create();
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,180,ssertTrue(proto != created);
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,181,"ssertEquals(proto, created);"
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,184,ublic void testPrototypeFactoryPublicSerializationError() {
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,185,ock2 proto = new Mock2(new Object());
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,186,actory factory = FactoryUtils.prototypeFactory(proto);
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,187,ssertNotNull(factory);
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,188,ry {
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,189,bject created = factory.create();
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,191, catch (FactoryException ex) {
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,192,ssertTrue(ex.getCause() instanceof SerializationException);
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,193,eturn;
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,195,ail();
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,198,ublic void testPrototypeFactoryPublicBad() {
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,199,bject proto = new Object();
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,200,ry {
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,201,actory factory = FactoryUtils.prototypeFactory(proto);
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,203, catch (IllegalArgumentException ex) {
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,204,eturn;
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,206,ail();
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,209,ublic static class Mock1 {
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,210,rivate final int iVal;
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,211,ublic Mock1(int val) {
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,212,Val = val;
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,214,ublic Mock1(Mock1 mock) {
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,215,Val = mock.iVal;
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,217,ublic boolean equals(Object obj) {
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,218,f (obj instanceof Mock1) {
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,219,f (iVal == ((Mock1) obj).iVal) {
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,220,eturn true;
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,223,eturn false;
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,227,ublic static class Mock2 implements Serializable {
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,228,rivate final Object iVal;
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,229,ublic Mock2(Object val) {
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,230,Val = val;
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,232,ublic boolean equals(Object obj) {
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,233,f (obj instanceof Mock2) {
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,234,f (iVal == ((Mock2) obj).iVal) {
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,235,eturn true;
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,238,eturn false;
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,242,/ reflectionFactory
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,245,ublic void testReflectionFactoryNull() {
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,246,ry {
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,247,actory factory = FactoryUtils.reflectionFactory(null);
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,249, catch (IllegalArgumentException ex) {
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,250,eturn;
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,252,ail();
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,255,ublic void testReflectionFactorySimple() {
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,256,actory factory = FactoryUtils.reflectionFactory(Date.class);
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,257,ssertNotNull(factory);
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,258,bject created = factory.create();
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,259,ssertTrue(created instanceof Date);
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,260,"ssertEquals((double) System.currentTimeMillis(), (double) ((Date) created).getTime(), 0.05d);"
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,263,ublic void testReflectionFactoryMismatch() {
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,264,ry {
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,265,"actory factory = FactoryUtils.reflectionFactory(Date.class, null, new Object[] {null});"
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,267, catch (IllegalArgumentException ex) {
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,268,eturn;
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,270,ail();
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,273,ublic void testReflectionFactoryNoConstructor() {
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,274,ry {
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,275,"actory factory = FactoryUtils.reflectionFactory(Date.class, new Class[] {Long.class}, new Object[] {null});"
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,277, catch (IllegalArgumentException ex) {
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,278,eturn;
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,280,ail();
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,283,ublic void testReflectionFactoryComplex() {
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,284,"imeZone.setDefault(TimeZone.getTimeZone(""GMT""));"
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,285,"actory factory = FactoryUtils.reflectionFactory(Date.class,"
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,286,"ew Class[] {Integer.TYPE, Integer.TYPE, Integer.TYPE},"
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,287,"ew Object[] {new Integer(70), new Integer(0), new Integer(2)});"
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,288,ssertNotNull(factory);
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,289,bject created = factory.create();
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,290,ssertTrue(created instanceof Date);
False,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,src/test/org/apache/commons/lang/functor/TestFactoryUtils.java,291,"ssertEquals(new Date(1000 * 60 * 60 * 24), created);"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,2," The Apache Software License, Version 1.1"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,4, Copyright (c) 2002 The Apache Software Foundation.  All rights
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,5, reserved.
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,7," Redistribution and use in source and binary forms, with or without"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,8," modification, are permitted provided that the following conditions"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,9, are met:
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,11, 1. Redistributions of source code must retain the above copyright
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,12,"    notice, this list of conditions and the following disclaimer."
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,14, 2. Redistributions in binary form must reproduce the above copyright
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,15,"    notice, this list of conditions and the following disclaimer in"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,16,    the documentation and/or other materials provided with the
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,17,    distribution.
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,19," 3. The end-user documentation included with the redistribution, if"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,20,"    any, must include the following acknowlegement:"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,21,"       ""This product includes software developed by the"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,22,"        Apache Software Foundation (http://www.apache.org/)."""
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,23,"    Alternately, this acknowlegement may appear in the software itself,"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,24,    if and wherever such third-party acknowlegements normally appear.
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,26," 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,27,"    Foundation"" must not be used to endorse or promote products derived"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,28,    from this software without prior written permission. For written
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,29,"    permission, please contact apache@apache.org."
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,31," 5. Products derived from this software may not be called ""Apache"""
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,32,"    nor may ""Apache"" appear in their names without prior written"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,33,    permission of the Apache Software Foundation.
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,35, THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,36," WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,37, OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,38, DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,39," ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,40," SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,41," LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,42," USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,43," ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,44, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,45," OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,46, SUCH DAMAGE.
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,49, This software consists of voluntary contributions made by many
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,50, individuals on behalf of the Apache Software Foundation.  For more
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,51," information on the Apache Software Foundation, please see"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,52, <http://www.apache.org/>.
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,54,ackage org.apache.commons.lang.functor;
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,56,mport java.io.Serializable;
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,57,mport java.util.ArrayList;
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,58,mport java.util.Collection;
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,59,mport java.util.Collections;
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,60,mport java.util.Date;
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,61,mport java.util.List;
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,63,mport junit.framework.Test;
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,64,mport junit.framework.TestSuite;
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,66,mport org.apache.commons.lang.SerializationException;
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,67,mport org.apache.commons.lang.functor.TransformerUtils;
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,69, Tests the org.apache.commons.lang.functor.PredicateUtils class.
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,71," @author <a href=""mailto:scolebourne@joda.org"">Stephen Colebourne</a>"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,72," @version $Id: TestPredicateUtils.java,v 1.1 2002/11/05 16:45:13 bayard Exp $"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,74,ublic class TestPredicateUtils extends junit.framework.TestCase {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,76,rivate static final Object cObject = new Object();
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,77,"rivate static final Object cString = ""Hello"";"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,78,rivate static final Object cInteger = new Integer(6);
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,81, Construct
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,83,ublic TestPredicateUtils(String name) {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,84,uper(name);
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,88, Return class aa a test suite.
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,90,ublic static Test suite() {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,91,eturn new TestSuite(TestPredicateUtils.class);
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,95, Set up instance variables required by this test case.
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,97,ublic void setUp() {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,101, Tear down instance variables required by this test case.
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,103,ublic void tearDown() {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,106,/ exceptionPredicate
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,109,ublic void testExceptionPredicate() {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,110,ssertNotNull(PredicateUtils.exceptionPredicate());
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,111,"ssertSame(PredicateUtils.exceptionPredicate(), PredicateUtils.exceptionPredicate());"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,112,ry {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,113,redicateUtils.exceptionPredicate().evaluate(null);
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,114, catch (PredicateException ex) {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,115,ry {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,116,redicateUtils.exceptionPredicate().evaluate(cString);
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,117, catch (PredicateException ex2) {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,118,eturn;
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,121,ail();
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,124,/ nullPredicate
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,127,ublic void testNullPredicate() {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,128,ssertNotNull(PredicateUtils.nullPredicate());
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,129,"ssertSame(PredicateUtils.nullPredicate(), PredicateUtils.nullPredicate());"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,130,"ssertEquals(true, PredicateUtils.nullPredicate().evaluate(null));"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,131,"ssertEquals(false, PredicateUtils.nullPredicate().evaluate(cObject));"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,132,"ssertEquals(false, PredicateUtils.nullPredicate().evaluate(cString));"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,133,"ssertEquals(false, PredicateUtils.nullPredicate().evaluate(cInteger));"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,136,/ notNullPredicate
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,139,ublic void testIsNotNullPredicate() {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,140,ssertNotNull(PredicateUtils.notNullPredicate());
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,141,"ssertSame(PredicateUtils.notNullPredicate(), PredicateUtils.notNullPredicate());"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,142,"ssertEquals(false, PredicateUtils.notNullPredicate().evaluate(null));"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,143,"ssertEquals(true, PredicateUtils.notNullPredicate().evaluate(cObject));"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,144,"ssertEquals(true, PredicateUtils.notNullPredicate().evaluate(cString));"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,145,"ssertEquals(true, PredicateUtils.notNullPredicate().evaluate(cInteger));"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,148,/ equalPredicate
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,151,ublic void testEqualPredicate() {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,152,"ssertSame(PredicateUtils.nullPredicate(), PredicateUtils.equalPredicate(null));"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,153,ssertNotNull(PredicateUtils.equalPredicate(new Integer(6)));
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,154,"ssertEquals(false, PredicateUtils.equalPredicate(new Integer(6)).evaluate(null));"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,155,"ssertEquals(false, PredicateUtils.equalPredicate(new Integer(6)).evaluate(cObject));"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,156,"ssertEquals(false, PredicateUtils.equalPredicate(new Integer(6)).evaluate(cString));"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,157,"ssertEquals(true, PredicateUtils.equalPredicate(new Integer(6)).evaluate(cInteger));"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,160,/ identityPredicate
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,163,ublic void testIdentityPredicate() {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,164,"ssertSame(PredicateUtils.nullPredicate(), PredicateUtils.identityPredicate(null));"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,165,ssertNotNull(PredicateUtils.identityPredicate(new Integer(6)));
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,166,"ssertEquals(false, PredicateUtils.identityPredicate(new Integer(6)).evaluate(null));"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,167,"ssertEquals(false, PredicateUtils.identityPredicate(new Integer(6)).evaluate(cObject));"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,168,"ssertEquals(false, PredicateUtils.identityPredicate(new Integer(6)).evaluate(cString));"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,169,"ssertEquals(false, PredicateUtils.identityPredicate(new Integer(6)).evaluate(cInteger));"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,170,"ssertEquals(true, PredicateUtils.identityPredicate(cInteger).evaluate(cInteger));"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,173,/ truePredicate
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,176,ublic void testTruePredicate() {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,177,ssertNotNull(PredicateUtils.truePredicate());
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,178,"ssertSame(PredicateUtils.truePredicate(), PredicateUtils.truePredicate());"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,179,"ssertEquals(true, PredicateUtils.truePredicate().evaluate(null));"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,180,"ssertEquals(true, PredicateUtils.truePredicate().evaluate(cObject));"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,181,"ssertEquals(true, PredicateUtils.truePredicate().evaluate(cString));"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,182,"ssertEquals(true, PredicateUtils.truePredicate().evaluate(cInteger));"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,185,/ falsePredicate
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,188,ublic void testFalsePredicate() {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,189,ssertNotNull(PredicateUtils.falsePredicate());
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,190,"ssertSame(PredicateUtils.falsePredicate(), PredicateUtils.falsePredicate());"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,191,"ssertEquals(false, PredicateUtils.falsePredicate().evaluate(null));"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,192,"ssertEquals(false, PredicateUtils.falsePredicate().evaluate(cObject));"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,193,"ssertEquals(false, PredicateUtils.falsePredicate().evaluate(cString));"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,194,"ssertEquals(false, PredicateUtils.falsePredicate().evaluate(cInteger));"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,197,/ notPredicate
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,200,ublic void testNotPredicate() {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,201,ssertNotNull(PredicateUtils.notPredicate(PredicateUtils.truePredicate()));
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,202,"ssertEquals(false, PredicateUtils.notPredicate(PredicateUtils.truePredicate()).evaluate(null));"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,203,"ssertEquals(false, PredicateUtils.notPredicate(PredicateUtils.truePredicate()).evaluate(cObject));"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,204,"ssertEquals(false, PredicateUtils.notPredicate(PredicateUtils.truePredicate()).evaluate(cString));"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,205,"ssertEquals(false, PredicateUtils.notPredicate(PredicateUtils.truePredicate()).evaluate(cInteger));"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,208,ublic void testNotPredicateEx() {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,209,ry {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,210,redicateUtils.notPredicate(null);
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,211, catch (IllegalArgumentException ex) {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,212,eturn;
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,214,ail();
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,217,/ andPredicate
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,220,ublic void testAndPredicate() {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,221,"ssertEquals(true, PredicateUtils.andPredicate(PredicateUtils.truePredicate(), PredicateUtils.truePredicate()).evaluate(null));"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,222,"ssertEquals(false, PredicateUtils.andPredicate(PredicateUtils.truePredicate(), PredicateUtils.falsePredicate()).evaluate(null));"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,223,"ssertEquals(false, PredicateUtils.andPredicate(PredicateUtils.falsePredicate(), PredicateUtils.truePredicate()).evaluate(null));"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,224,"ssertEquals(false, PredicateUtils.andPredicate(PredicateUtils.falsePredicate(), PredicateUtils.falsePredicate()).evaluate(null));"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,227,ublic void testAndPredicateEx() {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,228,ry {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,229,"redicateUtils.andPredicate(null, null);"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,230, catch (IllegalArgumentException ex) {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,231,eturn;
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,233,ail();
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,236,/ allPredicate
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,239,ublic void testAllPredicate() {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,240,"ssertEquals(true, PredicateUtils.allPredicate(new Predicate[] {"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,241,"redicateUtils.truePredicate(), PredicateUtils.truePredicate(), PredicateUtils.truePredicate()}).evaluate(null));"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,242,"ssertEquals(false, PredicateUtils.allPredicate(new Predicate[] {"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,243,"redicateUtils.truePredicate(), PredicateUtils.falsePredicate(), PredicateUtils.truePredicate()}).evaluate(null));"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,244,"ssertEquals(false, PredicateUtils.allPredicate(new Predicate[] {"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,245,"redicateUtils.falsePredicate(), PredicateUtils.falsePredicate(), PredicateUtils.truePredicate()}).evaluate(null));"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,246,"ssertEquals(false, PredicateUtils.allPredicate(new Predicate[] {"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,247,"redicateUtils.falsePredicate(), PredicateUtils.falsePredicate(), PredicateUtils.falsePredicate()}).evaluate(null));"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,248,ollection coll = new ArrayList();
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,249,oll.add(PredicateUtils.truePredicate());
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,250,oll.add(PredicateUtils.truePredicate());
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,251,oll.add(PredicateUtils.truePredicate());
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,252,"ssertEquals(true, PredicateUtils.allPredicate(coll).evaluate(null));"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,253,oll.clear();
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,254,oll.add(PredicateUtils.truePredicate());
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,255,oll.add(PredicateUtils.falsePredicate());
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,256,oll.add(PredicateUtils.truePredicate());
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,257,"ssertEquals(false, PredicateUtils.allPredicate(coll).evaluate(null));"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,258,oll.clear();
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,259,oll.add(PredicateUtils.falsePredicate());
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,260,oll.add(PredicateUtils.falsePredicate());
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,261,oll.add(PredicateUtils.truePredicate());
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,262,"ssertEquals(false, PredicateUtils.allPredicate(coll).evaluate(null));"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,263,oll.clear();
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,264,oll.add(PredicateUtils.falsePredicate());
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,265,oll.add(PredicateUtils.falsePredicate());
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,266,oll.add(PredicateUtils.falsePredicate());
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,267,"ssertEquals(false, PredicateUtils.allPredicate(coll).evaluate(null));"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,270,ublic void testAllPredicateEx1() {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,271,ry {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,272,redicateUtils.allPredicate((Predicate[]) null);
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,273, catch (IllegalArgumentException ex) {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,274,eturn;
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,276,ail();
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,279,ublic void testAllPredicateEx2() {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,280,ry {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,281,redicateUtils.allPredicate(new Predicate[] {null});
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,282, catch (IllegalArgumentException ex) {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,283,eturn;
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,285,ail();
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,288,ublic void testAllPredicateEx3() {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,289,ry {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,290,"redicateUtils.allPredicate(new Predicate[] {null, null});"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,291, catch (IllegalArgumentException ex) {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,292,eturn;
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,294,ail();
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,297,ublic void testAllPredicateEx4() {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,298,ry {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,299,redicateUtils.allPredicate((Collection) null);
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,300, catch (IllegalArgumentException ex) {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,301,eturn;
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,303,ail();
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,306,ublic void testAllPredicateEx5() {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,307,ry {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,308,redicateUtils.allPredicate(Collections.EMPTY_LIST);
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,309, catch (IllegalArgumentException ex) {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,310,eturn;
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,312,ail();
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,315,ublic void testAllPredicateEx6() {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,316,ry {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,317,ollection coll = new ArrayList();
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,318,oll.add(null);
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,319,oll.add(null);
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,320,redicateUtils.allPredicate(coll);
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,321, catch (IllegalArgumentException ex) {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,322,eturn;
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,324,ail();
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,327,/ orPredicate
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,330,ublic void testOrPredicate() {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,331,"ssertEquals(true, PredicateUtils.orPredicate(PredicateUtils.truePredicate(), PredicateUtils.truePredicate()).evaluate(null));"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,332,"ssertEquals(true, PredicateUtils.orPredicate(PredicateUtils.truePredicate(), PredicateUtils.falsePredicate()).evaluate(null));"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,333,"ssertEquals(true, PredicateUtils.orPredicate(PredicateUtils.falsePredicate(), PredicateUtils.truePredicate()).evaluate(null));"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,334,"ssertEquals(false, PredicateUtils.orPredicate(PredicateUtils.falsePredicate(), PredicateUtils.falsePredicate()).evaluate(null));"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,337,ublic void testOrPredicateEx() {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,338,ry {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,339,"redicateUtils.orPredicate(null, null);"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,340, catch (IllegalArgumentException ex) {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,341,eturn;
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,343,ail();
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,346,/ anyPredicate
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,349,ublic void testAnyPredicate() {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,350,"ssertEquals(true, PredicateUtils.anyPredicate(new Predicate[] {"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,351,"redicateUtils.truePredicate(), PredicateUtils.truePredicate(), PredicateUtils.truePredicate()}).evaluate(null));"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,352,"ssertEquals(true, PredicateUtils.anyPredicate(new Predicate[] {"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,353,"redicateUtils.truePredicate(), PredicateUtils.falsePredicate(), PredicateUtils.truePredicate()}).evaluate(null));"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,354,"ssertEquals(true, PredicateUtils.anyPredicate(new Predicate[] {"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,355,"redicateUtils.falsePredicate(), PredicateUtils.falsePredicate(), PredicateUtils.truePredicate()}).evaluate(null));"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,356,"ssertEquals(false, PredicateUtils.anyPredicate(new Predicate[] {"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,357,"redicateUtils.falsePredicate(), PredicateUtils.falsePredicate(), PredicateUtils.falsePredicate()}).evaluate(null));"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,358,ollection coll = new ArrayList();
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,359,oll.add(PredicateUtils.truePredicate());
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,360,oll.add(PredicateUtils.truePredicate());
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,361,oll.add(PredicateUtils.truePredicate());
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,362,"ssertEquals(true, PredicateUtils.anyPredicate(coll).evaluate(null));"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,363,oll.clear();
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,364,oll.add(PredicateUtils.truePredicate());
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,365,oll.add(PredicateUtils.falsePredicate());
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,366,oll.add(PredicateUtils.truePredicate());
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,367,"ssertEquals(true, PredicateUtils.anyPredicate(coll).evaluate(null));"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,368,oll.clear();
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,369,oll.add(PredicateUtils.falsePredicate());
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,370,oll.add(PredicateUtils.falsePredicate());
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,371,oll.add(PredicateUtils.truePredicate());
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,372,"ssertEquals(true, PredicateUtils.anyPredicate(coll).evaluate(null));"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,373,oll.clear();
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,374,oll.add(PredicateUtils.falsePredicate());
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,375,oll.add(PredicateUtils.falsePredicate());
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,376,oll.add(PredicateUtils.falsePredicate());
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,377,"ssertEquals(false, PredicateUtils.anyPredicate(coll).evaluate(null));"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,380,ublic void testAnyPredicateEx1() {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,381,ry {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,382,redicateUtils.anyPredicate((Predicate[]) null);
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,383, catch (IllegalArgumentException ex) {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,384,eturn;
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,386,ail();
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,389,ublic void testAnyPredicateEx2() {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,390,ry {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,391,redicateUtils.anyPredicate(new Predicate[] {null});
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,392, catch (IllegalArgumentException ex) {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,393,eturn;
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,395,ail();
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,398,ublic void testAnyPredicateEx3() {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,399,ry {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,400,"redicateUtils.anyPredicate(new Predicate[] {null, null});"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,401, catch (IllegalArgumentException ex) {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,402,eturn;
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,404,ail();
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,407,ublic void testAnyPredicateEx4() {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,408,ry {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,409,redicateUtils.anyPredicate((Collection) null);
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,410, catch (IllegalArgumentException ex) {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,411,eturn;
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,413,ail();
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,416,ublic void testAnyPredicateEx5() {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,417,ry {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,418,redicateUtils.anyPredicate(Collections.EMPTY_LIST);
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,419, catch (IllegalArgumentException ex) {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,420,eturn;
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,422,ail();
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,425,ublic void testAnyPredicateEx6() {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,426,ry {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,427,ollection coll = new ArrayList();
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,428,oll.add(null);
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,429,oll.add(null);
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,430,redicateUtils.anyPredicate(coll);
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,431, catch (IllegalArgumentException ex) {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,432,eturn;
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,434,ail();
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,437,/ eitherPredicate
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,440,ublic void testEitherPredicate() {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,441,"ssertEquals(false, PredicateUtils.eitherPredicate(PredicateUtils.truePredicate(), PredicateUtils.truePredicate()).evaluate(null));"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,442,"ssertEquals(true, PredicateUtils.eitherPredicate(PredicateUtils.truePredicate(), PredicateUtils.falsePredicate()).evaluate(null));"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,443,"ssertEquals(true, PredicateUtils.eitherPredicate(PredicateUtils.falsePredicate(), PredicateUtils.truePredicate()).evaluate(null));"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,444,"ssertEquals(false, PredicateUtils.eitherPredicate(PredicateUtils.falsePredicate(), PredicateUtils.falsePredicate()).evaluate(null));"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,447,ublic void testEitherPredicateEx() {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,448,ry {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,449,"redicateUtils.eitherPredicate(null, null);"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,450, catch (IllegalArgumentException ex) {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,451,eturn;
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,453,ail();
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,456,/ onePredicate
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,459,ublic void testOnePredicate() {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,460,"ssertEquals(false, PredicateUtils.onePredicate(new Predicate[] {"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,461,"redicateUtils.truePredicate(), PredicateUtils.truePredicate(), PredicateUtils.truePredicate()}).evaluate(null));"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,462,"ssertEquals(false, PredicateUtils.onePredicate(new Predicate[] {"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,463,"redicateUtils.truePredicate(), PredicateUtils.falsePredicate(), PredicateUtils.truePredicate()}).evaluate(null));"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,464,"ssertEquals(true, PredicateUtils.onePredicate(new Predicate[] {"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,465,"redicateUtils.truePredicate(), PredicateUtils.falsePredicate(), PredicateUtils.falsePredicate()}).evaluate(null));"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,466,"ssertEquals(true, PredicateUtils.onePredicate(new Predicate[] {"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,467,"redicateUtils.falsePredicate(), PredicateUtils.truePredicate(), PredicateUtils.falsePredicate()}).evaluate(null));"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,468,"ssertEquals(true, PredicateUtils.onePredicate(new Predicate[] {"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,469,"redicateUtils.falsePredicate(), PredicateUtils.falsePredicate(), PredicateUtils.truePredicate()}).evaluate(null));"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,470,"ssertEquals(false, PredicateUtils.onePredicate(new Predicate[] {"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,471,"redicateUtils.falsePredicate(), PredicateUtils.falsePredicate(), PredicateUtils.falsePredicate()}).evaluate(null));"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,472,ollection coll = new ArrayList();
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,473,oll.add(PredicateUtils.truePredicate());
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,474,oll.add(PredicateUtils.truePredicate());
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,475,oll.add(PredicateUtils.truePredicate());
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,476,"ssertEquals(false, PredicateUtils.onePredicate(coll).evaluate(null));"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,477,oll.clear();
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,478,oll.add(PredicateUtils.truePredicate());
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,479,oll.add(PredicateUtils.falsePredicate());
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,480,oll.add(PredicateUtils.truePredicate());
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,481,"ssertEquals(false, PredicateUtils.onePredicate(coll).evaluate(null));"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,482,oll.clear();
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,483,oll.add(PredicateUtils.falsePredicate());
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,484,oll.add(PredicateUtils.falsePredicate());
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,485,oll.add(PredicateUtils.truePredicate());
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,486,"ssertEquals(true, PredicateUtils.onePredicate(coll).evaluate(null));"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,487,oll.clear();
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,488,oll.add(PredicateUtils.falsePredicate());
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,489,oll.add(PredicateUtils.falsePredicate());
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,490,oll.add(PredicateUtils.falsePredicate());
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,491,"ssertEquals(false, PredicateUtils.onePredicate(coll).evaluate(null));"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,494,ublic void testOnePredicateEx1() {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,495,ry {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,496,redicateUtils.onePredicate((Predicate[]) null);
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,497, catch (IllegalArgumentException ex) {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,498,eturn;
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,500,ail();
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,503,ublic void testOnePredicateEx2() {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,504,ry {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,505,redicateUtils.onePredicate(new Predicate[] {null});
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,506, catch (IllegalArgumentException ex) {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,507,eturn;
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,509,ail();
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,512,ublic void testOnePredicateEx3() {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,513,ry {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,514,"redicateUtils.onePredicate(new Predicate[] {null, null});"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,515, catch (IllegalArgumentException ex) {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,516,eturn;
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,518,ail();
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,521,ublic void testOnePredicateEx4() {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,522,ry {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,523,redicateUtils.onePredicate((Collection) null);
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,524, catch (IllegalArgumentException ex) {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,525,eturn;
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,527,ail();
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,530,ublic void testOnePredicateEx5() {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,531,ry {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,532,redicateUtils.onePredicate(Collections.EMPTY_LIST);
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,533, catch (IllegalArgumentException ex) {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,534,eturn;
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,536,ail();
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,539,ublic void testOnePredicateEx6() {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,540,ry {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,541,ollection coll = new ArrayList();
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,542,oll.add(null);
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,543,oll.add(null);
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,544,redicateUtils.onePredicate(coll);
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,545, catch (IllegalArgumentException ex) {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,546,eturn;
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,548,ail();
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,551,/ neitherPredicate
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,554,ublic void testNeitherPredicate() {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,555,"ssertEquals(false, PredicateUtils.neitherPredicate(PredicateUtils.truePredicate(), PredicateUtils.truePredicate()).evaluate(null));"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,556,"ssertEquals(false, PredicateUtils.neitherPredicate(PredicateUtils.truePredicate(), PredicateUtils.falsePredicate()).evaluate(null));"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,557,"ssertEquals(false, PredicateUtils.neitherPredicate(PredicateUtils.falsePredicate(), PredicateUtils.truePredicate()).evaluate(null));"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,558,"ssertEquals(true, PredicateUtils.neitherPredicate(PredicateUtils.falsePredicate(), PredicateUtils.falsePredicate()).evaluate(null));"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,561,ublic void testNeitherPredicateEx() {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,562,ry {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,563,"redicateUtils.neitherPredicate(null, null);"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,564, catch (IllegalArgumentException ex) {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,565,eturn;
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,567,ail();
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,570,/ nonePredicate
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,573,ublic void testNonePredicate() {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,574,"ssertEquals(false, PredicateUtils.nonePredicate(new Predicate[] {"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,575,"redicateUtils.truePredicate(), PredicateUtils.truePredicate(), PredicateUtils.truePredicate()}).evaluate(null));"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,576,"ssertEquals(false, PredicateUtils.nonePredicate(new Predicate[] {"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,577,"redicateUtils.truePredicate(), PredicateUtils.falsePredicate(), PredicateUtils.truePredicate()}).evaluate(null));"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,578,"ssertEquals(false, PredicateUtils.nonePredicate(new Predicate[] {"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,579,"redicateUtils.falsePredicate(), PredicateUtils.falsePredicate(), PredicateUtils.truePredicate()}).evaluate(null));"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,580,"ssertEquals(true, PredicateUtils.nonePredicate(new Predicate[] {"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,581,"redicateUtils.falsePredicate(), PredicateUtils.falsePredicate(), PredicateUtils.falsePredicate()}).evaluate(null));"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,582,ollection coll = new ArrayList();
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,583,oll.add(PredicateUtils.truePredicate());
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,584,oll.add(PredicateUtils.truePredicate());
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,585,oll.add(PredicateUtils.truePredicate());
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,586,"ssertEquals(false, PredicateUtils.nonePredicate(coll).evaluate(null));"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,587,oll.clear();
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,588,oll.add(PredicateUtils.truePredicate());
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,589,oll.add(PredicateUtils.falsePredicate());
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,590,oll.add(PredicateUtils.truePredicate());
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,591,"ssertEquals(false, PredicateUtils.nonePredicate(coll).evaluate(null));"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,592,oll.clear();
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,593,oll.add(PredicateUtils.falsePredicate());
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,594,oll.add(PredicateUtils.falsePredicate());
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,595,oll.add(PredicateUtils.truePredicate());
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,596,"ssertEquals(false, PredicateUtils.nonePredicate(coll).evaluate(null));"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,597,oll.clear();
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,598,oll.add(PredicateUtils.falsePredicate());
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,599,oll.add(PredicateUtils.falsePredicate());
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,600,oll.add(PredicateUtils.falsePredicate());
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,601,"ssertEquals(true, PredicateUtils.nonePredicate(coll).evaluate(null));"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,604,ublic void testNonePredicateEx1() {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,605,ry {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,606,redicateUtils.nonePredicate((Predicate[]) null);
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,607, catch (IllegalArgumentException ex) {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,608,eturn;
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,610,ail();
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,613,ublic void testNonePredicateEx2() {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,614,ry {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,615,redicateUtils.nonePredicate(new Predicate[] {null});
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,616, catch (IllegalArgumentException ex) {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,617,eturn;
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,619,ail();
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,622,ublic void testNonePredicateEx3() {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,623,ry {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,624,"redicateUtils.nonePredicate(new Predicate[] {null, null});"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,625, catch (IllegalArgumentException ex) {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,626,eturn;
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,628,ail();
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,631,ublic void testNonePredicateEx4() {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,632,ry {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,633,redicateUtils.nonePredicate((Collection) null);
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,634, catch (IllegalArgumentException ex) {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,635,eturn;
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,637,ail();
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,640,ublic void testNonePredicateEx5() {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,641,ry {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,642,redicateUtils.nonePredicate(Collections.EMPTY_LIST);
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,643, catch (IllegalArgumentException ex) {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,644,eturn;
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,646,ail();
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,649,ublic void testNonePredicateEx6() {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,650,ry {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,651,ollection coll = new ArrayList();
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,652,oll.add(null);
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,653,oll.add(null);
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,654,redicateUtils.nonePredicate(coll);
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,655, catch (IllegalArgumentException ex) {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,656,eturn;
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,658,ail();
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,661,/ instanceofPredicate
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,664,ublic void testInstanceOfPredicate() {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,665,ssertNotNull(PredicateUtils.instanceofPredicate(String.class));
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,666,"ssertEquals(false, PredicateUtils.instanceofPredicate(String.class).evaluate(null));"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,667,"ssertEquals(false, PredicateUtils.instanceofPredicate(String.class).evaluate(cObject));"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,668,"ssertEquals(true, PredicateUtils.instanceofPredicate(String.class).evaluate(cString));"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,669,"ssertEquals(false, PredicateUtils.instanceofPredicate(String.class).evaluate(cInteger));"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,672,/ uniquePredicate
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,675,ublic void testUniquePredicate() {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,676,redicate p = PredicateUtils.uniquePredicate();
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,677,"ssertEquals(true, p.evaluate(new Object()));"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,678,"ssertEquals(true, p.evaluate(new Object()));"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,679,"ssertEquals(true, p.evaluate(new Object()));"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,680,"ssertEquals(true, p.evaluate(cString));"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,681,"ssertEquals(false, p.evaluate(cString));"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,682,"ssertEquals(false, p.evaluate(cString));"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,685,/ asPredicate(Transformer)
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,688,ublic void testAsPredicateTransformer() {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,689,"ssertEquals(false, PredicateUtils.asPredicate(TransformerUtils.nopTransformer()).evaluate(Boolean.FALSE));"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,690,"ssertEquals(true, PredicateUtils.asPredicate(TransformerUtils.nopTransformer()).evaluate(Boolean.TRUE));"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,693,ublic void testAsPredicateTransformerEx1() {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,694,ry {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,695,redicateUtils.asPredicate(null);
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,696, catch (IllegalArgumentException ex) {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,697,eturn;
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,699,ail();
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,702,ublic void testAsPredicateTransformerEx2() {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,703,ry {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,704,redicateUtils.asPredicate(TransformerUtils.nopTransformer()).evaluate(null);
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,705, catch (PredicateException ex) {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,706,eturn;
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,708,ail();
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,711,/ invokerPredicate
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,714,ublic void testInvokerPredicate() {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,715,ist list = new ArrayList();
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,716,"ssertEquals(true, PredicateUtils.invokerPredicate(""isEmpty"").evaluate(list));"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,717,ist.add(new Object());
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,718,"ssertEquals(false, PredicateUtils.invokerPredicate(""isEmpty"").evaluate(list));"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,721,ublic void testInvokerPredicateEx1() {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,722,ry {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,723,redicateUtils.invokerPredicate(null);
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,724, catch (IllegalArgumentException ex) {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,725,eturn;
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,727,ail();
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,730,ublic void testInvokerPredicateEx2() {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,731,ry {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,732,"redicateUtils.invokerPredicate(""isEmpty"").evaluate(null);"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,733, catch (PredicateException ex) {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,734,eturn;
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,736,ail();
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,739,ublic void testInvokerPredicateEx3() {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,740,ry {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,741,"redicateUtils.invokerPredicate(""noSuchMethod"").evaluate(new Object());"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,742, catch (PredicateException ex) {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,743,eturn;
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,745,ail();
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,748,/ invokerPredicate2
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,751,ublic void testInvokerPredicate2() {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,752,ist list = new ArrayList();
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,753,"ssertEquals(false, PredicateUtils.invokerPredicate("
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,754,"contains"", new Class[] {Object.class}, new Object[] {cString}).evaluate(list));"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,755,ist.add(cString);
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,756,"ssertEquals(true, PredicateUtils.invokerPredicate("
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,757,"contains"", new Class[] {Object.class}, new Object[] {cString}).evaluate(list));"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,760,ublic void testInvokerPredicate2Ex1() {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,761,ry {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,762,"redicateUtils.invokerPredicate(null, null, null);"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,763, catch (IllegalArgumentException ex) {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,764,eturn;
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,766,ail();
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,769,ublic void testInvokerPredicate2Ex2() {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,770,ry {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,771,"redicateUtils.invokerPredicate(""contains"", new Class[] {Object.class}, new Object[] {cString}).evaluate(null);"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,772, catch (PredicateException ex) {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,773,eturn;
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,775,ail();
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,778,ublic void testInvokerPredicate2Ex3() {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,779,ry {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,780,redicateUtils.invokerPredicate(
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,781,"noSuchMethod"", new Class[] {Object.class}, new Object[] {cString}).evaluate(new Object());"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,782, catch (PredicateException ex) {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,783,eturn;
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,785,ail();
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,788,/ nullIsException
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,791,ublic void testNullIsExceptionPredicate() {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,792,"ssertEquals(true, PredicateUtils.nullIsExceptionPredicate(PredicateUtils.truePredicate()).evaluate(new Object()));"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,793,ry {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,794,redicateUtils.nullIsExceptionPredicate(PredicateUtils.truePredicate()).evaluate(null);
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,795, catch (PredicateException ex) {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,796,eturn;
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,798,ail();
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,801,ublic void testNullIsExceptionPredicateEx1() {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,802,ry {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,803,redicateUtils.nullIsExceptionPredicate(null);
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,804, catch (IllegalArgumentException ex) {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,805,eturn;
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,807,ail();
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,810,/ nullIsTrue
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,813,ublic void testNullIsTruePredicate() {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,814,"ssertEquals(true, PredicateUtils.nullIsTruePredicate(PredicateUtils.truePredicate()).evaluate(null));"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,815,"ssertEquals(true, PredicateUtils.nullIsTruePredicate(PredicateUtils.truePredicate()).evaluate(new Object()));"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,816,"ssertEquals(false, PredicateUtils.nullIsTruePredicate(PredicateUtils.falsePredicate()).evaluate(new Object()));"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,819,ublic void testNullIsTruePredicateEx1() {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,820,ry {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,821,redicateUtils.nullIsTruePredicate(null);
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,822, catch (IllegalArgumentException ex) {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,823,eturn;
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,825,ail();
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,828,/ nullIsFalse
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,831,ublic void testNullIsFalsePredicate() {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,832,"ssertEquals(false, PredicateUtils.nullIsFalsePredicate(PredicateUtils.truePredicate()).evaluate(null));"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,833,"ssertEquals(true, PredicateUtils.nullIsFalsePredicate(PredicateUtils.truePredicate()).evaluate(new Object()));"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,834,"ssertEquals(false, PredicateUtils.nullIsFalsePredicate(PredicateUtils.falsePredicate()).evaluate(new Object()));"
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,837,ublic void testNullIsFalsePredicateEx1() {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,838,ry {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,839,redicateUtils.nullIsFalsePredicate(null);
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,840, catch (IllegalArgumentException ex) {
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,841,eturn;
False,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,src/test/org/apache/commons/lang/functor/TestPredicateUtils.java,843,ail();
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,2," The Apache Software License, Version 1.1"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,4, Copyright (c) 2002 The Apache Software Foundation.  All rights
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,5, reserved.
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,7," Redistribution and use in source and binary forms, with or without"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,8," modification, are permitted provided that the following conditions"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,9, are met:
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,11, 1. Redistributions of source code must retain the above copyright
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,12,"    notice, this list of conditions and the following disclaimer."
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,14, 2. Redistributions in binary form must reproduce the above copyright
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,15,"    notice, this list of conditions and the following disclaimer in"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,16,    the documentation and/or other materials provided with the
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,17,    distribution.
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,19," 3. The end-user documentation included with the redistribution, if"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,20,"    any, must include the following acknowlegement:"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,21,"       ""This product includes software developed by the"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,22,"        Apache Software Foundation (http://www.apache.org/)."""
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,23,"    Alternately, this acknowlegement may appear in the software itself,"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,24,    if and wherever such third-party acknowlegements normally appear.
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,26," 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,27,"    Foundation"" must not be used to endorse or promote products derived"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,28,    from this software without prior written permission. For written
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,29,"    permission, please contact apache@apache.org."
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,31," 5. Products derived from this software may not be called ""Apache"""
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,32,"    nor may ""Apache"" appear in their names without prior written"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,33,    permission of the Apache Software Foundation.
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,35, THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,36," WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,37, OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,38, DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,39," ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,40," SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,41," LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,42," USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,43," ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,44, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,45," OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,46, SUCH DAMAGE.
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,49, This software consists of voluntary contributions made by many
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,50, individuals on behalf of the Apache Software Foundation.  For more
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,51," information on the Apache Software Foundation, please see"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,52, <http://www.apache.org/>.
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,54,ackage org.apache.commons.lang.functor;
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,56,mport java.io.Serializable;
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,57,mport java.util.ArrayList;
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,58,mport java.util.Collection;
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,59,mport java.util.Collections;
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,60,mport java.util.Date;
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,61,mport java.util.HashMap;
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,62,mport java.util.List;
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,63,mport java.util.Map;
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,65,mport junit.framework.Test;
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,66,mport junit.framework.TestSuite;
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,68,mport org.apache.commons.lang.SerializationException;
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,69,mport org.apache.commons.lang.functor.Executor;
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,70,mport org.apache.commons.lang.functor.ExecutorUtils;
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,71,mport org.apache.commons.lang.functor.Factory;
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,72,mport org.apache.commons.lang.functor.FactoryUtils;
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,73,mport org.apache.commons.lang.functor.Predicate;
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,74,mport org.apache.commons.lang.functor.PredicateUtils;
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,76, Tests the org.apache.commons.lang.functor.TransformerUtils class.
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,78," @author <a href=""mailto:scolebourne@joda.org"">Stephen Colebourne</a>"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,79," @version $Id: TestTransformerUtils.java,v 1.5 2002/12/15 12:30:44 scolebourne Exp $"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,81,ublic class TestTransformerUtils extends junit.framework.TestCase {
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,83,rivate static final Object cObject = new Object();
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,84,"rivate static final Object cString = ""Hello"";"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,85,rivate static final Object cInteger = new Integer(6);
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,88, Construct
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,90,ublic TestTransformerUtils(String name) {
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,91,uper(name);
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,95, Return class aa a test suite.
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,97,ublic static Test suite() {
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,98,eturn new TestSuite(TestTransformerUtils.class);
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,102, Set up instance variables required by this test case.
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,104,ublic void setUp() {
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,108, Tear down instance variables required by this test case.
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,110,ublic void tearDown() {
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,113,/ exceptionTransformer
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,116,ublic void testExceptionTransformer() {
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,117,ssertNotNull(TransformerUtils.exceptionTransformer());
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,118,"ssertSame(TransformerUtils.exceptionTransformer(), TransformerUtils.exceptionTransformer());"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,119,ry {
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,120,ransformerUtils.exceptionTransformer().transform(null);
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,121, catch (TransformerException ex) {
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,122,ry {
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,123,ransformerUtils.exceptionTransformer().transform(cString);
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,124, catch (TransformerException ex2) {
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,125,eturn;
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,128,ail();
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,131,/ nullTransformer
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,134,ublic void testNullTransformer() {
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,135,ssertNotNull(TransformerUtils.nullTransformer());
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,136,"ssertSame(TransformerUtils.nullTransformer(), TransformerUtils.nullTransformer());"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,137,"ssertEquals(null, TransformerUtils.nullTransformer().transform(null));"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,138,"ssertEquals(null, TransformerUtils.nullTransformer().transform(cObject));"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,139,"ssertEquals(null, TransformerUtils.nullTransformer().transform(cString));"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,140,"ssertEquals(null, TransformerUtils.nullTransformer().transform(cInteger));"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,143,/ nopTransformer
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,146,ublic void testNopTransformer() {
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,147,ssertNotNull(TransformerUtils.nullTransformer());
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,148,"ssertSame(TransformerUtils.nullTransformer(), TransformerUtils.nullTransformer());"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,149,"ssertEquals(null, TransformerUtils.nopTransformer().transform(null));"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,150,"ssertEquals(cObject, TransformerUtils.nopTransformer().transform(cObject));"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,151,"ssertEquals(cString, TransformerUtils.nopTransformer().transform(cString));"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,152,"ssertEquals(cInteger, TransformerUtils.nopTransformer().transform(cInteger));"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,155,/ constantTransformer
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,158,ublic void testConstantTransformer() {
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,159,"ssertEquals(cObject, TransformerUtils.constantTransformer(cObject).transform(null));"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,160,"ssertEquals(cObject, TransformerUtils.constantTransformer(cObject).transform(cObject));"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,161,"ssertEquals(cObject, TransformerUtils.constantTransformer(cObject).transform(cString));"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,162,"ssertEquals(cObject, TransformerUtils.constantTransformer(cObject).transform(cInteger));"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,165,/ cloneTransformer
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,168,ublic void testCloneTransformer() {
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,169,"ssertEquals(null, TransformerUtils.cloneTransformer().transform(null));"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,170,"ssertEquals(cString, TransformerUtils.cloneTransformer().transform(cString));"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,171,"ssertEquals(cInteger, TransformerUtils.cloneTransformer().transform(cInteger));"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,172,ry {
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,173,"ssertEquals(cObject, TransformerUtils.cloneTransformer().transform(cObject));"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,174, catch (TransformerException ex) {
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,175,eturn;
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,177,ail();
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,180,/ mapTransformer
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,183,ublic void testMapTransformer() {
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,184,ap map = new HashMap();
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,185,"ap.put(null, new Integer(0));"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,186,"ap.put(cObject, new Integer(1));"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,187,"ap.put(cString, new Integer(2));"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,188,"ssertEquals(new Integer(0), TransformerUtils.mapTransformer(map).transform(null));"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,189,"ssertEquals(new Integer(1), TransformerUtils.mapTransformer(map).transform(cObject));"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,190,"ssertEquals(new Integer(2), TransformerUtils.mapTransformer(map).transform(cString));"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,191,"ssertEquals(null, TransformerUtils.mapTransformer(map).transform(cInteger));"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,194,/ commandTransformer
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,197,ublic void testExecutorTransformer() {
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,198,"ssertEquals(null, TransformerUtils.asTransformer(ExecutorUtils.nopExecutor()).transform(null));"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,199,"ssertEquals(cObject, TransformerUtils.asTransformer(ExecutorUtils.nopExecutor()).transform(cObject));"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,200,"ssertEquals(cString, TransformerUtils.asTransformer(ExecutorUtils.nopExecutor()).transform(cString));"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,201,"ssertEquals(cInteger, TransformerUtils.asTransformer(ExecutorUtils.nopExecutor()).transform(cInteger));"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,202,ry {
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,203,ransformerUtils.asTransformer((Executor) null);
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,204, catch (IllegalArgumentException ex) {
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,205,eturn;
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,207,ail();
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,210,/ predicateTransformer
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,213,ublic void testPredicateTransformer() {
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,214,"ssertEquals(Boolean.TRUE, TransformerUtils.asTransformer(PredicateUtils.truePredicate()).transform(null));"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,215,"ssertEquals(Boolean.TRUE, TransformerUtils.asTransformer(PredicateUtils.truePredicate()).transform(cObject));"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,216,"ssertEquals(Boolean.TRUE, TransformerUtils.asTransformer(PredicateUtils.truePredicate()).transform(cString));"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,217,"ssertEquals(Boolean.TRUE, TransformerUtils.asTransformer(PredicateUtils.truePredicate()).transform(cInteger));"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,218,ry {
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,219,ransformerUtils.asTransformer((Predicate) null);
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,220, catch (IllegalArgumentException ex) {
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,221,eturn;
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,223,ail();
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,226,/ factoryTransformer
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,229,ublic void testFactoryTransformer() {
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,230,"ssertEquals(null, TransformerUtils.asTransformer(FactoryUtils.nullFactory()).transform(null));"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,231,"ssertEquals(null, TransformerUtils.asTransformer(FactoryUtils.nullFactory()).transform(cObject));"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,232,"ssertEquals(null, TransformerUtils.asTransformer(FactoryUtils.nullFactory()).transform(cString));"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,233,"ssertEquals(null, TransformerUtils.asTransformer(FactoryUtils.nullFactory()).transform(cInteger));"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,234,ry {
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,235,ransformerUtils.asTransformer((Factory) null);
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,236, catch (IllegalArgumentException ex) {
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,237,eturn;
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,239,ail();
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,242,/ chainedTransformer
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,245,ublic void testChainedTransformer() {
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,246,"ransformer a = TransformerUtils.constantTransformer(""A"");"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,247,"ransformer b = TransformerUtils.constantTransformer(""B"");"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,249,"ssertEquals(""A"", TransformerUtils.chainedTransformer(b, a).transform(null));"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,250,"ssertEquals(""B"", TransformerUtils.chainedTransformer(a, b).transform(null));"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,251,"ssertEquals(""A"", TransformerUtils.chainedTransformer(new Transformer[] {b, a}).transform(null));"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,252,ollection coll = new ArrayList();
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,253,oll.add(b);
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,254,oll.add(a);
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,255,"ssertEquals(""A"", TransformerUtils.chainedTransformer(coll).transform(null));"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,258,ublic void testChainedTransformerEx1a() {
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,259,ry {
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,260,"ransformerUtils.chainedTransformer(null, null);"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,261, catch (IllegalArgumentException ex) {
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,262,eturn;
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,264,ail();
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,267,ublic void testChainedTransformerEx1b() {
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,268,ry {
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,269,ransformerUtils.chainedTransformer((Transformer[]) null);
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,270, catch (IllegalArgumentException ex) {
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,271,eturn;
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,273,ail();
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,276,ublic void testChainedTransformerEx1c() {
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,277,ry {
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,278,ransformerUtils.chainedTransformer((Collection) null);
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,279, catch (IllegalArgumentException ex) {
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,280,eturn;
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,282,ail();
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,285,ublic void testChainedTransformerEx2() {
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,286,ry {
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,287,ransformerUtils.chainedTransformer(new Transformer[0]);
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,288, catch (IllegalArgumentException ex) {
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,289,eturn;
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,291,ail();
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,294,ublic void testChainedTransformerEx3() {
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,295,ry {
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,296,"ransformerUtils.chainedTransformer(new Transformer[] {null, null});"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,297, catch (IllegalArgumentException ex) {
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,298,eturn;
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,300,ail();
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,303,ublic void testChainedTransformerEx4() {
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,304,ry {
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,305,ransformerUtils.chainedTransformer(Collections.EMPTY_LIST);
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,306, catch (IllegalArgumentException ex) {
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,307,eturn;
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,309,ail();
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,312,ublic void testChainedTransformerEx5() {
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,313,ry {
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,314,ollection coll = new ArrayList();
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,315,oll.add(null);
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,316,oll.add(null);
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,317,ransformerUtils.chainedTransformer(coll);
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,318, catch (IllegalArgumentException ex) {
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,319,eturn;
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,321,ail();
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,324,/ switchTransformer
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,327,ublic void testSwitchTransformer() {
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,328,"ransformer a = TransformerUtils.constantTransformer(""A"");"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,329,"ransformer b = TransformerUtils.constantTransformer(""B"");"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,330,"ransformer c = TransformerUtils.constantTransformer(""C"");"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,332,"ssertEquals(""A"", TransformerUtils.switchTransformer(PredicateUtils.truePredicate(), a, b).transform(null));"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,333,"ssertEquals(""B"", TransformerUtils.switchTransformer(PredicateUtils.falsePredicate(), a, b).transform(null));"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,335,"ssertEquals(null, TransformerUtils.switchTransformer("
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,336,"ew Predicate[] {PredicateUtils.equalPredicate(""HELLO""), PredicateUtils.equalPredicate(""THERE"")},"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,337,"ew Transformer[] {a, b}).transform(""WELL""));"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,338,"ssertEquals(""A"", TransformerUtils.switchTransformer("
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,339,"ew Predicate[] {PredicateUtils.equalPredicate(""HELLO""), PredicateUtils.equalPredicate(""THERE"")},"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,340,"ew Transformer[] {a, b}).transform(""HELLO""));"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,341,"ssertEquals(""B"", TransformerUtils.switchTransformer("
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,342,"ew Predicate[] {PredicateUtils.equalPredicate(""HELLO""), PredicateUtils.equalPredicate(""THERE"")},"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,343,"ew Transformer[] {a, b}).transform(""THERE""));"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,345,"ssertEquals(""C"", TransformerUtils.switchTransformer("
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,346,"ew Predicate[] {PredicateUtils.equalPredicate(""HELLO""), PredicateUtils.equalPredicate(""THERE"")},"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,347,"ew Transformer[] {a, b}, c).transform(""WELL""));"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,349,ap map = new HashMap();
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,350,"ap.put(PredicateUtils.equalPredicate(""HELLO""), a);"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,351,"ap.put(PredicateUtils.equalPredicate(""THERE""), b);"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,352,"ssertEquals(null, TransformerUtils.switchTransformer(map).transform(""WELL""));"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,353,"ssertEquals(""A"", TransformerUtils.switchTransformer(map).transform(""HELLO""));"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,354,"ssertEquals(""B"", TransformerUtils.switchTransformer(map).transform(""THERE""));"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,355,"ap.put(null, c);"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,356,"ssertEquals(""C"", TransformerUtils.switchTransformer(map).transform(""WELL""));"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,359,ublic void testSwitchTransformerEx1a() {
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,360,ry {
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,361,"ransformerUtils.switchTransformer(null, null);"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,362, catch (IllegalArgumentException ex) {
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,363,eturn;
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,365,ail();
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,368,ublic void testSwitchTransformerEx1b() {
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,369,ry {
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,370,"ransformerUtils.switchTransformer((Predicate[]) null, (Transformer[]) null);"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,371, catch (IllegalArgumentException ex) {
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,372,eturn;
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,374,ail();
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,377,ublic void testSwitchTransformerEx1c() {
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,378,ry {
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,379,ransformerUtils.switchTransformer((Map) null);
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,380, catch (IllegalArgumentException ex) {
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,381,eturn;
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,383,ail();
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,386,ublic void testSwitchTransformerEx2() {
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,387,ry {
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,388,"ransformerUtils.switchTransformer(new Predicate[0], new Transformer[0]);"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,389, catch (IllegalArgumentException ex) {
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,390,eturn;
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,392,ail();
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,395,ublic void testSwitchTransformerEx3() {
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,396,ry {
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,397,"ransformerUtils.switchTransformer(new Predicate[2], new Transformer[2]);"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,398, catch (IllegalArgumentException ex) {
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,399,eturn;
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,401,ail();
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,404,ublic void testSwitchTransformerEx4() {
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,405,ry {
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,406,ransformerUtils.switchTransformer(new HashMap());
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,407, catch (IllegalArgumentException ex) {
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,408,eturn;
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,410,ail();
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,413,ublic void testSwitchTransformerEx5() {
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,414,ry {
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,415,ap map = new HashMap();
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,416,"ap.put(null, null);"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,417,"ap.put(null, null);"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,418,ransformerUtils.switchTransformer(map);
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,419, catch (IllegalArgumentException ex) {
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,420,eturn;
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,422,ail();
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,425,ublic void testSwitchTransformerEx6() {
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,426,ry {
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,427,"ransformerUtils.switchTransformer(new Predicate[2], new Transformer[1]);"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,428, catch (IllegalArgumentException ex) {
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,429,eturn;
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,431,ail();
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,434,/ switchMapTransformer
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,437,ublic void testSwitchMapTransformer() {
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,438,"ransformer a = TransformerUtils.constantTransformer(""A"");"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,439,"ransformer b = TransformerUtils.constantTransformer(""B"");"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,440,"ransformer c = TransformerUtils.constantTransformer(""C"");"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,442,ap map = new HashMap();
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,443,"ap.put(""HELLO"", a);"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,444,"ap.put(""THERE"", b);"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,445,"ssertEquals(null, TransformerUtils.switchMapTransformer(map).transform(""WELL""));"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,446,"ssertEquals(""A"", TransformerUtils.switchMapTransformer(map).transform(""HELLO""));"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,447,"ssertEquals(""B"", TransformerUtils.switchMapTransformer(map).transform(""THERE""));"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,448,"ap.put(null, c);"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,449,"ssertEquals(""C"", TransformerUtils.switchMapTransformer(map).transform(""WELL""));"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,452,ublic void testSwitchMapTransformerEx1() {
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,453,ry {
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,454,ransformerUtils.switchMapTransformer(null);
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,455, catch (IllegalArgumentException ex) {
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,456,eturn;
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,458,ail();
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,461,ublic void testSwitchMapTransformerEx2() {
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,462,ry {
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,463,ransformerUtils.switchMapTransformer(new HashMap());
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,464, catch (IllegalArgumentException ex) {
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,465,eturn;
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,467,ail();
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,470,/ invokerTransformer
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,473,ublic void testInvokerTransformer() {
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,474,ist list = new ArrayList();
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,475,"ssertEquals(new Integer(0), TransformerUtils.invokerTransformer(""size"").transform(list));"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,476,ist.add(new Object());
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,477,"ssertEquals(new Integer(1), TransformerUtils.invokerTransformer(""size"").transform(list));"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,478,"ssertEquals(null, TransformerUtils.invokerTransformer(""size"").transform(null));"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,481,ublic void testInvokerTransformerEx1() {
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,482,ry {
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,483,ransformerUtils.invokerTransformer(null);
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,484, catch (IllegalArgumentException ex) {
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,485,eturn;
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,487,ail();
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,490,ublic void testInvokerTransformerEx3() {
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,491,ry {
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,492,"ransformerUtils.invokerTransformer(""noSuchMethod"").transform(new Object());"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,493, catch (TransformerException ex) {
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,494,eturn;
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,496,ail();
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,499,/ invokerTransformer2
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,502,ublic void testInvokerTransformer2() {
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,503,ist list = new ArrayList();
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,504,"ssertEquals(Boolean.FALSE, TransformerUtils.invokerTransformer("
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,505,"contains"", new Class[] {Object.class}, new Object[] {cString}).transform(list));"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,506,ist.add(cString);
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,507,"ssertEquals(Boolean.TRUE, TransformerUtils.invokerTransformer("
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,508,"contains"", new Class[] {Object.class}, new Object[] {cString}).transform(list));"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,509,"ssertEquals(null, TransformerUtils.invokerTransformer("
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,510,"contains"", new Class[] {Object.class}, new Object[] {cString}).transform(null));"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,513,ublic void testInvokerTransformer2Ex1() {
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,514,ry {
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,515,"ransformerUtils.invokerTransformer(null, null, null);"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,516, catch (IllegalArgumentException ex) {
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,517,eturn;
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,519,ail();
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,522,ublic void testInvokerTransformer2Ex3() {
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,523,ry {
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,524,ransformerUtils.invokerTransformer(
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,525,"noSuchMethod"", new Class[] {Object.class}, new Object[] {cString}).transform(new Object());"
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,526, catch (TransformerException ex) {
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,527,eturn;
False,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,src/test/org/apache/commons/lang/functor/TestTransformerUtils.java,529,ail();
