is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,35," @version $Id: ClassUtils.java,v 1.31 2004/10/08 00:10:59 scolebourne Exp $"
True,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,35,"* @version $Id: ClassUtils.java,v 1.32 2004/10/15 20:57:18 scolebourne Exp $"
False,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,250,/     * <p>Gets a <code>List</code> of subclasses of the specified class.</p>
False,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,252,/     * <p>This method searches the classpath to find all the subclasses
False,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,253,"/     * of a particular class available. No classes are loaded, the"
False,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,254,"/     * returned list contains class names, not classes.</p>"
False,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,256,/     * @param cls  the class to find subclasses for
False,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,257,/     * @return the <code>List</code> of subclass String class names
False,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,258,/     * @throws IllegalArgumentException if the class is <code>null</code>
False,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,260,/    public static List getAllSubclassNames(Class cls) {
False,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,261,/        if (cls == null) {
False,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,262,"/            throw new IllegalArgumentException(""The class must not be null"");"
False,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,264,/        // TODO Use JavaWorld tip for searching the classpath
False,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,265,/        return null;
False,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,269,/     * <p>Gets a <code>List</code> of subclasses of the specified class.</p>
False,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,271,/     * <p>This method searches the classpath to find all the subclasses
False,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,272,/     * of a particular class available.</p>
False,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,274,/     * @param cls  the class to find subclasses for
False,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,275,/     * @return the <code>List</code> of subclasses
False,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,276,/     * @throws IllegalArgumentException if the class is <code>null</code>
False,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,278,/    public static List getAllSubclasses(Class cls) {
False,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,279,/        List names = getAllSubclassNames(cls);
False,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,280,/        return convertClassNamesToClasses(names);
False,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,284,/     * <p>Gets a <code>List</code> of implementations of the specified interface.</p>
False,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,286,/     * <p>This method searches the classpath to find all the implementations
False,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,287,"/     * of a particular interface available. No classes are loaded, the"
False,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,288,"/     * returned list contains class names, not classes.</p>"
False,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,290,/     * @param cls  the class to find sub classes for
False,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,291,/     * @return the <code>List</code> of implementation String class names
False,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,292,/     * @throws IllegalArgumentException if the class is <code>null</code>
False,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,294,/    public static List getAllImplementationClassNames(Class cls) {
False,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,295,/        if (cls == null) {
False,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,296,"/            throw new IllegalArgumentException(""The class must not be null"");"
False,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,298,/        // TODO Use JavaWorld tip for searching the classpath
False,src/java/org/apache/commons/lang/ClassUtils.java,src/java/org/apache/commons/lang/ClassUtils.java,299,/        return null;
