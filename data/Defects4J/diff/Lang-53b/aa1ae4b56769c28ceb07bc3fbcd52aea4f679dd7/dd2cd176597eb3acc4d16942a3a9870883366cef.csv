is_addition,old_file_path,new_file_path,line_num,content
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,2,"* The Apache Software License, Version 1.1"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,4,* Copyright (c) 2002 The Apache Software Foundation.  All rights
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,5,* reserved.
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,7,"* Redistribution and use in source and binary forms, with or without"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,8,"* modification, are permitted provided that the following conditions"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,9,* are met:
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,11,* 1. Redistributions of source code must retain the above copyright
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,12,"*    notice, this list of conditions and the following disclaimer."
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,14,* 2. Redistributions in binary form must reproduce the above copyright
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,15,"*    notice, this list of conditions and the following disclaimer in"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,16,*    the documentation and/or other materials provided with the
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,17,*    distribution.
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,19,"* 3. The end-user documentation included with the redistribution, if"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,20,"*    any, must include the following acknowlegement:"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,21,"*       ""This product includes software developed by the"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,22,"*        Apache Software Foundation (http://www.apache.org/)."""
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,23,"*    Alternately, this acknowlegement may appear in the software itself,"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,24,*    if and wherever such third-party acknowlegements normally appear.
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,26,"* 4. The names ""The Jakarta Project"", ""Commons"", and ""Apache Software"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,27,"*    Foundation"" must not be used to endorse or promote products derived"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,28,*    from this software without prior written permission. For written
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,29,"*    permission, please contact apache@apache.org."
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,31,"* 5. Products derived from this software may not be called ""Apache"""
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,32,"*    nor may ""Apache"" appear in their names without prior written"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,33,*    permission of the Apache Software Foundation.
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,35,* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,36,"* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,37,* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,38,* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,39,"* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,40,"* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,41,"* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,42,"* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,43,"* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,44,* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,45,"* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,46,* SUCH DAMAGE.
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,49,* This software consists of voluntary contributions made by many
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,50,* individuals on behalf of the Apache Software Foundation.  For more
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,51,"* information on the Apache Software Foundation, please see"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,52,* <http://www.apache.org/>.
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,54,package org.apache.commons.lang.builder;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,56,import junit.framework.Test;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,57,import junit.framework.TestCase;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,58,import junit.framework.TestSuite;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,59,import junit.textui.TestRunner;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,61,* Unit tests {@link org.apache.commons.lang.EqualsBuilder}.
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,63,"* @author <a href=""mailto:sdowney@panix.com"">Steve Downey</a>"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,64,"* @author <a href=""mailto:scolebourne@joda.org"">Stephen Colebourne</a>"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,65,"* @version $Id: EqualsBuilderTest.java,v 1.1 2002/09/12 22:00:35 scolebourne Exp $"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,67,public class EqualsBuilderTest extends TestCase {
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,69,public EqualsBuilderTest(String name) {
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,70,super(name);
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,73,public static void main(String[] args) {
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,74,TestRunner.run(suite());
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,77,public static Test suite() {
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,78,TestSuite suite = new TestSuite(EqualsBuilderTest.class);
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,79,"suite.setName(""HashCodeBuilder Tests"");"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,80,return suite;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,83,protected void setUp() throws Exception {
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,84,super.setUp();
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,87,protected void tearDown() throws Exception {
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,88,super.tearDown();
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,93,static class TestObject {
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,94,private int a;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,95,public TestObject(int a) {
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,96,this.a = a;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,98,public boolean equals(Object o) {
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,99,if (o == this) {
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,100,return true;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,102,if (!(o instanceof TestObject)) {
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,103,return false;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,105,TestObject rhs = (TestObject) o;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,106,return (a == rhs.a);
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,109,public void setA(int a) {
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,110,this.a = a;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,113,public int getA() {
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,114,return a;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,118,public void testReflectionEquals() {
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,119,TestObject o1 = new TestObject(4);
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,120,TestObject o2 = new TestObject(5);
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,121,"assertTrue(EqualsBuilder.reflectionEquals(o1, o1));"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,122,"assertTrue(!EqualsBuilder.reflectionEquals(o1, o2));"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,123,o2.setA(4);
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,124,"assertTrue(EqualsBuilder.reflectionEquals(o1, o2));"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,126,"assertTrue(!EqualsBuilder.reflectionEquals(o1, this));"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,128,"assertTrue(!EqualsBuilder.reflectionEquals(o1, null));"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,129,"assertTrue(!EqualsBuilder.reflectionEquals(null, o2));"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,130,"assertTrue(EqualsBuilder.reflectionEquals((Object) null, (Object) null));"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,133,public void testObject() {
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,134,TestObject o1 = new TestObject(4);
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,135,TestObject o2 = new TestObject(5);
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,136,"assertTrue(new EqualsBuilder().append(o1, o1).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,137,"assertTrue(!new EqualsBuilder().append(o1, o2).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,138,o2.setA(4);
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,139,"assertTrue(new EqualsBuilder().append(o1, o2).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,141,"assertTrue(!new EqualsBuilder().append(o1, this).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,143,"assertTrue(!new EqualsBuilder().append(o1, null).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,144,"assertTrue(!new EqualsBuilder().append(null, o2).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,145,"assertTrue(new EqualsBuilder().append((Object) null, (Object) null).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,148,public void testLong() {
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,149,long o1 = 1L;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,150,long o2 = 2L;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,151,"assertTrue(new EqualsBuilder().append(o1, o1).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,152,"assertTrue(!new EqualsBuilder().append(o1, o2).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,155,public void testInt() {
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,156,int o1 = 1;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,157,int o2 = 2;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,158,"assertTrue(new EqualsBuilder().append(o1, o1).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,159,"assertTrue(!new EqualsBuilder().append(o1, o2).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,162,public void testShort() {
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,163,short o1 = 1;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,164,short o2 = 2;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,165,"assertTrue(new EqualsBuilder().append(o1, o1).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,166,"assertTrue(!new EqualsBuilder().append(o1, o2).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,169,public void testChar() {
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,170,char o1 = 1;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,171,char o2 = 2;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,172,"assertTrue(new EqualsBuilder().append(o1, o1).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,173,"assertTrue(!new EqualsBuilder().append(o1, o2).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,176,public void testByte() {
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,177,byte o1 = 1;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,178,byte o2 = 2;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,179,"assertTrue(new EqualsBuilder().append(o1, o1).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,180,"assertTrue(!new EqualsBuilder().append(o1, o2).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,183,public void testDouble() {
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,184,double o1 = 1;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,185,double o2 = 2;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,186,"assertTrue(new EqualsBuilder().append(o1, o1).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,187,"assertTrue(!new EqualsBuilder().append(o1, o2).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,188,"assertTrue(!new EqualsBuilder().append(o1, Double.NaN).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,189,"assertTrue(new EqualsBuilder().append(Double.NaN, Double.NaN).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,190,"assertTrue(new EqualsBuilder().append(Double.POSITIVE_INFINITY, Double.POSITIVE_INFINITY).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,193,public void testFloat() {
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,194,float o1 = 1;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,195,float o2 = 2;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,196,"assertTrue(new EqualsBuilder().append(o1, o1).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,197,"assertTrue(!new EqualsBuilder().append(o1, o2).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,198,"assertTrue(!new EqualsBuilder().append(o1, Float.NaN).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,199,"assertTrue(new EqualsBuilder().append(Float.NaN, Float.NaN).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,200,"assertTrue(new EqualsBuilder().append(Float.POSITIVE_INFINITY, Float.POSITIVE_INFINITY).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,203,public void testBoolean() {
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,204,boolean o1 = true;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,205,boolean o2 = false;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,206,"assertTrue(new EqualsBuilder().append(o1, o1).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,207,"assertTrue(!new EqualsBuilder().append(o1, o2).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,210,public void testObjectArray() {
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,211,TestObject[] obj1 = new TestObject[2];
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,212,obj1[0] = new TestObject(4);
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,213,obj1[1] = new TestObject(5);
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,214,TestObject[] obj2 = new TestObject[2];
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,215,obj2[0] = new TestObject(4);
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,216,obj2[1] = new TestObject(5);
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,217,"assertTrue(new EqualsBuilder().append(obj1, obj1).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,218,"assertTrue(new EqualsBuilder().append(obj1, obj2).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,219,obj1[1].setA(6);
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,220,"assertTrue(!new EqualsBuilder().append(obj1, obj2).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,222,obj2 = null;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,223,"assertTrue(!new EqualsBuilder().append(obj1, obj2).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,224,obj1 = null;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,225,"assertTrue(new EqualsBuilder().append(obj1, obj2).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,228,public void testLongArray() {
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,229,long[] obj1 = new long[2];
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,230,obj1[0] = 5L;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,231,obj1[1] = 6L;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,232,long[] obj2 = new long[2];
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,233,obj2[0] = 5L;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,234,obj2[1] = 6L;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,235,"assertTrue(new EqualsBuilder().append(obj1, obj1).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,236,"assertTrue(new EqualsBuilder().append(obj1, obj2).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,237,obj1[1] = 7;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,238,"assertTrue(!new EqualsBuilder().append(obj1, obj2).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,240,obj2 = null;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,241,"assertTrue(!new EqualsBuilder().append(obj1, obj2).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,242,obj1 = null;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,243,"assertTrue(new EqualsBuilder().append(obj1, obj2).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,246,public void testIntArray() {
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,247,int[] obj1 = new int[2];
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,248,obj1[0] = 5;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,249,obj1[1] = 6;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,250,int[] obj2 = new int[2];
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,251,obj2[0] = 5;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,252,obj2[1] = 6;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,253,"assertTrue(new EqualsBuilder().append(obj1, obj1).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,254,"assertTrue(new EqualsBuilder().append(obj1, obj2).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,255,obj1[1] = 7;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,256,"assertTrue(!new EqualsBuilder().append(obj1, obj2).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,258,obj2 = null;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,259,"assertTrue(!new EqualsBuilder().append(obj1, obj2).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,260,obj1 = null;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,261,"assertTrue(new EqualsBuilder().append(obj1, obj2).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,264,public void testShortArray() {
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,265,short[] obj1 = new short[2];
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,266,obj1[0] = 5;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,267,obj1[1] = 6;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,268,short[] obj2 = new short[2];
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,269,obj2[0] = 5;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,270,obj2[1] = 6;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,271,"assertTrue(new EqualsBuilder().append(obj1, obj1).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,272,"assertTrue(new EqualsBuilder().append(obj1, obj2).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,273,obj1[1] = 7;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,274,"assertTrue(!new EqualsBuilder().append(obj1, obj2).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,276,obj2 = null;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,277,"assertTrue(!new EqualsBuilder().append(obj1, obj2).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,278,obj1 = null;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,279,"assertTrue(new EqualsBuilder().append(obj1, obj2).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,282,public void testCharArray() {
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,283,char[] obj1 = new char[2];
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,284,obj1[0] = 5;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,285,obj1[1] = 6;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,286,char[] obj2 = new char[2];
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,287,obj2[0] = 5;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,288,obj2[1] = 6;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,289,"assertTrue(new EqualsBuilder().append(obj1, obj1).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,290,"assertTrue(new EqualsBuilder().append(obj1, obj2).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,291,obj1[1] = 7;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,292,"assertTrue(!new EqualsBuilder().append(obj1, obj2).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,294,obj2 = null;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,295,"assertTrue(!new EqualsBuilder().append(obj1, obj2).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,296,obj1 = null;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,297,"assertTrue(new EqualsBuilder().append(obj1, obj2).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,300,public void testByteArray() {
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,301,byte[] obj1 = new byte[2];
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,302,obj1[0] = 5;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,303,obj1[1] = 6;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,304,byte[] obj2 = new byte[2];
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,305,obj2[0] = 5;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,306,obj2[1] = 6;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,307,"assertTrue(new EqualsBuilder().append(obj1, obj1).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,308,"assertTrue(new EqualsBuilder().append(obj1, obj2).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,309,obj1[1] = 7;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,310,"assertTrue(!new EqualsBuilder().append(obj1, obj2).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,312,obj2 = null;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,313,"assertTrue(!new EqualsBuilder().append(obj1, obj2).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,314,obj1 = null;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,315,"assertTrue(new EqualsBuilder().append(obj1, obj2).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,318,public void testDoubleArray() {
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,319,double[] obj1 = new double[2];
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,320,obj1[0] = 5;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,321,obj1[1] = 6;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,322,double[] obj2 = new double[2];
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,323,obj2[0] = 5;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,324,obj2[1] = 6;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,325,"assertTrue(new EqualsBuilder().append(obj1, obj1).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,326,"assertTrue(new EqualsBuilder().append(obj1, obj2).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,327,obj1[1] = 7;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,328,"assertTrue(!new EqualsBuilder().append(obj1, obj2).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,330,obj2 = null;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,331,"assertTrue(!new EqualsBuilder().append(obj1, obj2).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,332,obj1 = null;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,333,"assertTrue(new EqualsBuilder().append(obj1, obj2).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,336,public void testFloatArray() {
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,337,float[] obj1 = new float[2];
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,338,obj1[0] = 5;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,339,obj1[1] = 6;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,340,float[] obj2 = new float[2];
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,341,obj2[0] = 5;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,342,obj2[1] = 6;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,343,"assertTrue(new EqualsBuilder().append(obj1, obj1).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,344,"assertTrue(new EqualsBuilder().append(obj1, obj2).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,345,obj1[1] = 7;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,346,"assertTrue(!new EqualsBuilder().append(obj1, obj2).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,348,obj2 = null;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,349,"assertTrue(!new EqualsBuilder().append(obj1, obj2).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,350,obj1 = null;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,351,"assertTrue(new EqualsBuilder().append(obj1, obj2).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,354,public void testBooleanArray() {
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,355,boolean[] obj1 = new boolean[2];
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,356,obj1[0] = true;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,357,obj1[1] = false;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,358,boolean[] obj2 = new boolean[2];
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,359,obj2[0] = true;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,360,obj2[1] = false;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,361,"assertTrue(new EqualsBuilder().append(obj1, obj1).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,362,"assertTrue(new EqualsBuilder().append(obj1, obj2).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,363,obj1[1] = true;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,364,"assertTrue(!new EqualsBuilder().append(obj1, obj2).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,366,obj2 = null;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,367,"assertTrue(!new EqualsBuilder().append(obj1, obj2).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,368,obj1 = null;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,369,"assertTrue(new EqualsBuilder().append(obj1, obj2).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,372,public void testMultiLongArray() {
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,373,long[][] array1 = new long[2][2];
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,374,long[][] array2 = new long[2][2];
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,375,for (int i = 0; i < array1.length; ++i) {
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,376,for (int j = 0; j < array1[0].length; j++) {
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,377,array1[i][j] = (i + 1) * (j + 1);
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,378,array2[i][j] = (i + 1) * (j + 1);
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,381,"assertTrue(new EqualsBuilder().append(array1, array1).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,382,"assertTrue(new EqualsBuilder().append(array1, array2).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,383,array1[1][1] = 0;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,384,"assertTrue(!new EqualsBuilder().append(array1, array2).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,387,public void testMultiIntArray() {
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,388,int[][] array1 = new int[2][2];
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,389,int[][] array2 = new int[2][2];
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,390,for (int i = 0; i < array1.length; ++i) {
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,391,for (int j = 0; j < array1[0].length; j++) {
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,392,array1[i][j] = (i + 1) * (j + 1);
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,393,array2[i][j] = (i + 1) * (j + 1);
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,396,"assertTrue(new EqualsBuilder().append(array1, array1).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,397,"assertTrue(new EqualsBuilder().append(array1, array2).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,398,array1[1][1] = 0;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,399,"assertTrue(!new EqualsBuilder().append(array1, array2).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,402,public void testMultiShortArray() {
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,403,short[][] array1 = new short[2][2];
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,404,short[][] array2 = new short[2][2];
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,405,for (short i = 0; i < array1.length; ++i) {
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,406,for (short j = 0; j < array1[0].length; j++) {
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,407,array1[i][j] = i;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,408,array2[i][j] = i;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,411,"assertTrue(new EqualsBuilder().append(array1, array1).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,412,"assertTrue(new EqualsBuilder().append(array1, array2).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,413,array1[1][1] = 0;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,414,"assertTrue(!new EqualsBuilder().append(array1, array2).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,417,public void testMultiCharArray() {
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,418,char[][] array1 = new char[2][2];
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,419,char[][] array2 = new char[2][2];
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,420,for (char i = 0; i < array1.length; ++i) {
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,421,for (char j = 0; j < array1[0].length; j++) {
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,422,array1[i][j] = i;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,423,array2[i][j] = i;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,426,"assertTrue(new EqualsBuilder().append(array1, array1).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,427,"assertTrue(new EqualsBuilder().append(array1, array2).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,428,array1[1][1] = 0;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,429,"assertTrue(!new EqualsBuilder().append(array1, array2).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,432,public void testMultiByteArray() {
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,433,byte[][] array1 = new byte[2][2];
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,434,byte[][] array2 = new byte[2][2];
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,435,for (byte i = 0; i < array1.length; ++i) {
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,436,for (byte j = 0; j < array1[0].length; j++) {
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,437,array1[i][j] = i;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,438,array2[i][j] = i;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,441,"assertTrue(new EqualsBuilder().append(array1, array1).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,442,"assertTrue(new EqualsBuilder().append(array1, array2).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,443,array1[1][1] = 0;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,444,"assertTrue(!new EqualsBuilder().append(array1, array2).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,446,public void testMultiFloatArray() {
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,447,float[][] array1 = new float[2][2];
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,448,float[][] array2 = new float[2][2];
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,449,for (int i = 0; i < array1.length; ++i) {
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,450,for (int j = 0; j < array1[0].length; j++) {
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,451,array1[i][j] = (i + 1) * (j + 1);
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,452,array2[i][j] = (i + 1) * (j + 1);
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,455,"assertTrue(new EqualsBuilder().append(array1, array1).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,456,"assertTrue(new EqualsBuilder().append(array1, array2).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,457,array1[1][1] = 0;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,458,"assertTrue(!new EqualsBuilder().append(array1, array2).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,461,public void testMultiDoubleArray() {
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,462,double[][] array1 = new double[2][2];
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,463,double[][] array2 = new double[2][2];
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,464,for (int i = 0; i < array1.length; ++i) {
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,465,for (int j = 0; j < array1[0].length; j++) {
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,466,array1[i][j] = (i + 1) * (j + 1);
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,467,array2[i][j] = (i + 1) * (j + 1);
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,470,"assertTrue(new EqualsBuilder().append(array1, array1).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,471,"assertTrue(new EqualsBuilder().append(array1, array2).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,472,array1[1][1] = 0;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,473,"assertTrue(!new EqualsBuilder().append(array1, array2).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,476,public void testMultiBooleanArray() {
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,477,boolean[][] array1 = new boolean[2][2];
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,478,boolean[][] array2 = new boolean[2][2];
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,479,for (int i = 0; i < array1.length; ++i) {
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,480,for (int j = 0; j < array1[0].length; j++) {
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,481,array1[i][j] = (i == 1) || (j == 1);
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,482,array2[i][j] = (i == 1) || (j == 1);
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,485,"assertTrue(new EqualsBuilder().append(array1, array1).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,486,"assertTrue(new EqualsBuilder().append(array1, array2).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,487,array1[1][1] = false;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,488,"assertTrue(!new EqualsBuilder().append(array1, array2).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,491,public void testRaggedArray() {
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,492,long array1[][] = new long[2][];
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,493,long array2[][] = new long[2][];
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,494,for (int i = 0; i < array1.length; ++i) {
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,495,array1[i] = new long[2];
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,496,array2[i] = new long[2];
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,497,for (int j = 0; j < array1[i].length; ++j) {
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,498,array1[i][j] = (i + 1) * (j + 1);
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,499,array2[i][j] = (i + 1) * (j + 1);
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,502,"assertTrue(new EqualsBuilder().append(array1, array1).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,503,"assertTrue(new EqualsBuilder().append(array1, array2).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,504,array1[1][1] = 0;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,505,"assertTrue(!new EqualsBuilder().append(array1, array2).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,508,public void testMixedArray() {
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,509,Object array1[] = new Object[2];
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,510,Object array2[] = new Object[2];
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,511,for (int i = 0; i < array1.length; ++i) {
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,512,array1[i] = new long[2];
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,513,array2[i] = new long[2];
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,514,for (int j = 0; j < 2; ++j) {
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,515,TestObject obj1 = new TestObject((i + 1) * (j + 1));
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,516,TestObject obj2 = new TestObject((i + 1) * (j + 1));
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,517,((long[]) array1[i])[j] = (i + 1) * (j + 1);
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,518,((long[]) array2[i])[j] = (i + 1) * (j + 1);
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,521,"assertTrue(new EqualsBuilder().append(array1, array1).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,522,"assertTrue(new EqualsBuilder().append(array1, array2).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,523,((long[]) array1[1])[1] = 0;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,524,"assertTrue(!new EqualsBuilder().append(array1, array2).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,527,public void testObjectArrayHiddenByObject() {
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,528,TestObject[] array1 = new TestObject[2];
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,529,array1[0] = new TestObject(4);
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,530,array1[1] = new TestObject(5);
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,531,TestObject[] array2 = new TestObject[2];
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,532,array2[0] = new TestObject(4);
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,533,array2[1] = new TestObject(5);
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,534,Object obj1 = array1;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,535,Object obj2 = array2;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,536,"assertTrue(new EqualsBuilder().append(obj1, obj1).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,537,"assertTrue(new EqualsBuilder().append(obj1, array1).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,538,"assertTrue(new EqualsBuilder().append(obj1, obj2).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,539,"assertTrue(new EqualsBuilder().append(obj1, array2).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,540,array1[1].setA(6);
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,541,"assertTrue(!new EqualsBuilder().append(obj1, obj2).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,544,public void testLongArrayHiddenByObject() {
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,545,long[] array1 = new long[2];
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,546,array1[0] = 5L;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,547,array1[1] = 6L;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,548,long[] array2 = new long[2];
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,549,array2[0] = 5L;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,550,array2[1] = 6L;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,551,Object obj1 = array1;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,552,Object obj2 = array2;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,553,"assertTrue(new EqualsBuilder().append(obj1, obj1).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,554,"assertTrue(new EqualsBuilder().append(obj1, array1).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,555,"assertTrue(new EqualsBuilder().append(obj1, obj2).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,556,"assertTrue(new EqualsBuilder().append(obj1, array2).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,557,array1[1] = 7;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,558,"assertTrue(!new EqualsBuilder().append(obj1, obj2).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,561,public void testIntArrayHiddenByObject() {
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,562,int[] array1 = new int[2];
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,563,array1[0] = 5;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,564,array1[1] = 6;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,565,int[] array2 = new int[2];
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,566,array2[0] = 5;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,567,array2[1] = 6;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,568,Object obj1 = array1;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,569,Object obj2 = array2;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,570,"assertTrue(new EqualsBuilder().append(obj1, obj1).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,571,"assertTrue(new EqualsBuilder().append(obj1, array1).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,572,"assertTrue(new EqualsBuilder().append(obj1, obj2).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,573,"assertTrue(new EqualsBuilder().append(obj1, array2).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,574,array1[1] = 7;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,575,"assertTrue(!new EqualsBuilder().append(obj1, obj2).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,578,public void testShortArrayHiddenByObject() {
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,579,short[] array1 = new short[2];
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,580,array1[0] = 5;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,581,array1[1] = 6;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,582,short[] array2 = new short[2];
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,583,array2[0] = 5;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,584,array2[1] = 6;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,585,Object obj1 = array1;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,586,Object obj2 = array2;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,587,"assertTrue(new EqualsBuilder().append(obj1, obj1).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,588,"assertTrue(new EqualsBuilder().append(obj1, array1).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,589,"assertTrue(new EqualsBuilder().append(obj1, obj2).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,590,"assertTrue(new EqualsBuilder().append(obj1, array2).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,591,array1[1] = 7;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,592,"assertTrue(!new EqualsBuilder().append(obj1, obj2).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,595,public void testCharArrayHiddenByObject() {
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,596,char[] array1 = new char[2];
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,597,array1[0] = 5;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,598,array1[1] = 6;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,599,char[] array2 = new char[2];
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,600,array2[0] = 5;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,601,array2[1] = 6;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,602,Object obj1 = array1;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,603,Object obj2 = array2;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,604,"assertTrue(new EqualsBuilder().append(obj1, obj1).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,605,"assertTrue(new EqualsBuilder().append(obj1, array1).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,606,"assertTrue(new EqualsBuilder().append(obj1, obj2).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,607,"assertTrue(new EqualsBuilder().append(obj1, array2).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,608,array1[1] = 7;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,609,"assertTrue(!new EqualsBuilder().append(obj1, obj2).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,612,public void testByteArrayHiddenByObject() {
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,613,byte[] array1 = new byte[2];
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,614,array1[0] = 5;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,615,array1[1] = 6;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,616,byte[] array2 = new byte[2];
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,617,array2[0] = 5;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,618,array2[1] = 6;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,619,Object obj1 = array1;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,620,Object obj2 = array2;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,621,"assertTrue(new EqualsBuilder().append(obj1, obj1).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,622,"assertTrue(new EqualsBuilder().append(obj1, array1).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,623,"assertTrue(new EqualsBuilder().append(obj1, obj2).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,624,"assertTrue(new EqualsBuilder().append(obj1, array2).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,625,array1[1] = 7;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,626,"assertTrue(!new EqualsBuilder().append(obj1, obj2).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,629,public void testDoubleArrayHiddenByObject() {
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,630,double[] array1 = new double[2];
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,631,array1[0] = 5;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,632,array1[1] = 6;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,633,double[] array2 = new double[2];
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,634,array2[0] = 5;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,635,array2[1] = 6;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,636,Object obj1 = array1;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,637,Object obj2 = array2;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,638,"assertTrue(new EqualsBuilder().append(obj1, obj1).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,639,"assertTrue(new EqualsBuilder().append(obj1, array1).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,640,"assertTrue(new EqualsBuilder().append(obj1, obj2).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,641,"assertTrue(new EqualsBuilder().append(obj1, array2).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,642,array1[1] = 7;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,643,"assertTrue(!new EqualsBuilder().append(obj1, obj2).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,646,public void testFloatArrayHiddenByObject() {
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,647,float[] array1 = new float[2];
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,648,array1[0] = 5;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,649,array1[1] = 6;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,650,float[] array2 = new float[2];
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,651,array2[0] = 5;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,652,array2[1] = 6;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,653,Object obj1 = array1;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,654,Object obj2 = array2;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,655,"assertTrue(new EqualsBuilder().append(obj1, obj1).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,656,"assertTrue(new EqualsBuilder().append(obj1, array1).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,657,"assertTrue(new EqualsBuilder().append(obj1, obj2).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,658,"assertTrue(new EqualsBuilder().append(obj1, array2).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,659,array1[1] = 7;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,660,"assertTrue(!new EqualsBuilder().append(obj1, obj2).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,663,public void testBooleanArrayHiddenByObject() {
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,664,boolean[] array1 = new boolean[2];
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,665,array1[0] = true;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,666,array1[1] = false;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,667,boolean[] array2 = new boolean[2];
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,668,array2[0] = true;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,669,array2[1] = false;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,670,Object obj1 = array1;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,671,Object obj2 = array2;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,672,"assertTrue(new EqualsBuilder().append(obj1, obj1).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,673,"assertTrue(new EqualsBuilder().append(obj1, array1).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,674,"assertTrue(new EqualsBuilder().append(obj1, obj2).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,675,"assertTrue(new EqualsBuilder().append(obj1, array2).isEquals());"
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,676,array1[1] = true;
True,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,src/test/org/apache/commons/lang/builder/EqualsBuilderTest.java,677,"assertTrue(!new EqualsBuilder().append(obj1, obj2).isEquals());"
