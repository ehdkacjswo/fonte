is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,227,* Returns a clone of <code>CSV_TOKENIZER_PROTOTYPE</code>.
True,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,229,* @return a clone of <code>CSV_TOKENIZER_PROTOTYPE</code>.
True,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,231,private static StrTokenizer getCSVClone() {
True,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,232,return (StrTokenizer) CSV_TOKENIZER_PROTOTYPE.clone();
False,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,236,eturn (StrTokenizer)CSV_TOKENIZER_PROTOTYPE.clone();
True,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,245,return getCSVClone();
False,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,249,trTokenizer tok = (StrTokenizer)(CSV_TOKENIZER_PROTOTYPE.clone());
True,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,258,StrTokenizer tok = getCSVClone();
False,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,264,trTokenizer tok = (StrTokenizer)(CSV_TOKENIZER_PROTOTYPE.clone());
True,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,273,StrTokenizer tok = getCSVClone();
True,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,279,* Returns a clone of <code>TSV_TOKENIZER_PROTOTYPE</code>.
True,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,281,* @return a clone of <code>TSV_TOKENIZER_PROTOTYPE</code>.
True,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,283,private static StrTokenizer getTSVClone() {
True,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,284,return (StrTokenizer) TSV_TOKENIZER_PROTOTYPE.clone();
False,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,278,eturn (StrTokenizer)TSV_TOKENIZER_PROTOTYPE.clone();
True,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,297,return getTSVClone();
False,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,289,trTokenizer tok = (StrTokenizer)(TSV_TOKENIZER_PROTOTYPE.clone());
True,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,308,StrTokenizer tok = getTSVClone();
False,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,302,trTokenizer tok = (StrTokenizer)(TSV_TOKENIZER_PROTOTYPE.clone());
True,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,321,StrTokenizer tok = getTSVClone();
False,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,33, JUnit constructor.
False,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,34, @param name
False,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,36,ublic StrTokenizerTest(String name) {
False,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,37,uper(name);
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,33,"private static final String CSV_SIMPLE_FIXTURE = ""A,b,c"";"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,35,"private static final String TSV_SIMPLE_FIXTURE = ""A\tb\tc"";"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,37,public static void main(String[] args) {
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,38,TestRunner.run(suite());
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,48,* JUnit constructor.
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,50,* @param name
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,52,public StrTokenizerTest(String name) {
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,53,super(name);
False,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,47,ublic static void main(String[] args) {
False,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,48,estRunner.run(suite());
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,56,private void checkClone(StrTokenizer tokenizer) {
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,57,assertFalse(StrTokenizer.getCSVInstance() == tokenizer);
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,58,assertFalse(StrTokenizer.getTSVInstance() == tokenizer);
False,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,60,tring tokens [] = tok.getAllTokens();
False,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,62,tring expected[] = new String[]
False,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,64,"a"","
False,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,65,"b"","
False,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,66,"c"","
False,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,67,"d;\""e"","
False,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,68,"f"","
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,70,String tokens[] = tok.getAllTokens();
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,72,"String expected[] = new String[]{""a"", ""b"", ""c"", ""d;\""e"", ""f"", """", """", """",};"
False,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,76,"ssertTrue(""token["" + i + ""] was '"" + tokens[i]"
False,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,77," ""' but was expected to be '"" + expected[i]"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,76,"assertTrue(""token["" + i + ""] was '"" + tokens[i] + ""' but was expected to be '"" + expected[i] + ""'"","
False,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,93,tring tokens [] = tok.getAllTokens();
False,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,95,tring expected[] = new String[]
False,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,97,"a"","
False,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,98,"b"","
False,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,99,"c "","
False,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,100,"d;\""e"","
False,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,101,"f"","
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,90,String tokens[] = tok.getAllTokens();
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,92,"String expected[] = new String[]{""a"", ""b"", ""c "", ""d;\""e"", ""f"", "" "", "" "", """",};"
False,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,109,"ssertTrue(""token["" + i + ""] was '"" + tokens[i]"
False,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,110," ""' but was expected to be '"" + expected[i]"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,96,"assertTrue(""token["" + i + ""] was '"" + tokens[i] + ""' but was expected to be '"" + expected[i] + ""'"","
False,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,126,tring tokens [] = tok.getAllTokens();
False,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,128,tring expected[] = new String[]
False,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,130,"a"","
False,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,131,"b"","
False,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,132," c"","
False,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,133,"d;\""e"","
False,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,134,"f"","
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,110,String tokens[] = tok.getAllTokens();
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,112,"String expected[] = new String[]{""a"", ""b"", "" c"", ""d;\""e"", ""f"", "" "", "" "", """",};"
False,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,142,"ssertTrue(""token["" + i + ""] was '"" + tokens[i]"
False,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,143," ""' but was expected to be '"" + expected[i]"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,116,"assertTrue(""token["" + i + ""] was '"" + tokens[i] + ""' but was expected to be '"" + expected[i] + ""'"","
False,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,159,tring tokens [] = tok.getAllTokens();
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,130,String tokens[] = tok.getAllTokens();
False,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,161,tring expected[] = new String[]
False,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,163,"a"","
False,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,164,"b"","
False,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,165,"c"","
False,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,166,"d;\""e"","
False,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,167,"f"","
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,132,"String expected[] = new String[]{""a"", ""b"", ""c"", ""d;\""e"", ""f"",};"
False,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,172,"ssertTrue(""token["" + i + ""] was '"" + tokens[i]"
False,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,173," ""' but was expected to be '"" + expected[i]"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,136,"assertTrue(""token["" + i + ""] was '"" + tokens[i] + ""' but was expected to be '"" + expected[i] + ""'"","
False,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,190,tring tokens [] = tok.getAllTokens();
False,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,192,tring expected[] = new String[]
False,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,194,"a"","
False,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,195,"b"","
False,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,196,"c"","
False,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,197,"d;\""e"","
False,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,198,"f"","
False,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,199,"ull,"
False,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,200,"ull,"
False,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,201,"ull,"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,151,String tokens[] = tok.getAllTokens();
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,153,"String expected[] = new String[]{""a"", ""b"", ""c"", ""d;\""e"", ""f"", null, null, null,};"
False,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,206,"ssertTrue(""token["" + i + ""] was '"" + tokens[i]"
False,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,207," ""' but was expected to be '"" + expected[i]"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,157,"assertTrue(""token["" + i + ""] was '"" + tokens[i] + ""' but was expected to be '"" + expected[i] + ""'"","
False,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,223,/        tok.setTreatingEmptyAsNull(true);
False,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,224,tring tokens [] = tok.getAllTokens();
False,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,226,tring expected[] = new String[]
False,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,228,"a"","
False,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,229,"b"","
False,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,230," c"","
False,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,231,"d;\""e"","
False,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,232,"f"","
False,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,233,"ull,"
False,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,234,"ull,"
False,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,235,"ull,"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,171,// tok.setTreatingEmptyAsNull(true);
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,172,String tokens[] = tok.getAllTokens();
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,174,"String expected[] = new String[]{""a"", ""b"", "" c"", ""d;\""e"", ""f"", null, null, null,};"
False,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,252,"ssertTrue(""could not cycle through entire token list"""
False,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,253," "" using the 'hasNext' and 'next' methods"","
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,190,"assertTrue(""could not cycle through entire token list"" + "" using the 'hasNext' and 'next' methods"","
False,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,256,"ssertTrue(""could not cycle through entire token list"""
False,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,257," "" using the 'hasPrevious' and 'previous' methods"","
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,193,"assertTrue(""could not cycle through entire token list"" + "" using the 'hasPrevious' and 'previous' methods"","
False,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,271,tring tokens [] = tok.getAllTokens();
False,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,273,tring expected[] = new String[]
False,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,275,"a"","
False,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,278,"b"","
False,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,279,"c"","
False,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,280,"d e"","
False,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,281,"f"","
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,206,String tokens[] = tok.getAllTokens();
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,208,"String expected[] = new String[]{""a"", """", """", ""b"", ""c"", ""d e"", ""f"", """",};"
False,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,287,"ssertTrue(""token["" + i + ""] was '"" + tokens[i]"
False,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,288," ""' but was expected to be '"" + expected[i]"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,212,"assertTrue(""token["" + i + ""] was '"" + tokens[i] + ""' but was expected to be '"" + expected[i] + ""'"","
False,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,304,tring tokens [] = tok.getAllTokens();
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,226,String tokens[] = tok.getAllTokens();
False,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,306,tring expected[] = new String[]
False,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,308,"a"","
False,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,309,"b"","
False,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,310,"c"","
False,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,311,"d e"","
False,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,312,"f"","
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,228,"String expected[] = new String[]{""a"", ""b"", ""c"", ""d e"", ""f"",};"
False,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,317,"ssertTrue(""token["" + i + ""] was '"" + tokens[i]"
False,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,318," ""' but was expected to be '"" + expected[i]"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,232,"assertTrue(""token["" + i + ""] was '"" + tokens[i] + ""' but was expected to be '"" + expected[i] + ""'"","
False,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,357,ublic void testBasicQuoted1() {
False,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,358,"tring input = ""a \""b\"" c"";"
False,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,359,"trTokenizer tok = new StrTokenizer(input, ' ', '""');"
False,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,360,"ssertEquals(""a"", tok.next());"
False,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,361,"ssertEquals(""b"", tok.next());"
False,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,362,"ssertEquals(""c"", tok.next());"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,305,public void testBasicQuoted1() {
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,306,"String input = ""a \""b\"" c"";"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,307,"StrTokenizer tok = new StrTokenizer(input, ' ', '""');"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,308,"assertEquals(""a"", tok.next());"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,309,"assertEquals(""b"", tok.next());"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,310,"assertEquals(""c"", tok.next());"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,313,public void testCSV(String data) {
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,314,this.testXSVAbc(StrTokenizer.getCSVInstance(data));
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,315,this.testXSVAbc(StrTokenizer.getCSVInstance(data.toCharArray()));
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,318,public void testCSVEmpty() {
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,319,this.testEmpty(StrTokenizer.getCSVInstance());
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,320,"this.testEmpty(StrTokenizer.getCSVInstance(""""));"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,323,public void testCSVSimple() {
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,324,this.testCSV(CSV_SIMPLE_FIXTURE);
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,327,public void testCSVSimpleNeedsTrim() {
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,328,"this.testCSV(""   "" + CSV_SIMPLE_FIXTURE);"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,329,"this.testCSV(""   \n\t  "" + CSV_SIMPLE_FIXTURE);"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,330,"this.testCSV(""   \n  "" + CSV_SIMPLE_FIXTURE + ""\n\n\r"");"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,333,void testEmpty(StrTokenizer tokenizer) {
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,334,this.checkClone(tokenizer);
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,335,"assertEquals(false, tokenizer.hasNext());"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,336,"assertEquals(false, tokenizer.hasPrevious());"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,337,"assertEquals(null, tokenizer.next());"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,338,"assertEquals(null, tokenizer.nextToken());"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,339,"assertEquals(0, tokenizer.size());"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,351,public void testMatcher() {
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,352,"assertEquals(1, StrTokenizer.SPACE_MATCHER.isMatch(new char[]{' '}, 1, 0));"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,353,"assertEquals(0, StrTokenizer.SPACE_MATCHER.isMatch(new char[]{'\n'}, 1, 0));"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,354,"assertEquals(0, StrTokenizer.SPACE_MATCHER.isMatch(new char[]{'\u0001'}, 1, 0));"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,356,"assertEquals(1, StrTokenizer.TRIM_MATCHER.isMatch(new char[]{' '}, 1, 0));"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,357,"assertEquals(1, StrTokenizer.TRIM_MATCHER.isMatch(new char[]{'\n'}, 1, 0));"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,358,"assertEquals(1, StrTokenizer.TRIM_MATCHER.isMatch(new char[]{'\u0001'}, 1, 0));"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,360,"assertEquals(1, StrTokenizer.SPLIT_MATCHER.isMatch(new char[]{' '}, 1, 0));"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,361,"assertEquals(1, StrTokenizer.SPLIT_MATCHER.isMatch(new char[]{'\n'}, 1, 0));"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,362,"assertEquals(0, StrTokenizer.SPLIT_MATCHER.isMatch(new char[]{'\u0001'}, 1, 0));"
False,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,427,ublic void testMatcher() {
False,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,428,"ssertEquals(1, StrTokenizer.SPACE_MATCHER.isMatch(new char[] {' '}, 1, 0));"
False,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,429,"ssertEquals(0, StrTokenizer.SPACE_MATCHER.isMatch(new char[] {'\n'}, 1, 0));"
False,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,430,"ssertEquals(0, StrTokenizer.SPACE_MATCHER.isMatch(new char[] {'\u0001'}, 1, 0));"
False,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,432,"ssertEquals(1, StrTokenizer.TRIM_MATCHER.isMatch(new char[] {' '}, 1, 0));"
False,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,433,"ssertEquals(1, StrTokenizer.TRIM_MATCHER.isMatch(new char[] {'\n'}, 1, 0));"
False,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,434,"ssertEquals(1, StrTokenizer.TRIM_MATCHER.isMatch(new char[] {'\u0001'}, 1, 0));"
False,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,436,"ssertEquals(1, StrTokenizer.SPLIT_MATCHER.isMatch(new char[] {' '}, 1, 0));"
False,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,437,"ssertEquals(1, StrTokenizer.SPLIT_MATCHER.isMatch(new char[] {'\n'}, 1, 0));"
False,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,438,"ssertEquals(0, StrTokenizer.SPLIT_MATCHER.isMatch(new char[] {'\u0001'}, 1, 0));"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,383,public void testTSV() {
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,384,this.testXSVAbc(StrTokenizer.getTSVInstance(TSV_SIMPLE_FIXTURE));
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,385,this.testXSVAbc(StrTokenizer.getTSVInstance(TSV_SIMPLE_FIXTURE.toCharArray()));
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,388,public void testTSVEmpty() {
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,389,this.testEmpty(StrTokenizer.getCSVInstance());
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,390,"this.testEmpty(StrTokenizer.getCSVInstance(""""));"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,393,void testXSVAbc(StrTokenizer tokenizer) {
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,394,this.checkClone(tokenizer);
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,395,"assertEquals(-1, tokenizer.previousIndex());"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,396,"assertEquals(0, tokenizer.nextIndex());"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,397,"assertEquals(null, tokenizer.previousToken());"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,398,"assertEquals(""A"", tokenizer.nextToken());"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,399,"assertEquals(1, tokenizer.nextIndex());"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,400,"assertEquals(""b"", tokenizer.nextToken());"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,401,"assertEquals(2, tokenizer.nextIndex());"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,402,"assertEquals(""c"", tokenizer.nextToken());"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,403,"assertEquals(3, tokenizer.nextIndex());"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,404,"assertEquals(null, tokenizer.nextToken());"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,405,"assertEquals(3, tokenizer.nextIndex());"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,406,"assertEquals(""c"", tokenizer.previousToken());"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,407,"assertEquals(2, tokenizer.nextIndex());"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,408,"assertEquals(""b"", tokenizer.previousToken());"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,409,"assertEquals(1, tokenizer.nextIndex());"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,410,"assertEquals(""A"", tokenizer.previousToken());"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,411,"assertEquals(0, tokenizer.nextIndex());"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,412,"assertEquals(null, tokenizer.previousToken());"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,413,"assertEquals(0, tokenizer.nextIndex());"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,414,"assertEquals(-1, tokenizer.previousIndex());"
True,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,src/test/org/apache/commons/lang/text/StrTokenizerTest.java,415,"assertEquals(3, tokenizer.size());"
