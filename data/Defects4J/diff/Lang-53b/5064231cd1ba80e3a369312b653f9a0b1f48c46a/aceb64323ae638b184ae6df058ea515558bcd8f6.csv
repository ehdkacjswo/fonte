is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/lang/text/Interpolation.java,src/java/org/apache/commons/lang/text/Interpolation.java,36, <p>Interpolates a String to replace variables of the form <code>${...}</code>.</p>
True,src/java/org/apache/commons/lang/text/Interpolation.java,src/java/org/apache/commons/lang/text/Interpolation.java,36,* <p>Interpolates a String to replace variables of the form <code>${variable}</code>.</p>
False,src/java/org/apache/commons/lang/text/Interpolation.java,src/java/org/apache/commons/lang/text/Interpolation.java,113, <p>Interpolates a String to replace variables of the form <code>${...}</code>
True,src/java/org/apache/commons/lang/text/Interpolation.java,src/java/org/apache/commons/lang/text/Interpolation.java,113,* <p>Interpolates a String to replace variables of the form <code>${variable}</code>
True,src/java/org/apache/commons/lang/text/MappedMessageFormat.java,src/java/org/apache/commons/lang/text/MappedMessageFormat.java,55,// no initialization.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,58,* The extra capacity for new builders.
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,60,static final int CAPACITY = 32;
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,83,nitialCapacity = 32;
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,88,initialCapacity = CAPACITY;
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,212, This method is the same as {@link #setLength(0)} and is provided to match the
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,217,* This method is the same as {@link #setLength(int)} and is provided to match the
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,229,* @return <code>true</code> if the size is <code>0</code>.
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,226,eturn (size == 0);
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,232,return size == 0;
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,327, @param obj  the object to append
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,494, @param value  the value to append
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,499,* @param ch  the value to append
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1093," @param startIndex  the start index, inclusive, must be valid"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1098,"* @param start  the start index, inclusive, must be valid"
False,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1217,"eturn (indexOf(str, 0) >= 0);"
True,src/java/org/apache/commons/lang/text/StrBuilder.java,src/java/org/apache/commons/lang/text/StrBuilder.java,1222,"return indexOf(str, 0) >= 0;"
True,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,170,* @return A new matcher for the given char[].
True,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,187,* @return A new Matcher for the given characters.
True,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,204,* @return A new Matcher for the given char.
True,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,214,* @return A new Matcher for the given String.
True,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,233,* @return a new tokenizer instance which parses Comma Seperated Value strings
False,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,231,eturn (StrTokenizer)(CSV_TOKENIZER_PROTOTYPE.clone());
True,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,236,return (StrTokenizer)CSV_TOKENIZER_PROTOTYPE.clone();
True,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,246,* @return a new tokenizer instance which parses Comma Seperated Value strings
True,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,261,* @return a new tokenizer instance which parses Comma Seperated Value strings
True,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,275,* @return a new tokenizer instance which parses Tab Seperated Value strings.
False,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,270,eturn (StrTokenizer)(TSV_TOKENIZER_PROTOTYPE.clone());
True,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,278,return (StrTokenizer)TSV_TOKENIZER_PROTOTYPE.clone();
True,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,286,* @return a new tokenizer instance which parses Tab Seperated Value strings.
True,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,299,* @return a new tokenizer instance which parses Tab Seperated Value strings.
False,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,545,eturn (tokenPos < tokens.length);
True,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,555,return tokenPos < tokens.length;
False,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,573,eturn (tokenPos > 0);
True,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,583,return tokenPos > 0;
False,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,591,eturn (tokenPos - 1);
True,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,601,return tokenPos - 1;
True,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,615,* @param obj this parameter ignored.
True,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,624,* @param obj this parameter ignored.
False,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,1076, Create a new instance of this Tokenizer.
True,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,1086,* Creates a new instance of this Tokenizer.
True,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,1088,* @return a new instance of this Tokenizer which has been reset.
False,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,1148,"eturn (Arrays.binarySearch(chars, text[pos]) >= 0 ? 1 : 0);"
True,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,1159,"return Arrays.binarySearch(chars, text[pos]) >= 0 ? 1 : 0;"
False,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,1178,eturn (ch == text[pos] ? 1 : 0);
True,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,1189,return ch == text[pos] ? 1 : 0;
False,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,1263,eturn (text[pos] <= 32 ? 1 : 0);
True,src/java/org/apache/commons/lang/text/StrTokenizer.java,src/java/org/apache/commons/lang/text/StrTokenizer.java,1274,return text[pos] <= 32 ? 1 : 0;
