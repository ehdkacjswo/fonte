is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/lang/SerializationException.java,src/java/org/apache/commons/lang/SerializationException.java,64," @version $Id: SerializationException.java,v 1.1 2002/07/19 03:35:54 bayard Exp $"
True,src/java/org/apache/commons/lang/SerializationException.java,src/java/org/apache/commons/lang/SerializationException.java,64,"* @version $Id: SerializationException.java,v 1.2 2002/08/31 11:11:03 scolebourne Exp $"
False,src/java/org/apache/commons/lang/SerializationException.java,src/java/org/apache/commons/lang/SerializationException.java,80, @param msg The error message.
True,src/java/org/apache/commons/lang/SerializationException.java,src/java/org/apache/commons/lang/SerializationException.java,80,* @param msg  The error message.
False,src/java/org/apache/commons/lang/SerializationException.java,src/java/org/apache/commons/lang/SerializationException.java,90, @param nested The exception or error that caused this exception
True,src/java/org/apache/commons/lang/SerializationException.java,src/java/org/apache/commons/lang/SerializationException.java,90,* @param cause  The exception or error that caused this exception
False,src/java/org/apache/commons/lang/SerializationException.java,src/java/org/apache/commons/lang/SerializationException.java,102, @param nested The exception or error that caused this exception
True,src/java/org/apache/commons/lang/SerializationException.java,src/java/org/apache/commons/lang/SerializationException.java,102,* @param cause  The exception or error that caused this exception
False,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,79," @version $Id: SerializationUtils.java,v 1.1 2002/07/19 03:35:54 bayard Exp $"
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,79,"* @version $Id: SerializationUtils.java,v 1.2 2002/08/31 11:09:45 scolebourne Exp $"
False,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,104,eturn deserialize( serialize(object) );
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,104,return deserialize(serialize(object));
False,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,141, @return a byte[] with the converted Serializable.
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,141,* @return a byte[] with the converted Serializable
False,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,156, @param objectData  the serialized object.
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,156,* @param inputStream  the serialized object input stream
False,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,185, @param objectData  the serialized object.
True,src/java/org/apache/commons/lang/SerializationUtils.java,src/java/org/apache/commons/lang/SerializationUtils.java,185,* @param objectData  the serialized object
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,84," @version $Id: StringUtils.java,v 1.8 2002/08/30 02:52:54 dlr Exp $"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,84,"* @version $Id: StringUtils.java,v 1.9 2002/08/31 11:07:08 scolebourne Exp $"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,133,* @return the text without whitespace
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,135,"eturn CharSetUtils.delete(str, "" \t\r\n\b"" );"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,136,"return CharSetUtils.delete(str, "" \t\r\n\b"");"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,404,ublic static String[] split(String text) {
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,405,"eturn split(text, null, -1);"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,405,public static String[] split(String str) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,406,"return split(str, null, -1);"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,432,"ublic static String[] split(String text, String separator, int max) {"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,433,"public static String[] split(String str, String separator, int max) {"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,437,ok = new StringTokenizer(text);
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,438,tok = new StringTokenizer(str);
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,439,"ok = new StringTokenizer(text, separator);"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,440,"tok = new StringTokenizer(str, separator);"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,454,tringBuffer buf = new StringBuffer((int) 1.2 * text.length() * (listSize - i) / listSize);
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,455,StringBuffer buf = new StringBuffer((int) 1.2 * str.length() * (listSize - i) / listSize);
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,588,"hile ( (end = text.indexOf(repl, start)) != -1 ) {"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,589,"while ((end = text.indexOf(repl, start)) != -1) {"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,611,"append(text.substring(0, start))"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,612,append(overlay)
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,613,append(text.substring(end))
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,614,toString();
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,612,".append(text.substring(0, start))"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,613,.append(overlay)
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,614,.append(text.substring(end))
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,615,.toString();
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,676,"eturn str.substring(0,idx);"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,677,"return str.substring(0, idx);"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,798, @param String without newline on end
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,802,nt lastIdx = str.length()-1;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,802,int lastIdx = str.length() - 1;
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,804,f(last == '\n') {
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,805,f(str.charAt(lastIdx-1) == '\r') {
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,806,astIdx --;
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,804,if (last == '\n') {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,805,if (str.charAt(lastIdx - 1) == '\r') {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,806,lastIdx--;
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,811,"eturn str.substring(0,lastIdx);"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,811,"return str.substring(0, lastIdx);"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,827,/ improved with code from  cybertiger@cyberiantiger.org
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,828,"/ unicode from him, and defaul for < 32's."
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,828,// improved with code from  cybertiger@cyberiantiger.org
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,829,"// unicode from him, and defaul for < 32's."
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,831,tringBuffer buffer = new StringBuffer(2*sz);
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,832,or(int i=0; i<sz; i++) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,831,StringBuffer buffer = new StringBuffer(2 * sz);
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,832,for (int i = 0; i < sz; i++) {
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,836,f(ch > 0xfff) {
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,837,"uffer.append(""\\u""+Integer.toHexString(ch));"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,838, else
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,839,f(ch > 0xff) {
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,840,"uffer.append(""\\u0""+Integer.toHexString(ch));"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,841, else
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,842,f(ch > 0x7f) {
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,843,"uffer.append(""\\u00""+Integer.toHexString(ch));"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,844, else
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,845,f(ch < 32) {
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,846,witch(ch) {
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,847,ase '\b' :
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,836,if (ch > 0xfff) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,837,"buffer.append(""\\u"" + Integer.toHexString(ch));"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,838,} else if (ch > 0xff) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,839,"buffer.append(""\\u0"" + Integer.toHexString(ch));"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,840,} else if (ch > 0x7f) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,841,"buffer.append(""\\u00"" + Integer.toHexString(ch));"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,842,} else if (ch < 32) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,843,switch (ch) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,844,case '\b' :
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,851,ase '\n' :
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,848,case '\n' :
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,855,ase '\t' :
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,852,case '\t' :
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,859,ase '\f' :
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,856,case '\f' :
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,863,ase '\r' :
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,860,case '\r' :
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,868,f( ch > 0xf ) {
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,869,"uffer.append(""\\u00""+Integer.toHexString(ch));"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,865,if (ch > 0xf) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,866,"buffer.append(""\\u00"" + Integer.toHexString(ch));"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,871,"uffer.append(""\\u000""+Integer.toHexString(ch));"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,868,"buffer.append(""\\u000"" + Integer.toHexString(ch));"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,876,witch(ch) {
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,877,ase '\'' :
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,873,switch (ch) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,874,case '\'' :
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,881,"ase '""' :"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,878,"case '""' :"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,885,ase '\\' :
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,882,case '\\' :
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,921, @return String with repeated string
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,918,* @return right padded String
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,930,* @return right padded String
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,945,* @return left padded String
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,956,* @return left padded String
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1008, @param delim  the string to remove at start and end
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1008,* @param delimiter  the string to remove at start and end
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1167,or(int i=0; i<sz; i++) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1167,for (int i = 0; i < sz; i++) {
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1169,f(Character.isUpperCase(ch)) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1169,if (Character.isUpperCase(ch)) {
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1171, else
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1172,f(Character.isTitleCase(ch)) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1171,} else if (Character.isTitleCase(ch)) {
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1174, else
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1175,f(Character.isLowerCase(ch)) {
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1176,f(whitespace) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1173,} else if (Character.isLowerCase(ch)) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1174,if (whitespace) {
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1205,or(int i=0; i<sz; i++) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1203,for (int i = 0; i < sz; i++) {
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1207,f(Character.isWhitespace(ch)) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1205,if (Character.isWhitespace(ch)) {
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1210, else
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1211,f(space) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1208,} else if (space) {
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1260,* @param sub  the substring to count
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1464,* @param array  the array to reverse
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1499,"hrowable.printStackTrace( new PrintWriter(buf, true) );"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1498,"throwable.printStackTrace(new PrintWriter(buf, true));"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1515,* @param s  the first String
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1516,* @param t  the second String
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1517,* @param result distance
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1527, = s.length ();
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1528, = t.length ();
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1530,n = s.length();
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1531,m = t.length();
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1535, = new int[n+1][m+1];
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1538,d = new int[n + 1][m + 1];
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1548,_i = s.charAt (i - 1);
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1551,s_i = s.charAt(i - 1);
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1552,_j = t.charAt (j - 1);
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1555,t_j = t.charAt(j - 1);
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1562,"[i][j] = NumberUtils.minimum(d[i-1][j]+1, d[i][j-1]+1, d[i-1][j-1] + cost);"
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1565,"d[i][j] = NumberUtils.minimum(d[i - 1][j] + 1, d[i][j - 1] + 1, d[i - 1][j - 1] + cost);"
False,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1571, Convenient method to retrieve the full stacktrace from a given exception.     * @param t the exception to get the stacktrace from.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1574,* Convenient method to retrieve the full stacktrace from a given exception.
True,src/java/org/apache/commons/lang/StringUtils.java,src/java/org/apache/commons/lang/StringUtils.java,1576,* @param t the exception to get the stacktrace from.
