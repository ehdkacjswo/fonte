is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,199,terator<Entry> it = sparseIterator();
True,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,199,Iterator<Entry> it = iterator();
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,210,heckVectorDimensions(v.length);
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,211,ouble d = 0;
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,212,terator<Entry> it = iterator();
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,213,ntry e;
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,214,hile (it.hasNext() && (e = it.next()) != null) {
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,215,inal double diff = e.getValue() - v[e.getIndex()];
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,216, += diff * diff;
False,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,218,eturn Math.sqrt(d);
True,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,src/main/java/org/apache/commons/math/linear/AbstractRealVector.java,210,"return getDistance(new ArrayRealVector(v,false));"
True,src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java,307,* Optimized method to compute the dot product with an OpenMapRealVector.
True,src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java,308,* Iterates over the smaller of the two.
True,src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java,309,* @param v The vector to compute the dot product with
True,src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java,310,* @return The dot product of <code>this</code> and <code>v</code>
True,src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java,311,* @throws IllegalArgumentException If the dimensions don't match
True,src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java,313,public double dotProduct(OpenMapRealVector v) throws IllegalArgumentException {
True,src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java,314,checkVectorDimensions(v.getDimension());
True,src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java,315,boolean thisIsSmaller  = entries.size() < v.entries.size();
True,src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java,316,Iterator iter = thisIsSmaller  ? entries.iterator() : v.entries.iterator();
True,src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java,317,OpenIntToDoubleHashMap larger = thisIsSmaller  ? v.entries : entries;
True,src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java,318,double d = 0;
True,src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java,319,while(iter.hasNext()) {
True,src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java,320,iter.advance();
True,src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java,321,d += iter.value() * larger.get(iter.key());
True,src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java,323,return d;
True,src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java,326,/** {@inheritDoc} */
True,src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java,327,public double dotProduct(RealVector v) throws IllegalArgumentException {
True,src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java,328,if(v instanceof OpenMapRealVector) {
True,src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java,329,return dotProduct((OpenMapRealVector)v);
True,src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java,330,} else {
True,src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java,331,return super.dotProduct(v);
