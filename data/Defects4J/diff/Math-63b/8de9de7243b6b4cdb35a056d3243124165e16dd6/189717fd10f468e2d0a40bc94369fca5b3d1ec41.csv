is_addition,old_file_path,new_file_path,line_num,content
True,src/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,48,* @param <T> the type of the field elements
True,src/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,66,* @param <T> the type of the field elements
True,src/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,83,* @param <T> the type of the field elements
True,src/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,84,* @param field field to which array elements belong
True,src/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,110,* @param <T> the type of the field elements
True,src/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,111,* @param field field to which array elements belong
True,src/java/org/apache/commons/math/linear/DenseFieldMatrix.java,src/java/org/apache/commons/math/linear/DenseFieldMatrix.java,60,* @param <T> the type of the field elements
False,src/java/org/apache/commons/math/linear/DenseFieldMatrix.java,src/java/org/apache/commons/math/linear/DenseFieldMatrix.java,145,"inal T[][] blockData, final boolean copyArray)"
True,src/java/org/apache/commons/math/linear/DenseFieldMatrix.java,src/java/org/apache/commons/math/linear/DenseFieldMatrix.java,146,"final T[][] blockData, final boolean copyArray)"
True,src/java/org/apache/commons/math/linear/DenseFieldMatrix.java,src/java/org/apache/commons/math/linear/DenseFieldMatrix.java,197,* @param <T> the type of the field elements
True,src/java/org/apache/commons/math/linear/DenseFieldMatrix.java,src/java/org/apache/commons/math/linear/DenseFieldMatrix.java,257,* @param <T> the type of the field elements
True,src/java/org/apache/commons/math/linear/DenseFieldMatrix.java,src/java/org/apache/commons/math/linear/DenseFieldMatrix.java,258,* @param field field to which the elements belong
True,src/java/org/apache/commons/math/linear/MatrixUtils.java,src/java/org/apache/commons/math/linear/MatrixUtils.java,57,* @param <T> the type of the field elements
True,src/java/org/apache/commons/math/linear/MatrixUtils.java,src/java/org/apache/commons/math/linear/MatrixUtils.java,92,* @param <T> the type of the field elements
True,src/java/org/apache/commons/math/linear/MatrixUtils.java,src/java/org/apache/commons/math/linear/MatrixUtils.java,124,* @param <T> the type of the field elements
True,src/java/org/apache/commons/math/linear/MatrixUtils.java,src/java/org/apache/commons/math/linear/MatrixUtils.java,125,* @param field field to which the elements belong
True,src/java/org/apache/commons/math/linear/MatrixUtils.java,src/java/org/apache/commons/math/linear/MatrixUtils.java,184,* @param <T> the type of the field elements
True,src/java/org/apache/commons/math/linear/MatrixUtils.java,src/java/org/apache/commons/math/linear/MatrixUtils.java,285,* @param <T> the type of the field elements
True,src/java/org/apache/commons/math/linear/MatrixUtils.java,src/java/org/apache/commons/math/linear/MatrixUtils.java,317,* @param <T> the type of the field elements
True,src/java/org/apache/commons/math/linear/MatrixUtils.java,src/java/org/apache/commons/math/linear/MatrixUtils.java,416,* @param <T> the type of the field elements
False,src/java/org/apache/commons/math/stat/clustering/Cluster.java,src/java/org/apache/commons/math/stat/clustering/Cluster.java,33,rivate static final long serialVersionUID = -1741417096265465690L;
True,src/java/org/apache/commons/math/stat/clustering/Cluster.java,src/java/org/apache/commons/math/stat/clustering/Cluster.java,33,private static final long serialVersionUID = -3442297081515880464L;
False,src/java/org/apache/commons/math/stat/clustering/Cluster.java,src/java/org/apache/commons/math/stat/clustering/Cluster.java,36,inal List<T> points;
True,src/java/org/apache/commons/math/stat/clustering/Cluster.java,src/java/org/apache/commons/math/stat/clustering/Cluster.java,36,private final List<T> points;
False,src/java/org/apache/commons/math/stat/clustering/Cluster.java,src/java/org/apache/commons/math/stat/clustering/Cluster.java,39,inal T center;
True,src/java/org/apache/commons/math/stat/clustering/Cluster.java,src/java/org/apache/commons/math/stat/clustering/Cluster.java,39,private final T center;
True,src/java/org/apache/commons/math/stat/clustering/EuclideanIntegerPoint.java,src/java/org/apache/commons/math/stat/clustering/EuclideanIntegerPoint.java,38,* Build an instance wrapping an integer array.
True,src/java/org/apache/commons/math/stat/clustering/EuclideanIntegerPoint.java,src/java/org/apache/commons/math/stat/clustering/EuclideanIntegerPoint.java,39,"* <p>The wrapped array is referenced, it is <em>not</em> copied.</p>"
False,src/java/org/apache/commons/math/stat/clustering/EuclideanIntegerPoint.java,src/java/org/apache/commons/math/stat/clustering/EuclideanIntegerPoint.java,45, Returns the n-dimensional point in integer space
True,src/java/org/apache/commons/math/stat/clustering/EuclideanIntegerPoint.java,src/java/org/apache/commons/math/stat/clustering/EuclideanIntegerPoint.java,47,* Get the n-dimensional point in integer space.
True,src/java/org/apache/commons/math/stat/clustering/EuclideanIntegerPoint.java,src/java/org/apache/commons/math/stat/clustering/EuclideanIntegerPoint.java,48,* @return a reference (not a copy!) to the wrapped array
True,src/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java,src/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java,27,* @param <T> type of the points to cluster
True,src/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java,src/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java,83,* @param <T> type of the points to cluster
True,src/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java,src/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java,98,* @param <T> type of the points to cluster
True,src/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java,src/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java,146,* @param <T> type of the points to cluster
True,src/java/org/apache/commons/math/util/BigReal.java,src/java/org/apache/commons/math/util/BigReal.java,208,/** {@inheritDoc} */
True,src/java/org/apache/commons/math/util/BigReal.java,src/java/org/apache/commons/math/util/BigReal.java,209,@Override
True,src/java/org/apache/commons/math/util/BigReal.java,src/java/org/apache/commons/math/util/BigReal.java,210,public boolean equals(Object other) {
True,src/java/org/apache/commons/math/util/BigReal.java,src/java/org/apache/commons/math/util/BigReal.java,211,try {
True,src/java/org/apache/commons/math/util/BigReal.java,src/java/org/apache/commons/math/util/BigReal.java,212,if (other == null) {
True,src/java/org/apache/commons/math/util/BigReal.java,src/java/org/apache/commons/math/util/BigReal.java,213,return false;
True,src/java/org/apache/commons/math/util/BigReal.java,src/java/org/apache/commons/math/util/BigReal.java,215,return d.equals(((BigReal) other).d);
True,src/java/org/apache/commons/math/util/BigReal.java,src/java/org/apache/commons/math/util/BigReal.java,216,} catch (ClassCastException cce) {
True,src/java/org/apache/commons/math/util/BigReal.java,src/java/org/apache/commons/math/util/BigReal.java,217,return false;
True,src/java/org/apache/commons/math/util/BigReal.java,src/java/org/apache/commons/math/util/BigReal.java,221,/** {@inheritDoc} */
True,src/java/org/apache/commons/math/util/BigReal.java,src/java/org/apache/commons/math/util/BigReal.java,222,@Override
True,src/java/org/apache/commons/math/util/BigReal.java,src/java/org/apache/commons/math/util/BigReal.java,223,public int hashCode() {
True,src/java/org/apache/commons/math/util/BigReal.java,src/java/org/apache/commons/math/util/BigReal.java,224,return d.hashCode();
True,src/java/org/apache/commons/math/util/MathUtils.java,src/java/org/apache/commons/math/util/MathUtils.java,62,/** Gap between NaN and regular numbers. */
True,src/java/org/apache/commons/math/util/MathUtils.java,src/java/org/apache/commons/math/util/MathUtils.java,65,/** Offset to order signed double numbers lexicographically. */
True,src/java/org/apache/commons/math/util/OpenIntToFieldHashMap.java,src/java/org/apache/commons/math/util/OpenIntToFieldHashMap.java,38,* @param <T> the type of the field elements
False,src/java/org/apache/commons/math/util/OpenIntToFieldHashMap.java,src/java/org/apache/commons/math/util/OpenIntToFieldHashMap.java,44,rivate static final long serialVersionUID = 1L;
True,src/java/org/apache/commons/math/util/OpenIntToFieldHashMap.java,src/java/org/apache/commons/math/util/OpenIntToFieldHashMap.java,45,private static final long serialVersionUID = -9179080286849120720L;
