is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/math/DimensionMismatchException.java,src/main/java/org/apache/commons/math/DimensionMismatchException.java,30,/** First dimension. */
True,src/main/java/org/apache/commons/math/DimensionMismatchException.java,src/main/java/org/apache/commons/math/DimensionMismatchException.java,31,private final int dimension1;
True,src/main/java/org/apache/commons/math/DimensionMismatchException.java,src/main/java/org/apache/commons/math/DimensionMismatchException.java,33,/** Second dimension. */
True,src/main/java/org/apache/commons/math/DimensionMismatchException.java,src/main/java/org/apache/commons/math/DimensionMismatchException.java,34,private final int dimension2;
False,src/main/java/org/apache/commons/math/DimensionMismatchException.java,src/main/java/org/apache/commons/math/DimensionMismatchException.java,35,"ublic DimensionMismatchException(int dimension1, int dimension2) {"
True,src/main/java/org/apache/commons/math/DimensionMismatchException.java,src/main/java/org/apache/commons/math/DimensionMismatchException.java,41,"public DimensionMismatchException(final int dimension1, final int dimension2) {"
False,src/main/java/org/apache/commons/math/DimensionMismatchException.java,src/main/java/org/apache/commons/math/DimensionMismatchException.java,57,** First dimension. */
False,src/main/java/org/apache/commons/math/DimensionMismatchException.java,src/main/java/org/apache/commons/math/DimensionMismatchException.java,58,rivate int dimension1;
False,src/main/java/org/apache/commons/math/DimensionMismatchException.java,src/main/java/org/apache/commons/math/DimensionMismatchException.java,60,** Second dimension. */
False,src/main/java/org/apache/commons/math/DimensionMismatchException.java,src/main/java/org/apache/commons/math/DimensionMismatchException.java,61,rivate int dimension2;
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,52, Translate a string to a given locale.
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,53, @param s string to translate
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,54, @param locale locale into which to translate the string
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,55, @return translated string or original string
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,56, for unsupported locales or unknown strings
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,58,"rivate static String translate(String s, Locale locale) {"
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,59,ry {
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,60,esourceBundle bundle =
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,61,"esourceBundle.getBundle(""org.apache.commons.math.MessagesResources"", locale);"
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,62,f (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,63,/ the value of the resource is the translated string
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,64,eturn bundle.getString(s);
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,67, catch (MissingResourceException mre) {
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,68,/ do nothing here
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,71,/ the locale is not supported or the resource is unknown
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,72,/ don't translate and fall back to using the string as is
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,73,eturn s;
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,78, Builds a message string by from a pattern and its arguments.
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,79, @param locale Locale in which the message should be translated
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,80, @param pattern format specifier
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,81, @param arguments format arguments
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,82, @return a message string
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,84,"rivate static String buildMessage(Locale locale, String pattern, Object ... arguments) {"
False,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,85,"eturn (pattern == null) ? """" : new MessageFormat(translate(pattern, locale), locale).format(arguments);"
True,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,104,* Translate a string to a given locale.
True,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,105,* @param s string to translate
True,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,106,* @param locale locale into which to translate the string
True,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,107,* @return translated string or original string
True,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,108,* for unsupported locales or unknown strings
True,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,110,"private static String translate(String s, Locale locale) {"
True,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,111,try {
True,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,112,ResourceBundle bundle =
True,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,113,"ResourceBundle.getBundle(""org.apache.commons.math.MessagesResources"", locale);"
True,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,114,if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
True,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,115,// the value of the resource is the translated string
True,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,116,return bundle.getString(s);
True,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,119,} catch (MissingResourceException mre) {
True,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,120,// do nothing here
True,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,123,// the locale is not supported or the resource is unknown
True,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,124,// don't translate and fall back to using the string as is
True,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,125,return s;
True,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,130,* Builds a message string by from a pattern and its arguments.
True,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,131,* @param locale Locale in which the message should be translated
True,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,132,* @param pattern format specifier
True,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,133,* @param arguments format arguments
True,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,134,* @return a message string
True,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,136,"private static String buildMessage(Locale locale, String pattern, Object ... arguments) {"
True,src/main/java/org/apache/commons/math/MathException.java,src/main/java/org/apache/commons/math/MathException.java,137,"return (pattern == null) ? """" : new MessageFormat(translate(pattern, locale), locale).format(arguments);"
False,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,53, Translate a string to a given locale.
False,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,54, @param s string to translate
False,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,55, @param locale locale into which to translate the string
False,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,56, @return translated string or original string
False,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,57, for unsupported locales or unknown strings
False,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,59,"rivate static String translate(final String s, final Locale locale) {"
False,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,60,ry {
False,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,61,esourceBundle bundle =
False,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,62,"esourceBundle.getBundle(""org.apache.commons.math.MessagesResources"", locale);"
False,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,63,f (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
False,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,64,/ the value of the resource is the translated string
False,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,65,eturn bundle.getString(s);
False,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,68, catch (MissingResourceException mre) {
False,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,69,/ do nothing here
False,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,72,/ the locale is not supported or the resource is unknown
False,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,73,/ don't translate and fall back to using the string as is
False,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,74,eturn s;
False,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,79, Builds a message string by from a pattern and its arguments.
False,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,80, @param locale Locale in which the message should be translated
False,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,81, @param pattern format specifier
False,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,82, @param arguments format arguments
False,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,83, @return a message string
False,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,85,"rivate static String buildMessage(final Locale locale, final String pattern,"
False,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,86,inal Object ... arguments) {
False,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,87,"eturn (pattern == null) ? """" : new MessageFormat(translate(pattern, locale), locale).format(arguments);"
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,95,* Translate a string to a given locale.
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,96,* @param s string to translate
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,97,* @param locale locale into which to translate the string
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,98,* @return translated string or original string
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,99,* for unsupported locales or unknown strings
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,101,"private static String translate(final String s, final Locale locale) {"
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,102,try {
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,103,ResourceBundle bundle =
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,104,"ResourceBundle.getBundle(""org.apache.commons.math.MessagesResources"", locale);"
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,105,if (bundle.getLocale().getLanguage().equals(locale.getLanguage())) {
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,106,// the value of the resource is the translated string
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,107,return bundle.getString(s);
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,110,} catch (MissingResourceException mre) {
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,111,// do nothing here
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,114,// the locale is not supported or the resource is unknown
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,115,// don't translate and fall back to using the string as is
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,116,return s;
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,121,* Builds a message string by from a pattern and its arguments.
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,122,* @param locale Locale in which the message should be translated
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,123,* @param pattern format specifier
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,124,* @param arguments format arguments
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,125,* @return a message string
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,127,"private static String buildMessage(final Locale locale, final String pattern,"
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,128,final Object ... arguments) {
True,src/main/java/org/apache/commons/math/MathRuntimeException.java,src/main/java/org/apache/commons/math/MathRuntimeException.java,129,"return (pattern == null) ? """" : new MessageFormat(translate(pattern, locale), locale).format(arguments);"
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,31, Simple constructor.
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,33,ublic MessagesResources_fr() {
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,37, Get the non-translated/translated messages arrays from this resource bundle.
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,38, @return non-translated/translated messages arrays
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,40,Override
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,41,ublic Object[][] getContents() {
False,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,42,eturn CONTENTS.clone();
True,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,843,* Simple constructor.
True,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,845,public MessagesResources_fr() {
True,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,849,* Get the non-translated/translated messages arrays from this resource bundle.
True,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,850,* @return non-translated/translated messages arrays
True,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,852,@Override
True,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,853,public Object[][] getContents() {
True,src/main/java/org/apache/commons/math/MessagesResources_fr.java,src/main/java/org/apache/commons/math/MessagesResources_fr.java,854,return CONTENTS.clone();
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,44,** serializable version identifier. */
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,45,rivate static final long serialVersionUID = 5204927143605193821L;
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,48, Default value of the bandwidth parameter.
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,44,/** Default value of the bandwidth parameter. */
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,52, Default value of the number of robustness iterations.
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,47,/** Default value of the number of robustness iterations. */
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,50,/** serializable version identifier. */
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,51,private static final long serialVersionUID = 5204927143605193821L;
True,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,232,// CHECKSTYLE: stop HideUtilityClassConstructor
False,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,237,** Private constructor. */
False,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,238,rivate LazyHolder() {
False,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,242,rivate static final UnivariateRealSolverFactory FACTORY =
False,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,243,nivariateRealSolverFactory.newInstance();
True,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,238,private static final UnivariateRealSolverFactory FACTORY = UnivariateRealSolverFactory.newInstance();
True,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java,240,// CHECKSTYLE: resume HideUtilityClassConstructor
False,src/main/java/org/apache/commons/math/complex/Complex.java,src/main/java/org/apache/commons/math/complex/Complex.java,48,** Serializable version identifier */
False,src/main/java/org/apache/commons/math/complex/Complex.java,src/main/java/org/apache/commons/math/complex/Complex.java,49,rivate static final long serialVersionUID = -6195664516687396620L;
False,src/main/java/org/apache/commons/math/complex/Complex.java,src/main/java/org/apache/commons/math/complex/Complex.java,69, The imaginary part
True,src/main/java/org/apache/commons/math/complex/Complex.java,src/main/java/org/apache/commons/math/complex/Complex.java,65,/** Serializable version identifier */
True,src/main/java/org/apache/commons/math/complex/Complex.java,src/main/java/org/apache/commons/math/complex/Complex.java,66,private static final long serialVersionUID = -6195664516687396620L;
True,src/main/java/org/apache/commons/math/complex/Complex.java,src/main/java/org/apache/commons/math/complex/Complex.java,68,/** The imaginary part. */
False,src/main/java/org/apache/commons/math/complex/Complex.java,src/main/java/org/apache/commons/math/complex/Complex.java,74, The real part
True,src/main/java/org/apache/commons/math/complex/Complex.java,src/main/java/org/apache/commons/math/complex/Complex.java,71,/** The real part. */
False,src/main/java/org/apache/commons/math/complex/Complex.java,src/main/java/org/apache/commons/math/complex/Complex.java,79, Record whether this complex number is equal to NaN
True,src/main/java/org/apache/commons/math/complex/Complex.java,src/main/java/org/apache/commons/math/complex/Complex.java,74,/** Record whether this complex number is equal to NaN. */
False,src/main/java/org/apache/commons/math/complex/Complex.java,src/main/java/org/apache/commons/math/complex/Complex.java,84, Record whether this complex number is infinite
True,src/main/java/org/apache/commons/math/complex/Complex.java,src/main/java/org/apache/commons/math/complex/Complex.java,77,/** Record whether this complex number is infinite. */
True,src/main/java/org/apache/commons/math/complex/ComplexField.java,src/main/java/org/apache/commons/math/complex/ComplexField.java,60,// CHECKSTYLE: stop HideUtilityClassConstructor
False,src/main/java/org/apache/commons/math/complex/ComplexField.java,src/main/java/org/apache/commons/math/complex/ComplexField.java,65,** Private constructor. */
False,src/main/java/org/apache/commons/math/complex/ComplexField.java,src/main/java/org/apache/commons/math/complex/ComplexField.java,66,rivate LazyHolder() {
True,src/main/java/org/apache/commons/math/complex/ComplexField.java,src/main/java/org/apache/commons/math/complex/ComplexField.java,68,// CHECKSTYLE: resume HideUtilityClassConstructor
True,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,43,/** Array of measurements. */
True,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,44,protected WeightedMeasurement[] measurements;
True,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,46,/** Array of parameters. */
True,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,47,protected EstimatedParameter[] parameters;
True,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,50,* Jacobian matrix.
True,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,51,* <p>This matrix is in canonical form just after the calls to
True,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,52,"* {@link #updateJacobian()}, but may be modified by the solver"
True,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,53,* in the derived class (the {@link LevenbergMarquardtEstimator
True,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,54,* Levenberg-Marquardt estimator} does this).</p>
True,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,56,protected double[] jacobian;
True,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,58,/** Number of columns of the jacobian matrix. */
True,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,59,protected int cols;
True,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,61,/** Number of rows of the jacobian matrix. */
True,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,62,protected int rows;
True,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,64,/** Residuals array.
True,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,65,* <p>This array is in canonical form just after the calls to
True,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,66,"* {@link #updateJacobian()}, but may be modified by the solver"
True,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,67,* in the derived class (the {@link LevenbergMarquardtEstimator
True,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,68,* Levenberg-Marquardt estimator} does this).</p>
True,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,70,protected double[] residuals;
True,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,72,/** Cost value (square root of the sum of the residuals). */
True,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,73,protected double cost;
True,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,75,/** Maximal allowed number of cost evaluations. */
True,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,76,private int maxCostEval;
True,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,78,/** Number of cost evaluations. */
True,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,79,private int costEvaluations;
True,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,81,/** Number of jacobian evaluations. */
True,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,82,private int jacobianEvaluations;
False,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,273,** Array of measurements. */
False,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,274,rotected WeightedMeasurement[] measurements;
False,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,276,** Array of parameters. */
False,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,277,rotected EstimatedParameter[] parameters;
False,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,280, Jacobian matrix.
False,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,281, <p>This matrix is in canonical form just after the calls to
False,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,282," {@link #updateJacobian()}, but may be modified by the solver"
False,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,283, in the derived class (the {@link LevenbergMarquardtEstimator
False,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,284, Levenberg-Marquardt estimator} does this).</p>
False,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,286,rotected double[] jacobian;
False,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,288,** Number of columns of the jacobian matrix. */
False,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,289,rotected int cols;
False,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,291,** Number of rows of the jacobian matrix. */
False,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,292,rotected int rows;
False,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,294,** Residuals array.
False,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,295, <p>This array is in canonical form just after the calls to
False,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,296," {@link #updateJacobian()}, but may be modified by the solver"
False,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,297, in the derived class (the {@link LevenbergMarquardtEstimator
False,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,298, Levenberg-Marquardt estimator} does this).</p>
False,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,300,rotected double[] residuals;
False,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,302,** Cost value (square root of the sum of the residuals). */
False,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,303,rotected double cost;
False,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,305,** Maximal allowed number of cost evaluations. */
False,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,306,rivate int maxCostEval;
False,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,308,** Number of cost evaluations. */
False,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,309,rivate int costEvaluations;
False,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,311,** Number of jacobian evaluations. */
False,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java,312,rivate int jacobianEvaluations;
False,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,40,** Simple constructor.
False,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,41," Build an instance from a first estimate of the parameter,"
False,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,42, initially considered unbound.
False,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,43, @param name name of the parameter
False,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,44, @param firstEstimate first estimate of the parameter
False,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,46,"ublic EstimatedParameter(String name, double firstEstimate) {"
False,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,47,his.name = name;
False,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,48,stimate  = firstEstimate;
False,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,49,ound     = false;
False,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,52,** Simple constructor.
False,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,53, Build an instance from a first estimate of the parameter and a
False,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,54, bound flag
False,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,55, @param name name of the parameter
False,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,56, @param firstEstimate first estimate of the parameter
False,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,57," @param bound flag, should be true if the parameter is bound"
False,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,59,"ublic EstimatedParameter(String name,"
False,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,60,"ouble firstEstimate,"
False,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,61,oolean bound) {
False,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,62,his.name  = name;
False,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,63,stimate   = firstEstimate;
False,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,64,his.bound = bound;
False,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,67,** Copy constructor.
False,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,68, Build a copy of a parameter
False,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,69, @param parameter instance to copy
False,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,71,ublic EstimatedParameter(EstimatedParameter parameter) {
False,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,72,ame     = parameter.name;
False,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,73,stimate = parameter.estimate;
False,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,74,ound    = parameter.bound;
False,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,77,** Set a new estimated value for the parameter.
False,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,78, @param estimate new estimate for the parameter
False,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,80,ublic void setEstimate(double estimate) {
False,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,81,his.estimate = estimate;
False,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,84,** Get the current estimate of the parameter
False,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,85, @return current estimate
False,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,87,ublic double getEstimate() {
False,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,88,eturn estimate;
False,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,91,** get the name of the parameter
False,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,92, @return parameter name
False,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,94,ublic String getName() {
False,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,95,eturn name;
False,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,98,** Set the bound flag of the parameter
False,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,99, @param bound this flag should be set to true if the parameter is
False,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,100, bound (i.e. if it should not be adjusted by the solver).
False,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,102,ublic void setBound(boolean bound) {
False,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,103,his.bound = bound;
False,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,106,** Check if the parameter is bound
False,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,107, @return true if the parameter is bound */
False,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,108,ublic boolean isBound() {
False,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,109,eturn bound;
False,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,112,** Name of the parameter */
False,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,113,rivate   String  name;
False,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,115,** Current value of the parameter */
False,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,116,rotected double  estimate;
False,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,118,** Indicator for bound parameters
False,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,119, (ie parameters that should not be estimated)
False,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,121,rivate   boolean bound;
False,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,123,** Serializable version identifier */
False,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,124,rivate static final long serialVersionUID = -555440800213416949L;
True,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,40,/** Serializable version identifier */
True,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,41,private static final long serialVersionUID = -555440800213416949L;
True,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,43,/** Current value of the parameter */
True,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,44,protected double  estimate;
True,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,46,/** Name of the parameter */
True,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,47,private   String  name;
True,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,49,/** Indicator for bound parameters
True,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,50,* (ie parameters that should not be estimated)
True,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,52,private   boolean bound;
True,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,54,/** Simple constructor.
True,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,55,"* Build an instance from a first estimate of the parameter,"
True,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,56,* initially considered unbound.
True,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,57,* @param name name of the parameter
True,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,58,* @param firstEstimate first estimate of the parameter
True,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,60,"public EstimatedParameter(String name, double firstEstimate) {"
True,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,61,this.name = name;
True,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,62,estimate  = firstEstimate;
True,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,63,bound     = false;
True,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,66,/** Simple constructor.
True,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,67,* Build an instance from a first estimate of the parameter and a
True,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,68,* bound flag
True,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,69,* @param name name of the parameter
True,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,70,* @param firstEstimate first estimate of the parameter
True,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,71,"* @param bound flag, should be true if the parameter is bound"
True,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,73,"public EstimatedParameter(String name,"
True,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,74,"double firstEstimate,"
True,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,75,boolean bound) {
True,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,76,this.name  = name;
True,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,77,estimate   = firstEstimate;
True,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,78,this.bound = bound;
True,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,81,/** Copy constructor.
True,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,82,* Build a copy of a parameter
True,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,83,* @param parameter instance to copy
True,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,85,public EstimatedParameter(EstimatedParameter parameter) {
True,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,86,name     = parameter.name;
True,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,87,estimate = parameter.estimate;
True,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,88,bound    = parameter.bound;
True,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,91,/** Set a new estimated value for the parameter.
True,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,92,* @param estimate new estimate for the parameter
True,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,94,public void setEstimate(double estimate) {
True,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,95,this.estimate = estimate;
True,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,98,/** Get the current estimate of the parameter
True,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,99,* @return current estimate
True,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,101,public double getEstimate() {
True,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,102,return estimate;
True,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,105,/** get the name of the parameter
True,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,106,* @return parameter name
True,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,108,public String getName() {
True,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,109,return name;
True,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,112,/** Set the bound flag of the parameter
True,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,113,* @param bound this flag should be set to true if the parameter is
True,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,114,* bound (i.e. if it should not be adjusted by the solver).
True,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,116,public void setBound(boolean bound) {
True,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,117,this.bound = bound;
True,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,120,/** Check if the parameter is bound
True,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,121,* @return true if the parameter is bound */
True,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,122,public boolean isBound() {
True,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java,123,return bound;
True,src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,106,/** Serializable version identifier */
True,src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,107,private static final long serialVersionUID = -5705952631533171019L;
True,src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,109,/** Number of solved variables. */
True,src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,110,private int solvedCols;
True,src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,112,/** Diagonal elements of the R matrix in the Q.R. decomposition. */
True,src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,113,private double[] diagR;
True,src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,115,/** Norms of the columns of the jacobian matrix. */
True,src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,116,private double[] jacNorm;
True,src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,118,/** Coefficients of the Householder transforms vectors. */
True,src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,119,private double[] beta;
True,src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,121,/** Columns permutation array. */
True,src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,122,private int[] permutation;
True,src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,124,/** Rank of the jacobian matrix. */
True,src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,125,private int rank;
True,src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,127,/** Levenberg-Marquardt parameter. */
True,src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,128,private double lmPar;
True,src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,130,/** Parameters evolution direction associated with lmPar. */
True,src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,131,private double[] lmDir;
True,src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,133,/** Positive input variable used in determining the initial step bound. */
True,src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,134,private double initialStepBoundFactor;
True,src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,136,/** Desired relative error in the sum of squares. */
True,src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,137,private double costRelativeTolerance;
True,src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,139,/**  Desired relative error in the approximate solution parameters. */
True,src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,140,private double parRelativeTolerance;
True,src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,142,/** Desired max cosine on the orthogonality between the function vector
True,src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,143,* and the columns of the jacobian. */
True,src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,144,private double orthoTolerance;
False,src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,837,** Number of solved variables. */
False,src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,838,rivate int solvedCols;
False,src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,840,** Diagonal elements of the R matrix in the Q.R. decomposition. */
False,src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,841,rivate double[] diagR;
False,src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,843,** Norms of the columns of the jacobian matrix. */
False,src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,844,rivate double[] jacNorm;
False,src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,846,** Coefficients of the Householder transforms vectors. */
False,src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,847,rivate double[] beta;
False,src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,849,** Columns permutation array. */
False,src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,850,rivate int[] permutation;
False,src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,852,** Rank of the jacobian matrix. */
False,src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,853,rivate int rank;
False,src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,855,** Levenberg-Marquardt parameter. */
False,src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,856,rivate double lmPar;
False,src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,858,** Parameters evolution direction associated with lmPar. */
False,src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,859,rivate double[] lmDir;
False,src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,861,** Positive input variable used in determining the initial step bound. */
False,src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,862,rivate double initialStepBoundFactor;
False,src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,864,** Desired relative error in the sum of squares. */
False,src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,865,rivate double costRelativeTolerance;
False,src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,867,**  Desired relative error in the approximate solution parameters. */
False,src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,868,rivate double parRelativeTolerance;
False,src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,870,** Desired max cosine on the orthogonality between the function vector
False,src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,871, and the columns of the jacobian. */
False,src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,872,rivate double orthoTolerance;
False,src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,874,** Serializable version identifier */
False,src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java,875,rivate static final long serialVersionUID = -5705952631533171019L;
True,src/main/java/org/apache/commons/math/estimation/SimpleEstimationProblem.java,src/main/java/org/apache/commons/math/estimation/SimpleEstimationProblem.java,47,/** Estimated parameters. */
True,src/main/java/org/apache/commons/math/estimation/SimpleEstimationProblem.java,src/main/java/org/apache/commons/math/estimation/SimpleEstimationProblem.java,48,private final List<EstimatedParameter> parameters;
True,src/main/java/org/apache/commons/math/estimation/SimpleEstimationProblem.java,src/main/java/org/apache/commons/math/estimation/SimpleEstimationProblem.java,50,/** Measurements. */
True,src/main/java/org/apache/commons/math/estimation/SimpleEstimationProblem.java,src/main/java/org/apache/commons/math/estimation/SimpleEstimationProblem.java,51,private final List<WeightedMeasurement> measurements;
False,src/main/java/org/apache/commons/math/estimation/SimpleEstimationProblem.java,src/main/java/org/apache/commons/math/estimation/SimpleEstimationProblem.java,105,** Estimated parameters. */
False,src/main/java/org/apache/commons/math/estimation/SimpleEstimationProblem.java,src/main/java/org/apache/commons/math/estimation/SimpleEstimationProblem.java,106,rivate final List<EstimatedParameter> parameters;
False,src/main/java/org/apache/commons/math/estimation/SimpleEstimationProblem.java,src/main/java/org/apache/commons/math/estimation/SimpleEstimationProblem.java,108,** Measurements. */
False,src/main/java/org/apache/commons/math/estimation/SimpleEstimationProblem.java,src/main/java/org/apache/commons/math/estimation/SimpleEstimationProblem.java,109,rivate final List<WeightedMeasurement> measurements;
True,src/main/java/org/apache/commons/math/estimation/WeightedMeasurement.java,src/main/java/org/apache/commons/math/estimation/WeightedMeasurement.java,59,/** Measurement weight. */
True,src/main/java/org/apache/commons/math/estimation/WeightedMeasurement.java,src/main/java/org/apache/commons/math/estimation/WeightedMeasurement.java,60,private final double  weight;
True,src/main/java/org/apache/commons/math/estimation/WeightedMeasurement.java,src/main/java/org/apache/commons/math/estimation/WeightedMeasurement.java,62,/** Value of the measurements. */
True,src/main/java/org/apache/commons/math/estimation/WeightedMeasurement.java,src/main/java/org/apache/commons/math/estimation/WeightedMeasurement.java,63,private final double  measuredValue;
True,src/main/java/org/apache/commons/math/estimation/WeightedMeasurement.java,src/main/java/org/apache/commons/math/estimation/WeightedMeasurement.java,65,/** Ignore measurement indicator. */
True,src/main/java/org/apache/commons/math/estimation/WeightedMeasurement.java,src/main/java/org/apache/commons/math/estimation/WeightedMeasurement.java,66,private boolean ignored;
False,src/main/java/org/apache/commons/math/estimation/WeightedMeasurement.java,src/main/java/org/apache/commons/math/estimation/WeightedMeasurement.java,163,** Measurement weight. */
False,src/main/java/org/apache/commons/math/estimation/WeightedMeasurement.java,src/main/java/org/apache/commons/math/estimation/WeightedMeasurement.java,164,rivate final double  weight;
False,src/main/java/org/apache/commons/math/estimation/WeightedMeasurement.java,src/main/java/org/apache/commons/math/estimation/WeightedMeasurement.java,166,** Value of the measurements. */
False,src/main/java/org/apache/commons/math/estimation/WeightedMeasurement.java,src/main/java/org/apache/commons/math/estimation/WeightedMeasurement.java,167,rivate final double  measuredValue;
False,src/main/java/org/apache/commons/math/estimation/WeightedMeasurement.java,src/main/java/org/apache/commons/math/estimation/WeightedMeasurement.java,169,** Ignore measurement indicator. */
False,src/main/java/org/apache/commons/math/estimation/WeightedMeasurement.java,src/main/java/org/apache/commons/math/estimation/WeightedMeasurement.java,170,rivate       boolean ignored;
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,93, <p>
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,94, Creates a <code>BigFraction</code> instance with the 2 parts of a fraction
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,95, Y/Z.
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,96, </p>
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,98, <p>
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,99, Any negative signs are resolved to be on the numerator.
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,100, </p>
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,102, @param numerator
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,103,"            the numerator, for example the three in 'three sevenths'."
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,104, @param denominator
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,105,"            the denominator, for example the seven in 'three sevenths'."
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,106," @return a new fraction instance, with the numerator and denominator"
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,107,         reduced.
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,108, @throws ArithmeticException
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,109,             if the denominator is <code>zero</code>.
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,111,"ublic static BigFraction getReducedFraction(final int numerator,"
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,112,inal int denominator) {
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,113,f (numerator == 0) {
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,114,eturn ZERO; // normalize zero.
False,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,117,"eturn new BigFraction(numerator, denominator);"
True,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,417,* <p>
True,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,418,* Creates a <code>BigFraction</code> instance with the 2 parts of a fraction
True,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,419,* Y/Z.
True,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,420,* </p>
True,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,422,* <p>
True,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,423,* Any negative signs are resolved to be on the numerator.
True,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,424,* </p>
True,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,426,* @param numerator
True,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,427,"*            the numerator, for example the three in 'three sevenths'."
True,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,428,* @param denominator
True,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,429,"*            the denominator, for example the seven in 'three sevenths'."
True,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,430,"* @return a new fraction instance, with the numerator and denominator"
True,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,431,*         reduced.
True,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,432,* @throws ArithmeticException
True,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,433,*             if the denominator is <code>zero</code>.
True,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,435,"public static BigFraction getReducedFraction(final int numerator,"
True,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,436,final int denominator) {
True,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,437,if (numerator == 0) {
True,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,438,return ZERO; // normalize zero.
True,src/main/java/org/apache/commons/math/fraction/BigFraction.java,src/main/java/org/apache/commons/math/fraction/BigFraction.java,441,"return new BigFraction(numerator, denominator);"
True,src/main/java/org/apache/commons/math/fraction/BigFractionField.java,src/main/java/org/apache/commons/math/fraction/BigFractionField.java,60,// CHECKSTYLE: stop HideUtilityClassConstructor
False,src/main/java/org/apache/commons/math/fraction/BigFractionField.java,src/main/java/org/apache/commons/math/fraction/BigFractionField.java,65,** Private constructor. */
False,src/main/java/org/apache/commons/math/fraction/BigFractionField.java,src/main/java/org/apache/commons/math/fraction/BigFractionField.java,66,rivate LazyHolder() {
True,src/main/java/org/apache/commons/math/fraction/BigFractionField.java,src/main/java/org/apache/commons/math/fraction/BigFractionField.java,68,// CHECKSTYLE: resume HideUtilityClassConstructor
True,src/main/java/org/apache/commons/math/fraction/FractionField.java,src/main/java/org/apache/commons/math/fraction/FractionField.java,60,// CHECKSTYLE: stop HideUtilityClassConstructor
False,src/main/java/org/apache/commons/math/fraction/FractionField.java,src/main/java/org/apache/commons/math/fraction/FractionField.java,65,** Private constructor. */
False,src/main/java/org/apache/commons/math/fraction/FractionField.java,src/main/java/org/apache/commons/math/fraction/FractionField.java,66,rivate LazyHolder() {
True,src/main/java/org/apache/commons/math/fraction/FractionField.java,src/main/java/org/apache/commons/math/fraction/FractionField.java,68,// CHECKSTYLE: resume HideUtilityClassConstructor
False,src/main/java/org/apache/commons/math/genetics/GeneticAlgorithm.java,src/main/java/org/apache/commons/math/genetics/GeneticAlgorithm.java,41, Set the (static) random generator.
False,src/main/java/org/apache/commons/math/genetics/GeneticAlgorithm.java,src/main/java/org/apache/commons/math/genetics/GeneticAlgorithm.java,43, @param random random generator
False,src/main/java/org/apache/commons/math/genetics/GeneticAlgorithm.java,src/main/java/org/apache/commons/math/genetics/GeneticAlgorithm.java,45,ublic static synchronized void setRandomGenerator(RandomGenerator random) {
False,src/main/java/org/apache/commons/math/genetics/GeneticAlgorithm.java,src/main/java/org/apache/commons/math/genetics/GeneticAlgorithm.java,46,andomGenerator = random;
False,src/main/java/org/apache/commons/math/genetics/GeneticAlgorithm.java,src/main/java/org/apache/commons/math/genetics/GeneticAlgorithm.java,50, Returns the (static) random generator.
False,src/main/java/org/apache/commons/math/genetics/GeneticAlgorithm.java,src/main/java/org/apache/commons/math/genetics/GeneticAlgorithm.java,52, @return the static random generator shared by GA implementation classes
False,src/main/java/org/apache/commons/math/genetics/GeneticAlgorithm.java,src/main/java/org/apache/commons/math/genetics/GeneticAlgorithm.java,54,ublic static synchronized RandomGenerator getRandomGenerator() {
False,src/main/java/org/apache/commons/math/genetics/GeneticAlgorithm.java,src/main/java/org/apache/commons/math/genetics/GeneticAlgorithm.java,55,eturn randomGenerator;
True,src/main/java/org/apache/commons/math/genetics/GeneticAlgorithm.java,src/main/java/org/apache/commons/math/genetics/GeneticAlgorithm.java,80,* Set the (static) random generator.
True,src/main/java/org/apache/commons/math/genetics/GeneticAlgorithm.java,src/main/java/org/apache/commons/math/genetics/GeneticAlgorithm.java,82,* @param random random generator
True,src/main/java/org/apache/commons/math/genetics/GeneticAlgorithm.java,src/main/java/org/apache/commons/math/genetics/GeneticAlgorithm.java,84,public static synchronized void setRandomGenerator(RandomGenerator random) {
True,src/main/java/org/apache/commons/math/genetics/GeneticAlgorithm.java,src/main/java/org/apache/commons/math/genetics/GeneticAlgorithm.java,85,randomGenerator = random;
True,src/main/java/org/apache/commons/math/genetics/GeneticAlgorithm.java,src/main/java/org/apache/commons/math/genetics/GeneticAlgorithm.java,89,* Returns the (static) random generator.
True,src/main/java/org/apache/commons/math/genetics/GeneticAlgorithm.java,src/main/java/org/apache/commons/math/genetics/GeneticAlgorithm.java,91,* @return the static random generator shared by GA implementation classes
True,src/main/java/org/apache/commons/math/genetics/GeneticAlgorithm.java,src/main/java/org/apache/commons/math/genetics/GeneticAlgorithm.java,93,public static synchronized RandomGenerator getRandomGenerator() {
True,src/main/java/org/apache/commons/math/genetics/GeneticAlgorithm.java,src/main/java/org/apache/commons/math/genetics/GeneticAlgorithm.java,94,return randomGenerator;
False,src/main/java/org/apache/commons/math/geometry/CardanEulerSingularityException.java,src/main/java/org/apache/commons/math/geometry/CardanEulerSingularityException.java,32, Simple constructor.
False,src/main/java/org/apache/commons/math/geometry/CardanEulerSingularityException.java,src/main/java/org/apache/commons/math/geometry/CardanEulerSingularityException.java,33, build an exception with a default message.
False,src/main/java/org/apache/commons/math/geometry/CardanEulerSingularityException.java,src/main/java/org/apache/commons/math/geometry/CardanEulerSingularityException.java,34," @param isCardan if true, the rotation is related to Cardan angles,"
False,src/main/java/org/apache/commons/math/geometry/CardanEulerSingularityException.java,src/main/java/org/apache/commons/math/geometry/CardanEulerSingularityException.java,35, if false it is related to EulerAngles
False,src/main/java/org/apache/commons/math/geometry/CardanEulerSingularityException.java,src/main/java/org/apache/commons/math/geometry/CardanEulerSingularityException.java,37,ublic CardanEulerSingularityException(boolean isCardan) {
False,src/main/java/org/apache/commons/math/geometry/CardanEulerSingularityException.java,src/main/java/org/apache/commons/math/geometry/CardanEulerSingularityException.java,38,"uper(isCardan ? ""Cardan angles singularity"" : ""Euler angles singularity"");"
True,src/main/java/org/apache/commons/math/geometry/CardanEulerSingularityException.java,src/main/java/org/apache/commons/math/geometry/CardanEulerSingularityException.java,31,/** Serializable version identifier */
True,src/main/java/org/apache/commons/math/geometry/CardanEulerSingularityException.java,src/main/java/org/apache/commons/math/geometry/CardanEulerSingularityException.java,32,private static final long serialVersionUID = -1360952845582206770L;
False,src/main/java/org/apache/commons/math/geometry/CardanEulerSingularityException.java,src/main/java/org/apache/commons/math/geometry/CardanEulerSingularityException.java,41,** Serializable version identifier */
False,src/main/java/org/apache/commons/math/geometry/CardanEulerSingularityException.java,src/main/java/org/apache/commons/math/geometry/CardanEulerSingularityException.java,42,rivate static final long serialVersionUID = -1360952845582206770L;
True,src/main/java/org/apache/commons/math/geometry/CardanEulerSingularityException.java,src/main/java/org/apache/commons/math/geometry/CardanEulerSingularityException.java,35,* Simple constructor.
True,src/main/java/org/apache/commons/math/geometry/CardanEulerSingularityException.java,src/main/java/org/apache/commons/math/geometry/CardanEulerSingularityException.java,36,* build an exception with a default message.
True,src/main/java/org/apache/commons/math/geometry/CardanEulerSingularityException.java,src/main/java/org/apache/commons/math/geometry/CardanEulerSingularityException.java,37,"* @param isCardan if true, the rotation is related to Cardan angles,"
True,src/main/java/org/apache/commons/math/geometry/CardanEulerSingularityException.java,src/main/java/org/apache/commons/math/geometry/CardanEulerSingularityException.java,38,* if false it is related to EulerAngles
True,src/main/java/org/apache/commons/math/geometry/CardanEulerSingularityException.java,src/main/java/org/apache/commons/math/geometry/CardanEulerSingularityException.java,40,public CardanEulerSingularityException(boolean isCardan) {
True,src/main/java/org/apache/commons/math/geometry/CardanEulerSingularityException.java,src/main/java/org/apache/commons/math/geometry/CardanEulerSingularityException.java,41,"super(isCardan ? ""Cardan angles singularity"" : ""Euler angles singularity"");"
False,src/main/java/org/apache/commons/math/geometry/NotARotationMatrixException.java,src/main/java/org/apache/commons/math/geometry/NotARotationMatrixException.java,34, Simple constructor.
False,src/main/java/org/apache/commons/math/geometry/NotARotationMatrixException.java,src/main/java/org/apache/commons/math/geometry/NotARotationMatrixException.java,35, Build an exception by translating and formating a message
False,src/main/java/org/apache/commons/math/geometry/NotARotationMatrixException.java,src/main/java/org/apache/commons/math/geometry/NotARotationMatrixException.java,36, @param specifier format specifier (to be translated)
False,src/main/java/org/apache/commons/math/geometry/NotARotationMatrixException.java,src/main/java/org/apache/commons/math/geometry/NotARotationMatrixException.java,37, @param parts to insert in the format (no translation)
False,src/main/java/org/apache/commons/math/geometry/NotARotationMatrixException.java,src/main/java/org/apache/commons/math/geometry/NotARotationMatrixException.java,39,"ublic NotARotationMatrixException(String specifier, Object ... parts) {"
False,src/main/java/org/apache/commons/math/geometry/NotARotationMatrixException.java,src/main/java/org/apache/commons/math/geometry/NotARotationMatrixException.java,40,"uper(specifier, parts);"
True,src/main/java/org/apache/commons/math/geometry/NotARotationMatrixException.java,src/main/java/org/apache/commons/math/geometry/NotARotationMatrixException.java,33,/** Serializable version identifier */
True,src/main/java/org/apache/commons/math/geometry/NotARotationMatrixException.java,src/main/java/org/apache/commons/math/geometry/NotARotationMatrixException.java,34,private static final long serialVersionUID = 5647178478658937642L;
False,src/main/java/org/apache/commons/math/geometry/NotARotationMatrixException.java,src/main/java/org/apache/commons/math/geometry/NotARotationMatrixException.java,43,** Serializable version identifier */
False,src/main/java/org/apache/commons/math/geometry/NotARotationMatrixException.java,src/main/java/org/apache/commons/math/geometry/NotARotationMatrixException.java,44,rivate static final long serialVersionUID = 5647178478658937642L;
True,src/main/java/org/apache/commons/math/geometry/NotARotationMatrixException.java,src/main/java/org/apache/commons/math/geometry/NotARotationMatrixException.java,37,* Simple constructor.
True,src/main/java/org/apache/commons/math/geometry/NotARotationMatrixException.java,src/main/java/org/apache/commons/math/geometry/NotARotationMatrixException.java,38,* Build an exception by translating and formating a message
True,src/main/java/org/apache/commons/math/geometry/NotARotationMatrixException.java,src/main/java/org/apache/commons/math/geometry/NotARotationMatrixException.java,39,* @param specifier format specifier (to be translated)
True,src/main/java/org/apache/commons/math/geometry/NotARotationMatrixException.java,src/main/java/org/apache/commons/math/geometry/NotARotationMatrixException.java,40,* @param parts to insert in the format (no translation)
True,src/main/java/org/apache/commons/math/geometry/NotARotationMatrixException.java,src/main/java/org/apache/commons/math/geometry/NotARotationMatrixException.java,42,"public NotARotationMatrixException(String specifier, Object ... parts) {"
True,src/main/java/org/apache/commons/math/geometry/NotARotationMatrixException.java,src/main/java/org/apache/commons/math/geometry/NotARotationMatrixException.java,43,"super(specifier, parts);"
False,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,34,** Private constructor.
False,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,35," This is a utility class that cannot be instantiated by the user,"
False,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,36, so its only constructor is private.
False,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,37, @param name name of the rotation order
False,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,38, @param a1 axis of the first rotation
False,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,39, @param a2 axis of the second rotation
False,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,40, @param a3 axis of the third rotation
False,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,42,"rivate RotationOrder(String name,"
False,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,43,"ector3D a1, Vector3D a2, Vector3D a3) {"
False,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,44,his.name = name;
False,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,45,his.a1   = a1;
False,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,46,his.a2   = a2;
False,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,47,his.a3   = a3;
False,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,50,** Get a string representation of the instance.
False,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,51," @return a string representation of the instance (in fact, its name)"
False,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,53,Override
False,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,54,ublic String toString() {
False,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,55,eturn name;
False,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,58,** Get the axis of the first rotation.
False,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,59, @return axis of the first rotation
False,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,61,ublic Vector3D getA1() {
False,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,62,eturn a1;
False,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,65,** Get the axis of the second rotation.
False,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,66, @return axis of the second rotation
False,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,68,ublic Vector3D getA2() {
False,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,69,eturn a2;
False,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,72,** Get the axis of the second rotation.
False,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,73, @return axis of the second rotation
False,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,75,ublic Vector3D getA3() {
False,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,76,eturn a3;
False,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,79,** Set of Cardan angles.
False,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,80," this ordered set of rotations is around X, then around Y, then"
False,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,81, around Z
False,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,83,ublic static final RotationOrder XYZ =
False,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,84,"ew RotationOrder(""XYZ"", Vector3D.PLUS_I, Vector3D.PLUS_J, Vector3D.PLUS_K);"
False,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,86,** Set of Cardan angles.
False,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,87," this ordered set of rotations is around X, then around Z, then"
False,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,88, around Y
False,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,90,ublic static final RotationOrder XZY =
False,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,91,"ew RotationOrder(""XZY"", Vector3D.PLUS_I, Vector3D.PLUS_K, Vector3D.PLUS_J);"
False,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,93,** Set of Cardan angles.
False,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,94," this ordered set of rotations is around Y, then around X, then"
False,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,95, around Z
False,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,97,ublic static final RotationOrder YXZ =
False,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,98,"ew RotationOrder(""YXZ"", Vector3D.PLUS_J, Vector3D.PLUS_I, Vector3D.PLUS_K);"
False,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,100,** Set of Cardan angles.
False,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,101," this ordered set of rotations is around Y, then around Z, then"
False,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,102, around X
False,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,104,ublic static final RotationOrder YZX =
False,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,105,"ew RotationOrder(""YZX"", Vector3D.PLUS_J, Vector3D.PLUS_K, Vector3D.PLUS_I);"
False,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,107,** Set of Cardan angles.
False,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,108," this ordered set of rotations is around Z, then around X, then"
False,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,109, around Y
False,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,111,ublic static final RotationOrder ZXY =
False,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,112,"ew RotationOrder(""ZXY"", Vector3D.PLUS_K, Vector3D.PLUS_I, Vector3D.PLUS_J);"
False,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,114,** Set of Cardan angles.
False,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,115," this ordered set of rotations is around Z, then around Y, then"
False,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,116, around X
False,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,118,ublic static final RotationOrder ZYX =
False,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,119,"ew RotationOrder(""ZYX"", Vector3D.PLUS_K, Vector3D.PLUS_J, Vector3D.PLUS_I);"
False,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,121,** Set of Euler angles.
False,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,122," this ordered set of rotations is around X, then around Y, then"
False,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,123, around X
False,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,125,ublic static final RotationOrder XYX =
False,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,126,"ew RotationOrder(""XYX"", Vector3D.PLUS_I, Vector3D.PLUS_J, Vector3D.PLUS_I);"
False,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,128,** Set of Euler angles.
False,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,129," this ordered set of rotations is around X, then around Z, then"
False,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,130, around X
False,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,132,ublic static final RotationOrder XZX =
False,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,133,"ew RotationOrder(""XZX"", Vector3D.PLUS_I, Vector3D.PLUS_K, Vector3D.PLUS_I);"
False,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,135,** Set of Euler angles.
False,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,136," this ordered set of rotations is around Y, then around X, then"
False,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,137, around Y
False,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,139,ublic static final RotationOrder YXY =
False,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,140,"ew RotationOrder(""YXY"", Vector3D.PLUS_J, Vector3D.PLUS_I, Vector3D.PLUS_J);"
False,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,142,** Set of Euler angles.
False,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,143," this ordered set of rotations is around Y, then around Z, then"
False,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,144, around Y
False,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,146,ublic static final RotationOrder YZY =
False,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,147,"ew RotationOrder(""YZY"", Vector3D.PLUS_J, Vector3D.PLUS_K, Vector3D.PLUS_J);"
False,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,149,** Set of Euler angles.
False,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,150," this ordered set of rotations is around Z, then around X, then"
False,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,151, around Z
False,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,153,ublic static final RotationOrder ZXZ =
False,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,154,"ew RotationOrder(""ZXZ"", Vector3D.PLUS_K, Vector3D.PLUS_I, Vector3D.PLUS_K);"
False,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,156,** Set of Euler angles.
False,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,157," this ordered set of rotations is around Z, then around Y, then"
False,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,158, around Z
False,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,160,ublic static final RotationOrder ZYZ =
False,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,161,"ew RotationOrder(""ZYZ"", Vector3D.PLUS_K, Vector3D.PLUS_J, Vector3D.PLUS_K);"
False,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,163,** Name of the rotations order. */
False,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,164,rivate final String name;
False,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,166,** Axis of the first rotation. */
False,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,167,rivate final Vector3D a1;
False,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,169,** Axis of the second rotation. */
False,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,170,rivate final Vector3D a2;
False,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,172,** Axis of the third rotation. */
False,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,173,rivate final Vector3D a3;
True,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,34,/** Set of Cardan angles.
True,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,35,"* this ordered set of rotations is around X, then around Y, then"
True,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,36,* around Z
True,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,38,public static final RotationOrder XYZ =
True,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,39,"new RotationOrder(""XYZ"", Vector3D.PLUS_I, Vector3D.PLUS_J, Vector3D.PLUS_K);"
True,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,41,/** Set of Cardan angles.
True,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,42,"* this ordered set of rotations is around X, then around Z, then"
True,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,43,* around Y
True,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,45,public static final RotationOrder XZY =
True,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,46,"new RotationOrder(""XZY"", Vector3D.PLUS_I, Vector3D.PLUS_K, Vector3D.PLUS_J);"
True,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,48,/** Set of Cardan angles.
True,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,49,"* this ordered set of rotations is around Y, then around X, then"
True,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,50,* around Z
True,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,52,public static final RotationOrder YXZ =
True,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,53,"new RotationOrder(""YXZ"", Vector3D.PLUS_J, Vector3D.PLUS_I, Vector3D.PLUS_K);"
True,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,55,/** Set of Cardan angles.
True,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,56,"* this ordered set of rotations is around Y, then around Z, then"
True,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,57,* around X
True,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,59,public static final RotationOrder YZX =
True,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,60,"new RotationOrder(""YZX"", Vector3D.PLUS_J, Vector3D.PLUS_K, Vector3D.PLUS_I);"
True,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,62,/** Set of Cardan angles.
True,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,63,"* this ordered set of rotations is around Z, then around X, then"
True,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,64,* around Y
True,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,66,public static final RotationOrder ZXY =
True,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,67,"new RotationOrder(""ZXY"", Vector3D.PLUS_K, Vector3D.PLUS_I, Vector3D.PLUS_J);"
True,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,69,/** Set of Cardan angles.
True,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,70,"* this ordered set of rotations is around Z, then around Y, then"
True,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,71,* around X
True,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,73,public static final RotationOrder ZYX =
True,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,74,"new RotationOrder(""ZYX"", Vector3D.PLUS_K, Vector3D.PLUS_J, Vector3D.PLUS_I);"
True,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,76,/** Set of Euler angles.
True,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,77,"* this ordered set of rotations is around X, then around Y, then"
True,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,78,* around X
True,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,80,public static final RotationOrder XYX =
True,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,81,"new RotationOrder(""XYX"", Vector3D.PLUS_I, Vector3D.PLUS_J, Vector3D.PLUS_I);"
True,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,83,/** Set of Euler angles.
True,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,84,"* this ordered set of rotations is around X, then around Z, then"
True,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,85,* around X
True,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,87,public static final RotationOrder XZX =
True,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,88,"new RotationOrder(""XZX"", Vector3D.PLUS_I, Vector3D.PLUS_K, Vector3D.PLUS_I);"
True,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,90,/** Set of Euler angles.
True,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,91,"* this ordered set of rotations is around Y, then around X, then"
True,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,92,* around Y
True,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,94,public static final RotationOrder YXY =
True,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,95,"new RotationOrder(""YXY"", Vector3D.PLUS_J, Vector3D.PLUS_I, Vector3D.PLUS_J);"
True,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,97,/** Set of Euler angles.
True,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,98,"* this ordered set of rotations is around Y, then around Z, then"
True,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,99,* around Y
True,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,101,public static final RotationOrder YZY =
True,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,102,"new RotationOrder(""YZY"", Vector3D.PLUS_J, Vector3D.PLUS_K, Vector3D.PLUS_J);"
True,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,104,/** Set of Euler angles.
True,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,105,"* this ordered set of rotations is around Z, then around X, then"
True,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,106,* around Z
True,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,108,public static final RotationOrder ZXZ =
True,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,109,"new RotationOrder(""ZXZ"", Vector3D.PLUS_K, Vector3D.PLUS_I, Vector3D.PLUS_K);"
True,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,111,/** Set of Euler angles.
True,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,112,"* this ordered set of rotations is around Z, then around Y, then"
True,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,113,* around Z
True,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,115,public static final RotationOrder ZYZ =
True,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,116,"new RotationOrder(""ZYZ"", Vector3D.PLUS_K, Vector3D.PLUS_J, Vector3D.PLUS_K);"
True,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,118,/** Name of the rotations order. */
True,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,119,private final String name;
True,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,121,/** Axis of the first rotation. */
True,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,122,private final Vector3D a1;
True,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,124,/** Axis of the second rotation. */
True,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,125,private final Vector3D a2;
True,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,127,/** Axis of the third rotation. */
True,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,128,private final Vector3D a3;
True,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,130,/** Private constructor.
True,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,131,"* This is a utility class that cannot be instantiated by the user,"
True,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,132,* so its only constructor is private.
True,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,133,* @param name name of the rotation order
True,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,134,* @param a1 axis of the first rotation
True,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,135,* @param a2 axis of the second rotation
True,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,136,* @param a3 axis of the third rotation
True,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,138,"private RotationOrder(final String name,"
True,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,139,"final Vector3D a1, final Vector3D a2, final Vector3D a3) {"
True,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,140,this.name = name;
True,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,141,this.a1   = a1;
True,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,142,this.a2   = a2;
True,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,143,this.a3   = a3;
True,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,146,/** Get a string representation of the instance.
True,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,147,"* @return a string representation of the instance (in fact, its name)"
True,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,149,@Override
True,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,150,public String toString() {
True,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,151,return name;
True,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,154,/** Get the axis of the first rotation.
True,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,155,* @return axis of the first rotation
True,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,157,public Vector3D getA1() {
True,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,158,return a1;
True,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,161,/** Get the axis of the second rotation.
True,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,162,* @return axis of the second rotation
True,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,164,public Vector3D getA2() {
True,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,165,return a2;
True,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,168,/** Get the axis of the second rotation.
True,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,169,* @return axis of the second rotation
True,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,171,public Vector3D getA3() {
True,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,src/main/java/org/apache/commons/math/geometry/RotationOrder.java,172,return a3;
True,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,42,* Constructor for use with Serializable
True,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,44,protected AbstractFieldMatrix() {
True,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,45,field = null;
True,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,49,* Creates a matrix with no data
True,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,50,* @param field field to which the elements belong
True,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,52,protected AbstractFieldMatrix(final Field<T> field) {
True,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,53,this.field = field;
True,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,57,* Create a new FieldMatrix<T> with the supplied row and column dimensions.
True,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,59,* @param field field to which the elements belong
True,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,60,* @param rowDimension  the number of rows in the new matrix
True,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,61,* @param columnDimension  the number of columns in the new matrix
True,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,62,* @throws IllegalArgumentException if row or column dimension is not positive
True,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,64,"protected AbstractFieldMatrix(final Field<T> field,"
True,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,65,"final int rowDimension, final int columnDimension)"
True,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,66,throws IllegalArgumentException {
True,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,67,if (rowDimension <= 0 ) {
True,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,68,throw MathRuntimeException.createIllegalArgumentException(
True,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,69,"""invalid row dimension {0} (must be positive)"","
True,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,70,rowDimension);
True,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,72,if (columnDimension <= 0) {
True,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,73,throw MathRuntimeException.createIllegalArgumentException(
True,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,74,"""invalid column dimension {0} (must be positive)"","
True,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,75,columnDimension);
True,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,77,this.field = field;
False,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,119, Constructor for use with Serializable
False,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,121,rotected AbstractFieldMatrix() {
False,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,122,ield = null;
False,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,126, Creates a matrix with no data
False,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,127, @param field field to which the elements belong
False,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,129,rotected AbstractFieldMatrix(final Field<T> field) {
False,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,130,his.field = field;
False,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,134, Create a new FieldMatrix<T> with the supplied row and column dimensions.
False,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,136, @param field field to which the elements belong
False,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,137, @param rowDimension  the number of rows in the new matrix
False,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,138, @param columnDimension  the number of columns in the new matrix
False,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,139, @throws IllegalArgumentException if row or column dimension is not positive
False,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,141,"rotected AbstractFieldMatrix(final Field<T> field,"
False,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,142,"inal int rowDimension, final int columnDimension)"
False,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,143,hrows IllegalArgumentException {
False,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,144,f (rowDimension <= 0 ) {
False,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,145,hrow MathRuntimeException.createIllegalArgumentException(
False,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,146,"invalid row dimension {0} (must be positive)"","
False,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,147,owDimension);
False,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,149,f (columnDimension <= 0) {
False,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,150,hrow MathRuntimeException.createIllegalArgumentException(
False,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,151,"invalid column dimension {0} (must be positive)"","
False,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,152,olumnDimension);
False,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java,154,his.field = field;
False,src/main/java/org/apache/commons/math/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math/linear/ArrayFieldVector.java,38,** Field to which the elements belong. */
False,src/main/java/org/apache/commons/math/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math/linear/ArrayFieldVector.java,39,rivate final Field<T> field;
False,src/main/java/org/apache/commons/math/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math/linear/ArrayFieldVector.java,44,** Build an array of elements.
False,src/main/java/org/apache/commons/math/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math/linear/ArrayFieldVector.java,45, @param length size of the array to build
False,src/main/java/org/apache/commons/math/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math/linear/ArrayFieldVector.java,46, @return a new array
False,src/main/java/org/apache/commons/math/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math/linear/ArrayFieldVector.java,48,"SuppressWarnings(""unchecked"")"
False,src/main/java/org/apache/commons/math/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math/linear/ArrayFieldVector.java,49,rivate T[] buildArray(final int length) {
False,src/main/java/org/apache/commons/math/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math/linear/ArrayFieldVector.java,50,"eturn (T[]) Array.newInstance(field.getZero().getClass(), length);"
True,src/main/java/org/apache/commons/math/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math/linear/ArrayFieldVector.java,41,/** Field to which the elements belong. */
True,src/main/java/org/apache/commons/math/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math/linear/ArrayFieldVector.java,42,private final Field<T> field;
True,src/main/java/org/apache/commons/math/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math/linear/ArrayFieldVector.java,222,/** Build an array of elements.
True,src/main/java/org/apache/commons/math/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math/linear/ArrayFieldVector.java,223,* @param length size of the array to build
True,src/main/java/org/apache/commons/math/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math/linear/ArrayFieldVector.java,224,* @return a new array
True,src/main/java/org/apache/commons/math/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math/linear/ArrayFieldVector.java,226,"@SuppressWarnings(""unchecked"")"
True,src/main/java/org/apache/commons/math/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math/linear/ArrayFieldVector.java,227,private T[] buildArray(final int length) {
True,src/main/java/org/apache/commons/math/linear/ArrayFieldVector.java,src/main/java/org/apache/commons/math/linear/ArrayFieldVector.java,228,"return (T[]) Array.newInstance(field.getZero().getClass(), length);"
True,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,57,/** BigDecimal 0 */
True,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,58,static final BigDecimal ZERO = new BigDecimal(0);
True,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,60,/** BigDecimal 1 */
True,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,61,static final BigDecimal ONE = new BigDecimal(1);
True,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,63,/** Bound to determine effective singularity in LU decomposition */
True,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,64,private static final BigDecimal TOO_SMALL = new BigDecimal(10E-12);
False,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,80,** Bound to determine effective singularity in LU decomposition */
False,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,81,rivate static final BigDecimal TOO_SMALL = new BigDecimal(10E-12);
False,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,83,** BigDecimal 0 */
False,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,84,tatic final BigDecimal ZERO = new BigDecimal(0);
False,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,85,** BigDecimal 1 */
False,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java,86,tatic final BigDecimal ONE = new BigDecimal(1);
False,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,68,** Serializable version identifier */
False,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,69,rivate static final long serialVersionUID = -4602336630143123183L;
True,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,71,/** Serializable version identifier */
True,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java,72,private static final long serialVersionUID = -4602336630143123183L;
False,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,66,** Serializable version identifier */
False,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,67,rivate static final long serialVersionUID = 4991895511313664478L;
True,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,69,/** Serializable version identifier */
True,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java,70,private static final long serialVersionUID = 4991895511313664478L;
True,src/main/java/org/apache/commons/math/linear/LUDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/LUDecompositionImpl.java,36,/** Default bound to determine effective singularity in LU decomposition */
True,src/main/java/org/apache/commons/math/linear/LUDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/LUDecompositionImpl.java,37,private static final double DEFAULT_TOO_SMALL = 10E-12;
False,src/main/java/org/apache/commons/math/linear/LUDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/LUDecompositionImpl.java,57,** Default bound to determine effective singularity in LU decomposition */
False,src/main/java/org/apache/commons/math/linear/LUDecompositionImpl.java,src/main/java/org/apache/commons/math/linear/LUDecompositionImpl.java,58,rivate static final double DEFAULT_TOO_SMALL = 10E-12;
False,src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java,32,** Serializable version identifier. */
False,src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java,33,rivate static final long serialVersionUID = 8772222695580707260L;
True,src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java,35,/** Serializable version identifier. */
True,src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java,src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java,36,private static final long serialVersionUID = 8772222695580707260L;
True,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,37,/** Step handler. */
True,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,38,protected Collection<StepHandler> stepHandlers;
True,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,40,/** Current step start time. */
True,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,41,protected double stepStart;
True,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,43,/** Current stepsize. */
True,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,44,protected double stepSize;
True,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,46,/** Events handlers manager. */
True,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,47,protected CombinedEventsManager eventsHandlersManager;
False,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,50,** Step handler. */
False,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,51,rotected Collection<StepHandler> stepHandlers;
False,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,53,** Current step start time. */
False,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,54,rotected double stepStart;
False,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,56,** Current stepsize. */
False,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,57,rotected double stepSize;
False,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,59,** Events handlers manager. */
False,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java,60,rotected CombinedEventsManager eventsHandlersManager;
True,src/main/java/org/apache/commons/math/ode/ContinuousOutputModel.java,src/main/java/org/apache/commons/math/ode/ContinuousOutputModel.java,89,/** Serializable version identifier */
True,src/main/java/org/apache/commons/math/ode/ContinuousOutputModel.java,src/main/java/org/apache/commons/math/ode/ContinuousOutputModel.java,90,private static final long serialVersionUID = -1417964919405031606L;
True,src/main/java/org/apache/commons/math/ode/ContinuousOutputModel.java,src/main/java/org/apache/commons/math/ode/ContinuousOutputModel.java,92,/** Initial integration time. */
True,src/main/java/org/apache/commons/math/ode/ContinuousOutputModel.java,src/main/java/org/apache/commons/math/ode/ContinuousOutputModel.java,93,private double initialTime;
True,src/main/java/org/apache/commons/math/ode/ContinuousOutputModel.java,src/main/java/org/apache/commons/math/ode/ContinuousOutputModel.java,95,/** Final integration time. */
True,src/main/java/org/apache/commons/math/ode/ContinuousOutputModel.java,src/main/java/org/apache/commons/math/ode/ContinuousOutputModel.java,96,private double finalTime;
True,src/main/java/org/apache/commons/math/ode/ContinuousOutputModel.java,src/main/java/org/apache/commons/math/ode/ContinuousOutputModel.java,98,/** Integration direction indicator. */
True,src/main/java/org/apache/commons/math/ode/ContinuousOutputModel.java,src/main/java/org/apache/commons/math/ode/ContinuousOutputModel.java,99,private boolean forward;
True,src/main/java/org/apache/commons/math/ode/ContinuousOutputModel.java,src/main/java/org/apache/commons/math/ode/ContinuousOutputModel.java,101,/** Current interpolator index. */
True,src/main/java/org/apache/commons/math/ode/ContinuousOutputModel.java,src/main/java/org/apache/commons/math/ode/ContinuousOutputModel.java,102,private int index;
True,src/main/java/org/apache/commons/math/ode/ContinuousOutputModel.java,src/main/java/org/apache/commons/math/ode/ContinuousOutputModel.java,104,/** Steps table. */
True,src/main/java/org/apache/commons/math/ode/ContinuousOutputModel.java,src/main/java/org/apache/commons/math/ode/ContinuousOutputModel.java,105,private List<StepInterpolator> steps;
False,src/main/java/org/apache/commons/math/ode/ContinuousOutputModel.java,src/main/java/org/apache/commons/math/ode/ContinuousOutputModel.java,358,** Initial integration time. */
False,src/main/java/org/apache/commons/math/ode/ContinuousOutputModel.java,src/main/java/org/apache/commons/math/ode/ContinuousOutputModel.java,359,rivate double initialTime;
False,src/main/java/org/apache/commons/math/ode/ContinuousOutputModel.java,src/main/java/org/apache/commons/math/ode/ContinuousOutputModel.java,361,** Final integration time. */
False,src/main/java/org/apache/commons/math/ode/ContinuousOutputModel.java,src/main/java/org/apache/commons/math/ode/ContinuousOutputModel.java,362,rivate double finalTime;
False,src/main/java/org/apache/commons/math/ode/ContinuousOutputModel.java,src/main/java/org/apache/commons/math/ode/ContinuousOutputModel.java,364,** Integration direction indicator. */
False,src/main/java/org/apache/commons/math/ode/ContinuousOutputModel.java,src/main/java/org/apache/commons/math/ode/ContinuousOutputModel.java,365,rivate boolean forward;
False,src/main/java/org/apache/commons/math/ode/ContinuousOutputModel.java,src/main/java/org/apache/commons/math/ode/ContinuousOutputModel.java,367,** Current interpolator index. */
False,src/main/java/org/apache/commons/math/ode/ContinuousOutputModel.java,src/main/java/org/apache/commons/math/ode/ContinuousOutputModel.java,368,rivate int index;
False,src/main/java/org/apache/commons/math/ode/ContinuousOutputModel.java,src/main/java/org/apache/commons/math/ode/ContinuousOutputModel.java,370,** Steps table. */
False,src/main/java/org/apache/commons/math/ode/ContinuousOutputModel.java,src/main/java/org/apache/commons/math/ode/ContinuousOutputModel.java,371,rivate List<StepInterpolator> steps;
False,src/main/java/org/apache/commons/math/ode/ContinuousOutputModel.java,src/main/java/org/apache/commons/math/ode/ContinuousOutputModel.java,373,** Serializable version identifier */
False,src/main/java/org/apache/commons/math/ode/ContinuousOutputModel.java,src/main/java/org/apache/commons/math/ode/ContinuousOutputModel.java,374,rivate static final long serialVersionUID = -1417964919405031606L;
True,src/main/java/org/apache/commons/math/ode/FirstOrderConverter.java,src/main/java/org/apache/commons/math/ode/FirstOrderConverter.java,58,/** Underlying second order equations set. */
True,src/main/java/org/apache/commons/math/ode/FirstOrderConverter.java,src/main/java/org/apache/commons/math/ode/FirstOrderConverter.java,59,private final SecondOrderDifferentialEquations equations;
True,src/main/java/org/apache/commons/math/ode/FirstOrderConverter.java,src/main/java/org/apache/commons/math/ode/FirstOrderConverter.java,61,/** second order problem dimension. */
True,src/main/java/org/apache/commons/math/ode/FirstOrderConverter.java,src/main/java/org/apache/commons/math/ode/FirstOrderConverter.java,62,private final int dimension;
True,src/main/java/org/apache/commons/math/ode/FirstOrderConverter.java,src/main/java/org/apache/commons/math/ode/FirstOrderConverter.java,64,/** state vector. */
True,src/main/java/org/apache/commons/math/ode/FirstOrderConverter.java,src/main/java/org/apache/commons/math/ode/FirstOrderConverter.java,65,private final double[] z;
True,src/main/java/org/apache/commons/math/ode/FirstOrderConverter.java,src/main/java/org/apache/commons/math/ode/FirstOrderConverter.java,67,/** first time derivative of the state vector. */
True,src/main/java/org/apache/commons/math/ode/FirstOrderConverter.java,src/main/java/org/apache/commons/math/ode/FirstOrderConverter.java,68,private final double[] zDot;
True,src/main/java/org/apache/commons/math/ode/FirstOrderConverter.java,src/main/java/org/apache/commons/math/ode/FirstOrderConverter.java,70,/** second time derivative of the state vector. */
True,src/main/java/org/apache/commons/math/ode/FirstOrderConverter.java,src/main/java/org/apache/commons/math/ode/FirstOrderConverter.java,71,private final double[] zDDot;
False,src/main/java/org/apache/commons/math/ode/FirstOrderConverter.java,src/main/java/org/apache/commons/math/ode/FirstOrderConverter.java,102,** Underlying second order equations set. */
False,src/main/java/org/apache/commons/math/ode/FirstOrderConverter.java,src/main/java/org/apache/commons/math/ode/FirstOrderConverter.java,103,rivate SecondOrderDifferentialEquations equations;
False,src/main/java/org/apache/commons/math/ode/FirstOrderConverter.java,src/main/java/org/apache/commons/math/ode/FirstOrderConverter.java,105,** second order problem dimension. */
False,src/main/java/org/apache/commons/math/ode/FirstOrderConverter.java,src/main/java/org/apache/commons/math/ode/FirstOrderConverter.java,106,rivate int dimension;
False,src/main/java/org/apache/commons/math/ode/FirstOrderConverter.java,src/main/java/org/apache/commons/math/ode/FirstOrderConverter.java,108,** state vector. */
False,src/main/java/org/apache/commons/math/ode/FirstOrderConverter.java,src/main/java/org/apache/commons/math/ode/FirstOrderConverter.java,109,rivate double[] z;
False,src/main/java/org/apache/commons/math/ode/FirstOrderConverter.java,src/main/java/org/apache/commons/math/ode/FirstOrderConverter.java,111,** first time derivative of the state vector. */
False,src/main/java/org/apache/commons/math/ode/FirstOrderConverter.java,src/main/java/org/apache/commons/math/ode/FirstOrderConverter.java,112,rivate double[] zDot;
False,src/main/java/org/apache/commons/math/ode/FirstOrderConverter.java,src/main/java/org/apache/commons/math/ode/FirstOrderConverter.java,114,** second time derivative of the state vector. */
False,src/main/java/org/apache/commons/math/ode/FirstOrderConverter.java,src/main/java/org/apache/commons/math/ode/FirstOrderConverter.java,115,rivate double[] zDDot;
False,src/main/java/org/apache/commons/math/ode/MultistepIntegrator.java,src/main/java/org/apache/commons/math/ode/MultistepIntegrator.java,61,** Starter integrator. */
False,src/main/java/org/apache/commons/math/ode/MultistepIntegrator.java,src/main/java/org/apache/commons/math/ode/MultistepIntegrator.java,62,rivate FirstOrderIntegrator starter;
False,src/main/java/org/apache/commons/math/ode/MultistepIntegrator.java,src/main/java/org/apache/commons/math/ode/MultistepIntegrator.java,64,** Number of steps of the multistep method (excluding the one being computed). */
False,src/main/java/org/apache/commons/math/ode/MultistepIntegrator.java,src/main/java/org/apache/commons/math/ode/MultistepIntegrator.java,65,rivate final int nSteps;
True,src/main/java/org/apache/commons/math/ode/MultistepIntegrator.java,src/main/java/org/apache/commons/math/ode/MultistepIntegrator.java,69,/** Starter integrator. */
True,src/main/java/org/apache/commons/math/ode/MultistepIntegrator.java,src/main/java/org/apache/commons/math/ode/MultistepIntegrator.java,70,private FirstOrderIntegrator starter;
True,src/main/java/org/apache/commons/math/ode/MultistepIntegrator.java,src/main/java/org/apache/commons/math/ode/MultistepIntegrator.java,72,/** Number of steps of the multistep method (excluding the one being computed). */
True,src/main/java/org/apache/commons/math/ode/MultistepIntegrator.java,src/main/java/org/apache/commons/math/ode/MultistepIntegrator.java,73,private final int nSteps;
True,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,57,/** Allowed absolute scalar error. */
True,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,58,protected final double scalAbsoluteTolerance;
True,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,60,/** Allowed relative scalar error. */
True,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,61,protected final double scalRelativeTolerance;
True,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,63,/** Allowed absolute vectorial error. */
True,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,64,protected final double[] vecAbsoluteTolerance;
True,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,66,/** Allowed relative vectorial error. */
True,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,67,protected final double[] vecRelativeTolerance;
True,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,69,/** User supplied initial step. */
True,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,70,private double initialStep;
True,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,72,/** Minimal step. */
True,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,73,private final double minStep;
True,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,75,/** Maximal step. */
True,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,76,private final double maxStep;
False,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,313,** Minimal step. */
False,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,314,rivate double minStep;
False,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,316,** Maximal step. */
False,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,317,rivate double maxStep;
False,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,319,** User supplied initial step. */
False,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,320,rivate double initialStep;
False,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,322,** Allowed absolute scalar error. */
False,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,323,rotected double scalAbsoluteTolerance;
False,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,325,** Allowed relative scalar error. */
False,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,326,rotected double scalRelativeTolerance;
False,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,328,** Allowed absolute vectorial error. */
False,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,329,rotected double[] vecAbsoluteTolerance;
False,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,331,** Allowed relative vectorial error. */
False,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java,332,rotected double[] vecRelativeTolerance;
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,37,"/** Last row of the Butcher-array internal weights, element 0. */"
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,38,private static final double A70 =    35.0 /  384.0;
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,40,"// element 1 is zero, so it is neither stored nor used"
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,42,"/** Last row of the Butcher-array internal weights, element 2. */"
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,43,private static final double A72 =   500.0 / 1113.0;
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,45,"/** Last row of the Butcher-array internal weights, element 3. */"
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,46,private static final double A73 =   125.0 /  192.0;
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,48,"/** Last row of the Butcher-array internal weights, element 4. */"
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,49,private static final double A74 = -2187.0 / 6784.0;
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,51,"/** Last row of the Butcher-array internal weights, element 5. */"
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,52,private static final double A75 =    11.0 /   84.0;
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,54,"/** Shampine (1986) Dense output, element 0. */"
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,55,private static final double D0 =  -12715105075.0 /  11282082432.0;
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,57,"// element 1 is zero, so it is neither stored nor used"
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,59,"/** Shampine (1986) Dense output, element 2. */"
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,60,private static final double D2 =   87487479700.0 /  32700410799.0;
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,62,"/** Shampine (1986) Dense output, element 3. */"
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,63,private static final double D3 =  -10690763975.0 /   1880347072.0;
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,65,"/** Shampine (1986) Dense output, element 4. */"
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,66,private static final double D4 =  701980252875.0 / 199316789632.0;
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,68,"/** Shampine (1986) Dense output, element 5. */"
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,69,private static final double D5 =   -1453857185.0 /    822651844.0;
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,71,"/** Shampine (1986) Dense output, element 6. */"
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,72,private static final double D6 =      69997945.0 /     29380423.0;
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,74,/** Serializable version identifier */
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,75,private static final long serialVersionUID = 4104157279605906956L;
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,77,/** First vector for interpolation. */
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,78,private double[] v1;
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,80,/** Second vector for interpolation. */
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,81,private double[] v2;
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,83,/** Third vector for interpolation. */
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,84,private double[] v3;
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,86,/** Fourth vector for interpolation. */
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,87,private double[] v4;
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,89,/** Initialization indicator for the interpolation vectors. */
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,90,private boolean vectorsInitialized;
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,159,** First vector for interpolation. */
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,160,rivate double[] v1;
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,162,** Second vector for interpolation. */
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,163,rivate double[] v2;
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,165,** Third vector for interpolation. */
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,166,rivate double[] v3;
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,168,** Fourth vector for interpolation. */
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,169,rivate double[] v4;
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,171,** Initialization indicator for the interpolation vectors. */
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,172,rivate boolean vectorsInitialized;
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,174,"** Last row of the Butcher-array internal weights, element 0. */"
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,175,rivate static final double A70 =    35.0 /  384.0;
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,177,"/ element 1 is zero, so it is neither stored nor used"
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,179,"** Last row of the Butcher-array internal weights, element 2. */"
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,180,rivate static final double A72 =   500.0 / 1113.0;
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,182,"** Last row of the Butcher-array internal weights, element 3. */"
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,183,rivate static final double A73 =   125.0 /  192.0;
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,185,"** Last row of the Butcher-array internal weights, element 4. */"
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,186,rivate static final double A74 = -2187.0 / 6784.0;
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,188,"** Last row of the Butcher-array internal weights, element 5. */"
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,189,rivate static final double A75 =    11.0 /   84.0;
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,191,"** Shampine (1986) Dense output, element 0. */"
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,192,rivate static final double D0 =  -12715105075.0 /  11282082432.0;
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,194,"/ element 1 is zero, so it is neither stored nor used"
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,196,"** Shampine (1986) Dense output, element 2. */"
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,197,rivate static final double D2 =   87487479700.0 /  32700410799.0;
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,199,"** Shampine (1986) Dense output, element 3. */"
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,200,rivate static final double D3 =  -10690763975.0 /   1880347072.0;
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,202,"** Shampine (1986) Dense output, element 4. */"
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,203,rivate static final double D4 =  701980252875.0 / 199316789632.0;
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,205,"** Shampine (1986) Dense output, element 5. */"
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,206,rivate static final double D5 =   -1453857185.0 /    822651844.0;
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,208,"** Shampine (1986) Dense output, element 6. */"
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,209,rivate static final double D6 =      69997945.0 /     29380423.0;
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,211,** Serializable version identifier */
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java,212,rivate static final long serialVersionUID = 4104157279605906956L;
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,42,/** Serializable version identifier */
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,43,private static final long serialVersionUID = 7152276390558450974L;
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,45,"/** Propagation weights, element 1. */"
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,46,private static final double B_01 =         104257.0 / 1920240.0;
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,48,"// elements 2 to 5 are zero, so they are neither stored nor used"
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,50,"/** Propagation weights, element 6. */"
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,51,private static final double B_06 =        3399327.0 / 763840.0;
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,53,"/** Propagation weights, element 7. */"
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,54,private static final double B_07 =       66578432.0 / 35198415.0;
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,56,"/** Propagation weights, element 8. */"
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,57,private static final double B_08 =    -1674902723.0 / 288716400.0;
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,59,"/** Propagation weights, element 9. */"
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,60,private static final double B_09 = 54980371265625.0 / 176692375811392.0;
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,62,"/** Propagation weights, element 10. */"
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,63,private static final double B_10 =        -734375.0 / 4826304.0;
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,65,"/** Propagation weights, element 11. */"
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,66,private static final double B_11 =      171414593.0 / 851261400.0;
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,68,"/** Propagation weights, element 12. */"
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,69,private static final double B_12 =         137909.0 / 3084480.0;
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,71,/** Time step for stage 14 (interpolation only). */
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,72,private static final double C14    = 1.0 / 10.0;
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,74,"/** Internal weights for stage 14, element 1. */"
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,75,private static final double K14_01 =       13481885573.0 / 240030000000.0      - B_01;
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,77,"// elements 2 to 5 are zero, so they are neither stored nor used"
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,79,"/** Internal weights for stage 14, element 6. */"
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,80,private static final double K14_06 =                 0.0                       - B_06;
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,82,"/** Internal weights for stage 14, element 7. */"
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,83,private static final double K14_07 =      139418837528.0 / 549975234375.0      - B_07;
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,85,"/** Internal weights for stage 14, element 8. */"
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,86,private static final double K14_08 =   -11108320068443.0 / 45111937500000.0    - B_08;
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,88,"/** Internal weights for stage 14, element 9. */"
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,89,private static final double K14_09 = -1769651421925959.0 / 14249385146080000.0 - B_09;
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,91,"/** Internal weights for stage 14, element 10. */"
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,92,private static final double K14_10 =          57799439.0 / 377055000.0         - B_10;
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,94,"/** Internal weights for stage 14, element 11. */"
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,95,private static final double K14_11 =      793322643029.0 / 96734250000000.0    - B_11;
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,97,"/** Internal weights for stage 14, element 12. */"
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,98,private static final double K14_12 =        1458939311.0 / 192780000000.0      - B_12;
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,100,"/** Internal weights for stage 14, element 13. */"
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,101,private static final double K14_13 =             -4149.0 / 500000.0;
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,103,/** Time step for stage 15 (interpolation only). */
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,104,private static final double C15    = 1.0 / 5.0;
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,107,"/** Internal weights for stage 15, element 1. */"
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,108,private static final double K15_01 =     1595561272731.0 / 50120273500000.0    - B_01;
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,110,"// elements 2 to 5 are zero, so they are neither stored nor used"
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,112,"/** Internal weights for stage 15, element 6. */"
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,113,private static final double K15_06 =      975183916491.0 / 34457688031250.0    - B_06;
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,115,"/** Internal weights for stage 15, element 7. */"
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,116,private static final double K15_07 =    38492013932672.0 / 718912673015625.0   - B_07;
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,118,"/** Internal weights for stage 15, element 8. */"
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,119,private static final double K15_08 = -1114881286517557.0 / 20298710767500000.0 - B_08;
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,121,"/** Internal weights for stage 15, element 9. */"
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,122,private static final double K15_09 =                 0.0                       - B_09;
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,124,"/** Internal weights for stage 15, element 10. */"
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,125,private static final double K15_10 =                 0.0                       - B_10;
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,127,"/** Internal weights for stage 15, element 11. */"
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,128,private static final double K15_11 =    -2538710946863.0 / 23431227861250000.0 - B_11;
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,130,"/** Internal weights for stage 15, element 12. */"
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,131,private static final double K15_12 =        8824659001.0 / 23066716781250.0    - B_12;
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,133,"/** Internal weights for stage 15, element 13. */"
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,134,private static final double K15_13 =      -11518334563.0 / 33831184612500.0;
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,136,"/** Internal weights for stage 15, element 14. */"
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,137,private static final double K15_14 =        1912306948.0 / 13532473845.0;
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,139,/** Time step for stage 16 (interpolation only). */
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,140,private static final double C16    = 7.0 / 9.0;
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,143,"/** Internal weights for stage 16, element 1. */"
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,144,private static final double K16_01 =      -13613986967.0 / 31741908048.0       - B_01;
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,146,"// elements 2 to 5 are zero, so they are neither stored nor used"
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,148,"/** Internal weights for stage 16, element 6. */"
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,149,private static final double K16_06 =       -4755612631.0 / 1012344804.0        - B_06;
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,151,"/** Internal weights for stage 16, element 7. */"
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,152,private static final double K16_07 =    42939257944576.0 / 5588559685701.0     - B_07;
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,154,"/** Internal weights for stage 16, element 8. */"
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,155,private static final double K16_08 =    77881972900277.0 / 19140370552944.0    - B_08;
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,157,"/** Internal weights for stage 16, element 9. */"
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,158,private static final double K16_09 =    22719829234375.0 / 63689648654052.0    - B_09;
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,160,"/** Internal weights for stage 16, element 10. */"
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,161,private static final double K16_10 =                 0.0                       - B_10;
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,163,"/** Internal weights for stage 16, element 11. */"
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,164,private static final double K16_11 =                 0.0                       - B_11;
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,166,"/** Internal weights for stage 16, element 12. */"
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,167,private static final double K16_12 =                 0.0                       - B_12;
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,169,"/** Internal weights for stage 16, element 13. */"
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,170,private static final double K16_13 =       -1199007803.0 / 857031517296.0;
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,172,"/** Internal weights for stage 16, element 14. */"
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,173,private static final double K16_14 =      157882067000.0 / 53564469831.0;
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,175,"/** Internal weights for stage 16, element 15. */"
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,176,private static final double K16_15 =     -290468882375.0 / 31741908048.0;
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,178,/** Interpolation weights.
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,179,* (beware that only the non-null values are in the table)
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,181,private static final double[][] D = {
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,183,"{        -17751989329.0 / 2106076560.0,               4272954039.0 / 7539864640.0,"
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,184,"-118476319744.0 / 38604839385.0,            755123450731.0 / 316657731600.0,"
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,185,"3692384461234828125.0 / 1744130441634250432.0,     -4612609375.0 / 5293382976.0,"
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,186,"2091772278379.0 / 933644586600.0,             2136624137.0 / 3382989120.0,"
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,187,"-126493.0 / 1421424.0,                    98350000.0 / 5419179.0,"
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,188,"-18878125.0 / 2053168.0,                 -1944542619.0 / 438351368.0},"
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,190,"{         32941697297.0 / 3159114840.0,             456696183123.0 / 1884966160.0,"
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,191,"19132610714624.0 / 115814518155.0,       -177904688592943.0 / 474986597400.0,"
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,192,"-4821139941836765625.0 / 218016305204281304.0,      30702015625.0 / 3970037232.0,"
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,193,"-85916079474274.0 / 2800933759800.0,           -5919468007.0 / 634310460.0,"
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,194,"2479159.0 / 157936.0,                    -18750000.0 / 602131.0,"
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,195,"-19203125.0 / 2053168.0,                 15700361463.0 / 438351368.0},"
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,197,"{         12627015655.0 / 631822968.0,              -72955222965.0 / 188496616.0,"
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,198,"-13145744952320.0 / 69488710893.0,          30084216194513.0 / 56998391688.0,"
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,199,"-296858761006640625.0 / 25648977082856624.0,         569140625.0 / 82709109.0,"
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,200,"-18684190637.0 / 18672891732.0,                69644045.0 / 89549712.0,"
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,201,"-11847025.0 / 4264272.0,                  -978650000.0 / 16257537.0,"
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,202,"519371875.0 / 6159504.0,                  5256837225.0 / 438351368.0},"
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,204,"{          -450944925.0 / 17550638.0,               -14532122925.0 / 94248308.0,"
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,205,"-595876966400.0 / 2573655959.0,             188748653015.0 / 527762886.0,"
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,206,"2545485458115234375.0 / 27252038150535163.0,       -1376953125.0 / 36759604.0,"
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,207,"53995596795.0 / 518691437.0,                 210311225.0 / 7047894.0,"
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,208,"-1718875.0 / 39484.0,                      58000000.0 / 602131.0,"
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,209,"-1546875.0 / 39484.0,                   -1262172375.0 / 8429834.0}"
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,213,/** Last evaluations. */
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,214,private double[][] yDotKLast;
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,216,/** Vectors for interpolation. */
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,217,private double[][] v;
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,219,/** Initialization indicator for the interpolation vectors. */
True,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,220,private boolean vectorsInitialized;
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,298,** Last evaluations. */
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,299,rivate double[][] yDotKLast;
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,301,** Vectors for interpolation. */
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,302,rivate double[][] v;
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,304,** Initialization indicator for the interpolation vectors. */
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,305,rivate boolean vectorsInitialized;
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,307,"** Propagation weights, element 1. */"
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,308,rivate static final double B_01 =         104257.0 / 1920240.0;
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,310,"/ elements 2 to 5 are zero, so they are neither stored nor used"
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,312,"** Propagation weights, element 6. */"
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,313,rivate static final double B_06 =        3399327.0 / 763840.0;
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,315,"** Propagation weights, element 7. */"
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,316,rivate static final double B_07 =       66578432.0 / 35198415.0;
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,318,"** Propagation weights, element 8. */"
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,319,rivate static final double B_08 =    -1674902723.0 / 288716400.0;
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,321,"** Propagation weights, element 9. */"
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,322,rivate static final double B_09 = 54980371265625.0 / 176692375811392.0;
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,324,"** Propagation weights, element 10. */"
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,325,rivate static final double B_10 =        -734375.0 / 4826304.0;
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,327,"** Propagation weights, element 11. */"
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,328,rivate static final double B_11 =      171414593.0 / 851261400.0;
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,330,"** Propagation weights, element 12. */"
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,331,rivate static final double B_12 =         137909.0 / 3084480.0;
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,333,** Time step for stage 14 (interpolation only). */
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,334,rivate static final double C14    = 1.0 / 10.0;
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,336,"** Internal weights for stage 14, element 1. */"
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,337,rivate static final double K14_01 =       13481885573.0 / 240030000000.0      - B_01;
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,339,"/ elements 2 to 5 are zero, so they are neither stored nor used"
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,341,"** Internal weights for stage 14, element 6. */"
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,342,rivate static final double K14_06 =                 0.0                       - B_06;
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,344,"** Internal weights for stage 14, element 7. */"
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,345,rivate static final double K14_07 =      139418837528.0 / 549975234375.0      - B_07;
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,347,"** Internal weights for stage 14, element 8. */"
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,348,rivate static final double K14_08 =   -11108320068443.0 / 45111937500000.0    - B_08;
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,350,"** Internal weights for stage 14, element 9. */"
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,351,rivate static final double K14_09 = -1769651421925959.0 / 14249385146080000.0 - B_09;
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,353,"** Internal weights for stage 14, element 10. */"
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,354,rivate static final double K14_10 =          57799439.0 / 377055000.0         - B_10;
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,356,"** Internal weights for stage 14, element 11. */"
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,357,rivate static final double K14_11 =      793322643029.0 / 96734250000000.0    - B_11;
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,359,"** Internal weights for stage 14, element 12. */"
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,360,rivate static final double K14_12 =        1458939311.0 / 192780000000.0      - B_12;
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,362,"** Internal weights for stage 14, element 13. */"
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,363,rivate static final double K14_13 =             -4149.0 / 500000.0;
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,365,** Time step for stage 15 (interpolation only). */
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,366,rivate static final double C15    = 1.0 / 5.0;
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,369,"** Internal weights for stage 15, element 1. */"
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,370,rivate static final double K15_01 =     1595561272731.0 / 50120273500000.0    - B_01;
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,372,"/ elements 2 to 5 are zero, so they are neither stored nor used"
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,374,"** Internal weights for stage 15, element 6. */"
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,375,rivate static final double K15_06 =      975183916491.0 / 34457688031250.0    - B_06;
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,377,"** Internal weights for stage 15, element 7. */"
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,378,rivate static final double K15_07 =    38492013932672.0 / 718912673015625.0   - B_07;
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,380,"** Internal weights for stage 15, element 8. */"
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,381,rivate static final double K15_08 = -1114881286517557.0 / 20298710767500000.0 - B_08;
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,383,"** Internal weights for stage 15, element 9. */"
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,384,rivate static final double K15_09 =                 0.0                       - B_09;
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,386,"** Internal weights for stage 15, element 10. */"
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,387,rivate static final double K15_10 =                 0.0                       - B_10;
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,389,"** Internal weights for stage 15, element 11. */"
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,390,rivate static final double K15_11 =    -2538710946863.0 / 23431227861250000.0 - B_11;
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,392,"** Internal weights for stage 15, element 12. */"
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,393,rivate static final double K15_12 =        8824659001.0 / 23066716781250.0    - B_12;
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,395,"** Internal weights for stage 15, element 13. */"
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,396,rivate static final double K15_13 =      -11518334563.0 / 33831184612500.0;
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,398,"** Internal weights for stage 15, element 14. */"
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,399,rivate static final double K15_14 =        1912306948.0 / 13532473845.0;
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,401,** Time step for stage 16 (interpolation only). */
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,402,rivate static final double C16    = 7.0 / 9.0;
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,405,"** Internal weights for stage 16, element 1. */"
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,406,rivate static final double K16_01 =      -13613986967.0 / 31741908048.0       - B_01;
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,408,"/ elements 2 to 5 are zero, so they are neither stored nor used"
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,410,"** Internal weights for stage 16, element 6. */"
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,411,rivate static final double K16_06 =       -4755612631.0 / 1012344804.0        - B_06;
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,413,"** Internal weights for stage 16, element 7. */"
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,414,rivate static final double K16_07 =    42939257944576.0 / 5588559685701.0     - B_07;
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,416,"** Internal weights for stage 16, element 8. */"
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,417,rivate static final double K16_08 =    77881972900277.0 / 19140370552944.0    - B_08;
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,419,"** Internal weights for stage 16, element 9. */"
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,420,rivate static final double K16_09 =    22719829234375.0 / 63689648654052.0    - B_09;
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,422,"** Internal weights for stage 16, element 10. */"
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,423,rivate static final double K16_10 =                 0.0                       - B_10;
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,425,"** Internal weights for stage 16, element 11. */"
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,426,rivate static final double K16_11 =                 0.0                       - B_11;
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,428,"** Internal weights for stage 16, element 12. */"
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,429,rivate static final double K16_12 =                 0.0                       - B_12;
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,431,"** Internal weights for stage 16, element 13. */"
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,432,rivate static final double K16_13 =       -1199007803.0 / 857031517296.0;
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,434,"** Internal weights for stage 16, element 14. */"
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,435,rivate static final double K16_14 =      157882067000.0 / 53564469831.0;
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,437,"** Internal weights for stage 16, element 15. */"
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,438,rivate static final double K16_15 =     -290468882375.0 / 31741908048.0;
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,440,** Interpolation weights.
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,441, (beware that only the non-null values are in the table)
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,443,rivate static final double[][] D = {
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,445,"        -17751989329.0 / 2106076560.0,               4272954039.0 / 7539864640.0,"
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,446,"118476319744.0 / 38604839385.0,            755123450731.0 / 316657731600.0,"
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,447,"692384461234828125.0 / 1744130441634250432.0,     -4612609375.0 / 5293382976.0,"
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,448,"091772278379.0 / 933644586600.0,             2136624137.0 / 3382989120.0,"
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,449,"126493.0 / 1421424.0,                    98350000.0 / 5419179.0,"
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,450,"18878125.0 / 2053168.0,                 -1944542619.0 / 438351368.0},"
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,452,"         32941697297.0 / 3159114840.0,             456696183123.0 / 1884966160.0,"
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,453,"9132610714624.0 / 115814518155.0,       -177904688592943.0 / 474986597400.0,"
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,454,"4821139941836765625.0 / 218016305204281304.0,      30702015625.0 / 3970037232.0,"
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,455,"85916079474274.0 / 2800933759800.0,           -5919468007.0 / 634310460.0,"
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,456,"479159.0 / 157936.0,                    -18750000.0 / 602131.0,"
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,457,"19203125.0 / 2053168.0,                 15700361463.0 / 438351368.0},"
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,459,"         12627015655.0 / 631822968.0,              -72955222965.0 / 188496616.0,"
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,460,"13145744952320.0 / 69488710893.0,          30084216194513.0 / 56998391688.0,"
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,461,"296858761006640625.0 / 25648977082856624.0,         569140625.0 / 82709109.0,"
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,462,"18684190637.0 / 18672891732.0,                69644045.0 / 89549712.0,"
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,463,"11847025.0 / 4264272.0,                  -978650000.0 / 16257537.0,"
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,464,"19371875.0 / 6159504.0,                  5256837225.0 / 438351368.0},"
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,466,"          -450944925.0 / 17550638.0,               -14532122925.0 / 94248308.0,"
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,467,"595876966400.0 / 2573655959.0,             188748653015.0 / 527762886.0,"
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,468,"545485458115234375.0 / 27252038150535163.0,       -1376953125.0 / 36759604.0,"
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,469,"3995596795.0 / 518691437.0,                 210311225.0 / 7047894.0,"
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,470,"1718875.0 / 39484.0,                      58000000.0 / 602131.0,"
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,471,"1546875.0 / 39484.0,                   -1262172375.0 / 8429834.0}"
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,475,** Serializable version identifier */
False,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java,476,rivate static final long serialVersionUID = 7152276390558450974L;
True,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,70,/** Indicator for <i>fsal</i> methods. */
True,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,71,private final boolean fsal;
True,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,73,/** Time steps from Butcher array (without the first zero). */
True,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,74,private final double[] c;
True,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,76,/** Internal weights from Butcher array (without the first empty row). */
True,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,77,private final double[][] a;
True,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,79,/** External weights for the high order method from Butcher array. */
True,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,80,private final double[] b;
True,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,82,/** Prototype of the step interpolator. */
True,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,83,private final RungeKuttaStepInterpolator prototype;
True,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,85,/** Stepsize control exponent. */
True,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,86,private final double exp;
True,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,88,/** Safety factor for stepsize control. */
True,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,89,private double safety;
True,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,91,/** Minimal reduction factor for stepsize control. */
True,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,92,private double minReduction;
True,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,94,/** Maximal growth factor for stepsize control. */
True,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,95,private double maxGrowth;
False,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,375,** Indicator for <i>fsal</i> methods. */
False,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,376,rivate boolean fsal;
False,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,378,** Time steps from Butcher array (without the first zero). */
False,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,379,rivate double[] c;
False,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,381,** Internal weights from Butcher array (without the first empty row). */
False,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,382,rivate double[][] a;
False,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,384,** External weights for the high order method from Butcher array. */
False,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,385,rivate double[] b;
False,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,387,** Prototype of the step interpolator. */
False,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,388,rivate RungeKuttaStepInterpolator prototype;
False,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,390,** Stepsize control exponent. */
False,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,391,rivate double exp;
False,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,393,** Safety factor for stepsize control. */
False,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,394,rivate double safety;
False,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,396,** Minimal reduction factor for stepsize control. */
False,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,397,rivate double minReduction;
False,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,399,** Maximal growth factor for stepsize control. */
False,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java,400,rivate double maxGrowth;
True,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,50,/** First Gill coefficient. */
True,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,51,private static final double TWO_MINUS_SQRT_2 = 2 - Math.sqrt(2.0);
True,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,53,/** Second Gill coefficient. */
True,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,54,private static final double TWO_PLUS_SQRT_2 = 2 + Math.sqrt(2.0);
True,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,56,/** Serializable version identifier */
True,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,57,private static final long serialVersionUID = -107804074496313322L;
False,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,115,** First Gill coefficient. */
False,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,116,rivate static final double TWO_MINUS_SQRT_2 = 2 - Math.sqrt(2.0);
False,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,118,** Second Gill coefficient. */
False,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,119,rivate static final double TWO_PLUS_SQRT_2 = 2 + Math.sqrt(2.0);
False,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,121,** Serializable version identifier */
False,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java,122,rivate static final long serialVersionUID = -107804074496313322L;
False,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,96,** Integrator method name. */
False,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,97,"rivate static final String METHOD_NAME = ""Gragg-Bulirsch-Stoer"";"
True,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,96,/** Integrator method name. */
True,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,97,"private static final String METHOD_NAME = ""Gragg-Bulirsch-Stoer"";"
True,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,99,/** maximal order. */
True,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,100,private int maxOrder;
True,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,102,/** step size sequence. */
True,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,103,private int[] sequence;
True,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,105,"/** overall cost of applying step reduction up to iteration k+1, in number of calls. */"
True,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,106,private int[] costPerStep;
True,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,108,/** cost per unit step. */
True,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,109,private double[] costPerTimeUnit;
True,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,111,/** optimal steps for each order. */
True,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,112,private double[] optimalStep;
True,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,114,/** extrapolation coefficients. */
True,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,115,private double[][] coeff;
True,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,117,/** stability check enabling parameter. */
True,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,118,private boolean performTest;
True,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,120,/** maximal number of checks for each iteration. */
True,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,121,private int maxChecks;
True,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,123,/** maximal number of iterations for which checks are performed. */
True,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,124,private int maxIter;
True,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,126,/** stepsize reduction factor in case of stability check failure. */
True,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,127,private double stabilityReduction;
True,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,129,/** first stepsize control factor. */
True,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,130,private double stepControl1;
True,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,132,/** second stepsize control factor. */
True,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,133,private double stepControl2;
True,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,135,/** third stepsize control factor. */
True,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,136,private double stepControl3;
True,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,138,/** fourth stepsize control factor. */
True,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,139,private double stepControl4;
True,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,141,/** first order control factor. */
True,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,142,private double orderControl1;
True,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,144,/** second order control factor. */
True,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,145,private double orderControl2;
True,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,147,/** dense outpute required. */
True,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,148,private boolean denseOutput;
True,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,150,/** use interpolation error in stepsize control. */
True,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,151,private boolean useInterpolationError;
True,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,153,/** interpolation order control parameter. */
True,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,154,private int mudif;
False,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,944,** maximal order. */
False,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,945,rivate int maxOrder;
False,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,947,** step size sequence. */
False,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,948,rivate int[] sequence;
False,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,950,"** overall cost of applying step reduction up to iteration k+1,"
False,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,951,  in number of calls.
False,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,953,rivate int[] costPerStep;
False,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,955,** cost per unit step. */
False,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,956,rivate double[] costPerTimeUnit;
False,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,958,** optimal steps for each order. */
False,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,959,rivate double[] optimalStep;
False,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,961,** extrapolation coefficients. */
False,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,962,rivate double[][] coeff;
False,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,964,** stability check enabling parameter. */
False,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,965,rivate boolean performTest;
False,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,967,** maximal number of checks for each iteration. */
False,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,968,rivate int maxChecks;
False,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,970,** maximal number of iterations for which checks are performed. */
False,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,971,rivate int maxIter;
False,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,973,** stepsize reduction factor in case of stability check failure. */
False,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,974,rivate double stabilityReduction;
False,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,976,** first stepsize control factor. */
False,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,977,rivate double stepControl1;
False,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,979,** second stepsize control factor. */
False,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,980,rivate double stepControl2;
False,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,982,** third stepsize control factor. */
False,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,983,rivate double stepControl3;
False,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,985,** fourth stepsize control factor. */
False,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,986,rivate double stepControl4;
False,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,988,** first order control factor. */
False,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,989,rivate double orderControl1;
False,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,991,** second order control factor. */
False,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,992,rivate double orderControl2;
False,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,994,** dense outpute required. */
False,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,995,rivate boolean denseOutput;
False,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,997,** use interpolation error in stepsize control. */
False,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,998,rivate boolean useInterpolationError;
False,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,1000,** interpolation order control parameter. */
False,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java,1001,rivate int mudif;
False,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,80,** Slope at the beginning of the step. */
False,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,81,rivate double[] y0Dot;
True,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,80,/** Serializable version identifier. */
True,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,81,private static final long serialVersionUID = 7320613236731409847L;
False,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,83,** State at the end of the step. */
False,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,84,rivate double[] y1;
True,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,83,/** Slope at the beginning of the step. */
True,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,84,private double[] y0Dot;
False,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,86,** Slope at the end of the step. */
False,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,87,rivate double[] y1Dot;
True,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,86,/** State at the end of the step. */
True,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,87,private double[] y1;
False,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,89,** Derivatives at the middle of the step.
False,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,90," element 0 is state at midpoint, element 1 is first derivative ..."
False,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,92,rivate double[][] yMidDots;
False,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,94,** Interpolation polynoms. */
False,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,95,rivate double[][] polynoms;
False,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,97,** Error coefficients for the interpolation. */
False,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,98,rivate double[] errfac;
False,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,100,** Degree of the interpolation polynoms. */
False,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,101,rivate int currentDegree;
False,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,103,** Reallocate the internal tables.
False,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,104, Reallocate the internal tables in order to be able to handle
False,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,105, interpolation polynoms up to the given degree
False,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,106, @param maxDegree maximal degree to handle
False,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,108,rivate void resetTables(final int maxDegree) {
False,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,110,f (maxDegree < 0) {
False,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,111,olynoms      = null;
False,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,112,rrfac        = null;
False,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,113,urrentDegree = -1;
False,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,114, else {
False,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,116,inal double[][] newPols = new double[maxDegree + 1][];
False,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,117,f (polynoms != null) {
False,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,118,"ystem.arraycopy(polynoms, 0, newPols, 0, polynoms.length);"
False,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,119,or (int i = polynoms.length; i < newPols.length; ++i) {
False,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,120,ewPols[i] = new double[currentState.length];
False,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,122, else {
False,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,123,or (int i = 0; i < newPols.length; ++i) {
False,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,124,ewPols[i] = new double[currentState.length];
False,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,127,olynoms = newPols;
True,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,89,/** Slope at the end of the step. */
True,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,90,private double[] y1Dot;
False,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,129,/ initialize the error factors array for interpolation
False,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,130,f (maxDegree <= 4) {
False,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,131,rrfac = null;
False,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,132, else {
False,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,133,rrfac = new double[maxDegree - 4];
False,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,134,or (int i = 0; i < errfac.length; ++i) {
False,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,135,inal int ip5 = i + 5;
False,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,136,rrfac[i] = 1.0 / (ip5 * ip5);
False,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,137,inal double e = 0.5 * Math.sqrt (((double) (i + 1)) / ip5);
False,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,138,or (int j = 0; j <= i; ++j) {
False,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,139,rrfac[i] *= e / (j + 1);
True,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,92,/** Derivatives at the middle of the step.
True,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,93,"* element 0 is state at midpoint, element 1 is first derivative ..."
True,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,95,private double[][] yMidDots;
False,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,144,urrentDegree = 0;
True,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,97,/** Interpolation polynoms. */
True,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,98,private double[][] polynoms;
True,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,100,/** Error coefficients for the interpolation. */
True,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,101,private double[] errfac;
True,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,103,/** Degree of the interpolation polynoms. */
True,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,104,private int currentDegree;
True,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,180,/** Reallocate the internal tables.
True,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,181,* Reallocate the internal tables in order to be able to handle
True,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,182,* interpolation polynoms up to the given degree
True,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,183,* @param maxDegree maximal degree to handle
True,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,185,private void resetTables(final int maxDegree) {
True,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,187,if (maxDegree < 0) {
True,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,188,polynoms      = null;
True,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,189,errfac        = null;
True,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,190,currentDegree = -1;
True,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,191,} else {
True,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,193,final double[][] newPols = new double[maxDegree + 1][];
True,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,194,if (polynoms != null) {
True,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,195,"System.arraycopy(polynoms, 0, newPols, 0, polynoms.length);"
True,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,196,for (int i = polynoms.length; i < newPols.length; ++i) {
True,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,197,newPols[i] = new double[currentState.length];
True,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,199,} else {
True,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,200,for (int i = 0; i < newPols.length; ++i) {
True,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,201,newPols[i] = new double[currentState.length];
True,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,204,polynoms = newPols;
True,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,206,// initialize the error factors array for interpolation
True,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,207,if (maxDegree <= 4) {
True,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,208,errfac = null;
True,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,209,} else {
True,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,210,errfac = new double[maxDegree - 4];
True,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,211,for (int i = 0; i < errfac.length; ++i) {
True,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,212,final int ip5 = i + 5;
True,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,213,errfac[i] = 1.0 / (ip5 * ip5);
True,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,214,final double e = 0.5 * Math.sqrt (((double) (i + 1)) / ip5);
True,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,215,for (int j = 0; j <= i; ++j) {
True,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,216,errfac[i] *= e / (j + 1);
True,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,221,currentDegree = 0;
False,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,399,** Serializable version identifier */
False,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java,400,rivate static final long serialVersionUID = 7320613236731409847L;
True,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java,36,/** Serializable version identifier */
True,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java,37,private static final long serialVersionUID = -3583240427587318654L;
False,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java,100,** Serializable version identifier */
False,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java,101,rivate static final long serialVersionUID = -3583240427587318654L;
True,src/main/java/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolator.java,47,/** Serializable version identifier */
True,src/main/java/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolator.java,48,private static final long serialVersionUID = -865524111506042509L;
False,src/main/java/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolator.java,97,** Serializable version identifier */
False,src/main/java/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolator.java,98,rivate static final long serialVersionUID = -865524111506042509L;
True,src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,57,/** Time steps from Butcher array (without the first zero). */
True,src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,58,private final double[] c;
True,src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,60,/** Internal weights from Butcher array (without the first empty row). */
True,src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,61,private final double[][] a;
True,src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,63,/** External weights for the high order method from Butcher array. */
True,src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,64,private final double[] b;
True,src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,66,/** Prototype of the step interpolator. */
True,src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,67,private final RungeKuttaStepInterpolator prototype;
True,src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,69,/** Integration step. */
True,src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,70,private final double step;
False,src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,203,** Time steps from Butcher array (without the first zero). */
False,src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,204,rivate double[] c;
False,src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,206,** Internal weights from Butcher array (without the first empty row). */
False,src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,207,rivate double[][] a;
False,src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,209,** External weights for the high order method from Butcher array. */
False,src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,210,rivate double[] b;
False,src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,212,** Prototype of the step interpolator. */
False,src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,213,rivate RungeKuttaStepInterpolator prototype;
False,src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,215,** Integration step. */
False,src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java,216,rivate double step;
True,src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator.java,40,/** Slopes at the intermediate points */
True,src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator.java,41,protected double[][] yDotK;
True,src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator.java,43,/** Reference to the integrator. */
True,src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator.java,44,protected AbstractIntegrator integrator;
False,src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator.java,177,** Slopes at the intermediate points */
False,src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator.java,178,rotected double[][] yDotK;
False,src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator.java,180,** Reference to the integrator. */
False,src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator.java,181,rotected AbstractIntegrator integrator;
True,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,52,/** Serializable version identifier */
True,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,53,private static final long serialVersionUID = -3345024435978721931L;
False,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,113,** Serializable version identifier */
False,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java,114,rivate static final long serialVersionUID = -3345024435978721931L;
False,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,40,** Private constructor.
False,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,41, The constructor is private to prevent users from creating
False,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,42, instances (Singleton design-pattern).
False,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,44,rivate DummyStepHandler() {
True,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,39,/** Private constructor.
True,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,40,* The constructor is private to prevent users from creating
True,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,41,* instances (Singleton design-pattern).
True,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,43,private DummyStepHandler() {
True,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,46,/** Get the only instance.
True,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,47,* @return the only instance
True,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,49,public static DummyStepHandler getInstance() {
True,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,50,return LazyHolder.INSTANCE;
False,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,47,** Get the only instance.
False,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,48, @return the only instance
False,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,50,ublic static DummyStepHandler getInstance() {
False,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,51,eturn INSTANCE;
True,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,53,/** Determines whether this handler needs dense output.
True,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,54,"* Since this handler does nothing, it does not require dense output."
True,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,55,* @return always false
True,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,57,public boolean requiresDenseOutput() {
True,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,58,return false;
False,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,54,** Determines whether this handler needs dense output.
False,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,55," Since this handler does nothing, it does not require dense output."
False,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,56, @return always false
False,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,58,ublic boolean requiresDenseOutput() {
False,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,59,eturn false;
True,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,61,/** Reset the step handler.
True,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,62,* Initialize the internal data as required before the first step is
True,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,63,* handled.
True,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,65,public void reset() {
False,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,62,** Reset the step handler.
False,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,63, Initialize the internal data as required before the first step is
False,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,64, handled.
False,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,66,ublic void reset() {
True,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,69,* Handle the last accepted step.
True,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,70,* This method does nothing in this class.
True,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,71,* @param interpolator interpolator for the last accepted step. For
True,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,72,"* efficiency purposes, the various integrators reuse the same"
True,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,73,"* object on each call, so if the instance wants to keep it across"
True,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,74,* all calls (for example to provide at the end of the integration a
True,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,75,"* continuous model valid throughout the integration range), it"
True,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,76,* should build a local copy using the clone method and store this
True,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,77,* copy.
True,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,78,* @param isLast true if the step is the last one
True,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,80,"public void handleStep(final StepInterpolator interpolator, final boolean isLast) {"
False,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,70, Handle the last accepted step.
False,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,71, This method does nothing in this class.
False,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,72, @param interpolator interpolator for the last accepted step. For
False,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,73," efficiency purposes, the various integrators reuse the same"
False,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,74," object on each call, so if the instance wants to keep it across"
False,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,75, all calls (for example to provide at the end of the integration a
False,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,76," continuous model valid throughout the integration range), it"
False,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,77, should build a local copy using the clone method and store this
False,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,78, copy.
False,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,79, @param isLast true if the step is the last one
False,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,81,"ublic void handleStep(final StepInterpolator interpolator, final boolean isLast) {"
True,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,83,// CHECKSTYLE: stop HideUtilityClassConstructor
True,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,84,/** Holder for the instance.
True,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,85,* <p>We use here the Initialization On Demand Holder Idiom.</p>
True,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,87,private static class LazyHolder {
True,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,88,/** Cached field instance. */
True,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,89,private static final DummyStepHandler INSTANCE = new DummyStepHandler();
True,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,91,// CHECKSTYLE: resume HideUtilityClassConstructor
False,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,84,** The only instance. */
False,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,85,rivate static final DummyStepHandler INSTANCE = new DummyStepHandler();
True,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,93,/** Handle deserialization of the singleton.
True,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,94,* @return the singleton instance
True,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,96,private Object readResolve() {
True,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,97,// return the singleton instance
True,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java,98,return LazyHolder.INSTANCE;
True,src/main/java/org/apache/commons/math/ode/sampling/DummyStepInterpolator.java,src/main/java/org/apache/commons/math/ode/sampling/DummyStepInterpolator.java,43,/** Serializable version identifier */
True,src/main/java/org/apache/commons/math/ode/sampling/DummyStepInterpolator.java,src/main/java/org/apache/commons/math/ode/sampling/DummyStepInterpolator.java,44,private static final long serialVersionUID = 1708010296707839488L;
False,src/main/java/org/apache/commons/math/ode/sampling/DummyStepInterpolator.java,src/main/java/org/apache/commons/math/ode/sampling/DummyStepInterpolator.java,126,** Serializable version identifier */
False,src/main/java/org/apache/commons/math/ode/sampling/DummyStepInterpolator.java,src/main/java/org/apache/commons/math/ode/sampling/DummyStepInterpolator.java,127,rivate static final long serialVersionUID = 1708010296707839488L;
True,src/main/java/org/apache/commons/math/ode/sampling/NordsieckStepInterpolator.java,src/main/java/org/apache/commons/math/ode/sampling/NordsieckStepInterpolator.java,45,/** State variation. */
True,src/main/java/org/apache/commons/math/ode/sampling/NordsieckStepInterpolator.java,src/main/java/org/apache/commons/math/ode/sampling/NordsieckStepInterpolator.java,46,protected double[] stateVariation;
False,src/main/java/org/apache/commons/math/ode/sampling/NordsieckStepInterpolator.java,src/main/java/org/apache/commons/math/ode/sampling/NordsieckStepInterpolator.java,62,** State variation. */
False,src/main/java/org/apache/commons/math/ode/sampling/NordsieckStepInterpolator.java,src/main/java/org/apache/commons/math/ode/sampling/NordsieckStepInterpolator.java,63,rotected double[] stateVariation;
False,src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,48,** Maximal number of iterations allowed. */
False,src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,49,rivate int maxIterations;
False,src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,51,** Number of iterations already performed. */
False,src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,52,rivate int iterations;
False,src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,54,** Maximal number of evaluations allowed. */
False,src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,55,rivate int maxEvaluations;
False,src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,57,** Number of evaluations already performed. */
False,src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,58,rivate int objectiveEvaluations;
False,src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,60,** Number of jacobian evaluations. */
False,src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,61,rivate int jacobianEvaluations;
False,src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,81,** Objective function. */
False,src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,82,rivate DifferentiableMultivariateVectorialFunction function;
False,src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,84,** Objective function derivatives. */
False,src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,85,rivate MultivariateMatrixFunction jF;
True,src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,84,/** Maximal number of iterations allowed. */
True,src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,85,private int maxIterations;
True,src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,87,/** Number of iterations already performed. */
True,src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,88,private int iterations;
True,src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,90,/** Maximal number of evaluations allowed. */
True,src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,91,private int maxEvaluations;
True,src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,93,/** Number of evaluations already performed. */
True,src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,94,private int objectiveEvaluations;
True,src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,96,/** Number of jacobian evaluations. */
True,src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,97,private int jacobianEvaluations;
True,src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,99,/** Objective function. */
True,src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,100,private DifferentiableMultivariateVectorialFunction function;
True,src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,102,/** Objective function derivatives. */
True,src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java,103,private MultivariateMatrixFunction jF;
True,src/main/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java,45,/** Convergence checker. */
True,src/main/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java,46,protected RealConvergenceChecker checker;
True,src/main/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java,48,/** Type of optimization. */
True,src/main/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java,49,protected GoalType goal;
True,src/main/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java,51,/** Current point set. */
True,src/main/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java,52,protected double[] point;
False,src/main/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java,60,** Convergence checker. */
False,src/main/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java,61,rotected RealConvergenceChecker checker;
False,src/main/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java,69,** Type of optimization. */
False,src/main/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java,70,rotected GoalType goal;
False,src/main/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java,72,** Current point set. */
False,src/main/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java,src/main/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java,73,rotected double[] point;
False,src/main/java/org/apache/commons/math/optimization/linear/AbstractLinearOptimizer.java,src/main/java/org/apache/commons/math/optimization/linear/AbstractLinearOptimizer.java,40,** Maximal number of iterations allowed. */
False,src/main/java/org/apache/commons/math/optimization/linear/AbstractLinearOptimizer.java,src/main/java/org/apache/commons/math/optimization/linear/AbstractLinearOptimizer.java,41,rivate int maxIterations;
False,src/main/java/org/apache/commons/math/optimization/linear/AbstractLinearOptimizer.java,src/main/java/org/apache/commons/math/optimization/linear/AbstractLinearOptimizer.java,43,** Number of iterations already performed. */
False,src/main/java/org/apache/commons/math/optimization/linear/AbstractLinearOptimizer.java,src/main/java/org/apache/commons/math/optimization/linear/AbstractLinearOptimizer.java,44,rivate int iterations;
True,src/main/java/org/apache/commons/math/optimization/linear/AbstractLinearOptimizer.java,src/main/java/org/apache/commons/math/optimization/linear/AbstractLinearOptimizer.java,52,/** Maximal number of iterations allowed. */
True,src/main/java/org/apache/commons/math/optimization/linear/AbstractLinearOptimizer.java,src/main/java/org/apache/commons/math/optimization/linear/AbstractLinearOptimizer.java,53,private int maxIterations;
True,src/main/java/org/apache/commons/math/optimization/linear/AbstractLinearOptimizer.java,src/main/java/org/apache/commons/math/optimization/linear/AbstractLinearOptimizer.java,55,/** Number of iterations already performed. */
True,src/main/java/org/apache/commons/math/optimization/linear/AbstractLinearOptimizer.java,src/main/java/org/apache/commons/math/optimization/linear/AbstractLinearOptimizer.java,56,private int iterations;
False,src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,78,rotected transient RealMatrix tableau;
True,src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,78,private transient RealMatrix tableau;
False,src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,81,rotected final int numDecisionVariables;
True,src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,81,private final int numDecisionVariables;
False,src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,84,rotected final int numSlackVariables;
True,src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,84,private final int numSlackVariables;
False,src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,87,rotected int numArtificialVariables;
True,src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,87,private int numArtificialVariables;
False,src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,90,rotected final double epsilon;
True,src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java,90,private final double epsilon;
True,src/main/java/org/apache/commons/math/random/CorrelatedRandomVectorGenerator.java,src/main/java/org/apache/commons/math/random/CorrelatedRandomVectorGenerator.java,65,/** Mean vector. */
True,src/main/java/org/apache/commons/math/random/CorrelatedRandomVectorGenerator.java,src/main/java/org/apache/commons/math/random/CorrelatedRandomVectorGenerator.java,66,private final double[] mean;
True,src/main/java/org/apache/commons/math/random/CorrelatedRandomVectorGenerator.java,src/main/java/org/apache/commons/math/random/CorrelatedRandomVectorGenerator.java,68,/** Underlying generator. */
True,src/main/java/org/apache/commons/math/random/CorrelatedRandomVectorGenerator.java,src/main/java/org/apache/commons/math/random/CorrelatedRandomVectorGenerator.java,69,private final NormalizedRandomGenerator generator;
True,src/main/java/org/apache/commons/math/random/CorrelatedRandomVectorGenerator.java,src/main/java/org/apache/commons/math/random/CorrelatedRandomVectorGenerator.java,71,/** Storage for the normalized vector. */
True,src/main/java/org/apache/commons/math/random/CorrelatedRandomVectorGenerator.java,src/main/java/org/apache/commons/math/random/CorrelatedRandomVectorGenerator.java,72,private final double[] normalized;
True,src/main/java/org/apache/commons/math/random/CorrelatedRandomVectorGenerator.java,src/main/java/org/apache/commons/math/random/CorrelatedRandomVectorGenerator.java,74,/** Permutated Cholesky root of the covariance matrix. */
True,src/main/java/org/apache/commons/math/random/CorrelatedRandomVectorGenerator.java,src/main/java/org/apache/commons/math/random/CorrelatedRandomVectorGenerator.java,75,private RealMatrix root;
True,src/main/java/org/apache/commons/math/random/CorrelatedRandomVectorGenerator.java,src/main/java/org/apache/commons/math/random/CorrelatedRandomVectorGenerator.java,77,/** Rank of the covariance matrix. */
True,src/main/java/org/apache/commons/math/random/CorrelatedRandomVectorGenerator.java,src/main/java/org/apache/commons/math/random/CorrelatedRandomVectorGenerator.java,78,private int rank;
False,src/main/java/org/apache/commons/math/random/CorrelatedRandomVectorGenerator.java,src/main/java/org/apache/commons/math/random/CorrelatedRandomVectorGenerator.java,288,** Mean vector. */
False,src/main/java/org/apache/commons/math/random/CorrelatedRandomVectorGenerator.java,src/main/java/org/apache/commons/math/random/CorrelatedRandomVectorGenerator.java,289,rivate double[] mean;
False,src/main/java/org/apache/commons/math/random/CorrelatedRandomVectorGenerator.java,src/main/java/org/apache/commons/math/random/CorrelatedRandomVectorGenerator.java,291,** Permutated Cholesky root of the covariance matrix. */
False,src/main/java/org/apache/commons/math/random/CorrelatedRandomVectorGenerator.java,src/main/java/org/apache/commons/math/random/CorrelatedRandomVectorGenerator.java,292,rivate RealMatrix root;
False,src/main/java/org/apache/commons/math/random/CorrelatedRandomVectorGenerator.java,src/main/java/org/apache/commons/math/random/CorrelatedRandomVectorGenerator.java,294,** Rank of the covariance matrix. */
False,src/main/java/org/apache/commons/math/random/CorrelatedRandomVectorGenerator.java,src/main/java/org/apache/commons/math/random/CorrelatedRandomVectorGenerator.java,295,rivate int rank;
False,src/main/java/org/apache/commons/math/random/CorrelatedRandomVectorGenerator.java,src/main/java/org/apache/commons/math/random/CorrelatedRandomVectorGenerator.java,297,** Underlying generator. */
False,src/main/java/org/apache/commons/math/random/CorrelatedRandomVectorGenerator.java,src/main/java/org/apache/commons/math/random/CorrelatedRandomVectorGenerator.java,298,rivate NormalizedRandomGenerator generator;
False,src/main/java/org/apache/commons/math/random/CorrelatedRandomVectorGenerator.java,src/main/java/org/apache/commons/math/random/CorrelatedRandomVectorGenerator.java,300,** Storage for the normalized vector. */
False,src/main/java/org/apache/commons/math/random/CorrelatedRandomVectorGenerator.java,src/main/java/org/apache/commons/math/random/CorrelatedRandomVectorGenerator.java,301,rivate double[] normalized;
True,src/main/java/org/apache/commons/math/random/GaussianRandomGenerator.java,src/main/java/org/apache/commons/math/random/GaussianRandomGenerator.java,30,/** Underlying generator. */
True,src/main/java/org/apache/commons/math/random/GaussianRandomGenerator.java,src/main/java/org/apache/commons/math/random/GaussianRandomGenerator.java,31,private final RandomGenerator generator;
False,src/main/java/org/apache/commons/math/random/GaussianRandomGenerator.java,src/main/java/org/apache/commons/math/random/GaussianRandomGenerator.java,33,ublic GaussianRandomGenerator(RandomGenerator generator) {
True,src/main/java/org/apache/commons/math/random/GaussianRandomGenerator.java,src/main/java/org/apache/commons/math/random/GaussianRandomGenerator.java,36,public GaussianRandomGenerator(final RandomGenerator generator) {
False,src/main/java/org/apache/commons/math/random/GaussianRandomGenerator.java,src/main/java/org/apache/commons/math/random/GaussianRandomGenerator.java,44,** Underlying generator. */
False,src/main/java/org/apache/commons/math/random/GaussianRandomGenerator.java,src/main/java/org/apache/commons/math/random/GaussianRandomGenerator.java,45,rivate RandomGenerator generator;
True,src/main/java/org/apache/commons/math/random/UncorrelatedRandomVectorGenerator.java,src/main/java/org/apache/commons/math/random/UncorrelatedRandomVectorGenerator.java,36,/** Underlying scalar generator. */
True,src/main/java/org/apache/commons/math/random/UncorrelatedRandomVectorGenerator.java,src/main/java/org/apache/commons/math/random/UncorrelatedRandomVectorGenerator.java,37,private final NormalizedRandomGenerator generator;
True,src/main/java/org/apache/commons/math/random/UncorrelatedRandomVectorGenerator.java,src/main/java/org/apache/commons/math/random/UncorrelatedRandomVectorGenerator.java,39,/** Mean vector. */
True,src/main/java/org/apache/commons/math/random/UncorrelatedRandomVectorGenerator.java,src/main/java/org/apache/commons/math/random/UncorrelatedRandomVectorGenerator.java,40,private final double[] mean;
True,src/main/java/org/apache/commons/math/random/UncorrelatedRandomVectorGenerator.java,src/main/java/org/apache/commons/math/random/UncorrelatedRandomVectorGenerator.java,42,/** Standard deviation vector. */
True,src/main/java/org/apache/commons/math/random/UncorrelatedRandomVectorGenerator.java,src/main/java/org/apache/commons/math/random/UncorrelatedRandomVectorGenerator.java,43,private final double[] standardDeviation;
False,src/main/java/org/apache/commons/math/random/UncorrelatedRandomVectorGenerator.java,src/main/java/org/apache/commons/math/random/UncorrelatedRandomVectorGenerator.java,86,** Mean vector. */
False,src/main/java/org/apache/commons/math/random/UncorrelatedRandomVectorGenerator.java,src/main/java/org/apache/commons/math/random/UncorrelatedRandomVectorGenerator.java,87,rivate double[] mean;
False,src/main/java/org/apache/commons/math/random/UncorrelatedRandomVectorGenerator.java,src/main/java/org/apache/commons/math/random/UncorrelatedRandomVectorGenerator.java,89,** Standard deviation vector. */
False,src/main/java/org/apache/commons/math/random/UncorrelatedRandomVectorGenerator.java,src/main/java/org/apache/commons/math/random/UncorrelatedRandomVectorGenerator.java,90,rivate double[] standardDeviation;
False,src/main/java/org/apache/commons/math/random/UncorrelatedRandomVectorGenerator.java,src/main/java/org/apache/commons/math/random/UncorrelatedRandomVectorGenerator.java,92,** Underlying scalar generator. */
False,src/main/java/org/apache/commons/math/random/UncorrelatedRandomVectorGenerator.java,src/main/java/org/apache/commons/math/random/UncorrelatedRandomVectorGenerator.java,93,rivate NormalizedRandomGenerator generator;
True,src/main/java/org/apache/commons/math/random/UniformRandomGenerator.java,src/main/java/org/apache/commons/math/random/UniformRandomGenerator.java,37,/** Square root of three. */
True,src/main/java/org/apache/commons/math/random/UniformRandomGenerator.java,src/main/java/org/apache/commons/math/random/UniformRandomGenerator.java,38,private static final double SQRT3 = Math.sqrt(3.0);
True,src/main/java/org/apache/commons/math/random/UniformRandomGenerator.java,src/main/java/org/apache/commons/math/random/UniformRandomGenerator.java,40,/** Underlying generator. */
True,src/main/java/org/apache/commons/math/random/UniformRandomGenerator.java,src/main/java/org/apache/commons/math/random/UniformRandomGenerator.java,41,private final RandomGenerator generator;
False,src/main/java/org/apache/commons/math/random/UniformRandomGenerator.java,src/main/java/org/apache/commons/math/random/UniformRandomGenerator.java,53,** Underlying generator. */
False,src/main/java/org/apache/commons/math/random/UniformRandomGenerator.java,src/main/java/org/apache/commons/math/random/UniformRandomGenerator.java,54,rivate RandomGenerator generator;
False,src/main/java/org/apache/commons/math/random/UniformRandomGenerator.java,src/main/java/org/apache/commons/math/random/UniformRandomGenerator.java,56,** Square root of three. */
False,src/main/java/org/apache/commons/math/random/UniformRandomGenerator.java,src/main/java/org/apache/commons/math/random/UniformRandomGenerator.java,57,rivate static final double SQRT3 = Math.sqrt(3.0);
False,src/main/java/org/apache/commons/math/random/ValueServer.java,src/main/java/org/apache/commons/math/random/ValueServer.java,49,** mode determines how values are generated */
True,src/main/java/org/apache/commons/math/random/ValueServer.java,src/main/java/org/apache/commons/math/random/ValueServer.java,50,/** Use empirical distribution.  */
True,src/main/java/org/apache/commons/math/random/ValueServer.java,src/main/java/org/apache/commons/math/random/ValueServer.java,51,public static final int DIGEST_MODE = 0;
True,src/main/java/org/apache/commons/math/random/ValueServer.java,src/main/java/org/apache/commons/math/random/ValueServer.java,53,/** Replay data from valuesFilePath. */
True,src/main/java/org/apache/commons/math/random/ValueServer.java,src/main/java/org/apache/commons/math/random/ValueServer.java,54,public static final int REPLAY_MODE = 1;
True,src/main/java/org/apache/commons/math/random/ValueServer.java,src/main/java/org/apache/commons/math/random/ValueServer.java,56,/** Uniform random deviates with mean = &mu;. */
True,src/main/java/org/apache/commons/math/random/ValueServer.java,src/main/java/org/apache/commons/math/random/ValueServer.java,57,public static final int UNIFORM_MODE = 2;
True,src/main/java/org/apache/commons/math/random/ValueServer.java,src/main/java/org/apache/commons/math/random/ValueServer.java,59,/** Exponential random deviates with mean = &mu;. */
True,src/main/java/org/apache/commons/math/random/ValueServer.java,src/main/java/org/apache/commons/math/random/ValueServer.java,60,public static final int EXPONENTIAL_MODE = 3;
True,src/main/java/org/apache/commons/math/random/ValueServer.java,src/main/java/org/apache/commons/math/random/ValueServer.java,62,"/** Gaussian random deviates with mean = &mu;, std dev = &sigma;. */"
True,src/main/java/org/apache/commons/math/random/ValueServer.java,src/main/java/org/apache/commons/math/random/ValueServer.java,63,public static final int GAUSSIAN_MODE = 4;
True,src/main/java/org/apache/commons/math/random/ValueServer.java,src/main/java/org/apache/commons/math/random/ValueServer.java,65,/** Always return mu */
True,src/main/java/org/apache/commons/math/random/ValueServer.java,src/main/java/org/apache/commons/math/random/ValueServer.java,66,public static final int CONSTANT_MODE = 5;
True,src/main/java/org/apache/commons/math/random/ValueServer.java,src/main/java/org/apache/commons/math/random/ValueServer.java,68,/** mode determines how values are generated. */
False,src/main/java/org/apache/commons/math/random/ValueServer.java,src/main/java/org/apache/commons/math/random/ValueServer.java,52,** URI to raw data values  */
True,src/main/java/org/apache/commons/math/random/ValueServer.java,src/main/java/org/apache/commons/math/random/ValueServer.java,71,/** URI to raw data values. */
False,src/main/java/org/apache/commons/math/random/ValueServer.java,src/main/java/org/apache/commons/math/random/ValueServer.java,55,** Mean for use with non-data-driven modes */
True,src/main/java/org/apache/commons/math/random/ValueServer.java,src/main/java/org/apache/commons/math/random/ValueServer.java,74,/** Mean for use with non-data-driven modes. */
False,src/main/java/org/apache/commons/math/random/ValueServer.java,src/main/java/org/apache/commons/math/random/ValueServer.java,58,** Standard deviation for use with GAUSSIAN_MODE */
True,src/main/java/org/apache/commons/math/random/ValueServer.java,src/main/java/org/apache/commons/math/random/ValueServer.java,77,/** Standard deviation for use with GAUSSIAN_MODE. */
False,src/main/java/org/apache/commons/math/random/ValueServer.java,src/main/java/org/apache/commons/math/random/ValueServer.java,61,** Empirical probability distribution for use with DIGEST_MODE */
True,src/main/java/org/apache/commons/math/random/ValueServer.java,src/main/java/org/apache/commons/math/random/ValueServer.java,80,/** Empirical probability distribution for use with DIGEST_MODE. */
False,src/main/java/org/apache/commons/math/random/ValueServer.java,src/main/java/org/apache/commons/math/random/ValueServer.java,64,** file pointer for REPLAY_MODE */
True,src/main/java/org/apache/commons/math/random/ValueServer.java,src/main/java/org/apache/commons/math/random/ValueServer.java,83,/** File pointer for REPLAY_MODE. */
False,src/main/java/org/apache/commons/math/random/ValueServer.java,src/main/java/org/apache/commons/math/random/ValueServer.java,67,** RandomDataImpl to use for random data generation */
True,src/main/java/org/apache/commons/math/random/ValueServer.java,src/main/java/org/apache/commons/math/random/ValueServer.java,86,/** RandomDataImpl to use for random data generation. */
False,src/main/java/org/apache/commons/math/random/ValueServer.java,src/main/java/org/apache/commons/math/random/ValueServer.java,72,** Use empirical distribution  */
False,src/main/java/org/apache/commons/math/random/ValueServer.java,src/main/java/org/apache/commons/math/random/ValueServer.java,73,ublic static final int DIGEST_MODE = 0;
False,src/main/java/org/apache/commons/math/random/ValueServer.java,src/main/java/org/apache/commons/math/random/ValueServer.java,75,** Replay data from valuesFilePath */
False,src/main/java/org/apache/commons/math/random/ValueServer.java,src/main/java/org/apache/commons/math/random/ValueServer.java,76,ublic static final int REPLAY_MODE = 1;
False,src/main/java/org/apache/commons/math/random/ValueServer.java,src/main/java/org/apache/commons/math/random/ValueServer.java,78,** Uniform random deviates with mean = mu */
False,src/main/java/org/apache/commons/math/random/ValueServer.java,src/main/java/org/apache/commons/math/random/ValueServer.java,79,ublic static final int UNIFORM_MODE = 2;
False,src/main/java/org/apache/commons/math/random/ValueServer.java,src/main/java/org/apache/commons/math/random/ValueServer.java,81,** Exponential random deviates with mean = mu */
False,src/main/java/org/apache/commons/math/random/ValueServer.java,src/main/java/org/apache/commons/math/random/ValueServer.java,82,ublic static final int EXPONENTIAL_MODE = 3;
False,src/main/java/org/apache/commons/math/random/ValueServer.java,src/main/java/org/apache/commons/math/random/ValueServer.java,84,"** Gaussian random deviates with mean = mu, std dev = sigma */"
False,src/main/java/org/apache/commons/math/random/ValueServer.java,src/main/java/org/apache/commons/math/random/ValueServer.java,85,ublic static final int GAUSSIAN_MODE = 4;
False,src/main/java/org/apache/commons/math/random/ValueServer.java,src/main/java/org/apache/commons/math/random/ValueServer.java,87,** Always return mu */
False,src/main/java/org/apache/commons/math/random/ValueServer.java,src/main/java/org/apache/commons/math/random/ValueServer.java,88,ublic static final int CONSTANT_MODE = 5;
True,src/main/java/org/apache/commons/math/random/ValueServer.java,src/main/java/org/apache/commons/math/random/ValueServer.java,96,* Construct a ValueServer instance using a RandomData as its source
True,src/main/java/org/apache/commons/math/random/ValueServer.java,src/main/java/org/apache/commons/math/random/ValueServer.java,97,* of random data.
True,src/main/java/org/apache/commons/math/random/ValueServer.java,src/main/java/org/apache/commons/math/random/ValueServer.java,99,* @param randomData the RandomData instance used to source random data
True,src/main/java/org/apache/commons/math/random/ValueServer.java,src/main/java/org/apache/commons/math/random/ValueServer.java,100,* @since 1.1
True,src/main/java/org/apache/commons/math/random/ValueServer.java,src/main/java/org/apache/commons/math/random/ValueServer.java,102,public ValueServer(RandomData randomData) {
True,src/main/java/org/apache/commons/math/random/ValueServer.java,src/main/java/org/apache/commons/math/random/ValueServer.java,103,this.randomData = randomData;
False,src/main/java/org/apache/commons/math/random/ValueServer.java,src/main/java/org/apache/commons/math/random/ValueServer.java,373, Construct a ValueServer instance using a RandomData as its source
False,src/main/java/org/apache/commons/math/random/ValueServer.java,src/main/java/org/apache/commons/math/random/ValueServer.java,374, of random data.
False,src/main/java/org/apache/commons/math/random/ValueServer.java,src/main/java/org/apache/commons/math/random/ValueServer.java,376, @param randomData the RandomData instance used to source random data
False,src/main/java/org/apache/commons/math/random/ValueServer.java,src/main/java/org/apache/commons/math/random/ValueServer.java,377, @since 1.1
False,src/main/java/org/apache/commons/math/random/ValueServer.java,src/main/java/org/apache/commons/math/random/ValueServer.java,379,ublic ValueServer(RandomData randomData) {
False,src/main/java/org/apache/commons/math/random/ValueServer.java,src/main/java/org/apache/commons/math/random/ValueServer.java,380,uper();
False,src/main/java/org/apache/commons/math/random/ValueServer.java,src/main/java/org/apache/commons/math/random/ValueServer.java,381,his.randomData = randomData;
True,src/main/java/org/apache/commons/math/special/Gamma.java,src/main/java/org/apache/commons/math/special/Gamma.java,63,// limits for switching algorithm in digamma
True,src/main/java/org/apache/commons/math/special/Gamma.java,src/main/java/org/apache/commons/math/special/Gamma.java,64,/** C limit. */
True,src/main/java/org/apache/commons/math/special/Gamma.java,src/main/java/org/apache/commons/math/special/Gamma.java,65,private static final double C_LIMIT = 49;
True,src/main/java/org/apache/commons/math/special/Gamma.java,src/main/java/org/apache/commons/math/special/Gamma.java,67,/** S limit. */
True,src/main/java/org/apache/commons/math/special/Gamma.java,src/main/java/org/apache/commons/math/special/Gamma.java,68,private static final double S_LIMIT = 1e-5;
False,src/main/java/org/apache/commons/math/special/Gamma.java,src/main/java/org/apache/commons/math/special/Gamma.java,265,/ limits for switching algorithm in digamma
False,src/main/java/org/apache/commons/math/special/Gamma.java,src/main/java/org/apache/commons/math/special/Gamma.java,266,** C limit */
False,src/main/java/org/apache/commons/math/special/Gamma.java,src/main/java/org/apache/commons/math/special/Gamma.java,267,rivate static final double C_LIMIT = 49;
False,src/main/java/org/apache/commons/math/special/Gamma.java,src/main/java/org/apache/commons/math/special/Gamma.java,268,** S limit */
False,src/main/java/org/apache/commons/math/special/Gamma.java,src/main/java/org/apache/commons/math/special/Gamma.java,269,rivate static final double S_LIMIT = 1e-5;
True,src/main/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,59,* Represents an infinite window size.  When the {@link #getWindowSize()}
True,src/main/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,60,"* returns this value, there is no limit to the number of data values"
True,src/main/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,61,* that can be stored in the dataset.
True,src/main/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,63,public static final int INFINITE_WINDOW = -1;
False,src/main/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,125, Represents an infinite window size.  When the {@link #getWindowSize()}
False,src/main/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,126," returns this value, there is no limit to the number of data values"
False,src/main/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,127, that can be stored in the dataset.
False,src/main/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java,129,ublic static final int INFINITE_WINDOW = -1;
True,src/main/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,74,/** Dimension of the data. */
True,src/main/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,75,private int k;
True,src/main/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,77,/** Count of values that have been added */
True,src/main/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,78,private long n = 0;
True,src/main/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,80,/** Sum statistic implementation - can be reset by setter. */
True,src/main/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,81,private StorelessUnivariateStatistic[] sumImpl;
True,src/main/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,83,/** Sum of squares statistic implementation - can be reset by setter. */
True,src/main/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,84,private StorelessUnivariateStatistic[] sumSqImpl;
True,src/main/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,86,/** Minimum statistic implementation - can be reset by setter. */
True,src/main/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,87,private StorelessUnivariateStatistic[] minImpl;
True,src/main/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,89,/** Maximum statistic implementation - can be reset by setter. */
True,src/main/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,90,private StorelessUnivariateStatistic[] maxImpl;
True,src/main/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,92,/** Sum of log statistic implementation - can be reset by setter. */
True,src/main/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,93,private StorelessUnivariateStatistic[] sumLogImpl;
True,src/main/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,95,/** Geometric mean statistic implementation - can be reset by setter. */
True,src/main/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,96,private StorelessUnivariateStatistic[] geoMeanImpl;
True,src/main/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,98,/** Mean statistic implementation - can be reset by setter. */
True,src/main/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,99,private StorelessUnivariateStatistic[] meanImpl;
True,src/main/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,101,/** Covariance statistic implementation - cannot be reset. */
True,src/main/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,102,private VectorialCovariance covarianceImpl;
False,src/main/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,107,** Dimension of the data. */
False,src/main/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,108,rivate int k;
False,src/main/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,110,** Count of values that have been added */
False,src/main/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,111,rivate long n = 0;
False,src/main/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,113,** Sum statistic implementation - can be reset by setter. */
False,src/main/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,114,rivate StorelessUnivariateStatistic[] sumImpl;
False,src/main/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,116,** Sum of squares statistic implementation - can be reset by setter. */
False,src/main/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,117,rivate StorelessUnivariateStatistic[] sumSqImpl;
False,src/main/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,119,** Minimum statistic implementation - can be reset by setter. */
False,src/main/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,120,rivate StorelessUnivariateStatistic[] minImpl;
False,src/main/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,122,** Maximum statistic implementation - can be reset by setter. */
False,src/main/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,123,rivate StorelessUnivariateStatistic[] maxImpl;
False,src/main/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,125,** Sum of log statistic implementation - can be reset by setter. */
False,src/main/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,126,rivate StorelessUnivariateStatistic[] sumLogImpl;
False,src/main/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,128,** Geometric mean statistic implementation - can be reset by setter. */
False,src/main/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,129,rivate StorelessUnivariateStatistic[] geoMeanImpl;
False,src/main/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,131,** Mean statistic implementation - can be reset by setter. */
False,src/main/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,132,rivate StorelessUnivariateStatistic[] meanImpl;
False,src/main/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,134,** Covariance statistic implementation - cannot be reset. */
False,src/main/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java,135,rivate VectorialCovariance covarianceImpl;
False,src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,63, Construct a SummaryStatistics instance
False,src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,65,ublic SummaryStatistics() {
False,src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,69, A copy constructor. Creates a deep-copy of the {@code original}.
False,src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,71, @param original the {@code SummaryStatistics} instance to copy
False,src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,73,ublic SummaryStatistics(SummaryStatistics original) {
False,src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,74,"opy(original, this);"
True,src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,117,* Construct a SummaryStatistics instance
True,src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,119,public SummaryStatistics() {
True,src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,123,* A copy constructor. Creates a deep-copy of the {@code original}.
True,src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,125,* @param original the {@code SummaryStatistics} instance to copy
True,src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,127,public SummaryStatistics(SummaryStatistics original) {
True,src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java,128,"copy(original, this);"
True,src/main/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,77,* Create a GeometricMean instance using the given SumOfLogs instance
True,src/main/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,78,* @param sumOfLogs sum of logs instance to use for computation
True,src/main/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,80,public GeometricMean(SumOfLogs sumOfLogs) {
True,src/main/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,81,this.sumOfLogs = sumOfLogs;
False,src/main/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,87, Create a GeometricMean instance using the given SumOfLogs instance
False,src/main/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,88, @param sumOfLogs sum of logs instance to use for computation
False,src/main/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,90,ublic GeometricMean(SumOfLogs sumOfLogs) {
False,src/main/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,src/main/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java,91,his.sumOfLogs = sumOfLogs;
False,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,32, Prevent instantiation.
False,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,34,rotected TestUtils() {
False,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,35,uper();
True,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,48,* Prevent instantiation.
True,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,50,protected TestUtils() {
True,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,src/main/java/org/apache/commons/math/stat/inference/TestUtils.java,51,super();
True,src/main/java/org/apache/commons/math/stat/ranking/NaturalRanking.java,src/main/java/org/apache/commons/math/stat/ranking/NaturalRanking.java,72,/** default NaN strategy */
True,src/main/java/org/apache/commons/math/stat/ranking/NaturalRanking.java,src/main/java/org/apache/commons/math/stat/ranking/NaturalRanking.java,73,public static final NaNStrategy DEFAULT_NAN_STRATEGY = NaNStrategy.MAXIMAL;
True,src/main/java/org/apache/commons/math/stat/ranking/NaturalRanking.java,src/main/java/org/apache/commons/math/stat/ranking/NaturalRanking.java,75,/** default ties strategy */
True,src/main/java/org/apache/commons/math/stat/ranking/NaturalRanking.java,src/main/java/org/apache/commons/math/stat/ranking/NaturalRanking.java,76,public static final TiesStrategy DEFAULT_TIES_STRATEGY = TiesStrategy.AVERAGE;
False,src/main/java/org/apache/commons/math/stat/ranking/NaturalRanking.java,src/main/java/org/apache/commons/math/stat/ranking/NaturalRanking.java,81,** default NaN strategy */
False,src/main/java/org/apache/commons/math/stat/ranking/NaturalRanking.java,src/main/java/org/apache/commons/math/stat/ranking/NaturalRanking.java,82,ublic static final NaNStrategy DEFAULT_NAN_STRATEGY = NaNStrategy.MAXIMAL;
False,src/main/java/org/apache/commons/math/stat/ranking/NaturalRanking.java,src/main/java/org/apache/commons/math/stat/ranking/NaturalRanking.java,84,** default ties strategy */
False,src/main/java/org/apache/commons/math/stat/ranking/NaturalRanking.java,src/main/java/org/apache/commons/math/stat/ranking/NaturalRanking.java,85,ublic static final TiesStrategy DEFAULT_TIES_STRATEGY = TiesStrategy.AVERAGE;
False,src/main/java/org/apache/commons/math/util/BigReal.java,src/main/java/org/apache/commons/math/util/BigReal.java,39,** Serializable version identifier. */
False,src/main/java/org/apache/commons/math/util/BigReal.java,src/main/java/org/apache/commons/math/util/BigReal.java,40,rivate static final long serialVersionUID = 7887631840434052850L;
True,src/main/java/org/apache/commons/math/util/BigReal.java,src/main/java/org/apache/commons/math/util/BigReal.java,45,/** Serializable version identifier. */
True,src/main/java/org/apache/commons/math/util/BigReal.java,src/main/java/org/apache/commons/math/util/BigReal.java,46,private static final long serialVersionUID = 7887631840434052850L;
True,src/main/java/org/apache/commons/math/util/BigRealField.java,src/main/java/org/apache/commons/math/util/BigRealField.java,60,// CHECKSTYLE: stop HideUtilityClassConstructor
False,src/main/java/org/apache/commons/math/util/BigRealField.java,src/main/java/org/apache/commons/math/util/BigRealField.java,65,** Private constructor. */
False,src/main/java/org/apache/commons/math/util/BigRealField.java,src/main/java/org/apache/commons/math/util/BigRealField.java,66,rivate LazyHolder() {
True,src/main/java/org/apache/commons/math/util/BigRealField.java,src/main/java/org/apache/commons/math/util/BigRealField.java,68,// CHECKSTYLE: resume HideUtilityClassConstructor
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,68,/** All long-representable factorials */
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,69,private static final long[] FACTORIALS = new long[] {
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,70,"1l,                  1l,                   2l,"
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,71,"6l,                 24l,                 120l,"
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,72,"720l,               5040l,               40320l,"
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,73,"362880l,            3628800l,            39916800l,"
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,74,"479001600l,         6227020800l,         87178291200l,"
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,75,"1307674368000l,     20922789888000l,     355687428096000l,"
True,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,76,"6402373705728000l, 121645100408832000l, 2432902008176640000l };"
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,472,** All long-representable factorials */
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,473,rivate static final long[] FACTORIALS = new long[]
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,474,"1, 1, 2, 6, 24, 120, 720, 5040, 40320, 362880, 3628800, 39916800,"
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,475,"79001600, 6227020800l, 87178291200l, 1307674368000l, 20922789888000l,"
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,476,"55687428096000l, 6402373705728000l, 121645100408832000l,"
False,src/main/java/org/apache/commons/math/util/MathUtils.java,src/main/java/org/apache/commons/math/util/MathUtils.java,477,432902008176640000l};
True,src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,41,/** Status indicator for free table entries. */
True,src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,42,protected static final byte FREE    = 0;
True,src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,44,/** Status indicator for full table entries. */
True,src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,45,protected static final byte FULL    = 1;
True,src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,47,/** Status indicator for removed table entries. */
True,src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,48,protected static final byte REMOVED = 2;
False,src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,60,** Status indicator for free table entries. */
False,src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,61,rotected static final byte FREE    = 0;
False,src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,63,** Status indicator for full table entries. */
False,src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,64,rotected static final byte FULL    = 1;
False,src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,66,** Status indicator for removed table entries. */
False,src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java,67,rotected static final byte REMOVED = 2;
True,src/main/java/org/apache/commons/math/util/OpenIntToFieldHashMap.java,src/main/java/org/apache/commons/math/util/OpenIntToFieldHashMap.java,44,/** Status indicator for free table entries. */
True,src/main/java/org/apache/commons/math/util/OpenIntToFieldHashMap.java,src/main/java/org/apache/commons/math/util/OpenIntToFieldHashMap.java,45,protected static final byte FREE    = 0;
True,src/main/java/org/apache/commons/math/util/OpenIntToFieldHashMap.java,src/main/java/org/apache/commons/math/util/OpenIntToFieldHashMap.java,47,/** Status indicator for full table entries. */
True,src/main/java/org/apache/commons/math/util/OpenIntToFieldHashMap.java,src/main/java/org/apache/commons/math/util/OpenIntToFieldHashMap.java,48,protected static final byte FULL    = 1;
True,src/main/java/org/apache/commons/math/util/OpenIntToFieldHashMap.java,src/main/java/org/apache/commons/math/util/OpenIntToFieldHashMap.java,50,/** Status indicator for removed table entries. */
True,src/main/java/org/apache/commons/math/util/OpenIntToFieldHashMap.java,src/main/java/org/apache/commons/math/util/OpenIntToFieldHashMap.java,51,protected static final byte REMOVED = 2;
False,src/main/java/org/apache/commons/math/util/OpenIntToFieldHashMap.java,src/main/java/org/apache/commons/math/util/OpenIntToFieldHashMap.java,63,** Status indicator for free table entries. */
False,src/main/java/org/apache/commons/math/util/OpenIntToFieldHashMap.java,src/main/java/org/apache/commons/math/util/OpenIntToFieldHashMap.java,64,rotected static final byte FREE    = 0;
False,src/main/java/org/apache/commons/math/util/OpenIntToFieldHashMap.java,src/main/java/org/apache/commons/math/util/OpenIntToFieldHashMap.java,66,** Status indicator for full table entries. */
False,src/main/java/org/apache/commons/math/util/OpenIntToFieldHashMap.java,src/main/java/org/apache/commons/math/util/OpenIntToFieldHashMap.java,67,rotected static final byte FULL    = 1;
False,src/main/java/org/apache/commons/math/util/OpenIntToFieldHashMap.java,src/main/java/org/apache/commons/math/util/OpenIntToFieldHashMap.java,69,** Status indicator for removed table entries. */
False,src/main/java/org/apache/commons/math/util/OpenIntToFieldHashMap.java,src/main/java/org/apache/commons/math/util/OpenIntToFieldHashMap.java,70,rotected static final byte REMOVED = 2;
False,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,76,** Serializable version identifier */
False,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,77,rivate static final long serialVersionUID = -3485529955529426875L;
True,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,82,/** Serializable version identifier */
True,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java,83,private static final long serialVersionUID = -3485529955529426875L;
