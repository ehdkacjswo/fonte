is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/math/ConvergenceException.java,src/java/org/apache/commons/math/ConvergenceException.java,19,mport java.io.Serializable;
False,src/java/org/apache/commons/math/ConvergenceException.java,src/java/org/apache/commons/math/ConvergenceException.java,27,ublic class ConvergenceException extends MathException implements Serializable{
True,src/java/org/apache/commons/math/ConvergenceException.java,src/java/org/apache/commons/math/ConvergenceException.java,25,public class ConvergenceException extends MathException {
False,src/java/org/apache/commons/math/ConvergenceException.java,src/java/org/apache/commons/math/ConvergenceException.java,30,rivate static final long serialVersionUID = 7426445244781020663L;
True,src/java/org/apache/commons/math/ConvergenceException.java,src/java/org/apache/commons/math/ConvergenceException.java,28,private static final long serialVersionUID = 4380655778005469702L;
False,src/java/org/apache/commons/math/ConvergenceException.java,src/java/org/apache/commons/math/ConvergenceException.java,40, Construct an exception with the given message.
False,src/java/org/apache/commons/math/ConvergenceException.java,src/java/org/apache/commons/math/ConvergenceException.java,41, @param message descriptive error message
False,src/java/org/apache/commons/math/ConvergenceException.java,src/java/org/apache/commons/math/ConvergenceException.java,42," @deprecated as of 1.2, replaced by {@link #ConvergenceException(String, Object[])}"
False,src/java/org/apache/commons/math/ConvergenceException.java,src/java/org/apache/commons/math/ConvergenceException.java,44,ublic ConvergenceException(String message) {
False,src/java/org/apache/commons/math/ConvergenceException.java,src/java/org/apache/commons/math/ConvergenceException.java,45,uper(message);
False,src/java/org/apache/commons/math/ConvergenceException.java,src/java/org/apache/commons/math/ConvergenceException.java,59, Construct an exception with the given message and root cause.
False,src/java/org/apache/commons/math/ConvergenceException.java,src/java/org/apache/commons/math/ConvergenceException.java,60, @param message descriptive error message
False,src/java/org/apache/commons/math/ConvergenceException.java,src/java/org/apache/commons/math/ConvergenceException.java,61, @param cause  the exception or error that caused this exception to be thrown
False,src/java/org/apache/commons/math/ConvergenceException.java,src/java/org/apache/commons/math/ConvergenceException.java,62," @deprecated as of 1.2, replaced by {@link #ConvergenceException(String, Object[], Throwable)}"
False,src/java/org/apache/commons/math/ConvergenceException.java,src/java/org/apache/commons/math/ConvergenceException.java,64,"ublic ConvergenceException(String message, Throwable cause) {"
False,src/java/org/apache/commons/math/ConvergenceException.java,src/java/org/apache/commons/math/ConvergenceException.java,65,"uper(message, cause);"
True,src/java/org/apache/commons/math/FunctionEvaluationException.java,src/java/org/apache/commons/math/FunctionEvaluationException.java,88,* Constructs an exception with specified root cause.
True,src/java/org/apache/commons/math/FunctionEvaluationException.java,src/java/org/apache/commons/math/FunctionEvaluationException.java,89,* Message formatting is delegated to {@link java.text.MessageFormat}.
True,src/java/org/apache/commons/math/FunctionEvaluationException.java,src/java/org/apache/commons/math/FunctionEvaluationException.java,90,* @param argument  the failing function argument
True,src/java/org/apache/commons/math/FunctionEvaluationException.java,src/java/org/apache/commons/math/FunctionEvaluationException.java,91,* @param cause  the exception or error that caused this exception to be thrown
True,src/java/org/apache/commons/math/FunctionEvaluationException.java,src/java/org/apache/commons/math/FunctionEvaluationException.java,93,"public FunctionEvaluationException(double argument, Throwable cause) {"
True,src/java/org/apache/commons/math/FunctionEvaluationException.java,src/java/org/apache/commons/math/FunctionEvaluationException.java,94,super(cause);
True,src/java/org/apache/commons/math/FunctionEvaluationException.java,src/java/org/apache/commons/math/FunctionEvaluationException.java,95,this.argument = argument;
True,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,59,// org.apache.commons.math.DimensionMismatchException
True,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,60,"{ ""dimension mismatch {0} != {1}"","
True,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,61,"""dimensions incompatibles {0} != {1}"" },"
True,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,63,// org.apache.commons.math.random.NotPositiveDefiniteMatrixException
True,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,64,"{ ""not positive definite matrix"","
True,src/java/org/apache/commons/math/MessagesResources_fr.java,src/java/org/apache/commons/math/MessagesResources_fr.java,65,"""matrice non d\u00e9finie positive"" },"
