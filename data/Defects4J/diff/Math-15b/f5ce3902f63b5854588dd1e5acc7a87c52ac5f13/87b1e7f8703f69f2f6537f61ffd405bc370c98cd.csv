is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,87,/** include an intercept or not */
True,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,88,private final boolean hasIntercept;
True,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,95,this(true);
True,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,98,* Secondary constructor which allows the user the ability to include/exclude const
True,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,99,"* @param includeIntercept boolean flag, true includes an intercept"
True,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,101,public SimpleRegression(boolean includeIntercept){
True,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,103,hasIntercept = includeIntercept;
False,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,109,"ublic void addData(double x, double y) {"
True,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,119,"public void addData(final double x, final double y){"
False,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,114,ouble dx = x - xbar;
False,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,115,ouble dy = y - ybar;
False,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,116,umXX += dx * dx * (double) n / (n + 1d);
False,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,117,umYY += dy * dy * (double) n / (n + 1d);
False,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,118,umXY += dx * dy * (double) n / (n + 1d);
False,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,119,bar += dx / (n + 1.0);
False,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,120,bar += dy / (n + 1.0);
True,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,124,if( hasIntercept ){
True,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,125,final double fact1 = 1.0 + (double) n;
True,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,126,final double fact2 = ((double) n) / (1.0 + (double) n);
True,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,127,final double dx = x - xbar;
True,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,128,final double dy = y - ybar;
True,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,129,sumXX += dx * dx * fact2;
True,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,130,sumYY += dy * dy * fact2;
True,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,131,sumXY += dx * dy * fact2;
True,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,132,xbar += dx / fact1;
True,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,133,ybar += dy / fact1;
True,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,136,if( !hasIntercept ){
True,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,137,sumXX += x * x ;
True,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,138,sumYY += y * y ;
True,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,139,sumXY += x * y ;
True,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,144,return;
False,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,143,ouble dx = x - xbar;
False,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,144,ouble dy = y - ybar;
False,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,145,umXX -= dx * dx * (double) n / (n - 1d);
False,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,146,umYY -= dy * dy * (double) n / (n - 1d);
False,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,147,umXY -= dx * dy * (double) n / (n - 1d);
False,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,148,bar -= dx / (n - 1.0);
False,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,149,bar -= dy / (n - 1.0);
False,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,150,umX -= x;
False,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,151,umY -= y;
False,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,152,--;
True,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,163,if (hasIntercept) {
True,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,164,final double fact1 = (double) n - 1.0;
True,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,165,final double fact2 = ((double) n) / ((double) n - 1.0);
True,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,166,final double dx = x - xbar;
True,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,167,final double dy = y - ybar;
True,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,168,sumXX -= dx * dx * fact2;
True,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,169,sumYY -= dy * dy * fact2;
True,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,170,sumXY -= dx * dy * fact2;
True,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,171,xbar -= dx / fact1;
True,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,172,ybar -= dy / fact1;
True,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,173,} else {
True,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,174,final double fact1 = (double) n - 1.0;
True,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,175,sumXX -= x * x;
True,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,176,sumYY -= y * y;
True,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,177,sumXY -= x * y;
True,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,178,xbar -= x / fact1;
True,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,179,ybar -= y / fact1;
True,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,181,sumX -= x;
True,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,182,sumY -= y;
True,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,183,n--;
True,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,185,return;
False,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,238,eturn getIntercept(b1) + b1 * x;
True,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,270,if (hasIntercept) {
True,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,271,return getIntercept(b1) + b1 * x;
True,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,273,return b1 * x;
False,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,258,eturn getIntercept(getSlope());
True,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,293,return hasIntercept ? getIntercept(getSlope()) : 0.0;
True,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,297,* Returns true if a constant has been included false otherwise.
True,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,299,"* @return true if constant exists, false otherwise"
True,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,301,public boolean hasIntercept(){
True,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,302,return hasIntercept;
False,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,394,eturn getSumSquaredErrors() / (n - 2);
True,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,438,return hasIntercept ? (getSumSquaredErrors() / (n - 2)) : (getSumSquaredErrors() / (n - 1));
False,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,446, <code>Double.NaN</code>.</p>
True,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,490,"* <code>Double.NaN</code>.</p> Additionally, a <code>Double.NaN</code> is"
True,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,491,* returned when the intercept is constrained to be zero
True,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,496,if( !hasIntercept ){
True,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,497,return Double.NaN;
False,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,575,rivate double getIntercept(double slope) {
True,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,623,private double getIntercept(double slope){
True,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,624,if( hasIntercept){
True,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java,627,return 0.0;
True,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,85,* Data from NIST NOINT1
True,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,87,private double[][] noint1 = {
True,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,88,"{130.0,60.0},"
True,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,89,"{131.0,61.0},"
True,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,90,"{132.0,62.0},"
True,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,91,"{133.0,63.0},"
True,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,92,"{134.0,64.0},"
True,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,93,"{135.0,65.0},"
True,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,94,"{136.0,66.0},"
True,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,95,"{137.0,67.0},"
True,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,96,"{138.0,68.0},"
True,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,97,"{139.0,69.0},"
True,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,98,"{140.0,70.0}"
True,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,102,* Data from NIST NOINT2
True,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,105,private double[][] noint2 = {
True,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,106,"{3.0,4},"
True,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,107,"{4,5},"
True,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,108,"{4,6}"
True,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,111,@Test
True,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,112,public void testNoInterceot_noint2(){
True,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,113,SimpleRegression regression = new SimpleRegression(false);
True,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,114,"regression.addData(noint2[0][1], noint2[0][0]);"
True,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,115,"regression.addData(noint2[1][1], noint2[1][0]);"
True,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,116,"regression.addData(noint2[2][1], noint2[2][0]);"
True,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,117,"Assert.assertEquals(""slope"", 0.727272727272727,"
True,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,118,"regression.getSlope(), 10E-12);"
True,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,119,"Assert.assertEquals(""slope std err"", 0.420827318078432E-01,"
True,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,120,"regression.getSlopeStdErr(),10E-12);"
True,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,121,"Assert.assertEquals(""number of observations"", 3, regression.getN());"
True,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,122,"Assert.assertEquals(""r-square"", 0.993348115299335,"
True,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,123,"regression.getRSquare(), 10E-12);"
True,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,124,"Assert.assertEquals(""SSR"", 40.7272727272727,"
True,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,125,"regression.getRegressionSumSquares(), 10E-9);"
True,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,126,"Assert.assertEquals(""MSE"", 0.136363636363636,"
True,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,127,"regression.getMeanSquareError(), 10E-10);"
True,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,128,"Assert.assertEquals(""SSE"", 0.272727272727273,"
True,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,129,"regression.getSumSquaredErrors(),10E-9);"
True,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,132,@Test
True,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,133,public void testNoIntercept_noint1(){
True,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,134,SimpleRegression regression = new SimpleRegression(false);
True,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,135,for (int i = 0; i < noint1.length; i++) {
True,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,136,"regression.addData(noint1[i][1], noint1[i][0]);"
True,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,138,"Assert.assertEquals(""slope"", 2.07438016528926, regression.getSlope(), 10E-12);"
True,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,139,"Assert.assertEquals(""slope std err"", 0.165289256198347E-01,"
True,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,140,"regression.getSlopeStdErr(),10E-12);"
True,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,141,"Assert.assertEquals(""number of observations"", 11, regression.getN());"
True,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,142,"Assert.assertEquals(""r-square"", 0.999365492298663,"
True,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,143,"regression.getRSquare(), 10E-12);"
True,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,144,"Assert.assertEquals(""SSR"", 200457.727272727,"
True,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,145,"regression.getRegressionSumSquares(), 10E-9);"
True,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,146,"Assert.assertEquals(""MSE"", 12.7272727272727,"
True,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,147,"regression.getMeanSquareError(), 10E-10);"
True,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,148,"Assert.assertEquals(""SSE"", 127.272727272727,"
True,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java,149,"regression.getSumSquaredErrors(),10E-9);"
