is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/math/analysis/function/Sigmoid.java,src/main/java/org/apache/commons/math/analysis/function/Sigmoid.java,124,inal double lo = param[0];
False,src/main/java/org/apache/commons/math/analysis/function/Sigmoid.java,src/main/java/org/apache/commons/math/analysis/function/Sigmoid.java,125,inal double hi = param[1];
False,src/test/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateRealOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateRealOptimizerTest.java,27,mport org.apache.commons.math.analysis.solvers.BrentSolver;
False,src/test/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateRealOptimizerTest.java,src/test/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateRealOptimizerTest.java,57,rentSolver solver = new BrentSolver();
False,src/test/java/org/apache/commons/math/optimization/fitting/HarmonicFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/HarmonicFitterTest.java,37,inal double[] fitted = fitter.fit();
True,src/test/java/org/apache/commons/math/optimization/fitting/HarmonicFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/HarmonicFitterTest.java,37,fitter.fit();
False,src/test/java/org/apache/commons/math/optimization/fitting/HarmonicFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/HarmonicFitterTest.java,111,inal double[] fitted = fitter.fit();
True,src/test/java/org/apache/commons/math/optimization/fitting/HarmonicFitterTest.java,src/test/java/org/apache/commons/math/optimization/fitting/HarmonicFitterTest.java,111,fitter.fit();
