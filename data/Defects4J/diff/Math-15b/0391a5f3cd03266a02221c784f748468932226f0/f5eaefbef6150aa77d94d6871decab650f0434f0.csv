is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/math3/util/FastMath.java,src/main/java/org/apache/commons/math3/util/FastMath.java,105,"** Indicator for loading big tables from ""resource"" files. */"
False,src/main/java/org/apache/commons/math3/util/FastMath.java,src/main/java/org/apache/commons/math3/util/FastMath.java,106,rivate static /* final */ boolean LOAD_RESOURCES = false;
False,src/main/java/org/apache/commons/math3/util/FastMath.java,src/main/java/org/apache/commons/math3/util/FastMath.java,3741, else if (LOAD_RESOURCES) {
False,src/main/java/org/apache/commons/math3/util/FastMath.java,src/main/java/org/apache/commons/math3/util/FastMath.java,3742,inal double[][] expInt = FastMathResources.loadExpInt();
False,src/main/java/org/apache/commons/math3/util/FastMath.java,src/main/java/org/apache/commons/math3/util/FastMath.java,3743,XP_INT_TABLE_A = expInt[0];
False,src/main/java/org/apache/commons/math3/util/FastMath.java,src/main/java/org/apache/commons/math3/util/FastMath.java,3744,XP_INT_TABLE_B = expInt[1];
False,src/main/java/org/apache/commons/math3/util/FastMath.java,src/main/java/org/apache/commons/math3/util/FastMath.java,3778, else if (LOAD_RESOURCES) {
False,src/main/java/org/apache/commons/math3/util/FastMath.java,src/main/java/org/apache/commons/math3/util/FastMath.java,3779,inal double[][] expFrac = FastMathResources.loadExpFrac();
False,src/main/java/org/apache/commons/math3/util/FastMath.java,src/main/java/org/apache/commons/math3/util/FastMath.java,3780,XP_FRAC_TABLE_A = expFrac[0];
False,src/main/java/org/apache/commons/math3/util/FastMath.java,src/main/java/org/apache/commons/math3/util/FastMath.java,3781,XP_FRAC_TABLE_B = expFrac[1];
False,src/main/java/org/apache/commons/math3/util/FastMath.java,src/main/java/org/apache/commons/math3/util/FastMath.java,3803, else if (LOAD_RESOURCES) {
False,src/main/java/org/apache/commons/math3/util/FastMath.java,src/main/java/org/apache/commons/math3/util/FastMath.java,3804,N_MANT = FastMathResources.loadLnMant();
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,4, this work for additional information regarding copyright ownership.
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,7, the License.  You may obtain a copy of the License at
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,9,      http://www.apache.org/licenses/LICENSE-2.0
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,14, See the License for the specific language governing permissions and
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,15, limitations under the License.
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,18,ackage org.apache.commons.math3.util;
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,20,mport java.io.File;
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,21,mport java.io.DataOutputStream;
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,22,mport java.io.InputStream;
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,23,mport java.io.DataInputStream;
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,24,mport java.io.BufferedOutputStream;
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,25,mport java.io.BufferedInputStream;
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,26,mport java.io.FileOutputStream;
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,27,mport java.io.FileNotFoundException;
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,28,mport java.io.IOException;
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,29,mport java.nio.ByteBuffer;
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,30,mport java.nio.DoubleBuffer;
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,31,mport org.apache.commons.math3.exception.MathInternalError;
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,34, Utility class for saving and loading tabulated data used by
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,35, {@link FastMath}.
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,37, @version $Id$
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,39,lass FastMathResources {
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,41, Resource directory. Assuming that this class and the resource files
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,42," are located in the same package as ""FastMath""."
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,44,"rivate static final String RES_DIR = ""data/"" +"
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,45,"astMath.class.getPackage().getName().replace('.', '/') + ""/"";"
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,46,** File resource prefix. */
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,47,"rivate static final String RES_PREFIX = RES_DIR + ""FastMath__"";"
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,48,"** Resource basename for ""EXP_INT_TABLE_A"" and ""EXP_INT_TABLE_B"". */"
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,49,"rivate static final String EXP_INT = ""exp_int"";"
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,50,"** Resource basename for ""EXP_FRAC_TABLE_A"" and ""EXP_FRAC_TABLE_B"". */"
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,51,"rivate static final String EXP_FRAC = ""exp_frac"";"
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,52,"** Resource basename for ""LN_MANT"". */"
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,53,"rivate static final String LN_MANT = ""ln_mant"";"
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,54,"** Number of bytes in a ""double"". */"
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,55,rivate static final int BYTES_IN_DOUBLE = Double.SIZE / Byte.SIZE;
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,58, Class contains only static methods.
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,60,rivate FastMathResources() {}
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,63, Compute and save all the resources.
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,65,tatic void createAll() {
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,66,/ Create resource directory.
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,67,inal File resDir = new File(RES_DIR);
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,68,f (resDir.exists()) {
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,69,f (!resDir.isDirectory()) {
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,70,hrow new MathInternalError();
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,72, else {
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,73,ry {
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,74,esDir.mkdirs();
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,75, catch (SecurityException e) {
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,76,hrow new MathInternalError(e);
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,80,"/ ""EXP_INT"" tables."
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,81,inal double[] expIntA = new double[FastMath.EXP_INT_TABLE_LEN];
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,82,inal double[] expIntB = new double[FastMath.EXP_INT_TABLE_LEN];
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,84,inal double tmp[] = new double[2];
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,85,inal double recip[] = new double[2];
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,87,or (int i = 0; i < FastMath.EXP_INT_TABLE_MAX_INDEX; i++) {
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,88,"astMathCalc.expint(i, tmp);"
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,89,xpIntA[i + FastMath.EXP_INT_TABLE_MAX_INDEX] = tmp[0];
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,90,xpIntB[i + FastMath.EXP_INT_TABLE_MAX_INDEX] = tmp[1];
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,92,f (i != 0) {
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,93,/ Negative integer powers.
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,94,"astMathCalc.splitReciprocal(tmp, recip);"
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,95,xpIntA[FastMath.EXP_INT_TABLE_MAX_INDEX - i] = recip[0];
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,96,xpIntB[FastMath.EXP_INT_TABLE_MAX_INDEX - i] = recip[1];
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,100,"aveTable2d(EXP_INT, new double[][] { expIntA, expIntB });"
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,102,"/ ""EXP_FRAC"" tables."
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,103,inal double[] expFracA = new double[FastMath.EXP_FRAC_TABLE_LEN];
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,104,inal double[] expFracB = new double[FastMath.EXP_FRAC_TABLE_LEN];
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,106,or (int i = 0; i < FastMath.EXP_FRAC_TABLE_LEN; i++) {
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,107,"astMathCalc.slowexp(i / 1024d, tmp); // TWO_POWER_10"
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,108,xpFracA[i] = tmp[0];
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,109,xpFracB[i] = tmp[1];
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,112,"aveTable2d(EXP_FRAC, new double[][] { expFracA, expFracB });"
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,114,"/ ""LN_MANT"" table."
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,115,inal double[][] lnMant = new double[FastMath.LN_MANT_LEN][];
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,117,or (int i = 0; i < FastMath.LN_MANT_LEN; i++) {
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,118,inal double d = Double.longBitsToDouble((((long) i) << 42) |
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,119,x3ff0000000000000L);
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,120,nMant[i] = FastMathCalc.slowLog(d);
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,123,"aveTable2d(LN_MANT, transpose(lnMant));"
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,127," Load ""EXP_INT"" tables."
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,128," ""EXP_INT_TABLE_A"" is at index 0."
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,129," ""EXP_INT_TABLE_B"" is at index 1."
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,131, @return the retrieved data.
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,133,tatic double[][] loadExpInt() {
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,134,"eturn loadTable2d(EXP_INT, 2, FastMath.EXP_INT_TABLE_LEN);"
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,138," Load ""EXP_FRAC"" tables."
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,139," ""EXP_FRAC_TABLE_A"" is at index 0."
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,140," ""EXP_FRAC_TABLE_B"" is at index 1."
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,142, @return the retrieved data.
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,144,tatic double[][] loadExpFrac() {
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,145,"eturn loadTable2d(EXP_FRAC, 2, FastMath.EXP_FRAC_TABLE_LEN);"
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,149," Load ""LN_MANT""."
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,151, @return the retrieved data.
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,153,tatic double[][] loadLnMant() {
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,154,"eturn transpose(loadTable2d(LN_MANT, 2, FastMath.LN_MANT_LEN));"
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,158, @param name Basename of the resource.
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,159, @return an output stream.
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,160, @throws FileNotFoundException if the file cannot be opened.
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,162,rivate static DataOutputStream out(String name)
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,163,hrows FileNotFoundException {
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,164,inal String fullName = RES_PREFIX + name;
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,165,eturn new DataOutputStream(new BufferedOutputStream(new FileOutputStream(fullName)));
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,169, @param name Basename of the resource.
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,170, @param data Data to be stored.
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,172,"rivate static void saveTable1d(String name,"
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,173,ouble[] data) {
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,174,inal int len = data.length;
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,176,ry {
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,177,inal DataOutputStream out = out(name);
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,179,or (int i = 0; i < len; i++) {
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,180,ut.writeDouble(data[i]);
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,183,ut.close();
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,184, catch (IOException e) {
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,185,hrow new MathInternalError(e);
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,190, @param name Basename of the resource.
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,191, @param data Data to be stored.
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,193,"rivate static void saveTable2d(String name,"
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,194,ouble[][] data) {
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,195,inal int len = data.length;
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,196,inal int rowLen = data[0].length;
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,198,ry {
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,199,inal DataOutputStream out = out(name);
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,201,or (int i = 0; i < len; i++) {
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,202,or (int j = 0; j < rowLen; j++) {
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,203,ut.writeDouble(data[i][j]);
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,207,ut.close();
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,208, catch (IOException e) {
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,209,hrow new MathInternalError(e);
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,214, @param name Basename of the resource.
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,215, @return an input stream.
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,216, @throws FileNotFoundException if the resource cannot be accessed.
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,218,rivate static DataInputStream in(String name)
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,219,hrows FileNotFoundException {
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,220,"inal String fullName = ""/"" + RES_PREFIX + name;"
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,221,inal InputStream in = FastMathResources.class.getResourceAsStream(fullName);
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,222,eturn new DataInputStream(new BufferedInputStream(in));
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,226, @param name Basename of the resource.
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,227, @param len Size of the data.
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,228, @return the retrieved data.
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,230,"rivate static double[] loadTable1d(String name,"
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,231,nt len) {
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,232,ry {
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,233,inal DataInputStream in = in(name);
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,235,inal double[] data = new double[len];
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,236,or (int i = 0; i < len; i++) {
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,237,ata[i] = in.readDouble();
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,240,n.close();
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,241,eturn data;
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,242, catch (IOException e) {
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,243,hrow new MathInternalError(e);
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,248, @param name Basename of the resource.
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,249, @param len Size of the table.
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,250, @param rowLen Size of each row of the table.
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,251, @return the retrieved data.
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,253,"rivate static double[][] loadTable2d(String name,"
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,254,"nt len,"
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,255,nt rowLen) {
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,256,ry {
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,257,inal DataInputStream in = in(name);
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,258,inal byte[] b = new byte[BYTES_IN_DOUBLE * rowLen];
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,259,inal double[][] data = new double[len][rowLen];
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,260,inal ByteBuffer bBuf = ByteBuffer.wrap(b);
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,262,or (int i = 0; i < len; i++) {
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,263,n.readFully(b);
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,264,inal DoubleBuffer dBuf = bBuf.asDoubleBuffer();
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,265,or (int j = 0; j < rowLen; j++) {
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,266,ata[i][j] = dBuf.get();
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,270,n.close();
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,271,eturn data;
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,272, catch (IOException e) {
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,273,hrow new MathInternalError(e);
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,278, Transposes a two-dimensional array: The number of rows becomes the
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,279, number of columns and vice-versa.
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,280, The array must be rectangular (same number of colums in each row).
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,282, @param data Array to be transposed.
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,283, @return the transposed array.
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,285,rivate static double[][] transpose(double[][] data) {
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,286,inal int rowLen = data.length;
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,287,inal int len = data[0].length;
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,288,inal double[][] tData = new double[len][rowLen];
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,290,or (int i = 0; i < len; i++) {
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,291,or (int j = 0; j < rowLen; j++) {
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,292,Data[i][j] = data[j][i];
False,src/main/java/org/apache/commons/math3/util/FastMathResources.java,src/main/java/org/apache/commons/math3/util/FastMathResources.java,296,eturn tData;
False,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,1,ackage org.apache.commons.math3.util;
False,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,3,mport java.lang.reflect.Field;
False,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,6, FastMath load performance test - requires that
False,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,7, <ul>
False,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,8,  <li>{@code FastMath.RECOMPUTE_TABLES_AT_RUNTIME}</li>
False,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,9,  <li>{@code FastMath.LOAD_RESOURCES}</li>
False,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,10, </ul>
False,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,11," be non-""final""."
False,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,13," For example, this shell command:"
False,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,14, <pre>
False,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,15,  $ for max in false true ; do for how in compute resources array; do java -cp target/classes:target/test-classes org.apache.commons.math3.util.FastMathLoadCheck $max $how 4 ; done ; done
False,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,16, </pre>
False,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,17, will produce an output similar to the following:
False,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,18, <pre>
False,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,19, Using exp(100); how=computeUsing exp(100); how=compute
False,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,20,     times       result
False,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,21,  43534147 2.688117e+43
False,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,22,      4547 2.688117e+43
False,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,23,      1970 2.688117e+43
False,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,24,      1823 2.688117e+43
False,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,26, Using exp(100); how=array
False,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,27,     times       result
False,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,28,  12596573 2.688117e+43
False,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,29,      4484 2.688117e+43
False,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,30,      1861 2.688117e+43
False,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,31,      1864 2.688117e+43
False,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,33, Using exp(100); how=resources
False,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,34,     times       result
False,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,35,  13087186 2.688117e+43
False,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,36,      4974 2.688117e+43
False,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,37,      1834 2.688117e+43
False,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,38,      1900 2.688117e+43
False,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,40," Using max(0,0); how=compute"
False,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,41,     times       result
False,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,42,      3172 0.000000e+00
False,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,43,       692 0.000000e+00
False,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,44,       385 0.000000e+00
False,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,45,       358 0.000000e+00
False,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,47," Using max(0,0); how=array"
False,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,48,     times       result
False,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,49,      2746 0.000000e+00
False,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,50,       527 0.000000e+00
False,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,51,       382 0.000000e+00
False,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,52,       390 0.000000e+00
False,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,54," Using max(0,0); how=resources"
False,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,55,     times       result
False,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,56,      3762 0.000000e+00
False,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,57,       506 0.000000e+00
False,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,58,       394 0.000000e+00
False,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,59,       364 0.000000e+00
False,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,60, </pre>
False,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,62,ublic class FastMathLoadCheck {
False,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,63,"rivate final static String COMP = ""compute"";"
False,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,64,"rivate final static String RES = ""resources"";"
False,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,65,"rivate final static String ARR = ""array"";"
False,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,67,rivate static int LOOPS = 10;
False,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,68,rivate static boolean MAX = false;
False,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,69,rivate static String how = ARR;
False,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,71,ublic static void main(String[] args) throws Exception {
False,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,72,f (args.length > 0) MAX = Boolean.valueOf(args[0]);
False,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,73,f (args.length > 1) how = args[1];
False,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,74,f (args.length > 2) LOOPS = Integer.valueOf(args[2]);
False,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,75,"(""Using ""+ (MAX ? ""max(0,0)"" : ""exp(100)"") + ""; how="" + how + ""\n"");"
False,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,77,"inal Field recompute = FastMath.class.getDeclaredField(""RECOMPUTE_TABLES_AT_RUNTIME"");"
False,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,78,"inal Field load = FastMath.class.getDeclaredField(""LOAD_RESOURCES"");"
False,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,79,ecompute.setAccessible(true);
False,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,80,oad.setAccessible(true);
False,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,81,f (how.equals(COMP)) {
False,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,82,"ecompute.setBoolean(null, true);"
False,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,83,"oad.setBoolean(null, false);"
False,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,84, else if (how.equals(RES)) {
False,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,85,"ecompute.setBoolean(null, false);"
False,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,86,"oad.setBoolean(null, true);"
False,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,87, else if (how.equals(ARR)) {
False,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,88,"ecompute.setBoolean(null, false);"
False,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,89,"oad.setBoolean(null, false);"
False,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,90, else {
False,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,91,"hrow new IllegalArgumentException(""'how' must be 'compute' or 'resources' or 'array'"");"
False,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,93,ecompute.setAccessible(false);
False,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,94,oad.setAccessible(false);
False,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,96,est();
False,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,98,rivate static void test(){
False,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,99,"(""%9s %12s\n"", ""times"", ""result"");"
False,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,100,ouble result;
False,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,101,or(int i = 0; i < LOOPS; i++) {
False,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,102,ong t1 = System.nanoTime();
False,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,103,f (MAX) {
False,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,104,"esult = FastMath.max(0, 0);"
False,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,105, else {
False,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,106,esult = FastMath.exp(100);
False,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,108,ong t2 = System.nanoTime();
False,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,109,"(""%9d %e\n"", t2 - t1, result);"
False,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,111,"(""\n"");"
False,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,114,"rivate static void p(String format, Object ... p){"
False,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,115,"ystem.out.printf(format, p);"
False,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,117,rivate static void p(Object p){
False,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,src/test/java/org/apache/commons/math3/util/FastMathLoadCheck.java,118,ystem.out.print(p);
False,src/test/java/org/apache/commons/math3/util/FastMathResourcesSave.java,src/test/java/org/apache/commons/math3/util/FastMathResourcesSave.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/java/org/apache/commons/math3/util/FastMathResourcesSave.java,src/test/java/org/apache/commons/math3/util/FastMathResourcesSave.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/java/org/apache/commons/math3/util/FastMathResourcesSave.java,src/test/java/org/apache/commons/math3/util/FastMathResourcesSave.java,4, this work for additional information regarding copyright ownership.
False,src/test/java/org/apache/commons/math3/util/FastMathResourcesSave.java,src/test/java/org/apache/commons/math3/util/FastMathResourcesSave.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/java/org/apache/commons/math3/util/FastMathResourcesSave.java,src/test/java/org/apache/commons/math3/util/FastMathResourcesSave.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/java/org/apache/commons/math3/util/FastMathResourcesSave.java,src/test/java/org/apache/commons/math3/util/FastMathResourcesSave.java,7, the License.  You may obtain a copy of the License at
False,src/test/java/org/apache/commons/math3/util/FastMathResourcesSave.java,src/test/java/org/apache/commons/math3/util/FastMathResourcesSave.java,9,      http://www.apache.org/licenses/LICENSE-2.0
False,src/test/java/org/apache/commons/math3/util/FastMathResourcesSave.java,src/test/java/org/apache/commons/math3/util/FastMathResourcesSave.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/java/org/apache/commons/math3/util/FastMathResourcesSave.java,src/test/java/org/apache/commons/math3/util/FastMathResourcesSave.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/java/org/apache/commons/math3/util/FastMathResourcesSave.java,src/test/java/org/apache/commons/math3/util/FastMathResourcesSave.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/java/org/apache/commons/math3/util/FastMathResourcesSave.java,src/test/java/org/apache/commons/math3/util/FastMathResourcesSave.java,14, See the License for the specific language governing permissions and
False,src/test/java/org/apache/commons/math3/util/FastMathResourcesSave.java,src/test/java/org/apache/commons/math3/util/FastMathResourcesSave.java,15, limitations under the License.
False,src/test/java/org/apache/commons/math3/util/FastMathResourcesSave.java,src/test/java/org/apache/commons/math3/util/FastMathResourcesSave.java,17,ackage org.apache.commons.math3.util;
False,src/test/java/org/apache/commons/math3/util/FastMathResourcesSave.java,src/test/java/org/apache/commons/math3/util/FastMathResourcesSave.java,20, Not a test class.
False,src/test/java/org/apache/commons/math3/util/FastMathResourcesSave.java,src/test/java/org/apache/commons/math3/util/FastMathResourcesSave.java,21," It is used to generate the resource data used by the ""FastMath"" class."
False,src/test/java/org/apache/commons/math3/util/FastMathResourcesSave.java,src/test/java/org/apache/commons/math3/util/FastMathResourcesSave.java,22," You should run it from inside the ""resources"" directory, i.e. use as:"
False,src/test/java/org/apache/commons/math3/util/FastMathResourcesSave.java,src/test/java/org/apache/commons/math3/util/FastMathResourcesSave.java,23, <pre>
False,src/test/java/org/apache/commons/math3/util/FastMathResourcesSave.java,src/test/java/org/apache/commons/math3/util/FastMathResourcesSave.java,24,  $ cd src/main/resources/
False,src/test/java/org/apache/commons/math3/util/FastMathResourcesSave.java,src/test/java/org/apache/commons/math3/util/FastMathResourcesSave.java,25,  $ java -cp ../../../target/classes:../../../target/test-classes org.apache.commons.math3.util.FastMathResourcesSave
False,src/test/java/org/apache/commons/math3/util/FastMathResourcesSave.java,src/test/java/org/apache/commons/math3/util/FastMathResourcesSave.java,26, </pre>
False,src/test/java/org/apache/commons/math3/util/FastMathResourcesSave.java,src/test/java/org/apache/commons/math3/util/FastMathResourcesSave.java,28,ublic class FastMathResourcesSave {
False,src/test/java/org/apache/commons/math3/util/FastMathResourcesSave.java,src/test/java/org/apache/commons/math3/util/FastMathResourcesSave.java,29,ublic static void main(String[] args) throws Exception {
False,src/test/java/org/apache/commons/math3/util/FastMathResourcesSave.java,src/test/java/org/apache/commons/math3/util/FastMathResourcesSave.java,30,astMathResources.createAll();
