is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/math3/stat/clustering/EuclideanIntegerPoint.java,src/main/java/org/apache/commons/math3/stat/clustering/EuclideanIntegerPoint.java,21,import java.util.Arrays;
False,src/main/java/org/apache/commons/math3/stat/clustering/EuclideanIntegerPoint.java,src/main/java/org/apache/commons/math3/stat/clustering/EuclideanIntegerPoint.java,80,inal int[] otherPoint = ((EuclideanIntegerPoint) other).getPoint();
False,src/main/java/org/apache/commons/math3/stat/clustering/EuclideanIntegerPoint.java,src/main/java/org/apache/commons/math3/stat/clustering/EuclideanIntegerPoint.java,81,f (point.length != otherPoint.length) {
False,src/main/java/org/apache/commons/math3/stat/clustering/EuclideanIntegerPoint.java,src/main/java/org/apache/commons/math3/stat/clustering/EuclideanIntegerPoint.java,82,eturn false;
False,src/main/java/org/apache/commons/math3/stat/clustering/EuclideanIntegerPoint.java,src/main/java/org/apache/commons/math3/stat/clustering/EuclideanIntegerPoint.java,84,or (int i = 0; i < point.length; i++) {
False,src/main/java/org/apache/commons/math3/stat/clustering/EuclideanIntegerPoint.java,src/main/java/org/apache/commons/math3/stat/clustering/EuclideanIntegerPoint.java,85,f (point[i] != otherPoint[i]) {
False,src/main/java/org/apache/commons/math3/stat/clustering/EuclideanIntegerPoint.java,src/main/java/org/apache/commons/math3/stat/clustering/EuclideanIntegerPoint.java,86,eturn false;
False,src/main/java/org/apache/commons/math3/stat/clustering/EuclideanIntegerPoint.java,src/main/java/org/apache/commons/math3/stat/clustering/EuclideanIntegerPoint.java,89,eturn true;
True,src/main/java/org/apache/commons/math3/stat/clustering/EuclideanIntegerPoint.java,src/main/java/org/apache/commons/math3/stat/clustering/EuclideanIntegerPoint.java,81,"return Arrays.equals(point, ((EuclideanIntegerPoint) other).point);"
False,src/main/java/org/apache/commons/math3/stat/clustering/EuclideanIntegerPoint.java,src/main/java/org/apache/commons/math3/stat/clustering/EuclideanIntegerPoint.java,95,nt hashCode = 0;
False,src/main/java/org/apache/commons/math3/stat/clustering/EuclideanIntegerPoint.java,src/main/java/org/apache/commons/math3/stat/clustering/EuclideanIntegerPoint.java,96,or (Integer i : point) {
False,src/main/java/org/apache/commons/math3/stat/clustering/EuclideanIntegerPoint.java,src/main/java/org/apache/commons/math3/stat/clustering/EuclideanIntegerPoint.java,97,ashCode += i.hashCode() * 13 + 7;
False,src/main/java/org/apache/commons/math3/stat/clustering/EuclideanIntegerPoint.java,src/main/java/org/apache/commons/math3/stat/clustering/EuclideanIntegerPoint.java,99,eturn hashCode;
True,src/main/java/org/apache/commons/math3/stat/clustering/EuclideanIntegerPoint.java,src/main/java/org/apache/commons/math3/stat/clustering/EuclideanIntegerPoint.java,87,return Arrays.hashCode(point);
False,src/main/java/org/apache/commons/math3/stat/clustering/EuclideanIntegerPoint.java,src/main/java/org/apache/commons/math3/stat/clustering/EuclideanIntegerPoint.java,108,"inal StringBuilder buff = new StringBuilder(""("");"
False,src/main/java/org/apache/commons/math3/stat/clustering/EuclideanIntegerPoint.java,src/main/java/org/apache/commons/math3/stat/clustering/EuclideanIntegerPoint.java,109,inal int[] coordinates = getPoint();
False,src/main/java/org/apache/commons/math3/stat/clustering/EuclideanIntegerPoint.java,src/main/java/org/apache/commons/math3/stat/clustering/EuclideanIntegerPoint.java,110,or (int i = 0; i < coordinates.length; i++) {
False,src/main/java/org/apache/commons/math3/stat/clustering/EuclideanIntegerPoint.java,src/main/java/org/apache/commons/math3/stat/clustering/EuclideanIntegerPoint.java,111,uff.append(coordinates[i]);
False,src/main/java/org/apache/commons/math3/stat/clustering/EuclideanIntegerPoint.java,src/main/java/org/apache/commons/math3/stat/clustering/EuclideanIntegerPoint.java,112,f (i < coordinates.length - 1) {
False,src/main/java/org/apache/commons/math3/stat/clustering/EuclideanIntegerPoint.java,src/main/java/org/apache/commons/math3/stat/clustering/EuclideanIntegerPoint.java,113,"uff.append("","");"
False,src/main/java/org/apache/commons/math3/stat/clustering/EuclideanIntegerPoint.java,src/main/java/org/apache/commons/math3/stat/clustering/EuclideanIntegerPoint.java,116,"uff.append("")"");"
False,src/main/java/org/apache/commons/math3/stat/clustering/EuclideanIntegerPoint.java,src/main/java/org/apache/commons/math3/stat/clustering/EuclideanIntegerPoint.java,117,eturn buff.toString();
True,src/main/java/org/apache/commons/math3/stat/clustering/EuclideanIntegerPoint.java,src/main/java/org/apache/commons/math3/stat/clustering/EuclideanIntegerPoint.java,96,return Arrays.toString(point);
