is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,57, {@code true} if the orthogonal version of the FFT should be used.
True,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,56,* {@code true} if the unitary version of the DFT should be used.
False,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,67,** Construct a default transformer. */
False,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,68,rivate FastFourierTransformer() {
False,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,69,uper();
False,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,70,his.unitary = false;
False,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,77, @param unitary {@code false} if the direct Fourier transform is
False,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,78," <em>not</em> to be scaled, {@code true} if it is to be scaled so as to"
False,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,79, make the transform unitary.
True,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,70,"* @param unitary {@code false} if the DFT is <em>not</em> to be scaled,"
True,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,71,* {@code true} if it is to be scaled so as to make the transform unitary.
False,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,91, </p>
False,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,98, y<sub>n</sub> exp(2&pi;i n k / N).</li>
True,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,89,"* y<sub>n</sub> exp(2&pi;i n k / N),</li>"
True,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,91,* where N is the size of the data sample.
True,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,92,* </p>
False,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,101," @return a new FFT transformer, with ""standard"" normalizing conventions"
True,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,94,"* @return a new DFT transformer, with ""standard"" normalizing conventions"
False,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,119, which make the transform unitary.
True,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java,112,* which make the transform unitary. N is the size of the data sample.
