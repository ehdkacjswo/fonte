is_addition,old_file_path,new_file_path,line_num,content
False,src/java/org/apache/commons/math/linear/SparseFieldMatrix.java,src/java/org/apache/commons/math/linear/SparseFieldMatrix.java,47, Creates a matrix with no data
True,src/java/org/apache/commons/math/linear/SparseFieldMatrix.java,src/java/org/apache/commons/math/linear/SparseFieldMatrix.java,47,* Creates a matrix with no data.
False,src/java/org/apache/commons/math/linear/SparseFieldMatrix.java,src/java/org/apache/commons/math/linear/SparseFieldMatrix.java,66,"inal int rowDimension, final int columnDimension)"
True,src/java/org/apache/commons/math/linear/SparseFieldMatrix.java,src/java/org/apache/commons/math/linear/SparseFieldMatrix.java,66,"final int rowDimension, final int columnDimension)"
False,src/java/org/apache/commons/math/linear/SparseFieldMatrix.java,src/java/org/apache/commons/math/linear/SparseFieldMatrix.java,75, Copy construtor.
True,src/java/org/apache/commons/math/linear/SparseFieldMatrix.java,src/java/org/apache/commons/math/linear/SparseFieldMatrix.java,75,* Copy constructor.
False,src/java/org/apache/commons/math/linear/SparseFieldMatrix.java,src/java/org/apache/commons/math/linear/SparseFieldMatrix.java,78,ublic SparseFieldMatrix(SparseFieldMatrix<T> other){
True,src/java/org/apache/commons/math/linear/SparseFieldMatrix.java,src/java/org/apache/commons/math/linear/SparseFieldMatrix.java,78,public SparseFieldMatrix(SparseFieldMatrix<T> other) {
False,src/java/org/apache/commons/math/linear/SparseFieldMatrix.java,src/java/org/apache/commons/math/linear/SparseFieldMatrix.java,86, Generic copy construtor.
True,src/java/org/apache/commons/math/linear/SparseFieldMatrix.java,src/java/org/apache/commons/math/linear/SparseFieldMatrix.java,86,* Generic copy constructor.
False,src/java/org/apache/commons/math/linear/SparseFieldMatrix.java,src/java/org/apache/commons/math/linear/SparseFieldMatrix.java,94,or(int i=0; i < rowDimension; i++){
False,src/java/org/apache/commons/math/linear/SparseFieldMatrix.java,src/java/org/apache/commons/math/linear/SparseFieldMatrix.java,95,or(int j=0; j < columnDimension; j++){
True,src/java/org/apache/commons/math/linear/SparseFieldMatrix.java,src/java/org/apache/commons/math/linear/SparseFieldMatrix.java,94,for (int i = 0; i < rowDimension; i++) {
True,src/java/org/apache/commons/math/linear/SparseFieldMatrix.java,src/java/org/apache/commons/math/linear/SparseFieldMatrix.java,95,for (int j = 0; j < columnDimension; j++) {
False,src/java/org/apache/commons/math/linear/SparseFieldVector.java,src/java/org/apache/commons/math/linear/SparseFieldVector.java,46, <p>Zero-length vectors may be used to initialized construction of vectors
True,src/java/org/apache/commons/math/linear/SparseFieldVector.java,src/java/org/apache/commons/math/linear/SparseFieldVector.java,46,* <p>Zero-length vectors may be used to initialize construction of vectors
False,src/java/org/apache/commons/math/linear/SparseFieldVector.java,src/java/org/apache/commons/math/linear/SparseFieldVector.java,90,"ntries = new OpenIntToFieldHashMap<T> (field,expectedSize);"
True,src/java/org/apache/commons/math/linear/SparseFieldVector.java,src/java/org/apache/commons/math/linear/SparseFieldVector.java,90,"entries = new OpenIntToFieldHashMap<T>(field,expectedSize);"
False,src/java/org/apache/commons/math/linear/SparseFieldVector.java,src/java/org/apache/commons/math/linear/SparseFieldVector.java,130, Optimzed method to add sparse vectors
True,src/java/org/apache/commons/math/linear/SparseFieldVector.java,src/java/org/apache/commons/math/linear/SparseFieldVector.java,130,* Optimized method to add sparse vectors.
False,src/java/org/apache/commons/math/linear/SparseFieldVector.java,src/java/org/apache/commons/math/linear/SparseFieldVector.java,176,f(v instanceof SparseFieldVector)
False,src/java/org/apache/commons/math/linear/SparseFieldVector.java,src/java/org/apache/commons/math/linear/SparseFieldVector.java,177,eturn append((SparseFieldVector<T>)v);
False,src/java/org/apache/commons/math/linear/SparseFieldVector.java,src/java/org/apache/commons/math/linear/SparseFieldVector.java,178,lse
True,src/java/org/apache/commons/math/linear/SparseFieldVector.java,src/java/org/apache/commons/math/linear/SparseFieldVector.java,176,if (v instanceof SparseFieldVector) {
True,src/java/org/apache/commons/math/linear/SparseFieldVector.java,src/java/org/apache/commons/math/linear/SparseFieldVector.java,177,return append((SparseFieldVector<T>) v);
True,src/java/org/apache/commons/math/linear/SparseFieldVector.java,src/java/org/apache/commons/math/linear/SparseFieldVector.java,178,} else {
False,src/java/org/apache/commons/math/linear/SparseFieldVector.java,src/java/org/apache/commons/math/linear/SparseFieldVector.java,234,hrows IllegalArgumentException {
True,src/java/org/apache/commons/math/linear/SparseFieldVector.java,src/java/org/apache/commons/math/linear/SparseFieldVector.java,234,throws IllegalArgumentException {
False,src/java/org/apache/commons/math/linear/SparseFieldVector.java,src/java/org/apache/commons/math/linear/SparseFieldVector.java,393, Optimized method to compute outer product when both vectors are sparse
True,src/java/org/apache/commons/math/linear/SparseFieldVector.java,src/java/org/apache/commons/math/linear/SparseFieldVector.java,393,* Optimized method to compute outer product when both vectors are sparse.
True,src/java/org/apache/commons/math/linear/SparseFieldVector.java,src/java/org/apache/commons/math/linear/SparseFieldVector.java,439,/** {@inheritDoc} */
False,src/java/org/apache/commons/math/linear/SparseFieldVector.java,src/java/org/apache/commons/math/linear/SparseFieldVector.java,567,f(v instanceof SparseFieldVector)
True,src/java/org/apache/commons/math/linear/SparseFieldVector.java,src/java/org/apache/commons/math/linear/SparseFieldVector.java,568,if (v instanceof SparseFieldVector) {
False,src/java/org/apache/commons/math/linear/SparseFieldVector.java,src/java/org/apache/commons/math/linear/SparseFieldVector.java,569,lse
True,src/java/org/apache/commons/math/linear/SparseFieldVector.java,src/java/org/apache/commons/math/linear/SparseFieldVector.java,570,} else {
True,src/java/org/apache/commons/math/linear/SparseFieldVector.java,src/java/org/apache/commons/math/linear/SparseFieldVector.java,603,"@SuppressWarnings(""unchecked"")"
False,src/java/org/apache/commons/math/linear/SparseFieldVector.java,src/java/org/apache/commons/math/linear/SparseFieldVector.java,603,f (this == obj)
True,src/java/org/apache/commons/math/linear/SparseFieldVector.java,src/java/org/apache/commons/math/linear/SparseFieldVector.java,607,if (this == obj) {
False,src/java/org/apache/commons/math/linear/SparseFieldVector.java,src/java/org/apache/commons/math/linear/SparseFieldVector.java,605,f (obj == null)
True,src/java/org/apache/commons/math/linear/SparseFieldVector.java,src/java/org/apache/commons/math/linear/SparseFieldVector.java,611,if (obj == null) {
False,src/java/org/apache/commons/math/linear/SparseFieldVector.java,src/java/org/apache/commons/math/linear/SparseFieldVector.java,607,f (!(obj instanceof SparseFieldVector))
True,src/java/org/apache/commons/math/linear/SparseFieldVector.java,src/java/org/apache/commons/math/linear/SparseFieldVector.java,615,if (!(obj instanceof SparseFieldVector)) {
False,src/java/org/apache/commons/math/linear/SparseFieldVector.java,src/java/org/apache/commons/math/linear/SparseFieldVector.java,611,f (other.field != null)
True,src/java/org/apache/commons/math/linear/SparseFieldVector.java,src/java/org/apache/commons/math/linear/SparseFieldVector.java,621,if (other.field != null) {
False,src/java/org/apache/commons/math/linear/SparseFieldVector.java,src/java/org/apache/commons/math/linear/SparseFieldVector.java,613, else if (!field.equals(other.field))
True,src/java/org/apache/commons/math/linear/SparseFieldVector.java,src/java/org/apache/commons/math/linear/SparseFieldVector.java,624,} else if (!field.equals(other.field)) {
False,src/java/org/apache/commons/math/linear/SparseFieldVector.java,src/java/org/apache/commons/math/linear/SparseFieldVector.java,615,f (virtualSize != other.virtualSize)
True,src/java/org/apache/commons/math/linear/SparseFieldVector.java,src/java/org/apache/commons/math/linear/SparseFieldVector.java,627,if (virtualSize != other.virtualSize) {
