is_addition,old_file_path,new_file_path,line_num,content
True,src/main/java/org/apache/commons/math3/fraction/BigFraction.java,src/main/java/org/apache/commons/math3/fraction/BigFraction.java,24,import org.apache.commons.math3.exception.MathArithmeticException;
True,src/main/java/org/apache/commons/math3/fraction/BigFraction.java,src/main/java/org/apache/commons/math3/fraction/BigFraction.java,29,import org.apache.commons.math3.util.ArithmeticUtils;
False,src/main/java/org/apache/commons/math3/fraction/BigFraction.java,src/main/java/org/apache/commons/math3/fraction/BigFraction.java,30,mport org.apache.commons.math3.util.ArithmeticUtils;
False,src/main/java/org/apache/commons/math3/fraction/BigFraction.java,src/main/java/org/apache/commons/math3/fraction/BigFraction.java,601," Divide the value of this fraction by the passed <code>BigInteger</code>,"
False,src/main/java/org/apache/commons/math3/fraction/BigFraction.java,src/main/java/org/apache/commons/math3/fraction/BigFraction.java,602," ie ""this * 1 / bg"", returning the result in reduced form."
True,src/main/java/org/apache/commons/math3/fraction/BigFraction.java,src/main/java/org/apache/commons/math3/fraction/BigFraction.java,602,"* Divide the value of this fraction by the passed {@code BigInteger},"
True,src/main/java/org/apache/commons/math3/fraction/BigFraction.java,src/main/java/org/apache/commons/math3/fraction/BigFraction.java,603,"* ie {@code this * 1 / bg}, returning the result in reduced form."
False,src/main/java/org/apache/commons/math3/fraction/BigFraction.java,src/main/java/org/apache/commons/math3/fraction/BigFraction.java,605, @param bg
False,src/main/java/org/apache/commons/math3/fraction/BigFraction.java,src/main/java/org/apache/commons/math3/fraction/BigFraction.java,606,"            the <code>BigInteger</code> to divide by, must not be"
False,src/main/java/org/apache/commons/math3/fraction/BigFraction.java,src/main/java/org/apache/commons/math3/fraction/BigFraction.java,607,            <code>null</code>.
False,src/main/java/org/apache/commons/math3/fraction/BigFraction.java,src/main/java/org/apache/commons/math3/fraction/BigFraction.java,608, @return a {@link BigFraction} instance with the resulting values.
False,src/main/java/org/apache/commons/math3/fraction/BigFraction.java,src/main/java/org/apache/commons/math3/fraction/BigFraction.java,609, @throws NullArgumentException if the {@code BigInteger} is {@code null}.
False,src/main/java/org/apache/commons/math3/fraction/BigFraction.java,src/main/java/org/apache/commons/math3/fraction/BigFraction.java,610, @throws ZeroException
False,src/main/java/org/apache/commons/math3/fraction/BigFraction.java,src/main/java/org/apache/commons/math3/fraction/BigFraction.java,611,             if the fraction to divide by is zero.
True,src/main/java/org/apache/commons/math3/fraction/BigFraction.java,src/main/java/org/apache/commons/math3/fraction/BigFraction.java,606,"* @param bg the {@code BigInteger} to divide by, must not be {@code null}"
True,src/main/java/org/apache/commons/math3/fraction/BigFraction.java,src/main/java/org/apache/commons/math3/fraction/BigFraction.java,607,* @return a {@link BigFraction} instance with the resulting values
True,src/main/java/org/apache/commons/math3/fraction/BigFraction.java,src/main/java/org/apache/commons/math3/fraction/BigFraction.java,608,* @throws NullArgumentException if the {@code BigInteger} is {@code null}
True,src/main/java/org/apache/commons/math3/fraction/BigFraction.java,src/main/java/org/apache/commons/math3/fraction/BigFraction.java,609,* @throws MathArithmeticException if the fraction to divide by is zero
True,src/main/java/org/apache/commons/math3/fraction/BigFraction.java,src/main/java/org/apache/commons/math3/fraction/BigFraction.java,612,if (bg == null) {
True,src/main/java/org/apache/commons/math3/fraction/BigFraction.java,src/main/java/org/apache/commons/math3/fraction/BigFraction.java,613,throw new NullArgumentException(LocalizedFormats.FRACTION);
False,src/main/java/org/apache/commons/math3/fraction/BigFraction.java,src/main/java/org/apache/commons/math3/fraction/BigFraction.java,615,hrow new ZeroException(LocalizedFormats.ZERO_DENOMINATOR);
True,src/main/java/org/apache/commons/math3/fraction/BigFraction.java,src/main/java/org/apache/commons/math3/fraction/BigFraction.java,616,throw new MathArithmeticException(LocalizedFormats.ZERO_DENOMINATOR);
False,src/main/java/org/apache/commons/math3/fraction/BigFraction.java,src/main/java/org/apache/commons/math3/fraction/BigFraction.java,622," Divide the value of this fraction by the passed <tt>int</tt>, ie"
False,src/main/java/org/apache/commons/math3/fraction/BigFraction.java,src/main/java/org/apache/commons/math3/fraction/BigFraction.java,623," ""this * 1 / i"", returning the result in reduced form."
True,src/main/java/org/apache/commons/math3/fraction/BigFraction.java,src/main/java/org/apache/commons/math3/fraction/BigFraction.java,623,"* Divide the value of this fraction by the passed {@code int}, ie"
True,src/main/java/org/apache/commons/math3/fraction/BigFraction.java,src/main/java/org/apache/commons/math3/fraction/BigFraction.java,624,"* {@code this * 1 / i}, returning the result in reduced form."
False,src/main/java/org/apache/commons/math3/fraction/BigFraction.java,src/main/java/org/apache/commons/math3/fraction/BigFraction.java,626, @param i
False,src/main/java/org/apache/commons/math3/fraction/BigFraction.java,src/main/java/org/apache/commons/math3/fraction/BigFraction.java,627,            the <tt>int</tt> to divide by.
False,src/main/java/org/apache/commons/math3/fraction/BigFraction.java,src/main/java/org/apache/commons/math3/fraction/BigFraction.java,628, @return a {@link BigFraction} instance with the resulting values.
False,src/main/java/org/apache/commons/math3/fraction/BigFraction.java,src/main/java/org/apache/commons/math3/fraction/BigFraction.java,629, @throws ArithmeticException
False,src/main/java/org/apache/commons/math3/fraction/BigFraction.java,src/main/java/org/apache/commons/math3/fraction/BigFraction.java,630,             if the fraction to divide by is zero.
True,src/main/java/org/apache/commons/math3/fraction/BigFraction.java,src/main/java/org/apache/commons/math3/fraction/BigFraction.java,627,* @param i the {@code int} to divide by
True,src/main/java/org/apache/commons/math3/fraction/BigFraction.java,src/main/java/org/apache/commons/math3/fraction/BigFraction.java,628,* @return a {@link BigFraction} instance with the resulting values
True,src/main/java/org/apache/commons/math3/fraction/BigFraction.java,src/main/java/org/apache/commons/math3/fraction/BigFraction.java,629,* @throws MathArithmeticException if the fraction to divide by is zero
False,src/main/java/org/apache/commons/math3/fraction/BigFraction.java,src/main/java/org/apache/commons/math3/fraction/BigFraction.java,638," Divide the value of this fraction by the passed <tt>long</tt>, ie"
False,src/main/java/org/apache/commons/math3/fraction/BigFraction.java,src/main/java/org/apache/commons/math3/fraction/BigFraction.java,639," ""this * 1 / l"", returning the result in reduced form."
True,src/main/java/org/apache/commons/math3/fraction/BigFraction.java,src/main/java/org/apache/commons/math3/fraction/BigFraction.java,637,"* Divide the value of this fraction by the passed {@code long}, ie"
True,src/main/java/org/apache/commons/math3/fraction/BigFraction.java,src/main/java/org/apache/commons/math3/fraction/BigFraction.java,638,"* {@code this * 1 / l}, returning the result in reduced form."
False,src/main/java/org/apache/commons/math3/fraction/BigFraction.java,src/main/java/org/apache/commons/math3/fraction/BigFraction.java,642, @param l
False,src/main/java/org/apache/commons/math3/fraction/BigFraction.java,src/main/java/org/apache/commons/math3/fraction/BigFraction.java,643,            the <tt>long</tt> to divide by.
False,src/main/java/org/apache/commons/math3/fraction/BigFraction.java,src/main/java/org/apache/commons/math3/fraction/BigFraction.java,644, @return a {@link BigFraction} instance with the resulting values.
False,src/main/java/org/apache/commons/math3/fraction/BigFraction.java,src/main/java/org/apache/commons/math3/fraction/BigFraction.java,645, @throws ArithmeticException
False,src/main/java/org/apache/commons/math3/fraction/BigFraction.java,src/main/java/org/apache/commons/math3/fraction/BigFraction.java,646,             if the fraction to divide by is zero.
True,src/main/java/org/apache/commons/math3/fraction/BigFraction.java,src/main/java/org/apache/commons/math3/fraction/BigFraction.java,641,* @param l the {@code long} to divide by
True,src/main/java/org/apache/commons/math3/fraction/BigFraction.java,src/main/java/org/apache/commons/math3/fraction/BigFraction.java,642,* @return a {@link BigFraction} instance with the resulting values
True,src/main/java/org/apache/commons/math3/fraction/BigFraction.java,src/main/java/org/apache/commons/math3/fraction/BigFraction.java,643,* @throws MathArithmeticException if the fraction to divide by is zero
False,src/main/java/org/apache/commons/math3/fraction/BigFraction.java,src/main/java/org/apache/commons/math3/fraction/BigFraction.java,661, @throws ZeroException if the fraction to divide by is zero.
True,src/main/java/org/apache/commons/math3/fraction/BigFraction.java,src/main/java/org/apache/commons/math3/fraction/BigFraction.java,658,* @throws MathArithmeticException if the fraction to divide by is zero
False,src/main/java/org/apache/commons/math3/fraction/BigFraction.java,src/main/java/org/apache/commons/math3/fraction/BigFraction.java,668,hrow new ZeroException(LocalizedFormats.ZERO_DENOMINATOR);
True,src/main/java/org/apache/commons/math3/fraction/BigFraction.java,src/main/java/org/apache/commons/math3/fraction/BigFraction.java,665,throw new MathArithmeticException(LocalizedFormats.ZERO_DENOMINATOR);
True,src/test/java/org/apache/commons/math3/fraction/BigFractionTest.java,src/test/java/org/apache/commons/math3/fraction/BigFractionTest.java,24,import org.apache.commons.math3.exception.MathArithmeticException;
False,src/test/java/org/apache/commons/math3/fraction/BigFractionTest.java,src/test/java/org/apache/commons/math3/fraction/BigFractionTest.java,426,"ssert.fail(""expecting ArithmeticException"");"
False,src/test/java/org/apache/commons/math3/fraction/BigFractionTest.java,src/test/java/org/apache/commons/math3/fraction/BigFractionTest.java,427, catch (ZeroException ex) {
True,src/test/java/org/apache/commons/math3/fraction/BigFractionTest.java,src/test/java/org/apache/commons/math3/fraction/BigFractionTest.java,427,"Assert.fail(""expecting MathArithmeticException"");"
True,src/test/java/org/apache/commons/math3/fraction/BigFractionTest.java,src/test/java/org/apache/commons/math3/fraction/BigFractionTest.java,428,} catch (MathArithmeticException ex) {
