is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,510," is returned, which is the value of the function. The index for this"
False,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,511, 0<sup>th</sup> order derivative is always 0. the indices of higher
False,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,512, order derivatives is between 1 and {@link #getSize() - 1)}.
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,510,"* is returned, which is the value of the function."
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,512,* <p>The indices of derivatives are between 0 and {@link #getSize() getSize()} - 1.
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,513,"* Their specific order is fixed for a given compiler, but otherwise not"
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,514,* publicly specified. There are however some simple cases which have guaranteed
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,515,* indices:
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,516,* </p>
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,517,* <ul>
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,518,*   <li>the index of 0<sup>th</sup> order derivative is always 0</li>
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,519,"*   <li>if there is only 1 {@link #getFreeParameters() free parameter}, then the"
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,520,"*   derivatives are sorted in increasing derivation order (i.e. f at index 0, df/dp"
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,521,"*   at index 1, d<sup>2</sup>f/dp<sup>2</sup> at index 2 ..."
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,522,"*   d<sup>k</sup>f/dp<sup>k</sup> at index k),</li>"
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,523,"*   <li>if the {@link #getOrder() derivation order} is 1, then the derivatives"
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,524,"*   are sorted in incresing free parameter order (i.e. f at index 0, df/dx<sub>1</sub>"
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,525,"*   at index 1, df/dx<sub>2</sub> at index 2 ... df/dx<sub>k</sub> at index k),</li>"
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,526,*   <li>all other cases are not publicly specified</li>
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java,527,* </ul>
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,186,/** Build an instance from all its derivatives.
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,187,* @param parameters number of free parameters
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,188,* @param order derivation order
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,189,* @param derivatives derivatives sorted according to
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,190,* {@link DSCompiler#getPartialDerivativeIndex(int...)}
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,191,* @exception DimensionMismatchException if derivatives array does not match the
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,192,* {@link DSCompiler#getSize() size} expected by the compiler
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,193,* @see #getAllDerivatives()
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,195,"public DerivativeStructure(final int parameters, final int order, final double ... derivatives)"
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,196,throws DimensionMismatchException {
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,197,"this(parameters, order);"
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,198,if (derivatives.length != data.length) {
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,199,"throw new DimensionMismatchException(derivatives.length, data.length);"
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,201,"System.arraycopy(derivatives, 0, data, 0, data.length);"
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,249,/** Get all partial derivatives.
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,250,"* @return a fresh copy of partial derivatives, in an array sorted according to"
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,251,* {@link DSCompiler#getPartialDerivativeIndex(int...)}
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,253,public double[] getAllDerivatives() {
True,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java,254,return data.clone();
True,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,23,import org.apache.commons.math3.TestUtils;
True,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,1026,@Test
True,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,1027,public void testOneParameterConstructor() {
True,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,1028,double x = 1.2;
True,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,1029,double cos = FastMath.cos(x);
True,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,1030,double sin = FastMath.sin(x);
True,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,1031,"DerivativeStructure yRef = new DerivativeStructure(1, 4, 0, x).cos();"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,1032,try {
True,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,1033,"new DerivativeStructure(1, 4, 0.0, 0.0);"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,1034,"Assert.fail(""an exception should have been thrown"");"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,1035,} catch (DimensionMismatchException dme) {
True,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,1036,// expected
True,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,1037,} catch (Exception e) {
True,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,1038,"Assert.fail(""wrong exceptionc caught "" + e.getClass().getName());"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,1040,"double[] derivatives = new double[] { cos, -sin, -cos, sin, cos };"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,1041,"DerivativeStructure y = new DerivativeStructure(1,  4, derivatives);"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,1042,"checkEquals(yRef, y, 1.0e-15);"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,1043,"TestUtils.assertEquals(derivatives, y.getAllDerivatives(), 1.0e-15);"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,1046,@Test
True,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,1047,public void testOneOrderConstructor() {
True,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,1048,double x =  1.2;
True,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,1049,double y =  2.4;
True,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,1050,double z = 12.5;
True,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,1051,"DerivativeStructure xRef = new DerivativeStructure(3, 1, 0, x);"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,1052,"DerivativeStructure yRef = new DerivativeStructure(3, 1, 1, y);"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,1053,"DerivativeStructure zRef = new DerivativeStructure(3, 1, 2, z);"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,1054,try {
True,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,1055,"new DerivativeStructure(3, 1, x + y - z, 1.0, 1.0);"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,1056,"Assert.fail(""an exception should have been thrown"");"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,1057,} catch (DimensionMismatchException dme) {
True,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,1058,// expected
True,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,1059,} catch (Exception e) {
True,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,1060,"Assert.fail(""wrong exceptionc caught "" + e.getClass().getName());"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,1062,"double[] derivatives = new double[] { x + y - z, 1.0, 1.0, -1.0 };"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,1063,"DerivativeStructure t = new DerivativeStructure(3, 1, derivatives);"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,1064,"checkEquals(xRef.add(yRef.subtract(zRef)), t, 1.0e-15);"
True,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java,1065,"TestUtils.assertEquals(derivatives, xRef.add(yRef.subtract(zRef)).getAllDerivatives(), 1.0e-15);"
