is_addition,old_file_path,new_file_path,line_num,content
False,src/test/java/org/apache/commons/math3/analysis/Expm1Function.java,src/test/java/org/apache/commons/math3/analysis/Expm1Function.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/java/org/apache/commons/math3/analysis/Expm1Function.java,src/test/java/org/apache/commons/math3/analysis/Expm1Function.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/java/org/apache/commons/math3/analysis/Expm1Function.java,src/test/java/org/apache/commons/math3/analysis/Expm1Function.java,4, this work for additional information regarding copyright ownership.
False,src/test/java/org/apache/commons/math3/analysis/Expm1Function.java,src/test/java/org/apache/commons/math3/analysis/Expm1Function.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/java/org/apache/commons/math3/analysis/Expm1Function.java,src/test/java/org/apache/commons/math3/analysis/Expm1Function.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/java/org/apache/commons/math3/analysis/Expm1Function.java,src/test/java/org/apache/commons/math3/analysis/Expm1Function.java,7, the License.  You may obtain a copy of the License at
False,src/test/java/org/apache/commons/math3/analysis/Expm1Function.java,src/test/java/org/apache/commons/math3/analysis/Expm1Function.java,9,      http://www.apache.org/licenses/LICENSE-2.0
False,src/test/java/org/apache/commons/math3/analysis/Expm1Function.java,src/test/java/org/apache/commons/math3/analysis/Expm1Function.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/java/org/apache/commons/math3/analysis/Expm1Function.java,src/test/java/org/apache/commons/math3/analysis/Expm1Function.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/java/org/apache/commons/math3/analysis/Expm1Function.java,src/test/java/org/apache/commons/math3/analysis/Expm1Function.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/java/org/apache/commons/math3/analysis/Expm1Function.java,src/test/java/org/apache/commons/math3/analysis/Expm1Function.java,14, See the License for the specific language governing permissions and
False,src/test/java/org/apache/commons/math3/analysis/Expm1Function.java,src/test/java/org/apache/commons/math3/analysis/Expm1Function.java,15, limitations under the License.
False,src/test/java/org/apache/commons/math3/analysis/Expm1Function.java,src/test/java/org/apache/commons/math3/analysis/Expm1Function.java,17,ackage org.apache.commons.math3.analysis;
False,src/test/java/org/apache/commons/math3/analysis/Expm1Function.java,src/test/java/org/apache/commons/math3/analysis/Expm1Function.java,19,mport org.apache.commons.math3.util.FastMath;
False,src/test/java/org/apache/commons/math3/analysis/Expm1Function.java,src/test/java/org/apache/commons/math3/analysis/Expm1Function.java,22, Auxillary class for testing purposes.
False,src/test/java/org/apache/commons/math3/analysis/Expm1Function.java,src/test/java/org/apache/commons/math3/analysis/Expm1Function.java,24, @version $Id$
False,src/test/java/org/apache/commons/math3/analysis/Expm1Function.java,src/test/java/org/apache/commons/math3/analysis/Expm1Function.java,26,ublic class Expm1Function implements DifferentiableUnivariateFunction {
False,src/test/java/org/apache/commons/math3/analysis/Expm1Function.java,src/test/java/org/apache/commons/math3/analysis/Expm1Function.java,28,ublic double value(double x) {
False,src/test/java/org/apache/commons/math3/analysis/Expm1Function.java,src/test/java/org/apache/commons/math3/analysis/Expm1Function.java,29,eturn FastMath.expm1(x);
False,src/test/java/org/apache/commons/math3/analysis/Expm1Function.java,src/test/java/org/apache/commons/math3/analysis/Expm1Function.java,32,ublic UnivariateFunction derivative() {
False,src/test/java/org/apache/commons/math3/analysis/Expm1Function.java,src/test/java/org/apache/commons/math3/analysis/Expm1Function.java,33,eturn new UnivariateFunction() {
False,src/test/java/org/apache/commons/math3/analysis/Expm1Function.java,src/test/java/org/apache/commons/math3/analysis/Expm1Function.java,34,ublic double value(double x) {
False,src/test/java/org/apache/commons/math3/analysis/Expm1Function.java,src/test/java/org/apache/commons/math3/analysis/Expm1Function.java,35,eturn FastMath.exp(x);
True,src/test/java/org/apache/commons/math3/analysis/QuinticFunction.java,src/test/java/org/apache/commons/math3/analysis/QuinticFunction.java,19,import org.apache.commons.math3.analysis.differentiation.DerivativeStructure;
True,src/test/java/org/apache/commons/math3/analysis/QuinticFunction.java,src/test/java/org/apache/commons/math3/analysis/QuinticFunction.java,20,import org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable;
False,src/test/java/org/apache/commons/math3/analysis/QuinticFunction.java,src/test/java/org/apache/commons/math3/analysis/QuinticFunction.java,24,ublic class QuinticFunction implements DifferentiableUnivariateFunction {
True,src/test/java/org/apache/commons/math3/analysis/QuinticFunction.java,src/test/java/org/apache/commons/math3/analysis/QuinticFunction.java,27,public class QuinticFunction implements UnivariateDifferentiable {
False,src/test/java/org/apache/commons/math3/analysis/QuinticFunction.java,src/test/java/org/apache/commons/math3/analysis/QuinticFunction.java,33,ublic UnivariateFunction derivative() {
False,src/test/java/org/apache/commons/math3/analysis/QuinticFunction.java,src/test/java/org/apache/commons/math3/analysis/QuinticFunction.java,34,eturn new UnivariateFunction() {
False,src/test/java/org/apache/commons/math3/analysis/QuinticFunction.java,src/test/java/org/apache/commons/math3/analysis/QuinticFunction.java,35,ublic double value(double x) {
False,src/test/java/org/apache/commons/math3/analysis/QuinticFunction.java,src/test/java/org/apache/commons/math3/analysis/QuinticFunction.java,36,eturn (5*x*x-3.75)*x*x+0.25;
True,src/test/java/org/apache/commons/math3/analysis/QuinticFunction.java,src/test/java/org/apache/commons/math3/analysis/QuinticFunction.java,36,public DerivativeStructure value(DerivativeStructure t) {
True,src/test/java/org/apache/commons/math3/analysis/QuinticFunction.java,src/test/java/org/apache/commons/math3/analysis/QuinticFunction.java,37,return t.subtract(1).multiply(t.subtract(0.5)).multiply(t).multiply(t.add(0.5)).multiply(t.add(1));
False,src/test/java/org/apache/commons/math3/analysis/SinFunction.java,src/test/java/org/apache/commons/math3/analysis/SinFunction.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/java/org/apache/commons/math3/analysis/SinFunction.java,src/test/java/org/apache/commons/math3/analysis/SinFunction.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/java/org/apache/commons/math3/analysis/SinFunction.java,src/test/java/org/apache/commons/math3/analysis/SinFunction.java,4, this work for additional information regarding copyright ownership.
False,src/test/java/org/apache/commons/math3/analysis/SinFunction.java,src/test/java/org/apache/commons/math3/analysis/SinFunction.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/java/org/apache/commons/math3/analysis/SinFunction.java,src/test/java/org/apache/commons/math3/analysis/SinFunction.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/java/org/apache/commons/math3/analysis/SinFunction.java,src/test/java/org/apache/commons/math3/analysis/SinFunction.java,7, the License.  You may obtain a copy of the License at
False,src/test/java/org/apache/commons/math3/analysis/SinFunction.java,src/test/java/org/apache/commons/math3/analysis/SinFunction.java,9,      http://www.apache.org/licenses/LICENSE-2.0
False,src/test/java/org/apache/commons/math3/analysis/SinFunction.java,src/test/java/org/apache/commons/math3/analysis/SinFunction.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/java/org/apache/commons/math3/analysis/SinFunction.java,src/test/java/org/apache/commons/math3/analysis/SinFunction.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/java/org/apache/commons/math3/analysis/SinFunction.java,src/test/java/org/apache/commons/math3/analysis/SinFunction.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/java/org/apache/commons/math3/analysis/SinFunction.java,src/test/java/org/apache/commons/math3/analysis/SinFunction.java,14, See the License for the specific language governing permissions and
False,src/test/java/org/apache/commons/math3/analysis/SinFunction.java,src/test/java/org/apache/commons/math3/analysis/SinFunction.java,15, limitations under the License.
False,src/test/java/org/apache/commons/math3/analysis/SinFunction.java,src/test/java/org/apache/commons/math3/analysis/SinFunction.java,17,ackage org.apache.commons.math3.analysis;
False,src/test/java/org/apache/commons/math3/analysis/SinFunction.java,src/test/java/org/apache/commons/math3/analysis/SinFunction.java,19,mport org.apache.commons.math3.util.FastMath;
False,src/test/java/org/apache/commons/math3/analysis/SinFunction.java,src/test/java/org/apache/commons/math3/analysis/SinFunction.java,22, Auxillary class for testing solvers.
False,src/test/java/org/apache/commons/math3/analysis/SinFunction.java,src/test/java/org/apache/commons/math3/analysis/SinFunction.java,24, The function is extraordinarily well behaved around zero roots: it
False,src/test/java/org/apache/commons/math3/analysis/SinFunction.java,src/test/java/org/apache/commons/math3/analysis/SinFunction.java,25," has an inflection point there (second order derivative is zero),"
False,src/test/java/org/apache/commons/math3/analysis/SinFunction.java,src/test/java/org/apache/commons/math3/analysis/SinFunction.java,26, which means linear approximation (Regula Falsi) will converge
False,src/test/java/org/apache/commons/math3/analysis/SinFunction.java,src/test/java/org/apache/commons/math3/analysis/SinFunction.java,27, quadratically.
False,src/test/java/org/apache/commons/math3/analysis/SinFunction.java,src/test/java/org/apache/commons/math3/analysis/SinFunction.java,29, @version $Id$
False,src/test/java/org/apache/commons/math3/analysis/SinFunction.java,src/test/java/org/apache/commons/math3/analysis/SinFunction.java,31,ublic class SinFunction implements DifferentiableUnivariateFunction {
False,src/test/java/org/apache/commons/math3/analysis/SinFunction.java,src/test/java/org/apache/commons/math3/analysis/SinFunction.java,33,* Evaluate sinus fuction.
False,src/test/java/org/apache/commons/math3/analysis/SinFunction.java,src/test/java/org/apache/commons/math3/analysis/SinFunction.java,34, @see org.apache.commons.math3.UnivariateFunction#value(double)
False,src/test/java/org/apache/commons/math3/analysis/SinFunction.java,src/test/java/org/apache/commons/math3/analysis/SinFunction.java,36,ublic double value(double x) {
False,src/test/java/org/apache/commons/math3/analysis/SinFunction.java,src/test/java/org/apache/commons/math3/analysis/SinFunction.java,37,eturn FastMath.sin(x);
False,src/test/java/org/apache/commons/math3/analysis/SinFunction.java,src/test/java/org/apache/commons/math3/analysis/SinFunction.java,40,* First derivative of sinus function
False,src/test/java/org/apache/commons/math3/analysis/SinFunction.java,src/test/java/org/apache/commons/math3/analysis/SinFunction.java,42,ublic UnivariateFunction derivative() {
False,src/test/java/org/apache/commons/math3/analysis/SinFunction.java,src/test/java/org/apache/commons/math3/analysis/SinFunction.java,43,eturn new UnivariateFunction() {
False,src/test/java/org/apache/commons/math3/analysis/SinFunction.java,src/test/java/org/apache/commons/math3/analysis/SinFunction.java,44,ublic double value(double x) {
False,src/test/java/org/apache/commons/math3/analysis/SinFunction.java,src/test/java/org/apache/commons/math3/analysis/SinFunction.java,45,eturn FastMath.cos(x);
False,src/test/java/org/apache/commons/math3/analysis/SincFunction.java,src/test/java/org/apache/commons/math3/analysis/SincFunction.java,2, Licensed to the Apache Software Foundation (ASF) under one or more
False,src/test/java/org/apache/commons/math3/analysis/SincFunction.java,src/test/java/org/apache/commons/math3/analysis/SincFunction.java,3, contributor license agreements.  See the NOTICE file distributed with
False,src/test/java/org/apache/commons/math3/analysis/SincFunction.java,src/test/java/org/apache/commons/math3/analysis/SincFunction.java,4, this work for additional information regarding copyright ownership.
False,src/test/java/org/apache/commons/math3/analysis/SincFunction.java,src/test/java/org/apache/commons/math3/analysis/SincFunction.java,5," The ASF licenses this file to You under the Apache License, Version 2.0"
False,src/test/java/org/apache/commons/math3/analysis/SincFunction.java,src/test/java/org/apache/commons/math3/analysis/SincFunction.java,6," (the ""License""); you may not use this file except in compliance with"
False,src/test/java/org/apache/commons/math3/analysis/SincFunction.java,src/test/java/org/apache/commons/math3/analysis/SincFunction.java,7, the License.  You may obtain a copy of the License at
False,src/test/java/org/apache/commons/math3/analysis/SincFunction.java,src/test/java/org/apache/commons/math3/analysis/SincFunction.java,9,      http://www.apache.org/licenses/LICENSE-2.0
False,src/test/java/org/apache/commons/math3/analysis/SincFunction.java,src/test/java/org/apache/commons/math3/analysis/SincFunction.java,11," Unless required by applicable law or agreed to in writing, software"
False,src/test/java/org/apache/commons/math3/analysis/SincFunction.java,src/test/java/org/apache/commons/math3/analysis/SincFunction.java,12," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,src/test/java/org/apache/commons/math3/analysis/SincFunction.java,src/test/java/org/apache/commons/math3/analysis/SincFunction.java,13," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,src/test/java/org/apache/commons/math3/analysis/SincFunction.java,src/test/java/org/apache/commons/math3/analysis/SincFunction.java,14, See the License for the specific language governing permissions and
False,src/test/java/org/apache/commons/math3/analysis/SincFunction.java,src/test/java/org/apache/commons/math3/analysis/SincFunction.java,15, limitations under the License.
False,src/test/java/org/apache/commons/math3/analysis/SincFunction.java,src/test/java/org/apache/commons/math3/analysis/SincFunction.java,17,ackage org.apache.commons.math3.analysis;
False,src/test/java/org/apache/commons/math3/analysis/SincFunction.java,src/test/java/org/apache/commons/math3/analysis/SincFunction.java,21, Auxiliary class for testing optimizers.
False,src/test/java/org/apache/commons/math3/analysis/SincFunction.java,src/test/java/org/apache/commons/math3/analysis/SincFunction.java,23, @version $Id$
False,src/test/java/org/apache/commons/math3/analysis/SincFunction.java,src/test/java/org/apache/commons/math3/analysis/SincFunction.java,25,ublic class SincFunction implements DifferentiableUnivariateFunction {
False,src/test/java/org/apache/commons/math3/analysis/SincFunction.java,src/test/java/org/apache/commons/math3/analysis/SincFunction.java,26,rivate static final double EPS = 1e-12;
False,src/test/java/org/apache/commons/math3/analysis/SincFunction.java,src/test/java/org/apache/commons/math3/analysis/SincFunction.java,29, @param x Argument.
False,src/test/java/org/apache/commons/math3/analysis/SincFunction.java,src/test/java/org/apache/commons/math3/analysis/SincFunction.java,30, @return the value of this function at point {@code x}.
False,src/test/java/org/apache/commons/math3/analysis/SincFunction.java,src/test/java/org/apache/commons/math3/analysis/SincFunction.java,32,ublic double value(double x) {
False,src/test/java/org/apache/commons/math3/analysis/SincFunction.java,src/test/java/org/apache/commons/math3/analysis/SincFunction.java,33,eturn (Math.abs(x) < EPS ?
False,src/test/java/org/apache/commons/math3/analysis/SincFunction.java,src/test/java/org/apache/commons/math3/analysis/SincFunction.java,34, :
False,src/test/java/org/apache/commons/math3/analysis/SincFunction.java,src/test/java/org/apache/commons/math3/analysis/SincFunction.java,35,ath.sin(x) / x);
False,src/test/java/org/apache/commons/math3/analysis/SincFunction.java,src/test/java/org/apache/commons/math3/analysis/SincFunction.java,39, {@inheritDoc}
False,src/test/java/org/apache/commons/math3/analysis/SincFunction.java,src/test/java/org/apache/commons/math3/analysis/SincFunction.java,41,ublic UnivariateFunction derivative() {
False,src/test/java/org/apache/commons/math3/analysis/SincFunction.java,src/test/java/org/apache/commons/math3/analysis/SincFunction.java,42,eturn new UnivariateFunction() {
False,src/test/java/org/apache/commons/math3/analysis/SincFunction.java,src/test/java/org/apache/commons/math3/analysis/SincFunction.java,43,ublic double value(double x) {
False,src/test/java/org/apache/commons/math3/analysis/SincFunction.java,src/test/java/org/apache/commons/math3/analysis/SincFunction.java,44,eturn (Math.abs(x) < EPS ?
False,src/test/java/org/apache/commons/math3/analysis/SincFunction.java,src/test/java/org/apache/commons/math3/analysis/SincFunction.java,45, :
False,src/test/java/org/apache/commons/math3/analysis/SincFunction.java,src/test/java/org/apache/commons/math3/analysis/SincFunction.java,46,x * Math.cos(x) - Math.sin(x)) / (x * x));
True,src/test/java/org/apache/commons/math3/analysis/SumSincFunction.java,src/test/java/org/apache/commons/math3/analysis/SumSincFunction.java,19,import org.apache.commons.math3.analysis.function.Sinc;
False,src/test/java/org/apache/commons/math3/analysis/SumSincFunction.java,src/test/java/org/apache/commons/math3/analysis/SumSincFunction.java,25,rivate static final DifferentiableUnivariateFunction sinc = new SincFunction();
True,src/test/java/org/apache/commons/math3/analysis/SumSincFunction.java,src/test/java/org/apache/commons/math3/analysis/SumSincFunction.java,27,private static final DifferentiableUnivariateFunction sinc = new Sinc();
True,src/test/java/org/apache/commons/math3/analysis/XMinus5Function.java,src/test/java/org/apache/commons/math3/analysis/XMinus5Function.java,19,import org.apache.commons.math3.analysis.differentiation.DerivativeStructure;
True,src/test/java/org/apache/commons/math3/analysis/XMinus5Function.java,src/test/java/org/apache/commons/math3/analysis/XMinus5Function.java,20,import org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable;
False,src/test/java/org/apache/commons/math3/analysis/XMinus5Function.java,src/test/java/org/apache/commons/math3/analysis/XMinus5Function.java,24,ublic class XMinus5Function implements DifferentiableUnivariateFunction {
True,src/test/java/org/apache/commons/math3/analysis/XMinus5Function.java,src/test/java/org/apache/commons/math3/analysis/XMinus5Function.java,27,public class XMinus5Function implements UnivariateDifferentiable {
False,src/test/java/org/apache/commons/math3/analysis/XMinus5Function.java,src/test/java/org/apache/commons/math3/analysis/XMinus5Function.java,33,* First derivative of x - 5 function
False,src/test/java/org/apache/commons/math3/analysis/XMinus5Function.java,src/test/java/org/apache/commons/math3/analysis/XMinus5Function.java,35,ublic UnivariateFunction derivative() {
False,src/test/java/org/apache/commons/math3/analysis/XMinus5Function.java,src/test/java/org/apache/commons/math3/analysis/XMinus5Function.java,36,eturn new UnivariateFunction() {
False,src/test/java/org/apache/commons/math3/analysis/XMinus5Function.java,src/test/java/org/apache/commons/math3/analysis/XMinus5Function.java,37,ublic double value(double x) {
False,src/test/java/org/apache/commons/math3/analysis/XMinus5Function.java,src/test/java/org/apache/commons/math3/analysis/XMinus5Function.java,38,eturn 1.0;
True,src/test/java/org/apache/commons/math3/analysis/XMinus5Function.java,src/test/java/org/apache/commons/math3/analysis/XMinus5Function.java,36,public DerivativeStructure value(DerivativeStructure t) {
True,src/test/java/org/apache/commons/math3/analysis/XMinus5Function.java,src/test/java/org/apache/commons/math3/analysis/XMinus5Function.java,37,return t.subtract(5);
False,src/test/java/org/apache/commons/math3/analysis/integration/IterativeLegendreGaussIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/IterativeLegendreGaussIntegratorTest.java,22,mport org.apache.commons.math3.analysis.SinFunction;
True,src/test/java/org/apache/commons/math3/analysis/integration/IterativeLegendreGaussIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/IterativeLegendreGaussIntegratorTest.java,23,import org.apache.commons.math3.analysis.function.Sin;
False,src/test/java/org/apache/commons/math3/analysis/integration/IterativeLegendreGaussIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/IterativeLegendreGaussIntegratorTest.java,35,nivariateFunction f = new SinFunction();
True,src/test/java/org/apache/commons/math3/analysis/integration/IterativeLegendreGaussIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/IterativeLegendreGaussIntegratorTest.java,35,UnivariateFunction f = new Sin();
False,src/test/java/org/apache/commons/math3/analysis/integration/LegendreGaussIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/LegendreGaussIntegratorTest.java,22,mport org.apache.commons.math3.analysis.SinFunction;
True,src/test/java/org/apache/commons/math3/analysis/integration/LegendreGaussIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/LegendreGaussIntegratorTest.java,23,import org.apache.commons.math3.analysis.function.Sin;
False,src/test/java/org/apache/commons/math3/analysis/integration/LegendreGaussIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/LegendreGaussIntegratorTest.java,35,nivariateFunction f = new SinFunction();
True,src/test/java/org/apache/commons/math3/analysis/integration/LegendreGaussIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/LegendreGaussIntegratorTest.java,35,UnivariateFunction f = new Sin();
False,src/test/java/org/apache/commons/math3/analysis/integration/RombergIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/RombergIntegratorTest.java,20,mport org.apache.commons.math3.analysis.SinFunction;
True,src/test/java/org/apache/commons/math3/analysis/integration/RombergIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/RombergIntegratorTest.java,21,import org.apache.commons.math3.analysis.function.Sin;
False,src/test/java/org/apache/commons/math3/analysis/integration/RombergIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/RombergIntegratorTest.java,45,nivariateFunction f = new SinFunction();
True,src/test/java/org/apache/commons/math3/analysis/integration/RombergIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/RombergIntegratorTest.java,45,UnivariateFunction f = new Sin();
False,src/test/java/org/apache/commons/math3/analysis/integration/RombergIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/RombergIntegratorTest.java,100,nivariateFunction f = new SinFunction();
True,src/test/java/org/apache/commons/math3/analysis/integration/RombergIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/RombergIntegratorTest.java,100,UnivariateFunction f = new Sin();
False,src/test/java/org/apache/commons/math3/analysis/integration/SimpsonIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/SimpsonIntegratorTest.java,20,mport org.apache.commons.math3.analysis.SinFunction;
True,src/test/java/org/apache/commons/math3/analysis/integration/SimpsonIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/SimpsonIntegratorTest.java,21,import org.apache.commons.math3.analysis.function.Sin;
False,src/test/java/org/apache/commons/math3/analysis/integration/SimpsonIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/SimpsonIntegratorTest.java,44,nivariateFunction f = new SinFunction();
True,src/test/java/org/apache/commons/math3/analysis/integration/SimpsonIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/SimpsonIntegratorTest.java,44,UnivariateFunction f = new Sin();
False,src/test/java/org/apache/commons/math3/analysis/integration/SimpsonIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/SimpsonIntegratorTest.java,99,nivariateFunction f = new SinFunction();
True,src/test/java/org/apache/commons/math3/analysis/integration/SimpsonIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/SimpsonIntegratorTest.java,99,UnivariateFunction f = new Sin();
False,src/test/java/org/apache/commons/math3/analysis/integration/TrapezoidIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/TrapezoidIntegratorTest.java,20,mport org.apache.commons.math3.analysis.SinFunction;
True,src/test/java/org/apache/commons/math3/analysis/integration/TrapezoidIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/TrapezoidIntegratorTest.java,21,import org.apache.commons.math3.analysis.function.Sin;
False,src/test/java/org/apache/commons/math3/analysis/integration/TrapezoidIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/TrapezoidIntegratorTest.java,44,nivariateFunction f = new SinFunction();
True,src/test/java/org/apache/commons/math3/analysis/integration/TrapezoidIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/TrapezoidIntegratorTest.java,44,UnivariateFunction f = new Sin();
False,src/test/java/org/apache/commons/math3/analysis/integration/TrapezoidIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/TrapezoidIntegratorTest.java,100,nivariateFunction f = new SinFunction();
True,src/test/java/org/apache/commons/math3/analysis/integration/TrapezoidIntegratorTest.java,src/test/java/org/apache/commons/math3/analysis/integration/TrapezoidIntegratorTest.java,100,UnivariateFunction f = new Sin();
False,src/test/java/org/apache/commons/math3/analysis/interpolation/DividedDifferenceInterpolatorTest.java,src/test/java/org/apache/commons/math3/analysis/interpolation/DividedDifferenceInterpolatorTest.java,19,mport org.apache.commons.math3.exception.NonMonotonicSequenceException;
False,src/test/java/org/apache/commons/math3/analysis/interpolation/DividedDifferenceInterpolatorTest.java,src/test/java/org/apache/commons/math3/analysis/interpolation/DividedDifferenceInterpolatorTest.java,20,mport org.apache.commons.math3.analysis.Expm1Function;
False,src/test/java/org/apache/commons/math3/analysis/interpolation/DividedDifferenceInterpolatorTest.java,src/test/java/org/apache/commons/math3/analysis/interpolation/DividedDifferenceInterpolatorTest.java,21,mport org.apache.commons.math3.analysis.SinFunction;
True,src/test/java/org/apache/commons/math3/analysis/interpolation/DividedDifferenceInterpolatorTest.java,src/test/java/org/apache/commons/math3/analysis/interpolation/DividedDifferenceInterpolatorTest.java,20,import org.apache.commons.math3.analysis.function.Expm1;
True,src/test/java/org/apache/commons/math3/analysis/interpolation/DividedDifferenceInterpolatorTest.java,src/test/java/org/apache/commons/math3/analysis/interpolation/DividedDifferenceInterpolatorTest.java,21,import org.apache.commons.math3.analysis.function.Sin;
True,src/test/java/org/apache/commons/math3/analysis/interpolation/DividedDifferenceInterpolatorTest.java,src/test/java/org/apache/commons/math3/analysis/interpolation/DividedDifferenceInterpolatorTest.java,22,import org.apache.commons.math3.exception.NonMonotonicSequenceException;
False,src/test/java/org/apache/commons/math3/analysis/interpolation/DividedDifferenceInterpolatorTest.java,src/test/java/org/apache/commons/math3/analysis/interpolation/DividedDifferenceInterpolatorTest.java,51,nivariateFunction f = new SinFunction();
True,src/test/java/org/apache/commons/math3/analysis/interpolation/DividedDifferenceInterpolatorTest.java,src/test/java/org/apache/commons/math3/analysis/interpolation/DividedDifferenceInterpolatorTest.java,51,UnivariateFunction f = new Sin();
False,src/test/java/org/apache/commons/math3/analysis/interpolation/DividedDifferenceInterpolatorTest.java,src/test/java/org/apache/commons/math3/analysis/interpolation/DividedDifferenceInterpolatorTest.java,83,nivariateFunction f = new Expm1Function();
True,src/test/java/org/apache/commons/math3/analysis/interpolation/DividedDifferenceInterpolatorTest.java,src/test/java/org/apache/commons/math3/analysis/interpolation/DividedDifferenceInterpolatorTest.java,83,UnivariateFunction f = new Expm1();
False,src/test/java/org/apache/commons/math3/analysis/interpolation/NevilleInterpolatorTest.java,src/test/java/org/apache/commons/math3/analysis/interpolation/NevilleInterpolatorTest.java,19,mport org.apache.commons.math3.exception.NonMonotonicSequenceException;
False,src/test/java/org/apache/commons/math3/analysis/interpolation/NevilleInterpolatorTest.java,src/test/java/org/apache/commons/math3/analysis/interpolation/NevilleInterpolatorTest.java,20,mport org.apache.commons.math3.analysis.Expm1Function;
False,src/test/java/org/apache/commons/math3/analysis/interpolation/NevilleInterpolatorTest.java,src/test/java/org/apache/commons/math3/analysis/interpolation/NevilleInterpolatorTest.java,21,mport org.apache.commons.math3.analysis.SinFunction;
True,src/test/java/org/apache/commons/math3/analysis/interpolation/NevilleInterpolatorTest.java,src/test/java/org/apache/commons/math3/analysis/interpolation/NevilleInterpolatorTest.java,20,import org.apache.commons.math3.analysis.function.Expm1;
True,src/test/java/org/apache/commons/math3/analysis/interpolation/NevilleInterpolatorTest.java,src/test/java/org/apache/commons/math3/analysis/interpolation/NevilleInterpolatorTest.java,21,import org.apache.commons.math3.analysis.function.Sin;
True,src/test/java/org/apache/commons/math3/analysis/interpolation/NevilleInterpolatorTest.java,src/test/java/org/apache/commons/math3/analysis/interpolation/NevilleInterpolatorTest.java,22,import org.apache.commons.math3.exception.NonMonotonicSequenceException;
False,src/test/java/org/apache/commons/math3/analysis/interpolation/NevilleInterpolatorTest.java,src/test/java/org/apache/commons/math3/analysis/interpolation/NevilleInterpolatorTest.java,51,nivariateFunction f = new SinFunction();
True,src/test/java/org/apache/commons/math3/analysis/interpolation/NevilleInterpolatorTest.java,src/test/java/org/apache/commons/math3/analysis/interpolation/NevilleInterpolatorTest.java,51,UnivariateFunction f = new Sin();
False,src/test/java/org/apache/commons/math3/analysis/interpolation/NevilleInterpolatorTest.java,src/test/java/org/apache/commons/math3/analysis/interpolation/NevilleInterpolatorTest.java,83,nivariateFunction f = new Expm1Function();
True,src/test/java/org/apache/commons/math3/analysis/interpolation/NevilleInterpolatorTest.java,src/test/java/org/apache/commons/math3/analysis/interpolation/NevilleInterpolatorTest.java,83,UnivariateFunction f = new Expm1();
False,src/test/java/org/apache/commons/math3/analysis/solvers/BaseSecantSolverAbstractTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BaseSecantSolverAbstractTest.java,20,mport org.apache.commons.math3.analysis.SinFunction;
False,src/test/java/org/apache/commons/math3/analysis/solvers/BaseSecantSolverAbstractTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BaseSecantSolverAbstractTest.java,23,mport org.apache.commons.math3.exception.NumberIsTooLargeException;
True,src/test/java/org/apache/commons/math3/analysis/solvers/BaseSecantSolverAbstractTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BaseSecantSolverAbstractTest.java,22,import org.apache.commons.math3.analysis.function.Sin;
True,src/test/java/org/apache/commons/math3/analysis/solvers/BaseSecantSolverAbstractTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BaseSecantSolverAbstractTest.java,24,import org.apache.commons.math3.exception.NumberIsTooLargeException;
False,src/test/java/org/apache/commons/math3/analysis/solvers/BaseSecantSolverAbstractTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BaseSecantSolverAbstractTest.java,54,nivariateFunction f = new SinFunction();
True,src/test/java/org/apache/commons/math3/analysis/solvers/BaseSecantSolverAbstractTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BaseSecantSolverAbstractTest.java,54,UnivariateFunction f = new Sin();
False,src/test/java/org/apache/commons/math3/analysis/solvers/BaseSecantSolverAbstractTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BaseSecantSolverAbstractTest.java,139,nivariateFunction f = new SinFunction();
True,src/test/java/org/apache/commons/math3/analysis/solvers/BaseSecantSolverAbstractTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BaseSecantSolverAbstractTest.java,139,UnivariateFunction f = new Sin();
False,src/test/java/org/apache/commons/math3/analysis/solvers/BaseSecantSolverAbstractTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BaseSecantSolverAbstractTest.java,163,nivariateFunction f = new SinFunction();
True,src/test/java/org/apache/commons/math3/analysis/solvers/BaseSecantSolverAbstractTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BaseSecantSolverAbstractTest.java,163,UnivariateFunction f = new Sin();
False,src/test/java/org/apache/commons/math3/analysis/solvers/BaseSecantSolverAbstractTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BaseSecantSolverAbstractTest.java,182,nivariateFunction f = new SinFunction();
True,src/test/java/org/apache/commons/math3/analysis/solvers/BaseSecantSolverAbstractTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BaseSecantSolverAbstractTest.java,182,UnivariateFunction f = new Sin();
False,src/test/java/org/apache/commons/math3/analysis/solvers/BaseSecantSolverAbstractTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BaseSecantSolverAbstractTest.java,200,nivariateFunction f = new SinFunction();
True,src/test/java/org/apache/commons/math3/analysis/solvers/BaseSecantSolverAbstractTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BaseSecantSolverAbstractTest.java,200,UnivariateFunction f = new Sin();
False,src/test/java/org/apache/commons/math3/analysis/solvers/BaseSecantSolverAbstractTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BaseSecantSolverAbstractTest.java,219,nivariateFunction f = new SinFunction();
True,src/test/java/org/apache/commons/math3/analysis/solvers/BaseSecantSolverAbstractTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BaseSecantSolverAbstractTest.java,219,UnivariateFunction f = new Sin();
False,src/test/java/org/apache/commons/math3/analysis/solvers/BisectionSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BisectionSolverTest.java,20,mport org.apache.commons.math3.analysis.SinFunction;
True,src/test/java/org/apache/commons/math3/analysis/solvers/BisectionSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BisectionSolverTest.java,21,import org.apache.commons.math3.analysis.function.Sin;
False,src/test/java/org/apache/commons/math3/analysis/solvers/BisectionSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BisectionSolverTest.java,32,nivariateFunction f = new SinFunction();
True,src/test/java/org/apache/commons/math3/analysis/solvers/BisectionSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BisectionSolverTest.java,32,UnivariateFunction f = new Sin();
False,src/test/java/org/apache/commons/math3/analysis/solvers/BisectionSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BisectionSolverTest.java,87,nivariateFunction f = new SinFunction();
True,src/test/java/org/apache/commons/math3/analysis/solvers/BisectionSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BisectionSolverTest.java,87,UnivariateFunction f = new Sin();
True,src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java,23,import org.apache.commons.math3.analysis.differentiation.DerivativeStructure;
True,src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java,24,import org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable;
False,src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java,25,mport org.apache.commons.math3.util.FastMath;
False,src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java,109,ublic double value(double x)      { return FastMath.sin(x) - 0.5 * x; }
False,src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java,110,Override
False,src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java,111,ublic double derivative(double x) { return FastMath.cos(x) - 0.5; }
True,src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java,110,public DerivativeStructure value(DerivativeStructure x) {
True,src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java,111,return x.sin().subtract(x.multiply(0.5));
False,src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java,115,"ublic double value(double x)      { return FastMath.pow(x, 5) + x - 10000; }"
False,src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java,116,Override
False,src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java,117,"ublic double derivative(double x) { return 5 * FastMath.pow(x, 4) + 1; }"
True,src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java,116,public DerivativeStructure value(DerivativeStructure x) {
True,src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java,117,return x.pow(5).add(x).subtract(10000);
False,src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java,121,ublic double value(double x)      { return FastMath.sqrt(x) - 1 / x - 3; }
False,src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java,122,Override
False,src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java,123,ublic double derivative(double x) { return 0.5 / FastMath.sqrt(x) + 1 / (x * x); }
True,src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java,122,public DerivativeStructure value(DerivativeStructure x) {
True,src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java,123,return x.sqrt().subtract(x.reciprocal()).subtract(3);
False,src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java,127,ublic double value(double x)      { return FastMath.exp(x) + x - 20; }
False,src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java,128,Override
False,src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java,129,ublic double derivative(double x) { return FastMath.exp(x) + 1; }
True,src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java,128,public DerivativeStructure value(DerivativeStructure x) {
True,src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java,129,return x.exp().add(x).subtract(20);
False,src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java,133,ublic double value(double x)      { return FastMath.log(x) + FastMath.sqrt(x) - 5; }
False,src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java,134,Override
False,src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java,135,ublic double derivative(double x) { return 1 / x + 0.5 / FastMath.sqrt(x); }
True,src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java,134,public DerivativeStructure value(DerivativeStructure x) {
True,src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java,135,return x.log().add(x.sqrt()).subtract(5);
False,src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java,139,ublic double value(double x)      { return (x - 1) * x * x - 1; }
False,src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java,140,Override
False,src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java,141,ublic double derivative(double x) { return (3 * x - 2) * x; }
True,src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java,140,public DerivativeStructure value(DerivativeStructure x) {
True,src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java,141,return x.subtract(1).multiply(x).multiply(x).subtract(1);
False,src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java,150,"rivate void compare(DifferentiableUnivariateFunction f,"
True,src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java,151,"private void compare(final UnivariateDifferentiable f,"
True,src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java,153,DifferentiableUnivariateFunction df = new DifferentiableUnivariateFunction() {
True,src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java,154,public double value(double x) {
True,src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java,155,return f.value(x);
True,src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java,158,public UnivariateFunction derivative() {
True,src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java,159,return new UnivariateFunction() {
True,src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java,160,public double value(double x) {
True,src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java,161,"return f.value(new DerivativeStructure(1, 1, 0, x)).getPartialDerivative(1);"
False,src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java,157,"esultN = newton.solve(100, f, min, max);"
True,src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java,171,"resultN = newton.solve(100, df, min, max);"
False,src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java,163,"esultB = bracketing.solve(100, f, min, max);"
True,src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java,177,"resultB = bracketing.solve(100, df, min, max);"
False,src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java,172,rivate static abstract class TestFunction implements DifferentiableUnivariateFunction {
True,src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java,186,private static abstract class TestFunction implements UnivariateDifferentiable {
False,src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java,196,ublic abstract double value(double x);
False,src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java,198,ublic abstract double derivative(double x);
False,src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java,200,ublic UnivariateFunction derivative() {
False,src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java,201,eturn new UnivariateFunction() {
False,src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java,202,ublic double value(double x) {
False,src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java,203,eturn derivative(x);
True,src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java,210,public double value(final double x) {
True,src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java,211,"return value(new DerivativeStructure(0, 0, x)).getValue();"
True,src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BracketingNthOrderBrentSolverTest.java,214,public abstract DerivativeStructure value(final DerivativeStructure t);
True,src/test/java/org/apache/commons/math3/analysis/solvers/BrentSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BrentSolverTest.java,19,import org.apache.commons.math3.analysis.DifferentiableUnivariateFunction;
True,src/test/java/org/apache/commons/math3/analysis/solvers/BrentSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BrentSolverTest.java,20,import org.apache.commons.math3.analysis.FunctionUtils;
False,src/test/java/org/apache/commons/math3/analysis/solvers/BrentSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BrentSolverTest.java,21,mport org.apache.commons.math3.analysis.SinFunction;
False,src/test/java/org/apache/commons/math3/analysis/solvers/BrentSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BrentSolverTest.java,23,mport org.apache.commons.math3.analysis.DifferentiableUnivariateFunction;
False,src/test/java/org/apache/commons/math3/analysis/solvers/BrentSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BrentSolverTest.java,24,mport org.apache.commons.math3.analysis.FunctionUtils;
False,src/test/java/org/apache/commons/math3/analysis/solvers/BrentSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BrentSolverTest.java,25,mport org.apache.commons.math3.analysis.function.Sqrt;
False,src/test/java/org/apache/commons/math3/analysis/solvers/BrentSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BrentSolverTest.java,26,mport org.apache.commons.math3.analysis.function.Inverse;
False,src/test/java/org/apache/commons/math3/analysis/solvers/BrentSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BrentSolverTest.java,28,mport org.apache.commons.math3.util.FastMath;
False,src/test/java/org/apache/commons/math3/analysis/solvers/BrentSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BrentSolverTest.java,29,mport org.apache.commons.math3.exception.NumberIsTooLargeException;
True,src/test/java/org/apache/commons/math3/analysis/solvers/BrentSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BrentSolverTest.java,25,import org.apache.commons.math3.analysis.function.Inverse;
True,src/test/java/org/apache/commons/math3/analysis/solvers/BrentSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BrentSolverTest.java,26,import org.apache.commons.math3.analysis.function.Sin;
True,src/test/java/org/apache/commons/math3/analysis/solvers/BrentSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BrentSolverTest.java,27,import org.apache.commons.math3.analysis.function.Sqrt;
True,src/test/java/org/apache/commons/math3/analysis/solvers/BrentSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BrentSolverTest.java,29,import org.apache.commons.math3.exception.NumberIsTooLargeException;
True,src/test/java/org/apache/commons/math3/analysis/solvers/BrentSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BrentSolverTest.java,31,import org.apache.commons.math3.util.FastMath;
False,src/test/java/org/apache/commons/math3/analysis/solvers/BrentSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BrentSolverTest.java,52,nivariateFunction f = new SinFunction();
True,src/test/java/org/apache/commons/math3/analysis/solvers/BrentSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BrentSolverTest.java,52,UnivariateFunction f = new Sin();
False,src/test/java/org/apache/commons/math3/analysis/solvers/BrentSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BrentSolverTest.java,165,nivariateFunction f = new SinFunction();
True,src/test/java/org/apache/commons/math3/analysis/solvers/BrentSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BrentSolverTest.java,165,UnivariateFunction f = new Sin();
False,src/test/java/org/apache/commons/math3/analysis/solvers/BrentSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BrentSolverTest.java,184,nivariateFunction f = new SinFunction();
True,src/test/java/org/apache/commons/math3/analysis/solvers/BrentSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/BrentSolverTest.java,184,UnivariateFunction f = new Sin();
False,src/test/java/org/apache/commons/math3/analysis/solvers/MullerSolver2Test.java,src/test/java/org/apache/commons/math3/analysis/solvers/MullerSolver2Test.java,19,mport org.apache.commons.math3.analysis.Expm1Function;
False,src/test/java/org/apache/commons/math3/analysis/solvers/MullerSolver2Test.java,src/test/java/org/apache/commons/math3/analysis/solvers/MullerSolver2Test.java,21,mport org.apache.commons.math3.analysis.SinFunction;
False,src/test/java/org/apache/commons/math3/analysis/solvers/MullerSolver2Test.java,src/test/java/org/apache/commons/math3/analysis/solvers/MullerSolver2Test.java,23,mport org.apache.commons.math3.exception.NumberIsTooLargeException;
True,src/test/java/org/apache/commons/math3/analysis/solvers/MullerSolver2Test.java,src/test/java/org/apache/commons/math3/analysis/solvers/MullerSolver2Test.java,21,import org.apache.commons.math3.analysis.function.Expm1;
True,src/test/java/org/apache/commons/math3/analysis/solvers/MullerSolver2Test.java,src/test/java/org/apache/commons/math3/analysis/solvers/MullerSolver2Test.java,22,import org.apache.commons.math3.analysis.function.Sin;
True,src/test/java/org/apache/commons/math3/analysis/solvers/MullerSolver2Test.java,src/test/java/org/apache/commons/math3/analysis/solvers/MullerSolver2Test.java,24,import org.apache.commons.math3.exception.NumberIsTooLargeException;
False,src/test/java/org/apache/commons/math3/analysis/solvers/MullerSolver2Test.java,src/test/java/org/apache/commons/math3/analysis/solvers/MullerSolver2Test.java,48,nivariateFunction f = new SinFunction();
True,src/test/java/org/apache/commons/math3/analysis/solvers/MullerSolver2Test.java,src/test/java/org/apache/commons/math3/analysis/solvers/MullerSolver2Test.java,48,UnivariateFunction f = new Sin();
False,src/test/java/org/apache/commons/math3/analysis/solvers/MullerSolver2Test.java,src/test/java/org/apache/commons/math3/analysis/solvers/MullerSolver2Test.java,100,nivariateFunction f = new Expm1Function();
True,src/test/java/org/apache/commons/math3/analysis/solvers/MullerSolver2Test.java,src/test/java/org/apache/commons/math3/analysis/solvers/MullerSolver2Test.java,100,UnivariateFunction f = new Expm1();
False,src/test/java/org/apache/commons/math3/analysis/solvers/MullerSolver2Test.java,src/test/java/org/apache/commons/math3/analysis/solvers/MullerSolver2Test.java,128,nivariateFunction f = new SinFunction();
True,src/test/java/org/apache/commons/math3/analysis/solvers/MullerSolver2Test.java,src/test/java/org/apache/commons/math3/analysis/solvers/MullerSolver2Test.java,128,UnivariateFunction f = new Sin();
False,src/test/java/org/apache/commons/math3/analysis/solvers/MullerSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/MullerSolverTest.java,19,mport org.apache.commons.math3.analysis.Expm1Function;
False,src/test/java/org/apache/commons/math3/analysis/solvers/MullerSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/MullerSolverTest.java,21,mport org.apache.commons.math3.analysis.SinFunction;
False,src/test/java/org/apache/commons/math3/analysis/solvers/MullerSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/MullerSolverTest.java,23,mport org.apache.commons.math3.exception.NumberIsTooLargeException;
True,src/test/java/org/apache/commons/math3/analysis/solvers/MullerSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/MullerSolverTest.java,21,import org.apache.commons.math3.analysis.function.Expm1;
True,src/test/java/org/apache/commons/math3/analysis/solvers/MullerSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/MullerSolverTest.java,22,import org.apache.commons.math3.analysis.function.Sin;
True,src/test/java/org/apache/commons/math3/analysis/solvers/MullerSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/MullerSolverTest.java,24,import org.apache.commons.math3.exception.NumberIsTooLargeException;
False,src/test/java/org/apache/commons/math3/analysis/solvers/MullerSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/MullerSolverTest.java,48,nivariateFunction f = new SinFunction();
True,src/test/java/org/apache/commons/math3/analysis/solvers/MullerSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/MullerSolverTest.java,48,UnivariateFunction f = new Sin();
False,src/test/java/org/apache/commons/math3/analysis/solvers/MullerSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/MullerSolverTest.java,102,nivariateFunction f = new Expm1Function();
True,src/test/java/org/apache/commons/math3/analysis/solvers/MullerSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/MullerSolverTest.java,102,UnivariateFunction f = new Expm1();
False,src/test/java/org/apache/commons/math3/analysis/solvers/MullerSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/MullerSolverTest.java,130,nivariateFunction f = new SinFunction();
True,src/test/java/org/apache/commons/math3/analysis/solvers/MullerSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/MullerSolverTest.java,130,UnivariateFunction f = new Sin();
False,src/test/java/org/apache/commons/math3/analysis/solvers/NewtonSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/NewtonSolverTest.java,21,mport org.apache.commons.math3.analysis.SinFunction;
True,src/test/java/org/apache/commons/math3/analysis/solvers/NewtonSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/NewtonSolverTest.java,21,import org.apache.commons.math3.analysis.UnivariateFunction;
True,src/test/java/org/apache/commons/math3/analysis/solvers/NewtonSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/NewtonSolverTest.java,22,import org.apache.commons.math3.analysis.differentiation.DerivativeStructure;
True,src/test/java/org/apache/commons/math3/analysis/solvers/NewtonSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/NewtonSolverTest.java,23,import org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiable;
True,src/test/java/org/apache/commons/math3/analysis/solvers/NewtonSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/NewtonSolverTest.java,24,import org.apache.commons.math3.analysis.function.Sin;
False,src/test/java/org/apache/commons/math3/analysis/solvers/NewtonSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/NewtonSolverTest.java,36,ifferentiableUnivariateFunction f = new SinFunction();
True,src/test/java/org/apache/commons/math3/analysis/solvers/NewtonSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/NewtonSolverTest.java,39,DifferentiableUnivariateFunction f = new Sin();
False,src/test/java/org/apache/commons/math3/analysis/solvers/NewtonSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/NewtonSolverTest.java,54,ifferentiableUnivariateFunction f = new QuinticFunction();
True,src/test/java/org/apache/commons/math3/analysis/solvers/NewtonSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/NewtonSolverTest.java,57,final UnivariateDifferentiable q = new QuinticFunction();
True,src/test/java/org/apache/commons/math3/analysis/solvers/NewtonSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/NewtonSolverTest.java,58,DifferentiableUnivariateFunction f = new DifferentiableUnivariateFunction() {
True,src/test/java/org/apache/commons/math3/analysis/solvers/NewtonSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/NewtonSolverTest.java,60,public double value(double x) {
True,src/test/java/org/apache/commons/math3/analysis/solvers/NewtonSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/NewtonSolverTest.java,61,return q.value(x);
True,src/test/java/org/apache/commons/math3/analysis/solvers/NewtonSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/NewtonSolverTest.java,64,public UnivariateFunction derivative() {
True,src/test/java/org/apache/commons/math3/analysis/solvers/NewtonSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/NewtonSolverTest.java,65,return new UnivariateFunction() {
True,src/test/java/org/apache/commons/math3/analysis/solvers/NewtonSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/NewtonSolverTest.java,66,public double value(double x) {
True,src/test/java/org/apache/commons/math3/analysis/solvers/NewtonSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/NewtonSolverTest.java,67,"return q.value(new DerivativeStructure(1, 1, 0, x)).getPartialDerivative(1);"
False,src/test/java/org/apache/commons/math3/analysis/solvers/RiddersSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/RiddersSolverTest.java,19,mport org.apache.commons.math3.analysis.Expm1Function;
False,src/test/java/org/apache/commons/math3/analysis/solvers/RiddersSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/RiddersSolverTest.java,21,mport org.apache.commons.math3.analysis.SinFunction;
False,src/test/java/org/apache/commons/math3/analysis/solvers/RiddersSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/RiddersSolverTest.java,23,mport org.apache.commons.math3.util.FastMath;
True,src/test/java/org/apache/commons/math3/analysis/solvers/RiddersSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/RiddersSolverTest.java,21,import org.apache.commons.math3.analysis.function.Expm1;
True,src/test/java/org/apache/commons/math3/analysis/solvers/RiddersSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/RiddersSolverTest.java,22,import org.apache.commons.math3.analysis.function.Sin;
True,src/test/java/org/apache/commons/math3/analysis/solvers/RiddersSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/RiddersSolverTest.java,25,import org.apache.commons.math3.util.FastMath;
False,src/test/java/org/apache/commons/math3/analysis/solvers/RiddersSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/RiddersSolverTest.java,46,nivariateFunction f = new SinFunction();
True,src/test/java/org/apache/commons/math3/analysis/solvers/RiddersSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/RiddersSolverTest.java,46,UnivariateFunction f = new Sin();
False,src/test/java/org/apache/commons/math3/analysis/solvers/RiddersSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/RiddersSolverTest.java,96,nivariateFunction f = new Expm1Function();
True,src/test/java/org/apache/commons/math3/analysis/solvers/RiddersSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/RiddersSolverTest.java,96,UnivariateFunction f = new Expm1();
False,src/test/java/org/apache/commons/math3/analysis/solvers/RiddersSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/RiddersSolverTest.java,124,nivariateFunction f = new SinFunction();
True,src/test/java/org/apache/commons/math3/analysis/solvers/RiddersSolverTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/RiddersSolverTest.java,124,UnivariateFunction f = new Sin();
False,src/test/java/org/apache/commons/math3/analysis/solvers/UnivariateSolverUtilsTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/UnivariateSolverUtilsTest.java,20,mport org.apache.commons.math3.exception.MathIllegalArgumentException;
False,src/test/java/org/apache/commons/math3/analysis/solvers/UnivariateSolverUtilsTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/UnivariateSolverUtilsTest.java,21,mport org.apache.commons.math3.analysis.SinFunction;
True,src/test/java/org/apache/commons/math3/analysis/solvers/UnivariateSolverUtilsTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/UnivariateSolverUtilsTest.java,22,import org.apache.commons.math3.analysis.function.Sin;
True,src/test/java/org/apache/commons/math3/analysis/solvers/UnivariateSolverUtilsTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/UnivariateSolverUtilsTest.java,23,import org.apache.commons.math3.exception.MathIllegalArgumentException;
False,src/test/java/org/apache/commons/math3/analysis/solvers/UnivariateSolverUtilsTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/UnivariateSolverUtilsTest.java,33,rotected UnivariateFunction sin = new SinFunction();
True,src/test/java/org/apache/commons/math3/analysis/solvers/UnivariateSolverUtilsTest.java,src/test/java/org/apache/commons/math3/analysis/solvers/UnivariateSolverUtilsTest.java,33,protected UnivariateFunction sin = new Sin();
True,src/test/java/org/apache/commons/math3/optimization/univariate/BrentOptimizerTest.java,src/test/java/org/apache/commons/math3/optimization/univariate/BrentOptimizerTest.java,20,import org.apache.commons.math3.analysis.QuinticFunction;
True,src/test/java/org/apache/commons/math3/optimization/univariate/BrentOptimizerTest.java,src/test/java/org/apache/commons/math3/optimization/univariate/BrentOptimizerTest.java,21,import org.apache.commons.math3.analysis.UnivariateFunction;
True,src/test/java/org/apache/commons/math3/optimization/univariate/BrentOptimizerTest.java,src/test/java/org/apache/commons/math3/optimization/univariate/BrentOptimizerTest.java,22,import org.apache.commons.math3.analysis.function.Sin;
False,src/test/java/org/apache/commons/math3/optimization/univariate/BrentOptimizerTest.java,src/test/java/org/apache/commons/math3/optimization/univariate/BrentOptimizerTest.java,23,mport org.apache.commons.math3.analysis.QuinticFunction;
False,src/test/java/org/apache/commons/math3/optimization/univariate/BrentOptimizerTest.java,src/test/java/org/apache/commons/math3/optimization/univariate/BrentOptimizerTest.java,24,mport org.apache.commons.math3.analysis.SinFunction;
False,src/test/java/org/apache/commons/math3/optimization/univariate/BrentOptimizerTest.java,src/test/java/org/apache/commons/math3/optimization/univariate/BrentOptimizerTest.java,25,mport org.apache.commons.math3.analysis.UnivariateFunction;
False,src/test/java/org/apache/commons/math3/optimization/univariate/BrentOptimizerTest.java,src/test/java/org/apache/commons/math3/optimization/univariate/BrentOptimizerTest.java,26,mport org.apache.commons.math3.optimization.GoalType;
True,src/test/java/org/apache/commons/math3/optimization/univariate/BrentOptimizerTest.java,src/test/java/org/apache/commons/math3/optimization/univariate/BrentOptimizerTest.java,27,import org.apache.commons.math3.optimization.GoalType;
False,src/test/java/org/apache/commons/math3/optimization/univariate/BrentOptimizerTest.java,src/test/java/org/apache/commons/math3/optimization/univariate/BrentOptimizerTest.java,40,nivariateFunction f = new SinFunction();
True,src/test/java/org/apache/commons/math3/optimization/univariate/BrentOptimizerTest.java,src/test/java/org/apache/commons/math3/optimization/univariate/BrentOptimizerTest.java,40,UnivariateFunction f = new Sin();
False,src/test/java/org/apache/commons/math3/optimization/univariate/BrentOptimizerTest.java,src/test/java/org/apache/commons/math3/optimization/univariate/BrentOptimizerTest.java,58,inal UnivariateFunction f = new SinFunction();
True,src/test/java/org/apache/commons/math3/optimization/univariate/BrentOptimizerTest.java,src/test/java/org/apache/commons/math3/optimization/univariate/BrentOptimizerTest.java,58,final UnivariateFunction f = new Sin();
False,src/test/java/org/apache/commons/math3/optimization/univariate/BrentOptimizerTest.java,src/test/java/org/apache/commons/math3/optimization/univariate/BrentOptimizerTest.java,151,nivariateFunction f = new SinFunction();
True,src/test/java/org/apache/commons/math3/optimization/univariate/BrentOptimizerTest.java,src/test/java/org/apache/commons/math3/optimization/univariate/BrentOptimizerTest.java,151,UnivariateFunction f = new Sin();
False,src/test/java/org/apache/commons/math3/optimization/univariate/UnivariateMultiStartOptimizerTest.java,src/test/java/org/apache/commons/math3/optimization/univariate/UnivariateMultiStartOptimizerTest.java,21,mport org.apache.commons.math3.analysis.SinFunction;
False,src/test/java/org/apache/commons/math3/optimization/univariate/UnivariateMultiStartOptimizerTest.java,src/test/java/org/apache/commons/math3/optimization/univariate/UnivariateMultiStartOptimizerTest.java,23,mport org.apache.commons.math3.optimization.univariate.BrentOptimizer;
True,src/test/java/org/apache/commons/math3/optimization/univariate/UnivariateMultiStartOptimizerTest.java,src/test/java/org/apache/commons/math3/optimization/univariate/UnivariateMultiStartOptimizerTest.java,22,import org.apache.commons.math3.analysis.function.Sin;
False,src/test/java/org/apache/commons/math3/optimization/univariate/UnivariateMultiStartOptimizerTest.java,src/test/java/org/apache/commons/math3/optimization/univariate/UnivariateMultiStartOptimizerTest.java,27,mport org.junit.Test;
True,src/test/java/org/apache/commons/math3/optimization/univariate/UnivariateMultiStartOptimizerTest.java,src/test/java/org/apache/commons/math3/optimization/univariate/UnivariateMultiStartOptimizerTest.java,27,import org.junit.Test;
False,src/test/java/org/apache/commons/math3/optimization/univariate/UnivariateMultiStartOptimizerTest.java,src/test/java/org/apache/commons/math3/optimization/univariate/UnivariateMultiStartOptimizerTest.java,34,nivariateFunction f = new SinFunction();
True,src/test/java/org/apache/commons/math3/optimization/univariate/UnivariateMultiStartOptimizerTest.java,src/test/java/org/apache/commons/math3/optimization/univariate/UnivariateMultiStartOptimizerTest.java,33,UnivariateFunction f = new Sin();
False,src/test/java/org/apache/commons/math3/transform/FastCosineTransformerTest.java,src/test/java/org/apache/commons/math3/transform/FastCosineTransformerTest.java,22,mport org.apache.commons.math3.analysis.SinFunction;
True,src/test/java/org/apache/commons/math3/transform/FastCosineTransformerTest.java,src/test/java/org/apache/commons/math3/transform/FastCosineTransformerTest.java,23,import org.apache.commons.math3.analysis.function.Sin;
False,src/test/java/org/apache/commons/math3/transform/FastCosineTransformerTest.java,src/test/java/org/apache/commons/math3/transform/FastCosineTransformerTest.java,221,nivariateFunction f = new SinFunction();
True,src/test/java/org/apache/commons/math3/transform/FastCosineTransformerTest.java,src/test/java/org/apache/commons/math3/transform/FastCosineTransformerTest.java,221,UnivariateFunction f = new Sin();
False,src/test/java/org/apache/commons/math3/transform/FastCosineTransformerTest.java,src/test/java/org/apache/commons/math3/transform/FastCosineTransformerTest.java,253,nivariateFunction f = new SinFunction();
True,src/test/java/org/apache/commons/math3/transform/FastCosineTransformerTest.java,src/test/java/org/apache/commons/math3/transform/FastCosineTransformerTest.java,253,UnivariateFunction f = new Sin();
False,src/test/java/org/apache/commons/math3/transform/FastFourierTransformerTest.java,src/test/java/org/apache/commons/math3/transform/FastFourierTransformerTest.java,21,mport org.apache.commons.math3.analysis.SinFunction;
False,src/test/java/org/apache/commons/math3/transform/FastFourierTransformerTest.java,src/test/java/org/apache/commons/math3/transform/FastFourierTransformerTest.java,456,nivariateFunction f = new SinFunction();
True,src/test/java/org/apache/commons/math3/transform/FastFourierTransformerTest.java,src/test/java/org/apache/commons/math3/transform/FastFourierTransformerTest.java,455,UnivariateFunction f = new Sin();
False,src/test/java/org/apache/commons/math3/transform/FastSineTransformerTest.java,src/test/java/org/apache/commons/math3/transform/FastSineTransformerTest.java,22,mport org.apache.commons.math3.analysis.SinFunction;
True,src/test/java/org/apache/commons/math3/transform/FastSineTransformerTest.java,src/test/java/org/apache/commons/math3/transform/FastSineTransformerTest.java,23,import org.apache.commons.math3.analysis.function.Sin;
False,src/test/java/org/apache/commons/math3/transform/FastSineTransformerTest.java,src/test/java/org/apache/commons/math3/transform/FastSineTransformerTest.java,250,nivariateFunction f = new SinFunction();
True,src/test/java/org/apache/commons/math3/transform/FastSineTransformerTest.java,src/test/java/org/apache/commons/math3/transform/FastSineTransformerTest.java,250,UnivariateFunction f = new Sin();
False,src/test/java/org/apache/commons/math3/transform/FastSineTransformerTest.java,src/test/java/org/apache/commons/math3/transform/FastSineTransformerTest.java,275,nivariateFunction f = new SinFunction();
True,src/test/java/org/apache/commons/math3/transform/FastSineTransformerTest.java,src/test/java/org/apache/commons/math3/transform/FastSineTransformerTest.java,275,UnivariateFunction f = new Sin();
