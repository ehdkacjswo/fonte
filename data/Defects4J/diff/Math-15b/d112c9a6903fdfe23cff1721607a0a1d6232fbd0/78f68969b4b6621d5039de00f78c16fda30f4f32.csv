is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/math3/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math3/stat/regression/AbstractMultipleLinearRegression.java,42,rotected RealMatrix X;
True,src/main/java/org/apache/commons/math3/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math3/stat/regression/AbstractMultipleLinearRegression.java,42,private RealMatrix xMatrix;
False,src/main/java/org/apache/commons/math3/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math3/stat/regression/AbstractMultipleLinearRegression.java,45,rotected RealVector Y;
True,src/main/java/org/apache/commons/math3/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math3/stat/regression/AbstractMultipleLinearRegression.java,45,private RealVector yVector;
True,src/main/java/org/apache/commons/math3/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math3/stat/regression/AbstractMultipleLinearRegression.java,51,* @return the X sample data.
True,src/main/java/org/apache/commons/math3/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math3/stat/regression/AbstractMultipleLinearRegression.java,53,protected RealMatrix getX() {
True,src/main/java/org/apache/commons/math3/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math3/stat/regression/AbstractMultipleLinearRegression.java,54,return xMatrix;
True,src/main/java/org/apache/commons/math3/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math3/stat/regression/AbstractMultipleLinearRegression.java,58,* @return the Y sample data.
True,src/main/java/org/apache/commons/math3/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math3/stat/regression/AbstractMultipleLinearRegression.java,60,protected RealVector getY() {
True,src/main/java/org/apache/commons/math3/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math3/stat/regression/AbstractMultipleLinearRegression.java,61,return yVector;
False,src/main/java/org/apache/commons/math3/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math3/stat/regression/AbstractMultipleLinearRegression.java,124,his.X = new Array2DRowRealMatrix(x);
False,src/main/java/org/apache/commons/math3/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math3/stat/regression/AbstractMultipleLinearRegression.java,125,his.Y = new ArrayRealVector(y);
True,src/main/java/org/apache/commons/math3/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math3/stat/regression/AbstractMultipleLinearRegression.java,138,this.xMatrix = new Array2DRowRealMatrix(x);
True,src/main/java/org/apache/commons/math3/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math3/stat/regression/AbstractMultipleLinearRegression.java,139,this.yVector = new ArrayRealVector(y);
False,src/main/java/org/apache/commons/math3/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math3/stat/regression/AbstractMultipleLinearRegression.java,142,his.Y = new ArrayRealVector(y);
True,src/main/java/org/apache/commons/math3/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math3/stat/regression/AbstractMultipleLinearRegression.java,156,this.yVector = new ArrayRealVector(y);
False,src/main/java/org/apache/commons/math3/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math3/stat/regression/AbstractMultipleLinearRegression.java,178,"his.X = new Array2DRowRealMatrix(x, true);"
True,src/main/java/org/apache/commons/math3/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math3/stat/regression/AbstractMultipleLinearRegression.java,192,"this.xMatrix = new Array2DRowRealMatrix(x, true);"
False,src/main/java/org/apache/commons/math3/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math3/stat/regression/AbstractMultipleLinearRegression.java,189,"his.X = new Array2DRowRealMatrix(xAug, false);"
True,src/main/java/org/apache/commons/math3/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math3/stat/regression/AbstractMultipleLinearRegression.java,203,"this.xMatrix = new Array2DRowRealMatrix(xAug, false);"
False,src/main/java/org/apache/commons/math3/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math3/stat/regression/AbstractMultipleLinearRegression.java,260,ealVector e = Y.subtract(X.operate(b));
True,src/main/java/org/apache/commons/math3/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math3/stat/regression/AbstractMultipleLinearRegression.java,274,RealVector e = yVector.subtract(xMatrix.operate(b));
False,src/main/java/org/apache/commons/math3/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math3/stat/regression/AbstractMultipleLinearRegression.java,335,eturn new Variance().evaluate(Y.toArray());
True,src/main/java/org/apache/commons/math3/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math3/stat/regression/AbstractMultipleLinearRegression.java,349,return new Variance().evaluate(yVector.toArray());
False,src/main/java/org/apache/commons/math3/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math3/stat/regression/AbstractMultipleLinearRegression.java,352,X.getRowDimension() - X.getColumnDimension());
True,src/main/java/org/apache/commons/math3/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math3/stat/regression/AbstractMultipleLinearRegression.java,366,(xMatrix.getRowDimension() - xMatrix.getColumnDimension());
False,src/main/java/org/apache/commons/math3/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math3/stat/regression/AbstractMultipleLinearRegression.java,367,eturn Y.subtract(X.operate(b));
True,src/main/java/org/apache/commons/math3/stat/regression/AbstractMultipleLinearRegression.java,src/main/java/org/apache/commons/math3/stat/regression/AbstractMultipleLinearRegression.java,381,return yVector.subtract(xMatrix.operate(b));
False,src/main/java/org/apache/commons/math3/stat/regression/GLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math3/stat/regression/GLSMultipleLinearRegression.java,96,ealMatrix XT = X.transpose();
False,src/main/java/org/apache/commons/math3/stat/regression/GLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math3/stat/regression/GLSMultipleLinearRegression.java,97,ealMatrix XTOIX = XT.multiply(OI).multiply(X);
True,src/main/java/org/apache/commons/math3/stat/regression/GLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math3/stat/regression/GLSMultipleLinearRegression.java,96,RealMatrix XT = getX().transpose();
True,src/main/java/org/apache/commons/math3/stat/regression/GLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math3/stat/regression/GLSMultipleLinearRegression.java,97,RealMatrix XTOIX = XT.multiply(OI).multiply(getX());
False,src/main/java/org/apache/commons/math3/stat/regression/GLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math3/stat/regression/GLSMultipleLinearRegression.java,99,eturn inverse.multiply(XT).multiply(OI).operate(Y);
True,src/main/java/org/apache/commons/math3/stat/regression/GLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math3/stat/regression/GLSMultipleLinearRegression.java,99,return inverse.multiply(XT).multiply(OI).operate(getY());
False,src/main/java/org/apache/commons/math3/stat/regression/GLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math3/stat/regression/GLSMultipleLinearRegression.java,112,ealMatrix XTOIX = X.transpose().multiply(OI).multiply(X);
True,src/main/java/org/apache/commons/math3/stat/regression/GLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math3/stat/regression/GLSMultipleLinearRegression.java,112,RealMatrix XTOIX = getX().transpose().multiply(OI).multiply(getX());
False,src/main/java/org/apache/commons/math3/stat/regression/GLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math3/stat/regression/GLSMultipleLinearRegression.java,132,eturn t / (X.getRowDimension() - X.getColumnDimension());
True,src/main/java/org/apache/commons/math3/stat/regression/GLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math3/stat/regression/GLSMultipleLinearRegression.java,132,return t / (getX().getRowDimension() - getX().getColumnDimension());
False,src/main/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegression.java,81,r = new QRDecomposition(X);
True,src/main/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegression.java,81,qr = new QRDecomposition(getX());
False,src/main/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegression.java,135,eturn StatUtils.sumSq(Y.toArray());
True,src/main/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegression.java,135,return StatUtils.sumSq(getY().toArray());
False,src/main/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegression.java,137,eturn new SecondMoment().evaluate(Y.toArray());
True,src/main/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegression.java,137,return new SecondMoment().evaluate(getY().toArray());
False,src/main/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegression.java,183,inal double n = X.getRowDimension();
True,src/main/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegression.java,183,final double n = getX().getRowDimension();
False,src/main/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegression.java,185,eturn 1 - (1 - calculateRSquared()) * (n / (n - X.getColumnDimension()));
True,src/main/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegression.java,185,return 1 - (1 - calculateRSquared()) * (n / (n - getX().getColumnDimension()));
False,src/main/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegression.java,188,calculateTotalSumOfSquares() * (n - X.getColumnDimension()));
True,src/main/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegression.java,188,(calculateTotalSumOfSquares() * (n - getX().getColumnDimension()));
False,src/main/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegression.java,200,r = new QRDecomposition(X);
True,src/main/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegression.java,200,qr = new QRDecomposition(getX());
False,src/main/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegression.java,210,eturn qr.getSolver().solve(Y);
True,src/main/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegression.java,210,return qr.getSolver().solve(getY());
False,src/main/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegression.java,226,nt p = X.getColumnDimension();
True,src/main/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegression.java,src/main/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegression.java,226,int p = getX().getColumnDimension();
False,src/test/java/org/apache/commons/math3/stat/regression/GLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math3/stat/regression/GLSMultipleLinearRegressionTest.java,181,ealMatrix combinedX = regression.X.copy();
False,src/test/java/org/apache/commons/math3/stat/regression/GLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math3/stat/regression/GLSMultipleLinearRegressionTest.java,182,ealVector combinedY = regression.Y.copy();
True,src/test/java/org/apache/commons/math3/stat/regression/GLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math3/stat/regression/GLSMultipleLinearRegressionTest.java,181,RealMatrix combinedX = regression.getX().copy();
True,src/test/java/org/apache/commons/math3/stat/regression/GLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math3/stat/regression/GLSMultipleLinearRegressionTest.java,182,RealVector combinedY = regression.getY().copy();
False,src/test/java/org/apache/commons/math3/stat/regression/GLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math3/stat/regression/GLSMultipleLinearRegressionTest.java,186,"ssert.assertEquals(combinedX, regression.X);"
False,src/test/java/org/apache/commons/math3/stat/regression/GLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math3/stat/regression/GLSMultipleLinearRegressionTest.java,187,"ssert.assertEquals(combinedY, regression.Y);"
True,src/test/java/org/apache/commons/math3/stat/regression/GLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math3/stat/regression/GLSMultipleLinearRegressionTest.java,186,"Assert.assertEquals(combinedX, regression.getX());"
True,src/test/java/org/apache/commons/math3/stat/regression/GLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math3/stat/regression/GLSMultipleLinearRegressionTest.java,187,"Assert.assertEquals(combinedY, regression.getY());"
False,src/test/java/org/apache/commons/math3/stat/regression/GLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math3/stat/regression/GLSMultipleLinearRegressionTest.java,256,inal RealMatrix x = ols.X.copy();
True,src/test/java/org/apache/commons/math3/stat/regression/GLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math3/stat/regression/GLSMultipleLinearRegressionTest.java,256,final RealMatrix x = ols.getX().copy();
False,src/test/java/org/apache/commons/math3/stat/regression/MultipleLinearRegressionAbstractTest.java,src/test/java/org/apache/commons/math3/stat/regression/MultipleLinearRegressionAbstractTest.java,89,ealMatrix flatX = regression.X.copy();
False,src/test/java/org/apache/commons/math3/stat/regression/MultipleLinearRegressionAbstractTest.java,src/test/java/org/apache/commons/math3/stat/regression/MultipleLinearRegressionAbstractTest.java,90,ealVector flatY = regression.Y.copy();
True,src/test/java/org/apache/commons/math3/stat/regression/MultipleLinearRegressionAbstractTest.java,src/test/java/org/apache/commons/math3/stat/regression/MultipleLinearRegressionAbstractTest.java,89,RealMatrix flatX = regression.getX().copy();
True,src/test/java/org/apache/commons/math3/stat/regression/MultipleLinearRegressionAbstractTest.java,src/test/java/org/apache/commons/math3/stat/regression/MultipleLinearRegressionAbstractTest.java,90,RealVector flatY = regression.getY().copy();
False,src/test/java/org/apache/commons/math3/stat/regression/MultipleLinearRegressionAbstractTest.java,src/test/java/org/apache/commons/math3/stat/regression/MultipleLinearRegressionAbstractTest.java,93,"ssert.assertEquals(flatX, regression.X);"
False,src/test/java/org/apache/commons/math3/stat/regression/MultipleLinearRegressionAbstractTest.java,src/test/java/org/apache/commons/math3/stat/regression/MultipleLinearRegressionAbstractTest.java,94,"ssert.assertEquals(flatY, regression.Y);"
True,src/test/java/org/apache/commons/math3/stat/regression/MultipleLinearRegressionAbstractTest.java,src/test/java/org/apache/commons/math3/stat/regression/MultipleLinearRegressionAbstractTest.java,93,"Assert.assertEquals(flatX, regression.getX());"
True,src/test/java/org/apache/commons/math3/stat/regression/MultipleLinearRegressionAbstractTest.java,src/test/java/org/apache/commons/math3/stat/regression/MultipleLinearRegressionAbstractTest.java,94,"Assert.assertEquals(flatY, regression.getY());"
False,src/test/java/org/apache/commons/math3/stat/regression/MultipleLinearRegressionAbstractTest.java,src/test/java/org/apache/commons/math3/stat/regression/MultipleLinearRegressionAbstractTest.java,99,latX = regression.X.copy();
False,src/test/java/org/apache/commons/math3/stat/regression/MultipleLinearRegressionAbstractTest.java,src/test/java/org/apache/commons/math3/stat/regression/MultipleLinearRegressionAbstractTest.java,100,latY = regression.Y.copy();
True,src/test/java/org/apache/commons/math3/stat/regression/MultipleLinearRegressionAbstractTest.java,src/test/java/org/apache/commons/math3/stat/regression/MultipleLinearRegressionAbstractTest.java,99,flatX = regression.getX().copy();
True,src/test/java/org/apache/commons/math3/stat/regression/MultipleLinearRegressionAbstractTest.java,src/test/java/org/apache/commons/math3/stat/regression/MultipleLinearRegressionAbstractTest.java,100,flatY = regression.getY().copy();
False,src/test/java/org/apache/commons/math3/stat/regression/MultipleLinearRegressionAbstractTest.java,src/test/java/org/apache/commons/math3/stat/regression/MultipleLinearRegressionAbstractTest.java,103,"ssert.assertEquals(flatX, regression.X);"
False,src/test/java/org/apache/commons/math3/stat/regression/MultipleLinearRegressionAbstractTest.java,src/test/java/org/apache/commons/math3/stat/regression/MultipleLinearRegressionAbstractTest.java,104,"ssert.assertEquals(flatY, regression.Y);"
True,src/test/java/org/apache/commons/math3/stat/regression/MultipleLinearRegressionAbstractTest.java,src/test/java/org/apache/commons/math3/stat/regression/MultipleLinearRegressionAbstractTest.java,103,"Assert.assertEquals(flatX, regression.getX());"
True,src/test/java/org/apache/commons/math3/stat/regression/MultipleLinearRegressionAbstractTest.java,src/test/java/org/apache/commons/math3/stat/regression/MultipleLinearRegressionAbstractTest.java,104,"Assert.assertEquals(flatY, regression.getY());"
False,src/test/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegressionTest.java,437,ouble[] hatResiduals = I.subtract(hat).operate(model.Y).toArray();
True,src/test/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegressionTest.java,437,double[] hatResiduals = I.subtract(hat).operate(model.getY()).toArray();
False,src/test/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegressionTest.java,460,"estUtils.assertEquals(StatUtils.variance(model.Y.toArray()), model.calculateYVariance(), 0);"
True,src/test/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegressionTest.java,460,"TestUtils.assertEquals(StatUtils.variance(model.getY().toArray()), model.calculateYVariance(), 0);"
False,src/test/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegressionTest.java,464,ealMatrix X = model.X;
True,src/test/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegressionTest.java,464,RealMatrix X = model.getX();
False,src/test/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegressionTest.java,485,ealMatrix combinedX = regression.X.copy();
False,src/test/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegressionTest.java,486,ealVector combinedY = regression.Y.copy();
True,src/test/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegressionTest.java,485,RealMatrix combinedX = regression.getX().copy();
True,src/test/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegressionTest.java,486,RealVector combinedY = regression.getY().copy();
False,src/test/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegressionTest.java,489,"ssert.assertEquals(combinedX, regression.X);"
False,src/test/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegressionTest.java,490,"ssert.assertEquals(combinedY, regression.Y);"
True,src/test/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegressionTest.java,489,"Assert.assertEquals(combinedX, regression.getX());"
True,src/test/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegressionTest.java,490,"Assert.assertEquals(combinedY, regression.getY());"
False,src/test/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegressionTest.java,495,ombinedX = regression.X.copy();
False,src/test/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegressionTest.java,496,ombinedY = regression.Y.copy();
True,src/test/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegressionTest.java,495,combinedX = regression.getX().copy();
True,src/test/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegressionTest.java,496,combinedY = regression.getY().copy();
False,src/test/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegressionTest.java,499,"ssert.assertEquals(combinedX, regression.X);"
False,src/test/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegressionTest.java,500,"ssert.assertEquals(combinedY, regression.Y);"
True,src/test/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegressionTest.java,499,"Assert.assertEquals(combinedX, regression.getX());"
True,src/test/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegressionTest.java,src/test/java/org/apache/commons/math3/stat/regression/OLSMultipleLinearRegressionTest.java,500,"Assert.assertEquals(combinedY, regression.getY());"
