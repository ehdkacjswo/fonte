is_addition,old_file_path,new_file_path,line_num,content
False,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,35, Compose functions.
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,35,* Compose functions.  The functions in the argument list are composed
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,36,"* sequentially, in the order given.  For example, compose(f1,f2,f3)"
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,37,* acts like f1(f2(f3(x))).
False,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,38, @return the composed function.
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,40,* @return the composite function.
False,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,57, @return a function that computes the addition of the functions.
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,59,* @return a function that computes the sum of the functions.
False,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,76, @return a function that computes the multiplication of the functions.
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,78,* @return a function that computes the product of the functions.
False,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,92, Combine functions.
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,94,* Returns the univariate function <br/>
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,95,"* {@code h(x) = combiner(f(x), g(x))}."
False,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,97, @return the composed function.
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,100,* @return the composite function.
False,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,111, Generate a collector function.
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,114,* Returns a MultivariateRealFunction h(x[]) defined by <pre> <code>
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,115,"* h(x[]) = combiner(...combiner(combiner(initialValue,f(x[0])),f(x[1]))...),f(x[x.length-1]))"
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,116,* </code></pre>
False,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,134, Generate a collector function.
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,139,* Returns a MultivariateRealFunction h(x[]) defined by <pre> <code>
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,140,"* h(x[]) = combiner(...combiner(combiner(initialValue,x[0]),x[1])...),x[x.length-1])"
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,141,* </code></pre>
False,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,150, @return a unary function.
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,157,"* @return the unary function h(x) = f(fixed, x)"
False,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,166, @return a unary function.
True,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,src/main/java/org/apache/commons/math/analysis/FunctionUtils.java,173,"* @return the unary function h(x) = f(x, fixed)"
True,src/main/java/org/apache/commons/math/analysis/ParametricUnivariateRealFunction.java,src/main/java/org/apache/commons/math/analysis/ParametricUnivariateRealFunction.java,24,* @since 3.0
False,src/main/java/org/apache/commons/math/analysis/function/Cbrt.java,src/main/java/org/apache/commons/math/analysis/function/Cbrt.java,24, Cubic-root function.
True,src/main/java/org/apache/commons/math/analysis/function/Cbrt.java,src/main/java/org/apache/commons/math/analysis/function/Cbrt.java,24,* Cube root function.
False,src/main/java/org/apache/commons/math/analysis/function/HarmonicOscillator.java,src/main/java/org/apache/commons/math/analysis/function/HarmonicOscillator.java,37,** Angular requency. */
True,src/main/java/org/apache/commons/math/analysis/function/HarmonicOscillator.java,src/main/java/org/apache/commons/math/analysis/function/HarmonicOscillator.java,37,/** Angular frequency. */
False,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,24, Sinc function.
True,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,24,"* Sinc function, defined by <pre><code>"
True,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,26,* sinc(x) = 1 if abs(x) < 1e-9;
True,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,27,*           sin(x) / x; otherwise
True,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,src/main/java/org/apache/commons/math/analysis/function/Sinc.java,28,* </code></pre>
False,src/main/java/org/apache/commons/math/analysis/interpolation/DividedDifferenceInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/DividedDifferenceInterpolator.java,25," ""http://mathworld.wolfram.com/NewtonsDividedDifferenceInterpolationFormula.html"">"
True,src/main/java/org/apache/commons/math/analysis/interpolation/DividedDifferenceInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/DividedDifferenceInterpolator.java,25,"* http://mathworld.wolfram.com/NewtonsDividedDifferenceInterpolationFormula.html"">"
False,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,43," adapter to it, allowing to build a spline on the obtained loess fit."
True,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java,43,"* adapter to it, allowing one to build a spline on the obtained loess fit."
False,src/main/java/org/apache/commons/math/analysis/interpolation/NevilleInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/NevilleInterpolator.java,29," The actual code of Neville's evalution is in PolynomialFunctionLagrangeForm,"
True,src/main/java/org/apache/commons/math/analysis/interpolation/NevilleInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/NevilleInterpolator.java,29,"* The actual code of Neville's algorithm is in PolynomialFunctionLagrangeForm,"
False,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,24, Adapter for class implementing the {@link UnivariateRealInterpolator}
True,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealPeriodicInterpolator.java,24,* Adapter for classes implementing the {@link UnivariateRealInterpolator}
True,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java,src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java,370,* @since 3.0
False,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,355,"rrayRealVector xbase,"
True,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,355,"ArrayRealVector xbase,"
False,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,1904,nt iact = -1;
True,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java,1904,int iact = -1;
True,src/main/java/org/apache/commons/math/optimization/fitting/CurveFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/CurveFitter.java,142,* @since 3.0
True,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java,82,* @since 3.0
