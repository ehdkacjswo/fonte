is_addition,old_file_path,new_file_path,line_num,content
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,276,* The path members. It corresponds directly to stack: At indices where the
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,277,"* stack contains an object (EMPTY_OBJECT, DANGLING_NAME or NONEMPTY_OBJECT),"
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,278,* pathNames contains the name at this scope. Where it contains an array
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,279,"* (EMPTY_ARRAY, NONEMPTY_ARRAY) pathIndices contains the current index in"
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,280,"* that array. Otherwise the value is undefined, and we take advantage of that"
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,281,* by incrementing pathIndices when doing so isn't useful.
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,283,private String[] pathNames = new String[32];
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,284,private int[] pathIndices = new int[32];
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,347,pathIndices[stackSize - 1] = 0;
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,339," "" at line "" + getLineNumber() + "" column "" + getColumnNumber());"
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,351,"+ "" at line "" + getLineNumber() + "" column "" + getColumnNumber() + "" path "" + getPath());"
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,357," "" at line "" + getLineNumber() + "" column "" + getColumnNumber());"
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,369,"+ "" at line "" + getLineNumber() + "" column "" + getColumnNumber() + "" path "" + getPath());"
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,375," "" at line "" + getLineNumber() + "" column "" + getColumnNumber());"
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,387,"+ "" at line "" + getLineNumber() + "" column "" + getColumnNumber() + "" path "" + getPath());"
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,402,pathNames[stackSize] = null; // Free the last path name so that it can be garbage collected!
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,393," "" at line "" + getLineNumber() + "" column "" + getColumnNumber());"
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,406,"+ "" at line "" + getLineNumber() + "" column "" + getColumnNumber() + "" path "" + getPath());"
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,786," "" at line "" + getLineNumber() + "" column "" + getColumnNumber());"
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,799,"+ "" at line "" + getLineNumber() + "" column "" + getColumnNumber() + "" path "" + getPath());"
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,802,pathNames[stackSize - 1] = result;
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,822," "" at line "" + getLineNumber() + "" column "" + getColumnNumber());"
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,836,"+ "" at line "" + getLineNumber() + "" column "" + getColumnNumber() + "" path "" + getPath());"
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,839,pathIndices[stackSize - 1]++;
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,857,pathIndices[stackSize - 1]++;
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,861,pathIndices[stackSize - 1]++;
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,848," "" at line "" + getLineNumber() + "" column "" + getColumnNumber());"
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,865,"+ "" at line "" + getLineNumber() + "" column "" + getColumnNumber() + "" path "" + getPath());"
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,882,pathIndices[stackSize - 1]++;
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,867," "" at line "" + getLineNumber() + "" column "" + getColumnNumber());"
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,885,"+ "" at line "" + getLineNumber() + "" column "" + getColumnNumber() + "" path "" + getPath());"
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,906,pathIndices[stackSize - 1]++;
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,900," "" at line "" + getLineNumber() + "" column "" + getColumnNumber());"
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,919,"+ "" at line "" + getLineNumber() + "" column "" + getColumnNumber() + "" path "" + getPath());"
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,907," "" at line "" + getLineNumber() + "" column "" + getColumnNumber());"
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,926,"+ "" at line "" + getLineNumber() + "" column "" + getColumnNumber() + "" path "" + getPath());"
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,930,pathIndices[stackSize - 1]++;
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,952,pathIndices[stackSize - 1]++;
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,964,pathIndices[stackSize - 1]++;
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,949," "" at line "" + getLineNumber() + "" column "" + getColumnNumber());"
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,971,"+ "" at line "" + getLineNumber() + "" column "" + getColumnNumber() + "" path "" + getPath());"
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,957," "" at line "" + getLineNumber() + "" column "" + getColumnNumber());"
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,979,"+ "" at line "" + getLineNumber() + "" column "" + getColumnNumber() + "" path "" + getPath());"
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,983,pathIndices[stackSize - 1]++;
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1154," "" at line "" + getLineNumber() + "" column "" + getColumnNumber());"
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1177,"+ "" at line "" + getLineNumber() + "" column "" + getColumnNumber() + "" path "" + getPath());"
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1180,pathIndices[stackSize - 1]++;
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1192,pathIndices[stackSize - 1]++;
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1174," "" at line "" + getLineNumber() + "" column "" + getColumnNumber());"
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1199,"+ "" at line "" + getLineNumber() + "" column "" + getColumnNumber() + "" path "" + getPath());"
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1182," "" at line "" + getLineNumber() + "" column "" + getColumnNumber());"
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1207,"+ "" at line "" + getLineNumber() + "" column "" + getColumnNumber() + "" path "" + getPath());"
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1211,pathIndices[stackSize - 1]++;
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1262,pathIndices[stackSize - 1]++;
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1263,"pathNames[stackSize - 1] = ""null"";"
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1269,int[] newPathIndices = new int[stackSize * 2];
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1270,String[] newPathNames = new String[stackSize * 2];
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1272,"System.arraycopy(pathIndices, 0, newPathIndices, 0, stackSize);"
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1273,"System.arraycopy(pathNames, 0, newPathNames, 0, stackSize);"
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1275,pathIndices = newPathIndices;
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1276,pathNames = newPathNames;
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1470,"* Returns a <a href=""http://goessner.net/articles/JsonPath/"">JsonPath</a> to"
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1471,* the current location in the JSON value.
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1473,public String getPath() {
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1474,StringBuilder result = new StringBuilder().append('$');
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1475,"for (int i = 0, size = stackSize; i < size; i++) {"
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1476,switch (stack[i]) {
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1477,case JsonScope.EMPTY_ARRAY:
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1478,case JsonScope.NONEMPTY_ARRAY:
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1479,result.append('[').append(pathIndices[i]).append(']');
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1480,break;
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1482,case JsonScope.EMPTY_OBJECT:
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1483,case JsonScope.DANGLING_NAME:
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1484,case JsonScope.NONEMPTY_OBJECT:
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1485,result.append('.');
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1486,if (pathNames[i] != null) {
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1487,result.append(pathNames[i]);
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1489,break;
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1491,case JsonScope.NONEMPTY_DOCUMENT:
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1492,case JsonScope.EMPTY_DOCUMENT:
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1493,case JsonScope.CLOSED:
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1494,break;
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1497,return result.toString();
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1506," "" at line "" + getLineNumber() + "" column "" + getColumnNumber());"
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1572,"+ "" at line "" + getLineNumber() + "" column "" + getColumnNumber() + "" path "" + getPath());"
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1550," "" at line "" + reader.getLineNumber() + "" column "" + reader.getColumnNumber());"
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1616,"+ "" at line "" + reader.getLineNumber() + "" column "" + reader.getColumnNumber()"
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1617,"+ "" path "" + reader.getPath());"
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,2,* Copyright (C) 2014 Google Inc.
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,5,* you may not use this file except in compliance with the License.
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,6,* You may obtain a copy of the License at
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,8,*      http://www.apache.org/licenses/LICENSE-2.0
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,13,* See the License for the specific language governing permissions and
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,14,* limitations under the License.
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,17,package com.google.gson.stream;
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,19,import java.io.IOException;
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,20,import java.io.StringReader;
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,21,import junit.framework.TestCase;
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,23,public class JsonReaderPathTest extends TestCase {
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,24,public void testPath() throws IOException {
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,25,JsonReader reader = new JsonReader(
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,26,"new StringReader(""{\""a\"":[2,true,false,null,\""b\"",{\""c\"":\""d\""},[3]]}""));"
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,27,"assertEquals(""$"", reader.getPath());"
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,28,reader.beginObject();
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,29,"assertEquals(""$."", reader.getPath());"
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,30,reader.nextName();
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,31,"assertEquals(""$.a"", reader.getPath());"
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,32,reader.beginArray();
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,33,"assertEquals(""$.a[0]"", reader.getPath());"
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,34,reader.nextInt();
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,35,"assertEquals(""$.a[1]"", reader.getPath());"
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,36,reader.nextBoolean();
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,37,"assertEquals(""$.a[2]"", reader.getPath());"
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,38,reader.nextBoolean();
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,39,"assertEquals(""$.a[3]"", reader.getPath());"
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,40,reader.nextNull();
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,41,"assertEquals(""$.a[4]"", reader.getPath());"
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,42,reader.nextString();
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,43,"assertEquals(""$.a[5]"", reader.getPath());"
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,44,reader.beginObject();
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,45,"assertEquals(""$.a[5]."", reader.getPath());"
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,46,reader.nextName();
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,47,"assertEquals(""$.a[5].c"", reader.getPath());"
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,48,reader.nextString();
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,49,"assertEquals(""$.a[5].c"", reader.getPath());"
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,50,reader.endObject();
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,51,"assertEquals(""$.a[5]"", reader.getPath());"
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,52,reader.beginArray();
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,53,"assertEquals(""$.a[5][0]"", reader.getPath());"
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,54,reader.nextInt();
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,55,"assertEquals(""$.a[5][1]"", reader.getPath());"
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,56,reader.endArray();
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,57,"assertEquals(""$.a[5]"", reader.getPath());"
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,58,reader.endArray();
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,59,"assertEquals(""$.a"", reader.getPath());"
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,60,reader.endObject();
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,61,"assertEquals(""$"", reader.getPath());"
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,64,public void testObjectPath() throws IOException {
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,65,"JsonReader reader = new JsonReader(new StringReader(""{\""a\"":1,\""b\"":2}""));"
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,66,"assertEquals(""$"", reader.getPath());"
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,68,reader.peek();
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,69,"assertEquals(""$"", reader.getPath());"
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,70,reader.beginObject();
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,71,"assertEquals(""$."", reader.getPath());"
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,73,reader.peek();
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,74,"assertEquals(""$."", reader.getPath());"
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,75,reader.nextName();
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,76,"assertEquals(""$.a"", reader.getPath());"
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,78,reader.peek();
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,79,"assertEquals(""$.a"", reader.getPath());"
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,80,reader.nextInt();
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,81,"assertEquals(""$.a"", reader.getPath());"
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,83,reader.peek();
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,84,"assertEquals(""$.a"", reader.getPath());"
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,85,reader.nextName();
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,86,"assertEquals(""$.b"", reader.getPath());"
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,88,reader.peek();
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,89,"assertEquals(""$.b"", reader.getPath());"
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,90,reader.nextInt();
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,91,"assertEquals(""$.b"", reader.getPath());"
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,93,reader.peek();
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,94,"assertEquals(""$.b"", reader.getPath());"
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,95,reader.endObject();
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,96,"assertEquals(""$"", reader.getPath());"
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,98,reader.peek();
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,99,"assertEquals(""$"", reader.getPath());"
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,100,reader.close();
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,101,"assertEquals(""$"", reader.getPath());"
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,104,public void testArrayPath() throws IOException {
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,105,"JsonReader reader = new JsonReader(new StringReader(""[1,2]""));"
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,106,"assertEquals(""$"", reader.getPath());"
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,108,reader.peek();
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,109,"assertEquals(""$"", reader.getPath());"
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,110,reader.beginArray();
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,111,"assertEquals(""$[0]"", reader.getPath());"
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,113,reader.peek();
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,114,"assertEquals(""$[0]"", reader.getPath());"
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,115,reader.nextInt();
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,116,"assertEquals(""$[1]"", reader.getPath());"
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,118,reader.peek();
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,119,"assertEquals(""$[1]"", reader.getPath());"
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,120,reader.nextInt();
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,121,"assertEquals(""$[2]"", reader.getPath());"
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,123,reader.peek();
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,124,"assertEquals(""$[2]"", reader.getPath());"
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,125,reader.endArray();
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,126,"assertEquals(""$"", reader.getPath());"
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,128,reader.peek();
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,129,"assertEquals(""$"", reader.getPath());"
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,130,reader.close();
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,131,"assertEquals(""$"", reader.getPath());"
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,134,public void testMultipleTopLevelValuesInOneDocument() throws IOException {
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,135,"JsonReader reader = new JsonReader(new StringReader(""[][]""));"
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,136,reader.setLenient(true);
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,137,reader.beginArray();
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,138,reader.endArray();
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,139,"assertEquals(""$"", reader.getPath());"
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,140,reader.beginArray();
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,141,reader.endArray();
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,142,"assertEquals(""$"", reader.getPath());"
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,145,public void testSkipArrayElements() throws IOException {
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,146,"JsonReader reader = new JsonReader(new StringReader(""[1,2,3]""));"
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,147,reader.beginArray();
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,148,reader.skipValue();
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,149,reader.skipValue();
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,150,"assertEquals(""$[2]"", reader.getPath());"
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,153,public void testSkipObjectNames() throws IOException {
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,154,"JsonReader reader = new JsonReader(new StringReader(""{\""a\"":1}""));"
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,155,reader.beginObject();
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,156,reader.skipValue();
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,157,"assertEquals(""$.null"", reader.getPath());"
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,160,public void testSkipObjectValues() throws IOException {
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,161,"JsonReader reader = new JsonReader(new StringReader(""{\""a\"":1,\""b\"":2}""));"
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,162,reader.beginObject();
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,163,reader.nextName();
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,164,reader.skipValue();
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,165,"assertEquals(""$.null"", reader.getPath());"
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,166,reader.nextName();
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,167,"assertEquals(""$.b"", reader.getPath());"
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,170,public void testSkipNestedStructures() throws IOException {
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,171,"JsonReader reader = new JsonReader(new StringReader(""[[1,2,3],4]""));"
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,172,reader.beginArray();
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,173,reader.skipValue();
True,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderPathTest.java,174,"assertEquals(""$[1]"", reader.getPath());"
False,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1329,"estFailWithPosition(""Expected value at line 6 column 5"","
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1329,"testFailWithPosition(""Expected value at line 6 column 5 path $[1]"","
False,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1335,"estFailWithPosition(""Expected value at line 6 column 5"","
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1335,"testFailWithPosition(""Expected value at line 6 column 5 path $[1]"","
False,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1340,"estFailWithPosition(""Expected value at line 5 column 6"","
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1340,"testFailWithPosition(""Expected value at line 5 column 6 path $[1]"","
False,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1345,"estFailWithPosition(""Expected value at line 5 column 6"","
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1345,"testFailWithPosition(""Expected value at line 5 column 6 path $[1]"","
False,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1350,"estFailWithPosition(""Expected value at line 6 column 12"","
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1350,"testFailWithPosition(""Expected value at line 6 column 12 path $[1]"","
False,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1355,"estFailWithPosition(""Expected value at line 5 column 3"", ""[\""foo\nbar\r\nbaz\n\"",\n  }"");"
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1355,"testFailWithPosition(""Expected value at line 5 column 3 path $[1]"","
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1356,"""[\""foo\nbar\r\nbaz\n\"",\n  }"");"
False,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1359,"estFailWithPosition(""Expected value at line 5 column 2"", ""[\n\nabcd\n\n,}"");"
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1360,"testFailWithPosition(""Expected value at line 5 column 2 path $[1]"", ""[\n\nabcd\n\n,}"");"
False,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1363,"estFailWithPosition(""Expected value at line 5 column 3"", ""[\n\n\""\\\n\n\"",}"");"
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1364,"testFailWithPosition(""Expected value at line 5 column 3 path $[1]"", ""[\n\n\""\\\n\n\"",}"");"
False,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1367,"estFailWithPosition(""Expected value at line 1 column 6"","
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1368,"testFailWithPosition(""Expected value at line 1 column 6 path $[1]"","
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1398,public void testFailWithPositionDeepPath() throws IOException {
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1399,"JsonReader reader = new JsonReader(reader(""[1,{\""a\"":[2,3,}""));"
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1400,reader.beginArray();
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1401,reader.nextInt();
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1402,reader.beginObject();
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1403,reader.nextName();
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1404,reader.beginArray();
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1405,reader.nextInt();
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1406,reader.nextInt();
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1407,try {
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1408,reader.peek();
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1409,fail();
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1410,} catch (IOException expected) {
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1411,"assertEquals(""Expected value at line 1 column 14 path $[1].a[2]"", expected.getMessage());"
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1451,"assertEquals(""$[0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0]"""
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1452,"+ ""[0][0][0][0][0][0][0][0][0][0][0][0][0][0]"", reader.getPath());"
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1472,"assertEquals(""$.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a"""
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,1473,"+ "".a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a"", reader.getPath());"
