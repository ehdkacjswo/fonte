is_addition,old_file_path,new_file_path,line_num,content
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,211,"** When this is returned, the integer value is stored in peekedInteger. */"
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,212,rivate static final int PEEKED_INTEGER = 15;
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,211,"/** When this is returned, the integer value is stored in peekedLong. */"
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,212,private static final int PEEKED_LONG = 15;
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,241,rivate long peekedInteger;
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,241,private long peekedLong;
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,430,ase PEEKED_INTEGER:
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,430,case PEEKED_LONG:
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,628,ong integer = 0; // Negative to accommodate Long.MIN_VALUE more easily.
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,628,long value = 0; // Negative to accommodate Long.MIN_VALUE more easily.
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,644,nteger -= (c - '0');
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,644,value -= (c - '0');
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,647,ong newInteger = integer * 10 - (c - '0');
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,648,itsInLong &= integer > MIN_INCOMPLETE_INTEGER
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,649,| (integer == MIN_INCOMPLETE_INTEGER && newInteger < integer);
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,650,nteger = newInteger;
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,647,long newValue = value * 10 - (c - '0');
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,648,fitsInLong &= value > MIN_INCOMPLETE_INTEGER
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,649,|| (value == MIN_INCOMPLETE_INTEGER && newValue < value);
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,650,value = newValue;
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,658,f (fitsInLong && (integer != Long.MIN_VALUE || negative)) {
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,659,eekedInteger = negative ? integer : -integer;
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,658,if (fitsInLong && (value != Long.MIN_VALUE || negative)) {
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,659,peekedLong = negative ? value : -value;
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,661,eturn peeked = PEEKED_INTEGER;
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,661,return peeked = PEEKED_LONG;
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,781, else if (p == PEEKED_INTEGER) {
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,782,esult = Long.toString(peekedInteger);
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,781,} else if (p == PEEKED_LONG) {
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,782,result = Long.toString(peekedLong);
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,852,f (p == PEEKED_INTEGER) {
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,852,if (p == PEEKED_LONG) {
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,854,eturn (double) peekedInteger;
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,854,return (double) peekedLong;
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,896,f (p == PEEKED_INTEGER) {
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,896,if (p == PEEKED_LONG) {
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,898,eturn peekedInteger;
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,898,return peekedLong;
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1128,f (p == PEEKED_INTEGER) {
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1129,esult = (int) peekedInteger;
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1130,f (peekedInteger != result) { // Make sure no precision was lost casting to 'int'.
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1131,"hrow new NumberFormatException(""Expected an int but was "" + peekedInteger"
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1128,if (p == PEEKED_LONG) {
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1129,result = (int) peekedLong;
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1130,if (peekedLong != result) { // Make sure no precision was lost casting to 'int'.
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1131,"throw new NumberFormatException(""Expected an int but was "" + peekedLong"
