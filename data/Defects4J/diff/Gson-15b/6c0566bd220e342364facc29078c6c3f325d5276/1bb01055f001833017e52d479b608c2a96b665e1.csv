is_addition,old_file_path,new_file_path,line_num,content
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,173,if (!isLenient() && (Double.isNaN(result) || Double.isInfinite(result))) {
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementReader.java,174,"throw new NumberFormatException(""JSON forbids NaN and infinities: "" + result);"
False,gson/src/main/java/com/google/gson/internal/bind/TypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapter.java,73,sonReader jsonReader = new JsonReader(new StringReader(json.toString()));
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapter.java,73,JsonReader jsonReader = new JsonElementReader(json);
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,37,public void testLenientNansAndInfinities() throws IOException {
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,38,"JsonElement element = new JsonParser().parse(""[NaN, -Infinity, Infinity]"");"
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,39,JsonElementReader reader = new JsonElementReader(element);
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,40,reader.setLenient(true);
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,41,reader.beginArray();
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,42,assertTrue(Double.isNaN(reader.nextDouble()));
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,43,"assertEquals(Double.NEGATIVE_INFINITY, reader.nextDouble());"
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,44,"assertEquals(Double.POSITIVE_INFINITY, reader.nextDouble());"
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,45,reader.endArray();
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,48,public void testStrictNansAndInfinities() throws IOException {
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,49,"JsonElement element = new JsonParser().parse(""[NaN, -Infinity, Infinity]"");"
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,50,JsonElementReader reader = new JsonElementReader(element);
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,51,reader.setLenient(false);
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,52,reader.beginArray();
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,53,try {
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,54,reader.nextDouble();
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,55,fail();
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,56,} catch (NumberFormatException e) {
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,58,"assertEquals(""NaN"", reader.nextString());"
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,59,try {
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,60,reader.nextDouble();
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,61,fail();
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,62,} catch (NumberFormatException e) {
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,64,"assertEquals(""-Infinity"", reader.nextString());"
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,65,try {
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,66,reader.nextDouble();
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,67,fail();
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,68,} catch (NumberFormatException e) {
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,70,"assertEquals(""Infinity"", reader.nextString());"
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java,71,reader.endArray();
