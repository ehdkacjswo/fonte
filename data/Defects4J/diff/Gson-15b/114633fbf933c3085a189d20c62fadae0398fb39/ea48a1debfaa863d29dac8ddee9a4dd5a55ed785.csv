is_addition,old_file_path,new_file_path,line_num,content
False,gson/src/main/java/com/google/gson/AnonymousAndLocalClassExclusionStrategy.java,gson/src/main/java/com/google/gson/AnonymousAndLocalClassExclusionStrategy.java,24,inal class AnonymousAndLocalClassExclusionStrategy implements ExclusionStrategy2 {
True,gson/src/main/java/com/google/gson/AnonymousAndLocalClassExclusionStrategy.java,gson/src/main/java/com/google/gson/AnonymousAndLocalClassExclusionStrategy.java,24,final class AnonymousAndLocalClassExclusionStrategy implements ExclusionStrategy {
False,gson/src/main/java/com/google/gson/AnonymousAndLocalClassExclusionStrategy.java,gson/src/main/java/com/google/gson/AnonymousAndLocalClassExclusionStrategy.java,26,"ublic boolean shouldSkipField(FieldAttributes f, Mode mode) {"
True,gson/src/main/java/com/google/gson/AnonymousAndLocalClassExclusionStrategy.java,gson/src/main/java/com/google/gson/AnonymousAndLocalClassExclusionStrategy.java,26,public boolean shouldSkipField(FieldAttributes f) {
False,gson/src/main/java/com/google/gson/AnonymousAndLocalClassExclusionStrategy.java,gson/src/main/java/com/google/gson/AnonymousAndLocalClassExclusionStrategy.java,30,"ublic boolean shouldSkipClass(Class<?> clazz, Mode mode) {"
True,gson/src/main/java/com/google/gson/AnonymousAndLocalClassExclusionStrategy.java,gson/src/main/java/com/google/gson/AnonymousAndLocalClassExclusionStrategy.java,30,public boolean shouldSkipClass(Class<?> clazz) {
False,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,22, A wrapper class used to collect numerous {@link ExclusionStrategy2} objects
True,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,22,* A wrapper class used to collect numerous {@link ExclusionStrategy} objects
False,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,27,inal class DisjunctionExclusionStrategy implements ExclusionStrategy2 {
False,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,28,rivate final Collection<ExclusionStrategy2> strategies;
True,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,27,final class DisjunctionExclusionStrategy implements ExclusionStrategy {
True,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,28,private final Collection<ExclusionStrategy> strategies;
False,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,30,ublic DisjunctionExclusionStrategy(Collection<ExclusionStrategy2> strategies) {
True,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,30,public DisjunctionExclusionStrategy(Collection<ExclusionStrategy> strategies) {
False,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,35,"ublic boolean shouldSkipField(FieldAttributes f, Mode mode) {"
False,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,36,or (ExclusionStrategy2 strategy : strategies) {
False,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,37,"f (strategy.shouldSkipField(f, mode)) {"
True,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,35,public boolean shouldSkipField(FieldAttributes f) {
True,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,36,for (ExclusionStrategy strategy : strategies) {
True,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,37,if (strategy.shouldSkipField(f)) {
False,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,44,"ublic boolean shouldSkipClass(Class<?> clazz, Mode mode) {"
False,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,45,or (ExclusionStrategy2 strategy : strategies) {
False,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,46,"f (strategy.shouldSkipClass(clazz, mode)) {"
True,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,44,public boolean shouldSkipClass(Class<?> clazz) {
True,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,45,for (ExclusionStrategy strategy : strategies) {
True,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,46,if (strategy.shouldSkipClass(clazz)) {
True,gson/src/main/java/com/google/gson/ExclusionStrategy.java,gson/src/main/java/com/google/gson/ExclusionStrategy.java,75,"* <p>For certain model classes, you may only want to serialize a field, but exclude it for"
True,gson/src/main/java/com/google/gson/ExclusionStrategy.java,gson/src/main/java/com/google/gson/ExclusionStrategy.java,76,"* deserialization. To do that, you can write an {@code ExclusionStrategy} as per normal;"
True,gson/src/main/java/com/google/gson/ExclusionStrategy.java,gson/src/main/java/com/google/gson/ExclusionStrategy.java,77,"* however, you would register it with the"
False,gson/src/main/java/com/google/gson/ExclusionStrategy.java,gson/src/main/java/com/google/gson/ExclusionStrategy.java,81, @deprecated use the more powerful {@link ExclusionStrategy2} instead.
False,gson/src/main/java/com/google/gson/ExclusionStrategy.java,gson/src/main/java/com/google/gson/ExclusionStrategy.java,83,Deprecated
False,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,2, Copyright (C) 2011 Google Inc.
False,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,4," Licensed under the Apache License, Version 2.0 (the ""License"");"
False,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,5, you may not use this file except in compliance with the License.
False,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,6, You may obtain a copy of the License at
False,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,8, http://www.apache.org/licenses/LICENSE-2.0
False,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,10," Unless required by applicable law or agreed to in writing, software"
False,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,11," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,12," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,13, See the License for the specific language governing permissions and
False,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,14, limitations under the License.
False,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,17,ackage com.google.gson;
False,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,20, A strategy (or policy) definition that is used to decide whether or not a field or top-level
False,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,21," class should be serialized or deserialized as part of the JSON output/input. For serialization,"
False,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,22," if the {@link #shouldSkipClass(Class, Mode)} method returns false then that class or field"
False,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,23," type will not be part of the JSON output.  For deserialization, if"
False,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,24," {@link #shouldSkipClass(Class, , Context)} returns false, then it will not be set as part of"
False,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,25, the Java object structure.
False,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,27, <p>The following are a few examples that shows how you can use this exclusion mechanism.
False,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,29, <p><strong>Exclude fields and objects based on a particular class type for both serialization
False,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,30, and deserialization:</strong>
False,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,31," <pre class=""code"">"
False,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,32, public class SpecificClassExclusionStrategy implements ExclusionStrategy2 {
False,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,33,   private final Class&lt;?&gt; excludedThisClass;
False,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,35,   public SpecificClassExclusionStrategy(Class&lt;?&gt; excludedThisClass) {
False,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,36,     this.excludedThisClass = excludedThisClass;
False,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,39,"   public boolean shouldSkipClass(Class&lt;?&gt; clazz, Context context) {"
False,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,40,     return excludedThisClass.equals(clazz);
False,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,43,"   public boolean shouldSkipField(FieldAttributes f, Context context) {"
False,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,44,     return excludedThisClass.equals(f.getDeclaredClass());
False,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,47, </pre>
False,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,49, <p><strong>Excludes fields and objects based on a particular annotation for both serialization
False,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,50, and deserialization:</strong>
False,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,51," <pre class=""code"">"
False,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,52, public &#64interface FooAnnotation {
False,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,53,   // some implementation here
False,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,56," // Excludes any field (or class) that is tagged with an ""&#64FooAnnotation"""
False,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,57, public class FooAnnotationExclusionStrategy implements ExclusionStrategy2 {
False,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,58,"   public boolean shouldSkipClass(Class&lt;?&gt; clazz, Context context) {"
False,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,59,     return clazz.getAnnotation(FooAnnotation.class) != null;
False,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,62,"   public boolean shouldSkipField(FieldAttributes f, Context context) {"
False,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,63,     return f.getAnnotation(FooAnnotation.class) != null;
False,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,66, </pre>
False,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,68, <p><strong>Exclude fields and objects based on a particular class type for serialization
False,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,69, only:</strong>
False,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,70," <pre class=""code"">"
False,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,71, public class SpecificClassExclusionStrategy implements ExclusionStrategy2 {
False,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,72,   private final Class&lt;?&gt; excludedThisClass;
False,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,74,   public SpecificClassExclusionStrategy(Class&lt;?&gt; excludedThisClass) {
False,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,75,     this.excludedThisClass = excludedThisClass;
False,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,78,"   public boolean shouldSkipClass(Class&lt;?&gt; clazz, Context context) {"
False,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,79,     if (context == Context.SERIALIZE) {
False,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,80,       return excludedThisClass.equals(clazz);
False,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,81,     } else {
False,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,82,       return false;
False,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,86,"   public boolean shouldSkipField(FieldAttributes f, Context context) {"
False,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,87,   if (context == Context.SERIALIZE) {
False,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,88,       return excludedThisClass.equals(f.getDeclaredClass());
False,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,89,     } else {
False,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,90,       return false;
False,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,94, </pre>
False,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,96," <p>Now if you want to configure {@code Gson} to use a user defined exclusion strategy, then"
False,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,97, the {@code GsonBuilder} is required. The following is an example of how you can use the
False,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,98, {@code GsonBuilder} to configure Gson to use one of the above sample:
False,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,99," <pre class=""code"">"
False,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,100, ExclusionStrategy2 excludeStrings = new UserDefinedExclusionStrategy(String.class);
False,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,101, Gson gson = new GsonBuilder()
False,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,102,     .setExclusionStrategies(excludeStrings)
False,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,103,     .create();
False,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,104, </pre>
False,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,106, @author Joel Leitch
False,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,108, @since 1.7
False,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,110,ublic interface ExclusionStrategy2 {
False,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,113, @param f the field object that is under test
False,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,114, @param mode the current mode the Gson is running in
False,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,115, @return true if the field should be ignored; otherwise false
False,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,117,"ublic boolean shouldSkipField(FieldAttributes f, Mode mode);"
False,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,120, @param clazz the class object that is under test
False,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,121, @param mode the current mode the Gson is running in
False,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,122, @return true if the class should be ignored; otherwise false
False,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,124,"ublic boolean shouldSkipClass(Class<?> clazz, Mode mode);"
False,gson/src/main/java/com/google/gson/ExposeAnnotationExclusionStrategy.java,gson/src/main/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategy.java,26,ublic class ExposeAnnotationExclusionStrategy implements ExclusionStrategy2 {
False,gson/src/main/java/com/google/gson/ExposeAnnotationExclusionStrategy.java,gson/src/main/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategy.java,27,"ublic boolean shouldSkipClass(Class<?> clazz, Mode mode) {"
True,gson/src/main/java/com/google/gson/ExposeAnnotationExclusionStrategy.java,gson/src/main/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategy.java,26,public class ExposeAnnotationDeserializationExclusionStrategy implements ExclusionStrategy {
True,gson/src/main/java/com/google/gson/ExposeAnnotationExclusionStrategy.java,gson/src/main/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategy.java,27,public boolean shouldSkipClass(Class<?> clazz) {
False,gson/src/main/java/com/google/gson/ExposeAnnotationExclusionStrategy.java,gson/src/main/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategy.java,31,"ublic boolean shouldSkipField(FieldAttributes f, Mode mode) {"
True,gson/src/main/java/com/google/gson/ExposeAnnotationExclusionStrategy.java,gson/src/main/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategy.java,31,public boolean shouldSkipField(FieldAttributes f) {
False,gson/src/main/java/com/google/gson/ExposeAnnotationExclusionStrategy.java,gson/src/main/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategy.java,37,f (mode == Mode.SERIALIZE) {
False,gson/src/main/java/com/google/gson/ExposeAnnotationExclusionStrategy.java,gson/src/main/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategy.java,38,eturn !annotation.serialize();
False,gson/src/main/java/com/google/gson/ExposeAnnotationExclusionStrategy.java,gson/src/main/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategy.java,39, else if (mode == Mode.DESERIALIZE) {
False,gson/src/main/java/com/google/gson/ExposeAnnotationExclusionStrategy.java,gson/src/main/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategy.java,40,eturn !annotation.deserialize();
False,gson/src/main/java/com/google/gson/ExposeAnnotationExclusionStrategy.java,gson/src/main/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategy.java,43,eturn false;
True,gson/src/main/java/com/google/gson/ExposeAnnotationExclusionStrategy.java,gson/src/main/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategy.java,36,return !annotation.deserialize();
True,gson/src/main/java/com/google/gson/ExclusionStrategy2Adapter.java,gson/src/main/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategy.java,19,import com.google.gson.annotations.Expose;
False,gson/src/main/java/com/google/gson/ExclusionStrategy2Adapter.java,gson/src/main/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategy.java,20, Adapts the old {@link ExclusionStrategy} into the newer {@link ExclusionStrategy2} type.
True,gson/src/main/java/com/google/gson/ExclusionStrategy2Adapter.java,gson/src/main/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategy.java,22,* Excludes fields that do not have the {@link Expose} annotation
False,gson/src/main/java/com/google/gson/ExclusionStrategy2Adapter.java,gson/src/main/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategy.java,24,lass ExclusionStrategy2Adapter implements ExclusionStrategy2 {
False,gson/src/main/java/com/google/gson/ExclusionStrategy2Adapter.java,gson/src/main/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategy.java,25,rivate final ExclusionStrategy strategy;
False,gson/src/main/java/com/google/gson/ExclusionStrategy2Adapter.java,gson/src/main/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategy.java,27,ublic ExclusionStrategy2Adapter(ExclusionStrategy strategy) {
False,gson/src/main/java/com/google/gson/ExclusionStrategy2Adapter.java,gson/src/main/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategy.java,28,reconditions.checkNotNull(strategy);
False,gson/src/main/java/com/google/gson/ExclusionStrategy2Adapter.java,gson/src/main/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategy.java,29,his.strategy = strategy;
False,gson/src/main/java/com/google/gson/ExclusionStrategy2Adapter.java,gson/src/main/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategy.java,32,"ublic boolean shouldSkipClass(Class<?> clazz, Mode mode) {"
False,gson/src/main/java/com/google/gson/ExclusionStrategy2Adapter.java,gson/src/main/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategy.java,33,eturn strategy.shouldSkipClass(clazz);
True,gson/src/main/java/com/google/gson/ExclusionStrategy2Adapter.java,gson/src/main/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategy.java,26,public class ExposeAnnotationSerializationExclusionStrategy implements ExclusionStrategy {
True,gson/src/main/java/com/google/gson/ExclusionStrategy2Adapter.java,gson/src/main/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategy.java,27,public boolean shouldSkipClass(Class<?> clazz) {
True,gson/src/main/java/com/google/gson/ExclusionStrategy2Adapter.java,gson/src/main/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategy.java,28,return false;
False,gson/src/main/java/com/google/gson/ExclusionStrategy2Adapter.java,gson/src/main/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategy.java,36,"ublic boolean shouldSkipField(FieldAttributes f, Mode mode) {"
False,gson/src/main/java/com/google/gson/ExclusionStrategy2Adapter.java,gson/src/main/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategy.java,37,eturn strategy.shouldSkipField(f);
True,gson/src/main/java/com/google/gson/ExclusionStrategy2Adapter.java,gson/src/main/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategy.java,31,public boolean shouldSkipField(FieldAttributes f) {
True,gson/src/main/java/com/google/gson/ExclusionStrategy2Adapter.java,gson/src/main/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategy.java,32,Expose annotation = f.getAnnotation(Expose.class);
True,gson/src/main/java/com/google/gson/ExclusionStrategy2Adapter.java,gson/src/main/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategy.java,33,if (annotation == null) {
True,gson/src/main/java/com/google/gson/ExclusionStrategy2Adapter.java,gson/src/main/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategy.java,34,return true;
True,gson/src/main/java/com/google/gson/ExclusionStrategy2Adapter.java,gson/src/main/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategy.java,36,return !annotation.serialize();
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,93,rivate static final ExclusionStrategy2 DEFAULT_EXCLUSION_STRATEGY = createExclusionStrategy();
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,93,private static final ExclusionStrategy DEFAULT_EXCLUSION_STRATEGY = createExclusionStrategy();
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,97,rivate final ExclusionStrategy2 exclusionStrategy;
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,97,private final ExclusionStrategy deserializationExclusionStrategy;
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,98,private final ExclusionStrategy serializationExclusionStrategy;
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,147,"his(DEFAULT_EXCLUSION_STRATEGY, DEFAULT_NAMING_POLICY,"
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,148,"this(DEFAULT_EXCLUSION_STRATEGY, DEFAULT_EXCLUSION_STRATEGY, DEFAULT_NAMING_POLICY,"
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,153,"son(ExclusionStrategy2 exclusionStrategy, FieldNamingStrategy2 fieldNamingPolicy,"
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,154,"Gson(ExclusionStrategy deserializationExclusionStrategy,"
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,155,"ExclusionStrategy serializationExclusionStrategy, FieldNamingStrategy2 fieldNamingPolicy,"
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,158,his.exclusionStrategy = exclusionStrategy;
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,160,this.deserializationExclusionStrategy = deserializationExclusionStrategy;
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,161,this.serializationExclusionStrategy = serializationExclusionStrategy;
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,169,rivate ObjectNavigatorFactory createDefaultObjectNavigatorFactory(ExclusionStrategy2 strategy) {
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,172,private ObjectNavigatorFactory createDefaultObjectNavigatorFactory(ExclusionStrategy strategy) {
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,173,rivate static ExclusionStrategy2 createExclusionStrategy() {
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,174,ist<ExclusionStrategy2> strategies = new LinkedList<ExclusionStrategy2>();
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,176,private static ExclusionStrategy createExclusionStrategy() {
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,177,List<ExclusionStrategy> strategies = new LinkedList<ExclusionStrategy>();
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,222,"reateDefaultObjectNavigatorFactory(exclusionStrategy), serializeNulls, serializers);"
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,225,"createDefaultObjectNavigatorFactory(serializationExclusionStrategy), serializeNulls, serializers);"
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,552,"reateDefaultObjectNavigatorFactory(exclusionStrategy), deserializers,"
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,553,bjectConstructor);
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,555,"createDefaultObjectNavigatorFactory(deserializationExclusionStrategy),"
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,556,"deserializers, objectConstructor);"
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,21,mport java.util.Collection;
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,21,import java.util.Arrays;
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,26,import java.util.Set;
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,57,rivate static final ExposeAnnotationExclusionStrategy exposeAnnotationExclusionStrategy =
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,58,ew ExposeAnnotationExclusionStrategy();
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,60,rivate final Collection<ExclusionStrategy2> exclusionStrategies =
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,61,ew HashSet<ExclusionStrategy2>();
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,58,private static final ExposeAnnotationDeserializationExclusionStrategy
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,59,exposeAnnotationDeserializationExclusionStrategy =
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,60,new ExposeAnnotationDeserializationExclusionStrategy();
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,61,private static final ExposeAnnotationSerializationExclusionStrategy
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,62,exposeAnnotationSerializationExclusionStrategy =
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,63,new ExposeAnnotationSerializationExclusionStrategy();
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,65,private final Set<ExclusionStrategy> serializeExclusionStrategies =
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,66,new HashSet<ExclusionStrategy>();
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,67,private final Set<ExclusionStrategy> deserializeExclusionStrategies =
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,68,new HashSet<ExclusionStrategy>();
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,89,xclusionStrategies.add(Gson.DEFAULT_ANON_LOCAL_CLASS_EXCLUSION_STRATEGY);
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,90,xclusionStrategies.add(Gson.DEFAULT_SYNTHETIC_FIELD_EXCLUSION_STRATEGY);
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,96,deserializeExclusionStrategies.add(Gson.DEFAULT_ANON_LOCAL_CLASS_EXCLUSION_STRATEGY);
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,97,deserializeExclusionStrategies.add(Gson.DEFAULT_SYNTHETIC_FIELD_EXCLUSION_STRATEGY);
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,98,serializeExclusionStrategies.add(Gson.DEFAULT_ANON_LOCAL_CLASS_EXCLUSION_STRATEGY);
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,99,serializeExclusionStrategies.add(Gson.DEFAULT_SYNTHETIC_FIELD_EXCLUSION_STRATEGY);
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,251, @deprecated convert your {@code strategies} to {@link ExclusionStrategy2} and use the
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,252,    {@link #setExclusionStrategies(ExclusionStrategy2...) method instead.
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,254,Deprecated
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,256,or (ExclusionStrategy strategy : strategies) {
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,257,xclusionStrategies.add(new ExclusionStrategy2Adapter(strategy));
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,262,List<ExclusionStrategy> strategyList = Arrays.asList(strategies);
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,263,serializeExclusionStrategies.addAll(strategyList);
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,264,deserializeExclusionStrategies.addAll(strategyList);
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,263, Configures Gson to apply a set of exclusion strategies during both serialization and
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,269,* Configures Gson to apply a set of exclusion strategies during either serialization or
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,266, skipped in the current mode then that field (or object) is skipped during the particular Gson
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,267, mode.
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,272,* skipped then that field (or object) is skipped during either serialization or deserialization
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,273,* depending on the {@code mode} that is passed into this method.
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,269, @param strategies the set of strategy object to apply during object (de)serialization.
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,275,* @param strategies the set of strategy object to apply during the {@code mode}.
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,276,* @param the mode of Gson (either serialization or deserialization) as to when the
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,277,*   {@code strategies} should be applied.
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,273,ublic GsonBuilder setExclusionStrategies(ExclusionStrategy2... strategies) {
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,274,or (ExclusionStrategy2 strategy : strategies) {
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,275,xclusionStrategies.add(strategy);
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,281,"public GsonBuilder setExclusionStrategies(Mode mode, ExclusionStrategy... strategies) {"
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,282,Preconditions.checkNotNull(mode);
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,283,Set<ExclusionStrategy> strategySet = (mode == Mode.SERIALIZE)
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,284,? serializeExclusionStrategies : deserializeExclusionStrategies;
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,285,strategySet.addAll(Arrays.asList(strategies));
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,522,ist<ExclusionStrategy2> strategies =
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,523,ew LinkedList<ExclusionStrategy2>(exclusionStrategies);
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,524,trategies.add(modifierBasedExclusionStrategy);
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,531,List<ExclusionStrategy> deserializationStrategies =
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,532,new LinkedList<ExclusionStrategy>(deserializeExclusionStrategies);
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,533,List<ExclusionStrategy> serializationStrategies =
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,534,new LinkedList<ExclusionStrategy>(serializeExclusionStrategies);
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,535,deserializationStrategies.add(modifierBasedExclusionStrategy);
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,536,serializationStrategies.add(modifierBasedExclusionStrategy);
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,527,trategies.add(innerClassExclusionStrategy);
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,539,deserializationStrategies.add(innerClassExclusionStrategy);
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,540,serializationStrategies.add(innerClassExclusionStrategy);
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,530,trategies.add(new VersionExclusionStrategy(ignoreVersionsAfter));
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,543,VersionExclusionStrategy versionExclusionStrategy =
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,544,new VersionExclusionStrategy(ignoreVersionsAfter);
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,545,deserializationStrategies.add(versionExclusionStrategy);
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,546,serializationStrategies.add(versionExclusionStrategy);
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,533,trategies.add(exposeAnnotationExclusionStrategy);
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,549,deserializationStrategies.add(exposeAnnotationDeserializationExclusionStrategy);
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,550,serializationStrategies.add(exposeAnnotationSerializationExclusionStrategy);
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,535,xclusionStrategy2 exclusionStrategy = new DisjunctionExclusionStrategy(strategies);
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,561,"son gson = new Gson(exclusionStrategy, fieldNamingPolicy, objConstructor, serializeNulls,"
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,577,"Gson gson = new Gson(new DisjunctionExclusionStrategy(deserializationStrategies),"
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,578,"new DisjunctionExclusionStrategy(serializationStrategies),"
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,579,"fieldNamingPolicy, objConstructor, serializeNulls,"
False,gson/src/main/java/com/google/gson/InnerClassExclusionStrategy.java,gson/src/main/java/com/google/gson/InnerClassExclusionStrategy.java,26,lass InnerClassExclusionStrategy implements ExclusionStrategy2 {
True,gson/src/main/java/com/google/gson/InnerClassExclusionStrategy.java,gson/src/main/java/com/google/gson/InnerClassExclusionStrategy.java,26,class InnerClassExclusionStrategy implements ExclusionStrategy {
False,gson/src/main/java/com/google/gson/InnerClassExclusionStrategy.java,gson/src/main/java/com/google/gson/InnerClassExclusionStrategy.java,28,"ublic boolean shouldSkipField(FieldAttributes f, Mode mode) {"
True,gson/src/main/java/com/google/gson/InnerClassExclusionStrategy.java,gson/src/main/java/com/google/gson/InnerClassExclusionStrategy.java,28,public boolean shouldSkipField(FieldAttributes f) {
False,gson/src/main/java/com/google/gson/InnerClassExclusionStrategy.java,gson/src/main/java/com/google/gson/InnerClassExclusionStrategy.java,32,"ublic boolean shouldSkipClass(Class<?> clazz, Mode mode) {"
True,gson/src/main/java/com/google/gson/InnerClassExclusionStrategy.java,gson/src/main/java/com/google/gson/InnerClassExclusionStrategy.java,32,public boolean shouldSkipClass(Class<?> clazz) {
False,gson/src/main/java/com/google/gson/JsonDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonDeserializationVisitor.java,62,ublic Mode getMode() {
False,gson/src/main/java/com/google/gson/JsonDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonDeserializationVisitor.java,63,eturn Mode.DESERIALIZE;
False,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,51,ublic Mode getMode() {
False,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,52,eturn Mode.SERIALIZE;
False,gson/src/main/java/com/google/gson/ModifierBasedExclusionStrategy.java,gson/src/main/java/com/google/gson/ModifierBasedExclusionStrategy.java,29,inal class ModifierBasedExclusionStrategy implements ExclusionStrategy2 {
True,gson/src/main/java/com/google/gson/ModifierBasedExclusionStrategy.java,gson/src/main/java/com/google/gson/ModifierBasedExclusionStrategy.java,29,final class ModifierBasedExclusionStrategy implements ExclusionStrategy {
False,gson/src/main/java/com/google/gson/ModifierBasedExclusionStrategy.java,gson/src/main/java/com/google/gson/ModifierBasedExclusionStrategy.java,41,"ublic boolean shouldSkipField(FieldAttributes f, Mode mode) {"
True,gson/src/main/java/com/google/gson/ModifierBasedExclusionStrategy.java,gson/src/main/java/com/google/gson/ModifierBasedExclusionStrategy.java,41,public boolean shouldSkipField(FieldAttributes f) {
False,gson/src/main/java/com/google/gson/ModifierBasedExclusionStrategy.java,gson/src/main/java/com/google/gson/ModifierBasedExclusionStrategy.java,50,"ublic boolean shouldSkipClass(Class<?> clazz, Mode mode) {"
True,gson/src/main/java/com/google/gson/ModifierBasedExclusionStrategy.java,gson/src/main/java/com/google/gson/ModifierBasedExclusionStrategy.java,50,public boolean shouldSkipClass(Class<?> clazz) {
False,gson/src/main/java/com/google/gson/NullExclusionStrategy.java,gson/src/main/java/com/google/gson/NullExclusionStrategy.java,27,inal class NullExclusionStrategy implements ExclusionStrategy2 {
True,gson/src/main/java/com/google/gson/NullExclusionStrategy.java,gson/src/main/java/com/google/gson/NullExclusionStrategy.java,27,final class NullExclusionStrategy implements ExclusionStrategy {
False,gson/src/main/java/com/google/gson/NullExclusionStrategy.java,gson/src/main/java/com/google/gson/NullExclusionStrategy.java,29,"ublic boolean shouldSkipField(FieldAttributes f, Mode mode) {"
True,gson/src/main/java/com/google/gson/NullExclusionStrategy.java,gson/src/main/java/com/google/gson/NullExclusionStrategy.java,29,public boolean shouldSkipField(FieldAttributes f) {
False,gson/src/main/java/com/google/gson/NullExclusionStrategy.java,gson/src/main/java/com/google/gson/NullExclusionStrategy.java,33,"ublic boolean shouldSkipClass(Class<?> clazz, Mode mode) {"
True,gson/src/main/java/com/google/gson/NullExclusionStrategy.java,gson/src/main/java/com/google/gson/NullExclusionStrategy.java,33,public boolean shouldSkipClass(Class<?> clazz) {
False,gson/src/main/java/com/google/gson/ObjectNavigator.java,gson/src/main/java/com/google/gson/ObjectNavigator.java,79,ode getMode();
False,gson/src/main/java/com/google/gson/ObjectNavigator.java,gson/src/main/java/com/google/gson/ObjectNavigator.java,82,rivate final ExclusionStrategy2 exclusionStrategy;
True,gson/src/main/java/com/google/gson/ObjectNavigator.java,gson/src/main/java/com/google/gson/ObjectNavigator.java,80,private final ExclusionStrategy exclusionStrategy;
False,gson/src/main/java/com/google/gson/ObjectNavigator.java,gson/src/main/java/com/google/gson/ObjectNavigator.java,92,"bjectNavigator(ObjectTypePair objTypePair, ExclusionStrategy2 exclusionStrategy) {"
True,gson/src/main/java/com/google/gson/ObjectNavigator.java,gson/src/main/java/com/google/gson/ObjectNavigator.java,90,"ObjectNavigator(ObjectTypePair objTypePair, ExclusionStrategy exclusionStrategy) {"
False,gson/src/main/java/com/google/gson/ObjectNavigator.java,gson/src/main/java/com/google/gson/ObjectNavigator.java,104,"f (exclusionStrategy.shouldSkipClass(Types.getRawType(objTypePair.type), visitor.getMode())) {"
True,gson/src/main/java/com/google/gson/ObjectNavigator.java,gson/src/main/java/com/google/gson/ObjectNavigator.java,102,if (exclusionStrategy.shouldSkipClass(Types.getRawType(objTypePair.type))) {
False,gson/src/main/java/com/google/gson/ObjectNavigator.java,gson/src/main/java/com/google/gson/ObjectNavigator.java,148,ode mode = visitor.getMode();
False,gson/src/main/java/com/google/gson/ObjectNavigator.java,gson/src/main/java/com/google/gson/ObjectNavigator.java,153,"f (exclusionStrategy.shouldSkipField(fieldAttributes, mode)"
False,gson/src/main/java/com/google/gson/ObjectNavigator.java,gson/src/main/java/com/google/gson/ObjectNavigator.java,154,"| exclusionStrategy.shouldSkipClass(fieldAttributes.getDeclaredClass(), mode)) {"
True,gson/src/main/java/com/google/gson/ObjectNavigator.java,gson/src/main/java/com/google/gson/ObjectNavigator.java,150,if (exclusionStrategy.shouldSkipField(fieldAttributes)
True,gson/src/main/java/com/google/gson/ObjectNavigator.java,gson/src/main/java/com/google/gson/ObjectNavigator.java,151,|| exclusionStrategy.shouldSkipClass(fieldAttributes.getDeclaredClass())) {
False,gson/src/main/java/com/google/gson/ObjectNavigatorFactory.java,gson/src/main/java/com/google/gson/ObjectNavigatorFactory.java,27,rivate final ExclusionStrategy2 strategy;
True,gson/src/main/java/com/google/gson/ObjectNavigatorFactory.java,gson/src/main/java/com/google/gson/ObjectNavigatorFactory.java,27,private final ExclusionStrategy strategy;
False,gson/src/main/java/com/google/gson/ObjectNavigatorFactory.java,gson/src/main/java/com/google/gson/ObjectNavigatorFactory.java,39,"ublic ObjectNavigatorFactory(ExclusionStrategy2 strategy, FieldNamingStrategy2 fieldNamingPolicy) {"
True,gson/src/main/java/com/google/gson/ObjectNavigatorFactory.java,gson/src/main/java/com/google/gson/ObjectNavigatorFactory.java,39,"public ObjectNavigatorFactory(ExclusionStrategy strategy, FieldNamingStrategy2 fieldNamingPolicy) {"
False,gson/src/main/java/com/google/gson/SyntheticFieldExclusionStrategy.java,gson/src/main/java/com/google/gson/SyntheticFieldExclusionStrategy.java,29,lass SyntheticFieldExclusionStrategy implements ExclusionStrategy2 {
True,gson/src/main/java/com/google/gson/SyntheticFieldExclusionStrategy.java,gson/src/main/java/com/google/gson/SyntheticFieldExclusionStrategy.java,29,class SyntheticFieldExclusionStrategy implements ExclusionStrategy {
False,gson/src/main/java/com/google/gson/SyntheticFieldExclusionStrategy.java,gson/src/main/java/com/google/gson/SyntheticFieldExclusionStrategy.java,36,"ublic boolean shouldSkipClass(Class<?> clazz, Mode mode) {"
True,gson/src/main/java/com/google/gson/SyntheticFieldExclusionStrategy.java,gson/src/main/java/com/google/gson/SyntheticFieldExclusionStrategy.java,36,public boolean shouldSkipClass(Class<?> clazz) {
False,gson/src/main/java/com/google/gson/SyntheticFieldExclusionStrategy.java,gson/src/main/java/com/google/gson/SyntheticFieldExclusionStrategy.java,40,"ublic boolean shouldSkipField(FieldAttributes f, Mode mode) {"
True,gson/src/main/java/com/google/gson/SyntheticFieldExclusionStrategy.java,gson/src/main/java/com/google/gson/SyntheticFieldExclusionStrategy.java,40,public boolean shouldSkipField(FieldAttributes f) {
False,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,28,inal class VersionExclusionStrategy implements ExclusionStrategy2 {
True,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,28,final class VersionExclusionStrategy implements ExclusionStrategy {
False,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,36,"ublic boolean shouldSkipField(FieldAttributes f, Mode mode) {"
True,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,36,public boolean shouldSkipField(FieldAttributes f) {
False,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,40,"ublic boolean shouldSkipClass(Class<?> clazz, Mode mode) {"
True,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,40,public boolean shouldSkipClass(Class<?> clazz) {
True,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,19,import junit.framework.TestCase;
False,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,22,mport junit.framework.TestCase;
False,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,31,rivate static final ExclusionStrategy2 FALSE_STRATEGY =
False,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,32,"ew MockExclusionStrategy2(false, false, null);"
False,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,33,rivate static final ExclusionStrategy2 TRUE_STRATEGY =
False,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,34,"ew MockExclusionStrategy2(true, true, null);"
True,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,31,private static final ExclusionStrategy FALSE_STRATEGY =
True,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,32,"new MockExclusionStrategy(false, false);"
True,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,33,private static final ExclusionStrategy TRUE_STRATEGY =
True,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,34,"new MockExclusionStrategy(true, true);"
False,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,41,ist<ExclusionStrategy2> constructorParam = null;
True,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,41,List<ExclusionStrategy> constructorParam = null;
False,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,48,ist<ExclusionStrategy2> strategies = new LinkedList<ExclusionStrategy2>();
True,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,48,List<ExclusionStrategy> strategies = new LinkedList<ExclusionStrategy>();
False,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,53,"ssertTrue(strategy.shouldSkipClass(CLAZZ, Mode.SERIALIZE));"
False,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,54,"ssertTrue(strategy.shouldSkipField(FIELD, Mode.SERIALIZE));"
True,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,53,assertTrue(strategy.shouldSkipClass(CLAZZ));
True,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,54,assertTrue(strategy.shouldSkipField(FIELD));
False,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,58,ist<ExclusionStrategy2> strategies = new LinkedList<ExclusionStrategy2>();
True,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,58,List<ExclusionStrategy> strategies = new LinkedList<ExclusionStrategy>();
False,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,62,"ssertFalse(strategy.shouldSkipClass(CLAZZ, Mode.SERIALIZE));"
False,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,63,"ssertFalse(strategy.shouldSkipField(FIELD, Mode.SERIALIZE));"
True,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,62,assertFalse(strategy.shouldSkipClass(CLAZZ));
True,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,63,assertFalse(strategy.shouldSkipField(FIELD));
False,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,2, Copyright (C) 2011 Google Inc.
False,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,4," Licensed under the Apache License, Version 2.0 (the ""License"");"
False,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,5, you may not use this file except in compliance with the License.
False,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,6, You may obtain a copy of the License at
False,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,8, http://www.apache.org/licenses/LICENSE-2.0
False,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,10," Unless required by applicable law or agreed to in writing, software"
False,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,11," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,12," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,13, See the License for the specific language governing permissions and
False,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,14, limitations under the License.
False,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,17,ackage com.google.gson;
False,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,19,mport java.lang.reflect.Field;
False,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,21,mport junit.framework.TestCase;
False,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,24, Unit test for the {@link ExclusionStrategy2Adapter} class.
False,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,26, @author Joel Leitch
False,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,28,ublic class ExclusionStrategy2AdapterTest extends TestCase {
False,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,30,ublic void testConstruction() throws Exception {
False,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,31,ry {
False,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,32,ew ExclusionStrategy2Adapter(null);
False,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,33,ail();
False,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,34, catch (IllegalArgumentException expected) {}
False,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,37,ublic void testAdapterDoesSameForBothModes() throws Exception {
False,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,38,xclusionStrategy2Adapter adapter =
False,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,39,"ew ExclusionStrategy2Adapter(new MockExclusionStrategy(true, false));"
False,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,40,"ssertTrue(adapter.shouldSkipClass(String.class, Mode.DESERIALIZE));"
False,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,41,"ssertTrue(adapter.shouldSkipClass(String.class, Mode.SERIALIZE));"
False,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,43,ield f = String.class.getFields()[0];
False,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,44,"ssertFalse(adapter.shouldSkipField(new FieldAttributes(String.class, f), Mode.DESERIALIZE));"
False,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,45,"ssertFalse(adapter.shouldSkipField(new FieldAttributes(String.class, f), Mode.SERIALIZE));"
False,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,19,mport java.lang.reflect.Field;
True,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,23,import java.lang.reflect.Field;
False,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,26, Unit tests for the {@link ExposeAnnotationExclusionStrategy} class.
True,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,26,* Unit tests for the {@link ExposeAnnotationSerializationExclusionStrategy} class.
False,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,31,rivate ExposeAnnotationExclusionStrategy strategy;
True,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,31,private ExposeAnnotationDeserializationExclusionStrategy deserializationStrategy;
True,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,32,private ExposeAnnotationSerializationExclusionStrategy serializationStrategy;
False,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,36,trategy = new ExposeAnnotationExclusionStrategy();
True,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,37,deserializationStrategy = new ExposeAnnotationDeserializationExclusionStrategy();
True,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,38,serializationStrategy = new ExposeAnnotationSerializationExclusionStrategy();
False,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,40,"ssertFalse(strategy.shouldSkipClass(MockObject.class, Mode.DESERIALIZE));"
False,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,41,"ssertFalse(strategy.shouldSkipClass(MockObject.class, Mode.SERIALIZE));"
True,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,42,assertFalse(deserializationStrategy.shouldSkipClass(MockObject.class));
True,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,43,assertFalse(serializationStrategy.shouldSkipClass(MockObject.class));
False,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,46,"ssertTrue(strategy.shouldSkipField(f, Mode.DESERIALIZE));"
False,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,47,"ssertTrue(strategy.shouldSkipField(f, Mode.SERIALIZE));"
True,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,48,assertTrue(deserializationStrategy.shouldSkipField(f));
True,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,49,assertTrue(serializationStrategy.shouldSkipField(f));
False,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,52,"ssertTrue(strategy.shouldSkipField(f, Mode.DESERIALIZE));"
False,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,53,"ssertTrue(strategy.shouldSkipField(f, Mode.SERIALIZE));"
True,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,54,assertTrue(deserializationStrategy.shouldSkipField(f));
True,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,55,assertTrue(serializationStrategy.shouldSkipField(f));
False,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,58,"ssertFalse(strategy.shouldSkipField(f, Mode.DESERIALIZE));"
False,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,59,"ssertFalse(strategy.shouldSkipField(f, Mode.SERIALIZE));"
True,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,60,assertFalse(deserializationStrategy.shouldSkipField(f));
True,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,61,assertFalse(serializationStrategy.shouldSkipField(f));
False,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,64,"ssertFalse(strategy.shouldSkipField(f, Mode.DESERIALIZE));"
False,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,65,"ssertFalse(strategy.shouldSkipField(f, Mode.SERIALIZE));"
True,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,66,assertFalse(deserializationStrategy.shouldSkipField(f));
True,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,67,assertFalse(serializationStrategy.shouldSkipField(f));
False,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,70,"ssertTrue(strategy.shouldSkipField(f, Mode.DESERIALIZE));"
False,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,71,"ssertFalse(strategy.shouldSkipField(f, Mode.SERIALIZE));"
True,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,72,assertTrue(deserializationStrategy.shouldSkipField(f));
True,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,73,assertFalse(serializationStrategy.shouldSkipField(f));
False,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,38,inkedList<ExclusionStrategy2> strategies = new LinkedList<ExclusionStrategy2>();
True,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,38,LinkedList<ExclusionStrategy> strategies = new LinkedList<ExclusionStrategy>();
False,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,41,xclusionStrategy2 exclusionStrategy = new DisjunctionExclusionStrategy(strategies);
False,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,42,"son gson = new Gson(exclusionStrategy, Gson.DEFAULT_NAMING_POLICY,"
True,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,41,ExclusionStrategy exclusionStrategy = new DisjunctionExclusionStrategy(strategies);
True,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,42,"Gson gson = new Gson(exclusionStrategy, exclusionStrategy, Gson.DEFAULT_NAMING_POLICY,"
False,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,52,/ TODO(Joel): Move this to some other functional test once exclusion policies are
False,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,53,/ available to the public
False,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,54,ublic void testUserDefinedExclusionPolicies() throws Exception {
False,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,55,son gson = new GsonBuilder()
False,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,56,setExclusionStrategies(new UserDefinedExclusionStrategy(String.class))
False,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,57,create();
False,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,59,"tring json = gson.toJson(new TestTypes.StringWrapper(""someValue""));"
False,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,60,"ssertEquals(""{}"", json);"
False,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,63,rivate static class UserDefinedExclusionStrategy implements ExclusionStrategy2 {
False,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,64,rivate final Class<?> excludedThisClass;
False,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,66,serDefinedExclusionStrategy(Class<?> excludedThisClass) {
False,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,67,his.excludedThisClass = excludedThisClass;
False,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,70,"ublic boolean shouldSkipClass(Class<?> clazz, Mode mode) {"
False,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,71,eturn excludedThisClass.equals(clazz);
False,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,74,"ublic boolean shouldSkipField(FieldAttributes f, Mode mode) {"
False,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,75,eturn excludedThisClass.equals(f.getDeclaredClass());
False,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,19,mport java.lang.reflect.Field;
True,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,21,import java.lang.reflect.Field;
False,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,44,"ssertTrue(strategy.shouldSkipClass(clazz, Mode.SERIALIZE));"
False,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,45,"ssertTrue(strategy.shouldSkipClass(clazz, Mode.DESERIALIZE));"
True,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,44,assertTrue(strategy.shouldSkipClass(clazz));
False,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,50,"ssertTrue(strategy.shouldSkipField(new FieldAttributes(getClass(), f), Mode.SERIALIZE));"
False,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,51,"ssertTrue(strategy.shouldSkipField(new FieldAttributes(getClass(), f), Mode.DESERIALIZE));"
True,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,49,"assertTrue(strategy.shouldSkipField(new FieldAttributes(getClass(), f)));"
False,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,56,"ssertFalse(strategy.shouldSkipClass(clazz, Mode.SERIALIZE));"
False,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,57,"ssertFalse(strategy.shouldSkipClass(clazz, Mode.DESERIALIZE));"
True,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,54,assertFalse(strategy.shouldSkipClass(clazz));
False,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,62,"ssertFalse(strategy.shouldSkipField(new FieldAttributes(getClass(), f), Mode.SERIALIZE));"
False,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,63,"ssertFalse(strategy.shouldSkipField(new FieldAttributes(getClass(), f), Mode.DESERIALIZE));"
True,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,59,"assertFalse(strategy.shouldSkipField(new FieldAttributes(getClass(), f)));"
False,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,2, Copyright (C) 2008 Google Inc.
False,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,4," Licensed under the Apache License, Version 2.0 (the ""License"");"
False,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,5, you may not use this file except in compliance with the License.
False,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,6, You may obtain a copy of the License at
False,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,8, http://www.apache.org/licenses/LICENSE-2.0
False,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,10," Unless required by applicable law or agreed to in writing, software"
False,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,11," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,12," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,13, See the License for the specific language governing permissions and
False,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,14, limitations under the License.
False,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,17,ackage com.google.gson;
False,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,20, This is a configurable {@link ExclusionStrategy2} that can be used for
False,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,21, unit testing.
False,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,23, @author Joel Leitch
False,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,25,ublic class MockExclusionStrategy2 implements ExclusionStrategy2 {
False,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,26,rivate final MockExclusionStrategy strategy;
False,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,27,rivate final Mode mode;
False,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,29,"ublic MockExclusionStrategy2(boolean skipClass, boolean skipField, Mode mode) {"
False,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,30,"his.strategy = new MockExclusionStrategy(skipClass, skipField);"
False,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,31,his.mode = mode;
False,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,34,"ublic boolean shouldSkipField(FieldAttributes f, Mode mode) {"
False,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,35,f (this.mode == null || this.mode == mode) {
False,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,36,eturn strategy.shouldSkipField(f);
False,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,37, else {
False,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,38,eturn false;
False,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,42,"ublic boolean shouldSkipClass(Class<?> clazz, Mode mode) {"
False,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,43,f (this.mode == null || this.mode == mode) {
False,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,44,eturn strategy.shouldSkipClass(clazz);
False,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,45, else {
False,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,46,eturn false;
False,gson/src/test/java/com/google/gson/NullExclusionStrategyTest.java,gson/src/test/java/com/google/gson/NullExclusionStrategyTest.java,36,"ssertFalse(strategy.shouldSkipClass(String.class, Mode.SERIALIZE));"
False,gson/src/test/java/com/google/gson/NullExclusionStrategyTest.java,gson/src/test/java/com/google/gson/NullExclusionStrategyTest.java,37,"ssertFalse(strategy.shouldSkipClass(String.class, Mode.DESERIALIZE));"
True,gson/src/test/java/com/google/gson/NullExclusionStrategyTest.java,gson/src/test/java/com/google/gson/NullExclusionStrategyTest.java,36,assertFalse(strategy.shouldSkipClass(String.class));
False,gson/src/test/java/com/google/gson/NullExclusionStrategyTest.java,gson/src/test/java/com/google/gson/NullExclusionStrategyTest.java,42,"ew FieldAttributes(String.class, String.class.getFields()[0]),"
False,gson/src/test/java/com/google/gson/NullExclusionStrategyTest.java,gson/src/test/java/com/google/gson/NullExclusionStrategyTest.java,43,ode.SERIALIZE));
False,gson/src/test/java/com/google/gson/NullExclusionStrategyTest.java,gson/src/test/java/com/google/gson/NullExclusionStrategyTest.java,44,ssertFalse(strategy.shouldSkipField(
False,gson/src/test/java/com/google/gson/NullExclusionStrategyTest.java,gson/src/test/java/com/google/gson/NullExclusionStrategyTest.java,45,"ew FieldAttributes(String.class, String.class.getFields()[0]),"
False,gson/src/test/java/com/google/gson/NullExclusionStrategyTest.java,gson/src/test/java/com/google/gson/NullExclusionStrategyTest.java,46,ode.DESERIALIZE));
True,gson/src/test/java/com/google/gson/NullExclusionStrategyTest.java,gson/src/test/java/com/google/gson/NullExclusionStrategyTest.java,41,"new FieldAttributes(String.class, String.class.getFields()[0])));"
False,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,45,"ssertFalse(strategy.shouldSkipClass(clazz, Mode.DESERIALIZE));"
False,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,46,"ssertFalse(strategy.shouldSkipClass(clazz, Mode.SERIALIZE));"
True,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,44,assertFalse(strategy.shouldSkipClass(clazz));
False,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,49,"ssertFalse(strategy.shouldSkipField(fieldAttributes, Mode.DESERIALIZE));"
False,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,50,"ssertFalse(strategy.shouldSkipField(fieldAttributes, Mode.SERIALIZE));"
True,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,47,assertFalse(strategy.shouldSkipField(fieldAttributes));
False,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,58,"ssertFalse(strategy.shouldSkipClass(clazz, Mode.DESERIALIZE));"
False,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,59,"ssertFalse(strategy.shouldSkipClass(clazz, Mode.SERIALIZE));"
True,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,54,assertFalse(strategy.shouldSkipClass(clazz));
False,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,62,"ssertFalse(strategy.shouldSkipField(fieldAttributes, Mode.DESERIALIZE));"
False,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,63,"ssertFalse(strategy.shouldSkipField(fieldAttributes, Mode.SERIALIZE));"
True,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,57,assertFalse(strategy.shouldSkipField(fieldAttributes));
False,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,71,"ssertTrue(strategy.shouldSkipClass(clazz, Mode.DESERIALIZE));"
False,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,72,"ssertTrue(strategy.shouldSkipClass(clazz, Mode.SERIALIZE));"
True,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,64,assertTrue(strategy.shouldSkipClass(clazz));
False,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,75,"ssertTrue(strategy.shouldSkipField(fieldAttributes, Mode.DESERIALIZE));"
False,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,76,"ssertTrue(strategy.shouldSkipField(fieldAttributes, Mode.SERIALIZE));"
True,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,67,assertTrue(strategy.shouldSkipField(fieldAttributes));
False,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,20,mport com.google.gson.ExclusionStrategy2;
False,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,26,mport com.google.gson.MockExclusionStrategy;
False,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,27,mport com.google.gson.MockExclusionStrategy2;
False,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,46,rivate Gson gson;
False,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,51,son = new GsonBuilder()
False,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,52,setExclusionStrategies(new MyExclusionStrategy(String.class))
False,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,53,serializeNulls()
False,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,54,create();
False,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,59,son gson = createGson(new MyExclusionStrategy(String.class));
True,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,51,"Gson gson = createGson(new MyExclusionStrategy(String.class), null);"
False,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,66,ublic void testExclusionStrategy2Serialization() throws Exception {
False,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,67,"son gson = createGson(new MockExclusionStrategy2(false, true, Mode.DESERIALIZE));"
False,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,68,tring json = gson.toJson(src);
False,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,69,"ssertTrue(json.contains(""\""stringField\""""));"
False,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,70,"ssertTrue(json.contains(""\""annotatedField\""""));"
False,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,71,"ssertTrue(json.contains(""\""longField\""""));"
False,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,73,"son = createGson(new MockExclusionStrategy2(false, true, Mode.SERIALIZE));"
False,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,74,son = gson.toJson(src);
False,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,75,"ssertFalse(json.contains(""\""stringField\""""));"
False,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,76,"ssertFalse(json.contains(""\""annotatedField\""""));"
False,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,77,"ssertFalse(json.contains(""\""longField\""""));"
True,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,59,"Gson gson = createGson(new MyExclusionStrategy(String.class), null);"
True,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,73,public void testExclusionStrategyWithMode() throws Exception {
True,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,74,SampleObjectForTest testObj = new SampleObjectForTest(
True,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,75,"src.annotatedField + 5, src.stringField + ""blah,blah"","
True,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,76,src.longField + 655L);
False,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,94,rivate static Gson createGson(ExclusionStrategy exclusionStrategy) {
False,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,95,eturn new GsonBuilder()
False,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,96,setExclusionStrategies(exclusionStrategy)
False,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,97,serializeNulls()
False,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,98,create();
True,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,78,"Gson gson = createGson(new MyExclusionStrategy(String.class), Mode.DESERIALIZE);"
True,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,79,JsonObject json = gson.toJsonTree(testObj).getAsJsonObject();
True,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,80,"assertEquals(testObj.annotatedField, json.get(""annotatedField"").getAsInt());"
True,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,81,"assertEquals(testObj.stringField, json.get(""stringField"").getAsString());"
True,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,82,"assertEquals(testObj.longField, json.get(""longField"").getAsLong());"
True,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,84,"SampleObjectForTest target = gson.fromJson(json, SampleObjectForTest.class);"
True,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,85,"assertEquals(testObj.longField, target.longField);"
True,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,87,// assert excluded fields are set to the defaults
True,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,88,"assertEquals(src.annotatedField, target.annotatedField);"
True,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,89,"assertEquals(src.stringField, target.stringField);"
False,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,101,rivate static Gson createGson(ExclusionStrategy2 exclusionStrategy) {
False,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,102,eturn new GsonBuilder()
False,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,103,setExclusionStrategies(exclusionStrategy)
True,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,92,"private static Gson createGson(ExclusionStrategy exclusionStrategy, Mode mode) {"
True,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,93,GsonBuilder gsonBuilder = new GsonBuilder();
True,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,94,if (mode == null) {
True,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,95,gsonBuilder.setExclusionStrategies(exclusionStrategy);
True,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,96,} else {
True,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,97,"gsonBuilder.setExclusionStrategies(mode, exclusionStrategy);"
True,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,99,return gsonBuilder
False,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,120,rivate final Class<?> clazzField;
False,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,123,nnotatedField = 5;
False,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,124,"tringField = ""someDefaultValue"";"
False,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,125,ongField = 1234;
False,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,126,lazzField = String.class;
True,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,118,"this(5, ""someDefaultValue"", 12345L);"
True,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,121,"public SampleObjectForTest(int annotatedField, String stringField, long longField) {"
True,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,122,this.annotatedField = annotatedField;
True,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,123,this.stringField = stringField;
True,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,124,this.longField = longField;
