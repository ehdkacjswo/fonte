is_addition,old_file_path,new_file_path,line_num,content
False,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,29,mport com.google.gson.annotations.SerializedName;
False,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,32,mport com.google.gson.stream.JsonToken;
False,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,38,rivate final Gson gson = new Gson();
False,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,41, The recursiveCall in {@link ControlData.JsonAdapterFactory} is the source of this bug
False,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,42, because it returns a null type adapter.
False,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,44,ublic void testTypeAdapterFactoryNullSafeBug() throws IOException {
False,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,45,"ontrolData control = new ControlData(""ec57803e"", 2, true, 11211);"
False,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,46,"evice device = new Device(""device1"", control);"
False,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,47,tring json = gson.toJson(device);
False,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,49,"son = ""\""{\\\""id\\\"":\\\""ec57803e2\\\"",\\\""category\\\"":2,\\\""alwaysOn\\\"":true,\\\""codeset_id\\\"":11211}\"""";"
False,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,50,"ontrol = gson.fromJson(json, ControlData.class);"
False,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,51,"ssertEquals(""ec57803e2"", control.id);"
False,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,52,ssertTrue(control.alwaysOn);
False,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,53,"ssertEquals(11211, control.codesetId);"
False,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,54,"ssertEquals(2, control.category);"
False,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,56,"tring deviceJson = ""{'id':'device1','controlData':null}"";"
False,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,57,"evice = gson.fromJson(deviceJson, Device.class);"
False,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,58,ssertNull(device.controlData);
True,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,36,// The recursiveCall in {@link Device.JsonAdapterFactory} is the source of this bug
True,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,37,// because it returns a null type adapter.
False,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,60,"eviceJson = ""{'id':'device1','controlData':{'id':'ec57803e2','category':2,'alwaysOn':true,'codeset_id':12221}}"";"
False,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,61,"evice = gson.fromJson(deviceJson, Device.class);"
False,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,62,"ssertEquals(12221, device.controlData.codesetId);"
False,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,64,"eviceJson = ""{'id':'device1','controlData':'\\\""{}\\\""'}"";"
False,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,65,"evice = gson.fromJson(deviceJson, Device.class);"
False,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,67,ry {
False,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,68,"eviceJson = ""{'id':'device1','controlData':'a'}"";"
False,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,69,"evice = gson.fromJson(deviceJson, Device.class);"
False,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,70,ssertNotNull(device.controlData);
False,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,71,ail();
False,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,72, catch (JsonSyntaxException expected) {}
True,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,39,private final Gson gson = new Gson();
False,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,74,"eviceJson = ""{'id':'device1','controlData':'  '}"";"
False,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,75,"evice = gson.fromJson(deviceJson, Device.class);"
False,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,76,ssertNull(device.controlData);
True,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,41,public void testNullSafeBugSerialize() throws Exception {
True,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,42,"Device device = new Device(""ec57803e"", 2);"
True,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,43,gson.toJson(device);
False,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,79,rivate static final class Device {
False,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,80,"SuppressWarnings(""unused"")"
False,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,81,tring id;
False,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,82,ontrolData controlData;
False,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,84,"ublic Device(String id, ControlData controlData) {"
False,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,85,his.id = id;
False,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,86,his.controlData = controlData;
True,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,46,public void testNullSafeBugDeserialize() throws Exception {
True,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,47,"String json = ""\""{\\\""id\\\"":\\\""ec57803e2\\\"",\\\""category\\\"":2}\"""";"
True,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,48,"Device device = gson.fromJson(json, Device.class);"
True,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,49,"assertEquals(""ec57803e2"", device.id);"
True,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,50,"assertEquals(2, device.category);"
False,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,90,JsonAdapter(ControlData.JsonAdapterFactory.class)
False,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,91,rivate static final class ControlData {
True,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,53,@JsonAdapter(Device.JsonAdapterFactory.class)
True,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,54,private static final class Device {
False,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,94,oolean alwaysOn;
False,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,95,"SerializedName(""codeset_id"") int codesetId;"
False,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,96,"ontrolData(String id, int category, boolean alwaysOn, int codesetId) {"
True,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,57,"Device(String id, int category) {"
False,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,99,his.alwaysOn = alwaysOn;
False,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,100,his.codesetId = codesetId;
False,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,104, DeviceControlData is received as String in JSON instead of proper JSON.
False,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,105," So, we need to write a special type adapter."
True,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,63,"* Write the value as a String, not JSON."
False,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,107,tatic final class JsonAdapterFactory extends StringifiedJsonAdapterFactory<ControlData> {
True,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,65,static final class JsonAdapterFactory implements TypeAdapterFactory {
False,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,109,ublic JsonAdapterFactory() {
False,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,110,"uper(recursiveCall, ControlData.class, true);"
False,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,116, Converts an object to Stringified JSON for saving in a JSON field as a string type.
False,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,118,rivate static class StringifiedJsonAdapterFactory<R> implements TypeAdapterFactory {
False,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,119,rivate final Class<R> targetType;
False,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,120,rivate final ThreadLocal<Boolean> recursiveCall;
False,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,121,rivate final boolean writeAsJson;
False,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,124, @param recursiveCall provide a static ThreadLocal to workaround a Gson bug where
False,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,125,   annotation-based type adapter factories can't be skipped over.
False,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,126, @param targetType The class whose instances needs to be written in stringified form.
False,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,127, @param writeAsJson Set this to true to write the output as JSON not string.
False,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,129,"ublic StringifiedJsonAdapterFactory(ThreadLocal<Boolean> recursiveCall, Class<R> targetType,"
False,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,130,oolean writeAsJson) {
False,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,131,his.recursiveCall = recursiveCall;
False,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,132,his.targetType = targetType;
False,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,133,his.writeAsJson = writeAsJson;
False,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,136,"SuppressWarnings({""unchecked"", ""rawtypes""})"
False,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,137,"Override public <T> TypeAdapter<T> create(final Gson gson, TypeToken<T> type) {"
False,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,138,f (type.getRawType() != targetType || recursiveCall.get() != null) {
False,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,139,ecursiveCall.set(null); // clear for subsequent use
False,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,140,eturn null;
False,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,142,ecursiveCall.set(Boolean.TRUE);
False,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,143,"inal TypeAdapter<R> delegate = (TypeAdapter) gson.getDelegateAdapter(this, type);"
False,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,144,eturn (TypeAdapter) new TypeAdapter<R>() {
False,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,145,"Override public void write(JsonWriter out, R value) throws IOException {"
False,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,146,f (writeAsJson) {
True,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,68,"@SuppressWarnings({""unchecked"", ""rawtypes""})"
True,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,69,"@Override public <T> TypeAdapter<T> create(final Gson gson, TypeToken<T> type) {"
True,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,70,if (type.getRawType() != Device.class || recursiveCall.get() != null) {
True,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,71,recursiveCall.set(null); // clear for subsequent use
True,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,72,return null;
True,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,74,recursiveCall.set(Boolean.TRUE);
True,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,75,"final TypeAdapter<Device> delegate = (TypeAdapter) gson.getDelegateAdapter(this, type);"
True,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,76,return (TypeAdapter) new TypeAdapter<Device>() {
True,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,77,"@Override public void write(JsonWriter out, Device value) throws IOException {"
False,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,148, else {
False,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,149,/ delegate.toJson(value) will write nulls. avoid that by using gson.toJson()
False,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,150,tring json = gson.toJson(delegate.toJsonTree(value));
False,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,151,ut.value(json);
False,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,154,Override public R read(JsonReader in) throws IOException {
False,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,155,sonToken token = in.peek();
False,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,156,sonElement root;
False,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,157,f (token == JsonToken.BEGIN_OBJECT) {
False,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,158,eturn delegate.read(in);
False,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,159, else { // assume to be string
True,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,80,@Override public Device read(JsonReader in) throws IOException {
False,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,162,"oot = parseString(parser, json, null);"
True,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,83,"JsonElement root = parseString(parser, json, null);"
False,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,167,"rivate JsonElement parseString(JsonParser parser, String json, String prevJson)"
False,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,168,hrows IOException {
False,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,169,f (json == null || json.trim().isEmpty()) {
False,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,170,eturn null;
False,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,172,sonElement root = parser.parse(json);
False,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,173,f (root instanceof JsonPrimitive) {
False,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,174,revJson = json;
False,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,175,son = root.getAsString();
False,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,176,"f (Objects.equals(json, prevJson)) {"
False,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,177,"hrow new JsonSyntaxException(""Unexpected Json: "" + json);"
True,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,86,"private JsonElement parseString(JsonParser parser, String json, String prevJson)"
True,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,87,throws IOException { // called recursively
True,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,88,if (json == null || json.trim().isEmpty()) {
True,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,89,return null;
False,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,179,"eturn parseString(parser, json, prevJson);"
True,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,91,JsonElement root = parser.parse(json);
True,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,92,if (root instanceof JsonPrimitive) {
True,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,93,prevJson = json;
True,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,94,json = root.getAsString();
True,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,95,"if (Objects.equals(json, prevJson)) {"
True,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,96,"throw new JsonSyntaxException(""Unexpected Json: "" + json);"
True,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,98,"return parseString(parser, json, prevJson);"
True,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,100,return root;
False,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,181,eturn root;
False,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,gson/src/test/java/com/google/gson/regression/JsonAdapterNullSafeTest.java,183,.nullSafe();
