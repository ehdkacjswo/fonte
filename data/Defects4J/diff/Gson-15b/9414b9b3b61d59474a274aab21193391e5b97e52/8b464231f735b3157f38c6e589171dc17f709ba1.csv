is_addition,old_file_path,new_file_path,line_num,content
True,gson/src/main/java/com/google/gson/reflect/TypeToken.java,gson/src/main/java/com/google/gson/reflect/TypeToken.java,307,* Gets type literal for the parameterized type represented by applying {@code typeArguments} to
True,gson/src/main/java/com/google/gson/reflect/TypeToken.java,gson/src/main/java/com/google/gson/reflect/TypeToken.java,308,* {@code rawType}.
True,gson/src/main/java/com/google/gson/reflect/TypeToken.java,gson/src/main/java/com/google/gson/reflect/TypeToken.java,310,"public static TypeToken<?> getParameterized(Type rawType, Type... typeArguments) {"
True,gson/src/main/java/com/google/gson/reflect/TypeToken.java,gson/src/main/java/com/google/gson/reflect/TypeToken.java,311,"return new TypeToken<Object>($Gson$Types.newParameterizedTypeWithOwner(null, rawType, typeArguments));"
True,gson/src/main/java/com/google/gson/reflect/TypeToken.java,gson/src/main/java/com/google/gson/reflect/TypeToken.java,315,* Gets type literal for the array type whose elements are all instances of {@code componentType}.
True,gson/src/main/java/com/google/gson/reflect/TypeToken.java,gson/src/main/java/com/google/gson/reflect/TypeToken.java,317,public static TypeToken<?> getArray(Type componentType) {
True,gson/src/main/java/com/google/gson/reflect/TypeToken.java,gson/src/main/java/com/google/gson/reflect/TypeToken.java,318,return new TypeToken<Object>($Gson$Types.arrayOf(componentType));
True,gson/src/test/java/com/google/gson/reflect/TypeTokenTest.java,gson/src/test/java/com/google/gson/reflect/TypeTokenTest.java,22,import java.util.Map;
True,gson/src/test/java/com/google/gson/reflect/TypeTokenTest.java,gson/src/test/java/com/google/gson/reflect/TypeTokenTest.java,84,public void testArrayFactory() {
True,gson/src/test/java/com/google/gson/reflect/TypeTokenTest.java,gson/src/test/java/com/google/gson/reflect/TypeTokenTest.java,85,TypeToken<?> expectedStringArray = new TypeToken<String[]>() {};
True,gson/src/test/java/com/google/gson/reflect/TypeTokenTest.java,gson/src/test/java/com/google/gson/reflect/TypeTokenTest.java,86,"assertEquals(expectedStringArray, TypeToken.getArray(String.class));"
True,gson/src/test/java/com/google/gson/reflect/TypeTokenTest.java,gson/src/test/java/com/google/gson/reflect/TypeTokenTest.java,88,TypeToken<?> expectedListOfStringArray = new TypeToken<List<String>[]>() {};
True,gson/src/test/java/com/google/gson/reflect/TypeTokenTest.java,gson/src/test/java/com/google/gson/reflect/TypeTokenTest.java,89,Type listOfString = new TypeToken<List<String>>() {}.getType();
True,gson/src/test/java/com/google/gson/reflect/TypeTokenTest.java,gson/src/test/java/com/google/gson/reflect/TypeTokenTest.java,90,"assertEquals(expectedListOfStringArray, TypeToken.getArray(listOfString));"
True,gson/src/test/java/com/google/gson/reflect/TypeTokenTest.java,gson/src/test/java/com/google/gson/reflect/TypeTokenTest.java,93,public void testParameterizedFactory() {
True,gson/src/test/java/com/google/gson/reflect/TypeTokenTest.java,gson/src/test/java/com/google/gson/reflect/TypeTokenTest.java,94,TypeToken<?> expectedListOfString = new TypeToken<List<String>>() {};
True,gson/src/test/java/com/google/gson/reflect/TypeTokenTest.java,gson/src/test/java/com/google/gson/reflect/TypeTokenTest.java,95,"assertEquals(expectedListOfString, TypeToken.getParameterized(List.class, String.class));"
True,gson/src/test/java/com/google/gson/reflect/TypeTokenTest.java,gson/src/test/java/com/google/gson/reflect/TypeTokenTest.java,97,"TypeToken<?> expectedMapOfStringToString = new TypeToken<Map<String, String>>() {};"
True,gson/src/test/java/com/google/gson/reflect/TypeTokenTest.java,gson/src/test/java/com/google/gson/reflect/TypeTokenTest.java,98,"assertEquals(expectedMapOfStringToString, TypeToken.getParameterized(Map.class, String.class, String.class));"
True,gson/src/test/java/com/google/gson/reflect/TypeTokenTest.java,gson/src/test/java/com/google/gson/reflect/TypeTokenTest.java,100,TypeToken<?> expectedListOfListOfListOfString = new TypeToken<List<List<List<String>>>>() {};
True,gson/src/test/java/com/google/gson/reflect/TypeTokenTest.java,gson/src/test/java/com/google/gson/reflect/TypeTokenTest.java,101,"Type listOfString = TypeToken.getParameterized(List.class, String.class).getType();"
True,gson/src/test/java/com/google/gson/reflect/TypeTokenTest.java,gson/src/test/java/com/google/gson/reflect/TypeTokenTest.java,102,"Type listOfListOfString = TypeToken.getParameterized(List.class, listOfString).getType();"
True,gson/src/test/java/com/google/gson/reflect/TypeTokenTest.java,gson/src/test/java/com/google/gson/reflect/TypeTokenTest.java,103,"assertEquals(expectedListOfListOfListOfString, TypeToken.getParameterized(List.class, listOfListOfString));"
