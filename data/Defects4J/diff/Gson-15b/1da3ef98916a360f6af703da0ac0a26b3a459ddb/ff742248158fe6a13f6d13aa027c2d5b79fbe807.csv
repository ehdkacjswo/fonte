is_addition,old_file_path,new_file_path,line_num,content
False,gson/src/main/java/com/google/gson/JsonDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonDeserializationVisitor.java,72,"arget = (T) deserializer.deserialize(json, objType, context);"
True,gson/src/main/java/com/google/gson/JsonDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonDeserializationVisitor.java,72,if (json != null && !json.isJsonNull()) {
True,gson/src/main/java/com/google/gson/JsonDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonDeserializationVisitor.java,73,"target = (T) deserializer.deserialize(json, objType, context);"
False,gson/src/main/java/com/google/gson/JsonObjectDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonObjectDeserializationVisitor.java,115,"bject value = deserializer.deserialize(child, actualTypeOfField, context);"
False,gson/src/main/java/com/google/gson/JsonObjectDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonObjectDeserializationVisitor.java,116,".set(parent, value);"
True,gson/src/main/java/com/google/gson/JsonObjectDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonObjectDeserializationVisitor.java,115,if (child != null && !child.isJsonNull()) {
True,gson/src/main/java/com/google/gson/JsonObjectDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonObjectDeserializationVisitor.java,116,"Object value = deserializer.deserialize(child, actualTypeOfField, context);"
True,gson/src/main/java/com/google/gson/JsonObjectDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonObjectDeserializationVisitor.java,117,"f.set(parent, value);"
False,gson/src/main/java/com/google/gson/JsonTreeNavigator.java,gson/src/main/java/com/google/gson/JsonTreeNavigator.java,37,f (element.isJsonNull()) {
True,gson/src/main/java/com/google/gson/JsonTreeNavigator.java,gson/src/main/java/com/google/gson/JsonTreeNavigator.java,37,if (element == null || element.isJsonNull()) {
False,gson/src/main/java/com/google/gson/JsonTreeNavigator.java,gson/src/main/java/com/google/gson/JsonTreeNavigator.java,71,f (child.isJsonNull()) {
True,gson/src/main/java/com/google/gson/JsonTreeNavigator.java,gson/src/main/java/com/google/gson/JsonTreeNavigator.java,71,if (child == null || child.isJsonNull()) {
False,gson/src/main/java/com/google/gson/JsonTreeNavigator.java,gson/src/main/java/com/google/gson/JsonTreeNavigator.java,96,f (child.isJsonNull()) {
True,gson/src/main/java/com/google/gson/JsonTreeNavigator.java,gson/src/main/java/com/google/gson/JsonTreeNavigator.java,96,if (child == null || child.isJsonNull()) {
True,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,410,public void testEnsureCustomSerializerNotInvokedForNullValues() {
True,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,411,Gson gson = new GsonBuilder()
True,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,412,".registerTypeAdapter(DataHolder.class, new DataHolderSerializer())"
True,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,413,.create();
True,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,414,"DataHolderWrapper target = new DataHolderWrapper(new DataHolder(""abc""));"
True,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,415,String json = gson.toJson(target);
True,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,416,"assertEquals(""{\""wrappedData\"":{\""myData\"":\""abc\""}}"", json);"
True,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,419,public void testEnsureCustomDeserializerNotInvokedForNullValues() {
True,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,420,Gson gson = new GsonBuilder()
True,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,421,".registerTypeAdapter(DataHolder.class, new DataHolderDeserializer())"
True,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,422,.create();
True,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,423,"String json = ""{wrappedData:null}"";"
True,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,424,"DataHolderWrapper actual = gson.fromJson(json, DataHolderWrapper.class);"
True,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,425,assertNull(actual.wrappedData);
True,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,428,private static class DataHolder {
True,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,429,"@SuppressWarnings(""unused"")"
True,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,430,final String data;
True,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,432,// For use by Gson
True,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,433,"@SuppressWarnings(""unused"")"
True,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,434,private DataHolder() {
True,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,435,"this("""");"
True,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,438,public DataHolder(String data) {
True,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,439,this.data = data;
True,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,443,private static class DataHolderWrapper {
True,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,444,final DataHolder wrappedData;
True,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,446,// For use by Gson
True,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,447,"@SuppressWarnings(""unused"")"
True,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,448,private DataHolderWrapper() {
True,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,449,this(null);
True,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,452,public DataHolderWrapper(DataHolder data) {
True,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,453,this.wrappedData = data;
True,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,457,private static class DataHolderSerializer implements JsonSerializer<DataHolder> {
True,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,458,"public JsonElement serialize(DataHolder src, Type typeOfSrc, JsonSerializationContext context) {"
True,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,459,JsonObject obj = new JsonObject();
True,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,460,"obj.addProperty(""myData"", src.data);"
True,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,461,return obj;
True,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,465,private static class DataHolderDeserializer implements JsonDeserializer<DataHolder> {
True,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,466,"public DataHolder deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context)"
True,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,467,throws JsonParseException {
True,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,468,JsonObject jsonObj = json.getAsJsonObject();
True,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,469,"JsonElement jsonElement = jsonObj.get(""data"");"
True,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,470,if (jsonElement == null || jsonElement.isJsonNull()) {
True,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,471,return new DataHolder(null);
True,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,473,return new DataHolder(jsonElement.getAsString());
False,gson/src/test/java/com/google/gson/functional/ObjectTest.java,gson/src/test/java/com/google/gson/functional/ObjectTest.java,19,mport java.lang.reflect.Type;
False,gson/src/test/java/com/google/gson/functional/ObjectTest.java,gson/src/test/java/com/google/gson/functional/ObjectTest.java,20,mport java.util.ArrayList;
False,gson/src/test/java/com/google/gson/functional/ObjectTest.java,gson/src/test/java/com/google/gson/functional/ObjectTest.java,21,mport java.util.Collection;
False,gson/src/test/java/com/google/gson/functional/ObjectTest.java,gson/src/test/java/com/google/gson/functional/ObjectTest.java,23,mport junit.framework.TestCase;
True,gson/src/test/java/com/google/gson/functional/ObjectTest.java,gson/src/test/java/com/google/gson/functional/ObjectTest.java,22,import com.google.gson.JsonObject;
True,gson/src/test/java/com/google/gson/functional/ObjectTest.java,gson/src/test/java/com/google/gson/functional/ObjectTest.java,33,import junit.framework.TestCase;
True,gson/src/test/java/com/google/gson/functional/ObjectTest.java,gson/src/test/java/com/google/gson/functional/ObjectTest.java,35,import java.lang.reflect.Type;
True,gson/src/test/java/com/google/gson/functional/ObjectTest.java,gson/src/test/java/com/google/gson/functional/ObjectTest.java,36,import java.util.ArrayList;
True,gson/src/test/java/com/google/gson/functional/ObjectTest.java,gson/src/test/java/com/google/gson/functional/ObjectTest.java,37,import java.util.Collection;
True,gson/src/test/java/com/google/gson/functional/ObjectTest.java,gson/src/test/java/com/google/gson/functional/ObjectTest.java,406,public void testJsonObjectSerialization() {
True,gson/src/test/java/com/google/gson/functional/ObjectTest.java,gson/src/test/java/com/google/gson/functional/ObjectTest.java,407,Gson gson = new GsonBuilder().serializeNulls().create();
True,gson/src/test/java/com/google/gson/functional/ObjectTest.java,gson/src/test/java/com/google/gson/functional/ObjectTest.java,408,JsonObject obj = new JsonObject();
True,gson/src/test/java/com/google/gson/functional/ObjectTest.java,gson/src/test/java/com/google/gson/functional/ObjectTest.java,409,String json = gson.toJson(obj);
True,gson/src/test/java/com/google/gson/functional/ObjectTest.java,gson/src/test/java/com/google/gson/functional/ObjectTest.java,410,"assertEquals(""{}"", json);"
True,gson/src/test/java/com/google/gson/functional/PrintFormattingTest.java,gson/src/test/java/com/google/gson/functional/PrintFormattingTest.java,20,import com.google.gson.GsonBuilder;
True,gson/src/test/java/com/google/gson/functional/PrintFormattingTest.java,gson/src/test/java/com/google/gson/functional/PrintFormattingTest.java,21,import com.google.gson.JsonObject;
True,gson/src/test/java/com/google/gson/functional/PrintFormattingTest.java,gson/src/test/java/com/google/gson/functional/PrintFormattingTest.java,40,private Gson gson;
True,gson/src/test/java/com/google/gson/functional/PrintFormattingTest.java,gson/src/test/java/com/google/gson/functional/PrintFormattingTest.java,42,@Override
True,gson/src/test/java/com/google/gson/functional/PrintFormattingTest.java,gson/src/test/java/com/google/gson/functional/PrintFormattingTest.java,43,protected void setUp() throws Exception {
True,gson/src/test/java/com/google/gson/functional/PrintFormattingTest.java,gson/src/test/java/com/google/gson/functional/PrintFormattingTest.java,44,super.setUp();
True,gson/src/test/java/com/google/gson/functional/PrintFormattingTest.java,gson/src/test/java/com/google/gson/functional/PrintFormattingTest.java,45,gson = new Gson();
False,gson/src/test/java/com/google/gson/functional/PrintFormattingTest.java,gson/src/test/java/com/google/gson/functional/PrintFormattingTest.java,40,son gson = new Gson();
True,gson/src/test/java/com/google/gson/functional/PrintFormattingTest.java,gson/src/test/java/com/google/gson/functional/PrintFormattingTest.java,60,public void testJsonObjectWithNullValues() {
True,gson/src/test/java/com/google/gson/functional/PrintFormattingTest.java,gson/src/test/java/com/google/gson/functional/PrintFormattingTest.java,61,JsonObject obj = new JsonObject();
True,gson/src/test/java/com/google/gson/functional/PrintFormattingTest.java,gson/src/test/java/com/google/gson/functional/PrintFormattingTest.java,62,"obj.addProperty(""field1"", ""value1"");"
True,gson/src/test/java/com/google/gson/functional/PrintFormattingTest.java,gson/src/test/java/com/google/gson/functional/PrintFormattingTest.java,63,"obj.addProperty(""field2"", (String) null);"
True,gson/src/test/java/com/google/gson/functional/PrintFormattingTest.java,gson/src/test/java/com/google/gson/functional/PrintFormattingTest.java,64,String json = gson.toJson(obj);
True,gson/src/test/java/com/google/gson/functional/PrintFormattingTest.java,gson/src/test/java/com/google/gson/functional/PrintFormattingTest.java,65,"assertTrue(json.contains(""field1""));"
True,gson/src/test/java/com/google/gson/functional/PrintFormattingTest.java,gson/src/test/java/com/google/gson/functional/PrintFormattingTest.java,66,"assertFalse(json.contains(""field2""));"
True,gson/src/test/java/com/google/gson/functional/PrintFormattingTest.java,gson/src/test/java/com/google/gson/functional/PrintFormattingTest.java,69,public void testJsonObjectWithNullValuesSerialized() {
True,gson/src/test/java/com/google/gson/functional/PrintFormattingTest.java,gson/src/test/java/com/google/gson/functional/PrintFormattingTest.java,70,gson = new GsonBuilder().serializeNulls().create();
True,gson/src/test/java/com/google/gson/functional/PrintFormattingTest.java,gson/src/test/java/com/google/gson/functional/PrintFormattingTest.java,71,JsonObject obj = new JsonObject();
True,gson/src/test/java/com/google/gson/functional/PrintFormattingTest.java,gson/src/test/java/com/google/gson/functional/PrintFormattingTest.java,72,"obj.addProperty(""field1"", ""value1"");"
True,gson/src/test/java/com/google/gson/functional/PrintFormattingTest.java,gson/src/test/java/com/google/gson/functional/PrintFormattingTest.java,73,"obj.addProperty(""field2"", (String) null);"
True,gson/src/test/java/com/google/gson/functional/PrintFormattingTest.java,gson/src/test/java/com/google/gson/functional/PrintFormattingTest.java,74,String json = gson.toJson(obj);
True,gson/src/test/java/com/google/gson/functional/PrintFormattingTest.java,gson/src/test/java/com/google/gson/functional/PrintFormattingTest.java,75,"assertTrue(json.contains(""field1""));"
True,gson/src/test/java/com/google/gson/functional/PrintFormattingTest.java,gson/src/test/java/com/google/gson/functional/PrintFormattingTest.java,76,"assertTrue(json.contains(""field2""));"
