is_addition,old_file_path,new_file_path,line_num,content
True,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,2,* Copyright (C) 2011 Google Inc.
True,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,5,* you may not use this file except in compliance with the License.
True,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,6,* You may obtain a copy of the License at
True,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,8,*      http://www.apache.org/licenses/LICENSE-2.0
True,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,13,* See the License for the specific language governing permissions and
True,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,14,* limitations under the License.
True,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,17,package com.google.gson.mini;
True,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,19,import com.google.gson.internal.$Gson$Types;
True,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,20,import com.google.gson.reflect.TypeToken;
True,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,21,import com.google.gson.stream.JsonReader;
True,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,22,import com.google.gson.stream.JsonToken;
True,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,23,import com.google.gson.stream.JsonWriter;
True,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,24,import java.io.IOException;
True,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,25,import java.lang.reflect.Array;
True,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,26,import java.lang.reflect.GenericArrayType;
True,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,27,import java.lang.reflect.Type;
True,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,28,import java.util.ArrayList;
True,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,29,import java.util.List;
True,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,32,* Adapt an array of objects.
True,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,34,final class ArrayTypeAdapter<E> extends TypeAdapter<Object> {
True,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,35,public static final Factory FACTORY = new Factory() {
True,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,36,"public <T> TypeAdapter<T> create(MiniGson context, TypeToken<T> typeToken) {"
True,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,37,Type type = typeToken.getType();
True,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,38,if (!(type instanceof GenericArrayType || type instanceof Class && ((Class<?>) type).isArray())) {
True,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,39,return null;
True,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,42,Type componentType = $Gson$Types.getArrayComponentType(type);
True,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,43,TypeAdapter<?> componentTypeAdapter = context.getAdapter(TypeToken.get(componentType));
True,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,44,"@SuppressWarnings(""unchecked"") // create() doesn't define a type parameter"
True,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,45,TypeAdapter<T> result = new ArrayTypeAdapter(
True,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,46,"componentTypeAdapter, $Gson$Types.getRawType(componentType));"
True,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,47,return result;
True,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,51,private final Class<E> componentType;
True,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,52,private final TypeAdapter<E> componentTypeAdapter;
True,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,54,"public ArrayTypeAdapter(TypeAdapter<E> componentTypeAdapter, Class<E> componentType) {"
True,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,55,this.componentTypeAdapter = componentTypeAdapter;
True,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,56,this.componentType = componentType;
True,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,59,public Object read(JsonReader reader) throws IOException {
True,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,60,if (reader.peek() == JsonToken.NULL) {
True,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,61,reader.nextNull(); // TODO: does this belong here?
True,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,62,return null;
True,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,65,List<E> list = new ArrayList<E>();
True,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,66,reader.beginArray();
True,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,67,while (reader.hasNext()) {
True,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,68,E instance = componentTypeAdapter.read(reader);
True,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,69,list.add(instance);
True,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,71,reader.endArray();
True,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,72,"Object array = Array.newInstance(componentType, list.size());"
True,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,73,for (int i = 0; i < list.size(); i++) {
True,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,74,"Array.set(array, i, list.get(i));"
True,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,76,return array;
True,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,79,"@Override public void write(JsonWriter writer, Object array) throws IOException {"
True,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,80,if (array == null) {
True,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,81,writer.nullValue(); // TODO: better policy here?
True,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,82,return;
True,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,85,writer.beginArray();
True,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,86,"for (int i = 0, length = Array.getLength(array); i < length; i++) {"
True,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,87,"final E value = (E) Array.get(array, i);"
True,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,88,"componentTypeAdapter.write(writer, value);"
True,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,extras/src/main/java/com/google/gson/mini/ArrayTypeAdapter.java,90,writer.endArray();
False,extras/src/main/java/com/google/gson/mini/CollectionTypeAdapter.java,extras/src/main/java/com/google/gson/mini/CollectionTypeAdapter.java,70,"SuppressWarnings(""unchecked"") // we don't define a type parameter for the element type"
True,extras/src/main/java/com/google/gson/mini/CollectionTypeAdapter.java,extras/src/main/java/com/google/gson/mini/CollectionTypeAdapter.java,70,"@SuppressWarnings(""unchecked"") // create() doesn't define a type parameter"
False,extras/src/main/java/com/google/gson/mini/MiniGson.java,extras/src/main/java/com/google/gson/mini/MiniGson.java,42,actories.add(MapTypeAdapter.FACTORY);
True,extras/src/main/java/com/google/gson/mini/MiniGson.java,extras/src/main/java/com/google/gson/mini/MiniGson.java,42,factories.add(StringToValueMapTypeAdapter.FACTORY);
True,extras/src/main/java/com/google/gson/mini/MiniGson.java,extras/src/main/java/com/google/gson/mini/MiniGson.java,43,factories.add(ArrayTypeAdapter.FACTORY);
False,extras/src/main/java/com/google/gson/mini/MapTypeAdapter.java,extras/src/main/java/com/google/gson/mini/StringToValueMapTypeAdapter.java,32, Adapt a homogeneous collection of objects.
True,extras/src/main/java/com/google/gson/mini/MapTypeAdapter.java,extras/src/main/java/com/google/gson/mini/StringToValueMapTypeAdapter.java,32,* Adapt a map whose keys are strings.
False,extras/src/main/java/com/google/gson/mini/MapTypeAdapter.java,extras/src/main/java/com/google/gson/mini/StringToValueMapTypeAdapter.java,34,"inal class MapTypeAdapter<V> extends TypeAdapter<Map<String, V>> {"
True,extras/src/main/java/com/google/gson/mini/MapTypeAdapter.java,extras/src/main/java/com/google/gson/mini/StringToValueMapTypeAdapter.java,34,"final class StringToValueMapTypeAdapter<V> extends TypeAdapter<Map<String, V>> {"
False,extras/src/main/java/com/google/gson/mini/MapTypeAdapter.java,extras/src/main/java/com/google/gson/mini/StringToValueMapTypeAdapter.java,49,eturn null; // TODO: return an array-style map adapter
True,extras/src/main/java/com/google/gson/mini/MapTypeAdapter.java,extras/src/main/java/com/google/gson/mini/StringToValueMapTypeAdapter.java,49,return null;
False,extras/src/main/java/com/google/gson/mini/MapTypeAdapter.java,extras/src/main/java/com/google/gson/mini/StringToValueMapTypeAdapter.java,53,lass<?> constructorType;
False,extras/src/main/java/com/google/gson/mini/MapTypeAdapter.java,extras/src/main/java/com/google/gson/mini/StringToValueMapTypeAdapter.java,55,f (rawType == Map.class) {
False,extras/src/main/java/com/google/gson/mini/MapTypeAdapter.java,extras/src/main/java/com/google/gson/mini/StringToValueMapTypeAdapter.java,56,onstructorType = LinkedHashMap.class;
False,extras/src/main/java/com/google/gson/mini/MapTypeAdapter.java,extras/src/main/java/com/google/gson/mini/StringToValueMapTypeAdapter.java,57, else {
False,extras/src/main/java/com/google/gson/mini/MapTypeAdapter.java,extras/src/main/java/com/google/gson/mini/StringToValueMapTypeAdapter.java,58,onstructorType = rawType;
True,extras/src/main/java/com/google/gson/mini/MapTypeAdapter.java,extras/src/main/java/com/google/gson/mini/StringToValueMapTypeAdapter.java,55,Class<?> constructorType = (rawType == Map.class) ? LinkedHashMap.class : rawType;
False,extras/src/main/java/com/google/gson/mini/MapTypeAdapter.java,extras/src/main/java/com/google/gson/mini/StringToValueMapTypeAdapter.java,69,"ypeAdapter<T> result = new MapTypeAdapter(valueAdapter, constructor);"
True,extras/src/main/java/com/google/gson/mini/MapTypeAdapter.java,extras/src/main/java/com/google/gson/mini/StringToValueMapTypeAdapter.java,62,"TypeAdapter<T> result = new StringToValueMapTypeAdapter(valueAdapter, constructor);"
False,extras/src/main/java/com/google/gson/mini/MapTypeAdapter.java,extras/src/main/java/com/google/gson/mini/StringToValueMapTypeAdapter.java,77,"ublic MapTypeAdapter(TypeAdapter<V> valueTypeAdapter,"
True,extras/src/main/java/com/google/gson/mini/MapTypeAdapter.java,extras/src/main/java/com/google/gson/mini/StringToValueMapTypeAdapter.java,70,"public StringToValueMapTypeAdapter(TypeAdapter<V> valueTypeAdapter,"
True,extras/src/test/java/com/google/gson/mini/MiniGsonTest.java,extras/src/test/java/com/google/gson/mini/MiniGsonTest.java,121,public void testSerialize1dArray() throws IOException {
True,extras/src/test/java/com/google/gson/mini/MiniGsonTest.java,extras/src/test/java/com/google/gson/mini/MiniGsonTest.java,122,TypeAdapter<double[]> arrayAdapter = miniGson.getAdapter(new TypeToken<double[]>() {});
True,extras/src/test/java/com/google/gson/mini/MiniGsonTest.java,extras/src/test/java/com/google/gson/mini/MiniGsonTest.java,123,"assertEquals(""[1.0,2.0,3.0]"", arrayAdapter.toJson(new double[]{1.0, 2.0, 3.0}));"
True,extras/src/test/java/com/google/gson/mini/MiniGsonTest.java,extras/src/test/java/com/google/gson/mini/MiniGsonTest.java,126,public void testDeserialize1dArray() throws IOException {
True,extras/src/test/java/com/google/gson/mini/MiniGsonTest.java,extras/src/test/java/com/google/gson/mini/MiniGsonTest.java,127,TypeAdapter<double[]> arrayAdapter = miniGson.getAdapter(new TypeToken<double[]>() {});
True,extras/src/test/java/com/google/gson/mini/MiniGsonTest.java,extras/src/test/java/com/google/gson/mini/MiniGsonTest.java,128,"double[] array = arrayAdapter.fromJson(""[1.0,2.0,3.0]"");"
True,extras/src/test/java/com/google/gson/mini/MiniGsonTest.java,extras/src/test/java/com/google/gson/mini/MiniGsonTest.java,129,"assertTrue(Arrays.toString(array), Arrays.equals(new double[]{1.0, 2.0, 3.0}, array));"
True,extras/src/test/java/com/google/gson/mini/MiniGsonTest.java,extras/src/test/java/com/google/gson/mini/MiniGsonTest.java,132,public void testSerialize2dArray() throws IOException {
True,extras/src/test/java/com/google/gson/mini/MiniGsonTest.java,extras/src/test/java/com/google/gson/mini/MiniGsonTest.java,133,TypeAdapter<double[][]> arrayAdapter = miniGson.getAdapter(new TypeToken<double[][]>() {});
True,extras/src/test/java/com/google/gson/mini/MiniGsonTest.java,extras/src/test/java/com/google/gson/mini/MiniGsonTest.java,134,"double[][] array = { {1.0, 2.0 }, { 3.0 } };"
True,extras/src/test/java/com/google/gson/mini/MiniGsonTest.java,extras/src/test/java/com/google/gson/mini/MiniGsonTest.java,135,"assertEquals(""[[1.0,2.0],[3.0]]"", arrayAdapter.toJson(array));"
True,extras/src/test/java/com/google/gson/mini/MiniGsonTest.java,extras/src/test/java/com/google/gson/mini/MiniGsonTest.java,138,public void testDeserialize2dArray() throws IOException {
True,extras/src/test/java/com/google/gson/mini/MiniGsonTest.java,extras/src/test/java/com/google/gson/mini/MiniGsonTest.java,139,TypeAdapter<double[][]> arrayAdapter = miniGson.getAdapter(new TypeToken<double[][]>() {});
True,extras/src/test/java/com/google/gson/mini/MiniGsonTest.java,extras/src/test/java/com/google/gson/mini/MiniGsonTest.java,140,"double[][] array = arrayAdapter.fromJson(""[[1.0,2.0],[3.0]]"");"
True,extras/src/test/java/com/google/gson/mini/MiniGsonTest.java,extras/src/test/java/com/google/gson/mini/MiniGsonTest.java,141,"double[][] expected = { {1.0, 2.0 }, { 3.0 } };"
True,extras/src/test/java/com/google/gson/mini/MiniGsonTest.java,extras/src/test/java/com/google/gson/mini/MiniGsonTest.java,142,"assertTrue(Arrays.toString(array), Arrays.deepEquals(expected, array));"
