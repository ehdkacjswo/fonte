is_addition,old_file_path,new_file_path,line_num,content
False,gson/src/main/java/com/google/gson/TypeAdapter.java,gson/src/main/java/com/google/gson/TypeAdapter.java,79, to the stream. If your {@code Gson} instance has been configured to {@link
False,gson/src/main/java/com/google/gson/TypeAdapter.java,gson/src/main/java/com/google/gson/TypeAdapter.java,80," GsonBuilder#serializeNulls()}, these will be written to the final document."
False,gson/src/main/java/com/google/gson/TypeAdapter.java,gson/src/main/java/com/google/gson/TypeAdapter.java,81, Otherwise the value (and the corresponding name when writing to a JSON
False,gson/src/main/java/com/google/gson/TypeAdapter.java,gson/src/main/java/com/google/gson/TypeAdapter.java,82, object) will be omitted automatically. In either case your type adapter must
False,gson/src/main/java/com/google/gson/TypeAdapter.java,gson/src/main/java/com/google/gson/TypeAdapter.java,83, handle null.
True,gson/src/main/java/com/google/gson/TypeAdapter.java,gson/src/main/java/com/google/gson/TypeAdapter.java,79,"* to the stream. Alternatively, they should use {@link #nullSafe()} method while"
True,gson/src/main/java/com/google/gson/TypeAdapter.java,gson/src/main/java/com/google/gson/TypeAdapter.java,80,* registering the type adapter with Gson. If your {@code Gson} instance
True,gson/src/main/java/com/google/gson/TypeAdapter.java,gson/src/main/java/com/google/gson/TypeAdapter.java,81,"* has been configured to {@link GsonBuilder#serializeNulls()}, these nulls will be"
True,gson/src/main/java/com/google/gson/TypeAdapter.java,gson/src/main/java/com/google/gson/TypeAdapter.java,82,* written to the final document. Otherwise the value (and the corresponding name
True,gson/src/main/java/com/google/gson/TypeAdapter.java,gson/src/main/java/com/google/gson/TypeAdapter.java,83,* when writing to a JSON object) will be omitted automatically. In either case
True,gson/src/main/java/com/google/gson/TypeAdapter.java,gson/src/main/java/com/google/gson/TypeAdapter.java,84,* your type adapter must handle null.
True,gson/src/main/java/com/google/gson/TypeAdapter.java,gson/src/main/java/com/google/gson/TypeAdapter.java,91,"*   // if PointAdapter didn't check for nulls in its read/write methods, you should instead use"
True,gson/src/main/java/com/google/gson/TypeAdapter.java,gson/src/main/java/com/google/gson/TypeAdapter.java,92,"*   // builder.registerTypeAdapter(Point.class, new PointAdapter().nullSafe());"
False,gson/src/main/java/com/google/gson/TypeAdapter.java,gson/src/main/java/com/google/gson/TypeAdapter.java,95, <p>Retrieve a type adapter from a {@code Gson} instance to deserialize a JSON
False,gson/src/main/java/com/google/gson/TypeAdapter.java,gson/src/main/java/com/google/gson/TypeAdapter.java,96, document into a Java object: <pre>   {@code
True,gson/src/main/java/com/google/gson/TypeAdapter.java,gson/src/main/java/com/google/gson/TypeAdapter.java,98,* <p>A type adapter registered with Gson is automatically invoked while serializing
True,gson/src/main/java/com/google/gson/TypeAdapter.java,gson/src/main/java/com/google/gson/TypeAdapter.java,99,"* or deserializing JSON. However, you can also use type adapters directly to serialize"
True,gson/src/main/java/com/google/gson/TypeAdapter.java,gson/src/main/java/com/google/gson/TypeAdapter.java,100,* and deserialize JSON. Here is an example for deserialization: <pre>   {@code
