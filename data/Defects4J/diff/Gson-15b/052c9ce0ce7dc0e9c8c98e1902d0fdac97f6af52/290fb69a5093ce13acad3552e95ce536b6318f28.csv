is_addition,old_file_path,new_file_path,line_num,content
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,30,import com.google.gson.internal.bind.JsonElementWriter;
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,403,"/ Serialize 'src' to JSON, then deserialize that to a JSON tree."
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,404,ypeAdapter adapter = miniGson.getAdapter(TypeToken.get(typeOfSrc));
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,405,eturn adapter.toJsonElement(src);
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,404,JsonElementWriter writer = new JsonElementWriter();
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,405,"toJson(src, typeOfSrc, writer);"
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,406,return writer.get();
False,gson/src/test/java/com/google/gson/functional/JsonTreeTest.java,gson/src/test/java/com/google/gson/functional/JsonTreeTest.java,3,mport java.util.Map;
False,gson/src/test/java/com/google/gson/functional/JsonTreeTest.java,gson/src/test/java/com/google/gson/functional/JsonTreeTest.java,4,mport java.util.Set;
False,gson/src/test/java/com/google/gson/functional/JsonTreeTest.java,gson/src/test/java/com/google/gson/functional/JsonTreeTest.java,5,mport java.util.Map.Entry;
False,gson/src/test/java/com/google/gson/functional/JsonTreeTest.java,gson/src/test/java/com/google/gson/functional/JsonTreeTest.java,7,mport junit.framework.TestCase;
True,gson/src/test/java/com/google/gson/functional/JsonTreeTest.java,gson/src/test/java/com/google/gson/functional/JsonTreeTest.java,8,import java.util.Map;
True,gson/src/test/java/com/google/gson/functional/JsonTreeTest.java,gson/src/test/java/com/google/gson/functional/JsonTreeTest.java,9,import java.util.Map.Entry;
True,gson/src/test/java/com/google/gson/functional/JsonTreeTest.java,gson/src/test/java/com/google/gson/functional/JsonTreeTest.java,10,import java.util.Set;
True,gson/src/test/java/com/google/gson/functional/JsonTreeTest.java,gson/src/test/java/com/google/gson/functional/JsonTreeTest.java,11,import junit.framework.TestCase;
True,gson/src/test/java/com/google/gson/functional/JsonTreeTest.java,gson/src/test/java/com/google/gson/functional/JsonTreeTest.java,63,public void testJsonTreeNull() {
True,gson/src/test/java/com/google/gson/functional/JsonTreeTest.java,gson/src/test/java/com/google/gson/functional/JsonTreeTest.java,64,"BagOfPrimitives bag = new BagOfPrimitives(10L, 5, false, null);"
True,gson/src/test/java/com/google/gson/functional/JsonTreeTest.java,gson/src/test/java/com/google/gson/functional/JsonTreeTest.java,65,"JsonObject jsonElement = (JsonObject) gson.toJsonTree(bag, BagOfPrimitives.class);"
True,gson/src/test/java/com/google/gson/functional/JsonTreeTest.java,gson/src/test/java/com/google/gson/functional/JsonTreeTest.java,66,"assertFalse(jsonElement.has(""stringValue""));"
