is_addition,old_file_path,new_file_path,line_num,content
True,gson/src/test/java/com/google/gson/functional/ObjectTest.java,gson/src/test/java/com/google/gson/functional/ObjectTest.java,20,import com.google.gson.GsonBuilder;
True,gson/src/test/java/com/google/gson/functional/ObjectTest.java,gson/src/test/java/com/google/gson/functional/ObjectTest.java,21,import com.google.gson.InstanceCreator;
True,gson/src/test/java/com/google/gson/functional/ObjectTest.java,gson/src/test/java/com/google/gson/functional/ObjectTest.java,37,import java.lang.reflect.Type;
True,gson/src/test/java/com/google/gson/functional/ObjectTest.java,gson/src/test/java/com/google/gson/functional/ObjectTest.java,364,public void testInnerClassSerialization() {
True,gson/src/test/java/com/google/gson/functional/ObjectTest.java,gson/src/test/java/com/google/gson/functional/ObjectTest.java,365,Parent p = new Parent();
True,gson/src/test/java/com/google/gson/functional/ObjectTest.java,gson/src/test/java/com/google/gson/functional/ObjectTest.java,366,Parent.Child c = p.new Child();
True,gson/src/test/java/com/google/gson/functional/ObjectTest.java,gson/src/test/java/com/google/gson/functional/ObjectTest.java,367,String json = gson.toJson(c);
True,gson/src/test/java/com/google/gson/functional/ObjectTest.java,gson/src/test/java/com/google/gson/functional/ObjectTest.java,368,"assertTrue(json.contains(""value2""));"
True,gson/src/test/java/com/google/gson/functional/ObjectTest.java,gson/src/test/java/com/google/gson/functional/ObjectTest.java,369,"assertFalse(json.contains(""value1""));"
True,gson/src/test/java/com/google/gson/functional/ObjectTest.java,gson/src/test/java/com/google/gson/functional/ObjectTest.java,372,public void testInnerClassDeserialization() {
True,gson/src/test/java/com/google/gson/functional/ObjectTest.java,gson/src/test/java/com/google/gson/functional/ObjectTest.java,373,final Parent p = new Parent();
True,gson/src/test/java/com/google/gson/functional/ObjectTest.java,gson/src/test/java/com/google/gson/functional/ObjectTest.java,374,"Gson gson = new GsonBuilder().registerTypeAdapter(Parent.Child.class, new InstanceCreator<Parent.Child>() {"
True,gson/src/test/java/com/google/gson/functional/ObjectTest.java,gson/src/test/java/com/google/gson/functional/ObjectTest.java,375,public Parent.Child createInstance(Type type) {
True,gson/src/test/java/com/google/gson/functional/ObjectTest.java,gson/src/test/java/com/google/gson/functional/ObjectTest.java,376,return p.new Child();
True,gson/src/test/java/com/google/gson/functional/ObjectTest.java,gson/src/test/java/com/google/gson/functional/ObjectTest.java,378,}).create();
True,gson/src/test/java/com/google/gson/functional/ObjectTest.java,gson/src/test/java/com/google/gson/functional/ObjectTest.java,379,"String json = ""{'value2':3}"";"
True,gson/src/test/java/com/google/gson/functional/ObjectTest.java,gson/src/test/java/com/google/gson/functional/ObjectTest.java,380,"Parent.Child c = gson.fromJson(json, Parent.Child.class);"
True,gson/src/test/java/com/google/gson/functional/ObjectTest.java,gson/src/test/java/com/google/gson/functional/ObjectTest.java,381,"assertEquals(3, c.value2);"
True,gson/src/test/java/com/google/gson/functional/ObjectTest.java,gson/src/test/java/com/google/gson/functional/ObjectTest.java,384,private static class Parent {
True,gson/src/test/java/com/google/gson/functional/ObjectTest.java,gson/src/test/java/com/google/gson/functional/ObjectTest.java,385,int value1 = 1;
True,gson/src/test/java/com/google/gson/functional/ObjectTest.java,gson/src/test/java/com/google/gson/functional/ObjectTest.java,386,private class Child {
True,gson/src/test/java/com/google/gson/functional/ObjectTest.java,gson/src/test/java/com/google/gson/functional/ObjectTest.java,387,int value2 = 2;
