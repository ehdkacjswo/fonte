is_addition,old_file_path,new_file_path,line_num,content
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,137,private final JsonAdapterAnnotationTypeAdapterFactory jsonAdapterFactory;
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,248,actories.add(new JsonAdapterAnnotationTypeAdapterFactory(constructorConstructor));
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,249,this.jsonAdapterFactory = new JsonAdapterAnnotationTypeAdapterFactory(constructorConstructor);
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,250,factories.add(jsonAdapterFactory);
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,251,"onstructorConstructor, fieldNamingStrategy, excluder));"
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,253,"constructorConstructor, fieldNamingStrategy, excluder, jsonAdapterFactory));"
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,489,oolean skipPastFound = false;
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,490,/ Skip past if and only if the specified factory is present in the factories.
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,491,/ This is useful because the factories created through JsonAdapter annotations are not
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,492,/ registered in this list.
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,493,f (!factories.contains(skipPast)) skipPastFound = true;
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,491,"// Hack. If the skipPast factory isn't registered, assume the factory is being requested via"
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,492,// our @JsonAdapter annotation.
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,493,if (!factories.contains(skipPast)) {
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,494,skipPast = jsonAdapterFactory;
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,497,boolean skipPastFound = false;
True,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,20,import com.google.gson.JsonDeserializer;
True,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,21,import com.google.gson.JsonSerializer;
False,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,43,sonAdapter annotation = targetType.getRawType().getAnnotation(JsonAdapter.class);
True,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,44,Class<? super T> rawType = targetType.getRawType();
True,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,45,JsonAdapter annotation = rawType.getAnnotation(JsonAdapter.class);
False,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,50,"SuppressWarnings(""unchecked"") // Casts guarded by conditionals."
False,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,51,"tatic TypeAdapter<?> getTypeAdapter(ConstructorConstructor constructorConstructor, Gson gson,"
False,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,52,"ypeToken<?> fieldType, JsonAdapter annotation) {"
False,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,53,lass<?> value = annotation.value();
True,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,52,"@SuppressWarnings({ ""unchecked"", ""rawtypes"" }) // Casts guarded by conditionals."
True,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,53,"TypeAdapter<?> getTypeAdapter(ConstructorConstructor constructorConstructor, Gson gson,"
True,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,54,"TypeToken<?> type, JsonAdapter annotation) {"
True,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,55,Object instance = constructorConstructor.get(TypeToken.get(annotation.value())).construct();
False,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,55,f (TypeAdapter.class.isAssignableFrom(value)) {
False,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,56,lass<TypeAdapter<?>> typeAdapterClass = (Class<TypeAdapter<?>>) value;
False,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,57,ypeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterClass)).construct();
False,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,58, else if (TypeAdapterFactory.class.isAssignableFrom(value)) {
False,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,59,lass<TypeAdapterFactory> typeAdapterFactory = (Class<TypeAdapterFactory>) value;
False,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,60,ypeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterFactory))
False,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,61,construct()
False,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,62,"create(gson, fieldType);"
True,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,58,if (instance instanceof TypeAdapter) {
True,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,59,typeAdapter = (TypeAdapter<?>) instance;
True,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,60,} else if (instance instanceof TypeAdapterFactory) {
True,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,61,"typeAdapter = ((TypeAdapterFactory) instance).create(gson, type);"
True,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,62,} else if (instance instanceof JsonSerializer || instance instanceof JsonDeserializer) {
True,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,63,JsonSerializer<?> serializer = instance instanceof JsonSerializer
True,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,64,? (JsonSerializer) instance
True,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,65,: null;
True,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,66,JsonDeserializer<?> deserializer = instance instanceof JsonDeserializer
True,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,67,? (JsonDeserializer) instance
True,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,68,: null;
True,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,69,"typeAdapter = new TreeTypeAdapter(serializer, deserializer, gson, type, null);"
False,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,65,"@JsonAdapter value must be TypeAdapter or TypeAdapterFactory reference."");"
True,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,72,"""@JsonAdapter value must be TypeAdapter, TypeAdapterFactory, """
True,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,73,"+ ""JsonSerializer or JsonDeserializer reference."");"
False,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,45,mport static com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory.getTypeAdapter;
True,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,51,private final JsonAdapterAnnotationTypeAdapterFactory jsonAdapterFactory;
False,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,56,"ieldNamingStrategy fieldNamingPolicy, Excluder excluder) {"
True,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,54,"FieldNamingStrategy fieldNamingPolicy, Excluder excluder,"
True,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,55,JsonAdapterAnnotationTypeAdapterFactory jsonAdapterFactory) {
True,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,59,this.jsonAdapterFactory = jsonAdapterFactory;
False,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,111,"apped = getTypeAdapter(constructorConstructor, context, fieldType, annotation);"
True,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,111,mapped = jsonAdapterFactory.getTypeAdapter(
True,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,112,"constructorConstructor, context, fieldType, annotation);"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,19,import java.io.IOException;
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,20,import java.util.Arrays;
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,21,import java.util.List;
False,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,27,mport java.io.IOException;
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,276,public void testFieldAnnotationWorksForParameterizedType() {
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,277,Gson gson = new Gson();
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,278,"String json = gson.toJson(new Gizmo2(Arrays.asList(new Part(""Part""))));"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,279,"assertEquals(""{\""part\"":\""GizmoPartTypeAdapterFactory\""}"", json);"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,280,"Gizmo2 computer = gson.fromJson(""{'part':'Part'}"", Gizmo2.class);"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,281,"assertEquals(""GizmoPartTypeAdapterFactory"", computer.part.get(0).name);"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,284,private static final class Gizmo2 {
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,285,@JsonAdapter(Gizmo2PartTypeAdapterFactory.class)
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,286,List<Part> part;
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,287,Gizmo2(List<Part> part) {
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,288,this.part = part;
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,292,private static class Gizmo2PartTypeAdapterFactory implements TypeAdapterFactory {
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,293,"@Override public <T> TypeAdapter<T> create(Gson gson, final TypeToken<T> type) {"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,294,return new TypeAdapter<T>() {
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,295,"@Override public void write(JsonWriter out, T value) throws IOException {"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,296,"out.value(""GizmoPartTypeAdapterFactory"");"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,298,"@SuppressWarnings(""unchecked"")"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,299,@Override public T read(JsonReader in) throws IOException {
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,300,in.nextString();
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,301,"return (T) Arrays.asList(new Part(""GizmoPartTypeAdapterFactory""));"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,2,* Copyright (C) 2016 Google Inc.
True,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,5,* you may not use this file except in compliance with the License.
True,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,6,* You may obtain a copy of the License at
True,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,8,*      http://www.apache.org/licenses/LICENSE-2.0
True,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,13,* See the License for the specific language governing permissions and
True,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,14,* limitations under the License.
True,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,17,package com.google.gson.functional;
True,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,19,import java.lang.reflect.Type;
True,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,21,import com.google.gson.Gson;
True,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,22,import com.google.gson.JsonDeserializationContext;
True,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,23,import com.google.gson.JsonDeserializer;
True,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,24,import com.google.gson.JsonElement;
True,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,25,import com.google.gson.JsonParseException;
True,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,26,import com.google.gson.JsonPrimitive;
True,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,27,import com.google.gson.JsonSerializationContext;
True,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,28,import com.google.gson.JsonSerializer;
True,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,29,import com.google.gson.annotations.JsonAdapter;
True,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,31,import junit.framework.TestCase;
True,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,34,* Functional tests for the {@link JsonAdapter} annotation on fields where the value is of
True,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,35,* type {@link JsonSerializer} or {@link JsonDeserializer}.
True,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,37,public final class JsonAdapterSerializerDeserializerTest extends TestCase {
True,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,39,public void testJsonSerializerDeserializerBasedJsonAdapterOnFields() {
True,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,40,Gson gson = new Gson();
True,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,41,"String json = gson.toJson(new Computer(new User(""Inderjeet Singh""), null, new User(""Jesse Wilson"")));"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,42,"assertEquals(""{\""user1\"":\""UserSerializer\"",\""user3\"":\""UserSerializerDeserializer\""}"", json);"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,43,"Computer computer = gson.fromJson(""{'user2':'Jesse Wilson','user3':'Jake Wharton'}"", Computer.class);"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,44,"assertEquals(""UserSerializer"", computer.user2.name);"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,45,"assertEquals(""UserSerializerDeserializer"", computer.user3.name);"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,48,private static final class Computer {
True,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,49,@JsonAdapter(UserSerializer.class) final User user1;
True,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,50,@JsonAdapter(UserDeserializer.class) final User user2;
True,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,51,@JsonAdapter(UserSerializerDeserializer.class) final User user3;
True,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,52,"Computer(User user1, User user2, User user3) {"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,53,this.user1 = user1;
True,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,54,this.user2 = user2;
True,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,55,this.user3 = user3;
True,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,59,private static final class User {
True,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,60,public final String name;
True,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,61,private User(String name) {
True,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,62,this.name = name;
True,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,66,private static final class UserSerializer implements JsonSerializer<User> {
True,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,67,@Override
True,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,68,"public JsonElement serialize(User src, Type typeOfSrc, JsonSerializationContext context) {"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,69,"return new JsonPrimitive(""UserSerializer"");"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,73,private static final class UserDeserializer implements JsonDeserializer<User> {
True,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,74,@Override
True,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,75,"public User deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context)"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,76,throws JsonParseException {
True,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,77,"return new User(""UserSerializer"");"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,81,"private static final class UserSerializerDeserializer implements JsonSerializer<User>, JsonDeserializer<User> {"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,82,@Override
True,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,83,"public JsonElement serialize(User src, Type typeOfSrc, JsonSerializationContext context) {"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,84,"return new JsonPrimitive(""UserSerializerDeserializer"");"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,86,@Override
True,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,87,"public User deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context)"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,88,throws JsonParseException {
True,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,89,"return new User(""UserSerializerDeserializer"");"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,93,public void testJsonSerializerDeserializerBasedJsonAdapterOnClass() {
True,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,94,Gson gson = new Gson();
True,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,95,"String json = gson.toJson(new Computer2(new User2(""Inderjeet Singh"")));"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,96,"assertEquals(""{\""user\"":\""UserSerializerDeserializer2\""}"", json);"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,97,"Computer2 computer = gson.fromJson(""{'user':'Inderjeet Singh'}"", Computer2.class);"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,98,"assertEquals(""UserSerializerDeserializer2"", computer.user.name);"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,101,private static final class Computer2 {
True,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,102,final User2 user;
True,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,103,Computer2(User2 user) {
True,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,104,this.user = user;
True,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,108,@JsonAdapter(UserSerializerDeserializer2.class)
True,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,109,private static final class User2 {
True,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,110,public final String name;
True,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,111,private User2(String name) {
True,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,112,this.name = name;
True,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,116,"private static final class UserSerializerDeserializer2 implements JsonSerializer<User2>, JsonDeserializer<User2> {"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,117,@Override
True,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,118,"public JsonElement serialize(User2 src, Type typeOfSrc, JsonSerializationContext context) {"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,119,"return new JsonPrimitive(""UserSerializerDeserializer2"");"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,121,@Override
True,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,122,"public User2 deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context)"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,123,throws JsonParseException {
True,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,124,"return new User2(""UserSerializerDeserializer2"");"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,128,public void testDifferentJsonAdaptersForGenericFieldsOfSameRawType() {
True,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,129,"Container c = new Container(""Foo"", 10);"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,130,Gson gson = new Gson();
True,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,131,String json = gson.toJson(c);
True,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,132,"assertTrue(json.contains(""\""a\"":\""BaseStringAdapter\""""));"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,133,"assertTrue(json.contains(""\""b\"":\""BaseIntegerAdapter\""""));"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,136,private static final class Container {
True,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,137,@JsonAdapter(BaseStringAdapter.class) Base<String> a;
True,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,138,@JsonAdapter(BaseIntegerAdapter.class) Base<Integer> b;
True,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,139,"Container(String a, int b) {"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,140,this.a = new Base<String>(a);
True,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,141,this.b = new Base<Integer>(b);
True,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,145,private static final class Base<T> {
True,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,146,"@SuppressWarnings(""unused"")"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,147,T value;
True,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,148,Base(T value) {
True,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,149,this.value = value;
True,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,153,private static final class BaseStringAdapter implements JsonSerializer<Base<String>> {
True,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,154,"@Override public JsonElement serialize(Base<String> src, Type typeOfSrc, JsonSerializationContext context) {"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,155,"return new JsonPrimitive(""BaseStringAdapter"");"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,159,private static final class BaseIntegerAdapter implements JsonSerializer<Base<Integer>> {
True,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,160,"@Override public JsonElement serialize(Base<Integer> src, Type typeOfSrc, JsonSerializationContext context) {"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterSerializerDeserializerTest.java,161,"return new JsonPrimitive(""BaseIntegerAdapter"");"
False,gson/src/test/java/com/google/gson/functional/RuntimeTypeAdapterFactoryFunctionalTest.java,gson/src/test/java/com/google/gson/functional/RuntimeTypeAdapterFactoryFunctionalTest.java,48,ublic void testSubclassesAutomaticallySerialzed() throws Exception {
True,gson/src/test/java/com/google/gson/functional/RuntimeTypeAdapterFactoryFunctionalTest.java,gson/src/test/java/com/google/gson/functional/RuntimeTypeAdapterFactoryFunctionalTest.java,48,public void testSubclassesAutomaticallySerialized() throws Exception {
