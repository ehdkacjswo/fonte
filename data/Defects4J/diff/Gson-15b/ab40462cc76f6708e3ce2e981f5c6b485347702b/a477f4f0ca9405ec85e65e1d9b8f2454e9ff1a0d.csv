is_addition,old_file_path,new_file_path,line_num,content
True,gson/src/main/java/com/google/gson/internal/UnsafeAllocator.java,gson/src/main/java/com/google/gson/internal/UnsafeAllocator.java,23,import java.lang.reflect.Modifier;
True,gson/src/main/java/com/google/gson/internal/UnsafeAllocator.java,gson/src/main/java/com/google/gson/internal/UnsafeAllocator.java,49,assertInstantiable(c);
True,gson/src/main/java/com/google/gson/internal/UnsafeAllocator.java,gson/src/main/java/com/google/gson/internal/UnsafeAllocator.java,73,assertInstantiable(c);
True,gson/src/main/java/com/google/gson/internal/UnsafeAllocator.java,gson/src/main/java/com/google/gson/internal/UnsafeAllocator.java,93,assertInstantiable(c);
True,gson/src/main/java/com/google/gson/internal/UnsafeAllocator.java,gson/src/main/java/com/google/gson/internal/UnsafeAllocator.java,110,* Check if the class can be instantiated by unsafe allocator. If the instance has interface or abstract modifiers
True,gson/src/main/java/com/google/gson/internal/UnsafeAllocator.java,gson/src/main/java/com/google/gson/internal/UnsafeAllocator.java,111,* throw an {@link java.lang.UnsupportedOperationException}
True,gson/src/main/java/com/google/gson/internal/UnsafeAllocator.java,gson/src/main/java/com/google/gson/internal/UnsafeAllocator.java,112,* @param c instance of the class to be checked
True,gson/src/main/java/com/google/gson/internal/UnsafeAllocator.java,gson/src/main/java/com/google/gson/internal/UnsafeAllocator.java,114,private static void assertInstantiable(Class<?> c) {
True,gson/src/main/java/com/google/gson/internal/UnsafeAllocator.java,gson/src/main/java/com/google/gson/internal/UnsafeAllocator.java,115,int modifiers = c.getModifiers();
True,gson/src/main/java/com/google/gson/internal/UnsafeAllocator.java,gson/src/main/java/com/google/gson/internal/UnsafeAllocator.java,116,if (Modifier.isInterface(modifiers)) {
True,gson/src/main/java/com/google/gson/internal/UnsafeAllocator.java,gson/src/main/java/com/google/gson/internal/UnsafeAllocator.java,117,"throw new UnsupportedOperationException(""Interface can't be instantiated! Interface name: "" + c.getName());"
True,gson/src/main/java/com/google/gson/internal/UnsafeAllocator.java,gson/src/main/java/com/google/gson/internal/UnsafeAllocator.java,119,if (Modifier.isAbstract(modifiers)) {
True,gson/src/main/java/com/google/gson/internal/UnsafeAllocator.java,gson/src/main/java/com/google/gson/internal/UnsafeAllocator.java,120,"throw new UnsupportedOperationException(""Abstract class can't be instantiated! Class name: "" + c.getName());"
True,gson/src/test/java/com/google/gson/internal/UnsafeAllocatorInstantiationTest.java,gson/src/test/java/com/google/gson/internal/UnsafeAllocatorInstantiationTest.java,2,* Copyright (C) 2016 Google Inc.
True,gson/src/test/java/com/google/gson/internal/UnsafeAllocatorInstantiationTest.java,gson/src/test/java/com/google/gson/internal/UnsafeAllocatorInstantiationTest.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,gson/src/test/java/com/google/gson/internal/UnsafeAllocatorInstantiationTest.java,gson/src/test/java/com/google/gson/internal/UnsafeAllocatorInstantiationTest.java,5,* you may not use this file except in compliance with the License.
True,gson/src/test/java/com/google/gson/internal/UnsafeAllocatorInstantiationTest.java,gson/src/test/java/com/google/gson/internal/UnsafeAllocatorInstantiationTest.java,6,* You may obtain a copy of the License at
True,gson/src/test/java/com/google/gson/internal/UnsafeAllocatorInstantiationTest.java,gson/src/test/java/com/google/gson/internal/UnsafeAllocatorInstantiationTest.java,8,* http://www.apache.org/licenses/LICENSE-2.0
True,gson/src/test/java/com/google/gson/internal/UnsafeAllocatorInstantiationTest.java,gson/src/test/java/com/google/gson/internal/UnsafeAllocatorInstantiationTest.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,gson/src/test/java/com/google/gson/internal/UnsafeAllocatorInstantiationTest.java,gson/src/test/java/com/google/gson/internal/UnsafeAllocatorInstantiationTest.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,gson/src/test/java/com/google/gson/internal/UnsafeAllocatorInstantiationTest.java,gson/src/test/java/com/google/gson/internal/UnsafeAllocatorInstantiationTest.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,gson/src/test/java/com/google/gson/internal/UnsafeAllocatorInstantiationTest.java,gson/src/test/java/com/google/gson/internal/UnsafeAllocatorInstantiationTest.java,13,* See the License for the specific language governing permissions and
True,gson/src/test/java/com/google/gson/internal/UnsafeAllocatorInstantiationTest.java,gson/src/test/java/com/google/gson/internal/UnsafeAllocatorInstantiationTest.java,14,* limitations under the License.
True,gson/src/test/java/com/google/gson/internal/UnsafeAllocatorInstantiationTest.java,gson/src/test/java/com/google/gson/internal/UnsafeAllocatorInstantiationTest.java,16,package com.google.gson.internal;
True,gson/src/test/java/com/google/gson/internal/UnsafeAllocatorInstantiationTest.java,gson/src/test/java/com/google/gson/internal/UnsafeAllocatorInstantiationTest.java,18,import junit.framework.TestCase;
True,gson/src/test/java/com/google/gson/internal/UnsafeAllocatorInstantiationTest.java,gson/src/test/java/com/google/gson/internal/UnsafeAllocatorInstantiationTest.java,21,* Test unsafe allocator instantiation
True,gson/src/test/java/com/google/gson/internal/UnsafeAllocatorInstantiationTest.java,gson/src/test/java/com/google/gson/internal/UnsafeAllocatorInstantiationTest.java,22,* @author Ugljesa Jovanovic
True,gson/src/test/java/com/google/gson/internal/UnsafeAllocatorInstantiationTest.java,gson/src/test/java/com/google/gson/internal/UnsafeAllocatorInstantiationTest.java,24,public final class UnsafeAllocatorInstantiationTest extends TestCase {
True,gson/src/test/java/com/google/gson/internal/UnsafeAllocatorInstantiationTest.java,gson/src/test/java/com/google/gson/internal/UnsafeAllocatorInstantiationTest.java,26,public interface Interface {
True,gson/src/test/java/com/google/gson/internal/UnsafeAllocatorInstantiationTest.java,gson/src/test/java/com/google/gson/internal/UnsafeAllocatorInstantiationTest.java,29,public static abstract class AbstractClass {
True,gson/src/test/java/com/google/gson/internal/UnsafeAllocatorInstantiationTest.java,gson/src/test/java/com/google/gson/internal/UnsafeAllocatorInstantiationTest.java,32,public static class ConcreteClass {
True,gson/src/test/java/com/google/gson/internal/UnsafeAllocatorInstantiationTest.java,gson/src/test/java/com/google/gson/internal/UnsafeAllocatorInstantiationTest.java,36,* Ensure that the {@link java.lang.UnsupportedOperationException} is thrown when  trying
True,gson/src/test/java/com/google/gson/internal/UnsafeAllocatorInstantiationTest.java,gson/src/test/java/com/google/gson/internal/UnsafeAllocatorInstantiationTest.java,37,* to instantiate an interface
True,gson/src/test/java/com/google/gson/internal/UnsafeAllocatorInstantiationTest.java,gson/src/test/java/com/google/gson/internal/UnsafeAllocatorInstantiationTest.java,39,public void testInterfaceInstantiation() {
True,gson/src/test/java/com/google/gson/internal/UnsafeAllocatorInstantiationTest.java,gson/src/test/java/com/google/gson/internal/UnsafeAllocatorInstantiationTest.java,40,UnsafeAllocator unsafeAllocator = UnsafeAllocator.create();
True,gson/src/test/java/com/google/gson/internal/UnsafeAllocatorInstantiationTest.java,gson/src/test/java/com/google/gson/internal/UnsafeAllocatorInstantiationTest.java,41,try {
True,gson/src/test/java/com/google/gson/internal/UnsafeAllocatorInstantiationTest.java,gson/src/test/java/com/google/gson/internal/UnsafeAllocatorInstantiationTest.java,42,unsafeAllocator.newInstance(Interface.class);
True,gson/src/test/java/com/google/gson/internal/UnsafeAllocatorInstantiationTest.java,gson/src/test/java/com/google/gson/internal/UnsafeAllocatorInstantiationTest.java,43,fail();
True,gson/src/test/java/com/google/gson/internal/UnsafeAllocatorInstantiationTest.java,gson/src/test/java/com/google/gson/internal/UnsafeAllocatorInstantiationTest.java,44,} catch (Exception e) {
True,gson/src/test/java/com/google/gson/internal/UnsafeAllocatorInstantiationTest.java,gson/src/test/java/com/google/gson/internal/UnsafeAllocatorInstantiationTest.java,45,"assertEquals(e.getClass(), UnsupportedOperationException.class);"
True,gson/src/test/java/com/google/gson/internal/UnsafeAllocatorInstantiationTest.java,gson/src/test/java/com/google/gson/internal/UnsafeAllocatorInstantiationTest.java,50,* Ensure that the {@link java.lang.UnsupportedOperationException} is thrown when  trying
True,gson/src/test/java/com/google/gson/internal/UnsafeAllocatorInstantiationTest.java,gson/src/test/java/com/google/gson/internal/UnsafeAllocatorInstantiationTest.java,51,* to instantiate an abstract class
True,gson/src/test/java/com/google/gson/internal/UnsafeAllocatorInstantiationTest.java,gson/src/test/java/com/google/gson/internal/UnsafeAllocatorInstantiationTest.java,53,public void testAbstractClassInstantiation() {
True,gson/src/test/java/com/google/gson/internal/UnsafeAllocatorInstantiationTest.java,gson/src/test/java/com/google/gson/internal/UnsafeAllocatorInstantiationTest.java,54,UnsafeAllocator unsafeAllocator = UnsafeAllocator.create();
True,gson/src/test/java/com/google/gson/internal/UnsafeAllocatorInstantiationTest.java,gson/src/test/java/com/google/gson/internal/UnsafeAllocatorInstantiationTest.java,55,try {
True,gson/src/test/java/com/google/gson/internal/UnsafeAllocatorInstantiationTest.java,gson/src/test/java/com/google/gson/internal/UnsafeAllocatorInstantiationTest.java,56,unsafeAllocator.newInstance(AbstractClass.class);
True,gson/src/test/java/com/google/gson/internal/UnsafeAllocatorInstantiationTest.java,gson/src/test/java/com/google/gson/internal/UnsafeAllocatorInstantiationTest.java,57,fail();
True,gson/src/test/java/com/google/gson/internal/UnsafeAllocatorInstantiationTest.java,gson/src/test/java/com/google/gson/internal/UnsafeAllocatorInstantiationTest.java,58,} catch (Exception e) {
True,gson/src/test/java/com/google/gson/internal/UnsafeAllocatorInstantiationTest.java,gson/src/test/java/com/google/gson/internal/UnsafeAllocatorInstantiationTest.java,59,"assertEquals(e.getClass(), UnsupportedOperationException.class);"
True,gson/src/test/java/com/google/gson/internal/UnsafeAllocatorInstantiationTest.java,gson/src/test/java/com/google/gson/internal/UnsafeAllocatorInstantiationTest.java,64,* Ensure that no exception is thrown when trying to instantiate a concrete class
True,gson/src/test/java/com/google/gson/internal/UnsafeAllocatorInstantiationTest.java,gson/src/test/java/com/google/gson/internal/UnsafeAllocatorInstantiationTest.java,66,public void testConcreteClassInstantiation() {
True,gson/src/test/java/com/google/gson/internal/UnsafeAllocatorInstantiationTest.java,gson/src/test/java/com/google/gson/internal/UnsafeAllocatorInstantiationTest.java,67,UnsafeAllocator unsafeAllocator = UnsafeAllocator.create();
True,gson/src/test/java/com/google/gson/internal/UnsafeAllocatorInstantiationTest.java,gson/src/test/java/com/google/gson/internal/UnsafeAllocatorInstantiationTest.java,68,try {
True,gson/src/test/java/com/google/gson/internal/UnsafeAllocatorInstantiationTest.java,gson/src/test/java/com/google/gson/internal/UnsafeAllocatorInstantiationTest.java,69,unsafeAllocator.newInstance(ConcreteClass.class);
True,gson/src/test/java/com/google/gson/internal/UnsafeAllocatorInstantiationTest.java,gson/src/test/java/com/google/gson/internal/UnsafeAllocatorInstantiationTest.java,70,} catch (Exception e) {
True,gson/src/test/java/com/google/gson/internal/UnsafeAllocatorInstantiationTest.java,gson/src/test/java/com/google/gson/internal/UnsafeAllocatorInstantiationTest.java,71,fail();
