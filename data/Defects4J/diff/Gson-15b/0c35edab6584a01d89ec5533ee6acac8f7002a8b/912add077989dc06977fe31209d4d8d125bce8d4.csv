is_addition,old_file_path,new_file_path,line_num,content
False,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,175,"or (Map.Entry<Type, T> entry : map.entrySet()) {"
False,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,176,"opy.register(entry.getKey(), entry.getValue());"
False,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,178,"or (Pair<Class<?>, T> entry : typeHierarchyList) {"
False,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,179,opy.registerForTypeHierarchy(entry);
True,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,175,"// Instead of individually registering entries in the map, make an efficient copy"
True,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,176,// of the list and map
True,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,177,copy.map.putAll(map);
True,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,gson/src/main/java/com/google/gson/ParameterizedTypeHandlerMap.java,178,copy.typeHierarchyList.addAll(typeHierarchyList);
False,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,119,ublic void testRegisterSubtypeFirst() {
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,119,public void testRegisterSuperTypeFirst() {
False,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,134,ublic void testRegisterSupertypeFirst() {
False,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,135,sonBuilder builder = new GsonBuilder()
False,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,136,"registerTypeHierarchyAdapter(Manager.class, new ManagerAdapter())"
False,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,137,"registerTypeHierarchyAdapter(Employee.class, new EmployeeAdapter());"
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,134,public void testRegisterSubTypeFirstNotAllowed() {
False,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,139,uilder.create();
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,136,Gson gson = new GsonBuilder()
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,137,".registerTypeHierarchyAdapter(Manager.class, new ManagerAdapter())"
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,138,".registerTypeHierarchyAdapter(Employee.class, new EmployeeAdapter())"
True,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java,139,.create();
