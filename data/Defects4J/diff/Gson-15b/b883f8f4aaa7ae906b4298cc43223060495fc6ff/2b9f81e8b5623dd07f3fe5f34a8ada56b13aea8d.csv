is_addition,old_file_path,new_file_path,line_num,content
False,gson/src/main/java/com/google/gson/AnonymousAndLocalClassExclusionStrategy.java,gson/src/main/java/com/google/gson/AnonymousAndLocalClassExclusionStrategy.java,25,inal class AnonymousAndLocalClassExclusionStrategy implements ExclusionStrategy {
True,gson/src/main/java/com/google/gson/AnonymousAndLocalClassExclusionStrategy.java,gson/src/main/java/com/google/gson/AnonymousAndLocalClassExclusionStrategy.java,24,final class AnonymousAndLocalClassExclusionStrategy implements ExclusionStrategy2 {
False,gson/src/main/java/com/google/gson/AnonymousAndLocalClassExclusionStrategy.java,gson/src/main/java/com/google/gson/AnonymousAndLocalClassExclusionStrategy.java,27,ublic boolean shouldSkipField(FieldAttributes f) {
True,gson/src/main/java/com/google/gson/AnonymousAndLocalClassExclusionStrategy.java,gson/src/main/java/com/google/gson/AnonymousAndLocalClassExclusionStrategy.java,26,"public boolean shouldSkipField(FieldAttributes f, Mode mode) {"
False,gson/src/main/java/com/google/gson/AnonymousAndLocalClassExclusionStrategy.java,gson/src/main/java/com/google/gson/AnonymousAndLocalClassExclusionStrategy.java,31,ublic boolean shouldSkipClass(Class<?> clazz) {
True,gson/src/main/java/com/google/gson/AnonymousAndLocalClassExclusionStrategy.java,gson/src/main/java/com/google/gson/AnonymousAndLocalClassExclusionStrategy.java,30,"public boolean shouldSkipClass(Class<?> clazz, Mode mode) {"
False,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,22, A wrapper class used to collect numerous {@link ExclusionStrategy} objects
True,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,22,* A wrapper class used to collect numerous {@link ExclusionStrategy2} objects
False,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,27,inal class DisjunctionExclusionStrategy implements ExclusionStrategy {
False,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,28,rivate final Collection<ExclusionStrategy> strategies;
True,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,27,final class DisjunctionExclusionStrategy implements ExclusionStrategy2 {
True,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,28,private final Collection<ExclusionStrategy2> strategies;
False,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,30,ublic DisjunctionExclusionStrategy(Collection<ExclusionStrategy> strategies) {
True,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,30,public DisjunctionExclusionStrategy(Collection<ExclusionStrategy2> strategies) {
False,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,35,ublic boolean shouldSkipField(FieldAttributes f) {
False,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,36,or (ExclusionStrategy strategy : strategies) {
False,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,37,f (strategy.shouldSkipField(f)) {
True,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,35,"public boolean shouldSkipField(FieldAttributes f, Mode mode) {"
True,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,36,for (ExclusionStrategy2 strategy : strategies) {
True,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,37,"if (strategy.shouldSkipField(f, mode)) {"
False,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,44,ublic boolean shouldSkipClass(Class<?> clazz) {
False,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,45,or (ExclusionStrategy strategy : strategies) {
False,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,46,f (strategy.shouldSkipClass(clazz)) {
True,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,44,"public boolean shouldSkipClass(Class<?> clazz, Mode mode) {"
True,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,45,for (ExclusionStrategy2 strategy : strategies) {
True,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,46,"if (strategy.shouldSkipClass(clazz, mode)) {"
True,gson/src/main/java/com/google/gson/ExclusionStrategy.java,gson/src/main/java/com/google/gson/ExclusionStrategy.java,81,* @deprecated use the more powerful {@link ExclusionStrategy2} instead.
True,gson/src/main/java/com/google/gson/ExclusionStrategy.java,gson/src/main/java/com/google/gson/ExclusionStrategy.java,83,@Deprecated
True,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,2,* Copyright (C) 2011 Google Inc.
True,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,5,* you may not use this file except in compliance with the License.
True,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,6,* You may obtain a copy of the License at
True,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,8,* http://www.apache.org/licenses/LICENSE-2.0
True,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,13,* See the License for the specific language governing permissions and
True,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,14,* limitations under the License.
True,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,17,package com.google.gson;
True,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,20,* A strategy (or policy) definition that is used to decide whether or not a field or top-level
True,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,21,"* class should be serialized or deserialized as part of the JSON output/input. For serialization,"
True,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,22,"* if the {@link #shouldSkipClass(Class, Mode)} method returns false then that class or field"
True,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,23,"* type will not be part of the JSON output.  For deserialization, if"
True,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,24,"* {@link #shouldSkipClass(Class, , Context)} returns false, then it will not be set as part of"
True,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,25,* the Java object structure.
True,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,27,* <p>The following are a few examples that shows how you can use this exclusion mechanism.
True,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,29,* <p><strong>Exclude fields and objects based on a particular class type for both serialization
True,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,30,* and deserialization:</strong>
True,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,31,"* <pre class=""code"">"
True,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,32,* public class SpecificClassExclusionStrategy implements ExclusionStrategy2 {
True,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,33,*   private final Class&lt;?&gt; excludedThisClass;
True,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,35,*   public SpecificClassExclusionStrategy(Class&lt;?&gt; excludedThisClass) {
True,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,36,*     this.excludedThisClass = excludedThisClass;
True,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,39,"*   public boolean shouldSkipClass(Class&lt;?&gt; clazz, Context context) {"
True,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,40,*     return excludedThisClass.equals(clazz);
True,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,43,"*   public boolean shouldSkipField(FieldAttributes f, Context context) {"
True,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,44,*     return excludedThisClass.equals(f.getDeclaredClass());
True,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,47,* </pre>
True,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,49,* <p><strong>Excludes fields and objects based on a particular annotation for both serialization
True,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,50,* and deserialization:</strong>
True,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,51,"* <pre class=""code"">"
True,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,52,* public &#64interface FooAnnotation {
True,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,53,*   // some implementation here
True,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,56,"* // Excludes any field (or class) that is tagged with an ""&#64FooAnnotation"""
True,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,57,* public class FooAnnotationExclusionStrategy implements ExclusionStrategy2 {
True,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,58,"*   public boolean shouldSkipClass(Class&lt;?&gt; clazz, Context context) {"
True,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,59,*     return clazz.getAnnotation(FooAnnotation.class) != null;
True,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,62,"*   public boolean shouldSkipField(FieldAttributes f, Context context) {"
True,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,63,*     return f.getAnnotation(FooAnnotation.class) != null;
True,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,66,* </pre>
True,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,68,* <p><strong>Exclude fields and objects based on a particular class type for serialization
True,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,69,* only:</strong>
True,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,70,"* <pre class=""code"">"
True,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,71,* public class SpecificClassExclusionStrategy implements ExclusionStrategy2 {
True,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,72,*   private final Class&lt;?&gt; excludedThisClass;
True,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,74,*   public SpecificClassExclusionStrategy(Class&lt;?&gt; excludedThisClass) {
True,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,75,*     this.excludedThisClass = excludedThisClass;
True,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,78,"*   public boolean shouldSkipClass(Class&lt;?&gt; clazz, Context context) {"
True,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,79,*     if (context == Context.SERIALIZE) {
True,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,80,*       return excludedThisClass.equals(clazz);
True,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,81,*     } else {
True,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,82,*       return false;
True,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,86,"*   public boolean shouldSkipField(FieldAttributes f, Context context) {"
True,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,87,*   if (context == Context.SERIALIZE) {
True,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,88,*       return excludedThisClass.equals(f.getDeclaredClass());
True,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,89,*     } else {
True,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,90,*       return false;
True,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,94,* </pre>
True,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,96,"* <p>Now if you want to configure {@code Gson} to use a user defined exclusion strategy, then"
True,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,97,* the {@code GsonBuilder} is required. The following is an example of how you can use the
True,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,98,* {@code GsonBuilder} to configure Gson to use one of the above sample:
True,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,99,"* <pre class=""code"">"
True,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,100,* ExclusionStrategy2 excludeStrings = new UserDefinedExclusionStrategy(String.class);
True,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,101,* Gson gson = new GsonBuilder()
True,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,102,*     .setExclusionStrategies(excludeStrings)
True,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,103,*     .create();
True,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,104,* </pre>
True,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,106,* @author Joel Leitch
True,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,108,* @since 1.7
True,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,110,public interface ExclusionStrategy2 {
True,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,113,* @param f the field object that is under test
True,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,114,* @param mode the current mode the Gson is running in
True,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,115,* @return true if the field should be ignored; otherwise false
True,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,117,"public boolean shouldSkipField(FieldAttributes f, Mode mode);"
True,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,120,* @param clazz the class object that is under test
True,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,121,* @param mode the current mode the Gson is running in
True,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,122,* @return true if the class should be ignored; otherwise false
True,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,gson/src/main/java/com/google/gson/ExclusionStrategy2.java,124,"public boolean shouldSkipClass(Class<?> clazz, Mode mode);"
True,gson/src/main/java/com/google/gson/ExclusionStrategy2Adapter.java,gson/src/main/java/com/google/gson/ExclusionStrategy2Adapter.java,2,* Copyright (C) 2011 Google Inc.
True,gson/src/main/java/com/google/gson/ExclusionStrategy2Adapter.java,gson/src/main/java/com/google/gson/ExclusionStrategy2Adapter.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,gson/src/main/java/com/google/gson/ExclusionStrategy2Adapter.java,gson/src/main/java/com/google/gson/ExclusionStrategy2Adapter.java,5,* you may not use this file except in compliance with the License.
True,gson/src/main/java/com/google/gson/ExclusionStrategy2Adapter.java,gson/src/main/java/com/google/gson/ExclusionStrategy2Adapter.java,6,* You may obtain a copy of the License at
True,gson/src/main/java/com/google/gson/ExclusionStrategy2Adapter.java,gson/src/main/java/com/google/gson/ExclusionStrategy2Adapter.java,8,* http://www.apache.org/licenses/LICENSE-2.0
True,gson/src/main/java/com/google/gson/ExclusionStrategy2Adapter.java,gson/src/main/java/com/google/gson/ExclusionStrategy2Adapter.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,gson/src/main/java/com/google/gson/ExclusionStrategy2Adapter.java,gson/src/main/java/com/google/gson/ExclusionStrategy2Adapter.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,gson/src/main/java/com/google/gson/ExclusionStrategy2Adapter.java,gson/src/main/java/com/google/gson/ExclusionStrategy2Adapter.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,gson/src/main/java/com/google/gson/ExclusionStrategy2Adapter.java,gson/src/main/java/com/google/gson/ExclusionStrategy2Adapter.java,13,* See the License for the specific language governing permissions and
True,gson/src/main/java/com/google/gson/ExclusionStrategy2Adapter.java,gson/src/main/java/com/google/gson/ExclusionStrategy2Adapter.java,14,* limitations under the License.
True,gson/src/main/java/com/google/gson/ExclusionStrategy2Adapter.java,gson/src/main/java/com/google/gson/ExclusionStrategy2Adapter.java,17,package com.google.gson;
True,gson/src/main/java/com/google/gson/ExclusionStrategy2Adapter.java,gson/src/main/java/com/google/gson/ExclusionStrategy2Adapter.java,20,* Adapts the old {@link ExclusionStrategy} into the newer {@link ExclusionStrategy2} type.
True,gson/src/main/java/com/google/gson/ExclusionStrategy2Adapter.java,gson/src/main/java/com/google/gson/ExclusionStrategy2Adapter.java,22,* @author Joel Leitch
True,gson/src/main/java/com/google/gson/ExclusionStrategy2Adapter.java,gson/src/main/java/com/google/gson/ExclusionStrategy2Adapter.java,24,class ExclusionStrategy2Adapter implements ExclusionStrategy2 {
True,gson/src/main/java/com/google/gson/ExclusionStrategy2Adapter.java,gson/src/main/java/com/google/gson/ExclusionStrategy2Adapter.java,25,private final ExclusionStrategy strategy;
True,gson/src/main/java/com/google/gson/ExclusionStrategy2Adapter.java,gson/src/main/java/com/google/gson/ExclusionStrategy2Adapter.java,27,public ExclusionStrategy2Adapter(ExclusionStrategy strategy) {
True,gson/src/main/java/com/google/gson/ExclusionStrategy2Adapter.java,gson/src/main/java/com/google/gson/ExclusionStrategy2Adapter.java,28,Preconditions.checkNotNull(strategy);
True,gson/src/main/java/com/google/gson/ExclusionStrategy2Adapter.java,gson/src/main/java/com/google/gson/ExclusionStrategy2Adapter.java,29,this.strategy = strategy;
True,gson/src/main/java/com/google/gson/ExclusionStrategy2Adapter.java,gson/src/main/java/com/google/gson/ExclusionStrategy2Adapter.java,32,"public boolean shouldSkipClass(Class<?> clazz, Mode mode) {"
True,gson/src/main/java/com/google/gson/ExclusionStrategy2Adapter.java,gson/src/main/java/com/google/gson/ExclusionStrategy2Adapter.java,33,return strategy.shouldSkipClass(clazz);
True,gson/src/main/java/com/google/gson/ExclusionStrategy2Adapter.java,gson/src/main/java/com/google/gson/ExclusionStrategy2Adapter.java,36,"public boolean shouldSkipField(FieldAttributes f, Mode mode) {"
True,gson/src/main/java/com/google/gson/ExclusionStrategy2Adapter.java,gson/src/main/java/com/google/gson/ExclusionStrategy2Adapter.java,37,return strategy.shouldSkipField(f);
False,gson/src/main/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategy.java,gson/src/main/java/com/google/gson/ExposeAnnotationExclusionStrategy.java,2, Copyright (C) 2008 Google Inc.
True,gson/src/main/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategy.java,gson/src/main/java/com/google/gson/ExposeAnnotationExclusionStrategy.java,2,* Copyright (C) 2011 Google Inc.
False,gson/src/main/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategy.java,gson/src/main/java/com/google/gson/ExposeAnnotationExclusionStrategy.java,24, @author Inderjeet Singh
False,gson/src/main/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategy.java,gson/src/main/java/com/google/gson/ExposeAnnotationExclusionStrategy.java,27,inal class ExposeAnnotationSerializationExclusionStrategy implements ExclusionStrategy {
False,gson/src/main/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategy.java,gson/src/main/java/com/google/gson/ExposeAnnotationExclusionStrategy.java,29,ublic boolean shouldSkipClass(Class<?> clazz) {
True,gson/src/main/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategy.java,gson/src/main/java/com/google/gson/ExposeAnnotationExclusionStrategy.java,26,public class ExposeAnnotationExclusionStrategy implements ExclusionStrategy2 {
True,gson/src/main/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategy.java,gson/src/main/java/com/google/gson/ExposeAnnotationExclusionStrategy.java,27,"public boolean shouldSkipClass(Class<?> clazz, Mode mode) {"
False,gson/src/main/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategy.java,gson/src/main/java/com/google/gson/ExposeAnnotationExclusionStrategy.java,33,ublic boolean shouldSkipField(FieldAttributes f) {
True,gson/src/main/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategy.java,gson/src/main/java/com/google/gson/ExposeAnnotationExclusionStrategy.java,31,"public boolean shouldSkipField(FieldAttributes f, Mode mode) {"
False,gson/src/main/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategy.java,gson/src/main/java/com/google/gson/ExposeAnnotationExclusionStrategy.java,38,eturn !annotation.serialize();
True,gson/src/main/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategy.java,gson/src/main/java/com/google/gson/ExposeAnnotationExclusionStrategy.java,37,if (mode == Mode.SERIALIZE) {
True,gson/src/main/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategy.java,gson/src/main/java/com/google/gson/ExposeAnnotationExclusionStrategy.java,38,return !annotation.serialize();
True,gson/src/main/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategy.java,gson/src/main/java/com/google/gson/ExposeAnnotationExclusionStrategy.java,39,} else if (mode == Mode.DESERIALIZE) {
True,gson/src/main/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategy.java,gson/src/main/java/com/google/gson/ExposeAnnotationExclusionStrategy.java,40,return !annotation.deserialize();
True,gson/src/main/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategy.java,gson/src/main/java/com/google/gson/ExposeAnnotationExclusionStrategy.java,43,return false;
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,95,rivate static final ExclusionStrategy DEFAULT_EXCLUSION_STRATEGY =
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,96,reateExclusionStrategy(VersionConstants.IGNORE_VERSIONS);
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,95,private static final ExclusionStrategy2 DEFAULT_EXCLUSION_STRATEGY = createExclusionStrategy();
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,100,rivate final ExclusionStrategy serializationStrategy;
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,102,rivate final ExclusionStrategy deserializationStrategy;
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,99,private final ExclusionStrategy2 exclusionStrategy;
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,153,"his(DEFAULT_EXCLUSION_STRATEGY, DEFAULT_EXCLUSION_STRATEGY, DEFAULT_NAMING_POLICY,"
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,149,"this(DEFAULT_EXCLUSION_STRATEGY, DEFAULT_NAMING_POLICY,"
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,159,"son(ExclusionStrategy serializationStrategy, ExclusionStrategy deserializationStrategy,"
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,160,"ieldNamingStrategy2 fieldNamingPolicy, MappedObjectConstructor objectConstructor,"
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,161,"oolean serializeNulls, ParameterizedTypeHandlerMap<JsonSerializer<?>> serializers,"
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,162,"arameterizedTypeHandlerMap<JsonDeserializer<?>> deserializers,"
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,163,"oolean generateNonExecutableGson, boolean htmlSafe, boolean prettyPrinting) {"
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,164,his.serializationStrategy = serializationStrategy;
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,165,his.deserializationStrategy = deserializationStrategy;
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,155,"Gson(ExclusionStrategy2 exclusionStrategy, FieldNamingStrategy2 fieldNamingPolicy,"
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,156,"MappedObjectConstructor objectConstructor, boolean serializeNulls,"
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,157,"ParameterizedTypeHandlerMap<JsonSerializer<?>> serializers,"
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,158,"ParameterizedTypeHandlerMap<JsonDeserializer<?>> deserializers,"
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,159,"boolean generateNonExecutableGson, boolean htmlSafe, boolean prettyPrinting) {"
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,160,this.exclusionStrategy = exclusionStrategy;
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,176,rivate ObjectNavigatorFactory createDefaultObjectNavigatorFactory(ExclusionStrategy strategy) {
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,171,private ObjectNavigatorFactory createDefaultObjectNavigatorFactory(ExclusionStrategy2 strategy) {
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,180,rivate static ExclusionStrategy createExclusionStrategy(double version) {
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,181,ist<ExclusionStrategy> strategies = new LinkedList<ExclusionStrategy>();
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,175,private static ExclusionStrategy2 createExclusionStrategy() {
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,176,List<ExclusionStrategy2> strategies = new LinkedList<ExclusionStrategy2>();
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,185,f (version != VersionConstants.IGNORE_VERSIONS) {
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,186,trategies.add(new VersionExclusionStrategy(version));
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,232,"reateDefaultObjectNavigatorFactory(serializationStrategy), serializeNulls, serializers);"
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,224,"createDefaultObjectNavigatorFactory(exclusionStrategy), serializeNulls, serializers);"
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,566,"reateDefaultObjectNavigatorFactory(deserializationStrategy), deserializers,"
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,558,"createDefaultObjectNavigatorFactory(exclusionStrategy), deserializers,"
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,57,rivate static final ExposeAnnotationSerializationExclusionStrategy
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,58,xposeAnnotationSerializationExclusionStrategy =
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,59,ew ExposeAnnotationSerializationExclusionStrategy();
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,60,rivate static final ExposeAnnotationDeserializationExclusionStrategy
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,61,xposeAnnotationDeserializationExclusionStrategy =
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,62,ew ExposeAnnotationDeserializationExclusionStrategy();
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,57,private static final ExposeAnnotationExclusionStrategy exposeAnnotationExclusionStrategy =
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,58,new ExposeAnnotationExclusionStrategy();
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,64,rivate final Collection<ExclusionStrategy> exclusionStrategies =
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,65,ew HashSet<ExclusionStrategy>();
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,60,private final Collection<ExclusionStrategy2> exclusionStrategies =
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,61,new HashSet<ExclusionStrategy2>();
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,246,* @deprecated convert your {@code strategies} to {@link ExclusionStrategy2} and use the
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,247,*    {@link #setExclusionStrategies(ExclusionStrategy2...) method instead.
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,249,@Deprecated
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,252,exclusionStrategies.add(new ExclusionStrategy2Adapter(strategy));
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,254,return this;
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,258,* Configures Gson to apply a set of exclusion strategies during both serialization and
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,259,* deserialization. Each of the {@code strategies} will be applied as a disjunction rule.
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,260,* This means that if one of the {@code strategies} suggests that a field (or class) should be
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,261,* skipped in the current mode then that field (or object) is skipped during the particular Gson
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,262,* mode.
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,264,* @param strategies the set of strategy object to apply during object (de)serialization.
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,265,"* @return a reference to this {@code GsonBuilder} object to fulfill the ""Builder"" pattern"
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,266,* @since 1.7
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,268,public GsonBuilder setExclusionStrategies(ExclusionStrategy2... strategies) {
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,269,for (ExclusionStrategy2 strategy : strategies) {
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,500,ist<ExclusionStrategy> serializationStrategies =
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,501,ew LinkedList<ExclusionStrategy>(exclusionStrategies);
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,502,ist<ExclusionStrategy> deserializationStrategies =
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,503,ew LinkedList<ExclusionStrategy>(exclusionStrategies);
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,505,erializationStrategies.add(modifierBasedExclusionStrategy);
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,506,eserializationStrategies.add(modifierBasedExclusionStrategy);
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,517,List<ExclusionStrategy2> strategies =
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,518,new LinkedList<ExclusionStrategy2>(exclusionStrategies);
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,519,strategies.add(modifierBasedExclusionStrategy);
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,509,erializationStrategies.add(innerClassExclusionStrategy);
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,510,eserializationStrategies.add(innerClassExclusionStrategy);
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,522,strategies.add(innerClassExclusionStrategy);
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,513,erializationStrategies.add(new VersionExclusionStrategy(ignoreVersionsAfter));
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,514,eserializationStrategies.add(new VersionExclusionStrategy(ignoreVersionsAfter));
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,525,strategies.add(new VersionExclusionStrategy(ignoreVersionsAfter));
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,517,erializationStrategies.add(exposeAnnotationSerializationExclusionStrategy);
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,518,eserializationStrategies.add(exposeAnnotationDeserializationExclusionStrategy);
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,528,strategies.add(exposeAnnotationExclusionStrategy);
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,520,xclusionStrategy serializationExclusionStrategy =
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,521,ew DisjunctionExclusionStrategy(serializationStrategies);
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,522,xclusionStrategy deserializationExclusionStrategy =
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,523,ew DisjunctionExclusionStrategy(deserializationStrategies);
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,530,ExclusionStrategy2 exclusionStrategy = new DisjunctionExclusionStrategy(strategies);
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,549,"son gson = new Gson(serializationExclusionStrategy, deserializationExclusionStrategy,"
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,550,"ieldNamingPolicy, objConstructor, serializeNulls, customSerializers,"
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,551,"ustomDeserializers, generateNonExecutableJson, escapeHtmlChars, prettyPrinting);"
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,556,"Gson gson = new Gson(exclusionStrategy, fieldNamingPolicy, objConstructor, serializeNulls,"
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,557,"customSerializers, customDeserializers, generateNonExecutableJson, escapeHtmlChars,"
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,558,prettyPrinting);
False,gson/src/main/java/com/google/gson/InnerClassExclusionStrategy.java,gson/src/main/java/com/google/gson/InnerClassExclusionStrategy.java,26,lass InnerClassExclusionStrategy implements ExclusionStrategy {
True,gson/src/main/java/com/google/gson/InnerClassExclusionStrategy.java,gson/src/main/java/com/google/gson/InnerClassExclusionStrategy.java,26,class InnerClassExclusionStrategy implements ExclusionStrategy2 {
False,gson/src/main/java/com/google/gson/InnerClassExclusionStrategy.java,gson/src/main/java/com/google/gson/InnerClassExclusionStrategy.java,28,ublic boolean shouldSkipField(FieldAttributes f) {
True,gson/src/main/java/com/google/gson/InnerClassExclusionStrategy.java,gson/src/main/java/com/google/gson/InnerClassExclusionStrategy.java,28,"public boolean shouldSkipField(FieldAttributes f, Mode mode) {"
False,gson/src/main/java/com/google/gson/InnerClassExclusionStrategy.java,gson/src/main/java/com/google/gson/InnerClassExclusionStrategy.java,32,ublic boolean shouldSkipClass(Class<?> clazz) {
True,gson/src/main/java/com/google/gson/InnerClassExclusionStrategy.java,gson/src/main/java/com/google/gson/InnerClassExclusionStrategy.java,32,"public boolean shouldSkipClass(Class<?> clazz, Mode mode) {"
True,gson/src/main/java/com/google/gson/JsonDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonDeserializationVisitor.java,62,public Mode getMode() {
True,gson/src/main/java/com/google/gson/JsonDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonDeserializationVisitor.java,63,return Mode.DESERIALIZE;
True,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,51,public Mode getMode() {
True,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,52,return Mode.SERIALIZE;
False,gson/src/main/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategy.java,gson/src/main/java/com/google/gson/Mode.java,2, Copyright (C) 2009 Google Inc.
True,gson/src/main/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategy.java,gson/src/main/java/com/google/gson/Mode.java,2,* Copyright (C) 2010 Google Inc.
False,gson/src/main/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategy.java,gson/src/main/java/com/google/gson/Mode.java,16,ackage com.google.gson;
False,gson/src/main/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategy.java,gson/src/main/java/com/google/gson/Mode.java,18,mport com.google.gson.annotations.Expose;
True,gson/src/main/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategy.java,gson/src/main/java/com/google/gson/Mode.java,17,package com.google.gson;
False,gson/src/main/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategy.java,gson/src/main/java/com/google/gson/Mode.java,21, Excludes fields that do not have the {@link Expose} annotation
True,gson/src/main/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategy.java,gson/src/main/java/com/google/gson/Mode.java,20,* Defines the current context of Gson so that common code for serializing and deserializing can
True,gson/src/main/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategy.java,gson/src/main/java/com/google/gson/Mode.java,21,* distinguish between the two modes.
False,gson/src/main/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategy.java,gson/src/main/java/com/google/gson/Mode.java,23, @author Inderjeet Singh
True,gson/src/main/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategy.java,gson/src/main/java/com/google/gson/Mode.java,25,* @since 1.7
False,gson/src/main/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategy.java,gson/src/main/java/com/google/gson/Mode.java,26,inal class ExposeAnnotationDeserializationExclusionStrategy implements ExclusionStrategy {
False,gson/src/main/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategy.java,gson/src/main/java/com/google/gson/Mode.java,28,ublic boolean shouldSkipClass(Class<?> clazz) {
False,gson/src/main/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategy.java,gson/src/main/java/com/google/gson/Mode.java,29,eturn false;
False,gson/src/main/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategy.java,gson/src/main/java/com/google/gson/Mode.java,32,ublic boolean shouldSkipField(FieldAttributes f) {
False,gson/src/main/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategy.java,gson/src/main/java/com/google/gson/Mode.java,33,xpose annotation = f.getAnnotation(Expose.class);
False,gson/src/main/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategy.java,gson/src/main/java/com/google/gson/Mode.java,34,f (annotation == null) {
False,gson/src/main/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategy.java,gson/src/main/java/com/google/gson/Mode.java,35,eturn true;
False,gson/src/main/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategy.java,gson/src/main/java/com/google/gson/Mode.java,37,eturn !annotation.deserialize();
True,gson/src/main/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategy.java,gson/src/main/java/com/google/gson/Mode.java,27,public enum Mode {
True,gson/src/main/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategy.java,gson/src/main/java/com/google/gson/Mode.java,28,"SERIALIZE,"
True,gson/src/main/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategy.java,gson/src/main/java/com/google/gson/Mode.java,29,DESERIALIZE;
False,gson/src/main/java/com/google/gson/ModifierBasedExclusionStrategy.java,gson/src/main/java/com/google/gson/ModifierBasedExclusionStrategy.java,29,inal class ModifierBasedExclusionStrategy implements ExclusionStrategy {
True,gson/src/main/java/com/google/gson/ModifierBasedExclusionStrategy.java,gson/src/main/java/com/google/gson/ModifierBasedExclusionStrategy.java,29,final class ModifierBasedExclusionStrategy implements ExclusionStrategy2 {
False,gson/src/main/java/com/google/gson/ModifierBasedExclusionStrategy.java,gson/src/main/java/com/google/gson/ModifierBasedExclusionStrategy.java,41,ublic boolean shouldSkipField(FieldAttributes f) {
True,gson/src/main/java/com/google/gson/ModifierBasedExclusionStrategy.java,gson/src/main/java/com/google/gson/ModifierBasedExclusionStrategy.java,41,"public boolean shouldSkipField(FieldAttributes f, Mode mode) {"
False,gson/src/main/java/com/google/gson/ModifierBasedExclusionStrategy.java,gson/src/main/java/com/google/gson/ModifierBasedExclusionStrategy.java,50,ublic boolean shouldSkipClass(Class<?> clazz) {
True,gson/src/main/java/com/google/gson/ModifierBasedExclusionStrategy.java,gson/src/main/java/com/google/gson/ModifierBasedExclusionStrategy.java,50,"public boolean shouldSkipClass(Class<?> clazz, Mode mode) {"
False,gson/src/main/java/com/google/gson/NullExclusionStrategy.java,gson/src/main/java/com/google/gson/NullExclusionStrategy.java,21," This acts as a ""Null Object"" pattern for the {@link ExclusionStrategy}."
True,gson/src/main/java/com/google/gson/NullExclusionStrategy.java,gson/src/main/java/com/google/gson/NullExclusionStrategy.java,20,"* This acts as a ""Null Object"" pattern for the {@link ExclusionStrategy2}."
False,gson/src/main/java/com/google/gson/NullExclusionStrategy.java,gson/src/main/java/com/google/gson/NullExclusionStrategy.java,28,inal class NullExclusionStrategy implements ExclusionStrategy {
True,gson/src/main/java/com/google/gson/NullExclusionStrategy.java,gson/src/main/java/com/google/gson/NullExclusionStrategy.java,27,final class NullExclusionStrategy implements ExclusionStrategy2 {
False,gson/src/main/java/com/google/gson/NullExclusionStrategy.java,gson/src/main/java/com/google/gson/NullExclusionStrategy.java,30,ublic boolean shouldSkipField(FieldAttributes f) {
True,gson/src/main/java/com/google/gson/NullExclusionStrategy.java,gson/src/main/java/com/google/gson/NullExclusionStrategy.java,29,"public boolean shouldSkipField(FieldAttributes f, Mode mode) {"
False,gson/src/main/java/com/google/gson/NullExclusionStrategy.java,gson/src/main/java/com/google/gson/NullExclusionStrategy.java,34,ublic boolean shouldSkipClass(Class<?> clazz) {
True,gson/src/main/java/com/google/gson/NullExclusionStrategy.java,gson/src/main/java/com/google/gson/NullExclusionStrategy.java,33,"public boolean shouldSkipClass(Class<?> clazz, Mode mode) {"
True,gson/src/main/java/com/google/gson/ObjectNavigator.java,gson/src/main/java/com/google/gson/ObjectNavigator.java,72,void visitPrimitive(Object primitive);
False,gson/src/main/java/com/google/gson/ObjectNavigator.java,gson/src/main/java/com/google/gson/ObjectNavigator.java,77,oid visitPrimitive(Object primitive);
True,gson/src/main/java/com/google/gson/ObjectNavigator.java,gson/src/main/java/com/google/gson/ObjectNavigator.java,79,Mode getMode();
False,gson/src/main/java/com/google/gson/ObjectNavigator.java,gson/src/main/java/com/google/gson/ObjectNavigator.java,80,rivate final ExclusionStrategy exclusionStrategy;
True,gson/src/main/java/com/google/gson/ObjectNavigator.java,gson/src/main/java/com/google/gson/ObjectNavigator.java,82,private final ExclusionStrategy2 exclusionStrategy;
False,gson/src/main/java/com/google/gson/ObjectNavigator.java,gson/src/main/java/com/google/gson/ObjectNavigator.java,90,"bjectNavigator(ObjectTypePair objTypePair, ExclusionStrategy exclusionStrategy) {"
True,gson/src/main/java/com/google/gson/ObjectNavigator.java,gson/src/main/java/com/google/gson/ObjectNavigator.java,92,"ObjectNavigator(ObjectTypePair objTypePair, ExclusionStrategy2 exclusionStrategy) {"
False,gson/src/main/java/com/google/gson/ObjectNavigator.java,gson/src/main/java/com/google/gson/ObjectNavigator.java,102,f (exclusionStrategy.shouldSkipClass(Types.getRawType(objTypePair.type))) {
True,gson/src/main/java/com/google/gson/ObjectNavigator.java,gson/src/main/java/com/google/gson/ObjectNavigator.java,104,"if (exclusionStrategy.shouldSkipClass(Types.getRawType(objTypePair.type), visitor.getMode())) {"
True,gson/src/main/java/com/google/gson/ObjectNavigator.java,gson/src/main/java/com/google/gson/ObjectNavigator.java,148,Mode mode = visitor.getMode();
False,gson/src/main/java/com/google/gson/ObjectNavigator.java,gson/src/main/java/com/google/gson/ObjectNavigator.java,150,f (exclusionStrategy.shouldSkipField(fieldAttributes)
False,gson/src/main/java/com/google/gson/ObjectNavigator.java,gson/src/main/java/com/google/gson/ObjectNavigator.java,151,| exclusionStrategy.shouldSkipClass(fieldAttributes.getDeclaredClass())) {
True,gson/src/main/java/com/google/gson/ObjectNavigator.java,gson/src/main/java/com/google/gson/ObjectNavigator.java,153,"if (exclusionStrategy.shouldSkipField(fieldAttributes, mode)"
True,gson/src/main/java/com/google/gson/ObjectNavigator.java,gson/src/main/java/com/google/gson/ObjectNavigator.java,154,"|| exclusionStrategy.shouldSkipClass(fieldAttributes.getDeclaredClass(), mode)) {"
False,gson/src/main/java/com/google/gson/ObjectNavigatorFactory.java,gson/src/main/java/com/google/gson/ObjectNavigatorFactory.java,21, This object holds on to a reference of the {@link ExclusionStrategy}
True,gson/src/main/java/com/google/gson/ObjectNavigatorFactory.java,gson/src/main/java/com/google/gson/ObjectNavigatorFactory.java,21,* This object holds on to a reference of the {@link ExclusionStrategy2}
False,gson/src/main/java/com/google/gson/ObjectNavigatorFactory.java,gson/src/main/java/com/google/gson/ObjectNavigatorFactory.java,27,rivate final ExclusionStrategy strategy;
True,gson/src/main/java/com/google/gson/ObjectNavigatorFactory.java,gson/src/main/java/com/google/gson/ObjectNavigatorFactory.java,27,private final ExclusionStrategy2 strategy;
False,gson/src/main/java/com/google/gson/ObjectNavigatorFactory.java,gson/src/main/java/com/google/gson/ObjectNavigatorFactory.java,39,"ublic ObjectNavigatorFactory(ExclusionStrategy strategy, FieldNamingStrategy2 fieldNamingPolicy) {"
True,gson/src/main/java/com/google/gson/ObjectNavigatorFactory.java,gson/src/main/java/com/google/gson/ObjectNavigatorFactory.java,39,"public ObjectNavigatorFactory(ExclusionStrategy2 strategy, FieldNamingStrategy2 fieldNamingPolicy) {"
False,gson/src/main/java/com/google/gson/SyntheticFieldExclusionStrategy.java,gson/src/main/java/com/google/gson/SyntheticFieldExclusionStrategy.java,29,lass SyntheticFieldExclusionStrategy implements ExclusionStrategy {
True,gson/src/main/java/com/google/gson/SyntheticFieldExclusionStrategy.java,gson/src/main/java/com/google/gson/SyntheticFieldExclusionStrategy.java,29,class SyntheticFieldExclusionStrategy implements ExclusionStrategy2 {
False,gson/src/main/java/com/google/gson/SyntheticFieldExclusionStrategy.java,gson/src/main/java/com/google/gson/SyntheticFieldExclusionStrategy.java,36,ublic boolean shouldSkipClass(Class<?> clazz) {
True,gson/src/main/java/com/google/gson/SyntheticFieldExclusionStrategy.java,gson/src/main/java/com/google/gson/SyntheticFieldExclusionStrategy.java,36,"public boolean shouldSkipClass(Class<?> clazz, Mode mode) {"
False,gson/src/main/java/com/google/gson/SyntheticFieldExclusionStrategy.java,gson/src/main/java/com/google/gson/SyntheticFieldExclusionStrategy.java,40,ublic boolean shouldSkipField(FieldAttributes f) {
True,gson/src/main/java/com/google/gson/SyntheticFieldExclusionStrategy.java,gson/src/main/java/com/google/gson/SyntheticFieldExclusionStrategy.java,40,"public boolean shouldSkipField(FieldAttributes f, Mode mode) {"
False,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,28,inal class VersionExclusionStrategy implements ExclusionStrategy {
True,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,28,final class VersionExclusionStrategy implements ExclusionStrategy2 {
False,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,36,ublic boolean shouldSkipField(FieldAttributes f) {
True,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,36,"public boolean shouldSkipField(FieldAttributes f, Mode mode) {"
False,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,40,ublic boolean shouldSkipClass(Class<?> clazz) {
True,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,40,"public boolean shouldSkipClass(Class<?> clazz, Mode mode) {"
False,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,31,"rivate static final ExclusionStrategy FALSE_STRATEGY = new MockExclusionStrategy(false, false);"
False,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,32,"rivate static final ExclusionStrategy TRUE_STRATEGY = new MockExclusionStrategy(true, true);"
True,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,31,private static final ExclusionStrategy2 FALSE_STRATEGY =
True,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,32,"new MockExclusionStrategy2(false, false, null);"
True,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,33,private static final ExclusionStrategy2 TRUE_STRATEGY =
True,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,34,"new MockExclusionStrategy2(true, true, null);"
False,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,38,ist<ExclusionStrategy> constructorParam = null;
True,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,41,List<ExclusionStrategy2> constructorParam = null;
False,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,45,ist<ExclusionStrategy> strategies = new LinkedList<ExclusionStrategy>();
True,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,48,List<ExclusionStrategy2> strategies = new LinkedList<ExclusionStrategy2>();
False,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,50,ssertTrue(strategy.shouldSkipClass(CLAZZ));
False,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,51,ssertTrue(strategy.shouldSkipField(FIELD));
True,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,53,"assertTrue(strategy.shouldSkipClass(CLAZZ, Mode.SERIALIZE));"
True,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,54,"assertTrue(strategy.shouldSkipField(FIELD, Mode.SERIALIZE));"
False,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,55,ist<ExclusionStrategy> strategies = new LinkedList<ExclusionStrategy>();
True,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,58,List<ExclusionStrategy2> strategies = new LinkedList<ExclusionStrategy2>();
False,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,59,ssertFalse(strategy.shouldSkipClass(CLAZZ));
False,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,60,ssertFalse(strategy.shouldSkipField(FIELD));
True,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,62,"assertFalse(strategy.shouldSkipClass(CLAZZ, Mode.SERIALIZE));"
True,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,63,"assertFalse(strategy.shouldSkipField(FIELD, Mode.SERIALIZE));"
True,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,2,* Copyright (C) 2011 Google Inc.
True,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,5,* you may not use this file except in compliance with the License.
True,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,6,* You may obtain a copy of the License at
True,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,8,* http://www.apache.org/licenses/LICENSE-2.0
True,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,13,* See the License for the specific language governing permissions and
True,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,14,* limitations under the License.
True,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,17,package com.google.gson;
True,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,19,import java.lang.reflect.Field;
True,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,21,import junit.framework.TestCase;
True,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,24,* Unit test for the {@link ExclusionStrategy2Adapter} class.
True,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,26,* @author Joel Leitch
True,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,28,public class ExclusionStrategy2AdapterTest extends TestCase {
True,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,30,public void testConstruction() throws Exception {
True,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,31,try {
True,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,32,new ExclusionStrategy2Adapter(null);
True,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,33,fail();
True,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,34,} catch (IllegalArgumentException expected) {}
True,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,37,public void testAdapterDoesSameForBothModes() throws Exception {
True,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,38,ExclusionStrategy2Adapter adapter =
True,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,39,"new ExclusionStrategy2Adapter(new MockExclusionStrategy(true, false));"
True,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,40,"assertTrue(adapter.shouldSkipClass(String.class, Mode.DESERIALIZE));"
True,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,41,"assertTrue(adapter.shouldSkipClass(String.class, Mode.SERIALIZE));"
True,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,43,Field f = String.class.getFields()[0];
True,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,44,"assertFalse(adapter.shouldSkipField(new FieldAttributes(String.class, f), Mode.DESERIALIZE));"
True,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,gson/src/test/java/com/google/gson/ExclusionStrategy2AdapterTest.java,45,"assertFalse(adapter.shouldSkipField(new FieldAttributes(String.class, f), Mode.SERIALIZE));"
False,gson/src/test/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategyTest.java,2, Copyright (C) 2008 Google Inc.
False,gson/src/test/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategyTest.java,4," Licensed under the Apache License, Version 2.0 (the ""License"");"
False,gson/src/test/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategyTest.java,5, you may not use this file except in compliance with the License.
False,gson/src/test/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategyTest.java,6, You may obtain a copy of the License at
False,gson/src/test/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategyTest.java,8, http://www.apache.org/licenses/LICENSE-2.0
False,gson/src/test/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategyTest.java,10," Unless required by applicable law or agreed to in writing, software"
False,gson/src/test/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategyTest.java,11," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,gson/src/test/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategyTest.java,12," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,gson/src/test/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategyTest.java,13, See the License for the specific language governing permissions and
False,gson/src/test/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategyTest.java,14, limitations under the License.
False,gson/src/test/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategyTest.java,17,ackage com.google.gson;
False,gson/src/test/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategyTest.java,19,mport java.lang.reflect.Field;
False,gson/src/test/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategyTest.java,21,mport junit.framework.TestCase;
False,gson/src/test/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategyTest.java,23,mport com.google.gson.annotations.Expose;
False,gson/src/test/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategyTest.java,26, Unit tests for the {@link ExposeAnnotationDeserializationExclusionStrategy} class.
False,gson/src/test/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategyTest.java,28, @author Joel Leitch
False,gson/src/test/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategyTest.java,30,ublic class ExposeAnnotationDeserializationExclusionStrategyTest extends TestCase {
False,gson/src/test/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategyTest.java,31,rivate ExposeAnnotationDeserializationExclusionStrategy strategy;
False,gson/src/test/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategyTest.java,33,Override
False,gson/src/test/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategyTest.java,34,rotected void setUp() throws Exception {
False,gson/src/test/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategyTest.java,35,uper.setUp();
False,gson/src/test/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategyTest.java,36,trategy = new ExposeAnnotationDeserializationExclusionStrategy();
False,gson/src/test/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategyTest.java,39,ublic void testNeverSkipClasses() throws Exception {
False,gson/src/test/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategyTest.java,40,ssertFalse(strategy.shouldSkipClass(MockObject.class));
False,gson/src/test/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategyTest.java,43,ublic void testSkipNonAnnotatedFields() throws Exception {
False,gson/src/test/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategyTest.java,44,"ield f = MockObject.class.getField(""hiddenField"");"
False,gson/src/test/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategyTest.java,45,"ssertTrue(strategy.shouldSkipField(new FieldAttributes(MockObject.class, f)));"
False,gson/src/test/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategyTest.java,48,ublic void testSkipExplicitlySkippedFields() throws Exception {
False,gson/src/test/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategyTest.java,49,"ield f = MockObject.class.getField(""explicitlyHiddenField"");"
False,gson/src/test/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategyTest.java,50,"ssertTrue(strategy.shouldSkipField(new FieldAttributes(MockObject.class, f)));"
False,gson/src/test/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategyTest.java,53,ublic void testNeverSkipExposedAnnotatedFields() throws Exception {
False,gson/src/test/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategyTest.java,54,"ield f = MockObject.class.getField(""exposedField"");"
False,gson/src/test/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategyTest.java,55,"ssertFalse(strategy.shouldSkipField(new FieldAttributes(MockObject.class, f)));"
False,gson/src/test/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategyTest.java,58,ublic void testNeverSkipExplicitlyExposedAnnotatedFields() throws Exception {
False,gson/src/test/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategyTest.java,59,"ield f = MockObject.class.getField(""explicitlyExposedField"");"
False,gson/src/test/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategyTest.java,60,"ssertFalse(strategy.shouldSkipField(new FieldAttributes(MockObject.class, f)));"
False,gson/src/test/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategyTest.java,63,"SuppressWarnings(""unused"")"
False,gson/src/test/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategyTest.java,64,rivate static class MockObject {
False,gson/src/test/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategyTest.java,65,Expose
False,gson/src/test/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategyTest.java,66,ublic final int exposedField = 0;
False,gson/src/test/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategyTest.java,68,Expose(deserialize=true)
False,gson/src/test/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategyTest.java,69,ublic final int explicitlyExposedField = 0;
False,gson/src/test/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategyTest.java,71,Expose(deserialize=false)
False,gson/src/test/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategyTest.java,72,ublic final int explicitlyHiddenField = 0;
False,gson/src/test/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategyTest.java,74,ublic final int hiddenField = 0;
True,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,2,* Copyright (C) 2011 Google Inc.
True,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,5,* you may not use this file except in compliance with the License.
True,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,6,* You may obtain a copy of the License at
True,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,8,* http://www.apache.org/licenses/LICENSE-2.0
True,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,13,* See the License for the specific language governing permissions and
True,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,14,* limitations under the License.
True,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,17,package com.google.gson;
True,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,19,import java.lang.reflect.Field;
True,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,21,import com.google.gson.annotations.Expose;
True,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,23,import junit.framework.TestCase;
True,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,26,* Unit tests for the {@link ExposeAnnotationExclusionStrategy} class.
True,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,28,* @author Joel Leitch
True,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,30,public class ExposeAnnotationExclusionStrategyTest extends TestCase {
True,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,31,private ExposeAnnotationExclusionStrategy strategy;
True,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,33,@Override
True,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,34,protected void setUp() throws Exception {
True,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,35,super.setUp();
True,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,36,strategy = new ExposeAnnotationExclusionStrategy();
True,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,39,public void testNeverSkipClasses() throws Exception {
True,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,40,"assertFalse(strategy.shouldSkipClass(MockObject.class, Mode.DESERIALIZE));"
True,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,41,"assertFalse(strategy.shouldSkipClass(MockObject.class, Mode.SERIALIZE));"
True,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,44,public void testSkipNonAnnotatedFields() throws Exception {
True,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,45,"FieldAttributes f = createFieldAttributes(""hiddenField"");"
True,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,46,"assertTrue(strategy.shouldSkipField(f, Mode.DESERIALIZE));"
True,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,47,"assertTrue(strategy.shouldSkipField(f, Mode.SERIALIZE));"
True,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,50,public void testSkipExplicitlySkippedFields() throws Exception {
True,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,51,"FieldAttributes f = createFieldAttributes(""explicitlyHiddenField"");"
True,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,52,"assertTrue(strategy.shouldSkipField(f, Mode.DESERIALIZE));"
True,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,53,"assertTrue(strategy.shouldSkipField(f, Mode.SERIALIZE));"
True,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,56,public void testNeverSkipExposedAnnotatedFields() throws Exception {
True,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,57,"FieldAttributes f = createFieldAttributes(""exposedField"");"
True,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,58,"assertFalse(strategy.shouldSkipField(f, Mode.DESERIALIZE));"
True,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,59,"assertFalse(strategy.shouldSkipField(f, Mode.SERIALIZE));"
True,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,62,public void testNeverSkipExplicitlyExposedAnnotatedFields() throws Exception {
True,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,63,"FieldAttributes f = createFieldAttributes(""explicitlyExposedField"");"
True,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,64,"assertFalse(strategy.shouldSkipField(f, Mode.DESERIALIZE));"
True,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,65,"assertFalse(strategy.shouldSkipField(f, Mode.SERIALIZE));"
True,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,68,public void testDifferentSerializeAndDeserializeField() throws Exception {
True,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,69,"FieldAttributes f = createFieldAttributes(""explicitlyDifferentModeField"");"
True,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,70,"assertTrue(strategy.shouldSkipField(f, Mode.DESERIALIZE));"
True,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,71,"assertFalse(strategy.shouldSkipField(f, Mode.SERIALIZE));"
True,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,74,private static FieldAttributes createFieldAttributes(String fieldName) throws Exception {
True,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,75,Field f = MockObject.class.getField(fieldName);
True,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,76,"return new FieldAttributes(MockObject.class, f);"
True,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,79,"@SuppressWarnings(""unused"")"
True,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,80,private static class MockObject {
True,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,81,@Expose
True,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,82,public final int exposedField = 0;
True,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,84,"@Expose(serialize=true, deserialize=true)"
True,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,85,public final int explicitlyExposedField = 0;
True,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,87,"@Expose(serialize=false, deserialize=false)"
True,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,88,public final int explicitlyHiddenField = 0;
True,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,90,"@Expose(serialize=true, deserialize=false)"
True,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,91,public final int explicitlyDifferentModeField = 0;
True,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,93,public final int hiddenField = 0;
False,gson/src/test/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategyTest.java,2, Copyright (C) 2008 Google Inc.
False,gson/src/test/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategyTest.java,4," Licensed under the Apache License, Version 2.0 (the ""License"");"
False,gson/src/test/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategyTest.java,5, you may not use this file except in compliance with the License.
False,gson/src/test/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategyTest.java,6, You may obtain a copy of the License at
False,gson/src/test/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategyTest.java,8, http://www.apache.org/licenses/LICENSE-2.0
False,gson/src/test/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategyTest.java,10," Unless required by applicable law or agreed to in writing, software"
False,gson/src/test/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategyTest.java,11," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,gson/src/test/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategyTest.java,12," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,gson/src/test/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategyTest.java,13, See the License for the specific language governing permissions and
False,gson/src/test/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategyTest.java,14, limitations under the License.
False,gson/src/test/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategyTest.java,17,ackage com.google.gson;
False,gson/src/test/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategyTest.java,19,mport java.lang.reflect.Field;
False,gson/src/test/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategyTest.java,21,mport junit.framework.TestCase;
False,gson/src/test/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategyTest.java,23,mport com.google.gson.annotations.Expose;
False,gson/src/test/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategyTest.java,26, Unit tests for the {@link ExposeAnnotationSerializationExclusionStrategy} class.
False,gson/src/test/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategyTest.java,28, @author Joel Leitch
False,gson/src/test/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategyTest.java,30,ublic class ExposeAnnotationSerializationExclusionStrategyTest extends TestCase {
False,gson/src/test/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategyTest.java,31,rivate ExposeAnnotationSerializationExclusionStrategy strategy;
False,gson/src/test/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategyTest.java,33,Override
False,gson/src/test/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategyTest.java,34,rotected void setUp() throws Exception {
False,gson/src/test/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategyTest.java,35,uper.setUp();
False,gson/src/test/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategyTest.java,36,trategy = new ExposeAnnotationSerializationExclusionStrategy();
False,gson/src/test/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategyTest.java,39,ublic void testNeverSkipClasses() throws Exception {
False,gson/src/test/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategyTest.java,40,ssertFalse(strategy.shouldSkipClass(MockObject.class));
False,gson/src/test/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategyTest.java,43,ublic void testSkipNonAnnotatedFields() throws Exception {
False,gson/src/test/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategyTest.java,44,"ield f = MockObject.class.getField(""hiddenField"");"
False,gson/src/test/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategyTest.java,45,"ssertTrue(strategy.shouldSkipField(new FieldAttributes(MockObject.class, f)));"
False,gson/src/test/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategyTest.java,48,ublic void testSkipExplicitlySkippedFields() throws Exception {
False,gson/src/test/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategyTest.java,49,"ield f = MockObject.class.getField(""explicitlyHiddenField"");"
False,gson/src/test/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategyTest.java,50,"ssertTrue(strategy.shouldSkipField(new FieldAttributes(MockObject.class, f)));"
False,gson/src/test/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategyTest.java,53,ublic void testNeverSkipExposedAnnotatedFields() throws Exception {
False,gson/src/test/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategyTest.java,54,"ield f = MockObject.class.getField(""exposedField"");"
False,gson/src/test/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategyTest.java,55,"ssertFalse(strategy.shouldSkipField(new FieldAttributes(MockObject.class, f)));"
False,gson/src/test/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategyTest.java,58,ublic void testNeverSkipExplicitlyExposedAnnotatedFields() throws Exception {
False,gson/src/test/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategyTest.java,59,"ield f = MockObject.class.getField(""explicitlyExposedField"");"
False,gson/src/test/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategyTest.java,60,"ssertFalse(strategy.shouldSkipField(new FieldAttributes(MockObject.class, f)));"
False,gson/src/test/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategyTest.java,63,"SuppressWarnings(""unused"")"
False,gson/src/test/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategyTest.java,64,rivate static class MockObject {
False,gson/src/test/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategyTest.java,65,Expose
False,gson/src/test/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategyTest.java,66,ublic final int exposedField = 0;
False,gson/src/test/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategyTest.java,68,Expose(serialize=true)
False,gson/src/test/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategyTest.java,69,ublic final int explicitlyExposedField = 0;
False,gson/src/test/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategyTest.java,71,Expose(serialize=false)
False,gson/src/test/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategyTest.java,72,ublic final int explicitlyHiddenField = 0;
False,gson/src/test/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategyTest.java,74,ublic final int hiddenField = 0;
False,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,38,inkedList<ExclusionStrategy> strategies = new LinkedList<ExclusionStrategy>();
True,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,38,LinkedList<ExclusionStrategy2> strategies = new LinkedList<ExclusionStrategy2>();
False,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,41,xclusionStrategy exclusionStrategy = new DisjunctionExclusionStrategy(strategies);
False,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,42,"son gson = new Gson(exclusionStrategy, exclusionStrategy, Gson.DEFAULT_NAMING_POLICY,"
True,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,41,ExclusionStrategy2 exclusionStrategy = new DisjunctionExclusionStrategy(strategies);
True,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,42,"Gson gson = new Gson(exclusionStrategy, Gson.DEFAULT_NAMING_POLICY,"
False,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,63,rivate static class UserDefinedExclusionStrategy implements ExclusionStrategy {
True,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,63,private static class UserDefinedExclusionStrategy implements ExclusionStrategy2 {
False,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,70,ublic boolean shouldSkipClass(Class<?> clazz) {
True,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,70,"public boolean shouldSkipClass(Class<?> clazz, Mode mode) {"
False,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,74,ublic boolean shouldSkipField(FieldAttributes f) {
True,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,74,"public boolean shouldSkipField(FieldAttributes f, Mode mode) {"
False,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,44,ssertTrue(strategy.shouldSkipClass(clazz));
True,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,44,"assertTrue(strategy.shouldSkipClass(clazz, Mode.SERIALIZE));"
True,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,45,"assertTrue(strategy.shouldSkipClass(clazz, Mode.DESERIALIZE));"
False,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,49,"ssertTrue(strategy.shouldSkipField(new FieldAttributes(getClass(), f)));"
True,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,50,"assertTrue(strategy.shouldSkipField(new FieldAttributes(getClass(), f), Mode.SERIALIZE));"
True,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,51,"assertTrue(strategy.shouldSkipField(new FieldAttributes(getClass(), f), Mode.DESERIALIZE));"
False,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,54,ssertFalse(strategy.shouldSkipClass(clazz));
True,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,56,"assertFalse(strategy.shouldSkipClass(clazz, Mode.SERIALIZE));"
True,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,57,"assertFalse(strategy.shouldSkipClass(clazz, Mode.DESERIALIZE));"
False,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,59,"ssertFalse(strategy.shouldSkipField(new FieldAttributes(getClass(), f)));"
True,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,62,"assertFalse(strategy.shouldSkipField(new FieldAttributes(getClass(), f), Mode.SERIALIZE));"
True,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,63,"assertFalse(strategy.shouldSkipField(new FieldAttributes(getClass(), f), Mode.DESERIALIZE));"
True,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,2,* Copyright (C) 2008 Google Inc.
True,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,5,* you may not use this file except in compliance with the License.
True,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,6,* You may obtain a copy of the License at
True,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,8,* http://www.apache.org/licenses/LICENSE-2.0
True,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,13,* See the License for the specific language governing permissions and
True,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,14,* limitations under the License.
True,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,17,package com.google.gson;
True,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,20,* This is a configurable {@link ExclusionStrategy2} that can be used for
True,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,21,* unit testing.
True,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,23,* @author Joel Leitch
True,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,25,public class MockExclusionStrategy2 implements ExclusionStrategy2 {
True,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,26,private final MockExclusionStrategy strategy;
True,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,27,private final Mode mode;
True,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,29,"public MockExclusionStrategy2(boolean skipClass, boolean skipField, Mode mode) {"
True,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,30,"this.strategy = new MockExclusionStrategy(skipClass, skipField);"
True,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,31,this.mode = mode;
True,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,34,"public boolean shouldSkipField(FieldAttributes f, Mode mode) {"
True,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,35,if (this.mode == null || this.mode == mode) {
True,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,36,return strategy.shouldSkipField(f);
True,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,37,} else {
True,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,38,return false;
True,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,42,"public boolean shouldSkipClass(Class<?> clazz, Mode mode) {"
True,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,43,if (this.mode == null || this.mode == mode) {
True,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,44,return strategy.shouldSkipClass(clazz);
True,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,45,} else {
True,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,gson/src/test/java/com/google/gson/MockExclusionStrategy2.java,46,return false;
False,gson/src/test/java/com/google/gson/NullExclusionStrategyTest.java,gson/src/test/java/com/google/gson/NullExclusionStrategyTest.java,36,ssertFalse(strategy.shouldSkipClass(String.class));
True,gson/src/test/java/com/google/gson/NullExclusionStrategyTest.java,gson/src/test/java/com/google/gson/NullExclusionStrategyTest.java,36,"assertFalse(strategy.shouldSkipClass(String.class, Mode.SERIALIZE));"
True,gson/src/test/java/com/google/gson/NullExclusionStrategyTest.java,gson/src/test/java/com/google/gson/NullExclusionStrategyTest.java,37,"assertFalse(strategy.shouldSkipClass(String.class, Mode.DESERIALIZE));"
False,gson/src/test/java/com/google/gson/NullExclusionStrategyTest.java,gson/src/test/java/com/google/gson/NullExclusionStrategyTest.java,41,"ew FieldAttributes(String.class, String.class.getFields()[0])));"
True,gson/src/test/java/com/google/gson/NullExclusionStrategyTest.java,gson/src/test/java/com/google/gson/NullExclusionStrategyTest.java,42,"new FieldAttributes(String.class, String.class.getFields()[0]),"
True,gson/src/test/java/com/google/gson/NullExclusionStrategyTest.java,gson/src/test/java/com/google/gson/NullExclusionStrategyTest.java,43,Mode.SERIALIZE));
True,gson/src/test/java/com/google/gson/NullExclusionStrategyTest.java,gson/src/test/java/com/google/gson/NullExclusionStrategyTest.java,44,assertFalse(strategy.shouldSkipField(
True,gson/src/test/java/com/google/gson/NullExclusionStrategyTest.java,gson/src/test/java/com/google/gson/NullExclusionStrategyTest.java,45,"new FieldAttributes(String.class, String.class.getFields()[0]),"
True,gson/src/test/java/com/google/gson/NullExclusionStrategyTest.java,gson/src/test/java/com/google/gson/NullExclusionStrategyTest.java,46,Mode.DESERIALIZE));
False,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,45,ssertFalse(strategy.shouldSkipClass(clazz));
False,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,46,"ssertFalse(strategy.shouldSkipField(new FieldAttributes(clazz, f)));"
True,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,45,"assertFalse(strategy.shouldSkipClass(clazz, Mode.DESERIALIZE));"
True,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,46,"assertFalse(strategy.shouldSkipClass(clazz, Mode.SERIALIZE));"
True,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,48,"FieldAttributes fieldAttributes = new FieldAttributes(clazz, f);"
True,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,49,"assertFalse(strategy.shouldSkipField(fieldAttributes, Mode.DESERIALIZE));"
True,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,50,"assertFalse(strategy.shouldSkipField(fieldAttributes, Mode.SERIALIZE));"
False,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,54,ssertFalse(strategy.shouldSkipClass(clazz));
False,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,55,"ssertFalse(strategy.shouldSkipField(new FieldAttributes(clazz, f)));"
True,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,58,"assertFalse(strategy.shouldSkipClass(clazz, Mode.DESERIALIZE));"
True,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,59,"assertFalse(strategy.shouldSkipClass(clazz, Mode.SERIALIZE));"
True,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,61,"FieldAttributes fieldAttributes = new FieldAttributes(clazz, f);"
True,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,62,"assertFalse(strategy.shouldSkipField(fieldAttributes, Mode.DESERIALIZE));"
True,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,63,"assertFalse(strategy.shouldSkipField(fieldAttributes, Mode.SERIALIZE));"
False,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,63,ssertTrue(strategy.shouldSkipClass(clazz));
False,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,64,"ssertTrue(strategy.shouldSkipField(new FieldAttributes(clazz, f)));"
True,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,71,"assertTrue(strategy.shouldSkipClass(clazz, Mode.DESERIALIZE));"
True,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,72,"assertTrue(strategy.shouldSkipClass(clazz, Mode.SERIALIZE));"
True,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,74,"FieldAttributes fieldAttributes = new FieldAttributes(clazz, f);"
True,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,75,"assertTrue(strategy.shouldSkipField(fieldAttributes, Mode.DESERIALIZE));"
True,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,76,"assertTrue(strategy.shouldSkipField(fieldAttributes, Mode.SERIALIZE));"
False,gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java,228,"ssertEquals(year-1900, date.getYear());"
False,gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java,229,"ssertEquals(month, date.getMonth());"
False,gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java,230,"ssertEquals(day, date.getDate());"
True,gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java,228,"assertEquals(year-1900, date.getYear());"
True,gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java,229,"assertEquals(month, date.getMonth());"
True,gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java,230,"assertEquals(day, date.getDate());"
True,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,20,import com.google.gson.ExclusionStrategy2;
True,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,26,import com.google.gson.MockExclusionStrategy;
True,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,27,import com.google.gson.MockExclusionStrategy2;
True,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,28,import com.google.gson.Mode;
False,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,35, {@link ExclusionStrategy} objects.
True,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,39,* {@link ExclusionStrategy} and {@link ExclusionStrategy2} objects.
True,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,59,Gson gson = createGson(new MyExclusionStrategy(String.class));
True,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,66,public void testExclusionStrategy2Serialization() throws Exception {
True,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,67,"Gson gson = createGson(new MockExclusionStrategy2(false, true, Mode.DESERIALIZE));"
True,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,68,String json = gson.toJson(src);
True,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,69,"assertTrue(json.contains(""\""stringField\""""));"
True,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,70,"assertTrue(json.contains(""\""annotatedField\""""));"
True,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,71,"assertTrue(json.contains(""\""longField\""""));"
True,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,73,"gson = createGson(new MockExclusionStrategy2(false, true, Mode.SERIALIZE));"
True,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,74,json = gson.toJson(src);
True,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,75,"assertFalse(json.contains(""\""stringField\""""));"
True,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,76,"assertFalse(json.contains(""\""annotatedField\""""));"
True,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,77,"assertFalse(json.contains(""\""longField\""""));"
True,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,94,private static Gson createGson(ExclusionStrategy exclusionStrategy) {
True,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,95,return new GsonBuilder()
True,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,96,.setExclusionStrategies(exclusionStrategy)
True,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,97,.serializeNulls()
True,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,98,.create();
True,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,101,private static Gson createGson(ExclusionStrategy2 exclusionStrategy) {
True,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,102,return new GsonBuilder()
True,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,103,.setExclusionStrategies(exclusionStrategy)
True,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,104,.serializeNulls()
True,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,105,.create();
