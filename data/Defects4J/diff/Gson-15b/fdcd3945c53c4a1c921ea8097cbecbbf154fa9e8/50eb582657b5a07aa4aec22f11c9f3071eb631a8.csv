is_addition,old_file_path,new_file_path,line_num,content
False,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,347,eturn (value == null) ? 31 : value.hashCode();
True,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,347,if (value == null) {
True,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,348,return 31;
True,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,350,// Using recommended hashing algorithm from Effective Java for longs and doubles
True,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,351,if (isIntegral(this)) {
True,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,352,long value = getAsNumber().longValue();
True,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,353,return (int) (value ^ (value >>> 32));
True,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,355,if (isFloatingPoint(this)) {
True,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,356,long value = Double.doubleToLongBits(getAsNumber().doubleValue());
True,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,357,return (int) (value ^ (value >>> 32));
True,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,359,return value.hashCode();
True,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,374,if (isIntegral(this) && isIntegral(other)) {
True,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,375,return getAsNumber().longValue() == other.getAsNumber().longValue();
True,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,377,if (isFloatingPoint(this) && isFloatingPoint(other)) {
True,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,378,return getAsNumber().doubleValue() == other.getAsNumber().doubleValue();
True,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,384,* Returns true if the specified number is an integral type
True,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,385,"* (Long, Integer, Short, Byte, BigInteger)"
True,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,387,private static boolean isIntegral(JsonPrimitive primitive) {
True,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,388,if (primitive.value instanceof Number) {
True,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,389,Number number = (Number) primitive.value;
True,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,390,return number instanceof BigInteger || number instanceof Long || number instanceof Integer
True,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,391,|| number instanceof Short || number instanceof Byte;
True,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,393,return false;
True,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,397,"* Returns true if the specified number is a floating point type (BigDecimal, double, float)"
True,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,399,private static boolean isFloatingPoint(JsonPrimitive primitive) {
True,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,400,if (primitive.value instanceof Number) {
True,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,401,Number number = (Number) primitive.value;
True,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,402,return number instanceof BigDecimal || number instanceof Double || number instanceof Float;
True,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,404,return false;
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,84,public void testByteEqualsShort() {
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,85,JsonPrimitive p1 = new JsonPrimitive(new Byte((byte)10));
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,86,JsonPrimitive p2 = new JsonPrimitive(new Short((short)10));
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,87,"assertEquals(p1, p2);"
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,88,"assertEquals(p1.hashCode(), p2.hashCode());"
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,91,public void testByteEqualsInteger() {
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,92,JsonPrimitive p1 = new JsonPrimitive(new Byte((byte)10));
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,93,JsonPrimitive p2 = new JsonPrimitive(new Integer(10));
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,94,"assertEquals(p1, p2);"
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,95,"assertEquals(p1.hashCode(), p2.hashCode());"
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,98,public void testByteEqualsLong() {
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,99,JsonPrimitive p1 = new JsonPrimitive(new Byte((byte)10));
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,100,JsonPrimitive p2 = new JsonPrimitive(new Long(10L));
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,101,"assertEquals(p1, p2);"
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,102,"assertEquals(p1.hashCode(), p2.hashCode());"
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,105,public void testByteEqualsBigInteger() {
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,106,JsonPrimitive p1 = new JsonPrimitive(new Byte((byte)10));
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,107,"JsonPrimitive p2 = new JsonPrimitive(new BigInteger(""10""));"
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,108,"assertEquals(p1, p2);"
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,109,"assertEquals(p1.hashCode(), p2.hashCode());"
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,112,public void testShortEqualsInteger() {
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,113,JsonPrimitive p1 = new JsonPrimitive(new Short((short)10));
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,114,JsonPrimitive p2 = new JsonPrimitive(new Integer(10));
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,115,"assertEquals(p1, p2);"
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,116,"assertEquals(p1.hashCode(), p2.hashCode());"
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,119,public void testShortEqualsLong() {
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,120,JsonPrimitive p1 = new JsonPrimitive(new Short((short)10));
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,121,JsonPrimitive p2 = new JsonPrimitive(new Long(10));
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,122,"assertEquals(p1, p2);"
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,123,"assertEquals(p1.hashCode(), p2.hashCode());"
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,126,public void testShortEqualsBigInteger() {
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,127,JsonPrimitive p1 = new JsonPrimitive(new Short((short)10));
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,128,"JsonPrimitive p2 = new JsonPrimitive(new BigInteger(""10""));"
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,129,"assertEquals(p1, p2);"
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,130,"assertEquals(p1.hashCode(), p2.hashCode());"
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,133,public void testIntegerEqualsLong() {
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,134,JsonPrimitive p1 = new JsonPrimitive(new Integer(10));
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,135,JsonPrimitive p2 = new JsonPrimitive(new Long(10L));
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,136,"assertEquals(p1, p2);"
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,137,"assertEquals(p1.hashCode(), p2.hashCode());"
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,140,public void testIntegerEqualsBigInteger() {
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,141,JsonPrimitive p1 = new JsonPrimitive(new Integer(10));
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,142,"JsonPrimitive p2 = new JsonPrimitive(new BigInteger(""10""));"
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,143,"assertEquals(p1, p2);"
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,144,"assertEquals(p1.hashCode(), p2.hashCode());"
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,147,public void testLongEqualsBigInteger() {
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,148,JsonPrimitive p1 = new JsonPrimitive(new Long(10L));
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,149,"JsonPrimitive p2 = new JsonPrimitive(new BigInteger(""10""));"
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,150,"assertEquals(p1, p2);"
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,151,"assertEquals(p1.hashCode(), p2.hashCode());"
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,154,public void testFloatEqualsDouble() {
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,155,JsonPrimitive p1 = new JsonPrimitive(new Float(10.25F));
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,156,JsonPrimitive p2 = new JsonPrimitive(new Double(10.25D));
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,157,"assertEquals(p1, p2);"
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,158,"assertEquals(p1.hashCode(), p2.hashCode());"
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,161,public void testFloatEqualsBigDecimal() {
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,162,JsonPrimitive p1 = new JsonPrimitive(new Float(10.25F));
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,163,"JsonPrimitive p2 = new JsonPrimitive(new BigDecimal(""10.25""));"
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,164,"assertEquals(p1, p2);"
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,165,"assertEquals(p1.hashCode(), p2.hashCode());"
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,168,public void testDoubleEqualsBigDecimal() {
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,169,JsonPrimitive p1 = new JsonPrimitive(new Double(10.25D));
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,170,"JsonPrimitive p2 = new JsonPrimitive(new BigDecimal(""10.25""));"
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,171,"assertEquals(p1, p2);"
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,172,"assertEquals(p1.hashCode(), p2.hashCode());"
