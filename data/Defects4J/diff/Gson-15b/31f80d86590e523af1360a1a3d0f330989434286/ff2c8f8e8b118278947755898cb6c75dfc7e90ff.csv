is_addition,old_file_path,new_file_path,line_num,content
True,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,238,}.nullSafe();
True,extras/src/test/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactoryTest.java,extras/src/test/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactoryTest.java,170,public void testSerializeWrappedNullValue() {
True,extras/src/test/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactoryTest.java,extras/src/test/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactoryTest.java,171,TypeAdapterFactory billingAdapter = RuntimeTypeAdapterFactory.of(BillingInstrument.class)
True,extras/src/test/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactoryTest.java,extras/src/test/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactoryTest.java,172,.registerSubtype(CreditCard.class)
True,extras/src/test/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactoryTest.java,extras/src/test/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactoryTest.java,173,.registerSubtype(BankTransfer.class);
True,extras/src/test/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactoryTest.java,extras/src/test/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactoryTest.java,174,Gson gson = new GsonBuilder()
True,extras/src/test/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactoryTest.java,extras/src/test/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactoryTest.java,175,.registerTypeAdapterFactory(billingAdapter)
True,extras/src/test/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactoryTest.java,extras/src/test/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactoryTest.java,176,.create();
True,extras/src/test/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactoryTest.java,extras/src/test/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactoryTest.java,177,"String serialized = gson.toJson(new BillingInstrumentWrapper(null), BillingInstrumentWrapper.class);"
True,extras/src/test/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactoryTest.java,extras/src/test/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactoryTest.java,178,"BillingInstrumentWrapper deserialized = gson.fromJson(serialized, BillingInstrumentWrapper.class);"
True,extras/src/test/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactoryTest.java,extras/src/test/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactoryTest.java,179,assertNull(deserialized.instrument);
True,extras/src/test/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactoryTest.java,extras/src/test/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactoryTest.java,182,static class BillingInstrumentWrapper {
True,extras/src/test/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactoryTest.java,extras/src/test/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactoryTest.java,183,BillingInstrument instrument;
True,extras/src/test/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactoryTest.java,extras/src/test/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactoryTest.java,184,BillingInstrumentWrapper(BillingInstrument instrument) {
True,extras/src/test/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactoryTest.java,extras/src/test/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactoryTest.java,185,this.instrument = instrument;
True,gson/src/main/java/com/google/gson/FieldNamingPolicy.java,gson/src/main/java/com/google/gson/FieldNamingPolicy.java,20,import java.util.Locale;
False,gson/src/main/java/com/google/gson/FieldNamingPolicy.java,gson/src/main/java/com/google/gson/FieldNamingPolicy.java,91,"eturn separateCamelCase(f.getName(), ""_"").toLowerCase();"
True,gson/src/main/java/com/google/gson/FieldNamingPolicy.java,gson/src/main/java/com/google/gson/FieldNamingPolicy.java,92,"return separateCamelCase(f.getName(), ""_"").toLowerCase(Locale.ENGLISH);"
False,gson/src/main/java/com/google/gson/FieldNamingPolicy.java,gson/src/main/java/com/google/gson/FieldNamingPolicy.java,114,"eturn separateCamelCase(f.getName(), ""-"").toLowerCase();"
True,gson/src/main/java/com/google/gson/FieldNamingPolicy.java,gson/src/main/java/com/google/gson/FieldNamingPolicy.java,115,"return separateCamelCase(f.getName(), ""-"").toLowerCase(Locale.ENGLISH);"
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,59, methods on it.
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,59,* methods on it. Gson instances are Thread-safe so you can reuse them freely across multiple
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,60,* threads.
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,418,*  Note that this call will skip all factories registered before {@code skipPast}. In case of
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,419,*  multiple TypeAdapterFactories registered it is up to the caller of this function to insure
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,420,*  that the order of registration does not prevent this method from reaching a factory they
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,421,*  would expect to reply from this call.
True,gson/src/main/java/com/google/gson/JsonArray.java,gson/src/main/java/com/google/gson/JsonArray.java,53,* Adds the specified boolean to self.
True,gson/src/main/java/com/google/gson/JsonArray.java,gson/src/main/java/com/google/gson/JsonArray.java,55,* @param bool the boolean that needs to be added to the array.
True,gson/src/main/java/com/google/gson/JsonArray.java,gson/src/main/java/com/google/gson/JsonArray.java,57,public void add(Boolean bool) {
True,gson/src/main/java/com/google/gson/JsonArray.java,gson/src/main/java/com/google/gson/JsonArray.java,58,elements.add(bool == null ? JsonNull.INSTANCE : new JsonPrimitive(bool));
True,gson/src/main/java/com/google/gson/JsonArray.java,gson/src/main/java/com/google/gson/JsonArray.java,62,* Adds the specified character to self.
True,gson/src/main/java/com/google/gson/JsonArray.java,gson/src/main/java/com/google/gson/JsonArray.java,64,* @param character the character that needs to be added to the array.
True,gson/src/main/java/com/google/gson/JsonArray.java,gson/src/main/java/com/google/gson/JsonArray.java,66,public void add(Character character) {
True,gson/src/main/java/com/google/gson/JsonArray.java,gson/src/main/java/com/google/gson/JsonArray.java,67,elements.add(character == null ? JsonNull.INSTANCE : new JsonPrimitive(character));
True,gson/src/main/java/com/google/gson/JsonArray.java,gson/src/main/java/com/google/gson/JsonArray.java,71,* Adds the specified number to self.
True,gson/src/main/java/com/google/gson/JsonArray.java,gson/src/main/java/com/google/gson/JsonArray.java,73,* @param number the number that needs to be added to the array.
True,gson/src/main/java/com/google/gson/JsonArray.java,gson/src/main/java/com/google/gson/JsonArray.java,75,public void add(Number number) {
True,gson/src/main/java/com/google/gson/JsonArray.java,gson/src/main/java/com/google/gson/JsonArray.java,76,elements.add(number == null ? JsonNull.INSTANCE : new JsonPrimitive(number));
True,gson/src/main/java/com/google/gson/JsonArray.java,gson/src/main/java/com/google/gson/JsonArray.java,80,* Adds the specified string to self.
True,gson/src/main/java/com/google/gson/JsonArray.java,gson/src/main/java/com/google/gson/JsonArray.java,82,* @param string the string that needs to be added to the array.
True,gson/src/main/java/com/google/gson/JsonArray.java,gson/src/main/java/com/google/gson/JsonArray.java,84,public void add(String string) {
True,gson/src/main/java/com/google/gson/JsonArray.java,gson/src/main/java/com/google/gson/JsonArray.java,85,elements.add(string == null ? JsonNull.INSTANCE : new JsonPrimitive(string));
False,gson/src/main/java/com/google/gson/TypeAdapter.java,gson/src/main/java/com/google/gson/TypeAdapter.java,214,ublic final String toJson(T value) throws IOException {
True,gson/src/main/java/com/google/gson/TypeAdapter.java,gson/src/main/java/com/google/gson/TypeAdapter.java,214,public final String toJson(T value) {
False,gson/src/main/java/com/google/gson/TypeAdapter.java,gson/src/main/java/com/google/gson/TypeAdapter.java,216,"oJson(stringWriter, value);"
True,gson/src/main/java/com/google/gson/TypeAdapter.java,gson/src/main/java/com/google/gson/TypeAdapter.java,216,try {
True,gson/src/main/java/com/google/gson/TypeAdapter.java,gson/src/main/java/com/google/gson/TypeAdapter.java,217,"toJson(stringWriter, value);"
True,gson/src/main/java/com/google/gson/TypeAdapter.java,gson/src/main/java/com/google/gson/TypeAdapter.java,218,} catch (IOException e) {
True,gson/src/main/java/com/google/gson/TypeAdapter.java,gson/src/main/java/com/google/gson/TypeAdapter.java,219,throw new AssertionError(e); // No I/O writing to a StringWriter.
False,gson/src/main/java/com/google/gson/annotations/SerializedName.java,gson/src/main/java/com/google/gson/annotations/SerializedName.java,67,Target(ElementType.FIELD)
True,gson/src/main/java/com/google/gson/annotations/SerializedName.java,gson/src/main/java/com/google/gson/annotations/SerializedName.java,67,"@Target({ElementType.FIELD, ElementType.METHOD})"
True,gson/src/main/java/com/google/gson/internal/$Gson$Preconditions.java,gson/src/main/java/com/google/gson/internal/$Gson$Preconditions.java,33,private $Gson$Preconditions() {
True,gson/src/main/java/com/google/gson/internal/$Gson$Preconditions.java,gson/src/main/java/com/google/gson/internal/$Gson$Preconditions.java,34,throw new UnsupportedOperationException();
False,gson/src/main/java/com/google/gson/internal/$Gson$Types.java,gson/src/main/java/com/google/gson/internal/$Gson$Types.java,46,rivate $Gson$Types() {}
True,gson/src/main/java/com/google/gson/internal/$Gson$Types.java,gson/src/main/java/com/google/gson/internal/$Gson$Types.java,46,private $Gson$Types() {
True,gson/src/main/java/com/google/gson/internal/$Gson$Types.java,gson/src/main/java/com/google/gson/internal/$Gson$Types.java,47,throw new UnsupportedOperationException();
False,gson/src/main/java/com/google/gson/internal/Primitives.java,gson/src/main/java/com/google/gson/internal/Primitives.java,32,rivate Primitives() {}
True,gson/src/main/java/com/google/gson/internal/Primitives.java,gson/src/main/java/com/google/gson/internal/Primitives.java,32,private Primitives() {
True,gson/src/main/java/com/google/gson/internal/Primitives.java,gson/src/main/java/com/google/gson/internal/Primitives.java,33,throw new UnsupportedOperationException();
True,gson/src/main/java/com/google/gson/internal/Streams.java,gson/src/main/java/com/google/gson/internal/Streams.java,36,private Streams() {
True,gson/src/main/java/com/google/gson/internal/Streams.java,gson/src/main/java/com/google/gson/internal/Streams.java,37,throw new UnsupportedOperationException();
False,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,58,rivate TypeAdapters() {}
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,58,private TypeAdapters() {
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,59,throw new UnsupportedOperationException();
True,gson/src/main/java/com/google/gson/stream/JsonWriter.java,gson/src/main/java/com/google/gson/stream/JsonWriter.java,424,* Writes {@code value} directly to the writer without quoting or
True,gson/src/main/java/com/google/gson/stream/JsonWriter.java,gson/src/main/java/com/google/gson/stream/JsonWriter.java,425,* escaping.
True,gson/src/main/java/com/google/gson/stream/JsonWriter.java,gson/src/main/java/com/google/gson/stream/JsonWriter.java,427,"* @param value the literal string value, or null to encode a null literal."
True,gson/src/main/java/com/google/gson/stream/JsonWriter.java,gson/src/main/java/com/google/gson/stream/JsonWriter.java,428,* @return this writer.
True,gson/src/main/java/com/google/gson/stream/JsonWriter.java,gson/src/main/java/com/google/gson/stream/JsonWriter.java,430,public JsonWriter jsonValue(String value) throws IOException {
True,gson/src/main/java/com/google/gson/stream/JsonWriter.java,gson/src/main/java/com/google/gson/stream/JsonWriter.java,431,if (value == null) {
True,gson/src/main/java/com/google/gson/stream/JsonWriter.java,gson/src/main/java/com/google/gson/stream/JsonWriter.java,432,return nullValue();
True,gson/src/main/java/com/google/gson/stream/JsonWriter.java,gson/src/main/java/com/google/gson/stream/JsonWriter.java,434,writeDeferredName();
True,gson/src/main/java/com/google/gson/stream/JsonWriter.java,gson/src/main/java/com/google/gson/stream/JsonWriter.java,435,beforeValue(false);
True,gson/src/main/java/com/google/gson/stream/JsonWriter.java,gson/src/main/java/com/google/gson/stream/JsonWriter.java,436,out.append(value);
True,gson/src/main/java/com/google/gson/stream/JsonWriter.java,gson/src/main/java/com/google/gson/stream/JsonWriter.java,437,return this;
False,gson/src/test/java/com/google/gson/DefaultInetAddressTypeAdapterTest.java,gson/src/test/java/com/google/gson/DefaultInetAddressTypeAdapterTest.java,38,netAddress localhost = InetAddress.getLocalHost();
False,gson/src/test/java/com/google/gson/DefaultInetAddressTypeAdapterTest.java,gson/src/test/java/com/google/gson/DefaultInetAddressTypeAdapterTest.java,39,tring localInetAddress = gson.toJson(localhost);
False,gson/src/test/java/com/google/gson/DefaultInetAddressTypeAdapterTest.java,gson/src/test/java/com/google/gson/DefaultInetAddressTypeAdapterTest.java,40,"ssertEquals(""\"""" + localhost.getHostAddress() + ""\"""", localInetAddress);"
True,gson/src/test/java/com/google/gson/DefaultInetAddressTypeAdapterTest.java,gson/src/test/java/com/google/gson/DefaultInetAddressTypeAdapterTest.java,38,"InetAddress address = InetAddress.getByName(""8.8.8.8"");"
True,gson/src/test/java/com/google/gson/DefaultInetAddressTypeAdapterTest.java,gson/src/test/java/com/google/gson/DefaultInetAddressTypeAdapterTest.java,39,String jsonAddress = gson.toJson(address);
True,gson/src/test/java/com/google/gson/DefaultInetAddressTypeAdapterTest.java,gson/src/test/java/com/google/gson/DefaultInetAddressTypeAdapterTest.java,40,"assertEquals(""\""8.8.8.8\"""", jsonAddress);"
False,gson/src/test/java/com/google/gson/DefaultInetAddressTypeAdapterTest.java,gson/src/test/java/com/google/gson/DefaultInetAddressTypeAdapterTest.java,42,"netAddress value = gson.fromJson(localInetAddress, InetAddress.class);"
False,gson/src/test/java/com/google/gson/DefaultInetAddressTypeAdapterTest.java,gson/src/test/java/com/google/gson/DefaultInetAddressTypeAdapterTest.java,43,"ssertEquals(localhost, value);"
True,gson/src/test/java/com/google/gson/DefaultInetAddressTypeAdapterTest.java,gson/src/test/java/com/google/gson/DefaultInetAddressTypeAdapterTest.java,42,"InetAddress value = gson.fromJson(jsonAddress, InetAddress.class);"
True,gson/src/test/java/com/google/gson/DefaultInetAddressTypeAdapterTest.java,gson/src/test/java/com/google/gson/DefaultInetAddressTypeAdapterTest.java,43,"assertEquals(value, address);"
True,gson/src/test/java/com/google/gson/functional/FieldNamingTest.java,gson/src/test/java/com/google/gson/functional/FieldNamingTest.java,25,import com.google.gson.FieldNamingPolicy;
False,gson/src/test/java/com/google/gson/functional/FieldNamingTest.java,gson/src/test/java/com/google/gson/functional/FieldNamingTest.java,31,son gson = new GsonBuilder().setFieldNamingPolicy(IDENTITY).create();
True,gson/src/test/java/com/google/gson/functional/FieldNamingTest.java,gson/src/test/java/com/google/gson/functional/FieldNamingTest.java,33,Gson gson = getGsonWithNamingPolicy(IDENTITY);
False,gson/src/test/java/com/google/gson/functional/FieldNamingTest.java,gson/src/test/java/com/google/gson/functional/FieldNamingTest.java,34,"'annotatedName':7}"","
True,gson/src/test/java/com/google/gson/functional/FieldNamingTest.java,gson/src/test/java/com/google/gson/functional/FieldNamingTest.java,36,"""'annotatedName':7,'lowerId':8}"","
False,gson/src/test/java/com/google/gson/functional/FieldNamingTest.java,gson/src/test/java/com/google/gson/functional/FieldNamingTest.java,39,son gson = new GsonBuilder().setFieldNamingPolicy(UPPER_CAMEL_CASE).create();
True,gson/src/test/java/com/google/gson/functional/FieldNamingTest.java,gson/src/test/java/com/google/gson/functional/FieldNamingTest.java,41,Gson gson = getGsonWithNamingPolicy(UPPER_CAMEL_CASE);
False,gson/src/test/java/com/google/gson/functional/FieldNamingTest.java,gson/src/test/java/com/google/gson/functional/FieldNamingTest.java,42,"'annotatedName':7}"","
True,gson/src/test/java/com/google/gson/functional/FieldNamingTest.java,gson/src/test/java/com/google/gson/functional/FieldNamingTest.java,44,"""'annotatedName':7,'LowerId':8}"","
False,gson/src/test/java/com/google/gson/functional/FieldNamingTest.java,gson/src/test/java/com/google/gson/functional/FieldNamingTest.java,47,son gson = new GsonBuilder().setFieldNamingPolicy(UPPER_CAMEL_CASE_WITH_SPACES).create();
True,gson/src/test/java/com/google/gson/functional/FieldNamingTest.java,gson/src/test/java/com/google/gson/functional/FieldNamingTest.java,49,Gson gson = getGsonWithNamingPolicy(UPPER_CAMEL_CASE_WITH_SPACES);
False,gson/src/test/java/com/google/gson/functional/FieldNamingTest.java,gson/src/test/java/com/google/gson/functional/FieldNamingTest.java,50,"'annotatedName':7}"","
True,gson/src/test/java/com/google/gson/functional/FieldNamingTest.java,gson/src/test/java/com/google/gson/functional/FieldNamingTest.java,52,"""'annotatedName':7,'Lower Id':8}"","
False,gson/src/test/java/com/google/gson/functional/FieldNamingTest.java,gson/src/test/java/com/google/gson/functional/FieldNamingTest.java,55,son gson = new GsonBuilder().setFieldNamingPolicy(LOWER_CASE_WITH_UNDERSCORES).create();
True,gson/src/test/java/com/google/gson/functional/FieldNamingTest.java,gson/src/test/java/com/google/gson/functional/FieldNamingTest.java,57,Gson gson = getGsonWithNamingPolicy(LOWER_CASE_WITH_UNDERSCORES);
False,gson/src/test/java/com/google/gson/functional/FieldNamingTest.java,gson/src/test/java/com/google/gson/functional/FieldNamingTest.java,58,"'annotatedName':7}"","
True,gson/src/test/java/com/google/gson/functional/FieldNamingTest.java,gson/src/test/java/com/google/gson/functional/FieldNamingTest.java,60,"""'annotatedName':7,'lower_id':8}"","
False,gson/src/test/java/com/google/gson/functional/FieldNamingTest.java,gson/src/test/java/com/google/gson/functional/FieldNamingTest.java,63,son gson = new GsonBuilder().setFieldNamingPolicy(LOWER_CASE_WITH_DASHES).create();
True,gson/src/test/java/com/google/gson/functional/FieldNamingTest.java,gson/src/test/java/com/google/gson/functional/FieldNamingTest.java,65,Gson gson = getGsonWithNamingPolicy(LOWER_CASE_WITH_DASHES);
False,gson/src/test/java/com/google/gson/functional/FieldNamingTest.java,gson/src/test/java/com/google/gson/functional/FieldNamingTest.java,66,"'annotatedName':7}"","
True,gson/src/test/java/com/google/gson/functional/FieldNamingTest.java,gson/src/test/java/com/google/gson/functional/FieldNamingTest.java,68,"""'annotatedName':7,'lower-id':8}"","
True,gson/src/test/java/com/google/gson/functional/FieldNamingTest.java,gson/src/test/java/com/google/gson/functional/FieldNamingTest.java,72,private Gson getGsonWithNamingPolicy(FieldNamingPolicy fieldNamingPolicy){
True,gson/src/test/java/com/google/gson/functional/FieldNamingTest.java,gson/src/test/java/com/google/gson/functional/FieldNamingTest.java,73,return new GsonBuilder()
True,gson/src/test/java/com/google/gson/functional/FieldNamingTest.java,gson/src/test/java/com/google/gson/functional/FieldNamingTest.java,74,.setFieldNamingPolicy(fieldNamingPolicy)
True,gson/src/test/java/com/google/gson/functional/FieldNamingTest.java,gson/src/test/java/com/google/gson/functional/FieldNamingTest.java,75,.create();
True,gson/src/test/java/com/google/gson/functional/FieldNamingTest.java,gson/src/test/java/com/google/gson/functional/FieldNamingTest.java,87,int lowerId = 8;
True,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,2,* Copyright (C) 2008 Google Inc.
True,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,5,* you may not use this file except in compliance with the License.
True,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,6,* You may obtain a copy of the License at
True,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,8,* http://www.apache.org/licenses/LICENSE-2.0
True,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,13,* See the License for the specific language governing permissions and
True,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,14,* limitations under the License.
True,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,17,package com.google.gson.functional;
True,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,19,import com.google.gson.JsonArray;
True,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,20,import junit.framework.TestCase;
True,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,22,import java.math.BigInteger;
True,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,25,* Functional tests for adding primitives to a JsonArray.
True,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,27,* @author Dillon Dixon
True,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,29,public class JsonArrayTest extends TestCase {
True,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,31,public void testStringPrimitiveAddition() {
True,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,32,JsonArray jsonArray = new JsonArray();
True,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,34,"jsonArray.add(""Hello"");"
True,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,35,"jsonArray.add(""Goodbye"");"
True,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,36,"jsonArray.add(""Thank you"");"
True,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,37,jsonArray.add((String) null);
True,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,38,"jsonArray.add(""Yes"");"
True,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,40,"assertEquals(""[\""Hello\"",\""Goodbye\"",\""Thank you\"",null,\""Yes\""]"", jsonArray.toString());"
True,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,43,public void testIntegerPrimitiveAddition() {
True,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,44,JsonArray jsonArray = new JsonArray();
True,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,46,int x = 1;
True,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,47,jsonArray.add(x);
True,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,49,x = 2;
True,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,50,jsonArray.add(x);
True,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,52,x = -3;
True,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,53,jsonArray.add(x);
True,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,55,jsonArray.add((Integer) null);
True,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,57,x = 4;
True,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,58,jsonArray.add(x);
True,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,60,x = 0;
True,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,61,jsonArray.add(x);
True,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,63,"assertEquals(""[1,2,-3,null,4,0]"", jsonArray.toString());"
True,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,66,public void testDoublePrimitiveAddition() {
True,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,67,JsonArray jsonArray = new JsonArray();
True,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,69,double x = 1.0;
True,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,70,jsonArray.add(x);
True,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,72,x = 2.13232;
True,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,73,jsonArray.add(x);
True,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,75,x = 0.121;
True,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,76,jsonArray.add(x);
True,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,78,jsonArray.add((Double) null);
True,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,80,x = -0.00234;
True,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,81,jsonArray.add(x);
True,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,83,jsonArray.add((Double) null);
True,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,85,"assertEquals(""[1.0,2.13232,0.121,null,-0.00234,null]"", jsonArray.toString());"
True,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,88,public void testBooleanPrimitiveAddition() {
True,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,89,JsonArray jsonArray = new JsonArray();
True,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,91,jsonArray.add(true);
True,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,92,jsonArray.add(true);
True,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,93,jsonArray.add(false);
True,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,94,jsonArray.add(false);
True,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,95,jsonArray.add((Boolean) null);
True,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,96,jsonArray.add(true);
True,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,98,"assertEquals(""[true,true,false,false,null,true]"", jsonArray.toString());"
True,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,101,public void testCharPrimitiveAddition() {
True,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,102,JsonArray jsonArray = new JsonArray();
True,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,104,jsonArray.add('a');
True,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,105,jsonArray.add('e');
True,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,106,jsonArray.add('i');
True,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,107,jsonArray.add((char) 111);
True,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,108,jsonArray.add((Character) null);
True,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,109,jsonArray.add('u');
True,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,110,"jsonArray.add(""and sometimes Y"");"
True,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,112,"assertEquals(""[\""a\"",\""e\"",\""i\"",\""o\"",null,\""u\"",\""and sometimes Y\""]"", jsonArray.toString());"
True,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,115,public void testMixedPrimitiveAddition() {
True,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,116,JsonArray jsonArray = new JsonArray();
True,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,118,jsonArray.add('a');
True,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,119,"jsonArray.add(""apple"");"
True,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,120,jsonArray.add(12121);
True,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,121,jsonArray.add((char) 111);
True,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,122,jsonArray.add((Boolean) null);
True,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,123,jsonArray.add((Character) null);
True,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,124,jsonArray.add(12.232);
True,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,125,jsonArray.add(BigInteger.valueOf(2323));
True,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,127,"assertEquals(""[\""a\"",\""apple\"",12121,\""o\"",null,null,12.232,2323]"", jsonArray.toString());"
True,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,130,public void testNullPrimitiveAddition() {
True,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,131,JsonArray jsonArray = new JsonArray();
True,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,133,jsonArray.add((Character) null);
True,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,134,jsonArray.add((Boolean) null);
True,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,135,jsonArray.add((Integer) null);
True,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,136,jsonArray.add((Double) null);
True,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,137,jsonArray.add((Float) null);
True,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,138,jsonArray.add((BigInteger) null);
True,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,139,jsonArray.add((String) null);
True,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,140,jsonArray.add((Boolean) null);
True,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,141,jsonArray.add((Number) null);
True,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,143,"assertEquals(""[null,null,null,null,null,null,null,null,null]"", jsonArray.toString());"
True,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,146,public void testSameAddition() {
True,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,147,JsonArray jsonArray = new JsonArray();
True,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,149,jsonArray.add('a');
True,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,150,jsonArray.add('a');
True,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,151,jsonArray.add(true);
True,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,152,jsonArray.add(true);
True,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,153,jsonArray.add(1212);
True,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,154,jsonArray.add(1212);
True,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,155,jsonArray.add(34.34);
True,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,156,jsonArray.add(34.34);
True,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,157,jsonArray.add((Boolean) null);
True,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,158,jsonArray.add((Boolean) null);
True,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,gson/src/test/java/com/google/gson/functional/JsonArrayTest.java,160,"assertEquals(""[\""a\"",\""a\"",true,true,1212,1212,34.34,34.34,null,null]"", jsonArray.toString());"
True,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,201,public void testDoubleArrayDeserialization() {
True,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,202,"String json = ""[0.0, 0.004761904761904762, 3.4013606962703525E-4, 7.936508173034305E-4,"""
True,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,203,"+ ""0.0011904761904761906, 0.0]"";"
True,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,204,"double[] values = gson.fromJson(json, double[].class);"
True,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,205,"assertEquals(6, values.length);"
True,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,206,"assertEquals(0.0, values[0]);"
True,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,207,"assertEquals(0.004761904761904762, values[1]);"
True,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,208,"assertEquals(3.4013606962703525E-4, values[2]);"
True,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,209,"assertEquals(7.936508173034305E-4, values[3]);"
True,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,210,"assertEquals(0.0011904761904761906, values[4]);"
True,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,211,"assertEquals(0.0, values[5]);"
True,gson/src/test/java/com/google/gson/stream/JsonWriterTest.java,gson/src/test/java/com/google/gson/stream/JsonWriterTest.java,129,public void testJsonValue() throws IOException {
True,gson/src/test/java/com/google/gson/stream/JsonWriterTest.java,gson/src/test/java/com/google/gson/stream/JsonWriterTest.java,130,StringWriter stringWriter = new StringWriter();
True,gson/src/test/java/com/google/gson/stream/JsonWriterTest.java,gson/src/test/java/com/google/gson/stream/JsonWriterTest.java,131,JsonWriter jsonWriter = new JsonWriter(stringWriter);
True,gson/src/test/java/com/google/gson/stream/JsonWriterTest.java,gson/src/test/java/com/google/gson/stream/JsonWriterTest.java,132,jsonWriter.beginObject();
True,gson/src/test/java/com/google/gson/stream/JsonWriterTest.java,gson/src/test/java/com/google/gson/stream/JsonWriterTest.java,133,"jsonWriter.name(""a"");"
True,gson/src/test/java/com/google/gson/stream/JsonWriterTest.java,gson/src/test/java/com/google/gson/stream/JsonWriterTest.java,134,"jsonWriter.jsonValue(""{\""b\"":true}"");"
True,gson/src/test/java/com/google/gson/stream/JsonWriterTest.java,gson/src/test/java/com/google/gson/stream/JsonWriterTest.java,135,"jsonWriter.name(""c"");"
True,gson/src/test/java/com/google/gson/stream/JsonWriterTest.java,gson/src/test/java/com/google/gson/stream/JsonWriterTest.java,136,jsonWriter.value(1);
True,gson/src/test/java/com/google/gson/stream/JsonWriterTest.java,gson/src/test/java/com/google/gson/stream/JsonWriterTest.java,137,jsonWriter.endObject();
True,gson/src/test/java/com/google/gson/stream/JsonWriterTest.java,gson/src/test/java/com/google/gson/stream/JsonWriterTest.java,138,"assertEquals(""{\""a\"":{\""b\"":true},\""c\"":1}"", stringWriter.toString());"
