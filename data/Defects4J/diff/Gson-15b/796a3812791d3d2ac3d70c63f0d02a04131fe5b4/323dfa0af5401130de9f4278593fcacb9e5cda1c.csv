is_addition,old_file_path,new_file_path,line_num,content
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,23,mport com.google.gson.internal.GsonInternalAccess;
False,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,62,"inal TypeAdapter<T> typeAdapter = GsonInternalAccess.INSTANCE.getNextAdapter(gson, this, type);"
True,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,extras/src/main/java/com/google/gson/graph/GraphTypeAdapterFactory.java,61,"final TypeAdapter<T> typeAdapter = gson.getNextAdapter(this, type);"
False,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,21,mport com.google.gson.JsonIOException;
False,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,27,mport com.google.gson.internal.GsonInternalAccess;
False,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,29,mport com.google.gson.internal.bind.JsonTreeWriter;
False,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,30,mport com.google.gson.internal.bind.JsonTreeReader;
False,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,197,ypeAdapter<?> delegate = GsonInternalAccess.INSTANCE
False,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,198,"getNextAdapter(gson, this, TypeToken.get(entry.getValue()));"
True,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,193,"TypeAdapter<?> delegate = gson.getNextAdapter(this, TypeToken.get(entry.getValue()));"
False,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,218,"eturn fromJsonTree(delegate, jsonElement);"
False,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,221,/ TODO: remove this when TypeAdapter.fromJsonTree() is public
False,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,222,"rivate T fromJsonTree(TypeAdapter<T> delegate, JsonElement jsonTree) {"
False,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,223,ry {
False,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,224,sonReader jsonReader = new JsonTreeReader(jsonTree);
False,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,225,sonReader.setLenient(true);
False,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,226,eturn delegate.read(jsonReader);
False,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,227, catch (IOException e) {
False,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,228,hrow new JsonIOException(e);
True,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,213,return delegate.fromJsonTree(jsonElement);
False,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,241,"sonObject jsonObject = toJsonTree(delegate, value).getAsJsonObject();"
True,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,225,JsonObject jsonObject = delegate.toJsonTree(value).getAsJsonObject();
False,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,254,/ TODO: remove this when TypeAdapter.toJsonTree() is public
False,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,255,"rivate JsonElement toJsonTree(TypeAdapter<T> delegate, T value) {"
False,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,256,ry {
False,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,257,sonTreeWriter jsonWriter = new JsonTreeWriter();
False,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,258,sonWriter.setLenient(true);
False,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,259,"elegate.write(jsonWriter, value);"
False,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,260,eturn jsonWriter.get();
False,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,261, catch (IOException e) {
False,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java,262,hrow new JsonIOException(e);
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,21,mport com.google.gson.internal.GsonInternalAccess;
False,gson/src/main/java/com/google/gson/TreeTypeAdapter.java,gson/src/main/java/com/google/gson/TreeTypeAdapter.java,20,mport com.google.gson.internal.GsonInternalAccess;
False,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,144," (delegate = GsonInternalAccess.INSTANCE.getNextAdapter(gson, Excluder.this, type));"
True,gson/src/main/java/com/google/gson/internal/Excluder.java,gson/src/main/java/com/google/gson/internal/Excluder.java,144,": (delegate = gson.getNextAdapter(Excluder.this, type));"
False,gson/src/main/java/com/google/gson/internal/GsonInternalAccess.java,gson/src/main/java/com/google/gson/internal/GsonInternalAccess.java,2, Copyright (C) 2011 Google Inc.
False,gson/src/main/java/com/google/gson/internal/GsonInternalAccess.java,gson/src/main/java/com/google/gson/internal/GsonInternalAccess.java,4," Licensed under the Apache License, Version 2.0 (the ""License"");"
False,gson/src/main/java/com/google/gson/internal/GsonInternalAccess.java,gson/src/main/java/com/google/gson/internal/GsonInternalAccess.java,5, you may not use this file except in compliance with the License.
False,gson/src/main/java/com/google/gson/internal/GsonInternalAccess.java,gson/src/main/java/com/google/gson/internal/GsonInternalAccess.java,6, You may obtain a copy of the License at
False,gson/src/main/java/com/google/gson/internal/GsonInternalAccess.java,gson/src/main/java/com/google/gson/internal/GsonInternalAccess.java,8,      http://www.apache.org/licenses/LICENSE-2.0
False,gson/src/main/java/com/google/gson/internal/GsonInternalAccess.java,gson/src/main/java/com/google/gson/internal/GsonInternalAccess.java,10," Unless required by applicable law or agreed to in writing, software"
False,gson/src/main/java/com/google/gson/internal/GsonInternalAccess.java,gson/src/main/java/com/google/gson/internal/GsonInternalAccess.java,11," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,gson/src/main/java/com/google/gson/internal/GsonInternalAccess.java,gson/src/main/java/com/google/gson/internal/GsonInternalAccess.java,12," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,gson/src/main/java/com/google/gson/internal/GsonInternalAccess.java,gson/src/main/java/com/google/gson/internal/GsonInternalAccess.java,13, See the License for the specific language governing permissions and
False,gson/src/main/java/com/google/gson/internal/GsonInternalAccess.java,gson/src/main/java/com/google/gson/internal/GsonInternalAccess.java,14, limitations under the License.
False,gson/src/main/java/com/google/gson/internal/GsonInternalAccess.java,gson/src/main/java/com/google/gson/internal/GsonInternalAccess.java,17,ackage com.google.gson.internal;
False,gson/src/main/java/com/google/gson/internal/GsonInternalAccess.java,gson/src/main/java/com/google/gson/internal/GsonInternalAccess.java,19,mport com.google.gson.Gson;
False,gson/src/main/java/com/google/gson/internal/GsonInternalAccess.java,gson/src/main/java/com/google/gson/internal/GsonInternalAccess.java,20,mport com.google.gson.TypeAdapter;
False,gson/src/main/java/com/google/gson/internal/GsonInternalAccess.java,gson/src/main/java/com/google/gson/internal/GsonInternalAccess.java,21,mport com.google.gson.TypeAdapterFactory;
False,gson/src/main/java/com/google/gson/internal/GsonInternalAccess.java,gson/src/main/java/com/google/gson/internal/GsonInternalAccess.java,22,mport com.google.gson.reflect.TypeToken;
False,gson/src/main/java/com/google/gson/internal/GsonInternalAccess.java,gson/src/main/java/com/google/gson/internal/GsonInternalAccess.java,25, Internal-only APIs of Gson available only to other classes in Gson.
False,gson/src/main/java/com/google/gson/internal/GsonInternalAccess.java,gson/src/main/java/com/google/gson/internal/GsonInternalAccess.java,27,ublic abstract class GsonInternalAccess {
False,gson/src/main/java/com/google/gson/internal/GsonInternalAccess.java,gson/src/main/java/com/google/gson/internal/GsonInternalAccess.java,28,ublic static GsonInternalAccess INSTANCE;
False,gson/src/main/java/com/google/gson/internal/GsonInternalAccess.java,gson/src/main/java/com/google/gson/internal/GsonInternalAccess.java,31, Returns a type adapter for {@code} type that isn't {@code skipPast}. This
False,gson/src/main/java/com/google/gson/internal/GsonInternalAccess.java,gson/src/main/java/com/google/gson/internal/GsonInternalAccess.java,32," can be used for type adapters to compose other, simpler type adapters."
False,gson/src/main/java/com/google/gson/internal/GsonInternalAccess.java,gson/src/main/java/com/google/gson/internal/GsonInternalAccess.java,34, @throws IllegalArgumentException if this GSON cannot serialize and
False,gson/src/main/java/com/google/gson/internal/GsonInternalAccess.java,gson/src/main/java/com/google/gson/internal/GsonInternalAccess.java,35,     deserialize {@code type}.
False,gson/src/main/java/com/google/gson/internal/GsonInternalAccess.java,gson/src/main/java/com/google/gson/internal/GsonInternalAccess.java,37,ublic abstract <T> TypeAdapter<T> getNextAdapter(
False,gson/src/main/java/com/google/gson/internal/GsonInternalAccess.java,gson/src/main/java/com/google/gson/internal/GsonInternalAccess.java,38,"son gson, TypeAdapterFactory skipPast, TypeToken<T> type);"
