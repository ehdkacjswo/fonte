is_addition,old_file_path,new_file_path,line_num,content
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,160,if (!isLenient() && (Double.isNaN(value) || Double.isInfinite(value))) {
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,161,"throw new IllegalArgumentException(""JSON forbids NaN and infinities: "" + value);"
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,177,if (!isLenient()) {
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,178,double d = value.doubleValue();
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,179,if (Double.isNaN(d) || Double.isInfinite(d)) {
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,180,"throw new IllegalArgumentException(""JSON forbids NaN and infinities: "" + value);"
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,19,import com.google.gson.JsonNull;
False,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,24,/ TODO: more tests
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,120,public void testEmptyWriter() {
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,121,JsonElementWriter writer = new JsonElementWriter();
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,122,"assertEquals(JsonNull.INSTANCE, writer.get());"
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,125,public void testLenientNansAndInfinities() throws IOException {
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,126,JsonElementWriter writer = new JsonElementWriter();
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,127,writer.setLenient(true);
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,128,writer.beginArray();
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,129,writer.value(Double.NaN);
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,130,writer.value(Double.NEGATIVE_INFINITY);
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,131,writer.value(Double.POSITIVE_INFINITY);
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,132,writer.endArray();
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,133,"assertEquals(""[NaN,-Infinity,Infinity]"", writer.get().toString());"
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,136,public void testStrictNansAndInfinities() throws IOException {
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,137,JsonElementWriter writer = new JsonElementWriter();
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,138,writer.setLenient(false);
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,139,writer.beginArray();
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,140,try {
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,141,writer.value(Double.NaN);
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,142,fail();
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,143,} catch (IllegalArgumentException expected) {
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,145,try {
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,146,writer.value(Double.NEGATIVE_INFINITY);
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,147,fail();
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,148,} catch (IllegalArgumentException expected) {
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,150,try {
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,151,writer.value(Double.POSITIVE_INFINITY);
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,152,fail();
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,153,} catch (IllegalArgumentException expected) {
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,157,public void testStrictBoxedNansAndInfinities() throws IOException {
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,158,JsonElementWriter writer = new JsonElementWriter();
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,159,writer.setLenient(false);
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,160,writer.beginArray();
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,161,try {
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,162,writer.value(new Double(Double.NaN));
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,163,fail();
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,164,} catch (IllegalArgumentException expected) {
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,166,try {
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,167,writer.value(new Double(Double.NEGATIVE_INFINITY));
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,168,fail();
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,169,} catch (IllegalArgumentException expected) {
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,171,try {
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,172,writer.value(new Double(Double.POSITIVE_INFINITY));
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,173,fail();
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,174,} catch (IllegalArgumentException expected) {
