is_addition,old_file_path,new_file_path,line_num,content
False,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,131,eturn ((Boolean) value).booleanValue();
True,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,131,if (isBoolean()) {
True,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,132,return getAsBooleanWrapper().booleanValue();
True,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,133,} else {
True,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,134,return Boolean.parseBoolean(getAsString());
False,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,182,eturn ((Number) value).doubleValue();
True,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,186,if (isNumber()) {
True,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,187,return getAsNumber().doubleValue();
True,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,188,} else {
True,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,189,return Double.parseDouble(getAsString());
False,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,223,eturn ((Number) value).floatValue();
True,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,231,if (isNumber()) {
True,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,232,return getAsNumber().floatValue();
True,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,233,} else {
True,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,234,return Float.parseFloat(getAsString());
False,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,234,eturn ((Number) value).longValue();
True,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,246,if (isNumber()) {
True,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,247,return getAsNumber().longValue();
True,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,248,} else {
True,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,249,return Long.parseLong(getAsString());
False,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,243,Override
True,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,259,@Override
False,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,245,eturn ((Number) value).shortValue();
True,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,261,if (isNumber()) {
True,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,262,return getAsNumber().shortValue();
True,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,263,} else {
True,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,264,return Short.parseShort(getAsString());
False,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,256,eturn ((Number) value).intValue();
True,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,276,if (isNumber()) {
True,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,277,return getAsNumber().intValue();
True,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,278,} else {
True,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,279,return Integer.parseInt(getAsString());
False,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,261,eturn ((Number) value).byteValue();
True,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,285,if (isNumber()) {
True,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,286,return getAsNumber().byteValue();
True,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,287,} else {
True,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,288,return Byte.parseByte(getAsString());
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,2,* Copyright (C) 2008 Google Inc.
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,5,* you may not use this file except in compliance with the License.
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,6,* You may obtain a copy of the License at
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,8,* http://www.apache.org/licenses/LICENSE-2.0
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,13,* See the License for the specific language governing permissions and
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,14,* limitations under the License.
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,17,package com.google.gson;
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,19,import java.math.BigDecimal;
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,20,import java.math.BigInteger;
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,22,import junit.framework.TestCase;
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,25,* Unit test for the {@link JsonPrimitive} class.
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,27,* @author Joel Leitch
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,29,public class JsonPrimitiveTest extends TestCase {
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,31,public void testBoolean() throws Exception {
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,32,JsonPrimitive json = new JsonPrimitive(Boolean.TRUE);
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,34,assertTrue(json.isBoolean());
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,35,assertTrue(json.getAsBoolean());
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,38,public void testParsingStringAsBoolean() throws Exception {
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,39,"JsonPrimitive json = new JsonPrimitive(""true"");"
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,41,assertFalse(json.isBoolean());
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,42,assertTrue(json.getAsBoolean());
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,45,public void testParsingStringAsNumber() throws Exception {
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,46,"JsonPrimitive json = new JsonPrimitive(""1"");"
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,48,assertFalse(json.isNumber());
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,49,"assertEquals(1D, json.getAsDouble(), 0.00001);"
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,50,"assertEquals(1F, json.getAsFloat(), 0.00001);"
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,51,"assertEquals(1, json.getAsInt());"
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,52,"assertEquals(1L, json.getAsLong());"
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,53,"assertEquals((short) 1, json.getAsShort());"
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,54,"assertEquals((byte) 1, json.getAsByte());"
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,55,"assertEquals(new BigInteger(""1""), json.getAsBigInteger());"
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,56,"assertEquals(new BigDecimal(""1""), json.getAsBigDecimal());"
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,59,public void testStringsAndChar() throws Exception {
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,60,"JsonPrimitive json = new JsonPrimitive(""abc"");"
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,62,assertTrue(json.isString());
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,63,"assertEquals('a', json.getAsCharacter());"
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,64,"assertEquals(""abc"", json.getAsString());"
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,67,public void testExponential() throws Exception {
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,68,"JsonPrimitive json = new JsonPrimitive(""1E+7"");"
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,70,"assertEquals(new BigDecimal(""1E+7""), json.getAsBigDecimal());"
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,71,"assertEquals(new Double(""1E+7""), json.getAsDouble(), 0.00001);"
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,72,"assertEquals(new Float(""1E+7""), json.getAsDouble(), 0.00001);"
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,74,try {
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,75,json.getAsInt();
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,76,"fail(""Integers can not handle exponents like this."");"
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,77,} catch (NumberFormatException expected) { }
