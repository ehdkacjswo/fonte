is_addition,old_file_path,new_file_path,line_num,content
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,235,factories.add(TypeAdapters.CURRENCY_FACTORY);
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,30,import java.util.Currency;
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,580,public static final TypeAdapter<Currency> CURRENCY = new TypeAdapter<Currency>() {
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,581,@Override
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,582,public Currency read(JsonReader in) throws IOException {
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,583,return Currency.getInstance(in.nextString());
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,585,@Override
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,586,"public void write(JsonWriter out, Currency value) throws IOException {"
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,587,out.value(value.getCurrencyCode());
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,589,}.nullSafe();
True,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java,590,"public static final TypeAdapterFactory CURRENCY_FACTORY = newFactory(Currency.class, CURRENCY);"
True,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,2,* Copyright (C) 2015 Google Inc.
True,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,5,* you may not use this file except in compliance with the License.
True,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,6,* You may obtain a copy of the License at
True,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,8,* http://www.apache.org/licenses/LICENSE-2.0
True,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,13,* See the License for the specific language governing permissions and
True,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,14,* limitations under the License.
True,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,17,package com.google.gson.functional;
True,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,19,import java.util.Currency;
True,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,21,import com.google.gson.Gson;
True,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,23,import junit.framework.TestCase;
True,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,26,* Functional test for Json serialization and deserialization for classes in java.util
True,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,28,public class JavaUtilTest extends TestCase {
True,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,29,private Gson gson;
True,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,31,@Override
True,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,32,protected void setUp() throws Exception {
True,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,33,super.setUp();
True,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,34,gson = new Gson();
True,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,37,public void testCurrency() throws Exception {
True,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,38,"CurrencyHolder target = gson.fromJson(""{'value':'USD'}"", CurrencyHolder.class);"
True,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,39,"assertEquals(""USD"", target.value.getCurrencyCode());"
True,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,40,String json = gson.toJson(target);
True,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,41,"assertEquals(""{\""value\"":\""USD\""}"", json);"
True,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,43,// null handling
True,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,44,"target = gson.fromJson(""{'value':null}"", CurrencyHolder.class);"
True,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,45,assertNull(target.value);
True,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,46,"assertEquals(""{}"", gson.toJson(target));"
True,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,49,private static class CurrencyHolder {
True,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,gson/src/test/java/com/google/gson/functional/JavaUtilTest.java,50,Currency value;
