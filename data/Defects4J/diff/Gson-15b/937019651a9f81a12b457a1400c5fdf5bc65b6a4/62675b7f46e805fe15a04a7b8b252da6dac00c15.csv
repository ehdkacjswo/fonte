is_addition,old_file_path,new_file_path,line_num,content
True,gson/src/test/java/com/google/gson/functional/JsonParserTest.java,gson/src/test/java/com/google/gson/functional/JsonParserTest.java,19,import com.google.gson.JsonSyntaxException;
True,gson/src/test/java/com/google/gson/functional/JsonParserTest.java,gson/src/test/java/com/google/gson/functional/JsonParserTest.java,20,import com.google.gson.reflect.TypeToken;
True,gson/src/test/java/com/google/gson/functional/JsonParserTest.java,gson/src/test/java/com/google/gson/functional/JsonParserTest.java,23,import java.lang.reflect.Type;
True,gson/src/test/java/com/google/gson/functional/JsonParserTest.java,gson/src/test/java/com/google/gson/functional/JsonParserTest.java,24,import java.util.Arrays;
True,gson/src/test/java/com/google/gson/functional/JsonParserTest.java,gson/src/test/java/com/google/gson/functional/JsonParserTest.java,25,import java.util.LinkedHashMap;
True,gson/src/test/java/com/google/gson/functional/JsonParserTest.java,gson/src/test/java/com/google/gson/functional/JsonParserTest.java,26,import java.util.List;
True,gson/src/test/java/com/google/gson/functional/JsonParserTest.java,gson/src/test/java/com/google/gson/functional/JsonParserTest.java,27,import java.util.Map;
False,gson/src/test/java/com/google/gson/functional/JsonParserTest.java,gson/src/test/java/com/google/gson/functional/JsonParserTest.java,100,tringReader json =
True,gson/src/test/java/com/google/gson/functional/JsonParserTest.java,gson/src/test/java/com/google/gson/functional/JsonParserTest.java,107,StringReader json =
True,gson/src/test/java/com/google/gson/functional/JsonParserTest.java,gson/src/test/java/com/google/gson/functional/JsonParserTest.java,118,public void testExtraCommasInArrays() {
True,gson/src/test/java/com/google/gson/functional/JsonParserTest.java,gson/src/test/java/com/google/gson/functional/JsonParserTest.java,119,Type type = new TypeToken<List<String>>() {}.getType();
True,gson/src/test/java/com/google/gson/functional/JsonParserTest.java,gson/src/test/java/com/google/gson/functional/JsonParserTest.java,120,"assertEquals(list(""a"", null, ""b"", null, null), gson.fromJson(""[a,,b,,]"", type));"
True,gson/src/test/java/com/google/gson/functional/JsonParserTest.java,gson/src/test/java/com/google/gson/functional/JsonParserTest.java,121,"assertEquals(list(null, null), gson.fromJson(""[,]"", type));"
True,gson/src/test/java/com/google/gson/functional/JsonParserTest.java,gson/src/test/java/com/google/gson/functional/JsonParserTest.java,122,"assertEquals(list(""a"", null), gson.fromJson(""[a,]"", type));"
True,gson/src/test/java/com/google/gson/functional/JsonParserTest.java,gson/src/test/java/com/google/gson/functional/JsonParserTest.java,125,public void testExtraCommasInMaps() {
True,gson/src/test/java/com/google/gson/functional/JsonParserTest.java,gson/src/test/java/com/google/gson/functional/JsonParserTest.java,126,"Type type = new TypeToken<Map<String, String>>() {}.getType();"
True,gson/src/test/java/com/google/gson/functional/JsonParserTest.java,gson/src/test/java/com/google/gson/functional/JsonParserTest.java,127,try {
True,gson/src/test/java/com/google/gson/functional/JsonParserTest.java,gson/src/test/java/com/google/gson/functional/JsonParserTest.java,128,"gson.fromJson(""{a:b,}"", type);"
True,gson/src/test/java/com/google/gson/functional/JsonParserTest.java,gson/src/test/java/com/google/gson/functional/JsonParserTest.java,129,fail();
True,gson/src/test/java/com/google/gson/functional/JsonParserTest.java,gson/src/test/java/com/google/gson/functional/JsonParserTest.java,130,} catch (JsonSyntaxException expected) {
True,gson/src/test/java/com/google/gson/functional/JsonParserTest.java,gson/src/test/java/com/google/gson/functional/JsonParserTest.java,134,private <T> List<T> list(T... elements) {
True,gson/src/test/java/com/google/gson/functional/JsonParserTest.java,gson/src/test/java/com/google/gson/functional/JsonParserTest.java,135,return Arrays.asList(elements);
