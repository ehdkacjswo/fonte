is_addition,old_file_path,new_file_path,line_num,content
False,gson/src/test/java/com/google/gson/functional/CircularReferenceTest.java,gson/src/test/java/com/google/gson/functional/CircularReferenceTest.java,55, catch (IllegalStateException expected) {
False,gson/src/test/java/com/google/gson/functional/CircularReferenceTest.java,gson/src/test/java/com/google/gson/functional/CircularReferenceTest.java,56,"ssertTrue(expected.getMessage().contains(""children""));"
True,gson/src/test/java/com/google/gson/functional/CircularReferenceTest.java,gson/src/test/java/com/google/gson/functional/CircularReferenceTest.java,55,} catch (StackOverflowError expected) {
False,gson/src/test/java/com/google/gson/functional/CircularReferenceTest.java,gson/src/test/java/com/google/gson/functional/CircularReferenceTest.java,67, catch (IllegalStateException expected) { }
True,gson/src/test/java/com/google/gson/functional/CircularReferenceTest.java,gson/src/test/java/com/google/gson/functional/CircularReferenceTest.java,66,} catch (StackOverflowError expected) {
False,gson/src/test/java/com/google/gson/functional/CircularReferenceTest.java,gson/src/test/java/com/google/gson/functional/CircularReferenceTest.java,77, catch (IllegalStateException expected) {
False,gson/src/test/java/com/google/gson/functional/CircularReferenceTest.java,gson/src/test/java/com/google/gson/functional/CircularReferenceTest.java,78,"ssertTrue(expected.getMessage().contains(""children""));"
True,gson/src/test/java/com/google/gson/functional/CircularReferenceTest.java,gson/src/test/java/com/google/gson/functional/CircularReferenceTest.java,77,} catch (StackOverflowError expected) {
False,gson/src/test/java/com/google/gson/functional/CircularReferenceTest.java,gson/src/test/java/com/google/gson/functional/CircularReferenceTest.java,97, catch (IllegalStateException expected) {
False,gson/src/test/java/com/google/gson/functional/CircularReferenceTest.java,gson/src/test/java/com/google/gson/functional/CircularReferenceTest.java,98,"ssertTrue(expected.getMessage().contains(""Offending""));"
True,gson/src/test/java/com/google/gson/functional/CircularReferenceTest.java,gson/src/test/java/com/google/gson/functional/CircularReferenceTest.java,96,} catch (StackOverflowError expected) {
