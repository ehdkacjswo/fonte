is_addition,old_file_path,new_file_path,line_num,content
False,gson/src/main/java/com/google/gson/AnonymousAndLocalClassExclusionStrategy.java,gson/src/main/java/com/google/gson/AnonymousAndLocalClassExclusionStrategy.java,19,mport java.lang.reflect.Field;
False,gson/src/main/java/com/google/gson/AnonymousAndLocalClassExclusionStrategy.java,gson/src/main/java/com/google/gson/AnonymousAndLocalClassExclusionStrategy.java,28,ublic boolean shouldSkipField(Field f) {
False,gson/src/main/java/com/google/gson/AnonymousAndLocalClassExclusionStrategy.java,gson/src/main/java/com/google/gson/AnonymousAndLocalClassExclusionStrategy.java,29,eturn isAnonymousOrLocal(f.getType());
True,gson/src/main/java/com/google/gson/AnonymousAndLocalClassExclusionStrategy.java,gson/src/main/java/com/google/gson/AnonymousAndLocalClassExclusionStrategy.java,27,public boolean shouldSkipField(FieldAttributes f) {
True,gson/src/main/java/com/google/gson/AnonymousAndLocalClassExclusionStrategy.java,gson/src/main/java/com/google/gson/AnonymousAndLocalClassExclusionStrategy.java,28,return isAnonymousOrLocal(f.getDeclaredClass());
False,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,19,mport java.lang.reflect.Field;
False,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,36,ublic boolean shouldSkipField(Field f) {
True,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,35,public boolean shouldSkipField(FieldAttributes f) {
False,gson/src/main/java/com/google/gson/ExclusionStrategy.java,gson/src/main/java/com/google/gson/ExclusionStrategy.java,19,mport java.lang.reflect.Field;
False,gson/src/main/java/com/google/gson/ExclusionStrategy.java,gson/src/main/java/com/google/gson/ExclusionStrategy.java,22, A strategy definition that is used by the {@link ObjectNavigator} to
False,gson/src/main/java/com/google/gson/ExclusionStrategy.java,gson/src/main/java/com/google/gson/ExclusionStrategy.java,23, determine whether or not the field of the object should be ignored during
False,gson/src/main/java/com/google/gson/ExclusionStrategy.java,gson/src/main/java/com/google/gson/ExclusionStrategy.java,24, navigation.
True,gson/src/main/java/com/google/gson/ExclusionStrategy.java,gson/src/main/java/com/google/gson/ExclusionStrategy.java,20,"* A strategy pattern (see ""Design Patterns"" written by GoF for some literature on this pattern)"
True,gson/src/main/java/com/google/gson/ExclusionStrategy.java,gson/src/main/java/com/google/gson/ExclusionStrategy.java,21,* definition that is used to decide whether or not a field or top-level class should be serialized
True,gson/src/main/java/com/google/gson/ExclusionStrategy.java,gson/src/main/java/com/google/gson/ExclusionStrategy.java,22,* (or deserialized) as part of the JSON output/input.
True,gson/src/main/java/com/google/gson/ExclusionStrategy.java,gson/src/main/java/com/google/gson/ExclusionStrategy.java,24,* <p>The following example show an implementation of an {@code ExclusionStrategy} where a specific
True,gson/src/main/java/com/google/gson/ExclusionStrategy.java,gson/src/main/java/com/google/gson/ExclusionStrategy.java,25,* type will be excluded from the output.
True,gson/src/main/java/com/google/gson/ExclusionStrategy.java,gson/src/main/java/com/google/gson/ExclusionStrategy.java,27,"* <p><pre class=""code"">"
True,gson/src/main/java/com/google/gson/ExclusionStrategy.java,gson/src/main/java/com/google/gson/ExclusionStrategy.java,28,* private static class UserDefinedExclusionStrategy implements ExclusionStrategy {
True,gson/src/main/java/com/google/gson/ExclusionStrategy.java,gson/src/main/java/com/google/gson/ExclusionStrategy.java,29,*   private final Class&lt;?&gt; excludedThisClass;
True,gson/src/main/java/com/google/gson/ExclusionStrategy.java,gson/src/main/java/com/google/gson/ExclusionStrategy.java,31,*   UserDefinedExclusionStrategy(Class&lt;?&gt; excludedThisClass) {
True,gson/src/main/java/com/google/gson/ExclusionStrategy.java,gson/src/main/java/com/google/gson/ExclusionStrategy.java,32,*     this.excludedThisClass = excludedThisClass;
False,gson/src/main/java/com/google/gson/ExclusionStrategy.java,gson/src/main/java/com/google/gson/ExclusionStrategy.java,26," As well, for now this class is also responsible for excluding entire"
False,gson/src/main/java/com/google/gson/ExclusionStrategy.java,gson/src/main/java/com/google/gson/ExclusionStrategy.java,27," classes.  This is somewhat a mixing of concerns for this object, but"
False,gson/src/main/java/com/google/gson/ExclusionStrategy.java,gson/src/main/java/com/google/gson/ExclusionStrategy.java,28, it will suffice for now.  We can always break it down into two
False,gson/src/main/java/com/google/gson/ExclusionStrategy.java,gson/src/main/java/com/google/gson/ExclusionStrategy.java,29, different strategies later.
True,gson/src/main/java/com/google/gson/ExclusionStrategy.java,gson/src/main/java/com/google/gson/ExclusionStrategy.java,35,*   public boolean shouldSkipClass(Class&lt;?&gt; clazz) {
True,gson/src/main/java/com/google/gson/ExclusionStrategy.java,gson/src/main/java/com/google/gson/ExclusionStrategy.java,36,*     return excludedThisClass.equals(clazz);
True,gson/src/main/java/com/google/gson/ExclusionStrategy.java,gson/src/main/java/com/google/gson/ExclusionStrategy.java,39,*   public boolean shouldSkipField(FieldAttributes f) {
True,gson/src/main/java/com/google/gson/ExclusionStrategy.java,gson/src/main/java/com/google/gson/ExclusionStrategy.java,40,*     return excludedThisClass.equals(f.getDeclaredClass());
True,gson/src/main/java/com/google/gson/ExclusionStrategy.java,gson/src/main/java/com/google/gson/ExclusionStrategy.java,44,* ExclusionStrategy excludeStrings = new UserDefinedExclusionStrategy(String.class);
True,gson/src/main/java/com/google/gson/ExclusionStrategy.java,gson/src/main/java/com/google/gson/ExclusionStrategy.java,45,* Gson gson = new GsonBuilder()
True,gson/src/main/java/com/google/gson/ExclusionStrategy.java,gson/src/main/java/com/google/gson/ExclusionStrategy.java,46,*     .setExclusionStrategies(excludeStrings)
True,gson/src/main/java/com/google/gson/ExclusionStrategy.java,gson/src/main/java/com/google/gson/ExclusionStrategy.java,47,*     .create();
True,gson/src/main/java/com/google/gson/ExclusionStrategy.java,gson/src/main/java/com/google/gson/ExclusionStrategy.java,48,* </pre>
True,gson/src/main/java/com/google/gson/ExclusionStrategy.java,gson/src/main/java/com/google/gson/ExclusionStrategy.java,50,* @author Inderjeet Singh
True,gson/src/main/java/com/google/gson/ExclusionStrategy.java,gson/src/main/java/com/google/gson/ExclusionStrategy.java,53,* @see GsonBuilder#setExclusionStrategies(ExclusionStrategy...)
True,gson/src/main/java/com/google/gson/ExclusionStrategy.java,gson/src/main/java/com/google/gson/ExclusionStrategy.java,55,* @since 1.4
False,gson/src/main/java/com/google/gson/ExclusionStrategy.java,gson/src/main/java/com/google/gson/ExclusionStrategy.java,37, @return true if the field should be ignored otherwise false
True,gson/src/main/java/com/google/gson/ExclusionStrategy.java,gson/src/main/java/com/google/gson/ExclusionStrategy.java,61,* @return true if the field should be ignored; otherwise false
False,gson/src/main/java/com/google/gson/ExclusionStrategy.java,gson/src/main/java/com/google/gson/ExclusionStrategy.java,39,ublic boolean shouldSkipField(Field f);
True,gson/src/main/java/com/google/gson/ExclusionStrategy.java,gson/src/main/java/com/google/gson/ExclusionStrategy.java,63,public boolean shouldSkipField(FieldAttributes f);
False,gson/src/main/java/com/google/gson/ExclusionStrategy.java,gson/src/main/java/com/google/gson/ExclusionStrategy.java,43, @return true if the class should be ignored otherwise false
True,gson/src/main/java/com/google/gson/ExclusionStrategy.java,gson/src/main/java/com/google/gson/ExclusionStrategy.java,67,* @return true if the class should be ignored; otherwise false
False,gson/src/main/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategy.java,gson/src/main/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategy.java,18,mport java.lang.reflect.Field;
False,gson/src/main/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategy.java,gson/src/main/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategy.java,34,ublic boolean shouldSkipField(Field f) {
True,gson/src/main/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategy.java,gson/src/main/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategy.java,32,public boolean shouldSkipField(FieldAttributes f) {
False,gson/src/main/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategy.java,gson/src/main/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategy.java,21,mport java.lang.reflect.Field;
False,gson/src/main/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategy.java,gson/src/main/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategy.java,35,ublic boolean shouldSkipField(Field f) {
True,gson/src/main/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategy.java,gson/src/main/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategy.java,33,public boolean shouldSkipField(FieldAttributes f) {
True,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,2,* Copyright (C) 2009 Google Inc.
True,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,5,* you may not use this file except in compliance with the License.
True,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,6,* You may obtain a copy of the License at
True,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,8,* http://www.apache.org/licenses/LICENSE-2.0
True,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,13,* See the License for the specific language governing permissions and
True,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,14,* limitations under the License.
True,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,17,package com.google.gson;
True,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,19,import java.lang.annotation.Annotation;
True,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,20,import java.lang.reflect.Field;
True,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,21,import java.lang.reflect.Type;
True,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,24,* A data object that stores attributes of a field.
True,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,26,"* <p>This class is immutable; therefore, it can be safely shared across threads."
True,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,28,* @author Inderjeet Singh
True,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,29,* @author Joel Leitch
True,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,31,* @since 1.4
True,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,33,final class FieldAttributes {
True,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,34,private final Field field;
True,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,37,* Constructs a Field Attributes object
True,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,38,* @param f
True,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,40,FieldAttributes(Field f) {
True,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,41,Preconditions.checkNotNull(f);
True,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,42,field = f;
True,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,46,* @return the name of the field
True,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,48,public String getName() {
True,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,49,return field.getName();
True,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,53,"* <p>For example, assume the following class definition:"
True,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,54,"* <pre class=""code"">"
True,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,55,* public class Foo {
True,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,56,*   private String bar;
True,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,57,*   private List&lt;String&gt; red;
True,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,60,* Type listParmeterizedType = new TypeToken<List<String>>() {}.getType();
True,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,61,* </pre>
True,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,63,* <p>This method would return {@code String.class} for the {@code bar} field and
True,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,64,* {@code listParameterizedType} for the {@code red} field.
True,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,66,* @return the specific type declared for this field
True,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,68,public Type getDeclaredType() {
True,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,69,return field.getGenericType();
True,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,73,* Returns the {@code Class<?>} object that was declared for this field.
True,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,75,"* <p>For example, assume the following class definition:"
True,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,76,"* <pre class=""code"">"
True,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,77,* public class Foo {
True,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,78,*   private String bar;
True,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,79,*   private List&lt;String&gt; red;
True,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,81,* </pre>
True,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,83,* <p>This method would return {@code String.class} for the {@code bar} field and
True,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,84,* {@code List.class} for the {@code red} field.
True,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,86,* @return the specific class object that was declared for the field
True,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,88,public Class<?> getDeclaredClass() {
True,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,89,return field.getType();
True,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,93,* Return the {@link T} annotation object from this field if it exist; otherwise returns
True,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,94,* {@code null}.
True,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,96,* @param annotation the class of the annotation that will be retrieved
True,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,97,* @return the annotation instance if it is bound to the field; otherwise {@code null}
True,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,99,public <T extends Annotation> T getAnnotation(Class<T> annotation) {
True,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,100,return field.getAnnotation(annotation);
True,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,104,* Returns {@code true} if the field is defined with the {@code modifier}.
True,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,106,* <p>This method is meant to be called as:
True,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,107,"* <pre class=""code"">"
True,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,108,* boolean hasPublicModifier = fieldAttribute.hasModifier(java.lang.reflect.Modifier.PUBLIC);
True,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,109,* </pre>
True,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,111,* @see java.lang.reflect.Modifier
True,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,113,public boolean hasModifier(int modifier) {
True,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,114,return (field.getModifiers() & modifier) != 0;
True,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,118,* This is exposed internally only for the
True,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,119,* @return
True,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,121,boolean isSynthetic() {
True,gson/src/main/java/com/google/gson/FieldAttributes.java,gson/src/main/java/com/google/gson/FieldAttributes.java,122,return field.isSynthetic();
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,82,static final AnonymousAndLocalClassExclusionStrategy DEFAULT_ANON_LOCAL_CLASS_EXCLUSION_STRATEGY =
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,83,new AnonymousAndLocalClassExclusionStrategy();
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,84,static final SyntheticFieldExclusionStrategy DEFAULT_SYNTHETIC_FIELD_EXCLUSION_STRATEGY =
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,85,new SyntheticFieldExclusionStrategy(true);
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,83,"ew ModifierBasedExclusionStrategy(true, new int[] { Modifier.TRANSIENT, Modifier.STATIC });"
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,87,"new ModifierBasedExclusionStrategy(new int[] { Modifier.TRANSIENT, Modifier.STATIC });"
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,92,private static final ExclusionStrategy DEFAULT_EXCLUSION_STRATEGY =
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,93,createExclusionStrategy(VersionConstants.IGNORE_VERSIONS);
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,124,   <li>The default Date format is same as {@link java.text.DateFormat#DEFAULT}. This format
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,131,*   <li>The default Date format is same as {@link java.text.DateFormat#DEFAULT}. This format
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,143,"his(createExclusionStrategy(VersionConstants.IGNORE_VERSIONS), DEFAULT_NAMING_POLICY);"
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,147, Constructs a Gson object with the specified version and the mode of operation while
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,148, encountering inner class references.
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,150,"son(ExclusionStrategy strategy, FieldNamingStrategy fieldNamingPolicy) {"
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,151,"his(strategy, strategy, fieldNamingPolicy,"
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,152,"ew MappedObjectConstructor(DefaultTypeAdapters.getDefaultInstanceCreators()),"
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,153,"EFAULT_JSON_FORMATTER, false, DefaultTypeAdapters.getDefaultSerializers(),"
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,154,"efaultTypeAdapters.getDefaultDeserializers(), DEFAULT_JSON_NON_EXECUTABLE);"
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,150,"this(DEFAULT_EXCLUSION_STRATEGY, DEFAULT_EXCLUSION_STRATEGY, DEFAULT_NAMING_POLICY,"
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,151,"new MappedObjectConstructor(DefaultTypeAdapters.getDefaultInstanceCreators()),"
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,152,"DEFAULT_JSON_FORMATTER, false, DefaultTypeAdapters.getDefaultSerializers(),"
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,153,"DefaultTypeAdapters.getDefaultDeserializers(), DEFAULT_JSON_NON_EXECUTABLE);"
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,157,"son(ExclusionStrategy serializationStrategy, ExclusionStrategy deserializationStrategy,"
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,158,"ieldNamingStrategy fieldNamingPolicy, MappedObjectConstructor objectConstructor,"
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,159,"sonFormatter formatter, boolean serializeNulls,"
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,156,"Gson(ExclusionStrategy serializationStrategy, ExclusionStrategy deserializationStrategy,"
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,157,"FieldNamingStrategy fieldNamingPolicy, MappedObjectConstructor objectConstructor,"
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,158,"JsonFormatter formatter, boolean serializeNulls,"
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,161,"arameterizedTypeHandlerMap<JsonDeserializer<?>> deserializers,"
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,160,"ParameterizedTypeHandlerMap<JsonDeserializer<?>> deserializers,"
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,180,trategies.add(new AnonymousAndLocalClassExclusionStrategy());
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,179,strategies.add(DEFAULT_ANON_LOCAL_CLASS_EXCLUSION_STRATEGY);
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,180,strategies.add(DEFAULT_SYNTHETIC_FIELD_EXCLUSION_STRATEGY);
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,189, This method serializes the specified object into its equivalent representation as a tree of
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,189,* This method serializes the specified object into its equivalent representation as a tree of
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,210, equivalent representation as a tree of {@link JsonElement}s. This method must be used if the
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,211," specified object is a generic type. For non-generic objects, use {@link #toJsonTree(Object)}"
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,212, instead.
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,210,* equivalent representation as a tree of {@link JsonElement}s. This method must be used if the
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,211,"* specified object is a generic type. For non-generic objects, use {@link #toJsonTree(Object)}"
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,212,* instead.
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,455," invoke {@link #fromJson(JsonElement, Type)}."
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,455,"* invoke {@link #fromJson(JsonElement, Type)}."
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,457, @param json the root of the parse tree of {@link JsonElement}s from which the object is to
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,457,* @param json the root of the parse tree of {@link JsonElement}s from which the object is to
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,472," non-generic objects, use {@link #fromJson(JsonElement, Class)} instead."
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,472,"* non-generic objects, use {@link #fromJson(JsonElement, Class)} instead."
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,475, @param json the root of the parse tree of {@link JsonElement}s from which the object is to
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,475,* @param json the root of the parse tree of {@link JsonElement}s from which the object is to
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,493,"reateDefaultObjectNavigatorFactory(deserializationStrategy), deserializers,"
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,493,"createDefaultObjectNavigatorFactory(deserializationStrategy), deserializers,"
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,508,Override
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,508,@Override
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,515,/ using the name instanceCreator instead of ObjectConstructor since the users of Gson are
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,515,// using the name instanceCreator instead of ObjectConstructor since the users of Gson are
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,21,import java.util.Collection;
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,23,import java.util.HashSet;
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,53,rivate static final AnonymousAndLocalClassExclusionStrategy anonAndLocalClassExclusionStrategy =
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,54,ew AnonymousAndLocalClassExclusionStrategy();
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,57,rivate static final ExposeAnnotationSerializationExclusionStrategy
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,57,private static final ExposeAnnotationSerializationExclusionStrategy
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,60,rivate static final ExposeAnnotationDeserializationExclusionStrategy
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,60,private static final ExposeAnnotationDeserializationExclusionStrategy
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,64,private final Collection<ExclusionStrategy> exclusionStrategies =
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,65,new HashSet<ExclusionStrategy>();
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,92,// add default exclusion strategies
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,93,exclusionStrategies.add(Gson.DEFAULT_ANON_LOCAL_CLASS_EXCLUSION_STRATEGY);
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,94,exclusionStrategies.add(Gson.DEFAULT_SYNTHETIC_FIELD_EXCLUSION_STRATEGY);
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,132,oolean skipSynthetics = true;
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,133,"odifierBasedExclusionStrategy = new ModifierBasedExclusionStrategy(skipSynthetics, modifiers);"
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,139,modifierBasedExclusionStrategy = new ModifierBasedExclusionStrategy(modifiers);
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,139, special text. This prevents attacks from third-party sites through script sourcing. See
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,140," <a href=""http://code.google.com/p/google-gson/issues/detail?id=42"">Gson Issue 42</a>"
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,141, for details.
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,145,* special text. This prevents attacks from third-party sites through script sourcing. See
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,146,"* <a href=""http://code.google.com/p/google-gson/issues/detail?id=42"">Gson Issue 42</a>"
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,147,* for details.
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,219,his.fieldNamingPolicy =
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,220,ew SerializedNameAnnotationInterceptingNamingPolicy(fieldNamingStrategy);
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,225,this.fieldNamingPolicy =
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,226,new SerializedNameAnnotationInterceptingNamingPolicy(fieldNamingStrategy);
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,227,return this;
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,231,* Configures Gson to apply a set of exclusion strategies during both serialization and
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,232,* deserialization. Each of the {@code strategies} will be applied as a disjunctive rule.
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,233,* This means that if one of the {@code strategies} suggests that a field (or class) should be
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,234,* skipped then that field (or object) is skipped during serializaiton/deserialization.
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,236,* @param strategies the set of strategy object to apply during object (de)serialization.
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,237,"* @return a reference to this {@code GsonBuilder} object to fulfill the ""Builder"" pattern"
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,238,* @since 1.4
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,240,GsonBuilder setExclusionStrategies(ExclusionStrategy... strategies) {
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,241,for (ExclusionStrategy strategy : strategies) {
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,242,exclusionStrategies.add(strategy);
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,415,ist<ExclusionStrategy> serializationStrategies = new LinkedList<ExclusionStrategy>();
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,416,ist<ExclusionStrategy> deserializationStrategies = new LinkedList<ExclusionStrategy>();
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,438,List<ExclusionStrategy> serializationStrategies =
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,439,new LinkedList<ExclusionStrategy>(exclusionStrategies);
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,440,List<ExclusionStrategy> deserializationStrategies =
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,441,new LinkedList<ExclusionStrategy>(exclusionStrategies);
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,419,erializationStrategies.add(anonAndLocalClassExclusionStrategy);
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,420,eserializationStrategies.add(anonAndLocalClassExclusionStrategy);
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,434,xclusionStrategy serializationExclusionStrategy =
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,458,ExclusionStrategy serializationExclusionStrategy =
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,436,xclusionStrategy deserializationExclusionStrategy =
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,460,ExclusionStrategy deserializationExclusionStrategy =
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,461,"son gson = new Gson(serializationExclusionStrategy, deserializationExclusionStrategy,"
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,462,"ieldNamingPolicy, objConstructor, formatter, serializeNulls, customSerializers,"
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,485,"Gson gson = new Gson(serializationExclusionStrategy, deserializationExclusionStrategy,"
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,486,"fieldNamingPolicy, objConstructor, formatter, serializeNulls, customSerializers,"
False,gson/src/main/java/com/google/gson/InnerClassExclusionStrategy.java,gson/src/main/java/com/google/gson/InnerClassExclusionStrategy.java,19,mport java.lang.reflect.Field;
False,gson/src/main/java/com/google/gson/InnerClassExclusionStrategy.java,gson/src/main/java/com/google/gson/InnerClassExclusionStrategy.java,29,ublic boolean shouldSkipField(Field f) {
False,gson/src/main/java/com/google/gson/InnerClassExclusionStrategy.java,gson/src/main/java/com/google/gson/InnerClassExclusionStrategy.java,30,eturn isInnerClass(f.getType());
True,gson/src/main/java/com/google/gson/InnerClassExclusionStrategy.java,gson/src/main/java/com/google/gson/InnerClassExclusionStrategy.java,28,public boolean shouldSkipField(FieldAttributes f) {
True,gson/src/main/java/com/google/gson/InnerClassExclusionStrategy.java,gson/src/main/java/com/google/gson/InnerClassExclusionStrategy.java,29,return isInnerClass(f.getDeclaredClass());
False,gson/src/main/java/com/google/gson/ModifierBasedExclusionStrategy.java,gson/src/main/java/com/google/gson/ModifierBasedExclusionStrategy.java,19,mport java.lang.reflect.Field;
False,gson/src/main/java/com/google/gson/ModifierBasedExclusionStrategy.java,gson/src/main/java/com/google/gson/ModifierBasedExclusionStrategy.java,31,rivate final boolean skipSyntheticField;
False,gson/src/main/java/com/google/gson/ModifierBasedExclusionStrategy.java,gson/src/main/java/com/google/gson/ModifierBasedExclusionStrategy.java,34,"ublic ModifierBasedExclusionStrategy(boolean skipSyntheticFields, int... modifiers) {"
False,gson/src/main/java/com/google/gson/ModifierBasedExclusionStrategy.java,gson/src/main/java/com/google/gson/ModifierBasedExclusionStrategy.java,35,his.skipSyntheticField = skipSyntheticFields;
True,gson/src/main/java/com/google/gson/ModifierBasedExclusionStrategy.java,gson/src/main/java/com/google/gson/ModifierBasedExclusionStrategy.java,32,public ModifierBasedExclusionStrategy(int... modifiers) {
False,gson/src/main/java/com/google/gson/ModifierBasedExclusionStrategy.java,gson/src/main/java/com/google/gson/ModifierBasedExclusionStrategy.java,44,ublic boolean shouldSkipField(Field f) {
False,gson/src/main/java/com/google/gson/ModifierBasedExclusionStrategy.java,gson/src/main/java/com/google/gson/ModifierBasedExclusionStrategy.java,45,f (skipSyntheticField && f.isSynthetic()) {
False,gson/src/main/java/com/google/gson/ModifierBasedExclusionStrategy.java,gson/src/main/java/com/google/gson/ModifierBasedExclusionStrategy.java,46,eturn true;
False,gson/src/main/java/com/google/gson/ModifierBasedExclusionStrategy.java,gson/src/main/java/com/google/gson/ModifierBasedExclusionStrategy.java,48,nt objectModifiers = f.getModifiers();
True,gson/src/main/java/com/google/gson/ModifierBasedExclusionStrategy.java,gson/src/main/java/com/google/gson/ModifierBasedExclusionStrategy.java,41,public boolean shouldSkipField(FieldAttributes f) {
False,gson/src/main/java/com/google/gson/ModifierBasedExclusionStrategy.java,gson/src/main/java/com/google/gson/ModifierBasedExclusionStrategy.java,50,f ((objectModifiers & modifier) != 0) {
True,gson/src/main/java/com/google/gson/ModifierBasedExclusionStrategy.java,gson/src/main/java/com/google/gson/ModifierBasedExclusionStrategy.java,43,if (f.hasModifier(modifier)) {
False,gson/src/main/java/com/google/gson/NullExclusionStrategy.java,gson/src/main/java/com/google/gson/NullExclusionStrategy.java,19,mport java.lang.reflect.Field;
False,gson/src/main/java/com/google/gson/NullExclusionStrategy.java,gson/src/main/java/com/google/gson/NullExclusionStrategy.java,31,ublic boolean shouldSkipField(Field f) {
True,gson/src/main/java/com/google/gson/NullExclusionStrategy.java,gson/src/main/java/com/google/gson/NullExclusionStrategy.java,30,public boolean shouldSkipField(FieldAttributes f) {
False,gson/src/main/java/com/google/gson/ObjectNavigator.java,gson/src/main/java/com/google/gson/ObjectNavigator.java,105,isitor.start(objTypePair);
True,gson/src/main/java/com/google/gson/ObjectNavigator.java,gson/src/main/java/com/google/gson/ObjectNavigator.java,105,visitor.start(objTypePair);
False,gson/src/main/java/com/google/gson/ObjectNavigator.java,gson/src/main/java/com/google/gson/ObjectNavigator.java,144,f (exclusionStrategy.shouldSkipField(f)) {
True,gson/src/main/java/com/google/gson/ObjectNavigator.java,gson/src/main/java/com/google/gson/ObjectNavigator.java,144,if (exclusionStrategy.shouldSkipField(new FieldAttributes(f))) {
False,gson/src/main/java/com/google/gson/ObjectNavigator.java,gson/src/main/java/com/google/gson/ObjectNavigator.java,149,oolean visitedWithCustomHandler =
True,gson/src/main/java/com/google/gson/ObjectNavigator.java,gson/src/main/java/com/google/gson/ObjectNavigator.java,149,boolean visitedWithCustomHandler =
True,gson/src/main/java/com/google/gson/SyntheticFieldExclusionStrategy.java,gson/src/main/java/com/google/gson/SyntheticFieldExclusionStrategy.java,2,* Copyright (C) 2009 Google Inc.
True,gson/src/main/java/com/google/gson/SyntheticFieldExclusionStrategy.java,gson/src/main/java/com/google/gson/SyntheticFieldExclusionStrategy.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,gson/src/main/java/com/google/gson/SyntheticFieldExclusionStrategy.java,gson/src/main/java/com/google/gson/SyntheticFieldExclusionStrategy.java,5,* you may not use this file except in compliance with the License.
True,gson/src/main/java/com/google/gson/SyntheticFieldExclusionStrategy.java,gson/src/main/java/com/google/gson/SyntheticFieldExclusionStrategy.java,6,* You may obtain a copy of the License at
True,gson/src/main/java/com/google/gson/SyntheticFieldExclusionStrategy.java,gson/src/main/java/com/google/gson/SyntheticFieldExclusionStrategy.java,8,* http://www.apache.org/licenses/LICENSE-2.0
True,gson/src/main/java/com/google/gson/SyntheticFieldExclusionStrategy.java,gson/src/main/java/com/google/gson/SyntheticFieldExclusionStrategy.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,gson/src/main/java/com/google/gson/SyntheticFieldExclusionStrategy.java,gson/src/main/java/com/google/gson/SyntheticFieldExclusionStrategy.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,gson/src/main/java/com/google/gson/SyntheticFieldExclusionStrategy.java,gson/src/main/java/com/google/gson/SyntheticFieldExclusionStrategy.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,gson/src/main/java/com/google/gson/SyntheticFieldExclusionStrategy.java,gson/src/main/java/com/google/gson/SyntheticFieldExclusionStrategy.java,13,* See the License for the specific language governing permissions and
True,gson/src/main/java/com/google/gson/SyntheticFieldExclusionStrategy.java,gson/src/main/java/com/google/gson/SyntheticFieldExclusionStrategy.java,14,* limitations under the License.
True,gson/src/main/java/com/google/gson/SyntheticFieldExclusionStrategy.java,gson/src/main/java/com/google/gson/SyntheticFieldExclusionStrategy.java,17,package com.google.gson;
True,gson/src/main/java/com/google/gson/SyntheticFieldExclusionStrategy.java,gson/src/main/java/com/google/gson/SyntheticFieldExclusionStrategy.java,20,* A data object that stores attributes of a field.
True,gson/src/main/java/com/google/gson/SyntheticFieldExclusionStrategy.java,gson/src/main/java/com/google/gson/SyntheticFieldExclusionStrategy.java,22,"* <p>This class is immutable; therefore, it can be safely shared across threads."
True,gson/src/main/java/com/google/gson/SyntheticFieldExclusionStrategy.java,gson/src/main/java/com/google/gson/SyntheticFieldExclusionStrategy.java,24,* @author Inderjeet Singh
True,gson/src/main/java/com/google/gson/SyntheticFieldExclusionStrategy.java,gson/src/main/java/com/google/gson/SyntheticFieldExclusionStrategy.java,25,* @author Joel Leitch
True,gson/src/main/java/com/google/gson/SyntheticFieldExclusionStrategy.java,gson/src/main/java/com/google/gson/SyntheticFieldExclusionStrategy.java,27,* @since 1.4
True,gson/src/main/java/com/google/gson/SyntheticFieldExclusionStrategy.java,gson/src/main/java/com/google/gson/SyntheticFieldExclusionStrategy.java,29,class SyntheticFieldExclusionStrategy implements ExclusionStrategy {
True,gson/src/main/java/com/google/gson/SyntheticFieldExclusionStrategy.java,gson/src/main/java/com/google/gson/SyntheticFieldExclusionStrategy.java,30,private final boolean skipSyntheticFields;
True,gson/src/main/java/com/google/gson/SyntheticFieldExclusionStrategy.java,gson/src/main/java/com/google/gson/SyntheticFieldExclusionStrategy.java,32,SyntheticFieldExclusionStrategy(boolean skipSyntheticFields) {
True,gson/src/main/java/com/google/gson/SyntheticFieldExclusionStrategy.java,gson/src/main/java/com/google/gson/SyntheticFieldExclusionStrategy.java,33,this.skipSyntheticFields = skipSyntheticFields;
True,gson/src/main/java/com/google/gson/SyntheticFieldExclusionStrategy.java,gson/src/main/java/com/google/gson/SyntheticFieldExclusionStrategy.java,36,public boolean shouldSkipClass(Class<?> clazz) {
True,gson/src/main/java/com/google/gson/SyntheticFieldExclusionStrategy.java,gson/src/main/java/com/google/gson/SyntheticFieldExclusionStrategy.java,37,return false;
True,gson/src/main/java/com/google/gson/SyntheticFieldExclusionStrategy.java,gson/src/main/java/com/google/gson/SyntheticFieldExclusionStrategy.java,40,public boolean shouldSkipField(FieldAttributes f) {
True,gson/src/main/java/com/google/gson/SyntheticFieldExclusionStrategy.java,gson/src/main/java/com/google/gson/SyntheticFieldExclusionStrategy.java,41,return skipSyntheticFields && f.isSynthetic();
False,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,22,mport java.lang.annotation.Annotation;
False,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,23,mport java.lang.reflect.Field;
False,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,39,ublic boolean shouldSkipField(Field f) {
False,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,40,eturn !isValidVersion(f.getAnnotations());
True,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,36,public boolean shouldSkipField(FieldAttributes f) {
True,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,37,"return !isValidVersion(f.getAnnotation(Since.class), f.getAnnotation(Until.class));"
False,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,44,eturn !isValidVersion(clazz.getAnnotations());
True,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,41,"return !isValidVersion(clazz.getAnnotation(Since.class), clazz.getAnnotation(Until.class));"
False,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,47,rivate boolean isValidVersion(Annotation[] annotations) {
False,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,48,or (Annotation annotation : annotations) {
False,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,49,f (!isValidSince(annotation) || !isValidUntil(annotation)) {
False,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,50,eturn false;
False,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,53,eturn true;
True,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,44,"private boolean isValidVersion(Since since, Until until) {"
True,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,45,return (isValidSince(since) && isValidUntil(until));
False,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,56,rivate boolean isValidSince(Annotation annotation) {
False,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,57,f (annotation instanceof Since) {
False,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,58,ouble annotationVersion = ((Since) annotation).value();
True,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,48,private boolean isValidSince(Since annotation) {
True,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,49,if (annotation != null) {
True,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,50,double annotationVersion = annotation.value();
False,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,66,rivate boolean isValidUntil(Annotation annotation) {
False,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,67,f (annotation instanceof Until) {
False,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,68,ouble annotationVersion = ((Until) annotation).value();
True,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,58,private boolean isValidUntil(Until annotation) {
True,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,59,if (annotation != null) {
True,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,60,double annotationVersion = annotation.value();
False,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,19,mport com.google.gson.DisjunctionExclusionStrategy;
False,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,20,mport com.google.gson.ExclusionStrategy;
False,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,22,mport junit.framework.TestCase;
False,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,24,mport java.lang.reflect.Field;
True,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,22,import junit.framework.TestCase;
False,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,38,rivate static final Field FIELD = CLAZZ.getFields()[0];
True,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,34,private static final FieldAttributes FIELD = new FieldAttributes(CLAZZ.getFields()[0]);
True,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,40,"fail(""Should throw an exception"");"
False,gson/src/test/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategyTest.java,45,ssertTrue(strategy.shouldSkipField(f));
True,gson/src/test/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategyTest.java,45,assertTrue(strategy.shouldSkipField(new FieldAttributes(f)));
False,gson/src/test/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategyTest.java,50,ssertTrue(strategy.shouldSkipField(f));
True,gson/src/test/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategyTest.java,50,assertTrue(strategy.shouldSkipField(new FieldAttributes(f)));
False,gson/src/test/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategyTest.java,55,ssertFalse(strategy.shouldSkipField(f));
True,gson/src/test/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategyTest.java,55,assertFalse(strategy.shouldSkipField(new FieldAttributes(f)));
False,gson/src/test/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategyTest.java,60,ssertFalse(strategy.shouldSkipField(f));
True,gson/src/test/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationDeserializationExclusionStrategyTest.java,60,assertFalse(strategy.shouldSkipField(new FieldAttributes(f)));
False,gson/src/test/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategyTest.java,45,ssertTrue(strategy.shouldSkipField(f));
True,gson/src/test/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategyTest.java,45,assertTrue(strategy.shouldSkipField(new FieldAttributes(f)));
False,gson/src/test/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategyTest.java,50,ssertTrue(strategy.shouldSkipField(f));
True,gson/src/test/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategyTest.java,50,assertTrue(strategy.shouldSkipField(new FieldAttributes(f)));
False,gson/src/test/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategyTest.java,55,ssertFalse(strategy.shouldSkipField(f));
True,gson/src/test/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategyTest.java,55,assertFalse(strategy.shouldSkipField(new FieldAttributes(f)));
False,gson/src/test/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategyTest.java,60,ssertFalse(strategy.shouldSkipField(f));
True,gson/src/test/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationSerializationExclusionStrategyTest.java,60,assertFalse(strategy.shouldSkipField(new FieldAttributes(f)));
True,gson/src/test/java/com/google/gson/FieldAttributesTest.java,gson/src/test/java/com/google/gson/FieldAttributesTest.java,2,* Copyright (C) 2008 Google Inc.
True,gson/src/test/java/com/google/gson/FieldAttributesTest.java,gson/src/test/java/com/google/gson/FieldAttributesTest.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,gson/src/test/java/com/google/gson/FieldAttributesTest.java,gson/src/test/java/com/google/gson/FieldAttributesTest.java,5,* you may not use this file except in compliance with the License.
True,gson/src/test/java/com/google/gson/FieldAttributesTest.java,gson/src/test/java/com/google/gson/FieldAttributesTest.java,6,* You may obtain a copy of the License at
True,gson/src/test/java/com/google/gson/FieldAttributesTest.java,gson/src/test/java/com/google/gson/FieldAttributesTest.java,8,* http://www.apache.org/licenses/LICENSE-2.0
True,gson/src/test/java/com/google/gson/FieldAttributesTest.java,gson/src/test/java/com/google/gson/FieldAttributesTest.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,gson/src/test/java/com/google/gson/FieldAttributesTest.java,gson/src/test/java/com/google/gson/FieldAttributesTest.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,gson/src/test/java/com/google/gson/FieldAttributesTest.java,gson/src/test/java/com/google/gson/FieldAttributesTest.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,gson/src/test/java/com/google/gson/FieldAttributesTest.java,gson/src/test/java/com/google/gson/FieldAttributesTest.java,13,* See the License for the specific language governing permissions and
True,gson/src/test/java/com/google/gson/FieldAttributesTest.java,gson/src/test/java/com/google/gson/FieldAttributesTest.java,14,* limitations under the License.
True,gson/src/test/java/com/google/gson/FieldAttributesTest.java,gson/src/test/java/com/google/gson/FieldAttributesTest.java,17,package com.google.gson;
True,gson/src/test/java/com/google/gson/FieldAttributesTest.java,gson/src/test/java/com/google/gson/FieldAttributesTest.java,19,import java.lang.reflect.Modifier;
True,gson/src/test/java/com/google/gson/FieldAttributesTest.java,gson/src/test/java/com/google/gson/FieldAttributesTest.java,20,import java.lang.reflect.Type;
True,gson/src/test/java/com/google/gson/FieldAttributesTest.java,gson/src/test/java/com/google/gson/FieldAttributesTest.java,21,import java.util.List;
True,gson/src/test/java/com/google/gson/FieldAttributesTest.java,gson/src/test/java/com/google/gson/FieldAttributesTest.java,23,import junit.framework.TestCase;
True,gson/src/test/java/com/google/gson/FieldAttributesTest.java,gson/src/test/java/com/google/gson/FieldAttributesTest.java,25,import com.google.gson.reflect.TypeToken;
True,gson/src/test/java/com/google/gson/FieldAttributesTest.java,gson/src/test/java/com/google/gson/FieldAttributesTest.java,28,* Unit tests for the {@link FieldAttributes} class.
True,gson/src/test/java/com/google/gson/FieldAttributesTest.java,gson/src/test/java/com/google/gson/FieldAttributesTest.java,30,* @author Inderjeet Singh
True,gson/src/test/java/com/google/gson/FieldAttributesTest.java,gson/src/test/java/com/google/gson/FieldAttributesTest.java,31,* @author Joel Leitch
True,gson/src/test/java/com/google/gson/FieldAttributesTest.java,gson/src/test/java/com/google/gson/FieldAttributesTest.java,33,public class FieldAttributesTest extends TestCase {
True,gson/src/test/java/com/google/gson/FieldAttributesTest.java,gson/src/test/java/com/google/gson/FieldAttributesTest.java,34,private FieldAttributes fieldAttributes;
True,gson/src/test/java/com/google/gson/FieldAttributesTest.java,gson/src/test/java/com/google/gson/FieldAttributesTest.java,36,@Override
True,gson/src/test/java/com/google/gson/FieldAttributesTest.java,gson/src/test/java/com/google/gson/FieldAttributesTest.java,37,protected void setUp() throws Exception {
True,gson/src/test/java/com/google/gson/FieldAttributesTest.java,gson/src/test/java/com/google/gson/FieldAttributesTest.java,38,super.setUp();
True,gson/src/test/java/com/google/gson/FieldAttributesTest.java,gson/src/test/java/com/google/gson/FieldAttributesTest.java,39,"fieldAttributes = new FieldAttributes(Foo.class.getField(""bar""));"
True,gson/src/test/java/com/google/gson/FieldAttributesTest.java,gson/src/test/java/com/google/gson/FieldAttributesTest.java,42,public void testNullField() throws Exception {
True,gson/src/test/java/com/google/gson/FieldAttributesTest.java,gson/src/test/java/com/google/gson/FieldAttributesTest.java,43,try {
True,gson/src/test/java/com/google/gson/FieldAttributesTest.java,gson/src/test/java/com/google/gson/FieldAttributesTest.java,44,new FieldAttributes(null);
True,gson/src/test/java/com/google/gson/FieldAttributesTest.java,gson/src/test/java/com/google/gson/FieldAttributesTest.java,45,"fail(""Field parameter can not be null"");"
True,gson/src/test/java/com/google/gson/FieldAttributesTest.java,gson/src/test/java/com/google/gson/FieldAttributesTest.java,46,} catch (IllegalArgumentException expected) { }
True,gson/src/test/java/com/google/gson/FieldAttributesTest.java,gson/src/test/java/com/google/gson/FieldAttributesTest.java,49,public void testModifiers() throws Exception {
True,gson/src/test/java/com/google/gson/FieldAttributesTest.java,gson/src/test/java/com/google/gson/FieldAttributesTest.java,50,assertFalse(fieldAttributes.hasModifier(Modifier.STATIC));
True,gson/src/test/java/com/google/gson/FieldAttributesTest.java,gson/src/test/java/com/google/gson/FieldAttributesTest.java,51,assertFalse(fieldAttributes.hasModifier(Modifier.FINAL));
True,gson/src/test/java/com/google/gson/FieldAttributesTest.java,gson/src/test/java/com/google/gson/FieldAttributesTest.java,52,assertFalse(fieldAttributes.hasModifier(Modifier.ABSTRACT));
True,gson/src/test/java/com/google/gson/FieldAttributesTest.java,gson/src/test/java/com/google/gson/FieldAttributesTest.java,53,assertFalse(fieldAttributes.hasModifier(Modifier.VOLATILE));
True,gson/src/test/java/com/google/gson/FieldAttributesTest.java,gson/src/test/java/com/google/gson/FieldAttributesTest.java,54,assertFalse(fieldAttributes.hasModifier(Modifier.PROTECTED));
True,gson/src/test/java/com/google/gson/FieldAttributesTest.java,gson/src/test/java/com/google/gson/FieldAttributesTest.java,56,assertTrue(fieldAttributes.hasModifier(Modifier.PUBLIC));
True,gson/src/test/java/com/google/gson/FieldAttributesTest.java,gson/src/test/java/com/google/gson/FieldAttributesTest.java,57,assertTrue(fieldAttributes.hasModifier(Modifier.TRANSIENT));
True,gson/src/test/java/com/google/gson/FieldAttributesTest.java,gson/src/test/java/com/google/gson/FieldAttributesTest.java,60,public void testIsSynthetic() throws Exception {
True,gson/src/test/java/com/google/gson/FieldAttributesTest.java,gson/src/test/java/com/google/gson/FieldAttributesTest.java,61,assertFalse(fieldAttributes.isSynthetic());
True,gson/src/test/java/com/google/gson/FieldAttributesTest.java,gson/src/test/java/com/google/gson/FieldAttributesTest.java,64,public void testName() throws Exception {
True,gson/src/test/java/com/google/gson/FieldAttributesTest.java,gson/src/test/java/com/google/gson/FieldAttributesTest.java,65,"assertEquals(""bar"", fieldAttributes.getName());"
True,gson/src/test/java/com/google/gson/FieldAttributesTest.java,gson/src/test/java/com/google/gson/FieldAttributesTest.java,68,public void testDeclaredTypeAndClass() throws Exception {
True,gson/src/test/java/com/google/gson/FieldAttributesTest.java,gson/src/test/java/com/google/gson/FieldAttributesTest.java,69,Type expectedType = new TypeToken<List<String>>() {}.getType();
True,gson/src/test/java/com/google/gson/FieldAttributesTest.java,gson/src/test/java/com/google/gson/FieldAttributesTest.java,70,"assertEquals(expectedType, fieldAttributes.getDeclaredType());"
True,gson/src/test/java/com/google/gson/FieldAttributesTest.java,gson/src/test/java/com/google/gson/FieldAttributesTest.java,71,"assertEquals(List.class, fieldAttributes.getDeclaredClass());"
True,gson/src/test/java/com/google/gson/FieldAttributesTest.java,gson/src/test/java/com/google/gson/FieldAttributesTest.java,74,private static class Foo {
True,gson/src/test/java/com/google/gson/FieldAttributesTest.java,gson/src/test/java/com/google/gson/FieldAttributesTest.java,75,public transient List<String> bar;
False,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,19,mport com.google.gson.common.TestTypes.ClassWithNoFields;
True,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,19,import java.lang.reflect.Modifier;
True,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,20,import java.util.LinkedList;
False,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,23,mport java.lang.reflect.Modifier;
True,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,24,import com.google.gson.common.TestTypes;
True,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,25,import com.google.gson.common.TestTypes.ClassWithNoFields;
False,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,35,ublic void testAnonymousLocalClassesSerialization() {
False,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,36,son gson = new Gson(new ModifierBasedExclusionStrategy(
False,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,37,"rue, Modifier.TRANSIENT, Modifier.STATIC), Gson.DEFAULT_NAMING_POLICY);"
True,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,37,public void testAnonymousLocalClassesSerialization() throws Exception {
True,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,38,LinkedList<ExclusionStrategy> strategies = new LinkedList<ExclusionStrategy>();
True,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,39,strategies.add(new SyntheticFieldExclusionStrategy(true));
True,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,40,"strategies.add(new ModifierBasedExclusionStrategy(Modifier.TRANSIENT, Modifier.STATIC));"
True,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,41,ExclusionStrategy exclusionStrategy = new DisjunctionExclusionStrategy(strategies);
True,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,42,"Gson gson = new Gson(exclusionStrategy, exclusionStrategy, Gson.DEFAULT_NAMING_POLICY,"
True,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,43,"new MappedObjectConstructor(DefaultTypeAdapters.getDefaultInstanceCreators()),"
True,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,44,"Gson.DEFAULT_JSON_FORMATTER, false, DefaultTypeAdapters.getDefaultSerializers(),"
True,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,45,"DefaultTypeAdapters.getDefaultDeserializers(), Gson.DEFAULT_JSON_NON_EXECUTABLE);"
True,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,51,// TODO(Joel): Move this to some other functional test once exclusion policies are
True,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,52,// available to the public
True,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,53,public void testUserDefinedExclusionPolicies() throws Exception {
True,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,54,Gson gson = new GsonBuilder()
True,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,55,.setExclusionStrategies(new UserDefinedExclusionStrategy(String.class))
True,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,56,.create();
True,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,58,"String json = gson.toJson(new TestTypes.StringWrapper(""someValue""));"
True,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,59,"assertEquals(""{}"", json);"
True,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,62,private static class UserDefinedExclusionStrategy implements ExclusionStrategy {
True,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,63,private final Class<?> excludedThisClass;
True,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,65,UserDefinedExclusionStrategy(Class<?> excludedThisClass) {
True,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,66,this.excludedThisClass = excludedThisClass;
True,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,69,public boolean shouldSkipClass(Class<?> clazz) {
True,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,70,return excludedThisClass.equals(clazz);
True,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,73,public boolean shouldSkipField(FieldAttributes f) {
True,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,74,return excludedThisClass.equals(f.getDeclaredClass());
False,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,49,ssertTrue(strategy.shouldSkipField(f));
True,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,49,assertTrue(strategy.shouldSkipField(new FieldAttributes(f)));
False,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,59,ssertFalse(strategy.shouldSkipField(f));
True,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,59,assertFalse(strategy.shouldSkipField(new FieldAttributes(f)));
False,gson/src/test/java/com/google/gson/MockExclusionStrategy.java,gson/src/test/java/com/google/gson/MockExclusionStrategy.java,19,mport com.google.gson.ExclusionStrategy;
False,gson/src/test/java/com/google/gson/MockExclusionStrategy.java,gson/src/test/java/com/google/gson/MockExclusionStrategy.java,21,mport java.lang.reflect.Field;
False,gson/src/test/java/com/google/gson/MockExclusionStrategy.java,gson/src/test/java/com/google/gson/MockExclusionStrategy.java,25, unit testing.
True,gson/src/test/java/com/google/gson/MockExclusionStrategy.java,gson/src/test/java/com/google/gson/MockExclusionStrategy.java,22,* unit testing.
False,gson/src/test/java/com/google/gson/MockExclusionStrategy.java,gson/src/test/java/com/google/gson/MockExclusionStrategy.java,38,ublic boolean shouldSkipField(Field f) {
True,gson/src/test/java/com/google/gson/MockExclusionStrategy.java,gson/src/test/java/com/google/gson/MockExclusionStrategy.java,35,public boolean shouldSkipField(FieldAttributes f) {
False,gson/src/test/java/com/google/gson/NullExclusionStrategyTest.java,gson/src/test/java/com/google/gson/NullExclusionStrategyTest.java,19,mport com.google.gson.NullExclusionStrategy;
False,gson/src/test/java/com/google/gson/NullExclusionStrategyTest.java,gson/src/test/java/com/google/gson/NullExclusionStrategyTest.java,42,"ssertFalse(strategy.shouldSkipField("""".getClass().getFields()[0]));"
True,gson/src/test/java/com/google/gson/NullExclusionStrategyTest.java,gson/src/test/java/com/google/gson/NullExclusionStrategyTest.java,40,assertFalse(strategy.shouldSkipField(
True,gson/src/test/java/com/google/gson/NullExclusionStrategyTest.java,gson/src/test/java/com/google/gson/NullExclusionStrategyTest.java,41,"new FieldAttributes("""".getClass().getFields()[0])));"
False,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,19,mport com.google.gson.annotations.Since;
True,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,19,import java.lang.reflect.Field;
False,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,23,mport java.lang.reflect.Field;
True,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,23,import com.google.gson.annotations.Since;
False,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,46,ssertFalse(strategy.shouldSkipField(f));
True,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,46,assertFalse(strategy.shouldSkipField(new FieldAttributes(f)));
False,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,55,ssertFalse(strategy.shouldSkipField(f));
True,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,55,assertFalse(strategy.shouldSkipField(new FieldAttributes(f)));
False,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,64,ssertTrue(strategy.shouldSkipField(f));
True,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,64,assertTrue(strategy.shouldSkipField(new FieldAttributes(f)));
