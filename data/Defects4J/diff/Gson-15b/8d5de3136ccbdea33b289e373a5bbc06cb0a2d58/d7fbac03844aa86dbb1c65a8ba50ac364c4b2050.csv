is_addition,old_file_path,new_file_path,line_num,content
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1148,"tring hex = stringPool.get(buffer, pos, 4);"
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1148,"// Equivalent to Integer.parseInt(stringPool.get(buffer, pos, 4), 16);"
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1149,char result = 0;
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1150,"for (int i = pos, end = i + 4; i < end; i++) {"
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1151,char c = buffer[i];
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1152,result <<= 4;
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1153,if (c >= '0' && c <= '9') {
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1154,result += (c - '0');
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1155,} else if (c >= 'a' && c <= 'f') {
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1156,result += (c - 'a' + 10);
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1157,} else if (c >= 'A' && c <= 'F') {
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1158,result += (c - 'A' + 10);
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1159,} else {
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1160,"throw new NumberFormatException(""\\u"" + stringPool.get(buffer, pos, 4));"
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1150,"eturn (char) Integer.parseInt(hex, 16);"
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1164,return result;
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,164,public void testUnescapingInvalidCharacters() throws IOException {
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,165,"String json = ""[\""\\u000g\""]"";"
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,166,JsonReader reader = new JsonReader(new StringReader(json));
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,167,reader.beginArray();
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,168,try {
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,169,reader.nextString();
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,170,fail();
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,171,} catch (NumberFormatException expected) {
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,175,public void testUnescapingTruncatedCharacters() throws IOException {
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,176,"String json = ""[\""\\u000"";"
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,177,JsonReader reader = new JsonReader(new StringReader(json));
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,178,reader.beginArray();
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,179,try {
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,180,reader.nextString();
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,181,fail();
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,182,} catch (IOException expected) {
