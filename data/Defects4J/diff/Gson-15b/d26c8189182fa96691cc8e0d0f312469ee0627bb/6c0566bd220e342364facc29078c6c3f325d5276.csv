is_addition,old_file_path,new_file_path,line_num,content
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,2,* Copyright (C) 2011 Google Inc.
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,5,* you may not use this file except in compliance with the License.
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,6,* You may obtain a copy of the License at
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,8,*      http://www.apache.org/licenses/LICENSE-2.0
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,13,* See the License for the specific language governing permissions and
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,14,* limitations under the License.
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,17,package com.google.gson.internal.bind;
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,19,import com.google.gson.JsonArray;
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,20,import com.google.gson.JsonElement;
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,21,import com.google.gson.JsonNull;
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,22,import com.google.gson.JsonObject;
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,23,import com.google.gson.JsonPrimitive;
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,24,import com.google.gson.stream.JsonWriter;
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,25,import java.io.IOException;
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,26,import java.io.Writer;
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,27,import java.util.ArrayList;
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,28,import java.util.List;
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,31,* This writer writes a JsonElement.
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,33,public final class JsonElementWriter extends JsonWriter {
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,34,private static final Writer UNWRITABLE_WRITER = new Writer() {
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,35,"@Override public void write(char[] buffer, int offset, int counter) {"
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,36,throw new AssertionError();
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,38,@Override public void flush() throws IOException {
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,39,throw new AssertionError();
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,41,@Override public void close() throws IOException {
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,42,throw new AssertionError();
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,46,private final List<JsonElement> stack = new ArrayList<JsonElement>();
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,47,private String pendingName;
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,49,public JsonElementWriter() {
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,50,super(UNWRITABLE_WRITER);
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,53,public JsonElement get() {
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,54,if (stack.size() != 1) {
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,55,throw new IllegalStateException();
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,57,return stack.get(0);
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,60,private JsonElement peek() {
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,61,return stack.get(stack.size() - 1);
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,64,private void put(JsonElement value) {
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,65,if (pendingName != null) {
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,66,JsonObject object = (JsonObject) peek();
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,67,"object.add(pendingName, value);"
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,68,pendingName = null;
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,69,} else if (stack.isEmpty()) {
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,70,stack.add(value);
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,71,} else {
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,72,JsonElement element = peek();
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,73,if (element instanceof JsonArray) {
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,74,((JsonArray) element).add(value);
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,75,} else {
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,76,throw new IllegalStateException();
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,81,@Override public JsonWriter beginArray() throws IOException {
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,82,JsonArray array = new JsonArray();
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,83,put(array);
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,84,stack.add(array);
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,85,return this;
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,88,@Override public JsonWriter endArray() throws IOException {
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,89,if (stack.isEmpty() || pendingName != null) {
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,90,throw new IllegalStateException();
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,92,JsonElement element = peek();
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,93,if (element instanceof JsonArray) {
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,94,stack.remove(stack.size() - 1);
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,95,return this;
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,97,throw new IllegalStateException();
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,100,@Override public JsonWriter beginObject() throws IOException {
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,101,JsonObject object = new JsonObject();
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,102,put(object);
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,103,stack.add(object);
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,104,return this;
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,107,@Override public JsonWriter endObject() throws IOException {
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,108,if (stack.isEmpty() || pendingName != null) {
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,109,throw new IllegalStateException();
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,111,JsonElement element = peek();
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,112,if (element instanceof JsonObject) {
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,113,stack.remove(stack.size() - 1);
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,114,return this;
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,116,throw new IllegalStateException();
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,119,@Override public JsonWriter name(String name) throws IOException {
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,120,if (stack.isEmpty() || pendingName != null) {
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,121,throw new IllegalStateException();
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,123,JsonElement element = peek();
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,124,if (element instanceof JsonObject) {
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,125,pendingName = name;
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,126,return this;
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,128,throw new IllegalStateException();
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,131,@Override public JsonWriter value(String value) throws IOException {
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,132,put(new JsonPrimitive(value));
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,133,return this;
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,136,@Override public JsonWriter nullValue() throws IOException {
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,137,put(JsonNull.INSTANCE);
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,138,return this;
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,141,@Override public JsonWriter value(boolean value) throws IOException {
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,142,put(new JsonPrimitive(value));
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,143,return this;
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,146,@Override public JsonWriter value(double value) throws IOException {
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,147,put(new JsonPrimitive(value));
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,148,return this;
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,151,@Override public JsonWriter value(long value) throws IOException {
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,152,put(new JsonPrimitive(value));
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,153,return this;
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,156,@Override public JsonWriter value(Number value) throws IOException {
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,157,put(new JsonPrimitive(value));
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,158,return this;
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,161,@Override public void flush() throws IOException {
True,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,gson/src/main/java/com/google/gson/internal/bind/JsonElementWriter.java,164,@Override public void close() throws IOException {
False,gson/src/main/java/com/google/gson/stream/JsonWriter.java,gson/src/main/java/com/google/gson/stream/JsonWriter.java,123,ublic final class JsonWriter implements Closeable {
True,gson/src/main/java/com/google/gson/stream/JsonWriter.java,gson/src/main/java/com/google/gson/stream/JsonWriter.java,123,public class JsonWriter implements Closeable {
False,gson/src/main/java/com/google/gson/stream/JsonWriter.java,gson/src/main/java/com/google/gson/stream/JsonWriter.java,168,ublic void setIndent(String indent) {
True,gson/src/main/java/com/google/gson/stream/JsonWriter.java,gson/src/main/java/com/google/gson/stream/JsonWriter.java,168,public final void setIndent(String indent) {
False,gson/src/main/java/com/google/gson/stream/JsonWriter.java,gson/src/main/java/com/google/gson/stream/JsonWriter.java,190,ublic void setLenient(boolean lenient) {
True,gson/src/main/java/com/google/gson/stream/JsonWriter.java,gson/src/main/java/com/google/gson/stream/JsonWriter.java,190,public final void setLenient(boolean lenient) {
False,gson/src/main/java/com/google/gson/stream/JsonWriter.java,gson/src/main/java/com/google/gson/stream/JsonWriter.java,208,ublic void setHtmlSafe(boolean htmlSafe) {
True,gson/src/main/java/com/google/gson/stream/JsonWriter.java,gson/src/main/java/com/google/gson/stream/JsonWriter.java,208,public final void setHtmlSafe(boolean htmlSafe) {
False,gson/src/main/java/com/google/gson/stream/JsonWriter.java,gson/src/main/java/com/google/gson/stream/JsonWriter.java,216,ublic boolean isHtmlSafe() {
True,gson/src/main/java/com/google/gson/stream/JsonWriter.java,gson/src/main/java/com/google/gson/stream/JsonWriter.java,216,public final boolean isHtmlSafe() {
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,2,* Copyright (C) 2011 Google Inc.
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,5,* you may not use this file except in compliance with the License.
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,6,* You may obtain a copy of the License at
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,8,*      http://www.apache.org/licenses/LICENSE-2.0
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,13,* See the License for the specific language governing permissions and
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,14,* limitations under the License.
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,17,package com.google.gson.internal.bind;
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,19,import java.io.IOException;
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,20,import junit.framework.TestCase;
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,22,public final class JsonElementWriterTest extends TestCase {
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,24,// TODO: more tests
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,25,// TODO: close support
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,27,public void testArray() throws IOException {
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,28,JsonElementWriter writer = new JsonElementWriter();
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,29,writer.beginArray();
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,30,writer.value(1);
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,31,writer.value(2);
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,32,writer.value(3);
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,33,writer.endArray();
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,34,"assertEquals(""[1,2,3]"", writer.get().toString());"
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,37,public void testNestedArray() throws IOException {
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,38,JsonElementWriter writer = new JsonElementWriter();
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,39,writer.beginArray();
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,40,writer.beginArray();
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,41,writer.endArray();
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,42,writer.beginArray();
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,43,writer.beginArray();
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,44,writer.endArray();
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,45,writer.endArray();
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,46,writer.endArray();
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,47,"assertEquals(""[[],[[]]]"", writer.get().toString());"
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,50,public void testObject() throws IOException {
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,51,JsonElementWriter writer = new JsonElementWriter();
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,52,writer.beginObject();
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,53,"writer.name(""A"").value(1);"
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,54,"writer.name(""B"").value(2);"
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,55,writer.endObject();
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,56,"assertEquals(""{\""A\"":1,\""B\"":2}"", writer.get().toString());"
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,59,public void testNestedObject() throws IOException {
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,60,JsonElementWriter writer = new JsonElementWriter();
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,61,writer.beginObject();
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,62,"writer.name(""A"");"
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,63,writer.beginObject();
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,64,"writer.name(""B"");"
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,65,writer.beginObject();
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,66,writer.endObject();
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,67,writer.endObject();
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,68,"writer.name(""C"");"
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,69,writer.beginObject();
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,70,writer.endObject();
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,71,writer.endObject();
True,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,gson/src/test/java/com/google/gson/internal/bind/JsonElementWriterTest.java,72,"assertEquals(""{\""A\"":{\""B\"":{}},\""C\"":{}}"", writer.get().toString());"
