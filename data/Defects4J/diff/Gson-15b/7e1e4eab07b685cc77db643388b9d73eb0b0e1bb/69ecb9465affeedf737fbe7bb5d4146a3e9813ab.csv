is_addition,old_file_path,new_file_path,line_num,content
False,gson/src/main/java/com/google/gson/JsonObject.java,gson/src/main/java/com/google/gson/JsonObject.java,55,"reconditions.checkArgument(property != null && !"""".equals(property.trim()));"
True,gson/src/main/java/com/google/gson/JsonObject.java,gson/src/main/java/com/google/gson/JsonObject.java,55,Preconditions.checkArgument(property != null);
True,gson/src/test/java/com/google/gson/JsonObjectTest.java,gson/src/test/java/com/google/gson/JsonObjectTest.java,125,* From issue 227.
True,gson/src/test/java/com/google/gson/JsonObjectTest.java,gson/src/test/java/com/google/gson/JsonObjectTest.java,127,public void testWritePropertyWithEmptyStringName() {
True,gson/src/test/java/com/google/gson/JsonObjectTest.java,gson/src/test/java/com/google/gson/JsonObjectTest.java,128,JsonObject jsonObj = new JsonObject();
True,gson/src/test/java/com/google/gson/JsonObjectTest.java,gson/src/test/java/com/google/gson/JsonObjectTest.java,129,"jsonObj.add("""", new JsonPrimitive(true));"
True,gson/src/test/java/com/google/gson/JsonObjectTest.java,gson/src/test/java/com/google/gson/JsonObjectTest.java,130,"assertEquals(""{\""\"":true}"", new Gson().toJson(jsonObj));"
True,gson/src/test/java/com/google/gson/JsonObjectTest.java,gson/src/test/java/com/google/gson/JsonObjectTest.java,134,public void testReadPropertyWithEmptyStringName() {
True,gson/src/test/java/com/google/gson/JsonObjectTest.java,gson/src/test/java/com/google/gson/JsonObjectTest.java,135,"JsonObject jsonObj = new JsonParser().parse(""{\""\"":true}"").getAsJsonObject();"
True,gson/src/test/java/com/google/gson/JsonObjectTest.java,gson/src/test/java/com/google/gson/JsonObjectTest.java,136,"assertEquals(true, jsonObj.get("""").getAsBoolean());"
True,gson/src/test/java/com/google/gson/functional/MapTest.java,gson/src/test/java/com/google/gson/functional/MapTest.java,302,* From issue 227.
True,gson/src/test/java/com/google/gson/functional/MapTest.java,gson/src/test/java/com/google/gson/functional/MapTest.java,304,public void testWriteMapsWithEmptyStringKey() {
True,gson/src/test/java/com/google/gson/functional/MapTest.java,gson/src/test/java/com/google/gson/functional/MapTest.java,305,"Map<String, Boolean> map = new HashMap<String, Boolean>();"
True,gson/src/test/java/com/google/gson/functional/MapTest.java,gson/src/test/java/com/google/gson/functional/MapTest.java,306,"map.put("""", true);"
True,gson/src/test/java/com/google/gson/functional/MapTest.java,gson/src/test/java/com/google/gson/functional/MapTest.java,307,"assertEquals(""{\""\"":true}"", gson.toJson(map));"
True,gson/src/test/java/com/google/gson/functional/MapTest.java,gson/src/test/java/com/google/gson/functional/MapTest.java,311,public void testReadMapsWithEmptyStringKey() {
True,gson/src/test/java/com/google/gson/functional/MapTest.java,gson/src/test/java/com/google/gson/functional/MapTest.java,312,"Map<String, Boolean> map = gson.fromJson(""{\""\"":true}"", new TypeToken<Map<String, Boolean>>() {}.getType());"
True,gson/src/test/java/com/google/gson/functional/MapTest.java,gson/src/test/java/com/google/gson/functional/MapTest.java,313,"assertEquals(Boolean.TRUE, map.get(""""));"
