is_addition,old_file_path,new_file_path,line_num,content
False,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,19,mport java.lang.reflect.AccessibleObject;
True,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,19,import sun.misc.Unsafe;
True,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,23,import java.lang.reflect.Field;
True,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,26,import java.security.AccessController;
True,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,27,import java.security.PrivilegedAction;
True,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,43,private static final Unsafe THE_UNSAFE =  AccessController.doPrivileged(
True,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,44,new PrivilegedAction<Unsafe>() {
True,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,45,public Unsafe run() {
True,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,46,try {
True,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,47,"Field f = Unsafe.class.getDeclaredField(""theUnsafe"");"
True,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,48,f.setAccessible(true);
True,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,49,return (Unsafe) f.get(null);
True,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,50,} catch (NoSuchFieldException e) {
True,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,51,throw new Error();
True,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,52,} catch (IllegalAccessException e) {
True,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,53,throw new Error();
True,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,78,"@SuppressWarnings({""unchecked"", ""cast""})"
False,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,62,onstructor<T> constructor = getNoArgsConstructor(typeOfT);
True,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,81,Class<T> clazz = (Class<T>) Types.getRawType(typeOfT);
True,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,82,Constructor<T> constructor = getNoArgsConstructor(clazz);
False,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,64,"hrow new RuntimeException((""No-args constructor for "" + typeOfT + "" does not exist. """
False,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,65," ""Register an InstanceCreator with Gson for this type to fix this problem.""));"
True,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,84,return (T) THE_UNSAFE.allocateInstance(clazz);
False,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,80,"SuppressWarnings({""unchecked"", ""cast""})"
False,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,81,rivate <T> Constructor<T> getNoArgsConstructor(Type typeOfT) {
False,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,82,lass<?> clazz = Types.getRawType(typeOfT);
False,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,83,onstructor<T>[] declaredConstructors = (Constructor<T>[]) clazz.getDeclaredConstructors();
False,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,84,"ccessibleObject.setAccessible(declaredConstructors, true);"
False,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,85,or (Constructor<T> constructor : declaredConstructors) {
False,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,86,f (constructor.getParameterTypes().length == 0) {
False,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,87,eturn constructor;
True,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,99,private <T> Constructor<T> getNoArgsConstructor(Class<T> clazz) {
True,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,100,try {
True,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,101,Constructor<T> declaredConstructor = clazz.getDeclaredConstructor();
True,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,102,declaredConstructor.setAccessible(true);
True,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,103,return declaredConstructor;
True,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,104,} catch (Exception e) {
True,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,105,return null;
False,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,gson/src/main/java/com/google/gson/MappedObjectConstructor.java,90,eturn null;
True,gson/src/test/java/com/google/gson/MappedObjectConstructorTest.java,gson/src/test/java/com/google/gson/MappedObjectConstructorTest.java,2,* Copyright (C) 2011 Google Inc.
True,gson/src/test/java/com/google/gson/MappedObjectConstructorTest.java,gson/src/test/java/com/google/gson/MappedObjectConstructorTest.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,gson/src/test/java/com/google/gson/MappedObjectConstructorTest.java,gson/src/test/java/com/google/gson/MappedObjectConstructorTest.java,5,* you may not use this file except in compliance with the License.
True,gson/src/test/java/com/google/gson/MappedObjectConstructorTest.java,gson/src/test/java/com/google/gson/MappedObjectConstructorTest.java,6,* You may obtain a copy of the License at
True,gson/src/test/java/com/google/gson/MappedObjectConstructorTest.java,gson/src/test/java/com/google/gson/MappedObjectConstructorTest.java,8,* http://www.apache.org/licenses/LICENSE-2.0
True,gson/src/test/java/com/google/gson/MappedObjectConstructorTest.java,gson/src/test/java/com/google/gson/MappedObjectConstructorTest.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,gson/src/test/java/com/google/gson/MappedObjectConstructorTest.java,gson/src/test/java/com/google/gson/MappedObjectConstructorTest.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,gson/src/test/java/com/google/gson/MappedObjectConstructorTest.java,gson/src/test/java/com/google/gson/MappedObjectConstructorTest.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,gson/src/test/java/com/google/gson/MappedObjectConstructorTest.java,gson/src/test/java/com/google/gson/MappedObjectConstructorTest.java,13,* See the License for the specific language governing permissions and
True,gson/src/test/java/com/google/gson/MappedObjectConstructorTest.java,gson/src/test/java/com/google/gson/MappedObjectConstructorTest.java,14,* limitations under the License.
True,gson/src/test/java/com/google/gson/MappedObjectConstructorTest.java,gson/src/test/java/com/google/gson/MappedObjectConstructorTest.java,17,package com.google.gson;
True,gson/src/test/java/com/google/gson/MappedObjectConstructorTest.java,gson/src/test/java/com/google/gson/MappedObjectConstructorTest.java,19,import com.google.gson.common.TestTypes.CrazyLongTypeAdapter;
True,gson/src/test/java/com/google/gson/MappedObjectConstructorTest.java,gson/src/test/java/com/google/gson/MappedObjectConstructorTest.java,21,import junit.framework.TestCase;
True,gson/src/test/java/com/google/gson/MappedObjectConstructorTest.java,gson/src/test/java/com/google/gson/MappedObjectConstructorTest.java,23,import java.lang.reflect.Type;
True,gson/src/test/java/com/google/gson/MappedObjectConstructorTest.java,gson/src/test/java/com/google/gson/MappedObjectConstructorTest.java,26,* Unit tests for the {@link MappedObjectConstructor} class.
True,gson/src/test/java/com/google/gson/MappedObjectConstructorTest.java,gson/src/test/java/com/google/gson/MappedObjectConstructorTest.java,28,* @author Joel Leitch
True,gson/src/test/java/com/google/gson/MappedObjectConstructorTest.java,gson/src/test/java/com/google/gson/MappedObjectConstructorTest.java,30,public class MappedObjectConstructorTest extends TestCase {
True,gson/src/test/java/com/google/gson/MappedObjectConstructorTest.java,gson/src/test/java/com/google/gson/MappedObjectConstructorTest.java,31,private ParameterizedTypeHandlerMap<InstanceCreator<?>> creatorMap;
True,gson/src/test/java/com/google/gson/MappedObjectConstructorTest.java,gson/src/test/java/com/google/gson/MappedObjectConstructorTest.java,32,private MappedObjectConstructor constructor;
True,gson/src/test/java/com/google/gson/MappedObjectConstructorTest.java,gson/src/test/java/com/google/gson/MappedObjectConstructorTest.java,34,@Override
True,gson/src/test/java/com/google/gson/MappedObjectConstructorTest.java,gson/src/test/java/com/google/gson/MappedObjectConstructorTest.java,35,protected void setUp() throws Exception {
True,gson/src/test/java/com/google/gson/MappedObjectConstructorTest.java,gson/src/test/java/com/google/gson/MappedObjectConstructorTest.java,36,super.setUp();
True,gson/src/test/java/com/google/gson/MappedObjectConstructorTest.java,gson/src/test/java/com/google/gson/MappedObjectConstructorTest.java,37,creatorMap = new ParameterizedTypeHandlerMap<InstanceCreator<?>>();
True,gson/src/test/java/com/google/gson/MappedObjectConstructorTest.java,gson/src/test/java/com/google/gson/MappedObjectConstructorTest.java,38,constructor = new MappedObjectConstructor(creatorMap);
True,gson/src/test/java/com/google/gson/MappedObjectConstructorTest.java,gson/src/test/java/com/google/gson/MappedObjectConstructorTest.java,41,public void testInstanceCreatorTakesTopPrecedence() throws Exception {
True,gson/src/test/java/com/google/gson/MappedObjectConstructorTest.java,gson/src/test/java/com/google/gson/MappedObjectConstructorTest.java,42,"creatorMap.register(ObjectWithDefaultConstructor.class, new MyInstanceCreator());"
True,gson/src/test/java/com/google/gson/MappedObjectConstructorTest.java,gson/src/test/java/com/google/gson/MappedObjectConstructorTest.java,43,ObjectWithDefaultConstructor obj =
True,gson/src/test/java/com/google/gson/MappedObjectConstructorTest.java,gson/src/test/java/com/google/gson/MappedObjectConstructorTest.java,44,constructor.construct(ObjectWithDefaultConstructor.class);
True,gson/src/test/java/com/google/gson/MappedObjectConstructorTest.java,gson/src/test/java/com/google/gson/MappedObjectConstructorTest.java,45,"assertEquals(""instanceCreator"", obj.stringValue);"
True,gson/src/test/java/com/google/gson/MappedObjectConstructorTest.java,gson/src/test/java/com/google/gson/MappedObjectConstructorTest.java,46,"assertEquals(10, obj.intValue);"
True,gson/src/test/java/com/google/gson/MappedObjectConstructorTest.java,gson/src/test/java/com/google/gson/MappedObjectConstructorTest.java,49,public void testNoInstanceCreatorInvokesDefaultConstructor() throws Exception {
True,gson/src/test/java/com/google/gson/MappedObjectConstructorTest.java,gson/src/test/java/com/google/gson/MappedObjectConstructorTest.java,50,ObjectWithDefaultConstructor expected = new ObjectWithDefaultConstructor();
True,gson/src/test/java/com/google/gson/MappedObjectConstructorTest.java,gson/src/test/java/com/google/gson/MappedObjectConstructorTest.java,51,ObjectWithDefaultConstructor obj =
True,gson/src/test/java/com/google/gson/MappedObjectConstructorTest.java,gson/src/test/java/com/google/gson/MappedObjectConstructorTest.java,52,constructor.construct(ObjectWithDefaultConstructor.class);
True,gson/src/test/java/com/google/gson/MappedObjectConstructorTest.java,gson/src/test/java/com/google/gson/MappedObjectConstructorTest.java,53,"assertEquals(expected.stringValue, obj.stringValue);"
True,gson/src/test/java/com/google/gson/MappedObjectConstructorTest.java,gson/src/test/java/com/google/gson/MappedObjectConstructorTest.java,54,"assertEquals(expected.intValue, obj.intValue);"
True,gson/src/test/java/com/google/gson/MappedObjectConstructorTest.java,gson/src/test/java/com/google/gson/MappedObjectConstructorTest.java,57,public void testNoDefaultConstructor() throws Exception {
True,gson/src/test/java/com/google/gson/MappedObjectConstructorTest.java,gson/src/test/java/com/google/gson/MappedObjectConstructorTest.java,58,ObjectNoDefaultConstructor obj = constructor.construct(ObjectNoDefaultConstructor.class);
True,gson/src/test/java/com/google/gson/MappedObjectConstructorTest.java,gson/src/test/java/com/google/gson/MappedObjectConstructorTest.java,59,assertNull(obj.stringValue);
True,gson/src/test/java/com/google/gson/MappedObjectConstructorTest.java,gson/src/test/java/com/google/gson/MappedObjectConstructorTest.java,60,"assertEquals(0, obj.intValue);"
True,gson/src/test/java/com/google/gson/MappedObjectConstructorTest.java,gson/src/test/java/com/google/gson/MappedObjectConstructorTest.java,63,private static class MyInstanceCreator
True,gson/src/test/java/com/google/gson/MappedObjectConstructorTest.java,gson/src/test/java/com/google/gson/MappedObjectConstructorTest.java,64,implements InstanceCreator<ObjectWithDefaultConstructor> {
True,gson/src/test/java/com/google/gson/MappedObjectConstructorTest.java,gson/src/test/java/com/google/gson/MappedObjectConstructorTest.java,65,public ObjectWithDefaultConstructor createInstance(Type type) {
True,gson/src/test/java/com/google/gson/MappedObjectConstructorTest.java,gson/src/test/java/com/google/gson/MappedObjectConstructorTest.java,66,"return new ObjectWithDefaultConstructor(""instanceCreator"", 10);"
True,gson/src/test/java/com/google/gson/MappedObjectConstructorTest.java,gson/src/test/java/com/google/gson/MappedObjectConstructorTest.java,70,private static class ObjectWithDefaultConstructor {
True,gson/src/test/java/com/google/gson/MappedObjectConstructorTest.java,gson/src/test/java/com/google/gson/MappedObjectConstructorTest.java,71,public final String stringValue;
True,gson/src/test/java/com/google/gson/MappedObjectConstructorTest.java,gson/src/test/java/com/google/gson/MappedObjectConstructorTest.java,72,public final int intValue;
True,gson/src/test/java/com/google/gson/MappedObjectConstructorTest.java,gson/src/test/java/com/google/gson/MappedObjectConstructorTest.java,74,private ObjectWithDefaultConstructor() {
True,gson/src/test/java/com/google/gson/MappedObjectConstructorTest.java,gson/src/test/java/com/google/gson/MappedObjectConstructorTest.java,75,"this(""default"", 5);"
True,gson/src/test/java/com/google/gson/MappedObjectConstructorTest.java,gson/src/test/java/com/google/gson/MappedObjectConstructorTest.java,78,"public ObjectWithDefaultConstructor(String stringValue, int intValue) {"
True,gson/src/test/java/com/google/gson/MappedObjectConstructorTest.java,gson/src/test/java/com/google/gson/MappedObjectConstructorTest.java,79,this.stringValue = stringValue;
True,gson/src/test/java/com/google/gson/MappedObjectConstructorTest.java,gson/src/test/java/com/google/gson/MappedObjectConstructorTest.java,80,this.intValue = intValue;
True,gson/src/test/java/com/google/gson/MappedObjectConstructorTest.java,gson/src/test/java/com/google/gson/MappedObjectConstructorTest.java,84,private static class ObjectNoDefaultConstructor extends ObjectWithDefaultConstructor {
True,gson/src/test/java/com/google/gson/MappedObjectConstructorTest.java,gson/src/test/java/com/google/gson/MappedObjectConstructorTest.java,85,"public ObjectNoDefaultConstructor(String stringValue, int intValue) {"
True,gson/src/test/java/com/google/gson/MappedObjectConstructorTest.java,gson/src/test/java/com/google/gson/MappedObjectConstructorTest.java,86,"super(stringValue, intValue);"
