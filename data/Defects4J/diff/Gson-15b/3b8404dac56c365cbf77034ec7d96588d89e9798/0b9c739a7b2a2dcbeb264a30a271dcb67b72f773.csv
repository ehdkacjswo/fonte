is_addition,old_file_path,new_file_path,line_num,content
False,gson/src/test/java/com/google/gson/functional/ObjectTest.java,gson/src/test/java/com/google/gson/functional/ObjectTest.java,302,ublic void testReallyLongStringsDeserialization() throws Exception {
False,gson/src/test/java/com/google/gson/functional/ObjectTest.java,gson/src/test/java/com/google/gson/functional/ObjectTest.java,303,tringBuilder sb = new StringBuilder(8096);
False,gson/src/test/java/com/google/gson/functional/ObjectTest.java,gson/src/test/java/com/google/gson/functional/ObjectTest.java,304,"b.append(""Once upon a time there was a really long string that caused a StackOverFlowError\n"");"
False,gson/src/test/java/com/google/gson/functional/ObjectTest.java,gson/src/test/java/com/google/gson/functional/ObjectTest.java,305,"b.append(""and now it is fixed and instead throws a JsonParserException.....Yippie!!!\n"");"
False,gson/src/test/java/com/google/gson/functional/ObjectTest.java,gson/src/test/java/com/google/gson/functional/ObjectTest.java,306,"b.append(""Wow....that is a really long string that is meant to be an exception stack trace, "");"
False,gson/src/test/java/com/google/gson/functional/ObjectTest.java,gson/src/test/java/com/google/gson/functional/ObjectTest.java,307,"b.append(""but is not :( \n\n\n\n\n\n."");"
False,gson/src/test/java/com/google/gson/functional/ObjectTest.java,gson/src/test/java/com/google/gson/functional/ObjectTest.java,308,"b.append(""lalalalala \n\n\n."");"
False,gson/src/test/java/com/google/gson/functional/ObjectTest.java,gson/src/test/java/com/google/gson/functional/ObjectTest.java,309,"b.append(""C'est la vie!!! \n\n\n\n\n"");"
False,gson/src/test/java/com/google/gson/functional/ObjectTest.java,gson/src/test/java/com/google/gson/functional/ObjectTest.java,311,or (int i = 0; i < 10; i++) {
False,gson/src/test/java/com/google/gson/functional/ObjectTest.java,gson/src/test/java/com/google/gson/functional/ObjectTest.java,312,b.append(sb.toString());
False,gson/src/test/java/com/google/gson/functional/ObjectTest.java,gson/src/test/java/com/google/gson/functional/ObjectTest.java,315,hile (true) {
False,gson/src/test/java/com/google/gson/functional/ObjectTest.java,gson/src/test/java/com/google/gson/functional/ObjectTest.java,316,ry {
False,gson/src/test/java/com/google/gson/functional/ObjectTest.java,gson/src/test/java/com/google/gson/functional/ObjectTest.java,317,tring stackTrace = sb.toString();
False,gson/src/test/java/com/google/gson/functional/ObjectTest.java,gson/src/test/java/com/google/gson/functional/ObjectTest.java,318,b.append(stackTrace);
False,gson/src/test/java/com/google/gson/functional/ObjectTest.java,gson/src/test/java/com/google/gson/functional/ObjectTest.java,319,"tring json = ""{\""message\"":\""Error message.\"","""
False,gson/src/test/java/com/google/gson/functional/ObjectTest.java,gson/src/test/java/com/google/gson/functional/ObjectTest.java,320," ""\""stackTrace\"":\"""" + stackTrace + ""\""}"";"
False,gson/src/test/java/com/google/gson/functional/ObjectTest.java,gson/src/test/java/com/google/gson/functional/ObjectTest.java,321,arseLongJson(json);
False,gson/src/test/java/com/google/gson/functional/ObjectTest.java,gson/src/test/java/com/google/gson/functional/ObjectTest.java,322, catch (JsonParseException expected) {
False,gson/src/test/java/com/google/gson/functional/ObjectTest.java,gson/src/test/java/com/google/gson/functional/ObjectTest.java,323,reak;
False,gson/src/test/java/com/google/gson/functional/ObjectTest.java,gson/src/test/java/com/google/gson/functional/ObjectTest.java,333,rivate void parseLongJson(String json) throws JsonParseException {
False,gson/src/test/java/com/google/gson/functional/ObjectTest.java,gson/src/test/java/com/google/gson/functional/ObjectTest.java,334,"xceptionHolder target = gson.fromJson(json, ExceptionHolder.class);"
False,gson/src/test/java/com/google/gson/functional/ObjectTest.java,gson/src/test/java/com/google/gson/functional/ObjectTest.java,335,"ssertTrue(target.message.contains(""Error""));"
False,gson/src/test/java/com/google/gson/functional/ObjectTest.java,gson/src/test/java/com/google/gson/functional/ObjectTest.java,336,"ssertTrue(target.stackTrace.contains(""Yippie""));"
False,gson/src/test/java/com/google/gson/functional/ObjectTest.java,gson/src/test/java/com/google/gson/functional/ObjectTest.java,506,rivate static class ExceptionHolder {
False,gson/src/test/java/com/google/gson/functional/ObjectTest.java,gson/src/test/java/com/google/gson/functional/ObjectTest.java,507,ublic final String message;
False,gson/src/test/java/com/google/gson/functional/ObjectTest.java,gson/src/test/java/com/google/gson/functional/ObjectTest.java,508,ublic final String stackTrace;
False,gson/src/test/java/com/google/gson/functional/ObjectTest.java,gson/src/test/java/com/google/gson/functional/ObjectTest.java,509,ublic ExceptionHolder() {
False,gson/src/test/java/com/google/gson/functional/ObjectTest.java,gson/src/test/java/com/google/gson/functional/ObjectTest.java,510,"his("""", """");"
False,gson/src/test/java/com/google/gson/functional/ObjectTest.java,gson/src/test/java/com/google/gson/functional/ObjectTest.java,512,"ublic ExceptionHolder(String message, String stackTrace) {"
False,gson/src/test/java/com/google/gson/functional/ObjectTest.java,gson/src/test/java/com/google/gson/functional/ObjectTest.java,513,his.message = message;
False,gson/src/test/java/com/google/gson/functional/ObjectTest.java,gson/src/test/java/com/google/gson/functional/ObjectTest.java,514,his.stackTrace = stackTrace;
False,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,28," Functional tests for Json primitive values: String, integers, and floating point numbers."
True,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,28,"* Functional tests for Json primitive values: integers, and floating point numbers."
False,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,42,ublic void testStringValueSerialization() throws Exception {
False,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,43,"tring value = ""someRandomStringValue"";"
False,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,44,"ssertEquals('""' + value + '""', gson.toJson(value));"
False,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,47,ublic void testStringValueDeserialization() throws Exception {
False,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,48,"tring value = ""someRandomStringValue"";"
False,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,49,"tring actual = gson.fromJson(""\"""" + value + ""\"""", String.class);"
False,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,50,"ssertEquals(value, actual);"
False,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,53,ublic void testSingleQuoteInStringSerialization() throws Exception {
False,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,54,"tring valueWithQuotes = ""beforeQuote'afterQuote"";"
False,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,55,tring jsonRepresentation = gson.toJson(valueWithQuotes);
False,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,56,"ssertEquals(valueWithQuotes, gson.fromJson(jsonRepresentation, String.class));"
False,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,59,ublic void testSingleQuoteInStringDeserialization() throws Exception {
False,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,60,"tring value = ""beforeQuote'afterQuote"";"
False,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,61,"tring actual = gson.fromJson(""\"""" + value + ""\"""", String.class);"
False,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,62,"ssertEquals(value, actual);"
False,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,65,ublic void testEscapingQuotesInStringSerialization() throws Exception {
False,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,66,"tring valueWithQuotes = ""beforeQuote\""afterQuote"";"
False,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,67,tring jsonRepresentation = gson.toJson(valueWithQuotes);
False,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,68,"tring target = gson.fromJson(jsonRepresentation, String.class);"
False,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,69,"ssertEquals(valueWithQuotes, target);"
False,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,72,ublic void testEscapingQuotesInStringDeserialization() throws Exception {
False,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,73,"tring value = ""beforeQuote\\\""afterQuote"";"
False,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,74,"tring actual = gson.fromJson(""\"""" + value + ""\"""", String.class);"
False,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,75,"tring expected = ""beforeQuote\""afterQuote"";"
False,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,76,"ssertEquals(expected, actual);"
False,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,79,ublic void testStringValueAsSingleElementArraySerialization() throws Exception {
False,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,80,"tring[] target = {""abc""};"
False,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,81,"ssertEquals(""[\""abc\""]"", gson.toJson(target));"
False,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,82,"ssertEquals(""[\""abc\""]"", gson.toJson(target, String[].class));"
False,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,85,ublic void testStringValueAsSingleElementArrayDeserialization() throws Exception {
False,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,86,"tring value = ""someRandomStringValue"";"
False,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,87,"tring actual = gson.fromJson(""[\"""" + value + ""\""]"", String.class);"
False,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,88,"ssertEquals(value, actual);"
True,gson/src/test/java/com/google/gson/functional/StringTest.java,gson/src/test/java/com/google/gson/functional/StringTest.java,1,package com.google.gson.functional;
True,gson/src/test/java/com/google/gson/functional/StringTest.java,gson/src/test/java/com/google/gson/functional/StringTest.java,3,import com.google.gson.Gson;
True,gson/src/test/java/com/google/gson/functional/StringTest.java,gson/src/test/java/com/google/gson/functional/StringTest.java,4,import com.google.gson.JsonParseException;
True,gson/src/test/java/com/google/gson/functional/StringTest.java,gson/src/test/java/com/google/gson/functional/StringTest.java,6,import junit.framework.TestCase;
True,gson/src/test/java/com/google/gson/functional/StringTest.java,gson/src/test/java/com/google/gson/functional/StringTest.java,9,* Functional tests for Json serialization and deserialization of strings.
True,gson/src/test/java/com/google/gson/functional/StringTest.java,gson/src/test/java/com/google/gson/functional/StringTest.java,11,* @author Inderjeet Singh
True,gson/src/test/java/com/google/gson/functional/StringTest.java,gson/src/test/java/com/google/gson/functional/StringTest.java,12,* @author Joel Leitch
True,gson/src/test/java/com/google/gson/functional/StringTest.java,gson/src/test/java/com/google/gson/functional/StringTest.java,14,public class StringTest extends TestCase {
True,gson/src/test/java/com/google/gson/functional/StringTest.java,gson/src/test/java/com/google/gson/functional/StringTest.java,15,private Gson gson;
True,gson/src/test/java/com/google/gson/functional/StringTest.java,gson/src/test/java/com/google/gson/functional/StringTest.java,17,@Override
True,gson/src/test/java/com/google/gson/functional/StringTest.java,gson/src/test/java/com/google/gson/functional/StringTest.java,18,protected void setUp() throws Exception {
True,gson/src/test/java/com/google/gson/functional/StringTest.java,gson/src/test/java/com/google/gson/functional/StringTest.java,19,super.setUp();
True,gson/src/test/java/com/google/gson/functional/StringTest.java,gson/src/test/java/com/google/gson/functional/StringTest.java,20,gson = new Gson();
True,gson/src/test/java/com/google/gson/functional/StringTest.java,gson/src/test/java/com/google/gson/functional/StringTest.java,23,public void testStringValueSerialization() throws Exception {
True,gson/src/test/java/com/google/gson/functional/StringTest.java,gson/src/test/java/com/google/gson/functional/StringTest.java,24,"String value = ""someRandomStringValue"";"
True,gson/src/test/java/com/google/gson/functional/StringTest.java,gson/src/test/java/com/google/gson/functional/StringTest.java,25,"assertEquals('""' + value + '""', gson.toJson(value));"
True,gson/src/test/java/com/google/gson/functional/StringTest.java,gson/src/test/java/com/google/gson/functional/StringTest.java,28,public void testStringValueDeserialization() throws Exception {
True,gson/src/test/java/com/google/gson/functional/StringTest.java,gson/src/test/java/com/google/gson/functional/StringTest.java,29,"String value = ""someRandomStringValue"";"
True,gson/src/test/java/com/google/gson/functional/StringTest.java,gson/src/test/java/com/google/gson/functional/StringTest.java,30,"String actual = gson.fromJson(""\"""" + value + ""\"""", String.class);"
True,gson/src/test/java/com/google/gson/functional/StringTest.java,gson/src/test/java/com/google/gson/functional/StringTest.java,31,"assertEquals(value, actual);"
True,gson/src/test/java/com/google/gson/functional/StringTest.java,gson/src/test/java/com/google/gson/functional/StringTest.java,34,public void testSingleQuoteInStringSerialization() throws Exception {
True,gson/src/test/java/com/google/gson/functional/StringTest.java,gson/src/test/java/com/google/gson/functional/StringTest.java,35,"String valueWithQuotes = ""beforeQuote'afterQuote"";"
True,gson/src/test/java/com/google/gson/functional/StringTest.java,gson/src/test/java/com/google/gson/functional/StringTest.java,36,String jsonRepresentation = gson.toJson(valueWithQuotes);
True,gson/src/test/java/com/google/gson/functional/StringTest.java,gson/src/test/java/com/google/gson/functional/StringTest.java,37,"assertEquals(valueWithQuotes, gson.fromJson(jsonRepresentation, String.class));"
True,gson/src/test/java/com/google/gson/functional/StringTest.java,gson/src/test/java/com/google/gson/functional/StringTest.java,40,public void testSingleQuoteInStringDeserialization() throws Exception {
True,gson/src/test/java/com/google/gson/functional/StringTest.java,gson/src/test/java/com/google/gson/functional/StringTest.java,41,"String value = ""beforeQuote'afterQuote"";"
True,gson/src/test/java/com/google/gson/functional/StringTest.java,gson/src/test/java/com/google/gson/functional/StringTest.java,42,"String actual = gson.fromJson(""\"""" + value + ""\"""", String.class);"
True,gson/src/test/java/com/google/gson/functional/StringTest.java,gson/src/test/java/com/google/gson/functional/StringTest.java,43,"assertEquals(value, actual);"
True,gson/src/test/java/com/google/gson/functional/StringTest.java,gson/src/test/java/com/google/gson/functional/StringTest.java,46,public void testEscapingQuotesInStringSerialization() throws Exception {
True,gson/src/test/java/com/google/gson/functional/StringTest.java,gson/src/test/java/com/google/gson/functional/StringTest.java,47,"String valueWithQuotes = ""beforeQuote\""afterQuote"";"
True,gson/src/test/java/com/google/gson/functional/StringTest.java,gson/src/test/java/com/google/gson/functional/StringTest.java,48,String jsonRepresentation = gson.toJson(valueWithQuotes);
True,gson/src/test/java/com/google/gson/functional/StringTest.java,gson/src/test/java/com/google/gson/functional/StringTest.java,49,"String target = gson.fromJson(jsonRepresentation, String.class);"
True,gson/src/test/java/com/google/gson/functional/StringTest.java,gson/src/test/java/com/google/gson/functional/StringTest.java,50,"assertEquals(valueWithQuotes, target);"
True,gson/src/test/java/com/google/gson/functional/StringTest.java,gson/src/test/java/com/google/gson/functional/StringTest.java,53,public void testEscapingQuotesInStringDeserialization() throws Exception {
True,gson/src/test/java/com/google/gson/functional/StringTest.java,gson/src/test/java/com/google/gson/functional/StringTest.java,54,"String value = ""beforeQuote\\\""afterQuote"";"
True,gson/src/test/java/com/google/gson/functional/StringTest.java,gson/src/test/java/com/google/gson/functional/StringTest.java,55,"String actual = gson.fromJson(""\"""" + value + ""\"""", String.class);"
True,gson/src/test/java/com/google/gson/functional/StringTest.java,gson/src/test/java/com/google/gson/functional/StringTest.java,56,"String expected = ""beforeQuote\""afterQuote"";"
True,gson/src/test/java/com/google/gson/functional/StringTest.java,gson/src/test/java/com/google/gson/functional/StringTest.java,57,"assertEquals(expected, actual);"
True,gson/src/test/java/com/google/gson/functional/StringTest.java,gson/src/test/java/com/google/gson/functional/StringTest.java,60,public void testStringValueAsSingleElementArraySerialization() throws Exception {
True,gson/src/test/java/com/google/gson/functional/StringTest.java,gson/src/test/java/com/google/gson/functional/StringTest.java,61,"String[] target = {""abc""};"
True,gson/src/test/java/com/google/gson/functional/StringTest.java,gson/src/test/java/com/google/gson/functional/StringTest.java,62,"assertEquals(""[\""abc\""]"", gson.toJson(target));"
True,gson/src/test/java/com/google/gson/functional/StringTest.java,gson/src/test/java/com/google/gson/functional/StringTest.java,63,"assertEquals(""[\""abc\""]"", gson.toJson(target, String[].class));"
True,gson/src/test/java/com/google/gson/functional/StringTest.java,gson/src/test/java/com/google/gson/functional/StringTest.java,66,public void testStringValueAsSingleElementArrayDeserialization() throws Exception {
True,gson/src/test/java/com/google/gson/functional/StringTest.java,gson/src/test/java/com/google/gson/functional/StringTest.java,67,"String value = ""someRandomStringValue"";"
True,gson/src/test/java/com/google/gson/functional/StringTest.java,gson/src/test/java/com/google/gson/functional/StringTest.java,68,"String actual = gson.fromJson(""[\"""" + value + ""\""]"", String.class);"
True,gson/src/test/java/com/google/gson/functional/StringTest.java,gson/src/test/java/com/google/gson/functional/StringTest.java,69,"assertEquals(value, actual);"
True,gson/src/test/java/com/google/gson/functional/StringTest.java,gson/src/test/java/com/google/gson/functional/StringTest.java,72,public void testReallyLongStringsDeserialization() throws Exception {
True,gson/src/test/java/com/google/gson/functional/StringTest.java,gson/src/test/java/com/google/gson/functional/StringTest.java,73,StringBuilder sb = new StringBuilder(8096);
True,gson/src/test/java/com/google/gson/functional/StringTest.java,gson/src/test/java/com/google/gson/functional/StringTest.java,74,"sb.append(""Once upon a time there was a really long string that caused a StackOverFlowError\n"");"
True,gson/src/test/java/com/google/gson/functional/StringTest.java,gson/src/test/java/com/google/gson/functional/StringTest.java,75,"sb.append(""and now it is fixed and instead throws a JsonParserException.....Yippie!!!\n"");"
True,gson/src/test/java/com/google/gson/functional/StringTest.java,gson/src/test/java/com/google/gson/functional/StringTest.java,76,"sb.append(""Wow....that is a really long string that is meant to be an exception stack trace, "");"
True,gson/src/test/java/com/google/gson/functional/StringTest.java,gson/src/test/java/com/google/gson/functional/StringTest.java,77,"sb.append(""but is not :( \n\n\n\n\n\n."");"
True,gson/src/test/java/com/google/gson/functional/StringTest.java,gson/src/test/java/com/google/gson/functional/StringTest.java,78,"sb.append(""lalalalala \n\n\n."");"
True,gson/src/test/java/com/google/gson/functional/StringTest.java,gson/src/test/java/com/google/gson/functional/StringTest.java,79,"sb.append(""C'est la vie!!! \n\n\n\n\n"");"
True,gson/src/test/java/com/google/gson/functional/StringTest.java,gson/src/test/java/com/google/gson/functional/StringTest.java,81,for (int i = 0; i < 10; i++) {
True,gson/src/test/java/com/google/gson/functional/StringTest.java,gson/src/test/java/com/google/gson/functional/StringTest.java,82,sb.append(sb.toString());
True,gson/src/test/java/com/google/gson/functional/StringTest.java,gson/src/test/java/com/google/gson/functional/StringTest.java,85,while (true) {
True,gson/src/test/java/com/google/gson/functional/StringTest.java,gson/src/test/java/com/google/gson/functional/StringTest.java,86,try {
True,gson/src/test/java/com/google/gson/functional/StringTest.java,gson/src/test/java/com/google/gson/functional/StringTest.java,87,String stackTrace = sb.toString();
True,gson/src/test/java/com/google/gson/functional/StringTest.java,gson/src/test/java/com/google/gson/functional/StringTest.java,88,sb.append(stackTrace);
True,gson/src/test/java/com/google/gson/functional/StringTest.java,gson/src/test/java/com/google/gson/functional/StringTest.java,89,"String json = ""{\""message\"":\""Error message.\"","""
True,gson/src/test/java/com/google/gson/functional/StringTest.java,gson/src/test/java/com/google/gson/functional/StringTest.java,90,"+ ""\""stackTrace\"":\"""" + stackTrace + ""\""}"";"
True,gson/src/test/java/com/google/gson/functional/StringTest.java,gson/src/test/java/com/google/gson/functional/StringTest.java,91,parseLongJson(json);
True,gson/src/test/java/com/google/gson/functional/StringTest.java,gson/src/test/java/com/google/gson/functional/StringTest.java,92,} catch (JsonParseException expected) {
True,gson/src/test/java/com/google/gson/functional/StringTest.java,gson/src/test/java/com/google/gson/functional/StringTest.java,93,break;
True,gson/src/test/java/com/google/gson/functional/StringTest.java,gson/src/test/java/com/google/gson/functional/StringTest.java,98,private void parseLongJson(String json) throws JsonParseException {
True,gson/src/test/java/com/google/gson/functional/StringTest.java,gson/src/test/java/com/google/gson/functional/StringTest.java,99,"ExceptionHolder target = gson.fromJson(json, ExceptionHolder.class);"
True,gson/src/test/java/com/google/gson/functional/StringTest.java,gson/src/test/java/com/google/gson/functional/StringTest.java,100,"assertTrue(target.message.contains(""Error""));"
True,gson/src/test/java/com/google/gson/functional/StringTest.java,gson/src/test/java/com/google/gson/functional/StringTest.java,101,"assertTrue(target.stackTrace.contains(""Yippie""));"
True,gson/src/test/java/com/google/gson/functional/StringTest.java,gson/src/test/java/com/google/gson/functional/StringTest.java,104,private static class ExceptionHolder {
True,gson/src/test/java/com/google/gson/functional/StringTest.java,gson/src/test/java/com/google/gson/functional/StringTest.java,105,public final String message;
True,gson/src/test/java/com/google/gson/functional/StringTest.java,gson/src/test/java/com/google/gson/functional/StringTest.java,106,public final String stackTrace;
True,gson/src/test/java/com/google/gson/functional/StringTest.java,gson/src/test/java/com/google/gson/functional/StringTest.java,107,public ExceptionHolder() {
True,gson/src/test/java/com/google/gson/functional/StringTest.java,gson/src/test/java/com/google/gson/functional/StringTest.java,108,"this("""", """");"
True,gson/src/test/java/com/google/gson/functional/StringTest.java,gson/src/test/java/com/google/gson/functional/StringTest.java,110,"public ExceptionHolder(String message, String stackTrace) {"
True,gson/src/test/java/com/google/gson/functional/StringTest.java,gson/src/test/java/com/google/gson/functional/StringTest.java,111,this.message = message;
True,gson/src/test/java/com/google/gson/functional/StringTest.java,gson/src/test/java/com/google/gson/functional/StringTest.java,112,this.stackTrace = stackTrace;
