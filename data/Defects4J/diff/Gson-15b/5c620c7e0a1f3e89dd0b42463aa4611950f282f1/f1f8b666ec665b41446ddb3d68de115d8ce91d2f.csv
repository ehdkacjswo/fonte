is_addition,old_file_path,new_file_path,line_num,content
False,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapter.java,177,"esult.put(boundField.name, boundField);"
True,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapter.java,177,"BoundField previous = result.put(boundField.name, boundField);"
True,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapter.java,178,if (previous != null) {
True,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapter.java,179,throw new IllegalArgumentException(declaredType
True,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapter.java,180,"+ "" declares multiple JSON fields named "" + previous.name);"
False,gson/src/test/java/com/google/gson/functional/NamingPolicyTest.java,gson/src/test/java/com/google/gson/functional/NamingPolicyTest.java,106,lassWithDuplicateFields target = new ClassWithDuplicateFields(10);
False,gson/src/test/java/com/google/gson/functional/NamingPolicyTest.java,gson/src/test/java/com/google/gson/functional/NamingPolicyTest.java,107,tring actual = gson.toJson(target);
False,gson/src/test/java/com/google/gson/functional/NamingPolicyTest.java,gson/src/test/java/com/google/gson/functional/NamingPolicyTest.java,108,"ssertEquals(""{\""a\"":10}"", actual);"
False,gson/src/test/java/com/google/gson/functional/NamingPolicyTest.java,gson/src/test/java/com/google/gson/functional/NamingPolicyTest.java,110,arget = new ClassWithDuplicateFields(3.0D);
False,gson/src/test/java/com/google/gson/functional/NamingPolicyTest.java,gson/src/test/java/com/google/gson/functional/NamingPolicyTest.java,111,ctual = gson.toJson(target);
False,gson/src/test/java/com/google/gson/functional/NamingPolicyTest.java,gson/src/test/java/com/google/gson/functional/NamingPolicyTest.java,112,"ssertEquals(""{\""a\"":3.0}"", actual);"
True,gson/src/test/java/com/google/gson/functional/NamingPolicyTest.java,gson/src/test/java/com/google/gson/functional/NamingPolicyTest.java,106,try {
True,gson/src/test/java/com/google/gson/functional/NamingPolicyTest.java,gson/src/test/java/com/google/gson/functional/NamingPolicyTest.java,107,ClassWithDuplicateFields target = new ClassWithDuplicateFields(10);
True,gson/src/test/java/com/google/gson/functional/NamingPolicyTest.java,gson/src/test/java/com/google/gson/functional/NamingPolicyTest.java,108,gson.toJson(target);
True,gson/src/test/java/com/google/gson/functional/NamingPolicyTest.java,gson/src/test/java/com/google/gson/functional/NamingPolicyTest.java,109,fail();
True,gson/src/test/java/com/google/gson/functional/NamingPolicyTest.java,gson/src/test/java/com/google/gson/functional/NamingPolicyTest.java,110,} catch (IllegalArgumentException expected) {
