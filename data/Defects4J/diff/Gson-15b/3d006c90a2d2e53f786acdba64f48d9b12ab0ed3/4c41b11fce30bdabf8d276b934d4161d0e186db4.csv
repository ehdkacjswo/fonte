is_addition,old_file_path,new_file_path,line_num,content
True,gson/src/main/java/com/google/gson/JsonArray.java,gson/src/main/java/com/google/gson/JsonArray.java,298,@Override
True,gson/src/main/java/com/google/gson/JsonArray.java,gson/src/main/java/com/google/gson/JsonArray.java,299,public boolean equals(Object o) {
True,gson/src/main/java/com/google/gson/JsonArray.java,gson/src/main/java/com/google/gson/JsonArray.java,300,return o instanceof JsonArray && ((JsonArray) o).elements.equals(elements);
True,gson/src/main/java/com/google/gson/JsonArray.java,gson/src/main/java/com/google/gson/JsonArray.java,303,@Override
True,gson/src/main/java/com/google/gson/JsonArray.java,gson/src/main/java/com/google/gson/JsonArray.java,304,public int hashCode() {
True,gson/src/main/java/com/google/gson/JsonArray.java,gson/src/main/java/com/google/gson/JsonArray.java,305,return elements.hashCode();
True,gson/src/main/java/com/google/gson/JsonObject.java,gson/src/main/java/com/google/gson/JsonObject.java,191,@Override
True,gson/src/main/java/com/google/gson/JsonObject.java,gson/src/main/java/com/google/gson/JsonObject.java,192,public boolean equals(Object o) {
True,gson/src/main/java/com/google/gson/JsonObject.java,gson/src/main/java/com/google/gson/JsonObject.java,193,return o instanceof JsonObject
True,gson/src/main/java/com/google/gson/JsonObject.java,gson/src/main/java/com/google/gson/JsonObject.java,194,&& ((JsonObject) o).members.equals(members);
True,gson/src/main/java/com/google/gson/JsonObject.java,gson/src/main/java/com/google/gson/JsonObject.java,197,@Override
True,gson/src/main/java/com/google/gson/JsonObject.java,gson/src/main/java/com/google/gson/JsonObject.java,198,public int hashCode() {
True,gson/src/main/java/com/google/gson/JsonObject.java,gson/src/main/java/com/google/gson/JsonObject.java,199,return members.hashCode();
False,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,359,eturn getAsNumber().doubleValue() == other.getAsNumber().doubleValue();
True,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,359,double a = getAsNumber().doubleValue();
True,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,360,double b = other.getAsNumber().doubleValue();
True,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,361,return a == b || (Double.isNaN(a) && Double.isNaN(b));
True,gson/src/test/java/com/google/gson/JsonArrayTest.java,gson/src/test/java/com/google/gson/JsonArrayTest.java,2,* Copyright (C) 2011 Google Inc.
True,gson/src/test/java/com/google/gson/JsonArrayTest.java,gson/src/test/java/com/google/gson/JsonArrayTest.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,gson/src/test/java/com/google/gson/JsonArrayTest.java,gson/src/test/java/com/google/gson/JsonArrayTest.java,5,* you may not use this file except in compliance with the License.
True,gson/src/test/java/com/google/gson/JsonArrayTest.java,gson/src/test/java/com/google/gson/JsonArrayTest.java,6,* You may obtain a copy of the License at
True,gson/src/test/java/com/google/gson/JsonArrayTest.java,gson/src/test/java/com/google/gson/JsonArrayTest.java,8,* http://www.apache.org/licenses/LICENSE-2.0
True,gson/src/test/java/com/google/gson/JsonArrayTest.java,gson/src/test/java/com/google/gson/JsonArrayTest.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,gson/src/test/java/com/google/gson/JsonArrayTest.java,gson/src/test/java/com/google/gson/JsonArrayTest.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,gson/src/test/java/com/google/gson/JsonArrayTest.java,gson/src/test/java/com/google/gson/JsonArrayTest.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,gson/src/test/java/com/google/gson/JsonArrayTest.java,gson/src/test/java/com/google/gson/JsonArrayTest.java,13,* See the License for the specific language governing permissions and
True,gson/src/test/java/com/google/gson/JsonArrayTest.java,gson/src/test/java/com/google/gson/JsonArrayTest.java,14,* limitations under the License.
True,gson/src/test/java/com/google/gson/JsonArrayTest.java,gson/src/test/java/com/google/gson/JsonArrayTest.java,17,package com.google.gson;
True,gson/src/test/java/com/google/gson/JsonArrayTest.java,gson/src/test/java/com/google/gson/JsonArrayTest.java,19,import com.google.gson.common.MoreAsserts;
True,gson/src/test/java/com/google/gson/JsonArrayTest.java,gson/src/test/java/com/google/gson/JsonArrayTest.java,20,import junit.framework.TestCase;
True,gson/src/test/java/com/google/gson/JsonArrayTest.java,gson/src/test/java/com/google/gson/JsonArrayTest.java,23,* @author Jesse Wilson
True,gson/src/test/java/com/google/gson/JsonArrayTest.java,gson/src/test/java/com/google/gson/JsonArrayTest.java,25,public final class JsonArrayTest extends TestCase {
True,gson/src/test/java/com/google/gson/JsonArrayTest.java,gson/src/test/java/com/google/gson/JsonArrayTest.java,27,public void testEqualsOnEmptyArray() {
True,gson/src/test/java/com/google/gson/JsonArrayTest.java,gson/src/test/java/com/google/gson/JsonArrayTest.java,28,"MoreAsserts.assertEqualsAndHashCode(new JsonArray(), new JsonArray());"
True,gson/src/test/java/com/google/gson/JsonArrayTest.java,gson/src/test/java/com/google/gson/JsonArrayTest.java,31,public void testEqualsNonEmptyArray() {
True,gson/src/test/java/com/google/gson/JsonArrayTest.java,gson/src/test/java/com/google/gson/JsonArrayTest.java,32,JsonArray a = new JsonArray();
True,gson/src/test/java/com/google/gson/JsonArrayTest.java,gson/src/test/java/com/google/gson/JsonArrayTest.java,33,JsonArray b = new JsonArray();
True,gson/src/test/java/com/google/gson/JsonArrayTest.java,gson/src/test/java/com/google/gson/JsonArrayTest.java,35,a.add(new JsonObject());
True,gson/src/test/java/com/google/gson/JsonArrayTest.java,gson/src/test/java/com/google/gson/JsonArrayTest.java,36,assertFalse(a.equals(b));
True,gson/src/test/java/com/google/gson/JsonArrayTest.java,gson/src/test/java/com/google/gson/JsonArrayTest.java,37,assertFalse(b.equals(a));
True,gson/src/test/java/com/google/gson/JsonArrayTest.java,gson/src/test/java/com/google/gson/JsonArrayTest.java,39,b.add(new JsonObject());
True,gson/src/test/java/com/google/gson/JsonArrayTest.java,gson/src/test/java/com/google/gson/JsonArrayTest.java,40,"MoreAsserts.assertEqualsAndHashCode(a, b);"
True,gson/src/test/java/com/google/gson/JsonArrayTest.java,gson/src/test/java/com/google/gson/JsonArrayTest.java,42,a.add(new JsonObject());
True,gson/src/test/java/com/google/gson/JsonArrayTest.java,gson/src/test/java/com/google/gson/JsonArrayTest.java,43,assertFalse(a.equals(b));
True,gson/src/test/java/com/google/gson/JsonArrayTest.java,gson/src/test/java/com/google/gson/JsonArrayTest.java,44,assertFalse(b.equals(a));
True,gson/src/test/java/com/google/gson/JsonArrayTest.java,gson/src/test/java/com/google/gson/JsonArrayTest.java,46,b.add(new JsonNull());
True,gson/src/test/java/com/google/gson/JsonArrayTest.java,gson/src/test/java/com/google/gson/JsonArrayTest.java,47,assertFalse(a.equals(b));
True,gson/src/test/java/com/google/gson/JsonArrayTest.java,gson/src/test/java/com/google/gson/JsonArrayTest.java,48,assertFalse(b.equals(a));
True,gson/src/test/java/com/google/gson/JsonNullTest.java,gson/src/test/java/com/google/gson/JsonNullTest.java,2,* Copyright (C) 2011 Google Inc.
True,gson/src/test/java/com/google/gson/JsonNullTest.java,gson/src/test/java/com/google/gson/JsonNullTest.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,gson/src/test/java/com/google/gson/JsonNullTest.java,gson/src/test/java/com/google/gson/JsonNullTest.java,5,* you may not use this file except in compliance with the License.
True,gson/src/test/java/com/google/gson/JsonNullTest.java,gson/src/test/java/com/google/gson/JsonNullTest.java,6,* You may obtain a copy of the License at
True,gson/src/test/java/com/google/gson/JsonNullTest.java,gson/src/test/java/com/google/gson/JsonNullTest.java,8,* http://www.apache.org/licenses/LICENSE-2.0
True,gson/src/test/java/com/google/gson/JsonNullTest.java,gson/src/test/java/com/google/gson/JsonNullTest.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,gson/src/test/java/com/google/gson/JsonNullTest.java,gson/src/test/java/com/google/gson/JsonNullTest.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,gson/src/test/java/com/google/gson/JsonNullTest.java,gson/src/test/java/com/google/gson/JsonNullTest.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,gson/src/test/java/com/google/gson/JsonNullTest.java,gson/src/test/java/com/google/gson/JsonNullTest.java,13,* See the License for the specific language governing permissions and
True,gson/src/test/java/com/google/gson/JsonNullTest.java,gson/src/test/java/com/google/gson/JsonNullTest.java,14,* limitations under the License.
True,gson/src/test/java/com/google/gson/JsonNullTest.java,gson/src/test/java/com/google/gson/JsonNullTest.java,17,package com.google.gson;
True,gson/src/test/java/com/google/gson/JsonNullTest.java,gson/src/test/java/com/google/gson/JsonNullTest.java,19,import com.google.gson.common.MoreAsserts;
True,gson/src/test/java/com/google/gson/JsonNullTest.java,gson/src/test/java/com/google/gson/JsonNullTest.java,20,import junit.framework.TestCase;
True,gson/src/test/java/com/google/gson/JsonNullTest.java,gson/src/test/java/com/google/gson/JsonNullTest.java,23,* @author Jesse Wilson
True,gson/src/test/java/com/google/gson/JsonNullTest.java,gson/src/test/java/com/google/gson/JsonNullTest.java,25,public final class JsonNullTest extends TestCase {
True,gson/src/test/java/com/google/gson/JsonNullTest.java,gson/src/test/java/com/google/gson/JsonNullTest.java,27,public void testEqualsAndHashcode() {
True,gson/src/test/java/com/google/gson/JsonNullTest.java,gson/src/test/java/com/google/gson/JsonNullTest.java,28,"MoreAsserts.assertEqualsAndHashCode(new JsonNull(), new JsonNull());"
True,gson/src/test/java/com/google/gson/JsonNullTest.java,gson/src/test/java/com/google/gson/JsonNullTest.java,29,"MoreAsserts.assertEqualsAndHashCode(new JsonNull(), JsonNull.createJsonNull());"
True,gson/src/test/java/com/google/gson/JsonNullTest.java,gson/src/test/java/com/google/gson/JsonNullTest.java,30,"MoreAsserts.assertEqualsAndHashCode(JsonNull.createJsonNull(), JsonNull.createJsonNull());"
True,gson/src/test/java/com/google/gson/JsonObjectTest.java,gson/src/test/java/com/google/gson/JsonObjectTest.java,19,import com.google.gson.common.MoreAsserts;
True,gson/src/test/java/com/google/gson/JsonObjectTest.java,gson/src/test/java/com/google/gson/JsonObjectTest.java,133,public void testEqualsOnEmptyObject() {
True,gson/src/test/java/com/google/gson/JsonObjectTest.java,gson/src/test/java/com/google/gson/JsonObjectTest.java,134,"MoreAsserts.assertEqualsAndHashCode(new JsonObject(), new JsonObject());"
True,gson/src/test/java/com/google/gson/JsonObjectTest.java,gson/src/test/java/com/google/gson/JsonObjectTest.java,137,public void testEqualsNonEmptyObject() {
True,gson/src/test/java/com/google/gson/JsonObjectTest.java,gson/src/test/java/com/google/gson/JsonObjectTest.java,138,JsonObject a = new JsonObject();
True,gson/src/test/java/com/google/gson/JsonObjectTest.java,gson/src/test/java/com/google/gson/JsonObjectTest.java,139,JsonObject b = new JsonObject();
True,gson/src/test/java/com/google/gson/JsonObjectTest.java,gson/src/test/java/com/google/gson/JsonObjectTest.java,141,"a.add(""foo"", new JsonObject());"
True,gson/src/test/java/com/google/gson/JsonObjectTest.java,gson/src/test/java/com/google/gson/JsonObjectTest.java,142,assertFalse(a.equals(b));
True,gson/src/test/java/com/google/gson/JsonObjectTest.java,gson/src/test/java/com/google/gson/JsonObjectTest.java,143,assertFalse(b.equals(a));
True,gson/src/test/java/com/google/gson/JsonObjectTest.java,gson/src/test/java/com/google/gson/JsonObjectTest.java,145,"b.add(""foo"", new JsonObject());"
True,gson/src/test/java/com/google/gson/JsonObjectTest.java,gson/src/test/java/com/google/gson/JsonObjectTest.java,146,"MoreAsserts.assertEqualsAndHashCode(a, b);"
True,gson/src/test/java/com/google/gson/JsonObjectTest.java,gson/src/test/java/com/google/gson/JsonObjectTest.java,148,"a.add(""bar"", new JsonObject());"
True,gson/src/test/java/com/google/gson/JsonObjectTest.java,gson/src/test/java/com/google/gson/JsonObjectTest.java,149,assertFalse(a.equals(b));
True,gson/src/test/java/com/google/gson/JsonObjectTest.java,gson/src/test/java/com/google/gson/JsonObjectTest.java,150,assertFalse(b.equals(a));
True,gson/src/test/java/com/google/gson/JsonObjectTest.java,gson/src/test/java/com/google/gson/JsonObjectTest.java,152,"b.add(""bar"", new JsonNull());"
True,gson/src/test/java/com/google/gson/JsonObjectTest.java,gson/src/test/java/com/google/gson/JsonObjectTest.java,153,assertFalse(a.equals(b));
True,gson/src/test/java/com/google/gson/JsonObjectTest.java,gson/src/test/java/com/google/gson/JsonObjectTest.java,154,assertFalse(b.equals(a));
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,19,import com.google.gson.common.MoreAsserts;
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,183,public void testEquals() {
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,184,"MoreAsserts.assertEqualsAndHashCode(new JsonPrimitive(""A""), new JsonPrimitive(""A""));"
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,185,"MoreAsserts.assertEqualsAndHashCode(new JsonPrimitive(true), new JsonPrimitive(true));"
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,186,"MoreAsserts.assertEqualsAndHashCode(new JsonPrimitive(5L), new JsonPrimitive(5L));"
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,187,"MoreAsserts.assertEqualsAndHashCode(new JsonPrimitive('a'), new JsonPrimitive('a'));"
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,188,"MoreAsserts.assertEqualsAndHashCode(new JsonPrimitive(Float.NaN), new JsonPrimitive(Float.NaN));"
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,189,"assertFalse(new JsonPrimitive(""a"").equals(new JsonPrimitive(""b"")));"
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,190,assertFalse(new JsonPrimitive(true).equals(new JsonPrimitive(false)));
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,191,assertFalse(new JsonPrimitive(0).equals(new JsonPrimitive(1)));
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,194,public void testEqualsAcrossTypes() {
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,195,"MoreAsserts.assertEqualsAndHashCode(new JsonPrimitive(""a""), new JsonPrimitive('a'));"
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,196,"MoreAsserts.assertEqualsAndHashCode(new JsonPrimitive(new BigInteger(""0"")), new JsonPrimitive(0));"
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,197,"MoreAsserts.assertEqualsAndHashCode(new JsonPrimitive(0), new JsonPrimitive(0L));"
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,198,"MoreAsserts.assertEqualsAndHashCode(new JsonPrimitive(new BigInteger(""0"")), new JsonPrimitive(0));"
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,199,"MoreAsserts.assertEqualsAndHashCode(new JsonPrimitive(Float.NaN), new JsonPrimitive(Double.NaN));"
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,202,public void testEqualsDoesNotEquateStringAndNonStringTypes() {
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,203,"assertFalse(new JsonPrimitive(""true"").equals(new JsonPrimitive(true)));"
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,204,"assertFalse(new JsonPrimitive(""0"").equals(new JsonPrimitive(0)));"
True,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,gson/src/test/java/com/google/gson/JsonPrimitiveTest.java,205,"assertFalse(new JsonPrimitive(""NaN"").equals(new JsonPrimitive(Float.NaN)));"
True,gson/src/test/java/com/google/gson/common/MoreAsserts.java,gson/src/test/java/com/google/gson/common/MoreAsserts.java,65,"public static void assertEqualsAndHashCode(Object a, Object b) {"
True,gson/src/test/java/com/google/gson/common/MoreAsserts.java,gson/src/test/java/com/google/gson/common/MoreAsserts.java,66,Assert.assertTrue(a.equals(b));
True,gson/src/test/java/com/google/gson/common/MoreAsserts.java,gson/src/test/java/com/google/gson/common/MoreAsserts.java,67,Assert.assertTrue(b.equals(a));
True,gson/src/test/java/com/google/gson/common/MoreAsserts.java,gson/src/test/java/com/google/gson/common/MoreAsserts.java,68,"Assert.assertEquals(a.hashCode(), b.hashCode());"
True,gson/src/test/java/com/google/gson/common/MoreAsserts.java,gson/src/test/java/com/google/gson/common/MoreAsserts.java,69,Assert.assertFalse(a.equals(null));
True,gson/src/test/java/com/google/gson/common/MoreAsserts.java,gson/src/test/java/com/google/gson/common/MoreAsserts.java,70,Assert.assertFalse(a.equals(new Object()));
