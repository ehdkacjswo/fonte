is_addition,old_file_path,new_file_path,line_num,content
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,189,"eturn getDefaultSerializers(false, false);"
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,189,"return getDefaultSerializers(false, LongSerializationPolicy.DEFAULT);"
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,193,"oolean serializeSpecialFloatingPointValues, boolean serializeLongsAsString) {"
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,193,"boolean serializeSpecialFloatingPointValues, LongSerializationPolicy longSerializationPolicy) {"
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,211,ew DefaultTypeAdapters.LongSerializer(serializeLongsAsString);
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,211,new DefaultTypeAdapters.LongSerializer(longSerializationPolicy);
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,567,rivate final boolean serializeAsString;
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,567,private final LongSerializationPolicy longSerializationPolicy;
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,569,rivate LongSerializer(boolean serializeAsString) {
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,570,his.serializeAsString = serializeAsString;
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,569,private LongSerializer(LongSerializationPolicy longSerializationPolicy) {
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,570,this.longSerializationPolicy = longSerializationPolicy;
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,574,f (src == null) {
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,575,eturn JsonNull.createJsonNull();
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,576, else if (serializeAsString) {
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,577,eturn new JsonPrimitive(String.valueOf(src));
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,578, else {
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,579,eturn new JsonPrimitive(src);
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,574,return longSerializationPolicy.serialize(src);
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,19,mport com.google.gson.DefaultTypeAdapters.DefaultDateTypeAdapter;
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,25,import com.google.gson.DefaultTypeAdapters.DefaultDateTypeAdapter;
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,55,rivate boolean serializeLongAsString;
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,60,private LongSerializationPolicy longSerializationPolicy;
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,82,erializeLongAsString = false;
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,89,longSerializationPolicy = LongSerializationPolicy.DEFAULT;
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,153, Configures Gson to output fields of type {@code long} as {@code String}s instead of a number.
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,153,* Configures Gson to exclude inner classes during serialization.
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,155, @param value the boolean value on whether or not {@code Gson} should serialize a {@code long}
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,156, field as a {@code String}
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,160,ublic GsonBuilder serializeLongFieldsAsString(boolean value) {
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,161,erializeLongAsString = value;
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,158,public GsonBuilder disableInnerClassSerialization() {
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,159,serializeInnerClasses = false;
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,166, Configures Gson to exclude inner classes during serialization.
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,164,* Configures Gson to apply a specific serialization policy for {@code Long} and {@code long}
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,165,* objects.
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,167,* @param serializationPolicy the particular policy to use for serializing longs.
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,171,ublic GsonBuilder disableInnerClassSerialization() {
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,172,erializeInnerClasses = false;
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,171,public GsonBuilder setLongSerializationPolicy(LongSerializationPolicy serializationPolicy) {
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,172,this.longSerializationPolicy = serializationPolicy;
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,361," special double values (NaN, Infinity, -Infinity). However,"
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,362," <a href=""http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-262.pdf"">Javascript"
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,361,"* special double values (NaN, Infinity, -Infinity). However,"
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,362,"* <a href=""http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-262.pdf"">Javascript"
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,364," values. Moreover, most JavaScript engines will accept these special values in JSON without"
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,364,"* values. Moreover, most JavaScript engines will accept these special values in JSON without"
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,366, though JSON specification disallows them.
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,368," <p>Gson always accepts these special values during deserialization. However, it outputs"
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,369," strictly compliant JSON. Hence, if it encounters a float value {@link Float#NaN},"
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,370," {@link Float#POSITIVE_INFINITY}, {@link Float#NEGATIVE_INFINITY}, or a double value"
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,371," {@link Double#NaN}, {@link Double#POSITIVE_INFINITY}, {@link Double#NEGATIVE_INFINITY}, it"
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,366,* though JSON specification disallows them.
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,368,"* <p>Gson always accepts these special values during deserialization. However, it outputs"
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,369,"* strictly compliant JSON. Hence, if it encounters a float value {@link Float#NaN},"
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,370,"* {@link Float#POSITIVE_INFINITY}, {@link Float#NEGATIVE_INFINITY}, or a double value"
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,371,"* {@link Double#NaN}, {@link Double#POSITIVE_INFINITY}, {@link Double#NEGATIVE_INFINITY}, it"
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,374, values.
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,374,* values.
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,412,"erializeSpecialFloatingPointValues, serializeLongAsString));"
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,412,"serializeSpecialFloatingPointValues, longSerializationPolicy));"
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,421,sonFormatter formatter =  prettyPrinting ?
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,422,ew JsonPrintFormatter(escapeHtmlChars) : new JsonCompactFormatter(escapeHtmlChars);
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,423,"son gson = new Gson(exclusionStrategy, fieldNamingPolicy, objConstructor,"
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,421,JsonFormatter formatter =  prettyPrinting ?
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,422,new JsonPrintFormatter(escapeHtmlChars) : new JsonCompactFormatter(escapeHtmlChars);
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,423,"Gson gson = new Gson(exclusionStrategy, fieldNamingPolicy, objConstructor,"
True,gson/src/main/java/com/google/gson/LongSerializationPolicy.java,gson/src/main/java/com/google/gson/LongSerializationPolicy.java,2,* Copyright (C) 2009 Google Inc.
True,gson/src/main/java/com/google/gson/LongSerializationPolicy.java,gson/src/main/java/com/google/gson/LongSerializationPolicy.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,gson/src/main/java/com/google/gson/LongSerializationPolicy.java,gson/src/main/java/com/google/gson/LongSerializationPolicy.java,5,* you may not use this file except in compliance with the License.
True,gson/src/main/java/com/google/gson/LongSerializationPolicy.java,gson/src/main/java/com/google/gson/LongSerializationPolicy.java,6,* You may obtain a copy of the License at
True,gson/src/main/java/com/google/gson/LongSerializationPolicy.java,gson/src/main/java/com/google/gson/LongSerializationPolicy.java,8,* http://www.apache.org/licenses/LICENSE-2.0
True,gson/src/main/java/com/google/gson/LongSerializationPolicy.java,gson/src/main/java/com/google/gson/LongSerializationPolicy.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,gson/src/main/java/com/google/gson/LongSerializationPolicy.java,gson/src/main/java/com/google/gson/LongSerializationPolicy.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,gson/src/main/java/com/google/gson/LongSerializationPolicy.java,gson/src/main/java/com/google/gson/LongSerializationPolicy.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,gson/src/main/java/com/google/gson/LongSerializationPolicy.java,gson/src/main/java/com/google/gson/LongSerializationPolicy.java,13,* See the License for the specific language governing permissions and
True,gson/src/main/java/com/google/gson/LongSerializationPolicy.java,gson/src/main/java/com/google/gson/LongSerializationPolicy.java,14,* limitations under the License.
True,gson/src/main/java/com/google/gson/LongSerializationPolicy.java,gson/src/main/java/com/google/gson/LongSerializationPolicy.java,17,package com.google.gson;
True,gson/src/main/java/com/google/gson/LongSerializationPolicy.java,gson/src/main/java/com/google/gson/LongSerializationPolicy.java,20,* Defines the expected format for a {@code long} or {@code Long} type when its serialized.
True,gson/src/main/java/com/google/gson/LongSerializationPolicy.java,gson/src/main/java/com/google/gson/LongSerializationPolicy.java,22,* @since 1.3
True,gson/src/main/java/com/google/gson/LongSerializationPolicy.java,gson/src/main/java/com/google/gson/LongSerializationPolicy.java,24,* @author Inderjeet Singh
True,gson/src/main/java/com/google/gson/LongSerializationPolicy.java,gson/src/main/java/com/google/gson/LongSerializationPolicy.java,25,* @author Joel Leitch
True,gson/src/main/java/com/google/gson/LongSerializationPolicy.java,gson/src/main/java/com/google/gson/LongSerializationPolicy.java,27,public enum LongSerializationPolicy {
True,gson/src/main/java/com/google/gson/LongSerializationPolicy.java,gson/src/main/java/com/google/gson/LongSerializationPolicy.java,29,"* This is the ""default"" serialization policy that will output a {@code long} object as a JSON"
True,gson/src/main/java/com/google/gson/LongSerializationPolicy.java,gson/src/main/java/com/google/gson/LongSerializationPolicy.java,30,"* number.  For example, assume an object has a long field named ""f"" then the serialized output"
True,gson/src/main/java/com/google/gson/LongSerializationPolicy.java,gson/src/main/java/com/google/gson/LongSerializationPolicy.java,31,* would be:
True,gson/src/main/java/com/google/gson/LongSerializationPolicy.java,gson/src/main/java/com/google/gson/LongSerializationPolicy.java,32,"* {@code {""f"":123}}."
True,gson/src/main/java/com/google/gson/LongSerializationPolicy.java,gson/src/main/java/com/google/gson/LongSerializationPolicy.java,34,"DEFAULT(new DefaultStrategy()),"
True,gson/src/main/java/com/google/gson/LongSerializationPolicy.java,gson/src/main/java/com/google/gson/LongSerializationPolicy.java,37,"* Serializes a long value as a quoted string.  For example, assume an object has a long field"
True,gson/src/main/java/com/google/gson/LongSerializationPolicy.java,gson/src/main/java/com/google/gson/LongSerializationPolicy.java,38,"* named ""f"" then the serialized output would be:"
True,gson/src/main/java/com/google/gson/LongSerializationPolicy.java,gson/src/main/java/com/google/gson/LongSerializationPolicy.java,39,"* {@code {""f"":""123""}}."
True,gson/src/main/java/com/google/gson/LongSerializationPolicy.java,gson/src/main/java/com/google/gson/LongSerializationPolicy.java,41,STRING(new StringStrategy());
True,gson/src/main/java/com/google/gson/LongSerializationPolicy.java,gson/src/main/java/com/google/gson/LongSerializationPolicy.java,43,private final Strategy strategy;
True,gson/src/main/java/com/google/gson/LongSerializationPolicy.java,gson/src/main/java/com/google/gson/LongSerializationPolicy.java,45,private LongSerializationPolicy(Strategy strategy) {
True,gson/src/main/java/com/google/gson/LongSerializationPolicy.java,gson/src/main/java/com/google/gson/LongSerializationPolicy.java,46,this.strategy = strategy;
True,gson/src/main/java/com/google/gson/LongSerializationPolicy.java,gson/src/main/java/com/google/gson/LongSerializationPolicy.java,50,* Serialize this {@code value} using this serialization policy.
True,gson/src/main/java/com/google/gson/LongSerializationPolicy.java,gson/src/main/java/com/google/gson/LongSerializationPolicy.java,52,* @param value the long value to be serialized into a {@link JsonElement}
True,gson/src/main/java/com/google/gson/LongSerializationPolicy.java,gson/src/main/java/com/google/gson/LongSerializationPolicy.java,53,* @return the serialized version of {@code value}
True,gson/src/main/java/com/google/gson/LongSerializationPolicy.java,gson/src/main/java/com/google/gson/LongSerializationPolicy.java,55,public JsonElement serialize(Long value) {
True,gson/src/main/java/com/google/gson/LongSerializationPolicy.java,gson/src/main/java/com/google/gson/LongSerializationPolicy.java,56,return strategy.serialize(value);
True,gson/src/main/java/com/google/gson/LongSerializationPolicy.java,gson/src/main/java/com/google/gson/LongSerializationPolicy.java,59,private interface Strategy {
True,gson/src/main/java/com/google/gson/LongSerializationPolicy.java,gson/src/main/java/com/google/gson/LongSerializationPolicy.java,60,JsonElement serialize(Long value);
True,gson/src/main/java/com/google/gson/LongSerializationPolicy.java,gson/src/main/java/com/google/gson/LongSerializationPolicy.java,63,private static class DefaultStrategy implements Strategy {
True,gson/src/main/java/com/google/gson/LongSerializationPolicy.java,gson/src/main/java/com/google/gson/LongSerializationPolicy.java,64,public JsonElement serialize(Long value) {
True,gson/src/main/java/com/google/gson/LongSerializationPolicy.java,gson/src/main/java/com/google/gson/LongSerializationPolicy.java,65,return new JsonPrimitive(value);
True,gson/src/main/java/com/google/gson/LongSerializationPolicy.java,gson/src/main/java/com/google/gson/LongSerializationPolicy.java,69,private static class StringStrategy implements Strategy {
True,gson/src/main/java/com/google/gson/LongSerializationPolicy.java,gson/src/main/java/com/google/gson/LongSerializationPolicy.java,70,public JsonElement serialize(Long value) {
True,gson/src/main/java/com/google/gson/LongSerializationPolicy.java,gson/src/main/java/com/google/gson/LongSerializationPolicy.java,71,return new JsonPrimitive(String.valueOf(value));
True,gson/src/test/java/com/google/gson/LongSerializationPolicyTest.java,gson/src/test/java/com/google/gson/LongSerializationPolicyTest.java,2,* Copyright (C) 2009 Google Inc.
True,gson/src/test/java/com/google/gson/LongSerializationPolicyTest.java,gson/src/test/java/com/google/gson/LongSerializationPolicyTest.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,gson/src/test/java/com/google/gson/LongSerializationPolicyTest.java,gson/src/test/java/com/google/gson/LongSerializationPolicyTest.java,5,* you may not use this file except in compliance with the License.
True,gson/src/test/java/com/google/gson/LongSerializationPolicyTest.java,gson/src/test/java/com/google/gson/LongSerializationPolicyTest.java,6,* You may obtain a copy of the License at
True,gson/src/test/java/com/google/gson/LongSerializationPolicyTest.java,gson/src/test/java/com/google/gson/LongSerializationPolicyTest.java,8,* http://www.apache.org/licenses/LICENSE-2.0
True,gson/src/test/java/com/google/gson/LongSerializationPolicyTest.java,gson/src/test/java/com/google/gson/LongSerializationPolicyTest.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,gson/src/test/java/com/google/gson/LongSerializationPolicyTest.java,gson/src/test/java/com/google/gson/LongSerializationPolicyTest.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,gson/src/test/java/com/google/gson/LongSerializationPolicyTest.java,gson/src/test/java/com/google/gson/LongSerializationPolicyTest.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,gson/src/test/java/com/google/gson/LongSerializationPolicyTest.java,gson/src/test/java/com/google/gson/LongSerializationPolicyTest.java,13,* See the License for the specific language governing permissions and
True,gson/src/test/java/com/google/gson/LongSerializationPolicyTest.java,gson/src/test/java/com/google/gson/LongSerializationPolicyTest.java,14,* limitations under the License.
True,gson/src/test/java/com/google/gson/LongSerializationPolicyTest.java,gson/src/test/java/com/google/gson/LongSerializationPolicyTest.java,17,package com.google.gson;
True,gson/src/test/java/com/google/gson/LongSerializationPolicyTest.java,gson/src/test/java/com/google/gson/LongSerializationPolicyTest.java,19,import junit.framework.TestCase;
True,gson/src/test/java/com/google/gson/LongSerializationPolicyTest.java,gson/src/test/java/com/google/gson/LongSerializationPolicyTest.java,22,* Unit test for the {@link LongSerializationPolicy} class.
True,gson/src/test/java/com/google/gson/LongSerializationPolicyTest.java,gson/src/test/java/com/google/gson/LongSerializationPolicyTest.java,24,* @author Inderjeet Singh
True,gson/src/test/java/com/google/gson/LongSerializationPolicyTest.java,gson/src/test/java/com/google/gson/LongSerializationPolicyTest.java,25,* @author Joel Leitch
True,gson/src/test/java/com/google/gson/LongSerializationPolicyTest.java,gson/src/test/java/com/google/gson/LongSerializationPolicyTest.java,27,public class LongSerializationPolicyTest extends TestCase {
True,gson/src/test/java/com/google/gson/LongSerializationPolicyTest.java,gson/src/test/java/com/google/gson/LongSerializationPolicyTest.java,29,public void testDefaultLongSerialization() throws Exception {
True,gson/src/test/java/com/google/gson/LongSerializationPolicyTest.java,gson/src/test/java/com/google/gson/LongSerializationPolicyTest.java,30,JsonElement element = LongSerializationPolicy.DEFAULT.serialize(1556L);
True,gson/src/test/java/com/google/gson/LongSerializationPolicyTest.java,gson/src/test/java/com/google/gson/LongSerializationPolicyTest.java,31,assertTrue(element.isJsonPrimitive());
True,gson/src/test/java/com/google/gson/LongSerializationPolicyTest.java,gson/src/test/java/com/google/gson/LongSerializationPolicyTest.java,33,JsonPrimitive jsonPrimitive = element.getAsJsonPrimitive();
True,gson/src/test/java/com/google/gson/LongSerializationPolicyTest.java,gson/src/test/java/com/google/gson/LongSerializationPolicyTest.java,34,assertFalse(jsonPrimitive.isString());
True,gson/src/test/java/com/google/gson/LongSerializationPolicyTest.java,gson/src/test/java/com/google/gson/LongSerializationPolicyTest.java,35,assertTrue(jsonPrimitive.isNumber());
True,gson/src/test/java/com/google/gson/LongSerializationPolicyTest.java,gson/src/test/java/com/google/gson/LongSerializationPolicyTest.java,36,"assertEquals(1556L, element.getAsLong());"
True,gson/src/test/java/com/google/gson/LongSerializationPolicyTest.java,gson/src/test/java/com/google/gson/LongSerializationPolicyTest.java,39,public void testStringLongSerialization() throws Exception {
True,gson/src/test/java/com/google/gson/LongSerializationPolicyTest.java,gson/src/test/java/com/google/gson/LongSerializationPolicyTest.java,40,JsonElement element = LongSerializationPolicy.STRING.serialize(1556L);
True,gson/src/test/java/com/google/gson/LongSerializationPolicyTest.java,gson/src/test/java/com/google/gson/LongSerializationPolicyTest.java,41,assertTrue(element.isJsonPrimitive());
True,gson/src/test/java/com/google/gson/LongSerializationPolicyTest.java,gson/src/test/java/com/google/gson/LongSerializationPolicyTest.java,43,JsonPrimitive jsonPrimitive = element.getAsJsonPrimitive();
True,gson/src/test/java/com/google/gson/LongSerializationPolicyTest.java,gson/src/test/java/com/google/gson/LongSerializationPolicyTest.java,44,assertFalse(jsonPrimitive.isNumber());
True,gson/src/test/java/com/google/gson/LongSerializationPolicyTest.java,gson/src/test/java/com/google/gson/LongSerializationPolicyTest.java,45,assertTrue(jsonPrimitive.isString());
True,gson/src/test/java/com/google/gson/LongSerializationPolicyTest.java,gson/src/test/java/com/google/gson/LongSerializationPolicyTest.java,46,"assertEquals(""1556"", element.getAsString());"
True,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,27,import com.google.gson.LongSerializationPolicy;
False,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,533,son = new GsonBuilder().serializeLongFieldsAsString(true).create();
True,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,534,gson = new GsonBuilder().setLongSerializationPolicy(LongSerializationPolicy.STRING).create();
False,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,546,son = new GsonBuilder().serializeLongFieldsAsString(true).create();
True,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,547,gson = new GsonBuilder().setLongSerializationPolicy(LongSerializationPolicy.STRING).create();
