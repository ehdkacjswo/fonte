is_addition,old_file_path,new_file_path,line_num,content
False,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,30,mport java.io.StringReader;
False,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,31,mport java.io.StringWriter;
False,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,46,ublic void testSerialize() throws IOException {
True,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,44,public void testSerialize() {
False,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,53,"oJson(truckAdapter, truck).replace('\""', '\''));"
True,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,51,"truckAdapter.toJson(truck).replace('\""', '\''));"
False,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,59,"ruck truck = fromJson(truckAdapter, json);"
True,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,57,"Truck truck = truckAdapter.fromJson(json.replace('\'', '\""'));"
False,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,64,ublic void testSerializeNullField() throws IOException {
True,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,62,public void testSerializeNullField() {
False,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,68,"oJson(truckAdapter, truck).replace('\""', '\''));"
True,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,66,"truckAdapter.toJson(truck).replace('\""', '\''));"
False,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,72,"ruck truck = fromJson(truckAdapter, ""{'horsePower':0.0,'passengers':null}"");"
True,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,70,"Truck truck = truckAdapter.fromJson(""{'horsePower':0.0,'passengers':null}"".replace('\'', '\""'));"
False,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,76,ublic void testSerializeNullObject() throws IOException {
True,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,74,public void testSerializeNullObject() {
False,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,80,"oJson(truckAdapter, truck).replace('\""', '\''));"
True,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,78,"truckAdapter.toJson(truck).replace('\""', '\''));"
False,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,84,"ruck truck = fromJson(truckAdapter, ""{'horsePower':0.0,'passengers':[null]}"");"
True,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,82,"Truck truck = truckAdapter.fromJson(""{'horsePower':0.0,'passengers':[null]}"".replace('\'', '\""'));"
False,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,88,ublic void testSerializeWithCustomTypeAdapter() throws IOException {
True,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,86,public void testSerializeWithCustomTypeAdapter() {
False,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,93,"oJson(truckAdapter, truck).replace('\""', '\''));"
True,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,91,"truckAdapter.toJson(truck).replace('\""', '\''));"
False,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,98,"ruck truck = fromJson(truckAdapter, ""{'horsePower':0.0,'passengers':['Jesse','Jodie']}"");"
True,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,96,"Truck truck = truckAdapter.fromJson(""{'horsePower':0.0,'passengers':['Jesse','Jodie']}"".replace('\'', '\""'));"
False,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,116,ublic void testSerializeMap() throws IOException {
True,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,114,public void testSerializeMap() {
False,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,120,"ssertEquals(""{'a':5.0,'b':10.0}"", toJson(mapAdapter, map).replace('""', '\''));"
True,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,118,"assertEquals(""{'a':5.0,'b':10.0}"", mapAdapter.toJson(map).replace('""', '\''));"
False,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,127,"ssertEquals(map, fromJson(mapAdapter, ""{'a':5.0,'b':10.0}""));"
True,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,125,"assertEquals(map, mapAdapter.fromJson(""{'a':5.0,'b':10.0}"".replace('\'', '\""')));"
False,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,130,ublic void testSerialize1dArray() throws IOException {
True,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,128,public void testSerialize1dArray() {
False,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,132,"ssertEquals(""[1.0,2.0,3.0]"", toJson(arrayAdapter, new double[]{1.0, 2.0, 3.0}));"
True,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,130,"assertEquals(""[1.0,2.0,3.0]"", arrayAdapter.toJson(new double[]{ 1.0, 2.0, 3.0 }));"
False,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,137,"ouble[] array = fromJson(arrayAdapter, ""[1.0,2.0,3.0]"");"
True,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,135,"double[] array = arrayAdapter.fromJson(""[1.0,2.0,3.0]"");"
False,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,141,ublic void testSerialize2dArray() throws IOException {
True,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,139,public void testSerialize2dArray() {
False,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,144,"ssertEquals(""[[1.0,2.0],[3.0]]"", toJson(arrayAdapter, array));"
True,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,142,"assertEquals(""[[1.0,2.0],[3.0]]"", arrayAdapter.toJson(array));"
False,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,149,"ouble[][] array = fromJson(arrayAdapter, ""[[1.0,2.0],[3.0]]"");"
True,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,147,"double[][] array = arrayAdapter.fromJson(""[[1.0,2.0],[3.0]]"");"
False,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,189,ublic void testSerializeRecursive() throws IOException {
True,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,187,public void testSerializeRecursive() {
False,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,197,"oJson(nodeAdapter, root).replace('""', '\''));"
True,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,195,"nodeAdapter.toJson(root).replace('""', '\''));"
False,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,247,/ TODO: remove this when TypeAdapter.toJson() is public
False,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,248,"rivate static <T> String toJson(TypeAdapter<T> typeAdapter, T value) throws IOException {"
False,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,249,tringWriter stringWriter = new StringWriter();
False,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,250,sonWriter writer = new JsonWriter(stringWriter);
False,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,251,"ypeAdapter.write(writer, value);"
False,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,252,eturn stringWriter.toString();
False,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,255,/ TODO: remove this when TypeAdapter.fromJson() is public
False,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,256,"rivate <T> T fromJson(TypeAdapter<T> typeAdapter, String json) throws IOException {"
False,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,257,sonReader reader = new JsonReader(new StringReader(json));
False,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,258,eader.setLenient(true); // TODO: non-lenient?
False,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java,259,eturn typeAdapter.read(reader);
