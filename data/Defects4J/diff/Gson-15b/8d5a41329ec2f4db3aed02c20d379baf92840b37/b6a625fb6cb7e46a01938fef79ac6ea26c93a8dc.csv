is_addition,old_file_path,new_file_path,line_num,content
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,19,import java.io.EOFException;
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,20,import java.io.IOException;
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,21,import java.io.Reader;
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,22,import java.io.StringReader;
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,23,import java.io.StringWriter;
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,24,import java.io.Writer;
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,25,import java.lang.reflect.Type;
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,26,import java.math.BigDecimal;
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,27,import java.math.BigInteger;
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,28,import java.util.ArrayList;
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,29,import java.util.Collections;
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,30,import java.util.HashMap;
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,31,import java.util.List;
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,32,import java.util.Map;
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,26,mport com.google.gson.internal.bind.ThrowableTypeAdapterFactory;
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,41,mport java.io.EOFException;
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,42,mport java.io.IOException;
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,43,mport java.io.Reader;
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,44,mport java.io.StringReader;
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,45,mport java.io.StringWriter;
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,46,mport java.io.Writer;
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,47,mport java.lang.reflect.Type;
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,48,mport java.math.BigDecimal;
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,49,mport java.math.BigInteger;
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,50,mport java.util.ArrayList;
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,51,mport java.util.Collections;
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,52,mport java.util.HashMap;
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,53,mport java.util.List;
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,54,mport java.util.Map;
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,243,"actories.add(new ThrowableTypeAdapterFactory(fieldNamingPolicy, excluder));"
True,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,108,"public boolean writeField(Object value) throws IOException, IllegalAccessException {"
True,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,109,if (!serialized) return false;
True,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,110,Object fieldValue = field.get(value);
True,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,111,return fieldValue != value; // avoid recursion for example for Throwable.cause
True,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,166,"abstract boolean writeField(Object value) throws IOException, IllegalAccessException;"
False,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,212,f (boundField.serialized) {
True,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,217,if (boundField.writeField(value)) {
False,gson/src/test/java/com/google/gson/functional/CircularReferenceTest.java,gson/src/test/java/com/google/gson/functional/CircularReferenceTest.java,59,ublic void testSelfReferenceSerialization() throws Exception {
True,gson/src/test/java/com/google/gson/functional/CircularReferenceTest.java,gson/src/test/java/com/google/gson/functional/CircularReferenceTest.java,59,public void testSelfReferenceIgnoredInSerialization() throws Exception {
False,gson/src/test/java/com/google/gson/functional/CircularReferenceTest.java,gson/src/test/java/com/google/gson/functional/CircularReferenceTest.java,63,ry {
False,gson/src/test/java/com/google/gson/functional/CircularReferenceTest.java,gson/src/test/java/com/google/gson/functional/CircularReferenceTest.java,64,son.toJson(objA);
False,gson/src/test/java/com/google/gson/functional/CircularReferenceTest.java,gson/src/test/java/com/google/gson/functional/CircularReferenceTest.java,65,"ail(""Circular reference to self can not be serialized!"");"
False,gson/src/test/java/com/google/gson/functional/CircularReferenceTest.java,gson/src/test/java/com/google/gson/functional/CircularReferenceTest.java,66, catch (StackOverflowError expected) {
True,gson/src/test/java/com/google/gson/functional/CircularReferenceTest.java,gson/src/test/java/com/google/gson/functional/CircularReferenceTest.java,63,String json = gson.toJson(objA);
True,gson/src/test/java/com/google/gson/functional/CircularReferenceTest.java,gson/src/test/java/com/google/gson/functional/CircularReferenceTest.java,64,"assertFalse(json.contains(""ref"")); // self-reference is ignored"
True,gson/src/test/java/com/google/gson/functional/ThrowableFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ThrowableFunctionalTest.java,1,// Copyright (C) 2014 Trymph Inc.
True,gson/src/test/java/com/google/gson/functional/ThrowableFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ThrowableFunctionalTest.java,2,package com.google.gson.functional;
True,gson/src/test/java/com/google/gson/functional/ThrowableFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ThrowableFunctionalTest.java,4,import java.io.IOException;
True,gson/src/test/java/com/google/gson/functional/ThrowableFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ThrowableFunctionalTest.java,6,import junit.framework.TestCase;
True,gson/src/test/java/com/google/gson/functional/ThrowableFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ThrowableFunctionalTest.java,8,import com.google.gson.Gson;
True,gson/src/test/java/com/google/gson/functional/ThrowableFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ThrowableFunctionalTest.java,9,import com.google.gson.annotations.SerializedName;
True,gson/src/test/java/com/google/gson/functional/ThrowableFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ThrowableFunctionalTest.java,11,"@SuppressWarnings(""serial"")"
True,gson/src/test/java/com/google/gson/functional/ThrowableFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ThrowableFunctionalTest.java,12,public final class ThrowableFunctionalTest extends TestCase {
True,gson/src/test/java/com/google/gson/functional/ThrowableFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ThrowableFunctionalTest.java,13,private final Gson gson = new Gson();
True,gson/src/test/java/com/google/gson/functional/ThrowableFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ThrowableFunctionalTest.java,15,public void testExceptionWithoutCause() {
True,gson/src/test/java/com/google/gson/functional/ThrowableFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ThrowableFunctionalTest.java,16,"RuntimeException e = new RuntimeException(""hello"");"
True,gson/src/test/java/com/google/gson/functional/ThrowableFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ThrowableFunctionalTest.java,17,String json = gson.toJson(e);
True,gson/src/test/java/com/google/gson/functional/ThrowableFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ThrowableFunctionalTest.java,18,"assertTrue(json.contains(""hello""));"
True,gson/src/test/java/com/google/gson/functional/ThrowableFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ThrowableFunctionalTest.java,20,"e = gson.fromJson(""{'detailMessage':'hello'}"", RuntimeException.class);"
True,gson/src/test/java/com/google/gson/functional/ThrowableFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ThrowableFunctionalTest.java,21,"assertEquals(""hello"", e.getMessage());"
True,gson/src/test/java/com/google/gson/functional/ThrowableFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ThrowableFunctionalTest.java,24,public void testExceptionWithCause() {
True,gson/src/test/java/com/google/gson/functional/ThrowableFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ThrowableFunctionalTest.java,25,"Exception e = new Exception(""top level"", new IOException(""io error""));"
True,gson/src/test/java/com/google/gson/functional/ThrowableFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ThrowableFunctionalTest.java,26,String json = gson.toJson(e);
True,gson/src/test/java/com/google/gson/functional/ThrowableFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ThrowableFunctionalTest.java,27,"assertEquals(""{\""detailMessage\"":\""top level\"",\""cause\"":{\""detailMessage\"":\""io error\""}}"", json);"
True,gson/src/test/java/com/google/gson/functional/ThrowableFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ThrowableFunctionalTest.java,29,"e = gson.fromJson(""{'detailMessage':'top level','cause':{'detailMessage':'io error'}}"", Exception.class);"
True,gson/src/test/java/com/google/gson/functional/ThrowableFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ThrowableFunctionalTest.java,30,"assertEquals(""top level"", e.getMessage());"
True,gson/src/test/java/com/google/gson/functional/ThrowableFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ThrowableFunctionalTest.java,31,assertTrue(e.getCause() instanceof Throwable); // cause is not parameterized so type info is lost
True,gson/src/test/java/com/google/gson/functional/ThrowableFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ThrowableFunctionalTest.java,32,"assertEquals(""io error"", e.getCause().getMessage());"
True,gson/src/test/java/com/google/gson/functional/ThrowableFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ThrowableFunctionalTest.java,35,public void testSerializedNameOnExceptionFields() {
True,gson/src/test/java/com/google/gson/functional/ThrowableFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ThrowableFunctionalTest.java,36,MyException e = new MyException();
True,gson/src/test/java/com/google/gson/functional/ThrowableFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ThrowableFunctionalTest.java,37,String json = gson.toJson(e);
True,gson/src/test/java/com/google/gson/functional/ThrowableFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ThrowableFunctionalTest.java,38,"assertEquals(""{\""my_custom_name\"":\""myCustomMessageValue\""}"", json);"
True,gson/src/test/java/com/google/gson/functional/ThrowableFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ThrowableFunctionalTest.java,41,public void testErrorWithoutCause() {
True,gson/src/test/java/com/google/gson/functional/ThrowableFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ThrowableFunctionalTest.java,42,"OutOfMemoryError e = new OutOfMemoryError(""hello"");"
True,gson/src/test/java/com/google/gson/functional/ThrowableFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ThrowableFunctionalTest.java,43,String json = gson.toJson(e);
True,gson/src/test/java/com/google/gson/functional/ThrowableFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ThrowableFunctionalTest.java,44,"assertTrue(json.contains(""hello""));"
True,gson/src/test/java/com/google/gson/functional/ThrowableFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ThrowableFunctionalTest.java,46,"e = gson.fromJson(""{'detailMessage':'hello'}"", OutOfMemoryError.class);"
True,gson/src/test/java/com/google/gson/functional/ThrowableFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ThrowableFunctionalTest.java,47,"assertEquals(""hello"", e.getMessage());"
True,gson/src/test/java/com/google/gson/functional/ThrowableFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ThrowableFunctionalTest.java,50,public void testErrornWithCause() {
True,gson/src/test/java/com/google/gson/functional/ThrowableFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ThrowableFunctionalTest.java,51,"Error e = new Error(""top level"", new IOException(""io error""));"
True,gson/src/test/java/com/google/gson/functional/ThrowableFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ThrowableFunctionalTest.java,52,String json = gson.toJson(e);
True,gson/src/test/java/com/google/gson/functional/ThrowableFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ThrowableFunctionalTest.java,53,"assertTrue(json.contains(""top level""));"
True,gson/src/test/java/com/google/gson/functional/ThrowableFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ThrowableFunctionalTest.java,54,"assertTrue(json.contains(""io error""));"
True,gson/src/test/java/com/google/gson/functional/ThrowableFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ThrowableFunctionalTest.java,56,"e = gson.fromJson(""{'detailMessage':'top level','cause':{'detailMessage':'io error'}}"", Error.class);"
True,gson/src/test/java/com/google/gson/functional/ThrowableFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ThrowableFunctionalTest.java,57,"assertEquals(""top level"", e.getMessage());"
True,gson/src/test/java/com/google/gson/functional/ThrowableFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ThrowableFunctionalTest.java,58,assertTrue(e.getCause() instanceof Throwable); // cause is not parameterized so type info is lost
True,gson/src/test/java/com/google/gson/functional/ThrowableFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ThrowableFunctionalTest.java,59,"assertEquals(""io error"", e.getCause().getMessage());"
True,gson/src/test/java/com/google/gson/functional/ThrowableFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ThrowableFunctionalTest.java,62,private static final class MyException extends Throwable {
True,gson/src/test/java/com/google/gson/functional/ThrowableFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ThrowableFunctionalTest.java,63,"@SerializedName(""my_custom_name"") String myCustomMessage = ""myCustomMessageValue"";"
