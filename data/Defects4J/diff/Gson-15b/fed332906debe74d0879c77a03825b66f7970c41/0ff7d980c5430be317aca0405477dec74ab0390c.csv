is_addition,old_file_path,new_file_path,line_num,content
False,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,2, Copyright (C) 2008 Google Inc.
False,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,4," Licensed under the Apache License, Version 2.0 (the ""License"");"
False,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,5, you may not use this file except in compliance with the License.
False,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,6, You may obtain a copy of the License at
False,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,8, http://www.apache.org/licenses/LICENSE-2.0
False,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,10," Unless required by applicable law or agreed to in writing, software"
False,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,11," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,12," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,13, See the License for the specific language governing permissions and
False,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,14, limitations under the License.
False,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,17,ackage com.google.gson;
False,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,19,mport com.google.gson.internal.$Gson$Preconditions;
False,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,21,mport java.util.Collection;
False,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,24, A wrapper class used to collect numerous {@link ExclusionStrategy} objects
False,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,25, and perform a short-circuited OR operation.
False,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,27, @author Joel Leitch
False,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,29,inal class DisjunctionExclusionStrategy implements ExclusionStrategy {
False,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,30,rivate final Collection<ExclusionStrategy> strategies;
False,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,32,isjunctionExclusionStrategy(Collection<ExclusionStrategy> strategies) {
False,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,33,his.strategies = $Gson$Preconditions.checkNotNull(strategies);
False,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,36,ublic boolean shouldSkipField(FieldAttributes f) {
False,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,37,or (ExclusionStrategy strategy : strategies) {
False,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,38,f (strategy.shouldSkipField(f)) {
False,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,39,eturn true;
False,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,42,eturn false;
False,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,45,ublic boolean shouldSkipClass(Class<?> clazz) {
False,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,46,or (ExclusionStrategy strategy : strategies) {
False,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,47,f (strategy.shouldSkipClass(clazz)) {
False,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,48,eturn true;
False,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,gson/src/main/java/com/google/gson/DisjunctionExclusionStrategy.java,51,eturn false;
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,48,import java.lang.reflect.Modifier;
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,54,mport java.util.LinkedList;
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,106,rivate static final ExclusionStrategy DEFAULT_EXCLUSION_STRATEGY = createExclusionStrategy();
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,106,private static final ExclusionStrategy DEFAULT_EXCLUSION_STRATEGY = new GsonExclusionStrategy(
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,107,"GsonExclusionStrategy.IGNORE_VERSIONS, Modifier.TRANSIENT | Modifier.STATIC,"
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,108,"true, true, true, false, false);"
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,344,rivate static ExclusionStrategy createExclusionStrategy() {
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,345,ist<ExclusionStrategy> strategies = new LinkedList<ExclusionStrategy>();
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,346,trategies.add(GsonBuilder.EXCLUDE_ANONYMOUS_AND_LOCAL);
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,347,trategies.add(GsonBuilder.EXCLUDE_SYNTHETIC_FIELDS);
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,348,trategies.add(GsonBuilder.EXCLUDE_TRANSIENT_AND_STATIC);
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,349,eturn new DisjunctionExclusionStrategy(strategies);
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,19,mport com.google.gson.annotations.Expose;
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,30,mport java.util.Arrays;
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,32,mport java.util.HashSet;
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,33,mport java.util.LinkedList;
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,35,mport java.util.Set;
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,71,** Strategy for excluding inner classes. */
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,72,tatic final ExclusionStrategy EXCLUDE_INNER_CLASSES = new ExclusionStrategy() {
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,73,ublic boolean shouldSkipField(FieldAttributes f) {
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,74,eturn isInnerClass(f.getDeclaredClass());
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,76,ublic boolean shouldSkipClass(Class<?> clazz) {
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,77,eturn isInnerClass(clazz);
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,79,rivate boolean isInnerClass(Class<?> clazz) {
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,80,eturn clazz.isMemberClass() && !isStatic(clazz);
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,82,rivate boolean isStatic(Class<?> clazz) {
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,83,eturn (clazz.getModifiers() & Modifier.STATIC) != 0;
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,87,** Excludes fields that do not have the {@link Expose} annotation */
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,88,tatic final ExclusionStrategy REQUIRE_EXPOSE_DESERIALIZE = new ExclusionStrategy() {
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,89,ublic boolean shouldSkipClass(Class<?> clazz) {
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,90,eturn false;
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,92,ublic boolean shouldSkipField(FieldAttributes f) {
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,93,xpose annotation = f.getAnnotation(Expose.class);
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,94,eturn annotation == null || !annotation.deserialize();
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,98,** Excludes fields that do not have the {@link Expose} annotation */
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,99,tatic final ExclusionStrategy REQUIRE_EXPOSE_SERIALIZE = new ExclusionStrategy() {
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,100,ublic boolean shouldSkipClass(Class<?> clazz) {
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,101,eturn false;
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,103,ublic boolean shouldSkipField(FieldAttributes f) {
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,104,xpose annotation = f.getAnnotation(Expose.class);
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,105,eturn annotation == null || !annotation.serialize();
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,109,tatic final ExclusionStrategy EXCLUDE_ANONYMOUS_AND_LOCAL = new ExclusionStrategy() {
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,110,ublic boolean shouldSkipField(FieldAttributes f) {
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,111,eturn isAnonymousOrLocal(f.getDeclaredClass());
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,113,ublic boolean shouldSkipClass(Class<?> clazz) {
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,114,eturn isAnonymousOrLocal(clazz);
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,116,rivate boolean isAnonymousOrLocal(Class<?> clazz) {
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,117,eturn !Enum.class.isAssignableFrom(clazz)
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,118,& (clazz.isAnonymousClass() || clazz.isLocalClass());
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,122,tatic final ExclusionStrategy EXCLUDE_SYNTHETIC_FIELDS = new ExclusionStrategy() {
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,123,ublic boolean shouldSkipClass(Class<?> clazz) {
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,124,eturn false;
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,126,ublic boolean shouldSkipField(FieldAttributes f) {
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,127,eturn f.isSynthetic();
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,131,tatic final ModifierBasedExclusionStrategy EXCLUDE_TRANSIENT_AND_STATIC
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,132," new ModifierBasedExclusionStrategy(Modifier.TRANSIENT, Modifier.STATIC);"
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,66,private ExclusionStrategy serializeExclusionStrategy;
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,67,private ExclusionStrategy deserializeExclusionStrategy;
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,68,private int modifiers = Modifier.TRANSIENT | Modifier.STATIC;
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,69,private double ignoreVersionsAfter = GsonExclusionStrategy.IGNORE_VERSIONS;
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,70,private boolean serializeInnerClasses = true;
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,71,private boolean excludeFieldsWithoutExposeAnnotation = false;
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,134,rivate final Set<ExclusionStrategy> serializeExclusionStrategies =
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,135,ew HashSet<ExclusionStrategy>();
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,136,rivate final Set<ExclusionStrategy> deserializeExclusionStrategies =
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,137,ew HashSet<ExclusionStrategy>();
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,139,rivate double ignoreVersionsAfter;
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,140,rivate ModifierBasedExclusionStrategy modifierBasedExclusionStrategy;
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,141,rivate boolean serializeInnerClasses;
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,142,rivate boolean excludeFieldsWithoutExposeAnnotation;
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,167,/ add default exclusion strategies
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,168,eserializeExclusionStrategies.add(EXCLUDE_ANONYMOUS_AND_LOCAL);
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,169,eserializeExclusionStrategies.add(EXCLUDE_SYNTHETIC_FIELDS);
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,170,erializeExclusionStrategies.add(EXCLUDE_ANONYMOUS_AND_LOCAL);
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,171,erializeExclusionStrategies.add(EXCLUDE_SYNTHETIC_FIELDS);
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,174,gnoreVersionsAfter = VersionExclusionStrategy.IGNORE_VERSIONS;
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,175,erializeInnerClasses = true;
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,178,odifierBasedExclusionStrategy = EXCLUDE_TRANSIENT_AND_STATIC;
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,179,xcludeFieldsWithoutExposeAnnotation = false;
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,241,odifierBasedExclusionStrategy = new ModifierBasedExclusionStrategy(modifiers);
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,161,this.modifiers = 0;
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,162,for (int modifier : modifiers) {
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,163,this.modifiers |= modifier;
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,424,ist<ExclusionStrategy> strategyList = Arrays.asList(strategies);
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,425,erializeExclusionStrategies.addAll(strategyList);
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,426,eserializeExclusionStrategies.addAll(strategyList);
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,347,for (ExclusionStrategy strategy : strategies) {
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,348,addSerializationExclusionStrategy(strategy);
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,349,addDeserializationExclusionStrategy(strategy);
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,443,erializeExclusionStrategies.add(strategy);
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,367,"serializeExclusionStrategy = combine(serializeExclusionStrategy, strategy);"
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,460,eserializeExclusionStrategies.add(strategy);
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,384,"deserializeExclusionStrategy = combine(deserializeExclusionStrategy, strategy);"
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,604,"* Unions two exclusion strategies. If the first is null, this returns the"
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,605,* second.
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,607,"private static ExclusionStrategy combine(final ExclusionStrategy a, final ExclusionStrategy b) {"
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,608,if (b == null) {
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,609,throw new IllegalArgumentException();
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,611,if (a == null) {
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,612,return b;
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,614,return new ExclusionStrategy() {
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,615,public boolean shouldSkipField(FieldAttributes f) {
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,616,return a.shouldSkipField(f) || b.shouldSkipField(f);
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,618,public boolean shouldSkipClass(Class<?> clazz) {
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,619,return a.shouldSkipClass(clazz) || b.shouldSkipClass(clazz);
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,686,ist<ExclusionStrategy> deserializationStrategies =
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,687,ew LinkedList<ExclusionStrategy>(deserializeExclusionStrategies);
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,688,ist<ExclusionStrategy> serializationStrategies =
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,689,ew LinkedList<ExclusionStrategy>(serializeExclusionStrategies);
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,690,eserializationStrategies.add(modifierBasedExclusionStrategy);
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,691,erializationStrategies.add(modifierBasedExclusionStrategy);
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,693,f (!serializeInnerClasses) {
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,694,eserializationStrategies.add(EXCLUDE_INNER_CLASSES);
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,695,erializationStrategies.add(EXCLUDE_INNER_CLASSES);
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,697,f (ignoreVersionsAfter != VersionExclusionStrategy.IGNORE_VERSIONS) {
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,698,ersionExclusionStrategy versionExclusionStrategy =
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,699,ew VersionExclusionStrategy(ignoreVersionsAfter);
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,700,eserializationStrategies.add(versionExclusionStrategy);
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,701,erializationStrategies.add(versionExclusionStrategy);
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,703,f (excludeFieldsWithoutExposeAnnotation) {
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,704,eserializationStrategies.add(REQUIRE_EXPOSE_DESERIALIZE);
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,705,erializationStrategies.add(REQUIRE_EXPOSE_SERIALIZE);
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,709,"eturn new Gson(new DisjunctionExclusionStrategy(deserializationStrategies),"
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,710,"ew DisjunctionExclusionStrategy(serializationStrategies),"
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,711,"ieldNamingPolicy, instanceCreators.copyOf().makeUnmodifiable(), serializeNulls,"
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,633,"ExclusionStrategy deserializeExclusionStrategy = combine(this.deserializeExclusionStrategy,"
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,634,"new GsonExclusionStrategy(ignoreVersionsAfter, modifiers, true,"
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,635,"true, serializeInnerClasses, false, excludeFieldsWithoutExposeAnnotation));"
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,636,"ExclusionStrategy serializeExclusionStrategy = combine(this.serializeExclusionStrategy,"
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,637,"new GsonExclusionStrategy(ignoreVersionsAfter, modifiers, true, true,"
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,638,"serializeInnerClasses, excludeFieldsWithoutExposeAnnotation, false));"
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,640,"return new Gson(deserializeExclusionStrategy, serializeExclusionStrategy, fieldNamingPolicy,"
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,641,"instanceCreators.copyOf().makeUnmodifiable(), serializeNulls,"
True,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,2,* Copyright (C) 2008 Google Inc.
True,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,5,* you may not use this file except in compliance with the License.
True,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,6,* You may obtain a copy of the License at
True,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,8,* http://www.apache.org/licenses/LICENSE-2.0
True,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,13,* See the License for the specific language governing permissions and
True,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,14,* limitations under the License.
True,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,17,package com.google.gson;
True,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,19,import com.google.gson.annotations.Expose;
True,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,20,import com.google.gson.annotations.Since;
True,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,21,import com.google.gson.annotations.Until;
True,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,22,import java.lang.reflect.Modifier;
True,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,25,* A configurable exclusion strategy. This strategy supports version attributes
True,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,26,"* {@link Since} and {@link Until}, modifiers, synthetic fields, anonymous and"
True,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,27,"* local classes, inner classes, and fields with the {@link Expose} annotation."
True,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,29,* @author Joel Leitch
True,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,30,* @author Jesse Wilson
True,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,32,final class GsonExclusionStrategy implements ExclusionStrategy {
True,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,33,static final double IGNORE_VERSIONS = -1D;
True,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,34,private final double version;
True,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,35,private final int modifiers;
True,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,36,private final boolean excludeSyntheticFields;
True,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,37,private final boolean excludeAnonymousAndLocal;
True,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,38,private final boolean serializeInnerClasses;
True,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,39,private final boolean requireExposeOnSerialize;
True,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,40,private final boolean requireExposeOnDeserialize;
True,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,42,"GsonExclusionStrategy(double version, int modifiers, boolean excludeSyntheticFields,"
True,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,43,"boolean excludeAnonymousAndLocal, boolean serializeInnerClasses,"
True,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,44,"boolean requireExposeOnSerialize, boolean requireExposeOnDeserialize) {"
True,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,45,this.version = version;
True,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,46,this.modifiers = modifiers;
True,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,47,this.excludeSyntheticFields = excludeSyntheticFields;
True,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,48,this.excludeAnonymousAndLocal = excludeAnonymousAndLocal;
True,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,49,this.serializeInnerClasses = serializeInnerClasses;
True,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,50,this.requireExposeOnSerialize = requireExposeOnSerialize;
True,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,51,this.requireExposeOnDeserialize = requireExposeOnDeserialize;
True,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,54,public boolean shouldSkipField(FieldAttributes f) {
True,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,55,if (f.hasModifier(modifiers)) {
True,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,56,return true;
True,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,58,if (version != GsonExclusionStrategy.IGNORE_VERSIONS
True,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,59,"&& !isValidVersion(f.getAnnotation(Since.class), f.getAnnotation(Until.class))) {"
True,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,60,return true;
True,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,62,if (excludeSyntheticFields && f.isSynthetic()) {
True,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,63,return true;
True,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,65,if (requireExposeOnSerialize || requireExposeOnDeserialize) {
True,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,66,Expose annotation = f.getAnnotation(Expose.class);
True,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,67,if (annotation == null
True,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,68,|| requireExposeOnSerialize && !annotation.serialize()
True,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,69,|| requireExposeOnDeserialize && !annotation.deserialize()) {
True,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,70,return true;
True,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,73,if (!serializeInnerClasses && isInnerClass(f.getDeclaredClass())) {
True,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,74,return true;
True,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,76,if (excludeAnonymousAndLocal && isAnonymousOrLocal(f.getDeclaredClass())) {
True,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,77,return true;
True,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,79,return false;
True,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,82,public boolean shouldSkipClass(Class<?> clazz) {
True,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,83,if (version != GsonExclusionStrategy.IGNORE_VERSIONS
True,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,84,"&& !isValidVersion(clazz.getAnnotation(Since.class), clazz.getAnnotation(Until.class))) {"
True,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,85,return true;
True,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,87,if (!serializeInnerClasses && isInnerClass(clazz)) {
True,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,88,return true;
True,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,90,if (excludeAnonymousAndLocal && isAnonymousOrLocal(clazz)) {
True,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,91,return true;
True,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,93,return false;
True,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,96,private boolean isAnonymousOrLocal(Class<?> clazz) {
True,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,97,return !Enum.class.isAssignableFrom(clazz)
True,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,98,&& (clazz.isAnonymousClass() || clazz.isLocalClass());
True,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,101,private boolean isInnerClass(Class<?> clazz) {
True,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,102,return clazz.isMemberClass() && !isStatic(clazz);
True,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,105,private boolean isStatic(Class<?> clazz) {
True,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,106,return (clazz.getModifiers() & Modifier.STATIC) != 0;
True,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,109,"private boolean isValidVersion(Since since, Until until) {"
True,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,110,return isValidSince(since) && isValidUntil(until);
True,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,113,private boolean isValidSince(Since annotation) {
True,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,114,if (annotation != null) {
True,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,115,double annotationVersion = annotation.value();
True,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,116,if (annotationVersion > version) {
True,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,117,return false;
True,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,120,return true;
True,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,123,private boolean isValidUntil(Until annotation) {
True,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,124,if (annotation != null) {
True,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,125,double annotationVersion = annotation.value();
True,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,126,if (annotationVersion <= version) {
True,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,127,return false;
True,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,gson/src/main/java/com/google/gson/GsonExclusionStrategy.java,130,return true;
False,gson/src/main/java/com/google/gson/ModifierBasedExclusionStrategy.java,gson/src/main/java/com/google/gson/ModifierBasedExclusionStrategy.java,2, Copyright (C) 2008 Google Inc.
False,gson/src/main/java/com/google/gson/ModifierBasedExclusionStrategy.java,gson/src/main/java/com/google/gson/ModifierBasedExclusionStrategy.java,4," Licensed under the Apache License, Version 2.0 (the ""License"");"
False,gson/src/main/java/com/google/gson/ModifierBasedExclusionStrategy.java,gson/src/main/java/com/google/gson/ModifierBasedExclusionStrategy.java,5, you may not use this file except in compliance with the License.
False,gson/src/main/java/com/google/gson/ModifierBasedExclusionStrategy.java,gson/src/main/java/com/google/gson/ModifierBasedExclusionStrategy.java,6, You may obtain a copy of the License at
False,gson/src/main/java/com/google/gson/ModifierBasedExclusionStrategy.java,gson/src/main/java/com/google/gson/ModifierBasedExclusionStrategy.java,8, http://www.apache.org/licenses/LICENSE-2.0
False,gson/src/main/java/com/google/gson/ModifierBasedExclusionStrategy.java,gson/src/main/java/com/google/gson/ModifierBasedExclusionStrategy.java,10," Unless required by applicable law or agreed to in writing, software"
False,gson/src/main/java/com/google/gson/ModifierBasedExclusionStrategy.java,gson/src/main/java/com/google/gson/ModifierBasedExclusionStrategy.java,11," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,gson/src/main/java/com/google/gson/ModifierBasedExclusionStrategy.java,gson/src/main/java/com/google/gson/ModifierBasedExclusionStrategy.java,12," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,gson/src/main/java/com/google/gson/ModifierBasedExclusionStrategy.java,gson/src/main/java/com/google/gson/ModifierBasedExclusionStrategy.java,13, See the License for the specific language governing permissions and
False,gson/src/main/java/com/google/gson/ModifierBasedExclusionStrategy.java,gson/src/main/java/com/google/gson/ModifierBasedExclusionStrategy.java,14, limitations under the License.
False,gson/src/main/java/com/google/gson/ModifierBasedExclusionStrategy.java,gson/src/main/java/com/google/gson/ModifierBasedExclusionStrategy.java,17,ackage com.google.gson;
False,gson/src/main/java/com/google/gson/ModifierBasedExclusionStrategy.java,gson/src/main/java/com/google/gson/ModifierBasedExclusionStrategy.java,19,mport java.util.Collection;
False,gson/src/main/java/com/google/gson/ModifierBasedExclusionStrategy.java,gson/src/main/java/com/google/gson/ModifierBasedExclusionStrategy.java,20,mport java.util.HashSet;
False,gson/src/main/java/com/google/gson/ModifierBasedExclusionStrategy.java,gson/src/main/java/com/google/gson/ModifierBasedExclusionStrategy.java,23, Exclude fields based on particular field modifiers.  For a list of possible
False,gson/src/main/java/com/google/gson/ModifierBasedExclusionStrategy.java,gson/src/main/java/com/google/gson/ModifierBasedExclusionStrategy.java,24," modifiers, see {@link java.lang.reflect.Modifier}."
False,gson/src/main/java/com/google/gson/ModifierBasedExclusionStrategy.java,gson/src/main/java/com/google/gson/ModifierBasedExclusionStrategy.java,26, @author Inderjeet Singh
False,gson/src/main/java/com/google/gson/ModifierBasedExclusionStrategy.java,gson/src/main/java/com/google/gson/ModifierBasedExclusionStrategy.java,27, @author Joel Leitch
False,gson/src/main/java/com/google/gson/ModifierBasedExclusionStrategy.java,gson/src/main/java/com/google/gson/ModifierBasedExclusionStrategy.java,29,inal class ModifierBasedExclusionStrategy implements ExclusionStrategy {
False,gson/src/main/java/com/google/gson/ModifierBasedExclusionStrategy.java,gson/src/main/java/com/google/gson/ModifierBasedExclusionStrategy.java,30,rivate final Collection<Integer> modifiers;
False,gson/src/main/java/com/google/gson/ModifierBasedExclusionStrategy.java,gson/src/main/java/com/google/gson/ModifierBasedExclusionStrategy.java,32,ublic ModifierBasedExclusionStrategy(int... modifiers) {
False,gson/src/main/java/com/google/gson/ModifierBasedExclusionStrategy.java,gson/src/main/java/com/google/gson/ModifierBasedExclusionStrategy.java,33,his.modifiers = new HashSet<Integer>();
False,gson/src/main/java/com/google/gson/ModifierBasedExclusionStrategy.java,gson/src/main/java/com/google/gson/ModifierBasedExclusionStrategy.java,34,f (modifiers != null) {
False,gson/src/main/java/com/google/gson/ModifierBasedExclusionStrategy.java,gson/src/main/java/com/google/gson/ModifierBasedExclusionStrategy.java,35,or (int modifier : modifiers) {
False,gson/src/main/java/com/google/gson/ModifierBasedExclusionStrategy.java,gson/src/main/java/com/google/gson/ModifierBasedExclusionStrategy.java,36,his.modifiers.add(modifier);
False,gson/src/main/java/com/google/gson/ModifierBasedExclusionStrategy.java,gson/src/main/java/com/google/gson/ModifierBasedExclusionStrategy.java,41,ublic boolean shouldSkipField(FieldAttributes f) {
False,gson/src/main/java/com/google/gson/ModifierBasedExclusionStrategy.java,gson/src/main/java/com/google/gson/ModifierBasedExclusionStrategy.java,42,or (int modifier : modifiers) {
False,gson/src/main/java/com/google/gson/ModifierBasedExclusionStrategy.java,gson/src/main/java/com/google/gson/ModifierBasedExclusionStrategy.java,43,f (f.hasModifier(modifier)) {
False,gson/src/main/java/com/google/gson/ModifierBasedExclusionStrategy.java,gson/src/main/java/com/google/gson/ModifierBasedExclusionStrategy.java,44,eturn true;
False,gson/src/main/java/com/google/gson/ModifierBasedExclusionStrategy.java,gson/src/main/java/com/google/gson/ModifierBasedExclusionStrategy.java,47,eturn false;
False,gson/src/main/java/com/google/gson/ModifierBasedExclusionStrategy.java,gson/src/main/java/com/google/gson/ModifierBasedExclusionStrategy.java,50,ublic boolean shouldSkipClass(Class<?> clazz) {
False,gson/src/main/java/com/google/gson/ModifierBasedExclusionStrategy.java,gson/src/main/java/com/google/gson/ModifierBasedExclusionStrategy.java,51,eturn false;
False,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,2, Copyright (C) 2008 Google Inc.
False,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,4," Licensed under the Apache License, Version 2.0 (the ""License"");"
False,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,5, you may not use this file except in compliance with the License.
False,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,6, You may obtain a copy of the License at
False,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,8, http://www.apache.org/licenses/LICENSE-2.0
False,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,10," Unless required by applicable law or agreed to in writing, software"
False,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,11," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,12," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,13, See the License for the specific language governing permissions and
False,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,14, limitations under the License.
False,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,17,ackage com.google.gson;
False,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,19,mport com.google.gson.annotations.Since;
False,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,20,mport com.google.gson.annotations.Until;
False,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,21,mport com.google.gson.internal.$Gson$Preconditions;
False,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,24, This strategy will exclude any files and/or class that are passed the
False,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,25, {@link #version} value.
False,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,27, @author Joel Leitch
False,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,29,inal class VersionExclusionStrategy implements ExclusionStrategy {
False,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,30,tatic final double IGNORE_VERSIONS = -1D;
False,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,31,rivate final double version;
False,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,33,ersionExclusionStrategy(double version) {
False,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,34,Gson$Preconditions.checkArgument(version >= 0.0D);
False,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,35,his.version = version;
False,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,38,ublic boolean shouldSkipField(FieldAttributes f) {
False,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,39,"eturn !isValidVersion(f.getAnnotation(Since.class), f.getAnnotation(Until.class));"
False,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,42,ublic boolean shouldSkipClass(Class<?> clazz) {
False,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,43,"eturn !isValidVersion(clazz.getAnnotation(Since.class), clazz.getAnnotation(Until.class));"
False,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,46,"rivate boolean isValidVersion(Since since, Until until) {"
False,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,47,eturn (isValidSince(since) && isValidUntil(until));
False,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,50,rivate boolean isValidSince(Since annotation) {
False,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,51,f (annotation != null) {
False,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,52,ouble annotationVersion = annotation.value();
False,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,53,f (annotationVersion > version) {
False,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,54,eturn false;
False,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,57,eturn true;
False,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,60,rivate boolean isValidUntil(Until annotation) {
False,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,61,f (annotation != null) {
False,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,62,ouble annotationVersion = annotation.value();
False,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,63,f (annotationVersion <= version) {
False,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,64,eturn false;
False,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,gson/src/main/java/com/google/gson/VersionExclusionStrategy.java,67,eturn true;
False,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,2, Copyright (C) 2008 Google Inc.
False,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,4," Licensed under the Apache License, Version 2.0 (the ""License"");"
False,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,5, you may not use this file except in compliance with the License.
False,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,6, You may obtain a copy of the License at
False,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,8, http://www.apache.org/licenses/LICENSE-2.0
False,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,10," Unless required by applicable law or agreed to in writing, software"
False,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,11," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,12," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,13, See the License for the specific language governing permissions and
False,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,14, limitations under the License.
False,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,17,ackage com.google.gson;
False,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,19,mport junit.framework.TestCase;
False,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,21,mport java.util.LinkedList;
False,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,22,mport java.util.List;
False,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,25, Unit tests for the {@link DisjunctionExclusionStrategy} class.
False,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,27, @author Joel Leitch
False,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,29,ublic class DisjunctionExclusionStrategyTest extends TestCase {
False,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,31,rivate static final ExclusionStrategy FALSE_STRATEGY =
False,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,32,"ew MockExclusionStrategy(false, false);"
False,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,33,rivate static final ExclusionStrategy TRUE_STRATEGY =
False,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,34,"ew MockExclusionStrategy(true, true);"
False,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,36,rivate static final Class<?> CLAZZ = String.class;
False,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,37,rivate static final FieldAttributes FIELD =
False,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,38,ew FieldAttributes(CLAZZ.getFields()[0]);
False,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,40,ublic void testBadInstantiation() throws Exception {
False,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,41,ry {
False,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,42,ist<ExclusionStrategy> constructorParam = null;
False,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,43,ew DisjunctionExclusionStrategy(constructorParam);
False,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,44,"ail(""Should throw an exception"");"
False,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,45, catch (NullPointerException expected) { }
False,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,48,ublic void testSkipFieldsWithMixedTrueAndFalse() throws Exception {
False,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,49,ist<ExclusionStrategy> strategies = new LinkedList<ExclusionStrategy>();
False,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,50,trategies.add(FALSE_STRATEGY);
False,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,51,trategies.add(TRUE_STRATEGY);
False,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,52,isjunctionExclusionStrategy strategy = new DisjunctionExclusionStrategy(strategies);
False,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,54,ssertTrue(strategy.shouldSkipClass(CLAZZ));
False,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,55,ssertTrue(strategy.shouldSkipField(FIELD));
False,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,58,ublic void testSkipFieldsWithFalseOnly() throws Exception {
False,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,59,ist<ExclusionStrategy> strategies = new LinkedList<ExclusionStrategy>();
False,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,60,trategies.add(FALSE_STRATEGY);
False,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,61,isjunctionExclusionStrategy strategy =  new DisjunctionExclusionStrategy(strategies);
False,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,63,ssertFalse(strategy.shouldSkipClass(CLAZZ));
False,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/DisjunctionExclusionStrategyTest.java,64,ssertFalse(strategy.shouldSkipField(FIELD));
False,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,31,rivate ExclusionStrategy deserializationStrategy = GsonBuilder.REQUIRE_EXPOSE_DESERIALIZE;
False,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,32,rivate ExclusionStrategy serializationStrategy = GsonBuilder.REQUIRE_EXPOSE_SERIALIZE;
True,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,31,private ExclusionStrategy serializationStrategy = new GsonExclusionStrategy(
True,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,32,"GsonExclusionStrategy.IGNORE_VERSIONS, 0, true, true, true, true, false);"
True,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,33,private ExclusionStrategy deserializationStrategy = new GsonExclusionStrategy(
True,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,gson/src/test/java/com/google/gson/ExposeAnnotationExclusionStrategyTest.java,34,"GsonExclusionStrategy.IGNORE_VERSIONS, 0, true, true, true, false, true);"
False,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,22,mport java.util.LinkedList;
False,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,37,inkedList<ExclusionStrategy> strategies = new LinkedList<ExclusionStrategy>();
False,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,38,trategies.add(GsonBuilder.EXCLUDE_SYNTHETIC_FIELDS);
False,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,39,"trategies.add(new ModifierBasedExclusionStrategy(Modifier.TRANSIENT, Modifier.STATIC));"
False,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,40,xclusionStrategy exclusionStrategy = new DisjunctionExclusionStrategy(strategies);
True,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,36,ExclusionStrategy exclusionStrategy = new GsonExclusionStrategy(
True,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,37,"GsonExclusionStrategy.IGNORE_VERSIONS, Modifier.TRANSIENT | Modifier.STATIC,"
True,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,38,"true, false, true, false, false);"
False,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,19,mport junit.framework.TestCase;
True,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,20,import junit.framework.TestCase;
False,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,29,ublic InnerClass innerClass;
False,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,30,ublic StaticNestedClass staticNestedClass;
False,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,32,rivate ExclusionStrategy strategy;
False,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,34,Override
False,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,35,rotected void setUp() throws Exception {
False,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,36,uper.setUp();
False,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,37,nnerClass = new InnerClass();
False,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,38,taticNestedClass = new StaticNestedClass();
False,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,39,trategy = GsonBuilder.EXCLUDE_INNER_CLASSES;
True,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,28,public InnerClass innerClass = new InnerClass();
True,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,29,public StaticNestedClass staticNestedClass = new StaticNestedClass();
True,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,30,private ExclusionStrategy strategy = new GsonExclusionStrategy(
True,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,gson/src/test/java/com/google/gson/InnerClassExclusionStrategyTest.java,31,"GsonExclusionStrategy.IGNORE_VERSIONS, 0, true, false, false, false, false);"
True,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,19,import com.google.gson.annotations.Since;
False,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,23,mport com.google.gson.annotations.Since;
False,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,26, Unit tests for the {@link VersionExclusionStrategy} class.
True,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,24,* Unit tests for the {@link GsonExclusionStrategy} class.
False,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,33,ublic void testDisallowNegativeValuesAndFailFast() throws Exception {
False,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,34,ry {
False,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,35,ew VersionExclusionStrategy(-1.0D);
False,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,36,"ail(""should have thrown an exception."");"
False,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,37, catch (IllegalArgumentException expected) { }
False,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,43,ersionExclusionStrategy strategy = new VersionExclusionStrategy(VERSION);
True,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,34,"GsonExclusionStrategy strategy = new GsonExclusionStrategy(VERSION, 0,"
True,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,35,"true, true, true, false, false);"
False,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,53,ersionExclusionStrategy strategy = new VersionExclusionStrategy(VERSION + 1);
True,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,45,"GsonExclusionStrategy strategy = new GsonExclusionStrategy(VERSION + 1, 0,"
True,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,46,"true, true, true, false, false);"
False,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,63,ersionExclusionStrategy strategy = new VersionExclusionStrategy(VERSION - 1);
True,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,56,"GsonExclusionStrategy strategy = new GsonExclusionStrategy(VERSION - 1, 0,"
True,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java,57,"true, true, true, false, false);"
