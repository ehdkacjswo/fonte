is_addition,old_file_path,new_file_path,line_num,content
False,gson/src/main/java/com/google/gson/Escaper.java,gson/src/main/java/com/google/gson/Escaper.java,130, else {
False,gson/src/main/java/com/google/gson/Escaper.java,gson/src/main/java/com/google/gson/Escaper.java,131,eturn false;
True,gson/src/main/java/com/google/gson/Escaper.java,gson/src/main/java/com/google/gson/Escaper.java,131,return false;
False,gson/src/main/java/com/google/gson/GenericArrayTypeImpl.java,gson/src/main/java/com/google/gson/GenericArrayTypeImpl.java,59, else {
False,gson/src/main/java/com/google/gson/GenericArrayTypeImpl.java,gson/src/main/java/com/google/gson/GenericArrayTypeImpl.java,60,enericArrayType that = (GenericArrayType) o;
False,gson/src/main/java/com/google/gson/GenericArrayTypeImpl.java,gson/src/main/java/com/google/gson/GenericArrayTypeImpl.java,61,ype thatComponentType = that.getGenericComponentType();
False,gson/src/main/java/com/google/gson/GenericArrayTypeImpl.java,gson/src/main/java/com/google/gson/GenericArrayTypeImpl.java,62,eturn genericComponentType == null ?
False,gson/src/main/java/com/google/gson/GenericArrayTypeImpl.java,gson/src/main/java/com/google/gson/GenericArrayTypeImpl.java,63,hatComponentType == null : genericComponentType.equals(thatComponentType);
True,gson/src/main/java/com/google/gson/GenericArrayTypeImpl.java,gson/src/main/java/com/google/gson/GenericArrayTypeImpl.java,60,GenericArrayType that = (GenericArrayType) o;
True,gson/src/main/java/com/google/gson/GenericArrayTypeImpl.java,gson/src/main/java/com/google/gson/GenericArrayTypeImpl.java,61,Type thatComponentType = that.getGenericComponentType();
True,gson/src/main/java/com/google/gson/GenericArrayTypeImpl.java,gson/src/main/java/com/google/gson/GenericArrayTypeImpl.java,62,return genericComponentType == null ?
True,gson/src/main/java/com/google/gson/GenericArrayTypeImpl.java,gson/src/main/java/com/google/gson/GenericArrayTypeImpl.java,63,thatComponentType == null : genericComponentType.equals(thatComponentType);
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,90,tatic final JsonFormatter DEFAULT_JSON_FORMATTER = new JsonCompactFormatter();
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,112,rivate final JsonFormatter formatter;
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,155,"EFAULT_JSON_FORMATTER, false, DefaultTypeAdapters.getDefaultSerializers(),"
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,153,"false, DefaultTypeAdapters.getDefaultSerializers(),"
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,161,"sonFormatter formatter, boolean serializeNulls,"
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,162,"arameterizedTypeHandlerMap<JsonSerializer<?>> serializers,"
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,159,"boolean serializeNulls, ParameterizedTypeHandlerMap<JsonSerializer<?>> serializers,"
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,169,his.formatter = formatter;
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,545,sonFormatter formatter =  prettyPrinting ?
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,546,ew JsonPrintFormatter(escapeHtmlChars) : new JsonCompactFormatter(escapeHtmlChars);
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,548,"ieldNamingPolicy, objConstructor, formatter, serializeNulls, customSerializers,"
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,546,"fieldNamingPolicy, objConstructor, serializeNulls, customSerializers,"
False,gson/src/main/java/com/google/gson/JsonArrayDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonArrayDeserializationVisitor.java,54, else { // is a collection
False,gson/src/main/java/com/google/gson/JsonArrayDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonArrayDeserializationVisitor.java,55,eturn (T) objectConstructor.construct(typeInfo.getRawClass());
True,gson/src/main/java/com/google/gson/JsonArrayDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonArrayDeserializationVisitor.java,55,// is a collection
True,gson/src/main/java/com/google/gson/JsonArrayDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonArrayDeserializationVisitor.java,56,return (T) objectConstructor.construct(typeInfo.getRawClass());
False,gson/src/main/java/com/google/gson/JsonElement.java,gson/src/main/java/com/google/gson/JsonElement.java,82, else {
False,gson/src/main/java/com/google/gson/JsonElement.java,gson/src/main/java/com/google/gson/JsonElement.java,83,"hrow new IllegalStateException(""This is not a JSON Object."");"
True,gson/src/main/java/com/google/gson/JsonElement.java,gson/src/main/java/com/google/gson/JsonElement.java,83,"throw new IllegalStateException(""This is not a JSON Object."");"
False,gson/src/main/java/com/google/gson/JsonElement.java,gson/src/main/java/com/google/gson/JsonElement.java,99, else {
False,gson/src/main/java/com/google/gson/JsonElement.java,gson/src/main/java/com/google/gson/JsonElement.java,100,"hrow new IllegalStateException(""This is not a JSON Array."");"
True,gson/src/main/java/com/google/gson/JsonElement.java,gson/src/main/java/com/google/gson/JsonElement.java,99,"throw new IllegalStateException(""This is not a JSON Array."");"
False,gson/src/main/java/com/google/gson/JsonElement.java,gson/src/main/java/com/google/gson/JsonElement.java,116, else {
False,gson/src/main/java/com/google/gson/JsonElement.java,gson/src/main/java/com/google/gson/JsonElement.java,117,"hrow new IllegalStateException(""This is not a JSON Primitive."");"
True,gson/src/main/java/com/google/gson/JsonElement.java,gson/src/main/java/com/google/gson/JsonElement.java,115,"throw new IllegalStateException(""This is not a JSON Primitive."");"
False,gson/src/main/java/com/google/gson/JsonElement.java,gson/src/main/java/com/google/gson/JsonElement.java,134, else {
False,gson/src/main/java/com/google/gson/JsonElement.java,gson/src/main/java/com/google/gson/JsonElement.java,135,"hrow new IllegalStateException(""This is not a JSON Null."");"
True,gson/src/main/java/com/google/gson/JsonElement.java,gson/src/main/java/com/google/gson/JsonElement.java,132,"throw new IllegalStateException(""This is not a JSON Null."");"
False,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,53, else {
False,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,54,eturn fieldName;
True,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,gson/src/main/java/com/google/gson/JsonFieldNameValidator.java,54,return fieldName;
False,gson/src/main/java/com/google/gson/JsonObject.java,gson/src/main/java/com/google/gson/JsonObject.java,124,f (value == null) {
False,gson/src/main/java/com/google/gson/JsonObject.java,gson/src/main/java/com/google/gson/JsonObject.java,125,eturn JsonNull.createJsonNull();
False,gson/src/main/java/com/google/gson/JsonObject.java,gson/src/main/java/com/google/gson/JsonObject.java,126, else {
False,gson/src/main/java/com/google/gson/JsonObject.java,gson/src/main/java/com/google/gson/JsonObject.java,127,eturn new JsonPrimitive(value);
True,gson/src/main/java/com/google/gson/JsonObject.java,gson/src/main/java/com/google/gson/JsonObject.java,124,return value == null ? JsonNull.createJsonNull() : new JsonPrimitive(value);
False,gson/src/main/java/com/google/gson/JsonObject.java,gson/src/main/java/com/google/gson/JsonObject.java,161, else {
False,gson/src/main/java/com/google/gson/JsonObject.java,gson/src/main/java/com/google/gson/JsonObject.java,162,eturn null;
True,gson/src/main/java/com/google/gson/JsonObject.java,gson/src/main/java/com/google/gson/JsonObject.java,158,return null;
False,gson/src/main/java/com/google/gson/JsonParser.java,gson/src/main/java/com/google/gson/JsonParser.java,74, else {
False,gson/src/main/java/com/google/gson/JsonParser.java,gson/src/main/java/com/google/gson/JsonParser.java,75,hrow e;
True,gson/src/main/java/com/google/gson/JsonParser.java,gson/src/main/java/com/google/gson/JsonParser.java,75,throw e;
False,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,129,f (isBoolean()) {
False,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,130,eturn getAsBooleanWrapper().booleanValue();
False,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,131, else {
False,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,132,eturn Boolean.parseBoolean(getAsString());
True,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,129,return isBoolean() ? getAsBooleanWrapper().booleanValue() : Boolean.parseBoolean(getAsString());
False,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,161, else {
False,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,162,eturn longValue;
True,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,158,return longValue;
False,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,208,f (isNumber()) {
False,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,209,eturn getAsNumber().doubleValue();
False,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,210, else {
False,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,211,eturn Double.parseDouble(getAsString());
True,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,203,return isNumber() ? getAsNumber().doubleValue() : Double.parseDouble(getAsString());
False,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,223,f (value instanceof BigDecimal) {
False,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,224,eturn (BigDecimal) value;
False,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,225, else {
False,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,226,eturn new BigDecimal(value.toString());
True,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,214,return value instanceof BigDecimal ? (BigDecimal) value : new BigDecimal(value.toString());
False,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,238,f (value instanceof BigInteger) {
False,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,239,eturn (BigInteger) value;
False,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,240, else {
False,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,241,eturn new BigInteger(value.toString());
True,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,225,return value instanceof BigInteger ? (BigInteger) value : new BigInteger(value.toString());
False,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,253,f (isNumber()) {
False,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,254,eturn getAsNumber().floatValue();
False,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,255, else {
False,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,256,eturn Float.parseFloat(getAsString());
True,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,236,return isNumber() ? getAsNumber().floatValue() : Float.parseFloat(getAsString());
False,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,268,f (isNumber()) {
False,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,269,eturn getAsNumber().longValue();
False,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,270, else {
False,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,271,eturn Long.parseLong(getAsString());
True,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,247,return isNumber() ? getAsNumber().longValue() : Long.parseLong(getAsString());
False,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,283,f (isNumber()) {
False,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,284,eturn getAsNumber().shortValue();
False,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,285, else {
False,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,286,eturn Short.parseShort(getAsString());
True,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,258,return isNumber() ? getAsNumber().shortValue() : Short.parseShort(getAsString());
False,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,298,f (isNumber()) {
False,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,299,eturn getAsNumber().intValue();
False,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,300, else {
False,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,301,eturn Integer.parseInt(getAsString());
True,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,269,return isNumber() ? getAsNumber().intValue() : Integer.parseInt(getAsString());
False,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,307,f (isNumber()) {
False,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,308,eturn getAsNumber().byteValue();
False,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,309, else {
False,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,310,eturn Byte.parseByte(getAsString());
True,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,274,return isNumber() ? getAsNumber().byteValue() : Byte.parseByte(getAsString());
False,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,164, else {
False,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,165,eturn false;
True,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,165,return false;
False,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,208, else {
False,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,209,eturn false;
True,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,208,return false;
False,gson/src/main/java/com/google/gson/JsonStreamParser.java,gson/src/main/java/com/google/gson/JsonStreamParser.java,91,f (e.getCause() instanceof EOFException) {
False,gson/src/main/java/com/google/gson/JsonStreamParser.java,gson/src/main/java/com/google/gson/JsonStreamParser.java,92,hrow new NoSuchElementException();
False,gson/src/main/java/com/google/gson/JsonStreamParser.java,gson/src/main/java/com/google/gson/JsonStreamParser.java,93, else {
False,gson/src/main/java/com/google/gson/JsonStreamParser.java,gson/src/main/java/com/google/gson/JsonStreamParser.java,94,hrow e;
True,gson/src/main/java/com/google/gson/JsonStreamParser.java,gson/src/main/java/com/google/gson/JsonStreamParser.java,91,throw e.getCause() instanceof EOFException ? new NoSuchElementException() : e;
False,gson/src/main/java/com/google/gson/ModifyFirstLetterNamingPolicy.java,gson/src/main/java/com/google/gson/ModifyFirstLetterNamingPolicy.java,103,f (indexOfSubstring < srcString.length()) {
False,gson/src/main/java/com/google/gson/ModifyFirstLetterNamingPolicy.java,gson/src/main/java/com/google/gson/ModifyFirstLetterNamingPolicy.java,104,eturn firstCharacter + srcString.substring(indexOfSubstring);
False,gson/src/main/java/com/google/gson/ModifyFirstLetterNamingPolicy.java,gson/src/main/java/com/google/gson/ModifyFirstLetterNamingPolicy.java,105, else {
False,gson/src/main/java/com/google/gson/ModifyFirstLetterNamingPolicy.java,gson/src/main/java/com/google/gson/ModifyFirstLetterNamingPolicy.java,106,eturn String.valueOf(firstCharacter);
True,gson/src/main/java/com/google/gson/ModifyFirstLetterNamingPolicy.java,gson/src/main/java/com/google/gson/ModifyFirstLetterNamingPolicy.java,103,return indexOfSubstring < srcString.length() ?
True,gson/src/main/java/com/google/gson/ModifyFirstLetterNamingPolicy.java,gson/src/main/java/com/google/gson/ModifyFirstLetterNamingPolicy.java,104,firstCharacter + srcString.substring(indexOfSubstring)
True,gson/src/main/java/com/google/gson/ModifyFirstLetterNamingPolicy.java,gson/src/main/java/com/google/gson/ModifyFirstLetterNamingPolicy.java,105,: String.valueOf(firstCharacter);
False,gson/src/main/java/com/google/gson/ObjectNavigator.java,gson/src/main/java/com/google/gson/ObjectNavigator.java,155, else {
False,gson/src/main/java/com/google/gson/ObjectNavigator.java,gson/src/main/java/com/google/gson/ObjectNavigator.java,156,"ypeInfo fieldTypeInfo = TypeInfoFactory.getTypeInfoForField(f, objTypePair.type);"
False,gson/src/main/java/com/google/gson/ObjectNavigator.java,gson/src/main/java/com/google/gson/ObjectNavigator.java,157,ype declaredTypeOfField = fieldTypeInfo.getActualType();
False,gson/src/main/java/com/google/gson/ObjectNavigator.java,gson/src/main/java/com/google/gson/ObjectNavigator.java,158,oolean visitedWithCustomHandler =
False,gson/src/main/java/com/google/gson/ObjectNavigator.java,gson/src/main/java/com/google/gson/ObjectNavigator.java,159,"isitor.visitFieldUsingCustomHandler(fieldAttributes, declaredTypeOfField, obj);"
False,gson/src/main/java/com/google/gson/ObjectNavigator.java,gson/src/main/java/com/google/gson/ObjectNavigator.java,160,f (!visitedWithCustomHandler) {
False,gson/src/main/java/com/google/gson/ObjectNavigator.java,gson/src/main/java/com/google/gson/ObjectNavigator.java,161,f (fieldTypeInfo.isArray()) {
False,gson/src/main/java/com/google/gson/ObjectNavigator.java,gson/src/main/java/com/google/gson/ObjectNavigator.java,162,"isitor.visitArrayField(fieldAttributes, declaredTypeOfField, obj);"
False,gson/src/main/java/com/google/gson/ObjectNavigator.java,gson/src/main/java/com/google/gson/ObjectNavigator.java,163, else {
False,gson/src/main/java/com/google/gson/ObjectNavigator.java,gson/src/main/java/com/google/gson/ObjectNavigator.java,164,"isitor.visitObjectField(fieldAttributes, declaredTypeOfField, obj);"
True,gson/src/main/java/com/google/gson/ObjectNavigator.java,gson/src/main/java/com/google/gson/ObjectNavigator.java,156,"TypeInfo fieldTypeInfo = TypeInfoFactory.getTypeInfoForField(f, objTypePair.type);"
True,gson/src/main/java/com/google/gson/ObjectNavigator.java,gson/src/main/java/com/google/gson/ObjectNavigator.java,157,Type declaredTypeOfField = fieldTypeInfo.getActualType();
True,gson/src/main/java/com/google/gson/ObjectNavigator.java,gson/src/main/java/com/google/gson/ObjectNavigator.java,158,boolean visitedWithCustomHandler =
True,gson/src/main/java/com/google/gson/ObjectNavigator.java,gson/src/main/java/com/google/gson/ObjectNavigator.java,159,"visitor.visitFieldUsingCustomHandler(fieldAttributes, declaredTypeOfField, obj);"
True,gson/src/main/java/com/google/gson/ObjectNavigator.java,gson/src/main/java/com/google/gson/ObjectNavigator.java,160,if (!visitedWithCustomHandler) {
True,gson/src/main/java/com/google/gson/ObjectNavigator.java,gson/src/main/java/com/google/gson/ObjectNavigator.java,161,if (fieldTypeInfo.isArray()) {
True,gson/src/main/java/com/google/gson/ObjectNavigator.java,gson/src/main/java/com/google/gson/ObjectNavigator.java,162,"visitor.visitArrayField(fieldAttributes, declaredTypeOfField, obj);"
True,gson/src/main/java/com/google/gson/ObjectNavigator.java,gson/src/main/java/com/google/gson/ObjectNavigator.java,163,} else {
True,gson/src/main/java/com/google/gson/ObjectNavigator.java,gson/src/main/java/com/google/gson/ObjectNavigator.java,164,"visitor.visitObjectField(fieldAttributes, declaredTypeOfField, obj);"
False,gson/src/main/java/com/google/gson/ParameterizedTypeImpl.java,gson/src/main/java/com/google/gson/ParameterizedTypeImpl.java,71, else {
False,gson/src/main/java/com/google/gson/ParameterizedTypeImpl.java,gson/src/main/java/com/google/gson/ParameterizedTypeImpl.java,72,/ Check that information is equivalent
False,gson/src/main/java/com/google/gson/ParameterizedTypeImpl.java,gson/src/main/java/com/google/gson/ParameterizedTypeImpl.java,73,arameterizedType that = (ParameterizedType) o;
False,gson/src/main/java/com/google/gson/ParameterizedTypeImpl.java,gson/src/main/java/com/google/gson/ParameterizedTypeImpl.java,74,f (this  == that)
True,gson/src/main/java/com/google/gson/ParameterizedTypeImpl.java,gson/src/main/java/com/google/gson/ParameterizedTypeImpl.java,72,// Check that information is equivalent
True,gson/src/main/java/com/google/gson/ParameterizedTypeImpl.java,gson/src/main/java/com/google/gson/ParameterizedTypeImpl.java,73,ParameterizedType that = (ParameterizedType) o;
True,gson/src/main/java/com/google/gson/ParameterizedTypeImpl.java,gson/src/main/java/com/google/gson/ParameterizedTypeImpl.java,74,if (this  == that) {
False,gson/src/main/java/com/google/gson/ParameterizedTypeImpl.java,gson/src/main/java/com/google/gson/ParameterizedTypeImpl.java,77,ype thatOwner = that.getOwnerType();
False,gson/src/main/java/com/google/gson/ParameterizedTypeImpl.java,gson/src/main/java/com/google/gson/ParameterizedTypeImpl.java,78,ype thatRawType = that.getRawType();
False,gson/src/main/java/com/google/gson/ParameterizedTypeImpl.java,gson/src/main/java/com/google/gson/ParameterizedTypeImpl.java,80,eturn (owner == null ? thatOwner == null : owner.equals(thatOwner))
False,gson/src/main/java/com/google/gson/ParameterizedTypeImpl.java,gson/src/main/java/com/google/gson/ParameterizedTypeImpl.java,81,& (rawType == null ? thatRawType == null : rawType.equals(thatRawType))
False,gson/src/main/java/com/google/gson/ParameterizedTypeImpl.java,gson/src/main/java/com/google/gson/ParameterizedTypeImpl.java,82,"& Arrays.equals(actualTypeArguments, that.getActualTypeArguments());"
True,gson/src/main/java/com/google/gson/ParameterizedTypeImpl.java,gson/src/main/java/com/google/gson/ParameterizedTypeImpl.java,77,Type thatOwner = that.getOwnerType();
True,gson/src/main/java/com/google/gson/ParameterizedTypeImpl.java,gson/src/main/java/com/google/gson/ParameterizedTypeImpl.java,78,Type thatRawType = that.getRawType();
True,gson/src/main/java/com/google/gson/ParameterizedTypeImpl.java,gson/src/main/java/com/google/gson/ParameterizedTypeImpl.java,80,return (owner == null ? thatOwner == null : owner.equals(thatOwner))
True,gson/src/main/java/com/google/gson/ParameterizedTypeImpl.java,gson/src/main/java/com/google/gson/ParameterizedTypeImpl.java,81,&& (rawType == null ? thatRawType == null : rawType.equals(thatRawType))
True,gson/src/main/java/com/google/gson/ParameterizedTypeImpl.java,gson/src/main/java/com/google/gson/ParameterizedTypeImpl.java,82,"&& Arrays.equals(actualTypeArguments, that.getActualTypeArguments());"
False,gson/src/main/java/com/google/gson/SerializedNameAnnotationInterceptingNamingPolicy.java,gson/src/main/java/com/google/gson/SerializedNameAnnotationInterceptingNamingPolicy.java,45,f (serializedName != null) {
False,gson/src/main/java/com/google/gson/SerializedNameAnnotationInterceptingNamingPolicy.java,gson/src/main/java/com/google/gson/SerializedNameAnnotationInterceptingNamingPolicy.java,46,eturn fieldNameValidator.validate(serializedName.value());
False,gson/src/main/java/com/google/gson/SerializedNameAnnotationInterceptingNamingPolicy.java,gson/src/main/java/com/google/gson/SerializedNameAnnotationInterceptingNamingPolicy.java,47, else {
False,gson/src/main/java/com/google/gson/SerializedNameAnnotationInterceptingNamingPolicy.java,gson/src/main/java/com/google/gson/SerializedNameAnnotationInterceptingNamingPolicy.java,48,eturn delegate.translateName(f);
True,gson/src/main/java/com/google/gson/SerializedNameAnnotationInterceptingNamingPolicy.java,gson/src/main/java/com/google/gson/SerializedNameAnnotationInterceptingNamingPolicy.java,45,return serializedName == null ? delegate.translateName(f)
True,gson/src/main/java/com/google/gson/SerializedNameAnnotationInterceptingNamingPolicy.java,gson/src/main/java/com/google/gson/SerializedNameAnnotationInterceptingNamingPolicy.java,46,: fieldNameValidator.validate(serializedName.value());
False,gson/src/main/java/com/google/gson/TypeInfoArray.java,gson/src/main/java/com/google/gson/TypeInfoArray.java,43,f (actualType instanceof GenericArrayType) {
False,gson/src/main/java/com/google/gson/TypeInfoArray.java,gson/src/main/java/com/google/gson/TypeInfoArray.java,44,enericArrayType castedType = (GenericArrayType) actualType;
False,gson/src/main/java/com/google/gson/TypeInfoArray.java,gson/src/main/java/com/google/gson/TypeInfoArray.java,45,eturn castedType.getGenericComponentType();
False,gson/src/main/java/com/google/gson/TypeInfoArray.java,gson/src/main/java/com/google/gson/TypeInfoArray.java,46, else {
False,gson/src/main/java/com/google/gson/TypeInfoArray.java,gson/src/main/java/com/google/gson/TypeInfoArray.java,47,eturn rawClass.getComponentType();
True,gson/src/main/java/com/google/gson/TypeInfoArray.java,gson/src/main/java/com/google/gson/TypeInfoArray.java,43,return actualType instanceof GenericArrayType ?
True,gson/src/main/java/com/google/gson/TypeInfoArray.java,gson/src/main/java/com/google/gson/TypeInfoArray.java,44,((GenericArrayType) actualType).getGenericComponentType() : rawClass.getComponentType();
False,gson/src/main/java/com/google/gson/TypeInfoFactory.java,gson/src/main/java/com/google/gson/TypeInfoFactory.java,75, else {
False,gson/src/main/java/com/google/gson/TypeInfoFactory.java,gson/src/main/java/com/google/gson/TypeInfoFactory.java,76,f (actualType instanceof Class<?>) {
False,gson/src/main/java/com/google/gson/TypeInfoFactory.java,gson/src/main/java/com/google/gson/TypeInfoFactory.java,77,eturn TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType));
False,gson/src/main/java/com/google/gson/TypeInfoFactory.java,gson/src/main/java/com/google/gson/TypeInfoFactory.java,78, else {
False,gson/src/main/java/com/google/gson/TypeInfoFactory.java,gson/src/main/java/com/google/gson/TypeInfoFactory.java,79,eturn new GenericArrayTypeImpl(actualType);
True,gson/src/main/java/com/google/gson/TypeInfoFactory.java,gson/src/main/java/com/google/gson/TypeInfoFactory.java,76,return actualType instanceof Class<?> ?
True,gson/src/main/java/com/google/gson/TypeInfoFactory.java,gson/src/main/java/com/google/gson/TypeInfoFactory.java,77,TypeUtils.wrapWithArray(TypeUtils.toRawClass(actualType))
True,gson/src/main/java/com/google/gson/TypeInfoFactory.java,gson/src/main/java/com/google/gson/TypeInfoFactory.java,78,: new GenericArrayTypeImpl(actualType);
False,gson/src/main/java/com/google/gson/TypeInfoFactory.java,gson/src/main/java/com/google/gson/TypeInfoFactory.java,96, else {
False,gson/src/main/java/com/google/gson/TypeInfoFactory.java,gson/src/main/java/com/google/gson/TypeInfoFactory.java,97,"hrow new UnsupportedOperationException(""Expecting parameterized type, got "" + parentType"
False,gson/src/main/java/com/google/gson/TypeInfoFactory.java,gson/src/main/java/com/google/gson/TypeInfoFactory.java,98," "".\n Are you missing the use of TypeToken idiom?\n See """
False,gson/src/main/java/com/google/gson/TypeInfoFactory.java,gson/src/main/java/com/google/gson/TypeInfoFactory.java,99," ""http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener"");"
True,gson/src/main/java/com/google/gson/TypeInfoFactory.java,gson/src/main/java/com/google/gson/TypeInfoFactory.java,94,"throw new UnsupportedOperationException(""Expecting parameterized type, got "" + parentType"
True,gson/src/main/java/com/google/gson/TypeInfoFactory.java,gson/src/main/java/com/google/gson/TypeInfoFactory.java,95,"+ "".\n Are you missing the use of TypeToken idiom?\n See """
True,gson/src/main/java/com/google/gson/TypeInfoFactory.java,gson/src/main/java/com/google/gson/TypeInfoFactory.java,96,"+ ""http://sites.google.com/site/gson/gson-user-guide#TOC-Serializing-and-Deserializing-Gener"");"
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,384, else {
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,385,"hrow syntaxError(""Expected EOF"");"
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,385,"throw syntaxError(""Expected EOF"");"
False,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,44,"son.DEFAULT_JSON_FORMATTER, false, DefaultTypeAdapters.getDefaultSerializers(),"
True,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,gson/src/test/java/com/google/gson/FunctionWithInternalDependenciesTest.java,44,"false, DefaultTypeAdapters.getDefaultSerializers(),"
False,gson/src/test/java/com/google/gson/MixedStreamTest.java,gson/src/test/java/com/google/gson/MixedStreamTest.java,226,"SuppressWarnings(""unused"") // used by Gson"
True,gson/src/test/java/com/google/gson/MixedStreamTest.java,gson/src/test/java/com/google/gson/MixedStreamTest.java,226,// used by Gson
False,gson/src/test/java/com/google/gson/PrimitiveTypeAdapter.java,gson/src/test/java/com/google/gson/PrimitiveTypeAdapter.java,42, else {
False,gson/src/test/java/com/google/gson/PrimitiveTypeAdapter.java,gson/src/test/java/com/google/gson/PrimitiveTypeAdapter.java,43,"hrow new JsonParseException(""The value: "" + value + "" contains more than a character."");"
True,gson/src/test/java/com/google/gson/PrimitiveTypeAdapter.java,gson/src/test/java/com/google/gson/PrimitiveTypeAdapter.java,43,"throw new JsonParseException(""The value: "" + value + "" contains more than a character."");"
False,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,236, else {
False,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,237,umber number = json.getAsJsonPrimitive().getAsNumber();
False,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,238,eturn number == null ? null : number.longValue();
True,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,237,Number number = json.getAsJsonPrimitive().getAsNumber();
True,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,238,return number == null ? null : number.longValue();
False,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,19,mport com.google.gson.Gson;
False,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,20,mport com.google.gson.common.MoreAsserts;
False,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,21,mport com.google.gson.reflect.TypeToken;
False,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,23,mport java.util.Arrays;
True,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,19,import java.lang.reflect.Type;
True,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,20,import java.util.ArrayList;
True,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,21,import java.util.Collection;
False,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,25,mport java.util.List;
False,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,29,mport java.lang.reflect.Type;
False,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,30,mport java.util.ArrayList;
False,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,31,mport java.util.Collection;
True,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,27,import com.google.gson.Gson;
True,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,28,import com.google.gson.common.MoreAsserts;
True,gson/src/test/java/com/google/gson/functional/EnumTest.java,gson/src/test/java/com/google/gson/functional/EnumTest.java,29,import com.google.gson.reflect.TypeToken;
