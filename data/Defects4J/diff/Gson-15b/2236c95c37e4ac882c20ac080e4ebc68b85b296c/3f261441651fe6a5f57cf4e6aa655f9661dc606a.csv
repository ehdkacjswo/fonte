is_addition,old_file_path,new_file_path,line_num,content
False,gson/src/main/java/com/google/gson/JsonDeserializationContext.java,gson/src/main/java/com/google/gson/JsonDeserializationContext.java,64,"ublic <T> T deserializeDefault(JsonElement json, Type typeOfT) throws JsonParseException {"
False,gson/src/main/java/com/google/gson/JsonDeserializationContext.java,gson/src/main/java/com/google/gson/JsonDeserializationContext.java,65,hrow new UnsupportedOperationException();
False,gson/src/main/java/com/google/gson/JsonSerializationContext.java,gson/src/main/java/com/google/gson/JsonSerializationContext.java,60,"ublic JsonElement serializeDefault(Object src, Type typeOfSrc) {"
False,gson/src/main/java/com/google/gson/JsonSerializationContext.java,gson/src/main/java/com/google/gson/JsonSerializationContext.java,61,hrow new UnsupportedOperationException();
False,gson/src/test/java/com/google/gson/functional/SystemOnlyTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/SystemOnlyTypeAdaptersTest.java,2, Copyright (C) 2011 Google Inc.
False,gson/src/test/java/com/google/gson/functional/SystemOnlyTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/SystemOnlyTypeAdaptersTest.java,4," Licensed under the Apache License, Version 2.0 (the ""License"");"
False,gson/src/test/java/com/google/gson/functional/SystemOnlyTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/SystemOnlyTypeAdaptersTest.java,5, you may not use this file except in compliance with the License.
False,gson/src/test/java/com/google/gson/functional/SystemOnlyTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/SystemOnlyTypeAdaptersTest.java,6, You may obtain a copy of the License at
False,gson/src/test/java/com/google/gson/functional/SystemOnlyTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/SystemOnlyTypeAdaptersTest.java,8, http://www.apache.org/licenses/LICENSE-2.0
False,gson/src/test/java/com/google/gson/functional/SystemOnlyTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/SystemOnlyTypeAdaptersTest.java,10," Unless required by applicable law or agreed to in writing, software"
False,gson/src/test/java/com/google/gson/functional/SystemOnlyTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/SystemOnlyTypeAdaptersTest.java,11," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,gson/src/test/java/com/google/gson/functional/SystemOnlyTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/SystemOnlyTypeAdaptersTest.java,12," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,gson/src/test/java/com/google/gson/functional/SystemOnlyTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/SystemOnlyTypeAdaptersTest.java,13, See the License for the specific language governing permissions and
False,gson/src/test/java/com/google/gson/functional/SystemOnlyTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/SystemOnlyTypeAdaptersTest.java,14, limitations under the License.
False,gson/src/test/java/com/google/gson/functional/SystemOnlyTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/SystemOnlyTypeAdaptersTest.java,16,ackage com.google.gson.functional;
False,gson/src/test/java/com/google/gson/functional/SystemOnlyTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/SystemOnlyTypeAdaptersTest.java,18,mport java.lang.reflect.Type;
False,gson/src/test/java/com/google/gson/functional/SystemOnlyTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/SystemOnlyTypeAdaptersTest.java,20,mport junit.framework.TestCase;
False,gson/src/test/java/com/google/gson/functional/SystemOnlyTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/SystemOnlyTypeAdaptersTest.java,22,mport com.google.gson.Gson;
False,gson/src/test/java/com/google/gson/functional/SystemOnlyTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/SystemOnlyTypeAdaptersTest.java,23,mport com.google.gson.GsonBuilder;
False,gson/src/test/java/com/google/gson/functional/SystemOnlyTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/SystemOnlyTypeAdaptersTest.java,24,mport com.google.gson.JsonDeserializationContext;
False,gson/src/test/java/com/google/gson/functional/SystemOnlyTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/SystemOnlyTypeAdaptersTest.java,25,mport com.google.gson.JsonDeserializer;
False,gson/src/test/java/com/google/gson/functional/SystemOnlyTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/SystemOnlyTypeAdaptersTest.java,26,mport com.google.gson.JsonElement;
False,gson/src/test/java/com/google/gson/functional/SystemOnlyTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/SystemOnlyTypeAdaptersTest.java,27,mport com.google.gson.JsonObject;
False,gson/src/test/java/com/google/gson/functional/SystemOnlyTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/SystemOnlyTypeAdaptersTest.java,28,mport com.google.gson.JsonParseException;
False,gson/src/test/java/com/google/gson/functional/SystemOnlyTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/SystemOnlyTypeAdaptersTest.java,29,mport com.google.gson.JsonSerializationContext;
False,gson/src/test/java/com/google/gson/functional/SystemOnlyTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/SystemOnlyTypeAdaptersTest.java,30,mport com.google.gson.JsonSerializer;
False,gson/src/test/java/com/google/gson/functional/SystemOnlyTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/SystemOnlyTypeAdaptersTest.java,33, Functional tests for serialize default behavior where a custom type adapter is allowed to invoke
False,gson/src/test/java/com/google/gson/functional/SystemOnlyTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/SystemOnlyTypeAdaptersTest.java,34, context.serialize on self.
False,gson/src/test/java/com/google/gson/functional/SystemOnlyTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/SystemOnlyTypeAdaptersTest.java,36, @author Inderjeet Singh
False,gson/src/test/java/com/google/gson/functional/SystemOnlyTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/SystemOnlyTypeAdaptersTest.java,38,ublic class SystemOnlyTypeAdaptersTest extends TestCase {
False,gson/src/test/java/com/google/gson/functional/SystemOnlyTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/SystemOnlyTypeAdaptersTest.java,40,rivate Gson gson;
False,gson/src/test/java/com/google/gson/functional/SystemOnlyTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/SystemOnlyTypeAdaptersTest.java,41,Override
False,gson/src/test/java/com/google/gson/functional/SystemOnlyTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/SystemOnlyTypeAdaptersTest.java,42,rotected void setUp() throws Exception {
False,gson/src/test/java/com/google/gson/functional/SystemOnlyTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/SystemOnlyTypeAdaptersTest.java,43,uper.setUp();
False,gson/src/test/java/com/google/gson/functional/SystemOnlyTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/SystemOnlyTypeAdaptersTest.java,44,"his.gson = new GsonBuilder().registerTypeAdapter(Foo.class, new FooTypeAdapter()).create();"
False,gson/src/test/java/com/google/gson/functional/SystemOnlyTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/SystemOnlyTypeAdaptersTest.java,47,ublic void testSerializeDefault() {
False,gson/src/test/java/com/google/gson/functional/SystemOnlyTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/SystemOnlyTypeAdaptersTest.java,48,tring json = gson.toJson(new Foo());
False,gson/src/test/java/com/google/gson/functional/SystemOnlyTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/SystemOnlyTypeAdaptersTest.java,49,"ssertEquals(""{\""a\"":10,\""secret-key\"":\""abracadabra\""}"", json);"
False,gson/src/test/java/com/google/gson/functional/SystemOnlyTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/SystemOnlyTypeAdaptersTest.java,52,ublic void testDeserializeDefault() {
False,gson/src/test/java/com/google/gson/functional/SystemOnlyTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/SystemOnlyTypeAdaptersTest.java,53,"tring json = ""{a:5,'secret-key':'abracadabra'}"";"
False,gson/src/test/java/com/google/gson/functional/SystemOnlyTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/SystemOnlyTypeAdaptersTest.java,54,"oo foo = gson.fromJson(json, Foo.class);"
False,gson/src/test/java/com/google/gson/functional/SystemOnlyTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/SystemOnlyTypeAdaptersTest.java,55,"ssertEquals(5, foo.a);"
False,gson/src/test/java/com/google/gson/functional/SystemOnlyTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/SystemOnlyTypeAdaptersTest.java,58,rivate static class Foo {
False,gson/src/test/java/com/google/gson/functional/SystemOnlyTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/SystemOnlyTypeAdaptersTest.java,59,nt a = 10;
False,gson/src/test/java/com/google/gson/functional/SystemOnlyTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/SystemOnlyTypeAdaptersTest.java,62,"rivate static class FooTypeAdapter implements JsonSerializer<Foo>, JsonDeserializer<Foo> {"
False,gson/src/test/java/com/google/gson/functional/SystemOnlyTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/SystemOnlyTypeAdaptersTest.java,63,"ublic JsonElement serialize(Foo src, Type typeOfSrc, JsonSerializationContext context) {"
False,gson/src/test/java/com/google/gson/functional/SystemOnlyTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/SystemOnlyTypeAdaptersTest.java,64,"sonObject json = context.serializeDefault(src, typeOfSrc).getAsJsonObject();"
False,gson/src/test/java/com/google/gson/functional/SystemOnlyTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/SystemOnlyTypeAdaptersTest.java,65,"son.addProperty(""secret-key"", ""abracadabra"");"
False,gson/src/test/java/com/google/gson/functional/SystemOnlyTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/SystemOnlyTypeAdaptersTest.java,66,eturn json;
False,gson/src/test/java/com/google/gson/functional/SystemOnlyTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/SystemOnlyTypeAdaptersTest.java,69,"ublic Foo deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context)"
False,gson/src/test/java/com/google/gson/functional/SystemOnlyTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/SystemOnlyTypeAdaptersTest.java,70,hrows JsonParseException {
False,gson/src/test/java/com/google/gson/functional/SystemOnlyTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/SystemOnlyTypeAdaptersTest.java,71,"f (!""abracadabra"".equals(json.getAsJsonObject().get(""secret-key"").getAsString())) {"
False,gson/src/test/java/com/google/gson/functional/SystemOnlyTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/SystemOnlyTypeAdaptersTest.java,72,"hrow new IllegalArgumentException(""invalid key"");"
False,gson/src/test/java/com/google/gson/functional/SystemOnlyTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/SystemOnlyTypeAdaptersTest.java,74,"eturn context.deserializeDefault(json, typeOfT);"
