is_addition,old_file_path,new_file_path,line_num,content
True,gson/src/main/java/com/google/gson/internal/JsonReaderInternalAccess.java,gson/src/main/java/com/google/gson/internal/JsonReaderInternalAccess.java,2,* Copyright (C) 2011 Google Inc.
True,gson/src/main/java/com/google/gson/internal/JsonReaderInternalAccess.java,gson/src/main/java/com/google/gson/internal/JsonReaderInternalAccess.java,4,"* Licensed under the Apache License, Version 2.0 (the ""License"");"
True,gson/src/main/java/com/google/gson/internal/JsonReaderInternalAccess.java,gson/src/main/java/com/google/gson/internal/JsonReaderInternalAccess.java,5,* you may not use this file except in compliance with the License.
True,gson/src/main/java/com/google/gson/internal/JsonReaderInternalAccess.java,gson/src/main/java/com/google/gson/internal/JsonReaderInternalAccess.java,6,* You may obtain a copy of the License at
True,gson/src/main/java/com/google/gson/internal/JsonReaderInternalAccess.java,gson/src/main/java/com/google/gson/internal/JsonReaderInternalAccess.java,8,*      http://www.apache.org/licenses/LICENSE-2.0
True,gson/src/main/java/com/google/gson/internal/JsonReaderInternalAccess.java,gson/src/main/java/com/google/gson/internal/JsonReaderInternalAccess.java,10,"* Unless required by applicable law or agreed to in writing, software"
True,gson/src/main/java/com/google/gson/internal/JsonReaderInternalAccess.java,gson/src/main/java/com/google/gson/internal/JsonReaderInternalAccess.java,11,"* distributed under the License is distributed on an ""AS IS"" BASIS,"
True,gson/src/main/java/com/google/gson/internal/JsonReaderInternalAccess.java,gson/src/main/java/com/google/gson/internal/JsonReaderInternalAccess.java,12,"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,gson/src/main/java/com/google/gson/internal/JsonReaderInternalAccess.java,gson/src/main/java/com/google/gson/internal/JsonReaderInternalAccess.java,13,* See the License for the specific language governing permissions and
True,gson/src/main/java/com/google/gson/internal/JsonReaderInternalAccess.java,gson/src/main/java/com/google/gson/internal/JsonReaderInternalAccess.java,14,* limitations under the License.
True,gson/src/main/java/com/google/gson/internal/JsonReaderInternalAccess.java,gson/src/main/java/com/google/gson/internal/JsonReaderInternalAccess.java,17,package com.google.gson.internal;
True,gson/src/main/java/com/google/gson/internal/JsonReaderInternalAccess.java,gson/src/main/java/com/google/gson/internal/JsonReaderInternalAccess.java,19,import com.google.gson.stream.JsonReader;
True,gson/src/main/java/com/google/gson/internal/JsonReaderInternalAccess.java,gson/src/main/java/com/google/gson/internal/JsonReaderInternalAccess.java,20,import java.io.IOException;
True,gson/src/main/java/com/google/gson/internal/JsonReaderInternalAccess.java,gson/src/main/java/com/google/gson/internal/JsonReaderInternalAccess.java,23,* Internal-only APIs of JsonReader available only to other classes in Gson.
True,gson/src/main/java/com/google/gson/internal/JsonReaderInternalAccess.java,gson/src/main/java/com/google/gson/internal/JsonReaderInternalAccess.java,25,public abstract class JsonReaderInternalAccess {
True,gson/src/main/java/com/google/gson/internal/JsonReaderInternalAccess.java,gson/src/main/java/com/google/gson/internal/JsonReaderInternalAccess.java,26,public static JsonReaderInternalAccess INSTANCE;
True,gson/src/main/java/com/google/gson/internal/JsonReaderInternalAccess.java,gson/src/main/java/com/google/gson/internal/JsonReaderInternalAccess.java,29,* Changes the type of the current property name token to a string value.
True,gson/src/main/java/com/google/gson/internal/JsonReaderInternalAccess.java,gson/src/main/java/com/google/gson/internal/JsonReaderInternalAccess.java,31,public abstract void promoteNameToValue(JsonReader reader) throws IOException;
True,gson/src/main/java/com/google/gson/internal/bind/MapTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/MapTypeAdapterFactory.java,26,import com.google.gson.internal.JsonReaderInternalAccess;
False,gson/src/main/java/com/google/gson/internal/bind/MapTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/MapTypeAdapterFactory.java,183,tring keyString = reader.nextName();
False,gson/src/main/java/com/google/gson/internal/bind/MapTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/MapTypeAdapterFactory.java,184, key = keyTypeAdapter.fromJsonElement(new JsonPrimitive(keyString));
True,gson/src/main/java/com/google/gson/internal/bind/MapTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/MapTypeAdapterFactory.java,184,JsonReaderInternalAccess.INSTANCE.promoteNameToValue(reader);
True,gson/src/main/java/com/google/gson/internal/bind/MapTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/MapTypeAdapterFactory.java,185,K key = keyTypeAdapter.read(reader);
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,19,import com.google.gson.internal.JsonReaderInternalAccess;
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1172,static {
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1173,JsonReaderInternalAccess.INSTANCE = new JsonReaderInternalAccess() {
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1174,@Override public void promoteNameToValue(JsonReader reader) throws IOException {
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1175,reader.quickPeek();
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1176,if (reader.token != JsonToken.NAME) {
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1177,"throw new IllegalStateException(""Expected a name but was "" + reader.peek());"
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1179,reader.value = reader.name;
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1180,reader.name = null;
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1181,reader.token = JsonToken.STRING;
