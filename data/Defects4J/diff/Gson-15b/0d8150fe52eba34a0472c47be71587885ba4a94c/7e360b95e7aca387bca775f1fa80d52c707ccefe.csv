is_addition,old_file_path,new_file_path,line_num,content
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,67,rivate static final BooleanCreator BOOLEAN_CREATOR = new BooleanCreator();
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,68,rivate static final ByteCreator BYTE_CREATOR = new ByteCreator();
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,69,rivate static final CharacterCreator CHARACTER_CREATOR = new CharacterCreator();
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,70,rivate static final DoubleCreator DOUBLE_CREATOR = new DoubleCreator();
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,71,rivate static final FloatCreator FLOAT_CREATOR = new FloatCreator();
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,72,rivate static final IntegerCreator INTEGER_CREATOR = new IntegerCreator();
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,73,rivate static final LongCreator LONG_CREATOR = new LongCreator();
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,74,rivate static final ShortCreator SHORT_CREATOR = new ShortCreator();
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,67,private static final BooleanTypeAdapter BOOLEAN_TYPE_ADAPTER = new BooleanTypeAdapter();
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,68,private static final ByteTypeAdapter BYTE_TYPE_ADAPTER = new ByteTypeAdapter();
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,69,private static final CharacterTypeAdapter CHARACTER_TYPE_ADAPTER = new CharacterTypeAdapter();
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,70,private static final DoubleTypeAdapter DOUBLE_TYPE_ADAPTER = new DoubleTypeAdapter();
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,71,private static final FloatTypeAdapter FLOAT_TYPE_ADAPTER = new FloatTypeAdapter();
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,72,private static final IntegerTypeAdapter INTEGER_TYPE_ADAPTER = new IntegerTypeAdapter();
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,73,private static final LongTypeAdapter LONG_TYPE_ADAPTER = new LongTypeAdapter();
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,74,private static final ShortTypeAdapter SHORT_TYPE_ADAPTER = new ShortTypeAdapter();
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,75,private static final StringTypeAdapter STRING_TYPE_ADAPTER = new StringTypeAdapter();
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,104,// Add primitive serializers
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,105,"map.register(Boolean.class, BOOLEAN_TYPE_ADAPTER);"
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,106,"map.register(boolean.class, BOOLEAN_TYPE_ADAPTER);"
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,107,"map.register(Byte.class, BYTE_TYPE_ADAPTER);"
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,108,"map.register(byte.class, BYTE_TYPE_ADAPTER);"
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,109,"map.register(Character.class, CHARACTER_TYPE_ADAPTER);"
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,110,"map.register(char.class, CHARACTER_TYPE_ADAPTER);"
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,111,"map.register(Double.class, DOUBLE_TYPE_ADAPTER);"
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,112,"map.register(double.class, DOUBLE_TYPE_ADAPTER);"
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,113,"map.register(Float.class, FLOAT_TYPE_ADAPTER);"
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,114,"map.register(float.class, FLOAT_TYPE_ADAPTER);"
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,115,"map.register(Integer.class, INTEGER_TYPE_ADAPTER);"
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,116,"map.register(int.class, INTEGER_TYPE_ADAPTER);"
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,117,"map.register(Long.class, LONG_TYPE_ADAPTER);"
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,118,"map.register(long.class, LONG_TYPE_ADAPTER);"
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,119,"map.register(Short.class, SHORT_TYPE_ADAPTER);"
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,120,"map.register(short.class, SHORT_TYPE_ADAPTER);"
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,121,"map.register(String.class, STRING_TYPE_ADAPTER);"
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,140,// Add primitive deserializers
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,141,"map.register(Boolean.class, wrapDeserializer(BOOLEAN_TYPE_ADAPTER));"
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,142,"map.register(boolean.class, wrapDeserializer(BOOLEAN_TYPE_ADAPTER));"
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,143,"map.register(Byte.class, wrapDeserializer(BYTE_TYPE_ADAPTER));"
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,144,"map.register(byte.class, wrapDeserializer(BYTE_TYPE_ADAPTER));"
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,145,"map.register(Character.class, wrapDeserializer(CHARACTER_TYPE_ADAPTER));"
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,146,"map.register(char.class, wrapDeserializer(CHARACTER_TYPE_ADAPTER));"
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,147,"map.register(Double.class, wrapDeserializer(DOUBLE_TYPE_ADAPTER));"
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,148,"map.register(double.class, wrapDeserializer(DOUBLE_TYPE_ADAPTER));"
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,149,"map.register(Float.class, wrapDeserializer(FLOAT_TYPE_ADAPTER));"
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,150,"map.register(float.class, wrapDeserializer(FLOAT_TYPE_ADAPTER));"
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,151,"map.register(Integer.class, wrapDeserializer(INTEGER_TYPE_ADAPTER));"
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,152,"map.register(int.class, wrapDeserializer(INTEGER_TYPE_ADAPTER));"
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,153,"map.register(Long.class, wrapDeserializer(LONG_TYPE_ADAPTER));"
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,154,"map.register(long.class, wrapDeserializer(LONG_TYPE_ADAPTER));"
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,155,"map.register(Short.class, wrapDeserializer(SHORT_TYPE_ADAPTER));"
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,156,"map.register(short.class, wrapDeserializer(SHORT_TYPE_ADAPTER));"
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,157,"map.register(String.class, wrapDeserializer(STRING_TYPE_ADAPTER));"
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,127,"ap.register(Collection.class, COLLECTION_TYPE_ADAPTER);"
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,133,"ap.register(Boolean.class, BOOLEAN_CREATOR);"
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,134,"ap.register(boolean.class, BOOLEAN_CREATOR);"
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,135,"ap.register(Byte.class, BYTE_CREATOR);"
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,136,"ap.register(byte.class, BYTE_CREATOR);"
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,137,"ap.register(Character.class, CHARACTER_CREATOR);"
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,138,"ap.register(char.class, CHARACTER_CREATOR);"
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,139,"ap.register(Double.class, DOUBLE_CREATOR);"
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,140,"ap.register(double.class, DOUBLE_CREATOR);"
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,141,"ap.register(Float.class, FLOAT_CREATOR);"
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,142,"ap.register(float.class, FLOAT_CREATOR);"
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,143,"ap.register(Integer.class, INTEGER_CREATOR);"
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,144,"ap.register(int.class, INTEGER_CREATOR);"
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,145,"ap.register(Long.class, LONG_CREATOR);"
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,146,"ap.register(long.class, LONG_CREATOR);"
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,147,"ap.register(Short.class, SHORT_CREATOR);"
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,148,"ap.register(short.class, SHORT_CREATOR);"
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,150,"ap.register(Collection.class, LINKED_LIST_CREATOR);"
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,174,"map.register(Boolean.class, BOOLEAN_TYPE_ADAPTER);"
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,175,"map.register(boolean.class, BOOLEAN_TYPE_ADAPTER);"
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,176,"map.register(Byte.class, BYTE_TYPE_ADAPTER);"
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,177,"map.register(byte.class, BYTE_TYPE_ADAPTER);"
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,178,"map.register(Character.class, CHARACTER_TYPE_ADAPTER);"
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,179,"map.register(char.class, CHARACTER_TYPE_ADAPTER);"
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,180,"map.register(Double.class, DOUBLE_TYPE_ADAPTER);"
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,181,"map.register(double.class, DOUBLE_TYPE_ADAPTER);"
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,182,"map.register(Float.class, FLOAT_TYPE_ADAPTER);"
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,183,"map.register(float.class, FLOAT_TYPE_ADAPTER);"
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,184,"map.register(Integer.class, INTEGER_TYPE_ADAPTER);"
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,185,"map.register(int.class, INTEGER_TYPE_ADAPTER);"
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,186,"map.register(Long.class, LONG_TYPE_ADAPTER);"
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,187,"map.register(long.class, LONG_TYPE_ADAPTER);"
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,188,"map.register(Short.class, SHORT_TYPE_ADAPTER);"
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,189,"map.register(short.class, SHORT_TYPE_ADAPTER);"
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,190,"map.register(String.class, STRING_TYPE_ADAPTER);"
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,192,// Add Collection type instance creators
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,193,"map.register(Collection.class, COLLECTION_TYPE_ADAPTER);"
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,471,rivate static class LongCreator implements InstanceCreator<Long> {
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,514,private static class LongTypeAdapter
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,515,"implements InstanceCreator<Long>, JsonSerializer<Long>, JsonDeserializer<Long> {"
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,516,"public JsonElement serialize(Long src, Type typeOfSrc, JsonSerializationContext context) {"
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,517,return new JsonPrimitive(src);
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,520,"public Long deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context)"
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,521,throws JsonParseException {
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,522,return json.getAsLong();
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,477,eturn LongCreator.class.getSimpleName();
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,531,return LongTypeAdapter.class.getSimpleName();
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,481,rivate static class IntegerCreator implements InstanceCreator<Integer> {
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,535,private static class IntegerTypeAdapter
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,536,"implements InstanceCreator<Integer>, JsonSerializer<Integer>, JsonDeserializer<Integer> {"
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,537,"public JsonElement serialize(Integer src, Type typeOfSrc, JsonSerializationContext context) {"
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,538,return new JsonPrimitive(src);
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,541,"public Integer deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context)"
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,542,throws JsonParseException {
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,543,return json.getAsInt();
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,487,eturn IntegerCreator.class.getSimpleName();
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,552,return IntegerTypeAdapter.class.getSimpleName();
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,491,rivate static class ShortCreator implements InstanceCreator<Short> {
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,556,private static class ShortTypeAdapter
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,557,"implements InstanceCreator<Short>, JsonSerializer<Short>, JsonDeserializer<Short> {"
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,558,"public JsonElement serialize(Short src, Type typeOfSrc, JsonSerializationContext context) {"
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,559,return new JsonPrimitive(src);
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,562,"public Short deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context)"
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,563,throws JsonParseException {
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,564,return json.getAsShort();
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,497,eturn ShortCreator.class.getSimpleName();
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,573,return ShortTypeAdapter.class.getSimpleName();
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,501,rivate static class ByteCreator implements InstanceCreator<Byte> {
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,577,private static class ByteTypeAdapter
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,578,"implements InstanceCreator<Byte>, JsonSerializer<Byte>, JsonDeserializer<Byte> {"
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,579,"public JsonElement serialize(Byte src, Type typeOfSrc, JsonSerializationContext context) {"
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,580,return new JsonPrimitive(src);
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,583,"public Byte deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context)"
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,584,throws JsonParseException {
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,585,return json.getAsByte();
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,507,eturn ByteCreator.class.getSimpleName();
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,594,return ByteTypeAdapter.class.getSimpleName();
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,511,rivate static class FloatCreator implements InstanceCreator<Float> {
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,598,private static class FloatTypeAdapter
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,599,"implements InstanceCreator<Float>, JsonSerializer<Float>, JsonDeserializer<Float> {"
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,600,"public JsonElement serialize(Float src, Type typeOfSrc, JsonSerializationContext context) {"
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,601,return new JsonPrimitive(src);
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,604,"public Float deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context)"
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,605,throws JsonParseException {
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,606,return json.getAsFloat();
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,517,eturn FloatCreator.class.getSimpleName();
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,615,return FloatTypeAdapter.class.getSimpleName();
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,521,rivate static class DoubleCreator implements InstanceCreator<Double> {
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,619,private static class DoubleTypeAdapter
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,620,"implements InstanceCreator<Double>, JsonSerializer<Double>, JsonDeserializer<Double> {"
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,621,"public JsonElement serialize(Double src, Type typeOfSrc, JsonSerializationContext context) {"
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,622,return new JsonPrimitive(src);
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,625,"public Double deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context)"
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,626,throws JsonParseException {
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,627,return json.getAsDouble();
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,527,eturn DoubleCreator.class.getSimpleName();
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,636,return DoubleTypeAdapter.class.getSimpleName();
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,531,rivate static class CharacterCreator implements InstanceCreator<Character> {
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,640,"private static class CharacterTypeAdapter implements InstanceCreator<Character>,"
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,641,"JsonSerializer<Character>, JsonDeserializer<Character> {"
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,642,"public JsonElement serialize(Character src, Type typeOfSrc, JsonSerializationContext context) {"
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,643,return new JsonPrimitive(src);
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,646,"public Character deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context)"
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,647,throws JsonParseException {
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,648,return json.getAsCharacter();
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,533,eturn new Character((char) 0);
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,652,return new Character('0');
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,655,@Override
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,656,public String toString() {
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,657,return CharacterTypeAdapter.class.getSimpleName();
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,661,private static class StringTypeAdapter
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,662,"implements InstanceCreator<String>, JsonSerializer<String>, JsonDeserializer<String> {"
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,663,"public JsonElement serialize(String src, Type typeOfSrc, JsonSerializationContext context) {"
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,664,return new JsonPrimitive(src);
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,667,"public String deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context)"
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,668,throws JsonParseException {
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,669,return json.getAsString();
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,672,public String createInstance(Type type) {
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,673,"return """";"
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,537,eturn CharacterCreator.class.getSimpleName();
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,678,return StringTypeAdapter.class.getSimpleName();
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,541,rivate static class BooleanCreator implements InstanceCreator<Boolean> {
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,682,private static class BooleanTypeAdapter
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,683,"implements InstanceCreator<Boolean>, JsonSerializer<Boolean>, JsonDeserializer<Boolean> {"
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,684,"public JsonElement serialize(Boolean src, Type typeOfSrc, JsonSerializationContext context) {"
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,685,return new JsonPrimitive(src);
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,688,"public Boolean deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context)"
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,689,throws JsonParseException {
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,690,return json.getAsBoolean();
False,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,547,eturn BooleanCreator.class.getSimpleName();
True,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,gson/src/main/java/com/google/gson/DefaultTypeAdapters.java,699,return BooleanTypeAdapter.class.getSimpleName();
True,gson/src/main/java/com/google/gson/JsonArray.java,gson/src/main/java/com/google/gson/JsonArray.java,229,@Override
True,gson/src/main/java/com/google/gson/JsonArray.java,gson/src/main/java/com/google/gson/JsonArray.java,230,public byte getAsByte() {
True,gson/src/main/java/com/google/gson/JsonArray.java,gson/src/main/java/com/google/gson/JsonArray.java,231,if (elements.size() == 1) {
True,gson/src/main/java/com/google/gson/JsonArray.java,gson/src/main/java/com/google/gson/JsonArray.java,232,return elements.get(0).getAsByte();
True,gson/src/main/java/com/google/gson/JsonArray.java,gson/src/main/java/com/google/gson/JsonArray.java,234,throw new IllegalStateException();
True,gson/src/main/java/com/google/gson/JsonArray.java,gson/src/main/java/com/google/gson/JsonArray.java,237,@Override
True,gson/src/main/java/com/google/gson/JsonArray.java,gson/src/main/java/com/google/gson/JsonArray.java,238,public char getAsCharacter() {
True,gson/src/main/java/com/google/gson/JsonArray.java,gson/src/main/java/com/google/gson/JsonArray.java,239,if (elements.size() == 1) {
True,gson/src/main/java/com/google/gson/JsonArray.java,gson/src/main/java/com/google/gson/JsonArray.java,240,return elements.get(0).getAsCharacter();
True,gson/src/main/java/com/google/gson/JsonArray.java,gson/src/main/java/com/google/gson/JsonArray.java,242,throw new IllegalStateException();
False,gson/src/main/java/com/google/gson/JsonArrayDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonArrayDeserializationVisitor.java,31,rivate final Class<?> componentType;
False,gson/src/main/java/com/google/gson/JsonArrayDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonArrayDeserializationVisitor.java,38,his.componentType = TypeUtils.toRawClass(arrayType);
False,gson/src/main/java/com/google/gson/JsonArrayDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonArrayDeserializationVisitor.java,48,f (typeInfo.isPrimitiveOrStringAndNotAnArray()) {
False,gson/src/main/java/com/google/gson/JsonArrayDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonArrayDeserializationVisitor.java,49,f (jsonArray.size() != 1) {
False,gson/src/main/java/com/google/gson/JsonArrayDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonArrayDeserializationVisitor.java,50,hrow new IllegalArgumentException(
False,gson/src/main/java/com/google/gson/JsonArrayDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonArrayDeserializationVisitor.java,51,"Primitives should be an array of length 1, but was: "" + jsonArray);"
False,gson/src/main/java/com/google/gson/JsonArrayDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonArrayDeserializationVisitor.java,53,eturn (T) objectConstructor.construct(typeInfo.getWrappedClass());
False,gson/src/main/java/com/google/gson/JsonArrayDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonArrayDeserializationVisitor.java,54, else if (typeInfo.isArray()) {
True,gson/src/main/java/com/google/gson/JsonArrayDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonArrayDeserializationVisitor.java,46,if (typeInfo.isArray()) {
False,gson/src/main/java/com/google/gson/JsonArrayDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonArrayDeserializationVisitor.java,79,"hild = visitChildAsPrimitive(arrayTypeInfo.getComponentRawType(),"
True,gson/src/main/java/com/google/gson/JsonArrayDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonArrayDeserializationVisitor.java,71,"child = visitChildAsObject(arrayTypeInfo.getComponentRawType(),"
False,gson/src/main/java/com/google/gson/JsonArrayDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonArrayDeserializationVisitor.java,88,"SuppressWarnings(""unchecked"")"
False,gson/src/main/java/com/google/gson/JsonArrayDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonArrayDeserializationVisitor.java,89,ublic void visitPrimitiveValue(Object obj) {
False,gson/src/main/java/com/google/gson/JsonArrayDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonArrayDeserializationVisitor.java,90,"arget = (T) typeAdapter.adaptType(json.getAsJsonArray().get(0).getAsObject(), componentType);"
False,gson/src/main/java/com/google/gson/JsonArrayDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonArrayDeserializationVisitor.java,109,"ublic void visitPrimitiveField(Field f, Type typeOfF, Object obj) {"
False,gson/src/main/java/com/google/gson/JsonArrayDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonArrayDeserializationVisitor.java,110,hrow new UnsupportedOperationException();
False,gson/src/main/java/com/google/gson/JsonDeserializationContextDefault.java,gson/src/main/java/com/google/gson/JsonDeserializationContextDefault.java,86,sonPrimitiveDeserializationVisitor<T> visitor = new JsonPrimitiveDeserializationVisitor<T>(
True,gson/src/main/java/com/google/gson/JsonDeserializationContextDefault.java,gson/src/main/java/com/google/gson/JsonDeserializationContextDefault.java,86,JsonObjectDeserializationVisitor<T> visitor = new JsonObjectDeserializationVisitor<T>(
False,gson/src/main/java/com/google/gson/JsonDeserializationContextDefault.java,gson/src/main/java/com/google/gson/JsonDeserializationContextDefault.java,88,bject target = visitor.getTarget();
False,gson/src/main/java/com/google/gson/JsonDeserializationContextDefault.java,gson/src/main/java/com/google/gson/JsonDeserializationContextDefault.java,89,"bjectNavigator on = navigatorFactory.create(target, typeOfT);"
True,gson/src/main/java/com/google/gson/JsonDeserializationContextDefault.java,gson/src/main/java/com/google/gson/JsonDeserializationContextDefault.java,88,"ObjectNavigator on = navigatorFactory.create(json.getAsObject(), typeOfT);"
False,gson/src/main/java/com/google/gson/JsonDeserializationContextDefault.java,gson/src/main/java/com/google/gson/JsonDeserializationContextDefault.java,91,arget = visitor.getTarget();
True,gson/src/main/java/com/google/gson/JsonDeserializationContextDefault.java,gson/src/main/java/com/google/gson/JsonDeserializationContextDefault.java,90,Object target = visitor.getTarget();
False,gson/src/main/java/com/google/gson/JsonDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonDeserializationVisitor.java,90,"inal Object visitChildAsPrimitive(Type childType, JsonPrimitive jsonChild) {"
False,gson/src/main/java/com/google/gson/JsonDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonDeserializationVisitor.java,91,reconditions.checkNotNull(jsonChild);
False,gson/src/main/java/com/google/gson/JsonDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonDeserializationVisitor.java,92,lass<?> childClass;
False,gson/src/main/java/com/google/gson/JsonDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonDeserializationVisitor.java,93,f (childType instanceof Class) {
False,gson/src/main/java/com/google/gson/JsonDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonDeserializationVisitor.java,94,hildClass = (Class<?>) childType;
False,gson/src/main/java/com/google/gson/JsonDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonDeserializationVisitor.java,95, else {
False,gson/src/main/java/com/google/gson/JsonDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonDeserializationVisitor.java,96,hildClass = TypeUtils.toRawClass(childType);
False,gson/src/main/java/com/google/gson/JsonDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonDeserializationVisitor.java,98,"eturn typeAdapter.adaptType(jsonChild.getAsObject(), childClass);"
False,gson/src/main/java/com/google/gson/JsonDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonDeserializationVisitor.java,101,"inal Object visitChild(Type childType, JsonElement jsonChild) {"
False,gson/src/main/java/com/google/gson/JsonDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonDeserializationVisitor.java,102,f (jsonChild == null) {
False,gson/src/main/java/com/google/gson/JsonDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonDeserializationVisitor.java,103,eturn null;
False,gson/src/main/java/com/google/gson/JsonDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonDeserializationVisitor.java,104, else if (jsonChild instanceof JsonArray) {
False,gson/src/main/java/com/google/gson/JsonDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonDeserializationVisitor.java,105,"eturn visitChildAsArray(childType, jsonChild.getAsJsonArray());"
False,gson/src/main/java/com/google/gson/JsonDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonDeserializationVisitor.java,106, else if (jsonChild instanceof JsonObject) {
False,gson/src/main/java/com/google/gson/JsonDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonDeserializationVisitor.java,107,"eturn visitChildAsObject(childType, jsonChild);"
False,gson/src/main/java/com/google/gson/JsonDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonDeserializationVisitor.java,108, else if (jsonChild instanceof JsonPrimitive) {
False,gson/src/main/java/com/google/gson/JsonDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonDeserializationVisitor.java,109,"eturn visitChildAsPrimitive(childType, jsonChild.getAsJsonPrimitive());"
False,gson/src/main/java/com/google/gson/JsonDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonDeserializationVisitor.java,110, else {
False,gson/src/main/java/com/google/gson/JsonDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonDeserializationVisitor.java,111,hrow new IllegalStateException();
True,gson/src/main/java/com/google/gson/JsonElement.java,gson/src/main/java/com/google/gson/JsonElement.java,226,* convenience method to get this element as a primitive byte value.
True,gson/src/main/java/com/google/gson/JsonElement.java,gson/src/main/java/com/google/gson/JsonElement.java,228,* @return get this element as a primitive byte value.
True,gson/src/main/java/com/google/gson/JsonElement.java,gson/src/main/java/com/google/gson/JsonElement.java,229,* @throws ClassCastException if the element is of not a {@link JsonPrimitive} and is not a valid
True,gson/src/main/java/com/google/gson/JsonElement.java,gson/src/main/java/com/google/gson/JsonElement.java,230,* byte value.
True,gson/src/main/java/com/google/gson/JsonElement.java,gson/src/main/java/com/google/gson/JsonElement.java,231,* @throws IllegalStateException if the element is of the type {@link JsonArray} but contains
True,gson/src/main/java/com/google/gson/JsonElement.java,gson/src/main/java/com/google/gson/JsonElement.java,232,* more than a single element.
True,gson/src/main/java/com/google/gson/JsonElement.java,gson/src/main/java/com/google/gson/JsonElement.java,234,public byte getAsByte() {
True,gson/src/main/java/com/google/gson/JsonElement.java,gson/src/main/java/com/google/gson/JsonElement.java,235,throw new UnsupportedOperationException();
True,gson/src/main/java/com/google/gson/JsonElement.java,gson/src/main/java/com/google/gson/JsonElement.java,239,* convenience method to get this element as a primitive character value.
True,gson/src/main/java/com/google/gson/JsonElement.java,gson/src/main/java/com/google/gson/JsonElement.java,241,* @return get this element as a primitive char value.
True,gson/src/main/java/com/google/gson/JsonElement.java,gson/src/main/java/com/google/gson/JsonElement.java,242,* @throws ClassCastException if the element is of not a {@link JsonPrimitive} and is not a valid
True,gson/src/main/java/com/google/gson/JsonElement.java,gson/src/main/java/com/google/gson/JsonElement.java,243,* char value.
True,gson/src/main/java/com/google/gson/JsonElement.java,gson/src/main/java/com/google/gson/JsonElement.java,244,* @throws IllegalStateException if the element is of the type {@link JsonArray} but contains
True,gson/src/main/java/com/google/gson/JsonElement.java,gson/src/main/java/com/google/gson/JsonElement.java,245,* more than a single element.
True,gson/src/main/java/com/google/gson/JsonElement.java,gson/src/main/java/com/google/gson/JsonElement.java,247,public char getAsCharacter() {
True,gson/src/main/java/com/google/gson/JsonElement.java,gson/src/main/java/com/google/gson/JsonElement.java,248,throw new UnsupportedOperationException();
False,gson/src/main/java/com/google/gson/JsonObjectDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonObjectDeserializationVisitor.java,53,ublic void visitPrimitiveValue(Object obj) {
False,gson/src/main/java/com/google/gson/JsonObjectDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonObjectDeserializationVisitor.java,54,/ should not be called since this case should invoke JsonPrimitiveDeserializationVisitor
False,gson/src/main/java/com/google/gson/JsonObjectDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonObjectDeserializationVisitor.java,55,hrow new IllegalStateException();
False,gson/src/main/java/com/google/gson/JsonObjectDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonObjectDeserializationVisitor.java,90,"ublic void visitPrimitiveField(Field f, Type typeOfF, Object obj) {"
False,gson/src/main/java/com/google/gson/JsonObjectDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonObjectDeserializationVisitor.java,91,ry {
False,gson/src/main/java/com/google/gson/JsonObjectDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonObjectDeserializationVisitor.java,92,sonObject jsonObject = json.getAsJsonObject();
False,gson/src/main/java/com/google/gson/JsonObjectDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonObjectDeserializationVisitor.java,93,tring fName = getFieldName(f);
False,gson/src/main/java/com/google/gson/JsonObjectDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonObjectDeserializationVisitor.java,94,sonPrimitive value = jsonObject.getAsJsonPrimitive(fName);
False,gson/src/main/java/com/google/gson/JsonObjectDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonObjectDeserializationVisitor.java,95,f (value != null) {
False,gson/src/main/java/com/google/gson/JsonObjectDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonObjectDeserializationVisitor.java,96,".set(obj, typeAdapter.adaptType(value.getAsObject(), TypeUtils.toRawClass(typeOfF)));"
False,gson/src/main/java/com/google/gson/JsonObjectDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonObjectDeserializationVisitor.java,97, else {
False,gson/src/main/java/com/google/gson/JsonObjectDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonObjectDeserializationVisitor.java,98,"/ For Strings, we need to set the field to null"
False,gson/src/main/java/com/google/gson/JsonObjectDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonObjectDeserializationVisitor.java,99,"/ For other primitive types, any value created during default construction is fine"
False,gson/src/main/java/com/google/gson/JsonObjectDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonObjectDeserializationVisitor.java,100,f (f.getType() == String.class) {
False,gson/src/main/java/com/google/gson/JsonObjectDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonObjectDeserializationVisitor.java,101,".set(obj, null);"
False,gson/src/main/java/com/google/gson/JsonObjectDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonObjectDeserializationVisitor.java,104, catch (IllegalAccessException e) {
False,gson/src/main/java/com/google/gson/JsonObjectDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonObjectDeserializationVisitor.java,105,hrow new RuntimeException(e);
True,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,259,@Override
True,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,260,public byte getAsByte() {
True,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,261,return ((Number) value).byteValue();
True,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,264,@Override
True,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,265,public char getAsCharacter() {
True,gson/src/main/java/com/google/gson/JsonPrimitive.java,gson/src/main/java/com/google/gson/JsonPrimitive.java,266,return getAsString().charAt(0);
False,gson/src/main/java/com/google/gson/JsonPrimitiveDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonPrimitiveDeserializationVisitor.java,2, Copyright (C) 2008 Google Inc.
False,gson/src/main/java/com/google/gson/JsonPrimitiveDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonPrimitiveDeserializationVisitor.java,4," Licensed under the Apache License, Version 2.0 (the ""License"");"
False,gson/src/main/java/com/google/gson/JsonPrimitiveDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonPrimitiveDeserializationVisitor.java,5, you may not use this file except in compliance with the License.
False,gson/src/main/java/com/google/gson/JsonPrimitiveDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonPrimitiveDeserializationVisitor.java,6, You may obtain a copy of the License at
False,gson/src/main/java/com/google/gson/JsonPrimitiveDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonPrimitiveDeserializationVisitor.java,8, http://www.apache.org/licenses/LICENSE-2.0
False,gson/src/main/java/com/google/gson/JsonPrimitiveDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonPrimitiveDeserializationVisitor.java,10," Unless required by applicable law or agreed to in writing, software"
False,gson/src/main/java/com/google/gson/JsonPrimitiveDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonPrimitiveDeserializationVisitor.java,11," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,gson/src/main/java/com/google/gson/JsonPrimitiveDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonPrimitiveDeserializationVisitor.java,12," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,gson/src/main/java/com/google/gson/JsonPrimitiveDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonPrimitiveDeserializationVisitor.java,13, See the License for the specific language governing permissions and
False,gson/src/main/java/com/google/gson/JsonPrimitiveDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonPrimitiveDeserializationVisitor.java,14, limitations under the License.
False,gson/src/main/java/com/google/gson/JsonPrimitiveDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonPrimitiveDeserializationVisitor.java,17,ackage com.google.gson;
False,gson/src/main/java/com/google/gson/JsonPrimitiveDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonPrimitiveDeserializationVisitor.java,19,mport java.lang.reflect.Field;
False,gson/src/main/java/com/google/gson/JsonPrimitiveDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonPrimitiveDeserializationVisitor.java,20,mport java.lang.reflect.Type;
False,gson/src/main/java/com/google/gson/JsonPrimitiveDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonPrimitiveDeserializationVisitor.java,23, A visitor that populates a primitive value from its JSON representation
False,gson/src/main/java/com/google/gson/JsonPrimitiveDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonPrimitiveDeserializationVisitor.java,25, @author Inderjeet Singh
False,gson/src/main/java/com/google/gson/JsonPrimitiveDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonPrimitiveDeserializationVisitor.java,27,inal class JsonPrimitiveDeserializationVisitor<T> extends JsonDeserializationVisitor<T> {
False,gson/src/main/java/com/google/gson/JsonPrimitiveDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonPrimitiveDeserializationVisitor.java,29,"sonPrimitiveDeserializationVisitor(JsonPrimitive json, Type type,"
False,gson/src/main/java/com/google/gson/JsonPrimitiveDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonPrimitiveDeserializationVisitor.java,30,"bjectNavigatorFactory factory, ObjectConstructor objectConstructor,"
False,gson/src/main/java/com/google/gson/JsonPrimitiveDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonPrimitiveDeserializationVisitor.java,31,"ypeAdapter typeAdapter, ParameterizedTypeHandlerMap<JsonDeserializer<?>> deserializers,"
False,gson/src/main/java/com/google/gson/JsonPrimitiveDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonPrimitiveDeserializationVisitor.java,32,sonDeserializationContext context) {
False,gson/src/main/java/com/google/gson/JsonPrimitiveDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonPrimitiveDeserializationVisitor.java,33,"uper(json, type, factory, objectConstructor, typeAdapter, deserializers, context);"
False,gson/src/main/java/com/google/gson/JsonPrimitiveDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonPrimitiveDeserializationVisitor.java,36,Override
False,gson/src/main/java/com/google/gson/JsonPrimitiveDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonPrimitiveDeserializationVisitor.java,37,"SuppressWarnings(""unchecked"")"
False,gson/src/main/java/com/google/gson/JsonPrimitiveDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonPrimitiveDeserializationVisitor.java,38,rotected T constructTarget() {
False,gson/src/main/java/com/google/gson/JsonPrimitiveDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonPrimitiveDeserializationVisitor.java,39,eturn (T) objectConstructor.construct(targetType);
False,gson/src/main/java/com/google/gson/JsonPrimitiveDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonPrimitiveDeserializationVisitor.java,42,ublic void startVisitingObject(Object node) {
False,gson/src/main/java/com/google/gson/JsonPrimitiveDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonPrimitiveDeserializationVisitor.java,43,/ do nothing
False,gson/src/main/java/com/google/gson/JsonPrimitiveDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonPrimitiveDeserializationVisitor.java,46,"ublic void visitArray(Object array, Type componentType) {"
False,gson/src/main/java/com/google/gson/JsonPrimitiveDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonPrimitiveDeserializationVisitor.java,47,/ should not be called since this case should invoke JsonArrayDeserializationVisitor
False,gson/src/main/java/com/google/gson/JsonPrimitiveDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonPrimitiveDeserializationVisitor.java,48,hrow new IllegalStateException();
False,gson/src/main/java/com/google/gson/JsonPrimitiveDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonPrimitiveDeserializationVisitor.java,51,"SuppressWarnings(""unchecked"")"
False,gson/src/main/java/com/google/gson/JsonPrimitiveDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonPrimitiveDeserializationVisitor.java,52,ublic void visitPrimitiveValue(Object obj) {
False,gson/src/main/java/com/google/gson/JsonPrimitiveDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonPrimitiveDeserializationVisitor.java,53,sonPrimitive jsonPrimitive = json.getAsJsonPrimitive();
False,gson/src/main/java/com/google/gson/JsonPrimitiveDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonPrimitiveDeserializationVisitor.java,54,f (jsonPrimitive.isBoolean()) {
False,gson/src/main/java/com/google/gson/JsonPrimitiveDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonPrimitiveDeserializationVisitor.java,55,arget = (T) jsonPrimitive.getAsBooleanWrapper();
False,gson/src/main/java/com/google/gson/JsonPrimitiveDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonPrimitiveDeserializationVisitor.java,56, else if (jsonPrimitive.isNumber()) {
False,gson/src/main/java/com/google/gson/JsonPrimitiveDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonPrimitiveDeserializationVisitor.java,57,arget = (T) jsonPrimitive.getAsNumber();
False,gson/src/main/java/com/google/gson/JsonPrimitiveDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonPrimitiveDeserializationVisitor.java,58, else if (jsonPrimitive.isString()) {
False,gson/src/main/java/com/google/gson/JsonPrimitiveDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonPrimitiveDeserializationVisitor.java,59,arget = (T) jsonPrimitive.getAsString();
False,gson/src/main/java/com/google/gson/JsonPrimitiveDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonPrimitiveDeserializationVisitor.java,60, else {
False,gson/src/main/java/com/google/gson/JsonPrimitiveDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonPrimitiveDeserializationVisitor.java,61,hrow new IllegalStateException();
False,gson/src/main/java/com/google/gson/JsonPrimitiveDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonPrimitiveDeserializationVisitor.java,65,"ublic void visitObjectField(Field f, Type typeOfF, Object obj) {"
False,gson/src/main/java/com/google/gson/JsonPrimitiveDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonPrimitiveDeserializationVisitor.java,66,/ should not be called since this case should invoke JsonArrayDeserializationVisitor
False,gson/src/main/java/com/google/gson/JsonPrimitiveDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonPrimitiveDeserializationVisitor.java,67,hrow new IllegalStateException();
False,gson/src/main/java/com/google/gson/JsonPrimitiveDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonPrimitiveDeserializationVisitor.java,70,"ublic void visitArrayField(Field f, Type typeOfF, Object obj) {"
False,gson/src/main/java/com/google/gson/JsonPrimitiveDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonPrimitiveDeserializationVisitor.java,71,/ should not be called since this case should invoke JsonArrayDeserializationVisitor
False,gson/src/main/java/com/google/gson/JsonPrimitiveDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonPrimitiveDeserializationVisitor.java,72,hrow new IllegalStateException();
False,gson/src/main/java/com/google/gson/JsonPrimitiveDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonPrimitiveDeserializationVisitor.java,75,"ublic void visitPrimitiveField(Field f, Type fType, Object obj) {"
False,gson/src/main/java/com/google/gson/JsonPrimitiveDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonPrimitiveDeserializationVisitor.java,76,/ should not be called since this case should invoke JsonArrayDeserializationVisitor
False,gson/src/main/java/com/google/gson/JsonPrimitiveDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonPrimitiveDeserializationVisitor.java,77,hrow new IllegalStateException();
False,gson/src/main/java/com/google/gson/JsonPrimitiveDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonPrimitiveDeserializationVisitor.java,80,"ublic boolean visitFieldUsingCustomHandler(Field f, Type actualTypeOfField, Object parent) {"
False,gson/src/main/java/com/google/gson/JsonPrimitiveDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonPrimitiveDeserializationVisitor.java,81,/ should not be called since this case should invoke JsonObjectDeserializationVisitor
False,gson/src/main/java/com/google/gson/JsonPrimitiveDeserializationVisitor.java,gson/src/main/java/com/google/gson/JsonPrimitiveDeserializationVisitor.java,82,hrow new IllegalStateException();
False,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,121,"ublic void visitPrimitiveField(Field f, Type typeOfF, Object obj) {"
False,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,122,"f (isFieldNull(f, obj)) {"
False,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,123,f (serializeNulls) {
False,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,124,"ddChildAsElement(f, JsonNull.INSTANCE);"
False,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,126, else {
False,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,127,ypeInfo typeInfo = new TypeInfo(typeOfF);
False,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,128,f (typeInfo.isPrimitiveOrStringAndNotAnArray()) {
False,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,129,"bject fieldValue = getFieldValue(f, obj);"
False,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,130,"ddAsChildOfObject(f, typeOfF, fieldValue);"
False,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,131, else {
False,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,132,"hrow new IllegalArgumentException(""Not a primitive type"");"
False,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,137,ublic void visitPrimitiveValue(Object obj) {
False,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,gson/src/main/java/com/google/gson/JsonSerializationVisitor.java,138,ssignToRoot(new JsonPrimitive(obj));
False,gson/src/main/java/com/google/gson/ObjectNavigator.java,gson/src/main/java/com/google/gson/ObjectNavigator.java,43, This is called to visit the current object if it is a primitive
False,gson/src/main/java/com/google/gson/ObjectNavigator.java,gson/src/main/java/com/google/gson/ObjectNavigator.java,45,oid visitPrimitiveValue(Object obj);
False,gson/src/main/java/com/google/gson/ObjectNavigator.java,gson/src/main/java/com/google/gson/ObjectNavigator.java,58, This is called to visit a primitive field of the current object
False,gson/src/main/java/com/google/gson/ObjectNavigator.java,gson/src/main/java/com/google/gson/ObjectNavigator.java,60,"oid visitPrimitiveField(Field f, Type typeOfF, Object obj);"
False,gson/src/main/java/com/google/gson/ObjectNavigator.java,gson/src/main/java/com/google/gson/ObjectNavigator.java,119, else if (objTypeInfo.isPrimitiveOrStringAndNotAnArray()) {
False,gson/src/main/java/com/google/gson/ObjectNavigator.java,gson/src/main/java/com/google/gson/ObjectNavigator.java,120,isitor.visitPrimitiveValue(obj);
False,gson/src/main/java/com/google/gson/ObjectNavigator.java,gson/src/main/java/com/google/gson/ObjectNavigator.java,152, else if (fieldTypeInfo.isPrimitiveOrStringAndNotAnArray()) {
False,gson/src/main/java/com/google/gson/ObjectNavigator.java,gson/src/main/java/com/google/gson/ObjectNavigator.java,153,"isitor.visitPrimitiveField(f, actualTypeOfField, obj);"
False,gson/src/main/java/com/google/gson/TypeInfo.java,gson/src/main/java/com/google/gson/TypeInfo.java,77,ublic final boolean isString() {
False,gson/src/main/java/com/google/gson/TypeInfo.java,gson/src/main/java/com/google/gson/TypeInfo.java,78,eturn rawClass == String.class;
False,gson/src/main/java/com/google/gson/TypeInfo.java,gson/src/main/java/com/google/gson/TypeInfo.java,81,ublic final boolean isPrimitiveOrStringAndNotAnArray() {
False,gson/src/main/java/com/google/gson/TypeInfo.java,gson/src/main/java/com/google/gson/TypeInfo.java,82,eturn (isPrimitive() || isString()) && !isArray();
True,gson/src/test/java/com/google/gson/TypeInfoArrayTest.java,gson/src/test/java/com/google/gson/TypeInfoArrayTest.java,83,assertFalse(arrayTypeInfo.isPrimitive());
False,gson/src/test/java/com/google/gson/TypeInfoArrayTest.java,gson/src/test/java/com/google/gson/TypeInfoArrayTest.java,84,ssertFalse(arrayTypeInfo.isPrimitiveOrStringAndNotAnArray());
False,gson/src/test/java/com/google/gson/TypeInfoTest.java,gson/src/test/java/com/google/gson/TypeInfoTest.java,38,ssertFalse(typeInfo.isString());
False,gson/src/test/java/com/google/gson/TypeInfoTest.java,gson/src/test/java/com/google/gson/TypeInfoTest.java,49,ssertTrue(typeInfo.isPrimitiveOrStringAndNotAnArray());
True,gson/src/test/java/com/google/gson/TypeInfoTest.java,gson/src/test/java/com/google/gson/TypeInfoTest.java,48,assertFalse(typeInfo.isArray());
False,gson/src/test/java/com/google/gson/TypeInfoTest.java,gson/src/test/java/com/google/gson/TypeInfoTest.java,58,ssertTrue(typeInfo.isPrimitiveOrStringAndNotAnArray());
False,gson/src/test/java/com/google/gson/TypeInfoTest.java,gson/src/test/java/com/google/gson/TypeInfoTest.java,67,ssertFalse(typeInfo.isPrimitiveOrStringAndNotAnArray());
False,gson/src/test/java/com/google/gson/TypeInfoTest.java,gson/src/test/java/com/google/gson/TypeInfoTest.java,79,ssertTrue(typeInfo.isString());
True,gson/src/test/java/com/google/gson/TypeInfoTest.java,gson/src/test/java/com/google/gson/TypeInfoTest.java,76,assertFalse(typeInfo.isPrimitive());
True,gson/src/test/java/com/google/gson/common/TestTypes.java,gson/src/test/java/com/google/gson/common/TestTypes.java,19,import java.lang.reflect.Type;
True,gson/src/test/java/com/google/gson/common/TestTypes.java,gson/src/test/java/com/google/gson/common/TestTypes.java,21,import com.google.gson.JsonDeserializationContext;
True,gson/src/test/java/com/google/gson/common/TestTypes.java,gson/src/test/java/com/google/gson/common/TestTypes.java,22,import com.google.gson.JsonDeserializer;
True,gson/src/test/java/com/google/gson/common/TestTypes.java,gson/src/test/java/com/google/gson/common/TestTypes.java,23,import com.google.gson.JsonElement;
True,gson/src/test/java/com/google/gson/common/TestTypes.java,gson/src/test/java/com/google/gson/common/TestTypes.java,24,import com.google.gson.JsonParseException;
True,gson/src/test/java/com/google/gson/common/TestTypes.java,gson/src/test/java/com/google/gson/common/TestTypes.java,25,import com.google.gson.JsonPrimitive;
True,gson/src/test/java/com/google/gson/common/TestTypes.java,gson/src/test/java/com/google/gson/common/TestTypes.java,26,import com.google.gson.JsonSerializationContext;
True,gson/src/test/java/com/google/gson/common/TestTypes.java,gson/src/test/java/com/google/gson/common/TestTypes.java,27,import com.google.gson.JsonSerializer;
True,gson/src/test/java/com/google/gson/common/TestTypes.java,gson/src/test/java/com/google/gson/common/TestTypes.java,362,public static class CrazyLongTypeAdapter
True,gson/src/test/java/com/google/gson/common/TestTypes.java,gson/src/test/java/com/google/gson/common/TestTypes.java,363,"implements JsonSerializer<Long>, JsonDeserializer<Long> {"
True,gson/src/test/java/com/google/gson/common/TestTypes.java,gson/src/test/java/com/google/gson/common/TestTypes.java,364,public static final long DIFFERENCE = 5L;
True,gson/src/test/java/com/google/gson/common/TestTypes.java,gson/src/test/java/com/google/gson/common/TestTypes.java,365,"public JsonElement serialize(Long src, Type typeOfSrc, JsonSerializationContext context) {"
True,gson/src/test/java/com/google/gson/common/TestTypes.java,gson/src/test/java/com/google/gson/common/TestTypes.java,366,return new JsonPrimitive(src + DIFFERENCE);
True,gson/src/test/java/com/google/gson/common/TestTypes.java,gson/src/test/java/com/google/gson/common/TestTypes.java,369,"public Long deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context)"
True,gson/src/test/java/com/google/gson/common/TestTypes.java,gson/src/test/java/com/google/gson/common/TestTypes.java,370,throws JsonParseException {
True,gson/src/test/java/com/google/gson/common/TestTypes.java,gson/src/test/java/com/google/gson/common/TestTypes.java,371,return json.getAsLong() - DIFFERENCE;
True,gson/src/test/java/com/google/gson/functional/ArrayTest.java,gson/src/test/java/com/google/gson/functional/ArrayTest.java,19,import com.google.gson.GsonBuilder;
True,gson/src/test/java/com/google/gson/functional/ArrayTest.java,gson/src/test/java/com/google/gson/functional/ArrayTest.java,21,import com.google.gson.common.TestTypes.CrazyLongTypeAdapter;
True,gson/src/test/java/com/google/gson/functional/ArrayTest.java,gson/src/test/java/com/google/gson/functional/ArrayTest.java,139,public void testArrayOfPrimitivesWithCustomTypeAdapter() throws Exception {
True,gson/src/test/java/com/google/gson/functional/ArrayTest.java,gson/src/test/java/com/google/gson/functional/ArrayTest.java,140,CrazyLongTypeAdapter typeAdapter = new CrazyLongTypeAdapter();
True,gson/src/test/java/com/google/gson/functional/ArrayTest.java,gson/src/test/java/com/google/gson/functional/ArrayTest.java,141,gson = new GsonBuilder()
True,gson/src/test/java/com/google/gson/functional/ArrayTest.java,gson/src/test/java/com/google/gson/functional/ArrayTest.java,142,".registerTypeAdapter(long.class, typeAdapter)"
True,gson/src/test/java/com/google/gson/functional/ArrayTest.java,gson/src/test/java/com/google/gson/functional/ArrayTest.java,143,".registerTypeAdapter(Long.class, typeAdapter)"
True,gson/src/test/java/com/google/gson/functional/ArrayTest.java,gson/src/test/java/com/google/gson/functional/ArrayTest.java,144,.create();
True,gson/src/test/java/com/google/gson/functional/ArrayTest.java,gson/src/test/java/com/google/gson/functional/ArrayTest.java,145,long[] value = { 1L };
True,gson/src/test/java/com/google/gson/functional/ArrayTest.java,gson/src/test/java/com/google/gson/functional/ArrayTest.java,146,String serializedValue = gson.toJson(value);
True,gson/src/test/java/com/google/gson/functional/ArrayTest.java,gson/src/test/java/com/google/gson/functional/ArrayTest.java,147,"String expected = ""["" + String.valueOf(value[0] + CrazyLongTypeAdapter.DIFFERENCE) + ""]"";"
True,gson/src/test/java/com/google/gson/functional/ArrayTest.java,gson/src/test/java/com/google/gson/functional/ArrayTest.java,148,"assertEquals(expected, serializedValue);"
True,gson/src/test/java/com/google/gson/functional/ArrayTest.java,gson/src/test/java/com/google/gson/functional/ArrayTest.java,150,"long[] deserializedValue = gson.fromJson(serializedValue, long[].class);"
True,gson/src/test/java/com/google/gson/functional/ArrayTest.java,gson/src/test/java/com/google/gson/functional/ArrayTest.java,151,"assertEquals(1, deserializedValue.length);"
True,gson/src/test/java/com/google/gson/functional/ArrayTest.java,gson/src/test/java/com/google/gson/functional/ArrayTest.java,152,"assertEquals(value[0], deserializedValue[0]);"
True,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,338,// Test created from Issue 70
True,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,339,public void testCustomAdapterInvokedForCollectionElementSerializationWithType() {
True,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,340,Gson gson = new GsonBuilder()
True,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,341,".registerTypeAdapter(StringHolder.class, new StringHolderTypeAdapter())"
True,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,342,.create();
True,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,343,Type setType = new TypeToken<Set<StringHolder>>() {}.getType();
True,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,344,"StringHolder holder = new StringHolder(""Jacob"", ""Tomaw"");"
True,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,345,Set<StringHolder> setOfHolders = new HashSet<StringHolder>();
True,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,346,setOfHolders.add(holder);
True,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,347,"String json = gson.toJson(setOfHolders, setType);"
True,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,348,"assertTrue(json.contains(""Jacob:Tomaw""));"
False,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,343,ype setType = new TypeToken<Set<StringHolder>>() {}.getType();
False,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,365,ublic void testCustomAdapterInvokedForMapElementSerialization() {
True,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,377,public void testCustomAdapterInvokedForMapElementSerializationWithType() {
True,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,385,"String json = gson.toJson(mapOfHolders, mapType);"
True,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,386,"assertTrue(json.contains(""\""foo\"":\""Jacob:Tomaw\""""));"
True,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,389,// Test created from Issue 70
True,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,390,public void testCustomAdapterInvokedForMapElementSerialization() {
True,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,391,Gson gson = new GsonBuilder()
True,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,392,".registerTypeAdapter(StringHolder.class, new StringHolderTypeAdapter())"
True,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,393,.create();
True,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,394,"StringHolder holder = new StringHolder(""Jacob"", ""Tomaw"");"
True,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,395,"Map<String, StringHolder> mapOfHolders = new HashMap<String, StringHolder>();"
True,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,gson/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java,396,"mapOfHolders.put(""foo"", holder);"
False,gson/src/test/java/com/google/gson/functional/ObjectTest.java,gson/src/test/java/com/google/gson/functional/ObjectTest.java,274,"/        + "",\""navigableSet\"":[\""abc\"",\""def\"",\""ghi\"",\""jkl\""]"""
False,gson/src/test/java/com/google/gson/functional/ParameterizedTypesTest.java,gson/src/test/java/com/google/gson/functional/ParameterizedTypesTest.java,70,"yParameterizedType<Integer> actual = gson.fromJson(json, expectedType);"
True,gson/src/test/java/com/google/gson/functional/ParameterizedTypesTest.java,gson/src/test/java/com/google/gson/functional/ParameterizedTypesTest.java,70,"MyParameterizedType<BagOfPrimitives> actual = gson.fromJson(json, expectedType);"
False,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,19,mport com.google.gson.Gson;
False,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,20,mport com.google.gson.JsonParseException;
True,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,19,import java.math.BigDecimal;
True,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,20,import java.math.BigInteger;
False,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,24,mport java.math.BigDecimal;
False,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,25,mport java.math.BigInteger;
True,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,24,import com.google.gson.Gson;
True,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,25,import com.google.gson.GsonBuilder;
True,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,26,import com.google.gson.JsonParseException;
True,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,27,import com.google.gson.common.TestTypes.CrazyLongTypeAdapter;
True,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,263,public void testOverridingDefaultPrimitiveSerialization() {
True,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,264,CrazyLongTypeAdapter typeAdapter = new CrazyLongTypeAdapter();
True,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,265,gson = new GsonBuilder()
True,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,266,".registerTypeAdapter(long.class, typeAdapter)"
True,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,267,".registerTypeAdapter(Long.class, typeAdapter)"
True,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,268,.create();
True,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,269,long value = 1L;
True,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,270,String serializedValue = gson.toJson(value);
True,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,271,"assertEquals(String.valueOf(value + CrazyLongTypeAdapter.DIFFERENCE), serializedValue);"
True,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,273,"long deserializedValue = gson.fromJson(serializedValue, long.class);"
True,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,274,"assertEquals(value, deserializedValue);"
