is_addition,old_file_path,new_file_path,line_num,content
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,356, Configures Gson to apply a set of exclusion strategies during either serialization or
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,357, deserialization. Each of the {@code strategies} will be applied as a disjunction rule.
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,356,* Configures Gson to apply a set of exclusion strategies during either serialization.
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,357,* Each of the {@code strategies} will be applied as a disjunction rule.
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,359, skipped then that field (or object) is skipped during either serialization or deserialization
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,359,* skipped then that field (or object) is skipped during either serialization
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,363, @param mode the mode of Gson (either serialization or deserialization) as to when the
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,364,   {@code strategies} should be applied.
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,368,"ublic GsonBuilder setExclusionStrategies(Mode mode, ExclusionStrategy... strategies) {"
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,369,et<ExclusionStrategy> strategySet =
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,370,$Preconditions.checkNotNull(mode) == Mode.SERIALIZE)
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,371, serializeExclusionStrategies : deserializeExclusionStrategies;
False,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,372,trategySet.addAll(Arrays.asList(strategies));
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,366,public GsonBuilder addSerializationExclusionStrategies(ExclusionStrategy... strategies) {
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,367,serializeExclusionStrategies.addAll(Arrays.asList(strategies));
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,373,* Configures Gson to apply a set of exclusion strategies during deserialization.
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,374,* Each of the {@code strategies} will be applied as a disjunction rule.
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,375,* This means that if one of the {@code strategies} suggests that a field (or class) should be
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,376,* skipped then that field (or object) is skipped during deserialization
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,377,* depending on the {@code mode} that is passed into this method.
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,379,* @param strategies the set of strategy object to apply during the {@code mode}.
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,380,"* @return a reference to this {@code GsonBuilder} object to fulfill the ""Builder"" pattern"
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,381,* @since 1.7
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,383,public GsonBuilder addDeserializationExclusionStrategies(ExclusionStrategy... strategies) {
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,384,deserializeExclusionStrategies.addAll(Arrays.asList(strategies));
True,gson/src/main/java/com/google/gson/GsonBuilder.java,gson/src/main/java/com/google/gson/GsonBuilder.java,385,return this;
False,gson/src/main/java/com/google/gson/Mode.java,gson/src/main/java/com/google/gson/Mode.java,2, Copyright (C) 2010 Google Inc.
False,gson/src/main/java/com/google/gson/Mode.java,gson/src/main/java/com/google/gson/Mode.java,4," Licensed under the Apache License, Version 2.0 (the ""License"");"
False,gson/src/main/java/com/google/gson/Mode.java,gson/src/main/java/com/google/gson/Mode.java,5, you may not use this file except in compliance with the License.
False,gson/src/main/java/com/google/gson/Mode.java,gson/src/main/java/com/google/gson/Mode.java,6, You may obtain a copy of the License at
False,gson/src/main/java/com/google/gson/Mode.java,gson/src/main/java/com/google/gson/Mode.java,8, http://www.apache.org/licenses/LICENSE-2.0
False,gson/src/main/java/com/google/gson/Mode.java,gson/src/main/java/com/google/gson/Mode.java,10," Unless required by applicable law or agreed to in writing, software"
False,gson/src/main/java/com/google/gson/Mode.java,gson/src/main/java/com/google/gson/Mode.java,11," distributed under the License is distributed on an ""AS IS"" BASIS,"
False,gson/src/main/java/com/google/gson/Mode.java,gson/src/main/java/com/google/gson/Mode.java,12," WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
False,gson/src/main/java/com/google/gson/Mode.java,gson/src/main/java/com/google/gson/Mode.java,13, See the License for the specific language governing permissions and
False,gson/src/main/java/com/google/gson/Mode.java,gson/src/main/java/com/google/gson/Mode.java,14, limitations under the License.
False,gson/src/main/java/com/google/gson/Mode.java,gson/src/main/java/com/google/gson/Mode.java,17,ackage com.google.gson;
False,gson/src/main/java/com/google/gson/Mode.java,gson/src/main/java/com/google/gson/Mode.java,20, Defines the current context of Gson so that common code for serializing and deserializing can
False,gson/src/main/java/com/google/gson/Mode.java,gson/src/main/java/com/google/gson/Mode.java,21, distinguish between the two modes.
False,gson/src/main/java/com/google/gson/Mode.java,gson/src/main/java/com/google/gson/Mode.java,23, @author Joel Leitch
False,gson/src/main/java/com/google/gson/Mode.java,gson/src/main/java/com/google/gson/Mode.java,25, @since 1.7
False,gson/src/main/java/com/google/gson/Mode.java,gson/src/main/java/com/google/gson/Mode.java,27,ublic enum Mode {
False,gson/src/main/java/com/google/gson/Mode.java,gson/src/main/java/com/google/gson/Mode.java,28,"ERIALIZE,"
False,gson/src/main/java/com/google/gson/Mode.java,gson/src/main/java/com/google/gson/Mode.java,29,ESERIALIZE;
True,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,19,import java.lang.annotation.ElementType;
True,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,20,import java.lang.annotation.Retention;
True,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,21,import java.lang.annotation.RetentionPolicy;
True,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,22,import java.lang.annotation.Target;
True,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,24,import junit.framework.TestCase;
False,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,25,mport com.google.gson.Mode;
False,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,27,mport junit.framework.TestCase;
False,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,29,mport java.lang.annotation.ElementType;
False,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,30,mport java.lang.annotation.Retention;
False,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,31,mport java.lang.annotation.RetentionPolicy;
False,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,32,mport java.lang.annotation.Target;
False,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,51,"son gson = createGson(new MyExclusionStrategy(String.class), null);"
True,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,50,"Gson gson = createGson(new MyExclusionStrategy(String.class), true);"
False,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,59,"son gson = createGson(new MyExclusionStrategy(String.class), null);"
True,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,58,"Gson gson = createGson(new MyExclusionStrategy(String.class), false);"
False,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,78,"son gson = createGson(new MyExclusionStrategy(String.class), Mode.DESERIALIZE);"
True,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,77,"Gson gson = createGson(new MyExclusionStrategy(String.class), false);"
False,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,92,"rivate static Gson createGson(ExclusionStrategy exclusionStrategy, Mode mode) {"
True,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,91,"private static Gson createGson(ExclusionStrategy exclusionStrategy, boolean serialization) {"
False,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,94,f (mode == null) {
False,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,95,sonBuilder.setExclusionStrategies(exclusionStrategy);
True,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,93,if (serialization) {
True,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,94,gsonBuilder.addSerializationExclusionStrategies(exclusionStrategy);
False,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,97,"sonBuilder.setExclusionStrategies(mode, exclusionStrategy);"
True,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,gson/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java,96,gsonBuilder.addDeserializationExclusionStrategies(exclusionStrategy);
