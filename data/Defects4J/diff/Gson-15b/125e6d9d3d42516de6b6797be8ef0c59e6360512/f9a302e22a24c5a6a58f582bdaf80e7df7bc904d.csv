is_addition,old_file_path,new_file_path,line_num,content
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,52,mport java.util.HashSet;
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,55,mport java.util.Set;
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,118,** Indicates whether Gson is in the phase of constructor invocation. It is used to determine
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,119, whether to add a constructor in preconfiguredGeneratedTypeAdapter set or not. */
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,120,rivate boolean inConstructorPhase = true;
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,121,** List of type adapters that are generated by Gson during its constructor */
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,122,rivate Set<TypeAdapter<?>> preconfiguredGeneratedTypeAdapters = new HashSet<TypeAdapter<?>>();
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,123,** List of type adapters that are generated by Gson during toJson/fromJson. */
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,124,rivate final ThreadLocal<Set<TypeAdapter<?>>> runtimeGeneratedTypeAdapters =
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,125,ew ThreadLocal<Set<TypeAdapter<?>>>();
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,257,his.preconfiguredGeneratedTypeAdapters = Collections.unmodifiableSet(preconfiguredGeneratedTypeAdapters);
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,258,nConstructorPhase = false;
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,921,ublic static final class $$Internal {
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,922,"ublic static void addGeneratedTypeAdapter(Gson gson, TypeAdapter<?> typeAdapter) {"
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,923,f (gson.inConstructorPhase) {
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,924,son.preconfiguredGeneratedTypeAdapters.add(typeAdapter);
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,925, else {
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,926,et<TypeAdapter<?>> adapters = getRuntimeGeneratedTypeAdapters(gson);
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,927,dapters.add(typeAdapter);
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,930,"ublic static boolean isGeneratedTypeAdapter(Gson gson, TypeAdapter<?> typeAdapter) {"
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,931,oolean generated = gson.preconfiguredGeneratedTypeAdapters.contains(typeAdapter);
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,932,f (!generated) generated = getRuntimeGeneratedTypeAdapters(gson).contains(typeAdapter);
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,933,eturn generated;
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,935,rivate static Set<TypeAdapter<?>> getRuntimeGeneratedTypeAdapters(Gson gson) {
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,936,et<TypeAdapter<?>> adapters = gson.runtimeGeneratedTypeAdapters.get();
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,937,f (adapters == null) adapters = new HashSet<TypeAdapter<?>>();
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,938,son.runtimeGeneratedTypeAdapters.set(adapters);
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,939,eturn adapters;
False,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,27, An annotation that indicates the Gson {@link TypeAdapter} to use with a class or a field.
False,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,28, Any type adapters registered in {@link com.google.gson.GsonBuilder} supersede the adapter
False,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,29, specified in this annotation.
True,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,27,* An annotation that indicates the Gson {@link TypeAdapter} to use with a class
True,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,28,* or field.
False,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,64," If the UserJsonAdapter needs a constructor other than a no-args constructor, you must register"
False,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,65, an {@link com.google.gson.InstanceCreator} for it.
False,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,77, The above annotation will ensure UserJsonAdapter2 takes precedence over UserJsonAdapter
False,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,78, for the user field of the Gadget class.
True,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,74,"* It's possible to specify different type adapters on a field, that"
True,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,75,"* field's type, and in the {@link com.google.gson.GsonBuilder}. Field"
True,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,76,* annotations take precedence over {@code GsonBuilder}-registered type
True,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,gson/src/main/java/com/google/gson/annotations/JsonAdapter.java,77,"* adapters, which in turn take precedence over annotated types."
False,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,41,"SuppressWarnings({ ""rawtypes"", ""unchecked"" })"
True,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,41,"@SuppressWarnings({""rawtypes"", ""unchecked""})"
False,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,43,lass<? super T> clazz = targetType.getRawType();
False,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,44,sonAdapter annotation = clazz.getAnnotation(JsonAdapter.class);
False,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,45,f (annotation == null) return null;
False,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,46,"ypeAdapter adapter = getAnnotationTypeAdapter(gson, constructorConstructor, annotation);"
False,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,47,eturn adapter;
False,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,50,"tatic TypeAdapter<?> getAnnotationTypeAdapter(Gson gson,"
False,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,51,"onstructorConstructor constructorConstructor, JsonAdapter annotation) {"
False,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,52,lass<? extends TypeAdapter<?>> adapterClass = annotation.value();
False,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,53,bjectConstructor<? extends TypeAdapter<?>> constructor =
False,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,54,onstructorConstructor.get(TypeToken.get(adapterClass));
False,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,55,ypeAdapter<?> adapter = constructor.construct();
False,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,56,"son.$$Internal.addGeneratedTypeAdapter(gson, adapter);"
False,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,57,eturn adapter;
True,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,43,JsonAdapter annotation = targetType.getRawType().getAnnotation(JsonAdapter.class);
True,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,44,return annotation != null
True,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,45,? (TypeAdapter<T>) constructorConstructor.get(TypeToken.get(annotation.value())).construct()
True,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.java,46,: null;
False,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,19,mport java.io.IOException;
False,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,20,mport java.lang.reflect.Field;
False,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,21,mport java.lang.reflect.Type;
False,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,22,mport java.util.LinkedHashMap;
False,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,23,mport java.util.Map;
True,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,35,import java.io.IOException;
True,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,36,import java.lang.reflect.Field;
True,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,37,import java.lang.reflect.Type;
True,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,38,import java.util.LinkedHashMap;
True,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,39,import java.util.Map;
False,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,74,"dapter<T> adapter = new Adapter<T>(constructor, getBoundFields(gson, type, raw));"
False,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,75,"son.$$Internal.addGeneratedTypeAdapter(gson, adapter);"
False,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,76,eturn adapter;
True,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,73,"return new Adapter<T>(constructor, getBoundFields(gson, type, raw));"
False,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,105,ypeAdapter<?> adapter = gson.getAdapter(fieldType);
False,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,106,"oolean generatedAdapter = Gson.$$Internal.isGeneratedTypeAdapter(gson, adapter);"
False,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,107,f (generatedAdapter && field.isAnnotationPresent(JsonAdapter.class)) {
False,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,108,sonAdapter annotation = field.getAnnotation(JsonAdapter.class);
False,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,109,eturn JsonAdapterAnnotationTypeAdapterFactory.getAnnotationTypeAdapter(
False,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,110,"son, constructorConstructor, annotation);"
False,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,112,eturn adapter;
True,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,102,JsonAdapter annotation = field.getAnnotation(JsonAdapter.class);
True,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,103,return (annotation != null)
True,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,104,? constructorConstructor.get(TypeToken.get(annotation.value())).construct()
True,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java,105,: gson.getAdapter(fieldType);
False,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,19,mport java.io.IOException;
False,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,21,mport junit.framework.TestCase;
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,25,import java.io.IOException;
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,26,import junit.framework.TestCase;
False,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,35,ublic void testJsonAdapterInvoked() {
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,32,public void testClassAnnotationAdapterTakesPrecedenceOverDefault() {
False,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,38,"ssertEquals(""{\""user\"":{\""firstName\"":\""Inderjeet\"",\""lastName\"":\""Singh\""}}"", json);"
False,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,39,"omputer computer = gson.fromJson(""{'user':{'firstName':'Jesse','lastName':'Wilson'}}"", Computer.class);"
False,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,40,"ssertEquals(""Jesse Wilson"", computer.user.name);"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,35,"assertEquals(""{\""user\"":\""UserClassAnnotationAdapter\""}"", json);"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,36,"Computer computer = gson.fromJson(""{'user':'Inderjeet Singh'}"", Computer.class);"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,37,"assertEquals(""UserClassAnnotationAdapter"", computer.user.name);"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,40,public void testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter() {
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,41,Gson gson = new GsonBuilder()
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,42,".registerTypeAdapter(User.class, new RegisteredUserAdapter())"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,43,.create();
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,44,"String json = gson.toJson(new Computer(new User(""Inderjeet Singh"")));"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,45,"assertEquals(""{\""user\"":\""RegisteredUserAdapter\""}"", json);"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,46,"Computer computer = gson.fromJson(""{'user':'Inderjeet Singh'}"", Computer.class);"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,47,"assertEquals(""RegisteredUserAdapter"", computer.user.name);"
False,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,43,ublic void testRegisteredTypeAdapterOverridesFieldAnnotation() {
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,50,public void testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter() {
False,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,47,"ut.value(""registeredAdapter"");"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,54,throw new AssertionError();
False,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,50,eturn new Part(in.nextString());
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,58,throw new AssertionError();
False,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,54,"ssertEquals(""{\""part\"":\""registeredAdapter\""}"", json);"
False,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,55,"adget gadget = gson.fromJson(""{'part':'registeredAdapterValue'}"", Gadget.class);"
False,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,56,"ssertEquals(""registeredAdapterValue"", gadget.part.name);"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,62,"assertEquals(""{\""part\"":\""PartJsonFieldAnnotationAdapter\""}"", json);"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,63,"Gadget gadget = gson.fromJson(""{'part':'screen'}"", Gadget.class);"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,64,"assertEquals(""PartJsonFieldAnnotationAdapter"", gadget.part.name);"
False,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,59,ublic void testFieldAnnotationSupersedesClassAnnotation() {
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,67,public void testFieldAnnotationTakesPrecedenceOverClassAnnotation() {
False,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,62,"ssertEquals(""{\""user\"":\""userJsonAdapter2\""}"", json);"
False,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,63,"omputer2 target = gson.fromJson(""{'user':'userJsonAdapter2Value'}"", Computer2.class);"
False,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,64,"ssertEquals(""userJsonAdapter2Value"", target.user.name);"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,70,"assertEquals(""{\""user\"":\""UserFieldAnnotationAdapter\""}"", json);"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,71,"Computer2 target = gson.fromJson(""{'user':'Interjeet Singh'}"", Computer2.class);"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,72,"assertEquals(""UserFieldAnnotationAdapter"", target.user.name);"
False,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,68,JsonAdapter(PartJsonAdapter.class)
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,76,@JsonAdapter(PartJsonFieldAnnotationAdapter.class)
False,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,82,rivate static class PartJsonAdapter extends TypeAdapter<Part> {
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,90,private static class PartJsonFieldAnnotationAdapter extends TypeAdapter<Part> {
False,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,84,ut.value(part.name);
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,92,"out.value(""PartJsonFieldAnnotationAdapter"");"
False,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,88,"eturn new Part(""partJsonAdapter"");"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,96,"return new Part(""PartJsonFieldAnnotationAdapter"");"
False,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,99,JsonAdapter(UserJsonAdapter.class)
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,107,@JsonAdapter(UserClassAnnotationAdapter.class)
False,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,107,rivate static class UserJsonAdapter extends TypeAdapter<User> {
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,115,private static class UserClassAnnotationAdapter extends TypeAdapter<User> {
False,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,109,/ implement write: combine firstName and lastName into name
False,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,110,ut.beginObject();
False,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,111,"tring[] parts = user.name.split("" "");"
False,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,112,"ut.name(""firstName"");"
False,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,113,ut.value(parts[0]);
False,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,114,"ut.name(""lastName"");"
False,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,115,ut.value(parts[1]);
False,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,116,ut.endObject();
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,117,"out.value(""UserClassAnnotationAdapter"");"
False,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,119,/ implement read: split name into firstName and lastName
False,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,120,n.beginObject();
False,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,121,n.nextName();
False,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,122,tring firstName = in.nextString();
False,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,123,n.nextName();
False,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,124,tring lastName = in.nextString();
False,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,125,n.endObject();
False,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,126,"eturn new User(firstName + "" "" + lastName);"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,120,in.nextString();
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,121,"return new User(""UserClassAnnotationAdapter"");"
False,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,132,JsonAdapter(UserJsonAdapter2.class)
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,127,@JsonAdapter(UserFieldAnnotationAdapter.class)
False,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,138,rivate static final class UserJsonAdapter2 extends TypeAdapter<User> {
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,134,private static final class UserFieldAnnotationAdapter extends TypeAdapter<User> {
False,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,140,"ut.value(""userJsonAdapter2"");"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,136,"out.value(""UserFieldAnnotationAdapter"");"
False,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,143,eturn new User(in.nextString());
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,139,in.nextString();
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,140,"return new User(""UserFieldAnnotationAdapter"");"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,144,private static final class RegisteredUserAdapter extends TypeAdapter<User> {
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,145,"@Override public void write(JsonWriter out, User user) throws IOException {"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,146,"out.value(""RegisteredUserAdapter"");"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,148,@Override public User read(JsonReader in) throws IOException {
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,149,in.nextString();
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,150,"return new User(""RegisteredUserAdapter"");"
False,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,151,"ssertEquals(""partJsonAdapter"", gadget.part1.name);"
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,158,"assertEquals(""PartJsonFieldAnnotationAdapter"", gadget.part1.name);"
False,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,156,JsonAdapter(PartJsonAdapter.class) final Part part1;
True,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,gson/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnFieldsTest.java,163,@JsonAdapter(PartJsonFieldAnnotationAdapter.class) final Part part1;
