is_addition,old_file_path,new_file_path,line_num,content
False,gson/src/main/java/com/google/gson/JsonObject.java,gson/src/main/java/com/google/gson/JsonObject.java,20,mport java.util.LinkedHashMap;
True,gson/src/main/java/com/google/gson/JsonObject.java,gson/src/main/java/com/google/gson/JsonObject.java,20,import com.google.gson.internal.StringMap;
False,gson/src/main/java/com/google/gson/JsonObject.java,gson/src/main/java/com/google/gson/JsonObject.java,37,"rivate final Map<String, JsonElement> members = new LinkedHashMap<String, JsonElement>();"
True,gson/src/main/java/com/google/gson/JsonObject.java,gson/src/main/java/com/google/gson/JsonObject.java,37,"private final StringMap<String, JsonElement> members = new StringMap<String, JsonElement>();"
True,gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java,gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java,147,"// TODO: if the map's key type is a string, should this be StringMap?"
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,2,*  Licensed to the Apache Software Foundation (ASF) under one or more
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,3,*  contributor license agreements. See the NOTICE file distributed with
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,4,*  this work for additional information regarding copyright ownership.
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,5,"*  The ASF licenses this file to You under the Apache License, Version 2.0"
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,6,"*  (the ""License""); you may not use this file except in compliance with"
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,7,*  the License. You may obtain a copy of the License at
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,9,*     http://www.apache.org/licenses/LICENSE-2.0
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,11,"*  Unless required by applicable law or agreed to in writing, software"
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,12,"*  distributed under the License is distributed on an ""AS IS"" BASIS,"
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,13,"*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,14,*  See the License for the specific language governing permissions and
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,15,*  limitations under the License.
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,18,package com.google.gson.internal;
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,20,import java.util.AbstractCollection;
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,21,import java.util.AbstractMap;
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,22,import java.util.AbstractSet;
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,23,import java.util.Arrays;
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,24,import java.util.Collection;
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,25,import java.util.Iterator;
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,26,import java.util.Map;
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,27,import java.util.NoSuchElementException;
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,28,import java.util.Set;
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,31,"* A map of strings to values. Like LinkedHashMap, this map's iteration order is"
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,32,* well defined: it is the order that elements were inserted into the map.
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,34,* <p>This implementation was derived from Android 4.0's LinkedHashMap.
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,36,"public final class StringMap<K, V> extends AbstractMap<K, V> {"
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,37,// TODO: defend against predictable hash collisions
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,40,* Min capacity (other than zero) for a HashMap. Must be a power of two
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,41,* greater than 1 (and less than 1 << 30).
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,43,private static final int MINIMUM_CAPACITY = 4;
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,46,* Max capacity for a HashMap. Must be a power of two >= MINIMUM_CAPACITY.
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,48,private static final int MAXIMUM_CAPACITY = 1 << 30;
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,51,* A dummy entry in the circular linked list of entries in the map.
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,52,"* The first real entry is header.nxt, and the last is header.prv."
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,53,"* If the map is empty, header.nxt == header && header.prv == header."
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,55,"private LinkedEntry<K, V> header;"
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,58,* An empty table shared by all zero-capacity maps (typically from default
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,59,"* constructor). It is never written to, and replaced on first put. Its size"
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,60,"* is set to half the minimum, so that the first resize will create a"
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,61,* minimum-sized table.
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,63,private static final Entry[] EMPTY_TABLE = new LinkedEntry[MINIMUM_CAPACITY >>> 1];
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,66,"* The hash table. If this hash map contains a mapping for null, it is"
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,67,* not represented this hash table.
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,69,"private LinkedEntry<K, V>[] table;"
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,72,* The number of mappings in this hash map.
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,74,private int size;
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,77,* The table is rehashed when its size exceeds this threshold.
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,78,"* The value of this field is generally .75 * capacity, except when"
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,79,"* the capacity is zero, as described in the EMPTY_TABLE declaration"
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,80,* above.
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,82,private int threshold;
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,84,// Views - lazily initialized
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,85,private Set<K> keySet;
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,86,"private Set<Entry<K, V>> entrySet;"
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,87,private Collection<V> values;
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,89,"@SuppressWarnings(""unchecked"")"
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,90,public StringMap() {
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,91,"table = (LinkedEntry<K, V>[]) EMPTY_TABLE;"
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,92,threshold = -1; // Forces first put invocation to replace EMPTY_TABLE
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,93,"header = new LinkedEntry<K, V>();"
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,96,@Override public int size() {
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,97,return size;
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,100,@Override public boolean containsKey(Object key) {
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,101,return get(key) != null;
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,104,@Override public V get(Object key) {
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,105,if (key == null) {
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,106,return null;
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,109,// Doug Lea's supplemental secondaryHash function (inlined)
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,110,int hash = key.hashCode();
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,111,hash ^= (hash >>> 20) ^ (hash >>> 12);
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,112,hash ^= (hash >>> 7) ^ (hash >>> 4);
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,114,"LinkedEntry<K, V>[] tab = table;"
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,115,"for (LinkedEntry<K, V> e = tab[hash & (tab.length - 1)]; e != null; e = e.next) {"
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,116,K eKey = e.key;
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,117,if (eKey == key || (e.hash == hash && key.equals(eKey))) {
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,118,return e.value;
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,121,return null;
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,124,"@Override public V put(K key, V value) {"
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,125,if (key == null || value == null) {
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,126,throw new IllegalArgumentException();
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,129,int hash = secondaryHash(key.hashCode());
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,130,"LinkedEntry<K, V>[] tab = table;"
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,131,int index = hash & (tab.length - 1);
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,132,"for (LinkedEntry<K, V> e = tab[index]; e != null; e = e.next) {"
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,133,if (e.hash == hash && key.equals(e.key)) {
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,134,V oldValue = e.value;
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,135,e.value = value;
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,136,return oldValue;
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,140,// No entry for (non-null) key is present; create one
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,141,if (size++ > threshold) {
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,142,tab = doubleCapacity();
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,143,index = hash & (tab.length - 1);
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,145,"addNewEntry(key, value, hash, index);"
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,146,return null;
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,149,"private void addNewEntry(K key, V value, int hash, int index) {"
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,150,"LinkedEntry<K, V> header = this.header;"
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,152,"// Create new entry, link it on to list, and put it into table"
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,153,"LinkedEntry<K, V> oldTail = header.prv;"
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,154,"LinkedEntry<K, V> newTail = new LinkedEntry<K, V>("
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,155,"key, value, hash, table[index], header, oldTail);"
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,156,table[index] = oldTail.nxt = header.prv = newTail;
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,160,* Allocate a table of the given capacity and set the threshold accordingly.
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,161,* @param newCapacity must be a power of two
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,163,"private LinkedEntry<K, V>[] makeTable(int newCapacity) {"
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,164,"@SuppressWarnings(""unchecked"")"
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,165,"LinkedEntry<K, V>[] newTable = (LinkedEntry<K, V>[]) new LinkedEntry[newCapacity];"
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,166,table = newTable;
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,167,threshold = (newCapacity >> 1) + (newCapacity >> 2); // 3/4 capacity
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,168,return newTable;
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,172,* Doubles the capacity of the hash table. Existing entries are placed in
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,173,"* the correct bucket on the enlarged table. If the current capacity is,"
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,174,"* MAXIMUM_CAPACITY, this method is a no-op. Returns the table, which"
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,175,* will be new unless we were already at MAXIMUM_CAPACITY.
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,177,"private LinkedEntry<K, V>[] doubleCapacity() {"
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,178,"LinkedEntry<K, V>[] oldTable = table;"
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,179,int oldCapacity = oldTable.length;
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,180,if (oldCapacity == MAXIMUM_CAPACITY) {
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,181,return oldTable;
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,183,int newCapacity = oldCapacity * 2;
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,184,"LinkedEntry<K, V>[] newTable = makeTable(newCapacity);"
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,185,if (size == 0) {
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,186,return newTable;
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,189,for (int j = 0; j < oldCapacity; j++) {
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,191,* Rehash the bucket using the minimum number of field writes.
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,192,* This is the most subtle and delicate code in the class.
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,194,"LinkedEntry<K, V> e = oldTable[j];"
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,195,if (e == null) {
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,196,continue;
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,198,int highBit = e.hash & oldCapacity;
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,199,"LinkedEntry<K, V> broken = null;"
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,200,newTable[j | highBit] = e;
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,201,"for (LinkedEntry<K, V> n = e.next; n != null; e = n, n = n.next) {"
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,202,int nextHighBit = n.hash & oldCapacity;
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,203,if (nextHighBit != highBit) {
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,204,if (broken == null) {
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,205,newTable[j | nextHighBit] = n;
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,206,} else {
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,207,broken.next = n;
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,209,broken = e;
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,210,highBit = nextHighBit;
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,213,if (broken != null) {
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,214,broken.next = null;
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,217,return newTable;
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,220,@Override public V remove(Object key) {
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,221,if (key == null) {
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,222,return null;
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,224,int hash = secondaryHash(key.hashCode());
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,225,"LinkedEntry<K, V>[] tab = table;"
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,226,int index = hash & (tab.length - 1);
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,227,"for (LinkedEntry<K, V> e = tab[index], prev = null;"
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,228,"e != null; prev = e, e = e.next) {"
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,229,if (e.hash == hash && key.equals(e.key)) {
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,230,if (prev == null) {
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,231,tab[index] = e.next;
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,232,} else {
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,233,prev.next = e.next;
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,235,size--;
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,236,unlink(e);
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,237,return e.value;
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,240,return null;
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,243,"private void unlink(LinkedEntry<K, V> e) {"
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,244,e.prv.nxt = e.nxt;
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,245,e.nxt.prv = e.prv;
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,246,e.nxt = e.prv = null; // Help the GC (for performance)
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,249,@Override public void clear() {
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,250,if (size != 0) {
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,251,"Arrays.fill(table, null);"
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,252,size = 0;
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,255,// Clear all links to help GC
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,256,"LinkedEntry<K, V> header = this.header;"
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,257,"for (LinkedEntry<K, V> e = header.nxt; e != header; ) {"
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,258,"LinkedEntry<K, V> nxt = e.nxt;"
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,259,e.nxt = e.prv = null;
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,260,e = nxt;
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,263,header.nxt = header.prv = header;
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,266,@Override public Set<K> keySet() {
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,267,Set<K> ks = keySet;
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,268,return (ks != null) ? ks : (keySet = new KeySet());
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,271,@Override public Collection<V> values() {
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,272,Collection<V> vs = values;
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,273,return (vs != null) ? vs : (values = new Values());
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,276,"public Set<Entry<K, V>> entrySet() {"
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,277,"Set<Entry<K, V>> es = entrySet;"
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,278,return (es != null) ? es : (entrySet = new EntrySet());
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,281,"static class LinkedEntry<K, V> implements Entry<K, V> {"
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,282,final K key;
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,283,V value;
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,284,final int hash;
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,285,"LinkedEntry<K, V> next;"
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,286,"LinkedEntry<K, V> nxt;"
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,287,"LinkedEntry<K, V> prv;"
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,289,/** Create the header entry */
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,290,LinkedEntry() {
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,291,"this(null, null, 0, null, null, null);"
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,292,nxt = prv = this;
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,295,"LinkedEntry(K key, V value, int hash, LinkedEntry<K, V> next,"
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,296,"LinkedEntry<K, V> nxt, LinkedEntry<K, V> prv) {"
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,297,this.key = key;
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,298,this.value = value;
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,299,this.hash = hash;
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,300,this.next = next;
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,301,this.nxt = nxt;
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,302,this.prv = prv;
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,305,public final K getKey() {
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,306,return key;
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,309,public final V getValue() {
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,310,return value;
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,313,public final V setValue(V value) {
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,314,if (value == null) {
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,315,throw new IllegalArgumentException();
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,317,V oldValue = this.value;
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,318,this.value = value;
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,319,return oldValue;
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,322,@Override public final boolean equals(Object o) {
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,323,if (!(o instanceof Entry)) {
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,324,return false;
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,326,"Entry<?, ?> e = (Entry<?, ?>) o;"
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,327,return key.equals(e.getKey()) && value.equals(e.getValue());
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,330,@Override public final int hashCode() {
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,331,return (key == null ? 0 : key.hashCode()) ^ (value == null ? 0 : value.hashCode());
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,334,@Override public final String toString() {
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,335,"return key + ""="" + value;"
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,340,* Removes the mapping from key to value and returns true if this mapping
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,341,"* exists; otherwise, returns does nothing and returns false."
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,343,"private boolean removeMapping(Object key, Object value) {"
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,344,if (key == null || value == null) {
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,345,return false;
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,348,int hash = secondaryHash(key.hashCode());
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,349,"LinkedEntry<K, V>[] tab = table;"
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,350,int index = hash & (tab.length - 1);
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,351,"for (LinkedEntry<K, V> e = tab[index], prev = null; e != null; prev = e, e = e.next) {"
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,352,if (e.hash == hash && key.equals(e.key)) {
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,353,if (!value.equals(e.value)) {
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,354,return false;  // Map has wrong value for key
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,356,if (prev == null) {
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,357,tab[index] = e.next;
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,358,} else {
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,359,prev.next = e.next;
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,361,size--;
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,362,unlink(e);
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,363,return true;
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,366,return false; // No entry for key
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,369,private abstract class LinkedHashIterator<T> implements Iterator<T> {
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,370,"LinkedEntry<K, V> next = header.nxt;"
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,371,"LinkedEntry<K, V> lastReturned = null;"
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,373,public final boolean hasNext() {
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,374,return next != header;
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,377,"final LinkedEntry<K, V> nextEntry() {"
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,378,"LinkedEntry<K, V> e = next;"
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,379,if (e == header) {
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,380,throw new NoSuchElementException();
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,382,next = e.nxt;
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,383,return lastReturned = e;
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,386,public final void remove() {
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,387,if (lastReturned == null) {
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,388,throw new IllegalStateException();
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,390,StringMap.this.remove(lastReturned.key);
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,391,lastReturned = null;
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,395,private final class KeySet extends AbstractSet<K> {
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,396,public Iterator<K> iterator() {
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,397,return new LinkedHashIterator<K>() {
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,398,public final K next() {
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,399,return nextEntry().key;
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,404,public int size() {
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,405,return size;
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,408,public boolean contains(Object o) {
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,409,return containsKey(o);
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,412,public boolean remove(Object o) {
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,413,int oldSize = size;
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,414,StringMap.this.remove(o);
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,415,return size != oldSize;
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,418,public void clear() {
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,419,StringMap.this.clear();
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,423,private final class Values extends AbstractCollection<V> {
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,424,public Iterator<V> iterator() {
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,425,return new LinkedHashIterator<V>() {
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,426,public final V next() {
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,427,return nextEntry().value;
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,432,public int size() {
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,433,return size;
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,436,public boolean contains(Object o) {
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,437,return containsValue(o);
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,440,public void clear() {
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,441,StringMap.this.clear();
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,445,"private final class EntrySet extends AbstractSet<Entry<K, V>> {"
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,446,"public Iterator<Entry<K, V>> iterator() {"
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,447,"return new LinkedHashIterator<Map.Entry<K, V>>() {"
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,448,"public final Map.Entry<K, V> next() {"
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,449,return nextEntry();
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,454,public boolean contains(Object o) {
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,455,if (!(o instanceof Entry)) {
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,456,return false;
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,458,"Entry<?, ?> e = (Entry<?, ?>) o;"
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,459,V mappedValue = get(e.getKey());
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,460,return mappedValue != null && mappedValue.equals(e.getValue());
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,463,public boolean remove(Object o) {
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,464,if (!(o instanceof Entry)) {
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,465,return false;
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,467,"Entry<?, ?> e = (Entry<?, ?>) o;"
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,468,"return removeMapping(e.getKey(), e.getValue());"
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,471,public int size() {
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,472,return size;
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,475,public void clear() {
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,476,StringMap.this.clear();
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,481,"* Applies a supplemental hash function to a given hashCode, which defends"
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,482,* against poor quality hash functions. This is critical because HashMap
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,483,"* uses power-of-two length hash tables, that otherwise encounter collisions"
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,484,* for hashCodes that do not differ in lower or upper bits.
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,486,private static int secondaryHash(int h) {
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,487,// Doug Lea's supplemental hash function
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,488,h ^= (h >>> 20) ^ (h >>> 12);
True,gson/src/main/java/com/google/gson/internal/StringMap.java,gson/src/main/java/com/google/gson/internal/StringMap.java,489,return h ^ (h >>> 7) ^ (h >>> 4);
True,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,22,import com.google.gson.internal.StringMap;
False,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,28,mport java.util.LinkedHashMap;
False,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,66,"ap<String, Object> map = new LinkedHashMap<String, Object>();"
True,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java,66,"Map<String, Object> map = new StringMap<String, Object>();"
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,404,/ TODO: there's a bug here. We're going to call nextNonWhitespace and we have a character that
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,405,/       we can't necessarily push back (because pos could be 0)
