is_addition,old_file_path,new_file_path,line_num,content
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,20,mport com.google.gson.stream.JsonToken;
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,22,mport com.google.gson.stream.MalformedJsonException;
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,460,"ssertFullConsumption(object, jsonReader);"
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,485," object = this.<T>fromJson(jsonReader, typeOfT);"
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,486,"ssertFullConsumption(object, jsonReader);"
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,487,eturn object;
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,490,"rivate static void assertFullConsumption(Object obj, JsonReader reader) {"
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,491,ry {
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,492,f (obj != null && reader.peek() != JsonToken.END_DOCUMENT) {
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,493,"hrow new JsonIOException(""JSON document was not fully consumed."");"
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,495, catch (MalformedJsonException e) {
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,496,hrow new JsonSyntaxException(e);
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,497, catch (IOException e) {
False,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,498,hrow new JsonIOException(e);
True,gson/src/main/java/com/google/gson/Gson.java,gson/src/main/java/com/google/gson/Gson.java,482,"return this.<T>fromJson(jsonReader, typeOfT);"
False,gson/src/main/java/com/google/gson/JsonParser.java,gson/src/main/java/com/google/gson/JsonParser.java,19,mport com.google.gson.stream.JsonToken;
False,gson/src/main/java/com/google/gson/JsonParser.java,gson/src/main/java/com/google/gson/JsonParser.java,20,mport com.google.gson.stream.MalformedJsonException;
False,gson/src/main/java/com/google/gson/JsonParser.java,gson/src/main/java/com/google/gson/JsonParser.java,23,mport java.io.IOException;
False,gson/src/main/java/com/google/gson/JsonParser.java,gson/src/main/java/com/google/gson/JsonParser.java,57,ry {
False,gson/src/main/java/com/google/gson/JsonParser.java,gson/src/main/java/com/google/gson/JsonParser.java,58,sonReader jsonReader = new JsonReader(json);
False,gson/src/main/java/com/google/gson/JsonParser.java,gson/src/main/java/com/google/gson/JsonParser.java,59,sonElement element = parse(jsonReader);
False,gson/src/main/java/com/google/gson/JsonParser.java,gson/src/main/java/com/google/gson/JsonParser.java,60,f (!element.isJsonNull() && jsonReader.peek() != JsonToken.END_DOCUMENT) {
False,gson/src/main/java/com/google/gson/JsonParser.java,gson/src/main/java/com/google/gson/JsonParser.java,61,"hrow new JsonSyntaxException(""Did not consume the entire document."");"
False,gson/src/main/java/com/google/gson/JsonParser.java,gson/src/main/java/com/google/gson/JsonParser.java,63,eturn element;
False,gson/src/main/java/com/google/gson/JsonParser.java,gson/src/main/java/com/google/gson/JsonParser.java,64, catch (MalformedJsonException e) {
False,gson/src/main/java/com/google/gson/JsonParser.java,gson/src/main/java/com/google/gson/JsonParser.java,65,hrow new JsonSyntaxException(e);
False,gson/src/main/java/com/google/gson/JsonParser.java,gson/src/main/java/com/google/gson/JsonParser.java,66, catch (IOException e) {
False,gson/src/main/java/com/google/gson/JsonParser.java,gson/src/main/java/com/google/gson/JsonParser.java,67,hrow new JsonIOException(e);
False,gson/src/main/java/com/google/gson/JsonParser.java,gson/src/main/java/com/google/gson/JsonParser.java,68, catch (NumberFormatException e) {
False,gson/src/main/java/com/google/gson/JsonParser.java,gson/src/main/java/com/google/gson/JsonParser.java,69,hrow new JsonSyntaxException(e);
True,gson/src/main/java/com/google/gson/JsonParser.java,gson/src/main/java/com/google/gson/JsonParser.java,54,JsonReader jsonReader = new JsonReader(json);
True,gson/src/main/java/com/google/gson/JsonParser.java,gson/src/main/java/com/google/gson/JsonParser.java,55,return parse(jsonReader);
True,gson/src/main/java/com/google/gson/JsonParser.java,gson/src/main/java/com/google/gson/JsonParser.java,63,* @since 1.6
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1100,heckLenient();
False,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1101,oken = JsonToken.STRING;
True,gson/src/main/java/com/google/gson/stream/JsonReader.java,gson/src/main/java/com/google/gson/stream/JsonReader.java,1100,"throw syntaxError(""invalid number or unquoted string"");"
True,gson/src/test/java/com/google/gson/JsonParserTest.java,gson/src/test/java/com/google/gson/JsonParserTest.java,42,public void testParseSingleWordFails() {
True,gson/src/test/java/com/google/gson/JsonParserTest.java,gson/src/test/java/com/google/gson/JsonParserTest.java,43,try {
True,gson/src/test/java/com/google/gson/JsonParserTest.java,gson/src/test/java/com/google/gson/JsonParserTest.java,44,"parser.parse(""Word"");"
True,gson/src/test/java/com/google/gson/JsonParserTest.java,gson/src/test/java/com/google/gson/JsonParserTest.java,45,fail();
True,gson/src/test/java/com/google/gson/JsonParserTest.java,gson/src/test/java/com/google/gson/JsonParserTest.java,46,} catch (JsonSyntaxException expected) {}
True,gson/src/test/java/com/google/gson/JsonParserTest.java,gson/src/test/java/com/google/gson/JsonParserTest.java,49,public void testParseUnquotedStringArrayFails() {
True,gson/src/test/java/com/google/gson/JsonParserTest.java,gson/src/test/java/com/google/gson/JsonParserTest.java,50,try {
True,gson/src/test/java/com/google/gson/JsonParserTest.java,gson/src/test/java/com/google/gson/JsonParserTest.java,51,"parser.parse(""[a,b,c]"");"
True,gson/src/test/java/com/google/gson/JsonParserTest.java,gson/src/test/java/com/google/gson/JsonParserTest.java,52,fail();
True,gson/src/test/java/com/google/gson/JsonParserTest.java,gson/src/test/java/com/google/gson/JsonParserTest.java,53,} catch (JsonSyntaxException expected) {}
False,gson/src/test/java/com/google/gson/JsonParserTest.java,gson/src/test/java/com/google/gson/JsonParserTest.java,61,ublic void testParseUnquotedStringSentence() {
True,gson/src/test/java/com/google/gson/JsonParserTest.java,gson/src/test/java/com/google/gson/JsonParserTest.java,75,public void testParseUnquotedSingleWordStringFails() {
True,gson/src/test/java/com/google/gson/JsonParserTest.java,gson/src/test/java/com/google/gson/JsonParserTest.java,76,try {
True,gson/src/test/java/com/google/gson/JsonParserTest.java,gson/src/test/java/com/google/gson/JsonParserTest.java,77,"parser.parse(""Test"");"
True,gson/src/test/java/com/google/gson/JsonParserTest.java,gson/src/test/java/com/google/gson/JsonParserTest.java,78,fail();
True,gson/src/test/java/com/google/gson/JsonParserTest.java,gson/src/test/java/com/google/gson/JsonParserTest.java,79,} catch (JsonSyntaxException expected) { }
True,gson/src/test/java/com/google/gson/JsonParserTest.java,gson/src/test/java/com/google/gson/JsonParserTest.java,82,public void testParseUnquotedMultiWordStringFails() {
False,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,574,ublic void testUnquotedStringDeserialization() throws Exception {
True,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,574,public void testUnquotedStringDeserializationFails() throws Exception {
True,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,575,try {
True,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,576,"gson.fromJson(""UnquotedSingleWord"", String.class);"
True,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,577,fail();
True,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,gson/src/test/java/com/google/gson/functional/PrimitiveTest.java,578,} catch (JsonSyntaxException expected) { }
False,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,560, catch (IOException expected) {
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,560,} catch (MalformedJsonException expected) {
False,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,568,"ssertEquals(""a"", reader.nextString());"
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,568,try {
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,569,reader.nextString();
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,570,fail();
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,571,} catch (MalformedJsonException expected) { }
False,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,760,"ssertEquals("")"", reader.nextString()); // lenient is almost too lenient!"
False,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,762,eader.peek();
True,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,gson/src/test/java/com/google/gson/stream/JsonReaderTest.java,764,reader.beginArray();
